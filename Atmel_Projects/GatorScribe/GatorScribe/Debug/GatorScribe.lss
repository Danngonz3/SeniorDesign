
GatorScribe.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0002000c  00400000  00400000  00010000  2**10
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0042000c  0042000c  0003000c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000a30  20400000  00420014  00040000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          0001a88c  20401000  00421800  00041000  2**11
                  ALLOC
  4 .stack        00002004  2041b88c  0043c08c  00041000  2**0
                  ALLOC
  5 .heap         00000200  2041d890  0043e090  00041000  2**0
                  ALLOC
  6 .ARM.attributes 0000002c  00000000  00000000  00040a30  2**0
                  CONTENTS, READONLY
  7 .comment      000000b4  00000000  00000000  00040a5c  2**0
                  CONTENTS, READONLY
  8 .debug_info   000454e6  00000000  00000000  00040b10  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000095fd  00000000  00000000  00085ff6  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0001e8f7  00000000  00000000  0008f5f3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 000017a8  00000000  00000000  000adef0  2**3
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000052c8  00000000  00000000  000af698  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0002f4d1  00000000  00000000  000b4960  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   00029921  00000000  00000000  000e3e31  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    000a8021  00000000  00000000  0010d752  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00004f5c  00000000  00000000  001b5774  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	90 d8 41 20 05 30 40 00 fd 2f 40 00 01 30 40 00     ..A .0@../@..0@.
  400010:	fd 2f 40 00 fd 2f 40 00 fd 2f 40 00 00 00 00 00     ./@../@../@.....
	...
  40002c:	61 34 40 00 fd 2f 40 00 00 00 00 00 01 35 40 00     a4@../@......5@.
  40003c:	65 35 40 00 fd 2f 40 00 fd 2f 40 00 fd 2f 40 00     e5@../@../@../@.
  40004c:	fd 2f 40 00 fd 2f 40 00 fd 2f 40 00 fd 2f 40 00     ./@../@../@../@.
  40005c:	fd 2f 40 00 fd 2f 40 00 00 00 00 00 35 2a 40 00     ./@../@.....5*@.
  40006c:	01 2b 40 00 cd 2b 40 00 fd 2f 40 00 c1 4f 40 00     .+@..+@../@..O@.
  40007c:	fd 2f 40 00 99 2c 40 00 65 2d 40 00 fd 2f 40 00     ./@..,@.e-@../@.
  40008c:	fd 2f 40 00 fd 2f 40 00 fd 2f 40 00 fd 2f 40 00     ./@../@../@../@.
  40009c:	fd 2f 40 00 fd 2f 40 00 fd 2f 40 00 fd 2f 40 00     ./@../@../@../@.
  4000ac:	fd 2f 40 00 fd 2f 40 00 fd 2f 40 00 fd 2f 40 00     ./@../@../@../@.
  4000bc:	fd 2f 40 00 fd 2f 40 00 fd 2f 40 00 fd 2f 40 00     ./@../@../@../@.
  4000cc:	fd 2f 40 00 00 00 00 00 fd 2f 40 00 00 00 00 00     ./@....../@.....
  4000dc:	fd 2f 40 00 fd 2f 40 00 fd 2f 40 00 fd 2f 40 00     ./@../@../@../@.
  4000ec:	fd 2f 40 00 fd 2f 40 00 fd 2f 40 00 fd 2f 40 00     ./@../@../@../@.
  4000fc:	fd 2f 40 00 fd 2f 40 00 fd 2f 40 00 fd 2f 40 00     ./@../@../@../@.
  40010c:	fd 2f 40 00 fd 2f 40 00 fd 2f 40 00 00 00 00 00     ./@../@../@.....
  40011c:	00 00 00 00 fd 2f 40 00 fd 2f 40 00 ad 01 40 00     ...../@../@...@.
  40012c:	fd 2f 40 00 fd 2f 40 00 00 00 00 00 fd 2f 40 00     ./@../@....../@.
  40013c:	fd 2f 40 00                                         ./@.

00400140 <__do_global_dtors_aux>:
  400140:	b510      	push	{r4, lr}
  400142:	4c05      	ldr	r4, [pc, #20]	; (400158 <__do_global_dtors_aux+0x18>)
  400144:	7823      	ldrb	r3, [r4, #0]
  400146:	b933      	cbnz	r3, 400156 <__do_global_dtors_aux+0x16>
  400148:	4b04      	ldr	r3, [pc, #16]	; (40015c <__do_global_dtors_aux+0x1c>)
  40014a:	b113      	cbz	r3, 400152 <__do_global_dtors_aux+0x12>
  40014c:	4804      	ldr	r0, [pc, #16]	; (400160 <__do_global_dtors_aux+0x20>)
  40014e:	f3af 8000 	nop.w
  400152:	2301      	movs	r3, #1
  400154:	7023      	strb	r3, [r4, #0]
  400156:	bd10      	pop	{r4, pc}
  400158:	20401000 	.word	0x20401000
  40015c:	00000000 	.word	0x00000000
  400160:	00420014 	.word	0x00420014

00400164 <frame_dummy>:
  400164:	4b0c      	ldr	r3, [pc, #48]	; (400198 <frame_dummy+0x34>)
  400166:	b143      	cbz	r3, 40017a <frame_dummy+0x16>
  400168:	480c      	ldr	r0, [pc, #48]	; (40019c <frame_dummy+0x38>)
  40016a:	490d      	ldr	r1, [pc, #52]	; (4001a0 <frame_dummy+0x3c>)
  40016c:	b510      	push	{r4, lr}
  40016e:	f3af 8000 	nop.w
  400172:	480c      	ldr	r0, [pc, #48]	; (4001a4 <frame_dummy+0x40>)
  400174:	6803      	ldr	r3, [r0, #0]
  400176:	b923      	cbnz	r3, 400182 <frame_dummy+0x1e>
  400178:	bd10      	pop	{r4, pc}
  40017a:	480a      	ldr	r0, [pc, #40]	; (4001a4 <frame_dummy+0x40>)
  40017c:	6803      	ldr	r3, [r0, #0]
  40017e:	b933      	cbnz	r3, 40018e <frame_dummy+0x2a>
  400180:	4770      	bx	lr
  400182:	4b09      	ldr	r3, [pc, #36]	; (4001a8 <frame_dummy+0x44>)
  400184:	2b00      	cmp	r3, #0
  400186:	d0f7      	beq.n	400178 <frame_dummy+0x14>
  400188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40018c:	4718      	bx	r3
  40018e:	4b06      	ldr	r3, [pc, #24]	; (4001a8 <frame_dummy+0x44>)
  400190:	2b00      	cmp	r3, #0
  400192:	d0f5      	beq.n	400180 <frame_dummy+0x1c>
  400194:	4718      	bx	r3
  400196:	bf00      	nop
  400198:	00000000 	.word	0x00000000
  40019c:	00420014 	.word	0x00420014
  4001a0:	20401004 	.word	0x20401004
  4001a4:	00420014 	.word	0x00420014
  4001a8:	00000000 	.word	0x00000000

004001ac <XDMAC_Handler>:
 */
static inline uint32_t xdmac_channel_get_interrupt_status(Xdmac *xdmac, uint32_t channel_num)
{
	Assert(xdmac);
	Assert(channel_num < XDMACCHID_NUMBER);
	return xdmac->XDMAC_CHID[channel_num].XDMAC_CIS;
  4001ac:	4b21      	ldr	r3, [pc, #132]	; (400234 <XDMAC_Handler+0x88>)

static const float One_over_max_int16 = 1.0f / (float)INT16_MAX; 

/******************************* XDMAC Interrupt Handler Start *******************************/ 
void XDMAC_Handler(void)
{
  4001ae:	b470      	push	{r4, r5, r6}
  4001b0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
    uint32_t dma_status;
    
    dma_status = xdmac_channel_get_interrupt_status(XDMAC, XDMA_CH_SSC_RX);
    if (dma_status & XDMAC_CIS_BIS)
  4001b2:	07da      	lsls	r2, r3, #31
  4001b4:	d52a      	bpl.n	40020c <XDMAC_Handler+0x60>
    {
		// Update input and process buffers to be used 
		if(inPingMode)
  4001b6:	4d20      	ldr	r5, [pc, #128]	; (400238 <XDMAC_Handler+0x8c>)
		}
		inPingMode = !inPingMode; 
		
		int processIdx = 0;
		// Fill process buffer - only left channel decimated by 1
		for(int i = 0; i < IO_BUF_SIZE; i+=4)
  4001b8:	2200      	movs	r2, #0
			processBuffer = processPingBuffer; 
  4001ba:	4c20      	ldr	r4, [pc, #128]	; (40023c <XDMAC_Handler+0x90>)
		if(inPingMode)
  4001bc:	782b      	ldrb	r3, [r5, #0]
			processBuffer = processPingBuffer; 
  4001be:	4820      	ldr	r0, [pc, #128]	; (400240 <XDMAC_Handler+0x94>)
  4001c0:	4293      	cmp	r3, r2
		inPingMode = !inPingMode; 
  4001c2:	782e      	ldrb	r6, [r5, #0]
			processBuffer = processPingBuffer; 
  4001c4:	491f      	ldr	r1, [pc, #124]	; (400244 <XDMAC_Handler+0x98>)
  4001c6:	4b20      	ldr	r3, [pc, #128]	; (400248 <XDMAC_Handler+0x9c>)
  4001c8:	bf1c      	itt	ne
  4001ca:	4621      	movne	r1, r4
  4001cc:	4603      	movne	r3, r0
		inPingMode = !inPingMode; 
  4001ce:	f086 0601 	eor.w	r6, r6, #1
  4001d2:	4c1e      	ldr	r4, [pc, #120]	; (40024c <XDMAC_Handler+0xa0>)
  4001d4:	481e      	ldr	r0, [pc, #120]	; (400250 <XDMAC_Handler+0xa4>)
		{
			processBuffer[processIdx++] = ((float )(int16_t)inBuffer[i]) * One_over_max_int16; 
  4001d6:	ed9f 7a1f 	vldr	s14, [pc, #124]	; 400254 <XDMAC_Handler+0xa8>
		inPingMode = !inPingMode; 
  4001da:	702e      	strb	r6, [r5, #0]
  4001dc:	6021      	str	r1, [r4, #0]
  4001de:	6003      	str	r3, [r0, #0]
  4001e0:	e001      	b.n	4001e6 <XDMAC_Handler+0x3a>
  4001e2:	6821      	ldr	r1, [r4, #0]
  4001e4:	6803      	ldr	r3, [r0, #0]
			processBuffer[processIdx++] = ((float )(int16_t)inBuffer[i]) * One_over_max_int16; 
  4001e6:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
  4001ea:	4411      	add	r1, r2
		for(int i = 0; i < IO_BUF_SIZE; i+=4)
  4001ec:	3204      	adds	r2, #4
			processBuffer[processIdx++] = ((float )(int16_t)inBuffer[i]) * One_over_max_int16; 
  4001ee:	b21b      	sxth	r3, r3
		for(int i = 0; i < IO_BUF_SIZE; i+=4)
  4001f0:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
			processBuffer[processIdx++] = ((float )(int16_t)inBuffer[i]) * One_over_max_int16; 
  4001f4:	ee07 3a90 	vmov	s15, r3
  4001f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
  4001fc:	ee67 7a87 	vmul.f32	s15, s15, s14
  400200:	edc1 7a00 	vstr	s15, [r1]
		for(int i = 0; i < IO_BUF_SIZE; i+=4)
  400204:	d1ed      	bne.n	4001e2 <XDMAC_Handler+0x36>
		}
		dataReceived = true; // can check for out of time here 
  400206:	4b14      	ldr	r3, [pc, #80]	; (400258 <XDMAC_Handler+0xac>)
  400208:	2201      	movs	r2, #1
  40020a:	701a      	strb	r2, [r3, #0]
  40020c:	4b09      	ldr	r3, [pc, #36]	; (400234 <XDMAC_Handler+0x88>)
  40020e:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
    }
	
	dma_status = xdmac_channel_get_interrupt_status(XDMAC, XDMA_CH_SSC_TX);
	if (dma_status & XDMAC_CIS_BIS)
  400212:	07db      	lsls	r3, r3, #31
  400214:	d50c      	bpl.n	400230 <XDMAC_Handler+0x84>
	{
		// update output buffer to be used 
		if(outPingMode)
  400216:	4b11      	ldr	r3, [pc, #68]	; (40025c <XDMAC_Handler+0xb0>)
		{
			outBuffer = outPingBuffer; 
  400218:	4811      	ldr	r0, [pc, #68]	; (400260 <XDMAC_Handler+0xb4>)
		if(outPingMode)
  40021a:	781c      	ldrb	r4, [r3, #0]
			outBuffer = outPingBuffer; 
  40021c:	4911      	ldr	r1, [pc, #68]	; (400264 <XDMAC_Handler+0xb8>)
		}
		else
		{
			outBuffer = outPongBuffer; 
		}
		outPingMode = !outPingMode; 
  40021e:	781a      	ldrb	r2, [r3, #0]
			outBuffer = outPingBuffer; 
  400220:	2c00      	cmp	r4, #0
  400222:	bf18      	it	ne
  400224:	4601      	movne	r1, r0
  400226:	4810      	ldr	r0, [pc, #64]	; (400268 <XDMAC_Handler+0xbc>)
		outPingMode = !outPingMode; 
  400228:	f082 0201 	eor.w	r2, r2, #1
  40022c:	6001      	str	r1, [r0, #0]
  40022e:	701a      	strb	r2, [r3, #0]
	}
}
  400230:	bc70      	pop	{r4, r5, r6}
  400232:	4770      	bx	lr
  400234:	40078000 	.word	0x40078000
  400238:	20400010 	.word	0x20400010
  40023c:	20416c00 	.word	0x20416c00
  400240:	20418c00 	.word	0x20418c00
  400244:	20418800 	.word	0x20418800
  400248:	20417000 	.word	0x20417000
  40024c:	2040001c 	.word	0x2040001c
  400250:	2040000c 	.word	0x2040000c
  400254:	38000100 	.word	0x38000100
  400258:	2040101c 	.word	0x2040101c
  40025c:	20400018 	.word	0x20400018
  400260:	20417800 	.word	0x20417800
  400264:	20418000 	.word	0x20418000
  400268:	20400014 	.word	0x20400014

0040026c <configure_xdma>:
/******************************* XDMAC Interrupt Handler End *******************************/

/********************************** Public Functions Start **********************************/
void configure_xdma(void)
{
  40026c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t *src;
    
    xdmac_channel_config_t xdmac_channel_cfg = {0};
  400270:	2620      	movs	r6, #32
{
  400272:	b088      	sub	sp, #32
    xdmac_channel_config_t xdmac_channel_cfg = {0};
  400274:	2100      	movs	r1, #0
  400276:	4b30      	ldr	r3, [pc, #192]	; (400338 <configure_xdma+0xcc>)
  400278:	4632      	mov	r2, r6
  40027a:	4668      	mov	r0, sp
  40027c:	4798      	blx	r3
    
    /* Initialize and enable DMA controller */
    pmc_enable_periph_clk(ID_XDMAC);
  40027e:	4b2f      	ldr	r3, [pc, #188]	; (40033c <configure_xdma+0xd0>)
  400280:	203a      	movs	r0, #58	; 0x3a
    | XDMAC_CC_DIF_AHB_IF0
    | XDMAC_CC_SAM_FIXED_AM
    | XDMAC_CC_DAM_INCREMENTED_AM
    | XDMAC_CC_PERID(33);
	
    xdmac_configure_transfer(XDMAC, XDMA_CH_SSC_RX, &xdmac_channel_cfg);
  400282:	4c2f      	ldr	r4, [pc, #188]	; (400340 <configure_xdma+0xd4>)
    pmc_enable_periph_clk(ID_XDMAC);
  400284:	4798      	blx	r3

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  400286:	f04f 6580 	mov.w	r5, #67108864	; 0x4000000
  40028a:	4b2e      	ldr	r3, [pc, #184]	; (400344 <configure_xdma+0xd8>)
    xdmac_configure_transfer(XDMAC, XDMA_CH_SSC_RX, &xdmac_channel_cfg);
  40028c:	466a      	mov	r2, sp
    xdmac_channel_cfg.mbr_cfg = XDMAC_CC_TYPE_PER_TRAN
  40028e:	f8df e0c8 	ldr.w	lr, [pc, #200]	; 400358 <configure_xdma+0xec>
    xdmac_configure_transfer(XDMAC, XDMA_CH_SSC_RX, &xdmac_channel_cfg);
  400292:	4620      	mov	r0, r4
  400294:	f8c3 5184 	str.w	r5, [r3, #388]	; 0x184
  400298:	2100      	movs	r1, #0
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHPR[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  40029a:	f883 633a 	strb.w	r6, [r3, #826]	; 0x33a
 */
static inline void xdmac_channel_set_descriptor_control(Xdmac *xdmac, uint32_t channel_num, uint32_t config)
{
	Assert(xdmac);
	Assert(channel_num < XDMACCHID_NUMBER);
	xdmac->XDMAC_CHID[channel_num].XDMAC_CNDC = config;
  40029e:	270f      	movs	r7, #15
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  4002a0:	605d      	str	r5, [r3, #4]
	xdmac->XDMAC_GIE = ( XDMAC_GIE_IE0 << channel_num) ;
  4002a2:	2501      	movs	r5, #1
  4002a4:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 40035c <configure_xdma+0xf0>
    xdmac_channel_cfg.mbr_cfg = XDMAC_CC_TYPE_PER_TRAN
  4002a8:	f8cd e00c 	str.w	lr, [sp, #12]
    xdmac_configure_transfer(XDMAC, XDMA_CH_SSC_RX, &xdmac_channel_cfg);
  4002ac:	47c0      	blx	r8
    
    /* Initialize linked list descriptor */
    src = (uint16_t *)&inPingBuffer[0];
    linklist_read[0].mbr_ubc = XDMAC_UBC_NVIEW_NDV1
  4002ae:	4b26      	ldr	r3, [pc, #152]	; (400348 <configure_xdma+0xdc>)
    | XDMAC_CC_DIF_AHB_IF1
    | XDMAC_CC_SAM_INCREMENTED_AM
    | XDMAC_CC_DAM_FIXED_AM
    | XDMAC_CC_PERID(32);
	
    xdmac_configure_transfer(XDMAC, XDMA_CH_SSC_TX, &xdmac_channel_cfg);
  4002b0:	466a      	mov	r2, sp
    linklist_read[0].mbr_da = (uint32_t)(src);
  4002b2:	f8df e0ac 	ldr.w	lr, [pc, #172]	; 400360 <configure_xdma+0xf4>
    xdmac_configure_transfer(XDMAC, XDMA_CH_SSC_TX, &xdmac_channel_cfg);
  4002b6:	4629      	mov	r1, r5
    linklist_read[0].mbr_nda = (uint32_t)&linklist_read[1];
  4002b8:	f103 0010 	add.w	r0, r3, #16
	xdmac->XDMAC_CHID[channel_num].XDMAC_CNDA = (desc_addr & 0xFFFFFFFC) | ndaif;
  4002bc:	f023 0603 	bic.w	r6, r3, #3
	linklist_read[1].mbr_da = (uint32_t)(src);
  4002c0:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 400364 <configure_xdma+0xf8>
    linklist_read[0].mbr_nda = (uint32_t)&linklist_read[1];
  4002c4:	6018      	str	r0, [r3, #0]
    xdmac_configure_transfer(XDMAC, XDMA_CH_SSC_TX, &xdmac_channel_cfg);
  4002c6:	4620      	mov	r0, r4
	xdmac->XDMAC_CHID[channel_num].XDMAC_CNDC = config;
  4002c8:	66e7      	str	r7, [r4, #108]	; 0x6c
	xdmac->XDMAC_CHID[channel_num].XDMAC_CNDA = (desc_addr & 0xFFFFFFFC) | ndaif;
  4002ca:	66a6      	str	r6, [r4, #104]	; 0x68
	xdmac->XDMAC_GIE = ( XDMAC_GIE_IE0 << channel_num) ;
  4002cc:	60e5      	str	r5, [r4, #12]
    linklist_read[0].mbr_ubc = XDMAC_UBC_NVIEW_NDV1
  4002ce:	4e1f      	ldr	r6, [pc, #124]	; (40034c <configure_xdma+0xe0>)
	xdmac->XDMAC_CHID[channel_num].XDMAC_CIE = mask;
  4002d0:	6525      	str	r5, [r4, #80]	; 0x50
    linklist_read[0].mbr_da = (uint32_t)(src);
  4002d2:	f8c3 e00c 	str.w	lr, [r3, #12]
    linklist_read[0].mbr_sa  = (uint32_t)&(SSC->SSC_RHR);
  4002d6:	f8df e090 	ldr.w	lr, [pc, #144]	; 400368 <configure_xdma+0xfc>
	linklist_read[1].mbr_da = (uint32_t)(src);
  4002da:	f8c3 c01c 	str.w	ip, [r3, #28]
    xdmac_channel_cfg.mbr_cfg = XDMAC_CC_TYPE_PER_TRAN
  4002de:	f8df c08c 	ldr.w	ip, [pc, #140]	; 40036c <configure_xdma+0x100>
    linklist_read[0].mbr_ubc = XDMAC_UBC_NVIEW_NDV1
  4002e2:	605e      	str	r6, [r3, #4]
	linklist_read[1].mbr_ubc = XDMAC_UBC_NVIEW_NDV1
  4002e4:	615e      	str	r6, [r3, #20]
    linklist_read[0].mbr_sa  = (uint32_t)&(SSC->SSC_RHR);
  4002e6:	f8c3 e008 	str.w	lr, [r3, #8]
	linklist_read[1].mbr_sa  = (uint32_t)&(SSC->SSC_RHR);
  4002ea:	f8c3 e018 	str.w	lr, [r3, #24]
	linklist_read[1].mbr_nda = (uint32_t)&linklist_read[0];
  4002ee:	611b      	str	r3, [r3, #16]
    xdmac_channel_cfg.mbr_cfg = XDMAC_CC_TYPE_PER_TRAN
  4002f0:	f8cd c00c 	str.w	ip, [sp, #12]
    xdmac_configure_transfer(XDMAC, XDMA_CH_SSC_TX, &xdmac_channel_cfg);
  4002f4:	47c0      	blx	r8
    
    src = (uint16_t *)&outPingBuffer[0];
    linklist_write[0].mbr_ubc = XDMAC_UBC_NVIEW_NDV1
  4002f6:	4b16      	ldr	r3, [pc, #88]	; (400350 <configure_xdma+0xe4>)
	xdmac->XDMAC_GIE = ( XDMAC_GIE_IE0 << channel_num) ;
  4002f8:	2102      	movs	r1, #2
		 | XDMAC_UBC_NDE_FETCH_EN
		 | XDMAC_UBC_NSEN_UPDATED
			| XDMAC_CUBC_UBLEN(IO_BUF_SIZE);
    linklist_write[0].mbr_sa = (uint32_t)(src);
    linklist_write[0].mbr_da = (uint32_t)&(SSC->SSC_THR);
  4002fa:	4a16      	ldr	r2, [pc, #88]	; (400354 <configure_xdma+0xe8>)
    linklist_write[0].mbr_sa = (uint32_t)(src);
  4002fc:	f8df c070 	ldr.w	ip, [pc, #112]	; 400370 <configure_xdma+0x104>
    linklist_write[0].mbr_nda = (uint32_t)&linklist_write[1];
  400300:	f103 0810 	add.w	r8, r3, #16
	xdmac->XDMAC_CHID[channel_num].XDMAC_CNDA = (desc_addr & 0xFFFFFFFC) | ndaif;
  400304:	f023 0003 	bic.w	r0, r3, #3
	src = (uint16_t *)&outPongBuffer[0];
	linklist_write[1].mbr_ubc = XDMAC_UBC_NVIEW_NDV1
	    | XDMAC_UBC_NDE_FETCH_EN
	    | XDMAC_UBC_NSEN_UPDATED
	    | XDMAC_CUBC_UBLEN(IO_BUF_SIZE);
	linklist_write[1].mbr_sa = (uint32_t)(src);
  400308:	f8df e068 	ldr.w	lr, [pc, #104]	; 400374 <configure_xdma+0x108>
    linklist_write[0].mbr_ubc = XDMAC_UBC_NVIEW_NDV1
  40030c:	605e      	str	r6, [r3, #4]
	linklist_write[1].mbr_ubc = XDMAC_UBC_NVIEW_NDV1
  40030e:	615e      	str	r6, [r3, #20]
	linklist_write[1].mbr_da = (uint32_t)&(SSC->SSC_THR);
	linklist_write[1].mbr_nda = (uint32_t)&linklist_write[0];
  400310:	611b      	str	r3, [r3, #16]
    linklist_write[0].mbr_nda = (uint32_t)&linklist_write[1];
  400312:	f8c3 8000 	str.w	r8, [r3]
    linklist_write[0].mbr_sa = (uint32_t)(src);
  400316:	f8c3 c008 	str.w	ip, [r3, #8]
	xdmac->XDMAC_CHID[channel_num].XDMAC_CNDC = config;
  40031a:	f8c4 70ac 	str.w	r7, [r4, #172]	; 0xac
	linklist_write[1].mbr_sa = (uint32_t)(src);
  40031e:	f8c3 e018 	str.w	lr, [r3, #24]
	xdmac->XDMAC_CHID[channel_num].XDMAC_CNDA = (desc_addr & 0xFFFFFFFC) | ndaif;
  400322:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
    linklist_write[0].mbr_da = (uint32_t)&(SSC->SSC_THR);
  400326:	60da      	str	r2, [r3, #12]
	xdmac->XDMAC_GIE = ( XDMAC_GIE_IE0 << channel_num) ;
  400328:	60e1      	str	r1, [r4, #12]
	linklist_write[1].mbr_da = (uint32_t)&(SSC->SSC_THR);
  40032a:	61da      	str	r2, [r3, #28]
	xdmac->XDMAC_CHID[channel_num].XDMAC_CIE = mask;
  40032c:	f8c4 5090 	str.w	r5, [r4, #144]	; 0x90
    xdmac_channel_set_descriptor_addr(XDMAC, XDMA_CH_SSC_TX, (uint32_t)(&linklist_write[0]), 0);
    
    xdmac_enable_interrupt(XDMAC, XDMA_CH_SSC_TX);
    xdmac_channel_enable_interrupt(XDMAC, XDMA_CH_SSC_TX, XDMAC_CIE_BIE);
    
}
  400330:	b008      	add	sp, #32
  400332:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400336:	bf00      	nop
  400338:	00408555 	.word	0x00408555
  40033c:	00402f39 	.word	0x00402f39
  400340:	40078000 	.word	0x40078000
  400344:	e000e100 	.word	0xe000e100
  400348:	20401020 	.word	0x20401020
  40034c:	0b000400 	.word	0x0b000400
  400350:	20401040 	.word	0x20401040
  400354:	40004024 	.word	0x40004024
  400358:	21042801 	.word	0x21042801
  40035c:	004023a9 	.word	0x004023a9
  400360:	20418c00 	.word	0x20418c00
  400364:	20417000 	.word	0x20417000
  400368:	40004020 	.word	0x40004020
  40036c:	20014811 	.word	0x20014811
  400370:	20417800 	.word	0x20417800
  400374:	20418000 	.word	0x20418000

00400378 <audio_init>:

#include "DMA_Audio.h"
#include "WM8904_Driver.h"

void audio_init(void)
{
  400378:	b510      	push	{r4, lr}
	/* Initialize WM8904 TWI interface*/
	if (wm8904_twi_init() != TWIHS_SUCCESS) {
  40037a:	4b13      	ldr	r3, [pc, #76]	; (4003c8 <audio_init+0x50>)
  40037c:	4798      	blx	r3
  40037e:	b118      	cbz	r0, 400388 <audio_init+0x10>
		printf("-E-\tWM8904 initialization failed.\r");
  400380:	4812      	ldr	r0, [pc, #72]	; (4003cc <audio_init+0x54>)
  400382:	4b13      	ldr	r3, [pc, #76]	; (4003d0 <audio_init+0x58>)
  400384:	4798      	blx	r3
  400386:	e7fe      	b.n	400386 <audio_init+0xe>
			/* Capture error */
		}
	}
		
	/* Configure CODEC */
	configure_codec();
  400388:	4b12      	ldr	r3, [pc, #72]	; (4003d4 <audio_init+0x5c>)
  40038a:	4604      	mov	r4, r0
  40038c:	4798      	blx	r3
		
	/* Configure SSC */
	configure_ssc();
  40038e:	4b12      	ldr	r3, [pc, #72]	; (4003d8 <audio_init+0x60>)
  400390:	4798      	blx	r3
		
	/* Configure XDMA */
	configure_xdma();
  400392:	4b12      	ldr	r3, [pc, #72]	; (4003dc <audio_init+0x64>)
  400394:	4798      	blx	r3
		
	/* Enable the DAC master clock */
	pmc_pck_set_prescaler(PMC_PCK_2, PMC_MCKR_PRES_CLK_1);
  400396:	4621      	mov	r1, r4
  400398:	2002      	movs	r0, #2
  40039a:	4b11      	ldr	r3, [pc, #68]	; (4003e0 <audio_init+0x68>)
  40039c:	4798      	blx	r3
	pmc_pck_set_source(PMC_PCK_2, PMC_MCKR_CSS_SLOW_CLK);
  40039e:	4621      	mov	r1, r4
  4003a0:	2002      	movs	r0, #2
  4003a2:	4b10      	ldr	r3, [pc, #64]	; (4003e4 <audio_init+0x6c>)
  4003a4:	4798      	blx	r3
	pmc_enable_pck(PMC_PCK_2);
  4003a6:	2002      	movs	r0, #2
  4003a8:	4b0f      	ldr	r3, [pc, #60]	; (4003e8 <audio_init+0x70>)
  4003aa:	4798      	blx	r3
		
	/* Start playing */
	ssc_enable_rx(SSC);
  4003ac:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
  4003b0:	4b0e      	ldr	r3, [pc, #56]	; (4003ec <audio_init+0x74>)
  4003b2:	4798      	blx	r3
	xdmac->XDMAC_GE = (XDMAC_GE_EN0 << channel_num);
  4003b4:	4c0e      	ldr	r4, [pc, #56]	; (4003f0 <audio_init+0x78>)
  4003b6:	2201      	movs	r2, #1
	xdmac_channel_enable(XDMAC, XDMA_CH_SSC_RX);
	// might want to enable in the first xdma interrupt (if you care)
	ssc_enable_tx(SSC);
  4003b8:	4b0e      	ldr	r3, [pc, #56]	; (4003f4 <audio_init+0x7c>)
  4003ba:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
  4003be:	61e2      	str	r2, [r4, #28]
  4003c0:	4798      	blx	r3
  4003c2:	2302      	movs	r3, #2
  4003c4:	61e3      	str	r3, [r4, #28]
  4003c6:	bd10      	pop	{r4, pc}
  4003c8:	00401b25 	.word	0x00401b25
  4003cc:	0040ac18 	.word	0x0040ac18
  4003d0:	00407e89 	.word	0x00407e89
  4003d4:	004004bd 	.word	0x004004bd
  4003d8:	004003f9 	.word	0x004003f9
  4003dc:	0040026d 	.word	0x0040026d
  4003e0:	00402f81 	.word	0x00402f81
  4003e4:	00402fb5 	.word	0x00402fb5
  4003e8:	00402fe9 	.word	0x00402fe9
  4003ec:	00401fb5 	.word	0x00401fb5
  4003f0:	40078000 	.word	0x40078000
  4003f4:	00401fc5 	.word	0x00401fc5

004003f8 <configure_ssc>:
#include "WM8904_Driver.h"


/********************************** Public Functions Start **********************************/
void configure_ssc(void)
{
  4003f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	clock_opt_t tx_clk_option, rx_clk_option;
	data_frame_opt_t tx_data_frame_option, rx_data_frame_option;

	/* Initialize clock */
	pmc_enable_periph_clk(ID_SSC);
  4003fc:	4b28      	ldr	r3, [pc, #160]	; (4004a0 <configure_ssc+0xa8>)
{
  4003fe:	b09c      	sub	sp, #112	; 0x70
	pmc_enable_periph_clk(ID_SSC);
  400400:	2016      	movs	r0, #22
	/* Reset SSC */
	ssc_reset(SSC);

	/* Transmitter clock mode configuration. */
	tx_clk_option.ul_cks = SSC_TCMR_CKS_TK;
	tx_clk_option.ul_cko = SSC_TCMR_CKO_NONE;
  400402:	2400      	movs	r4, #0
	pmc_enable_periph_clk(ID_SSC);
  400404:	4798      	blx	r3
	ssc_reset(SSC);
  400406:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
  40040a:	4b26      	ldr	r3, [pc, #152]	; (4004a4 <configure_ssc+0xac>)
	tx_clk_option.ul_cki = 0;
	tx_clk_option.ul_ckg = SSC_TCMR_CKG_CONTINUOUS;
	tx_clk_option.ul_start_sel = SSC_TCMR_START_TF_EDGE;
	tx_clk_option.ul_sttdly = 1;
	tx_clk_option.ul_period = BITS_BY_SLOT - 1;
  40040c:	250f      	movs	r5, #15
	ssc_reset(SSC);
  40040e:	4798      	blx	r3
	tx_clk_option.ul_sttdly = 1;
  400410:	2601      	movs	r6, #1
	tx_clk_option.ul_start_sel = SSC_TCMR_START_TF_EDGE;
  400412:	f44f 68e0 	mov.w	r8, #1792	; 0x700
	tx_clk_option.ul_cks = SSC_TCMR_CKS_TK;
  400416:	f04f 0e02 	mov.w	lr, #2
	/* Transmitter frame mode configuration. */
	tx_data_frame_option.ul_datlen = BITS_BY_SLOT - 1;
	tx_data_frame_option.ul_msbf = SSC_TFMR_MSBF;
  40041a:	2780      	movs	r7, #128	; 0x80
	tx_data_frame_option.ul_fslen = BITS_BY_SLOT - 1;
	tx_data_frame_option.ul_fslen_ext = 0;
	tx_data_frame_option.ul_fsos = SSC_TFMR_FSOS_NONE;
	tx_data_frame_option.ul_fsedge = SSC_TFMR_FSEDGE_POSITIVE;
	/* Configure the SSC transmitter to I2S mode. */
	ssc_set_transmitter(SSC, &tx_clk_option, &tx_data_frame_option);
  40041c:	aa0e      	add	r2, sp, #56	; 0x38
  40041e:	4669      	mov	r1, sp
  400420:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
  400424:	4b20      	ldr	r3, [pc, #128]	; (4004a8 <configure_ssc+0xb0>)
	tx_clk_option.ul_cks = SSC_TCMR_CKS_TK;
  400426:	f8cd e000 	str.w	lr, [sp]
	tx_clk_option.ul_cko = SSC_TCMR_CKO_NONE;
  40042a:	9401      	str	r4, [sp, #4]
	tx_clk_option.ul_cki = 0;
  40042c:	9402      	str	r4, [sp, #8]
	tx_clk_option.ul_ckg = SSC_TCMR_CKG_CONTINUOUS;
  40042e:	9403      	str	r4, [sp, #12]
	tx_data_frame_option.ul_datnb = 0;
  400430:	9410      	str	r4, [sp, #64]	; 0x40
	tx_data_frame_option.ul_fslen_ext = 0;
  400432:	9412      	str	r4, [sp, #72]	; 0x48
	tx_data_frame_option.ul_fsos = SSC_TFMR_FSOS_NONE;
  400434:	9413      	str	r4, [sp, #76]	; 0x4c
	tx_data_frame_option.ul_fsedge = SSC_TFMR_FSEDGE_POSITIVE;
  400436:	9414      	str	r4, [sp, #80]	; 0x50
	tx_clk_option.ul_start_sel = SSC_TCMR_START_TF_EDGE;
  400438:	f8cd 8018 	str.w	r8, [sp, #24]
	tx_clk_option.ul_sttdly = 1;
  40043c:	9605      	str	r6, [sp, #20]
	tx_clk_option.ul_period = BITS_BY_SLOT - 1;
  40043e:	9504      	str	r5, [sp, #16]
	tx_data_frame_option.ul_datlen = BITS_BY_SLOT - 1;
  400440:	950e      	str	r5, [sp, #56]	; 0x38
	tx_data_frame_option.ul_fslen = BITS_BY_SLOT - 1;
  400442:	9511      	str	r5, [sp, #68]	; 0x44
	tx_data_frame_option.ul_msbf = SSC_TFMR_MSBF;
  400444:	970f      	str	r7, [sp, #60]	; 0x3c
	ssc_set_transmitter(SSC, &tx_clk_option, &tx_data_frame_option);
  400446:	4798      	blx	r3

	/* Receiver clock mode configuration. */
	rx_clk_option.ul_cks = SSC_RCMR_CKS_TK;
	rx_clk_option.ul_cko = SSC_RCMR_CKO_NONE;
	rx_clk_option.ul_cki = SSC_RCMR_CKI;
  400448:	f04f 0c20 	mov.w	ip, #32
	rx_clk_option.ul_ckg = SSC_RCMR_CKG_CONTINUOUS;
	rx_clk_option.ul_start_sel = SSC_RCMR_START_RF_EDGE;
	rx_clk_option.ul_sttdly = 1;	
	rx_clk_option.ul_period = BITS_BY_SLOT;	
  40044c:	f04f 0e10 	mov.w	lr, #16
	rx_data_frame_option.ul_fslen = BITS_BY_SLOT - 1;	
	rx_data_frame_option.ul_fslen_ext = 0;
	rx_data_frame_option.ul_fsos = SSC_TFMR_FSOS_NONE;
	rx_data_frame_option.ul_fsedge = SSC_TFMR_FSEDGE_POSITIVE;
	/* Configure the SSC transmitter to I2S mode. */
	ssc_set_receiver(SSC, &rx_clk_option, &rx_data_frame_option);
  400450:	aa15      	add	r2, sp, #84	; 0x54
  400452:	a907      	add	r1, sp, #28
  400454:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
  400458:	4b14      	ldr	r3, [pc, #80]	; (4004ac <configure_ssc+0xb4>)
	rx_clk_option.ul_cki = SSC_RCMR_CKI;
  40045a:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
	rx_clk_option.ul_period = BITS_BY_SLOT;	
  40045e:	f8cd e02c 	str.w	lr, [sp, #44]	; 0x2c
	rx_clk_option.ul_start_sel = SSC_RCMR_START_RF_EDGE;
  400462:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
	rx_clk_option.ul_cks = SSC_RCMR_CKS_TK;
  400466:	9607      	str	r6, [sp, #28]
	rx_clk_option.ul_cko = SSC_RCMR_CKO_NONE;
  400468:	9408      	str	r4, [sp, #32]
	rx_clk_option.ul_ckg = SSC_RCMR_CKG_CONTINUOUS;
  40046a:	940a      	str	r4, [sp, #40]	; 0x28
	rx_clk_option.ul_sttdly = 1;	
  40046c:	960c      	str	r6, [sp, #48]	; 0x30
	rx_data_frame_option.ul_datlen = BITS_BY_SLOT - 1;
  40046e:	9515      	str	r5, [sp, #84]	; 0x54
	rx_data_frame_option.ul_msbf = SSC_RFMR_MSBF;
  400470:	9716      	str	r7, [sp, #88]	; 0x58
	rx_data_frame_option.ul_datnb = 0;
  400472:	9417      	str	r4, [sp, #92]	; 0x5c
	rx_data_frame_option.ul_fslen = BITS_BY_SLOT - 1;	
  400474:	9518      	str	r5, [sp, #96]	; 0x60
	rx_data_frame_option.ul_fslen_ext = 0;
  400476:	9419      	str	r4, [sp, #100]	; 0x64
	rx_data_frame_option.ul_fsos = SSC_TFMR_FSOS_NONE;
  400478:	941a      	str	r4, [sp, #104]	; 0x68
	rx_data_frame_option.ul_fsedge = SSC_TFMR_FSEDGE_POSITIVE;
  40047a:	941b      	str	r4, [sp, #108]	; 0x6c
	ssc_set_receiver(SSC, &rx_clk_option, &rx_data_frame_option);
  40047c:	4798      	blx	r3

	/* Disable transmitter first */
	ssc_disable_tx(SSC);
  40047e:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
  400482:	4b0b      	ldr	r3, [pc, #44]	; (4004b0 <configure_ssc+0xb8>)
  400484:	4798      	blx	r3
	ssc_disable_rx(SSC);
  400486:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
  40048a:	4b0a      	ldr	r3, [pc, #40]	; (4004b4 <configure_ssc+0xbc>)
  40048c:	4798      	blx	r3

	/* Disable All Interrupt */
	ssc_disable_interrupt(SSC, 0xFFFFFFFF);
  40048e:	f04f 31ff 	mov.w	r1, #4294967295
  400492:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
  400496:	4b08      	ldr	r3, [pc, #32]	; (4004b8 <configure_ssc+0xc0>)
  400498:	4798      	blx	r3
}
  40049a:	b01c      	add	sp, #112	; 0x70
  40049c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4004a0:	00402f39 	.word	0x00402f39
  4004a4:	00401fa1 	.word	0x00401fa1
  4004a8:	00402049 	.word	0x00402049
  4004ac:	00401fd5 	.word	0x00401fd5
  4004b0:	00401fcd 	.word	0x00401fcd
  4004b4:	00401fbd 	.word	0x00401fbd
  4004b8:	004020bd 	.word	0x004020bd

004004bc <configure_codec>:


void configure_codec(void)
{
  4004bc:	b570      	push	{r4, r5, r6, lr}
	uint16_t data = 0;
	/* check that WM8904 is present */
	wm8904_write_register(WM8904_SW_RESET_AND_ID, 0xFFFF);
  4004be:	f64f 71ff 	movw	r1, #65535	; 0xffff
  4004c2:	2000      	movs	r0, #0
  4004c4:	4c40      	ldr	r4, [pc, #256]	; (4005c8 <configure_codec+0x10c>)
  4004c6:	47a0      	blx	r4
	data = wm8904_read_register(WM8904_SW_RESET_AND_ID);
  4004c8:	4b40      	ldr	r3, [pc, #256]	; (4005cc <configure_codec+0x110>)
  4004ca:	2000      	movs	r0, #0
  4004cc:	4798      	blx	r3
	if(data != 0x8904) {
  4004ce:	f648 1304 	movw	r3, #35076	; 0x8904
  4004d2:	4298      	cmp	r0, r3
  4004d4:	d003      	beq.n	4004de <configure_codec+0x22>
		printf("WM8904 not found!\n\r");
  4004d6:	483e      	ldr	r0, [pc, #248]	; (4005d0 <configure_codec+0x114>)
  4004d8:	4b3e      	ldr	r3, [pc, #248]	; (4005d4 <configure_codec+0x118>)
  4004da:	4798      	blx	r3
  4004dc:	e7fe      	b.n	4004dc <configure_codec+0x20>
		while(1);
	}

	wm8904_write_register(WM8904_BIAS_CONTROL_0, WM8904_ISEL_HP_BIAS);	
  4004de:	2108      	movs	r1, #8
  4004e0:	2004      	movs	r0, #4
  4004e2:	47a0      	blx	r4
	wm8904_write_register(WM8904_VMID_CONTROL_0, WM8904_VMID_BUF_ENA |	
  4004e4:	2147      	movs	r1, #71	; 0x47
  4004e6:	2005      	movs	r0, #5
	WM8904_VMID_RES_FAST | WM8904_VMID_ENA);
	delay_ms(5);
  4004e8:	4d3b      	ldr	r5, [pc, #236]	; (4005d8 <configure_codec+0x11c>)
	wm8904_write_register(WM8904_VMID_CONTROL_0, WM8904_VMID_BUF_ENA |	
  4004ea:	47a0      	blx	r4
	delay_ms(5);
  4004ec:	483b      	ldr	r0, [pc, #236]	; (4005dc <configure_codec+0x120>)
  4004ee:	47a8      	blx	r5
	wm8904_write_register(WM8904_VMID_CONTROL_0, WM8904_VMID_BUF_ENA |
  4004f0:	2143      	movs	r1, #67	; 0x43
  4004f2:	2005      	movs	r0, #5
  4004f4:	47a0      	blx	r4
	WM8904_VMID_RES_NORMAL | WM8904_VMID_ENA);
	wm8904_write_register(WM8904_BIAS_CONTROL_0, WM8904_ISEL_HP_BIAS | WM8904_BIAS_ENA);
  4004f6:	2109      	movs	r1, #9
  4004f8:	2004      	movs	r0, #4
  4004fa:	47a0      	blx	r4
	wm8904_write_register(WM8904_POWER_MANAGEMENT_0, WM8904_INL_ENA | WM8904_INR_ENA);
  4004fc:	2103      	movs	r1, #3
  4004fe:	200c      	movs	r0, #12
  400500:	47a0      	blx	r4
	wm8904_write_register(WM8904_POWER_MANAGEMENT_2, WM8904_HPL_PGA_ENA | WM8904_HPR_PGA_ENA);
  400502:	2103      	movs	r1, #3
  400504:	200e      	movs	r0, #14
  400506:	47a0      	blx	r4
	wm8904_write_register(WM8904_DAC_DIGITAL_1, WM8904_DEEMPH(0));
  400508:	2100      	movs	r1, #0
  40050a:	2021      	movs	r0, #33	; 0x21
  40050c:	47a0      	blx	r4
	wm8904_write_register(WM8904_ANALOGUE_OUT12_ZC, 0x0000);
  40050e:	2100      	movs	r1, #0
  400510:	203d      	movs	r0, #61	; 0x3d
  400512:	47a0      	blx	r4
	wm8904_write_register(WM8904_CHARGE_PUMP_0, WM8904_CP_ENA);
  400514:	2101      	movs	r1, #1
  400516:	2062      	movs	r0, #98	; 0x62
  400518:	47a0      	blx	r4
	wm8904_write_register(WM8904_CLASS_W_0, WM8904_CP_DYN_PWR);
  40051a:	2101      	movs	r1, #1
  40051c:	2068      	movs	r0, #104	; 0x68
  40051e:	47a0      	blx	r4
	wm8904_write_register(WM8904_FLL_CONTROL_1, 0x0000);
  400520:	2100      	movs	r1, #0
  400522:	2074      	movs	r0, #116	; 0x74
  400524:	47a0      	blx	r4
	wm8904_write_register(WM8904_FLL_CONTROL_2, WM8904_FLL_OUTDIV(7)| WM8904_FLL_FRATIO(4));
  400526:	f240 7104 	movw	r1, #1796	; 0x704
  40052a:	2075      	movs	r0, #117	; 0x75
  40052c:	47a0      	blx	r4
	wm8904_write_register(WM8904_FLL_CONTROL_3, WM8904_FLL_K(0x8000));
  40052e:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  400532:	2076      	movs	r0, #118	; 0x76
  400534:	47a0      	blx	r4
	wm8904_write_register(WM8904_FLL_CONTROL_4, WM8904_FLL_N(0xBB));
  400536:	f44f 51bb 	mov.w	r1, #5984	; 0x1760
  40053a:	2077      	movs	r0, #119	; 0x77
  40053c:	47a0      	blx	r4
	wm8904_write_register(WM8904_FLL_CONTROL_1, WM8904_FLL_FRACN_ENA | WM8904_FLL_ENA);
  40053e:	2105      	movs	r1, #5
  400540:	2074      	movs	r0, #116	; 0x74
  400542:	47a0      	blx	r4
	delay_ms(5);
  400544:	4825      	ldr	r0, [pc, #148]	; (4005dc <configure_codec+0x120>)
  400546:	47a8      	blx	r5
	wm8904_write_register(WM8904_CLOCK_RATES_1, WM8904_CLK_SYS_RATE(3) | WM8904_SAMPLE_RATE(SAMPLE_RATE));
  400548:	f640 4105 	movw	r1, #3077	; 0xc05
  40054c:	2015      	movs	r0, #21
  40054e:	47a0      	blx	r4
	wm8904_write_register(WM8904_CLOCK_RATES_0, 0x0000);
  400550:	2100      	movs	r1, #0
  400552:	2014      	movs	r0, #20
  400554:	47a0      	blx	r4
	wm8904_write_register(WM8904_CLOCK_RATES_2,
  400556:	f244 0106 	movw	r1, #16390	; 0x4006
  40055a:	2016      	movs	r0, #22
  40055c:	47a0      	blx	r4
	WM8904_SYSCLK_SRC | WM8904_CLK_SYS_ENA | WM8904_CLK_DSP_ENA);
	wm8904_write_register(WM8904_AUDIO_INTERFACE_1, WM8904_BCLK_DIR | WM8904_AIF_FMT_I2S); 
  40055e:	2142      	movs	r1, #66	; 0x42
  400560:	2019      	movs	r0, #25
  400562:	47a0      	blx	r4
	wm8904_write_register(WM8904_AUDIO_INTERFACE_2, WM8904_BCLK_DIV(8));
  400564:	2108      	movs	r1, #8
  400566:	201a      	movs	r0, #26
  400568:	47a0      	blx	r4
	wm8904_write_register(WM8904_AUDIO_INTERFACE_3, WM8904_LRCLK_DIR | WM8904_LRCLK_RATE(0x20));
  40056a:	f44f 6102 	mov.w	r1, #2080	; 0x820
  40056e:	201b      	movs	r0, #27
  400570:	47a0      	blx	r4
	wm8904_write_register(WM8904_POWER_MANAGEMENT_6,
  400572:	210f      	movs	r1, #15
  400574:	2012      	movs	r0, #18
  400576:	47a0      	blx	r4
	WM8904_DACL_ENA | WM8904_DACR_ENA |
	WM8904_ADCL_ENA | WM8904_ADCR_ENA);
	delay_ms(5);
  400578:	4818      	ldr	r0, [pc, #96]	; (4005dc <configure_codec+0x120>)
  40057a:	47a8      	blx	r5
	wm8904_write_register(WM8904_ANALOGUE_LEFT_INPUT_0, WM8904_LIN_VOL(0x10));
  40057c:	2110      	movs	r1, #16
  40057e:	202c      	movs	r0, #44	; 0x2c
  400580:	47a0      	blx	r4
	wm8904_write_register(WM8904_ANALOGUE_RIGHT_INPUT_0, WM8904_RIN_VOL(0x10));
  400582:	2110      	movs	r1, #16
  400584:	202d      	movs	r0, #45	; 0x2d
  400586:	47a0      	blx	r4
	wm8904_write_register(WM8904_ANALOGUE_HP_0,
  400588:	2111      	movs	r1, #17
  40058a:	205a      	movs	r0, #90	; 0x5a
  40058c:	47a0      	blx	r4
	WM8904_HPL_ENA | WM8904_HPR_ENA);
	wm8904_write_register(WM8904_ANALOGUE_HP_0,
  40058e:	2133      	movs	r1, #51	; 0x33
  400590:	205a      	movs	r0, #90	; 0x5a
  400592:	47a0      	blx	r4
	WM8904_HPL_ENA_DLY | WM8904_HPL_ENA |
	WM8904_HPR_ENA_DLY | WM8904_HPR_ENA);
	wm8904_write_register(WM8904_DC_SERVO_0,
  400594:	210f      	movs	r1, #15
  400596:	2043      	movs	r0, #67	; 0x43
  400598:	47a0      	blx	r4
	WM8904_DCS_ENA_CHAN_3 | WM8904_DCS_ENA_CHAN_2 |
	WM8904_DCS_ENA_CHAN_1 | WM8904_DCS_ENA_CHAN_0);
	wm8904_write_register(WM8904_DC_SERVO_1,
  40059a:	21f0      	movs	r1, #240	; 0xf0
  40059c:	2044      	movs	r0, #68	; 0x44
  40059e:	47a0      	blx	r4
	WM8904_DCS_TRIG_STARTUP_3 | WM8904_DCS_TRIG_STARTUP_2 |
	WM8904_DCS_TRIG_STARTUP_1 | WM8904_DCS_TRIG_STARTUP_0);
	delay_ms(100);
  4005a0:	480f      	ldr	r0, [pc, #60]	; (4005e0 <configure_codec+0x124>)
  4005a2:	47a8      	blx	r5
	wm8904_write_register(WM8904_ANALOGUE_HP_0,
  4005a4:	2177      	movs	r1, #119	; 0x77
  4005a6:	205a      	movs	r0, #90	; 0x5a
  4005a8:	47a0      	blx	r4
	WM8904_HPL_ENA_OUTP | WM8904_HPL_ENA_DLY | WM8904_HPL_ENA |
	WM8904_HPR_ENA_OUTP | WM8904_HPR_ENA_DLY | WM8904_HPR_ENA);
	wm8904_write_register(WM8904_ANALOGUE_HP_0,
  4005aa:	21ff      	movs	r1, #255	; 0xff
  4005ac:	205a      	movs	r0, #90	; 0x5a
  4005ae:	47a0      	blx	r4
	WM8904_HPL_RMV_SHORT | WM8904_HPL_ENA_OUTP | WM8904_HPL_ENA_DLY | WM8904_HPL_ENA |
	WM8904_HPR_RMV_SHORT | WM8904_HPR_ENA_OUTP | WM8904_HPR_ENA_DLY | WM8904_HPR_ENA);
	wm8904_write_register(WM8904_ANALOGUE_OUT1_LEFT, WM8904_HPOUT_VU | WM8904_HPOUTL_VOL(0x39));
  4005b0:	21b9      	movs	r1, #185	; 0xb9
  4005b2:	2039      	movs	r0, #57	; 0x39
  4005b4:	47a0      	blx	r4
	wm8904_write_register(WM8904_ANALOGUE_OUT1_RIGHT, WM8904_HPOUT_VU | WM8904_HPOUTR_VOL(0x39));
  4005b6:	203a      	movs	r0, #58	; 0x3a
  4005b8:	21b9      	movs	r1, #185	; 0xb9
  4005ba:	47a0      	blx	r4
	delay_ms(100);
  4005bc:	462b      	mov	r3, r5
  4005be:	4808      	ldr	r0, [pc, #32]	; (4005e0 <configure_codec+0x124>)
}
  4005c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	delay_ms(100);
  4005c4:	4718      	bx	r3
  4005c6:	bf00      	nop
  4005c8:	00401aad 	.word	0x00401aad
  4005cc:	00401ae9 	.word	0x00401ae9
  4005d0:	0040ac3c 	.word	0x0040ac3c
  4005d4:	00407e89 	.word	0x00407e89
  4005d8:	20400001 	.word	0x20400001
  4005dc:	0003dbc2 	.word	0x0003dbc2
  4005e0:	004d2b25 	.word	0x004d2b25

004005e4 <computeWaveletPitch>:
	float si, si1;
	float power; 
	//arm_power_f32(samples, WIN_SIZE>>2, &power); 
	//if (power < POWER_THRESHOLD) return pitchF; 
	
	arm_copy_f32(samples, sam, WIN_SIZE); 
  4005e4:	f44f 6280 	mov.w	r2, #1024	; 0x400
  4005e8:	4996      	ldr	r1, [pc, #600]	; (400844 <computeWaveletPitch+0x260>)
  4005ea:	4b97      	ldr	r3, [pc, #604]	; (400848 <computeWaveletPitch+0x264>)
	
	return pitchF;
}

float computeWaveletPitch(float * samples)
{
  4005ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	int32_t curSamNb = WIN_SIZE;
  4005f0:	4692      	mov	sl, r2
	int32_t curLevel = 0;
  4005f2:	2400      	movs	r4, #0
		memset(distances, 0, WIN_SIZE*sizeof(int32_t));
  4005f4:	f8df b26c 	ldr.w	fp, [pc, #620]	; 400864 <computeWaveletPitch+0x280>
{
  4005f8:	ed2d 8b04 	vpush	{d8-d9}
  4005fc:	b087      	sub	sp, #28
	float curModeDistance = -1.0f;
  4005fe:	eeff 9a00 	vmov.f32	s19, #240	; 0xbf800000 -1.0
	arm_copy_f32(samples, sam, WIN_SIZE); 
  400602:	4798      	blx	r3
		arm_max_f32(sam, WIN_SIZE, &maxValue, &temp_idx); 
  400604:	4651      	mov	r1, sl
  400606:	ab03      	add	r3, sp, #12
  400608:	aa04      	add	r2, sp, #16
  40060a:	488e      	ldr	r0, [pc, #568]	; (400844 <computeWaveletPitch+0x260>)
	int32_t curLevel = 0;
  40060c:	9400      	str	r4, [sp, #0]
		arm_max_f32(sam, WIN_SIZE, &maxValue, &temp_idx); 
  40060e:	4c8f      	ldr	r4, [pc, #572]	; (40084c <computeWaveletPitch+0x268>)
  400610:	47a0      	blx	r4
		arm_min_f32(sam, WIN_SIZE, &minValue, &temp_idx); 
  400612:	ab03      	add	r3, sp, #12
  400614:	aa05      	add	r2, sp, #20
  400616:	4651      	mov	r1, sl
  400618:	488a      	ldr	r0, [pc, #552]	; (400844 <computeWaveletPitch+0x260>)
  40061a:	4c8d      	ldr	r4, [pc, #564]	; (400850 <computeWaveletPitch+0x26c>)
  40061c:	47a0      	blx	r4
		float amplitudeMax = (maxValue > -minValue ? maxValue : -minValue);
  40061e:	ed9d 9a05 	vldr	s18, [sp, #20]
		ampltitudeThreshold = amplitudeMax*maximaThresholdRatio;		
  400622:	eef6 7a08 	vmov.f32	s15, #104	; 0x3f400000  0.750
		float amplitudeMax = (maxValue > -minValue ? maxValue : -minValue);
  400626:	ed9d 7a04 	vldr	s14, [sp, #16]
  40062a:	eeb1 9a49 	vneg.f32	s18, s18
	int32_t res = 1, j;
  40062e:	2301      	movs	r3, #1
		if (curSamNb < 2) return pitchF;
  400630:	ed9f 8a88 	vldr	s16, [pc, #544]	; 400854 <computeWaveletPitch+0x270>
		for (j = -delta ; j <= delta ; j++) 
  400634:	eddf 8a88 	vldr	s17, [pc, #544]	; 400858 <computeWaveletPitch+0x274>
		float amplitudeMax = (maxValue > -minValue ? maxValue : -minValue);
  400638:	fe89 9a07 	vmaxnm.f32	s18, s18, s14
		ampltitudeThreshold = amplitudeMax*maximaThresholdRatio;		
  40063c:	ee29 9a27 	vmul.f32	s18, s18, s15
		delta = DYW_SAMPLING_RATE/(_2power(curLevel)*maxF);
  400640:	ee07 3a90 	vmov	s15, r3
  400644:	eef1 6a0f 	vmov.f32	s13, #31	; 0x40f80000  7.750
		if (curSamNb < 2) return pitchF;
  400648:	f1ba 0f01 	cmp.w	sl, #1
		delta = DYW_SAMPLING_RATE/(_2power(curLevel)*maxF);
  40064c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
  400650:	ee86 7aa7 	vdiv.f32	s14, s13, s15
  400654:	eefd 7ac7 	vcvt.s32.f32	s15, s14
  400658:	ee17 4a90 	vmov	r4, s15
		if (curSamNb < 2) return pitchF;
  40065c:	f340 8284 	ble.w	400b68 <computeWaveletPitch+0x584>
  400660:	f1ba 0f03 	cmp.w	sl, #3
  400664:	f340 826b 	ble.w	400b3e <computeWaveletPitch+0x55a>
  400668:	f1aa 0e04 	sub.w	lr, sl, #4
  40066c:	4b75      	ldr	r3, [pc, #468]	; (400844 <computeWaveletPitch+0x260>)
  40066e:	2000      	movs	r0, #0
  400670:	f8df 81f4 	ldr.w	r8, [pc, #500]	; 400868 <computeWaveletPitch+0x284>
  400674:	f02e 0e01 	bic.w	lr, lr, #1
  400678:	4619      	mov	r1, r3
  40067a:	9301      	str	r3, [sp, #4]
  40067c:	4602      	mov	r2, r0
  40067e:	edd3 7a00 	vldr	s15, [r3]
  400682:	f10e 0e03 	add.w	lr, lr, #3
  400686:	4606      	mov	r6, r0
  400688:	4605      	mov	r5, r0
  40068a:	46c4      	mov	ip, r8
  40068c:	eeb0 7a48 	vmov.f32	s14, s16
  400690:	2301      	movs	r3, #1
  400692:	e050      	b.n	400736 <computeWaveletPitch+0x152>
						if (i -1 > lastmaxIndex + delta) 
  400694:	2201      	movs	r2, #1
			si = sam[i]; // - theDC;
  400696:	edd1 7a02 	vldr	s15, [r1, #8]
			if (si1 <= 0 && si > 0) {findMax = 1; findMin = 0; }
  40069a:	eef5 7a40 	vcmp.f32	s15, #0.0
  40069e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4006a2:	dd06      	ble.n	4006b2 <computeWaveletPitch+0xce>
  4006a4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
  4006a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4006ac:	d801      	bhi.n	4006b2 <computeWaveletPitch+0xce>
  4006ae:	2000      	movs	r0, #0
  4006b0:	2201      	movs	r2, #1
			if (si1 >= 0 && si < 0) {findMin = 1; findMax = 0; }
  4006b2:	eef5 7a40 	vcmp.f32	s15, #0.0
  4006b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4006ba:	d506      	bpl.n	4006ca <computeWaveletPitch+0xe6>
  4006bc:	eef5 6ac0 	vcmpe.f32	s13, #0.0
  4006c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4006c4:	db01      	blt.n	4006ca <computeWaveletPitch+0xe6>
  4006c6:	2001      	movs	r0, #1
  4006c8:	2200      	movs	r2, #0
			if (previousDV > -1000.0f) 
  4006ca:	eeb4 6ac8 	vcmpe.f32	s12, s16
			dv = si - si1;
  4006ce:	ee37 7ae6 	vsub.f32	s14, s15, s13
			if (previousDV > -1000.0f) 
  4006d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4006d6:	dd2a      	ble.n	40072e <computeWaveletPitch+0x14a>
				if (findMin && previousDV < 0.0f && dv >= 0.0f) 
  4006d8:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
  4006dc:	f000 0701 	and.w	r7, r0, #1
  4006e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4006e4:	bf58      	it	pl
  4006e6:	2700      	movpl	r7, #0
  4006e8:	b1af      	cbz	r7, 400716 <computeWaveletPitch+0x132>
  4006ea:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
  4006ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4006f2:	db10      	blt.n	400716 <computeWaveletPitch+0x132>
					if (Abs(si1) >= ampltitudeThreshold) 
  4006f4:	eef0 5ae6 	vabs.f32	s11, s13
  4006f8:	eeb4 9ae5 	vcmpe.f32	s18, s11
  4006fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400700:	d809      	bhi.n	400716 <computeWaveletPitch+0x132>
						if (i - 1 > lastMinIndex + delta)
  400702:	eb04 070c 	add.w	r7, r4, ip
  400706:	429f      	cmp	r7, r3
  400708:	da05      	bge.n	400716 <computeWaveletPitch+0x132>
							mins[nbMins++] = i - 1;
  40070a:	4854      	ldr	r0, [pc, #336]	; (40085c <computeWaveletPitch+0x278>)
  40070c:	469c      	mov	ip, r3
  40070e:	f840 3025 	str.w	r3, [r0, r5, lsl #2]
  400712:	3501      	adds	r5, #1
							findMin = 0;
  400714:	2000      	movs	r0, #0
				if (findMax && previousDV > 0.0f && dv <= 0.0f) 
  400716:	eeb5 6a40 	vcmp.f32	s12, #0.0
  40071a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  40071e:	dd06      	ble.n	40072e <computeWaveletPitch+0x14a>
  400720:	b12a      	cbz	r2, 40072e <computeWaveletPitch+0x14a>
  400722:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
  400726:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  40072a:	d96b      	bls.n	400804 <computeWaveletPitch+0x220>
						if (i -1 > lastmaxIndex + delta) 
  40072c:	2201      	movs	r2, #1
  40072e:	3302      	adds	r3, #2
  400730:	3108      	adds	r1, #8
  400732:	4573      	cmp	r3, lr
  400734:	d07b      	beq.n	40082e <computeWaveletPitch+0x24a>
			if (si1 <= 0 && si > 0) {findMax = 1; findMin = 0; }
  400736:	eef5 7a40 	vcmp.f32	s15, #0.0
			si = sam[i]; // - theDC;
  40073a:	edd1 6a01 	vldr	s13, [r1, #4]
  40073e:	1e5f      	subs	r7, r3, #1
			if (si1 <= 0 && si > 0) {findMax = 1; findMin = 0; }
  400740:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400744:	d806      	bhi.n	400754 <computeWaveletPitch+0x170>
  400746:	eef5 6ac0 	vcmpe.f32	s13, #0.0
  40074a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  40074e:	dd01      	ble.n	400754 <computeWaveletPitch+0x170>
  400750:	2000      	movs	r0, #0
  400752:	2201      	movs	r2, #1
			if (si1 >= 0 && si < 0) {findMin = 1; findMax = 0; }
  400754:	eef5 7a40 	vcmp.f32	s15, #0.0
  400758:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  40075c:	db06      	blt.n	40076c <computeWaveletPitch+0x188>
  40075e:	eef5 6ac0 	vcmpe.f32	s13, #0.0
  400762:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400766:	d501      	bpl.n	40076c <computeWaveletPitch+0x188>
  400768:	2001      	movs	r0, #1
  40076a:	2200      	movs	r2, #0
			if (previousDV > -1000.0f) 
  40076c:	eeb4 7ac8 	vcmpe.f32	s14, s16
			dv = si - si1;
  400770:	ee36 6ae7 	vsub.f32	s12, s13, s15
			if (previousDV > -1000.0f) 
  400774:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400778:	dd8d      	ble.n	400696 <computeWaveletPitch+0xb2>
				if (findMin && previousDV < 0.0f && dv >= 0.0f) 
  40077a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
  40077e:	f000 0901 	and.w	r9, r0, #1
  400782:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400786:	bf58      	it	pl
  400788:	f04f 0900 	movpl.w	r9, #0
  40078c:	f1b9 0f00 	cmp.w	r9, #0
  400790:	d015      	beq.n	4007be <computeWaveletPitch+0x1da>
  400792:	eeb5 6a40 	vcmp.f32	s12, #0.0
  400796:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  40079a:	db10      	blt.n	4007be <computeWaveletPitch+0x1da>
					if (Abs(si1) >= ampltitudeThreshold) 
  40079c:	eef0 5ae7 	vabs.f32	s11, s15
  4007a0:	eeb4 9ae5 	vcmpe.f32	s18, s11
  4007a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4007a8:	d809      	bhi.n	4007be <computeWaveletPitch+0x1da>
						if (i - 1 > lastMinIndex + delta)
  4007aa:	eb04 090c 	add.w	r9, r4, ip
  4007ae:	45b9      	cmp	r9, r7
  4007b0:	da05      	bge.n	4007be <computeWaveletPitch+0x1da>
							mins[nbMins++] = i - 1;
  4007b2:	482a      	ldr	r0, [pc, #168]	; (40085c <computeWaveletPitch+0x278>)
  4007b4:	46bc      	mov	ip, r7
  4007b6:	f840 7025 	str.w	r7, [r0, r5, lsl #2]
  4007ba:	3501      	adds	r5, #1
							findMin = 0;
  4007bc:	2000      	movs	r0, #0
				if (findMax && previousDV > 0.0f && dv <= 0.0f) 
  4007be:	eeb5 7a40 	vcmp.f32	s14, #0.0
  4007c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4007c6:	f77f af66 	ble.w	400696 <computeWaveletPitch+0xb2>
  4007ca:	2a00      	cmp	r2, #0
  4007cc:	f43f af63 	beq.w	400696 <computeWaveletPitch+0xb2>
  4007d0:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
  4007d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4007d8:	f63f af5c 	bhi.w	400694 <computeWaveletPitch+0xb0>
					if (Abs(si1) >= ampltitudeThreshold) 
  4007dc:	eef0 7ae7 	vabs.f32	s15, s15
  4007e0:	eeb4 9ae7 	vcmpe.f32	s18, s15
  4007e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4007e8:	f63f af54 	bhi.w	400694 <computeWaveletPitch+0xb0>
						if (i -1 > lastmaxIndex + delta) 
  4007ec:	eb04 0208 	add.w	r2, r4, r8
  4007f0:	42ba      	cmp	r2, r7
  4007f2:	f6bf af4f 	bge.w	400694 <computeWaveletPitch+0xb0>
							maxs[nbMaxs++] = i - 1;
  4007f6:	4a1a      	ldr	r2, [pc, #104]	; (400860 <computeWaveletPitch+0x27c>)
  4007f8:	46b8      	mov	r8, r7
  4007fa:	f842 7026 	str.w	r7, [r2, r6, lsl #2]
  4007fe:	3601      	adds	r6, #1
							findMax = 0;
  400800:	2200      	movs	r2, #0
  400802:	e748      	b.n	400696 <computeWaveletPitch+0xb2>
					if (Abs(si1) >= ampltitudeThreshold) 
  400804:	eef0 6ae6 	vabs.f32	s13, s13
  400808:	eeb4 9ae6 	vcmpe.f32	s18, s13
  40080c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400810:	d88c      	bhi.n	40072c <computeWaveletPitch+0x148>
						if (i -1 > lastmaxIndex + delta) 
  400812:	eb04 0208 	add.w	r2, r4, r8
  400816:	429a      	cmp	r2, r3
  400818:	da88      	bge.n	40072c <computeWaveletPitch+0x148>
							maxs[nbMaxs++] = i - 1;
  40081a:	4a11      	ldr	r2, [pc, #68]	; (400860 <computeWaveletPitch+0x27c>)
  40081c:	4698      	mov	r8, r3
  40081e:	3108      	adds	r1, #8
  400820:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
  400824:	3302      	adds	r3, #2
  400826:	3601      	adds	r6, #1
							findMax = 0;
  400828:	2200      	movs	r2, #0
  40082a:	4573      	cmp	r3, lr
  40082c:	d183      	bne.n	400736 <computeWaveletPitch+0x152>
  40082e:	9f01      	ldr	r7, [sp, #4]
  400830:	f06f 4140 	mvn.w	r1, #3221225472	; 0xc0000000
							mins[nbMins++] = i - 1;
  400834:	f8df 9024 	ldr.w	r9, [pc, #36]	; 40085c <computeWaveletPitch+0x278>
  400838:	46a6      	mov	lr, r4
  40083a:	4419      	add	r1, r3
  40083c:	eb07 0181 	add.w	r1, r7, r1, lsl #2
  400840:	e01a      	b.n	400878 <computeWaveletPitch+0x294>
  400842:	bf00      	nop
  400844:	20404400 	.word	0x20404400
  400848:	00405729 	.word	0x00405729
  40084c:	00405859 	.word	0x00405859
  400850:	0040577d 	.word	0x0040577d
  400854:	c47a0000 	.word	0xc47a0000
  400858:	7fc00000 	.word	0x7fc00000
  40085c:	20403400 	.word	0x20403400
  400860:	20402400 	.word	0x20402400
  400864:	20401400 	.word	0x20401400
  400868:	fff0bdc0 	.word	0xfff0bdc0
						if (i -1 > lastmaxIndex + delta) 
  40086c:	2201      	movs	r2, #1
		for (i = 1; i < curSamNb; i++) 
  40086e:	3301      	adds	r3, #1
			dv = si - si1;
  400870:	eeb0 7a67 	vmov.f32	s14, s15
		for (i = 1; i < curSamNb; i++) 
  400874:	459a      	cmp	sl, r3
  400876:	dd65      	ble.n	400944 <computeWaveletPitch+0x360>
			si = sam[i]; // - theDC;
  400878:	edd1 7a01 	vldr	s15, [r1, #4]
  40087c:	1e5f      	subs	r7, r3, #1
			si1 = sam[i-1]; // - theDC;
  40087e:	ecf1 6a01 	vldmia	r1!, {s13}
			if (si1 <= 0 && si > 0) {findMax = 1; findMin = 0; }
  400882:	eef5 7a40 	vcmp.f32	s15, #0.0
  400886:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  40088a:	dd06      	ble.n	40089a <computeWaveletPitch+0x2b6>
  40088c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
  400890:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400894:	d801      	bhi.n	40089a <computeWaveletPitch+0x2b6>
  400896:	2000      	movs	r0, #0
  400898:	2201      	movs	r2, #1
			if (si1 >= 0 && si < 0) {findMin = 1; findMax = 0; }
  40089a:	eef5 7a40 	vcmp.f32	s15, #0.0
  40089e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4008a2:	d506      	bpl.n	4008b2 <computeWaveletPitch+0x2ce>
  4008a4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
  4008a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4008ac:	db01      	blt.n	4008b2 <computeWaveletPitch+0x2ce>
  4008ae:	2001      	movs	r0, #1
  4008b0:	2200      	movs	r2, #0
			if (previousDV > -1000.0f) 
  4008b2:	eeb4 7ac8 	vcmpe.f32	s14, s16
			dv = si - si1;
  4008b6:	ee77 7ae6 	vsub.f32	s15, s15, s13
			if (previousDV > -1000.0f) 
  4008ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4008be:	ddd6      	ble.n	40086e <computeWaveletPitch+0x28a>
				if (findMin && previousDV < 0.0f && dv >= 0.0f) 
  4008c0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
  4008c4:	f000 0401 	and.w	r4, r0, #1
  4008c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4008cc:	bf58      	it	pl
  4008ce:	2400      	movpl	r4, #0
  4008d0:	b1a4      	cbz	r4, 4008fc <computeWaveletPitch+0x318>
  4008d2:	eef5 7a40 	vcmp.f32	s15, #0.0
  4008d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4008da:	db0f      	blt.n	4008fc <computeWaveletPitch+0x318>
					if (Abs(si1) >= ampltitudeThreshold) 
  4008dc:	eeb0 6ae6 	vabs.f32	s12, s13
  4008e0:	eeb4 9ac6 	vcmpe.f32	s18, s12
  4008e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4008e8:	d808      	bhi.n	4008fc <computeWaveletPitch+0x318>
						if (i - 1 > lastMinIndex + delta)
  4008ea:	eb0e 040c 	add.w	r4, lr, ip
  4008ee:	42bc      	cmp	r4, r7
  4008f0:	da04      	bge.n	4008fc <computeWaveletPitch+0x318>
							mins[nbMins++] = i - 1;
  4008f2:	f849 7025 	str.w	r7, [r9, r5, lsl #2]
  4008f6:	46bc      	mov	ip, r7
  4008f8:	3501      	adds	r5, #1
							findMin = 0;
  4008fa:	2000      	movs	r0, #0
				if (findMax && previousDV > 0.0f && dv <= 0.0f) 
  4008fc:	eeb5 7a40 	vcmp.f32	s14, #0.0
  400900:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400904:	ddb3      	ble.n	40086e <computeWaveletPitch+0x28a>
  400906:	2a00      	cmp	r2, #0
  400908:	d0b1      	beq.n	40086e <computeWaveletPitch+0x28a>
  40090a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
  40090e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400912:	d8ab      	bhi.n	40086c <computeWaveletPitch+0x288>
					if (Abs(si1) >= ampltitudeThreshold) 
  400914:	eef0 6ae6 	vabs.f32	s13, s13
  400918:	eeb4 9ae6 	vcmpe.f32	s18, s13
  40091c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400920:	d8a4      	bhi.n	40086c <computeWaveletPitch+0x288>
						if (i -1 > lastmaxIndex + delta) 
  400922:	eb0e 0208 	add.w	r2, lr, r8
  400926:	42ba      	cmp	r2, r7
  400928:	daa0      	bge.n	40086c <computeWaveletPitch+0x288>
		for (i = 1; i < curSamNb; i++) 
  40092a:	3301      	adds	r3, #1
							maxs[nbMaxs++] = i - 1;
  40092c:	4acf      	ldr	r2, [pc, #828]	; (400c6c <computeWaveletPitch+0x688>)
  40092e:	46b8      	mov	r8, r7
			dv = si - si1;
  400930:	eeb0 7a67 	vmov.f32	s14, s15
		for (i = 1; i < curSamNb; i++) 
  400934:	459a      	cmp	sl, r3
							maxs[nbMaxs++] = i - 1;
  400936:	f842 7026 	str.w	r7, [r2, r6, lsl #2]
  40093a:	f106 0601 	add.w	r6, r6, #1
							findMax = 0;
  40093e:	f04f 0200 	mov.w	r2, #0
		for (i = 1; i < curSamNb; i++) 
  400942:	dc99      	bgt.n	400878 <computeWaveletPitch+0x294>
  400944:	4674      	mov	r4, lr
		if (nbMins == 0 && nbMaxs == 0) 
  400946:	b915      	cbnz	r5, 40094e <computeWaveletPitch+0x36a>
  400948:	2e00      	cmp	r6, #0
  40094a:	f000 810d 	beq.w	400b68 <computeWaveletPitch+0x584>
		memset(distances, 0, WIN_SIZE*sizeof(int32_t));
  40094e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  400952:	2100      	movs	r1, #0
  400954:	4658      	mov	r0, fp
  400956:	4bc6      	ldr	r3, [pc, #792]	; (400c70 <computeWaveletPitch+0x68c>)
  400958:	4798      	blx	r3
		for (i = 0 ; i < nbMins ; i++) 
  40095a:	b34d      	cbz	r5, 4009b0 <computeWaveletPitch+0x3cc>
  40095c:	f8df e328 	ldr.w	lr, [pc, #808]	; 400c88 <computeWaveletPitch+0x6a4>
  400960:	2202      	movs	r2, #2
  400962:	2700      	movs	r7, #0
  400964:	4671      	mov	r1, lr
  400966:	e012      	b.n	40098e <computeWaveletPitch+0x3aa>
					d = Abs(mins[i] - mins[i+j]);
  400968:	f8d1 c000 	ldr.w	ip, [r1]
  40096c:	684b      	ldr	r3, [r1, #4]
  40096e:	ebac 0303 	sub.w	r3, ip, r3
  400972:	2b00      	cmp	r3, #0
  400974:	bfb8      	it	lt
  400976:	425b      	neglt	r3, r3
				if (i+j < nbMins) 
  400978:	42aa      	cmp	r2, r5
					distances[d]++; 
  40097a:	f85b 0023 	ldr.w	r0, [fp, r3, lsl #2]
  40097e:	f100 0001 	add.w	r0, r0, #1
  400982:	f84b 0023 	str.w	r0, [fp, r3, lsl #2]
				if (i+j < nbMins) 
  400986:	f2c0 80cc 	blt.w	400b22 <computeWaveletPitch+0x53e>
  40098a:	3104      	adds	r1, #4
  40098c:	3201      	adds	r2, #1
  40098e:	3701      	adds	r7, #1
  400990:	42af      	cmp	r7, r5
  400992:	dbe9      	blt.n	400968 <computeWaveletPitch+0x384>
  400994:	42aa      	cmp	r2, r5
  400996:	da0b      	bge.n	4009b0 <computeWaveletPitch+0x3cc>
					d = Abs(mins[i] - mins[i+j]);
  400998:	f85e 2022 	ldr.w	r2, [lr, r2, lsl #2]
  40099c:	680b      	ldr	r3, [r1, #0]
  40099e:	1a9b      	subs	r3, r3, r2
  4009a0:	2b00      	cmp	r3, #0
  4009a2:	bfb8      	it	lt
  4009a4:	425b      	neglt	r3, r3
					distances[d]++; 
  4009a6:	f85b 2023 	ldr.w	r2, [fp, r3, lsl #2]
  4009aa:	3201      	adds	r2, #1
  4009ac:	f84b 2023 	str.w	r2, [fp, r3, lsl #2]
		for (i = 0 ; i < nbMaxs ; i++) 
  4009b0:	b346      	cbz	r6, 400a04 <computeWaveletPitch+0x420>
  4009b2:	4dae      	ldr	r5, [pc, #696]	; (400c6c <computeWaveletPitch+0x688>)
  4009b4:	2202      	movs	r2, #2
  4009b6:	2700      	movs	r7, #0
  4009b8:	4629      	mov	r1, r5
  4009ba:	e012      	b.n	4009e2 <computeWaveletPitch+0x3fe>
					d = Abs(maxs[i] - maxs[i+j]);
  4009bc:	f8d1 e000 	ldr.w	lr, [r1]
  4009c0:	684b      	ldr	r3, [r1, #4]
  4009c2:	ebae 0303 	sub.w	r3, lr, r3
  4009c6:	2b00      	cmp	r3, #0
  4009c8:	bfb8      	it	lt
  4009ca:	425b      	neglt	r3, r3
				if (i+j < nbMaxs) 
  4009cc:	42b2      	cmp	r2, r6
					distances[d]++; 
  4009ce:	f85b 0023 	ldr.w	r0, [fp, r3, lsl #2]
  4009d2:	f100 0001 	add.w	r0, r0, #1
  4009d6:	f84b 0023 	str.w	r0, [fp, r3, lsl #2]
				if (i+j < nbMaxs) 
  4009da:	f2c0 818d 	blt.w	400cf8 <computeWaveletPitch+0x714>
  4009de:	3104      	adds	r1, #4
  4009e0:	3201      	adds	r2, #1
  4009e2:	3701      	adds	r7, #1
  4009e4:	42b7      	cmp	r7, r6
  4009e6:	dbe9      	blt.n	4009bc <computeWaveletPitch+0x3d8>
  4009e8:	42b2      	cmp	r2, r6
  4009ea:	da0b      	bge.n	400a04 <computeWaveletPitch+0x420>
					d = Abs(maxs[i] - maxs[i+j]);
  4009ec:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  4009f0:	680b      	ldr	r3, [r1, #0]
  4009f2:	1a9b      	subs	r3, r3, r2
  4009f4:	2b00      	cmp	r3, #0
  4009f6:	bfb8      	it	lt
  4009f8:	425b      	neglt	r3, r3
					distances[d]++; 
  4009fa:	f85b 2023 	ldr.w	r2, [fp, r3, lsl #2]
  4009fe:	3201      	adds	r2, #1
  400a00:	f84b 2023 	str.w	r2, [fp, r3, lsl #2]
		for (i = 0 ; i < nbMaxs ; i++) 
  400a04:	f04f 36ff 	mov.w	r6, #4294967295
  400a08:	f1c4 0e00 	rsb	lr, r4, #0
  400a0c:	2500      	movs	r5, #0
  400a0e:	f104 0c01 	add.w	ip, r4, #1
  400a12:	4637      	mov	r7, r6
			for (j = -delta ; j <= delta ; j++) 
  400a14:	4574      	cmp	r4, lr
  400a16:	f2c0 8082 	blt.w	400b1e <computeWaveletPitch+0x53a>
  400a1a:	1b2b      	subs	r3, r5, r4
  400a1c:	eb0c 0205 	add.w	r2, ip, r5
  400a20:	2100      	movs	r1, #0
				if (i+j >=0 && i+j < curSamNb)
  400a22:	4553      	cmp	r3, sl
  400a24:	da04      	bge.n	400a30 <computeWaveletPitch+0x44c>
  400a26:	2b00      	cmp	r3, #0
  400a28:	db02      	blt.n	400a30 <computeWaveletPitch+0x44c>
					summed += distances[i+j];
  400a2a:	f85b 0023 	ldr.w	r0, [fp, r3, lsl #2]
  400a2e:	4401      	add	r1, r0
  400a30:	3301      	adds	r3, #1
			for (j = -delta ; j <= delta ; j++) 
  400a32:	4293      	cmp	r3, r2
  400a34:	d1f5      	bne.n	400a22 <computeWaveletPitch+0x43e>
			if (summed == bestValue) 
  400a36:	42b9      	cmp	r1, r7
  400a38:	d06c      	beq.n	400b14 <computeWaveletPitch+0x530>
			else if (summed > bestValue) 
  400a3a:	dd01      	ble.n	400a40 <computeWaveletPitch+0x45c>
  400a3c:	460f      	mov	r7, r1
  400a3e:	462e      	mov	r6, r5
		for (i = 0; i< curSamNb; i++) 
  400a40:	3501      	adds	r5, #1
  400a42:	4555      	cmp	r5, sl
  400a44:	d1e6      	bne.n	400a14 <computeWaveletPitch+0x430>
		for (j = -delta ; j <= delta ; j++) 
  400a46:	4574      	cmp	r4, lr
  400a48:	f2c0 8087 	blt.w	400b5a <computeWaveletPitch+0x576>
  400a4c:	ed9f 7a89 	vldr	s14, [pc, #548]	; 400c74 <computeWaveletPitch+0x690>
  400a50:	1c62      	adds	r2, r4, #1
  400a52:	1b33      	subs	r3, r6, r4
  400a54:	eef0 6a47 	vmov.f32	s13, s14
  400a58:	4416      	add	r6, r2
			if (bestDistance+j >=0 && bestDistance+j < WIN_SIZE) 
  400a5a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
  400a5e:	d211      	bcs.n	400a84 <computeWaveletPitch+0x4a0>
				int32_t nbDist = distances[bestDistance+j];
  400a60:	f85b 2023 	ldr.w	r2, [fp, r3, lsl #2]
					distAvg += (bestDistance+j)*nbDist;
  400a64:	fb02 f103 	mul.w	r1, r2, r3
					nbDists += nbDist;
  400a68:	ee06 2a10 	vmov	s12, r2
				if (nbDist > 0) {
  400a6c:	2a00      	cmp	r2, #0
					distAvg += (bestDistance+j)*nbDist;
  400a6e:	ee07 1a90 	vmov	s15, r1
					nbDists += nbDist;
  400a72:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
					distAvg += (bestDistance+j)*nbDist;
  400a76:	eef8 7ae7 	vcvt.f32.s32	s15, s15
				if (nbDist > 0) {
  400a7a:	dd03      	ble.n	400a84 <computeWaveletPitch+0x4a0>
					nbDists += nbDist;
  400a7c:	ee76 6a86 	vadd.f32	s13, s13, s12
					distAvg += (bestDistance+j)*nbDist;
  400a80:	ee37 7a27 	vadd.f32	s14, s14, s15
  400a84:	3301      	adds	r3, #1
		for (j = -delta ; j <= delta ; j++) 
  400a86:	42b3      	cmp	r3, r6
  400a88:	d1e7      	bne.n	400a5a <computeWaveletPitch+0x476>
  400a8a:	ee87 6a26 	vdiv.f32	s12, s14, s13
				pitchF = DYW_SAMPLING_RATE/(_2power(curLevel-1)*curModeDistance);
  400a8e:	9b00      	ldr	r3, [sp, #0]
		if (curModeDistance > -1.0f) 
  400a90:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
  400a94:	eef4 9ae7 	vcmpe.f32	s19, s15
  400a98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400a9c:	dd12      	ble.n	400ac4 <computeWaveletPitch+0x4e0>
			float similarity = Abs(distAvg*2 - curModeDistance);
  400a9e:	eeb0 7a00 	vmov.f32	s14, #0	; 0x40000000  2.0
			if (similarity <= 2*delta) 
  400aa2:	0064      	lsls	r4, r4, #1
			float similarity = Abs(distAvg*2 - curModeDistance);
  400aa4:	eef0 6a69 	vmov.f32	s13, s19
			if (similarity <= 2*delta) 
  400aa8:	ee07 4a90 	vmov	s15, r4
			float similarity = Abs(distAvg*2 - curModeDistance);
  400aac:	eed6 6a07 	vfnms.f32	s13, s12, s14
			if (similarity <= 2*delta) 
  400ab0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
			float similarity = Abs(distAvg*2 - curModeDistance);
  400ab4:	eeb0 7ae6 	vabs.f32	s14, s13
			if (similarity <= 2*delta) 
  400ab8:	eeb4 7ae7 	vcmpe.f32	s14, s15
  400abc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400ac0:	f240 8087 	bls.w	400bd2 <computeWaveletPitch+0x5ee>
		curLevel = curLevel + 1;
  400ac4:	3301      	adds	r3, #1
		if (curLevel >= maxFLWTlevels) 
  400ac6:	2b06      	cmp	r3, #6
		curLevel = curLevel + 1;
  400ac8:	9300      	str	r3, [sp, #0]
		if (curLevel >= maxFLWTlevels) 
  400aca:	d04d      	beq.n	400b68 <computeWaveletPitch+0x584>
  400acc:	9b01      	ldr	r3, [sp, #4]
		for (i = 0; i < curSamNb/2; i++)
  400ace:	ea4f 0a6a 	mov.w	sl, sl, asr #1
  400ad2:	4a69      	ldr	r2, [pc, #420]	; (400c78 <computeWaveletPitch+0x694>)
			sam[i] = (sam[2*i] + sam[2*i + 1]) * 0.5f;
  400ad4:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
  400ad8:	eb03 01ca 	add.w	r1, r3, sl, lsl #3
		for (i = 0; i < curSamNb/2; i++)
  400adc:	4613      	mov	r3, r2
			sam[i] = (sam[2*i] + sam[2*i + 1]) * 0.5f;
  400ade:	ed93 7a00 	vldr	s14, [r3]
  400ae2:	3308      	adds	r3, #8
  400ae4:	ed53 7a01 	vldr	s15, [r3, #-4]
		for (i = 0; i < curSamNb/2; i++)
  400ae8:	428b      	cmp	r3, r1
			sam[i] = (sam[2*i] + sam[2*i + 1]) * 0.5f;
  400aea:	ee77 7a27 	vadd.f32	s15, s14, s15
  400aee:	ee67 7aa6 	vmul.f32	s15, s15, s13
  400af2:	ece2 7a01 	vstmia	r2!, {s15}
		for (i = 0; i < curSamNb/2; i++)
  400af6:	d1f2      	bne.n	400ade <computeWaveletPitch+0x4fa>
	for (j = 0; j < i; j++) res <<= 1;
  400af8:	9b00      	ldr	r3, [sp, #0]
  400afa:	2b01      	cmp	r3, #1
  400afc:	d057      	beq.n	400bae <computeWaveletPitch+0x5ca>
  400afe:	2b02      	cmp	r3, #2
  400b00:	d030      	beq.n	400b64 <computeWaveletPitch+0x580>
  400b02:	2b03      	cmp	r3, #3
  400b04:	d02c      	beq.n	400b60 <computeWaveletPitch+0x57c>
  400b06:	2b05      	cmp	r3, #5
  400b08:	bf0c      	ite	eq
  400b0a:	2320      	moveq	r3, #32
  400b0c:	2310      	movne	r3, #16
		curModeDistance = distAvg;
  400b0e:	eef0 9a46 	vmov.f32	s19, s12
  400b12:	e595      	b.n	400640 <computeWaveletPitch+0x5c>
				if (i == 2*bestDistance)
  400b14:	ebb5 0f46 	cmp.w	r5, r6, lsl #1
  400b18:	bf08      	it	eq
  400b1a:	462e      	moveq	r6, r5
  400b1c:	e790      	b.n	400a40 <computeWaveletPitch+0x45c>
			int32_t summed = 0;
  400b1e:	2100      	movs	r1, #0
  400b20:	e789      	b.n	400a36 <computeWaveletPitch+0x452>
					d = Abs(mins[i] - mins[i+j]);
  400b22:	f85e 3022 	ldr.w	r3, [lr, r2, lsl #2]
  400b26:	ebac 0303 	sub.w	r3, ip, r3
  400b2a:	ea83 70e3 	eor.w	r0, r3, r3, asr #31
  400b2e:	eba0 70e3 	sub.w	r0, r0, r3, asr #31
					distances[d]++; 
  400b32:	f85b 3020 	ldr.w	r3, [fp, r0, lsl #2]
  400b36:	3301      	adds	r3, #1
  400b38:	f84b 3020 	str.w	r3, [fp, r0, lsl #2]
  400b3c:	e725      	b.n	40098a <computeWaveletPitch+0x3a6>
		if (curSamNb < 2) return pitchF;
  400b3e:	2000      	movs	r0, #0
  400b40:	494d      	ldr	r1, [pc, #308]	; (400c78 <computeWaveletPitch+0x694>)
  400b42:	f8df 8148 	ldr.w	r8, [pc, #328]	; 400c8c <computeWaveletPitch+0x6a8>
  400b46:	eeb0 7a48 	vmov.f32	s14, s16
  400b4a:	2301      	movs	r3, #1
  400b4c:	4602      	mov	r2, r0
  400b4e:	4606      	mov	r6, r0
  400b50:	4605      	mov	r5, r0
  400b52:	46c4      	mov	ip, r8
  400b54:	9101      	str	r1, [sp, #4]
  400b56:	460f      	mov	r7, r1
  400b58:	e66a      	b.n	400830 <computeWaveletPitch+0x24c>
		for (j = -delta ; j <= delta ; j++) 
  400b5a:	eeb0 6a68 	vmov.f32	s12, s17
  400b5e:	e796      	b.n	400a8e <computeWaveletPitch+0x4aa>
	for (j = 0; j < i; j++) res <<= 1;
  400b60:	2308      	movs	r3, #8
  400b62:	e7d4      	b.n	400b0e <computeWaveletPitch+0x52a>
  400b64:	2304      	movs	r3, #4
  400b66:	e7d2      	b.n	400b0e <computeWaveletPitch+0x52a>
		if (pitchtracker._prevPitch > -1.0f) 
  400b68:	4a44      	ldr	r2, [pc, #272]	; (400c7c <computeWaveletPitch+0x698>)
  400b6a:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
  400b6e:	edd2 7a00 	vldr	s15, [r2]
  400b72:	eef4 7ac7 	vcmpe.f32	s15, s14
  400b76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400b7a:	dd1a      	ble.n	400bb2 <computeWaveletPitch+0x5ce>
			if (pitchtracker._pitchConfidence >= 1) 
  400b7c:	6853      	ldr	r3, [r2, #4]
  400b7e:	2b00      	cmp	r3, #0
  400b80:	dd20      	ble.n	400bc4 <computeWaveletPitch+0x5e0>
				pitchtracker._pitchConfidence = Max(0, pitchtracker._pitchConfidence - 1);
  400b82:	3b01      	subs	r3, #1
  400b84:	6053      	str	r3, [r2, #4]
	if (pitchtracker._pitchConfidence >= 1) 
  400b86:	2b00      	cmp	r3, #0
  400b88:	dd13      	ble.n	400bb2 <computeWaveletPitch+0x5ce>
	if (pitch < -1.0f) pitch = 0.0f;
  400b8a:	eeff 6a00 	vmov.f32	s13, #240	; 0xbf800000 -1.0
  400b8e:	ed9f 7a39 	vldr	s14, [pc, #228]	; 400c74 <computeWaveletPitch+0x690>
  400b92:	eef4 7a66 	vcmp.f32	s15, s13
  400b96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400b9a:	bf48      	it	mi
  400b9c:	eef0 7a47 	vmovmi.f32	s15, s14
	return _dywapitch_dynamicprocess(get_raw_pitch(samples)); 
  400ba0:	ee17 0a90 	vmov	r0, s15
  400ba4:	b007      	add	sp, #28
  400ba6:	ecbd 8b04 	vpop	{d8-d9}
  400baa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	for (j = 0; j < i; j++) res <<= 1;
  400bae:	2302      	movs	r3, #2
  400bb0:	e7ad      	b.n	400b0e <computeWaveletPitch+0x52a>
	float estimatedPitch = -1.0f;
  400bb2:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
  400bb6:	ee17 0a90 	vmov	r0, s15
  400bba:	b007      	add	sp, #28
  400bbc:	ecbd 8b04 	vpop	{d8-d9}
  400bc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				pitchtracker._pitchConfidence = 0;
  400bc4:	2300      	movs	r3, #0
				pitchtracker._prevPitch = -1.0f;
  400bc6:	ed82 7a00 	vstr	s14, [r2]
		pitch = -1.0f;
  400bca:	eef0 7a47 	vmov.f32	s15, s14
				pitchtracker._pitchConfidence = 0;
  400bce:	6053      	str	r3, [r2, #4]
  400bd0:	e7f1      	b.n	400bb6 <computeWaveletPitch+0x5d2>
				pitchF = DYW_SAMPLING_RATE/(_2power(curLevel-1)*curModeDistance);
  400bd2:	3b01      	subs	r3, #1
	for (j = 0; j < i; j++) res <<= 1;
  400bd4:	2b00      	cmp	r3, #0
  400bd6:	f340 808c 	ble.w	400cf2 <computeWaveletPitch+0x70e>
  400bda:	2b01      	cmp	r3, #1
  400bdc:	f000 809c 	beq.w	400d18 <computeWaveletPitch+0x734>
  400be0:	2b02      	cmp	r3, #2
  400be2:	f000 8097 	beq.w	400d14 <computeWaveletPitch+0x730>
  400be6:	2b04      	cmp	r3, #4
  400be8:	bf0c      	ite	eq
  400bea:	2310      	moveq	r3, #16
  400bec:	2308      	movne	r3, #8
  400bee:	ee07 3a90 	vmov	s15, r3
  400bf2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
				pitchF = DYW_SAMPLING_RATE/(_2power(curLevel-1)*curModeDistance);
  400bf6:	ee69 9aa7 	vmul.f32	s19, s19, s15
  400bfa:	eddf 6a21 	vldr	s13, [pc, #132]	; 400c80 <computeWaveletPitch+0x69c>
	if (pitch < 1.0f) pitch = -1.0f;
  400bfe:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
				pitchF = DYW_SAMPLING_RATE/(_2power(curLevel-1)*curModeDistance);
  400c02:	eec6 7aa9 	vdiv.f32	s15, s13, s19
	if (pitch < 1.0f) pitch = -1.0f;
  400c06:	eef4 7ac7 	vcmpe.f32	s15, s14
  400c0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400c0e:	d4ab      	bmi.n	400b68 <computeWaveletPitch+0x584>
	if (pitch > -1.0) {
  400c10:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
  400c14:	eef4 7ac7 	vcmpe.f32	s15, s14
  400c18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400c1c:	dda4      	ble.n	400b68 <computeWaveletPitch+0x584>
		if (pitchtracker._prevPitch < 0.0f) 
  400c1e:	4a17      	ldr	r2, [pc, #92]	; (400c7c <computeWaveletPitch+0x698>)
  400c20:	edd2 6a00 	vldr	s13, [r2]
  400c24:	eef5 6ac0 	vcmpe.f32	s13, #0.0
  400c28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400c2c:	d438      	bmi.n	400ca0 <computeWaveletPitch+0x6bc>
		else if (abs(pitchtracker._prevPitch - pitch)/pitch < acceptedError) 
  400c2e:	ee36 7ae7 	vsub.f32	s14, s13, s15
  400c32:	ed9f 6a14 	vldr	s12, [pc, #80]	; 400c84 <computeWaveletPitch+0x6a0>
  400c36:	eebd 7ac7 	vcvt.s32.f32	s14, s14
  400c3a:	ee17 3a10 	vmov	r3, s14
  400c3e:	2b00      	cmp	r3, #0
  400c40:	bfb8      	it	lt
  400c42:	425b      	neglt	r3, r3
  400c44:	ee07 3a10 	vmov	s14, r3
			pitchtracker._pitchConfidence = Min(maxConfidence, pitchtracker._pitchConfidence + 1); // maximum 3
  400c48:	6853      	ldr	r3, [r2, #4]
		else if (abs(pitchtracker._prevPitch - pitch)/pitch < acceptedError) 
  400c4a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
  400c4e:	eec7 5a27 	vdiv.f32	s11, s14, s15
  400c52:	eef4 5ac6 	vcmpe.f32	s11, s12
  400c56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400c5a:	d519      	bpl.n	400c90 <computeWaveletPitch+0x6ac>
			pitchtracker._pitchConfidence = Min(maxConfidence, pitchtracker._pitchConfidence + 1); // maximum 3
  400c5c:	2b04      	cmp	r3, #4
			pitchtracker._prevPitch = pitch;
  400c5e:	edc2 7a00 	vstr	s15, [r2]
			pitchtracker._pitchConfidence = Min(maxConfidence, pitchtracker._pitchConfidence + 1); // maximum 3
  400c62:	bfd4      	ite	le
  400c64:	3301      	addle	r3, #1
  400c66:	2305      	movgt	r3, #5
				pitchtracker._pitchConfidence = max(0, pitchtracker._pitchConfidence - 1);
  400c68:	6053      	str	r3, [r2, #4]
  400c6a:	e78c      	b.n	400b86 <computeWaveletPitch+0x5a2>
  400c6c:	20402400 	.word	0x20402400
  400c70:	00408555 	.word	0x00408555
  400c74:	00000000 	.word	0x00000000
  400c78:	20404400 	.word	0x20404400
  400c7c:	20400020 	.word	0x20400020
  400c80:	46b5a400 	.word	0x46b5a400
  400c84:	3e4ccccd 	.word	0x3e4ccccd
  400c88:	20403400 	.word	0x20403400
  400c8c:	fff0bdc0 	.word	0xfff0bdc0
		else if ((pitchtracker._pitchConfidence >= maxConfidence-2) && Abs(pitchtracker._prevPitch - 2.0f*pitch)/(2.0f*pitch) < acceptedError) 
  400c90:	2b02      	cmp	r3, #2
  400c92:	dc0a      	bgt.n	400caa <computeWaveletPitch+0x6c6>
			if (pitchtracker._pitchConfidence >= 1) 
  400c94:	2b00      	cmp	r3, #0
  400c96:	dd03      	ble.n	400ca0 <computeWaveletPitch+0x6bc>
				pitchtracker._pitchConfidence = max(0, pitchtracker._pitchConfidence - 1);
  400c98:	3b01      	subs	r3, #1
				estimatedPitch = pitchtracker._prevPitch;
  400c9a:	eef0 7a66 	vmov.f32	s15, s13
  400c9e:	e7e3      	b.n	400c68 <computeWaveletPitch+0x684>
				pitchtracker._pitchConfidence = 1;
  400ca0:	2301      	movs	r3, #1
				pitchtracker._prevPitch = pitch;
  400ca2:	edc2 7a00 	vstr	s15, [r2]
				pitchtracker._pitchConfidence = 1;
  400ca6:	6053      	str	r3, [r2, #4]
  400ca8:	e76f      	b.n	400b8a <computeWaveletPitch+0x5a6>
		else if ((pitchtracker._pitchConfidence >= maxConfidence-2) && Abs(pitchtracker._prevPitch - 2.0f*pitch)/(2.0f*pitch) < acceptedError) 
  400caa:	ee37 7aa7 	vadd.f32	s14, s15, s15
  400cae:	ee76 5ac7 	vsub.f32	s11, s13, s14
  400cb2:	eef0 5ae5 	vabs.f32	s11, s11
  400cb6:	ee85 5a87 	vdiv.f32	s10, s11, s14
  400cba:	eeb4 5ac6 	vcmpe.f32	s10, s12
  400cbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400cc2:	d504      	bpl.n	400cce <computeWaveletPitch+0x6ea>
			pitchtracker._prevPitch = estimatedPitch;
  400cc4:	ed82 7a00 	vstr	s14, [r2]
			estimatedPitch = 2.0f*pitch;
  400cc8:	eef0 7a47 	vmov.f32	s15, s14
  400ccc:	e75d      	b.n	400b8a <computeWaveletPitch+0x5a6>
		else if ((pitchtracker._pitchConfidence >= maxConfidence-2) && Abs(pitchtracker._prevPitch - 0.5f*pitch)/(0.5f*pitch) < acceptedError) 
  400cce:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
  400cd2:	ee67 7a87 	vmul.f32	s15, s15, s14
  400cd6:	ee36 7ae7 	vsub.f32	s14, s13, s15
  400cda:	eeb0 7ac7 	vabs.f32	s14, s14
  400cde:	eec7 5a27 	vdiv.f32	s11, s14, s15
  400ce2:	eef4 5ac6 	vcmpe.f32	s11, s12
  400ce6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400cea:	d5d5      	bpl.n	400c98 <computeWaveletPitch+0x6b4>
			pitchtracker._prevPitch = estimatedPitch;
  400cec:	edc2 7a00 	vstr	s15, [r2]
  400cf0:	e74b      	b.n	400b8a <computeWaveletPitch+0x5a6>
	for (j = 0; j < i; j++) res <<= 1;
  400cf2:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
  400cf6:	e77e      	b.n	400bf6 <computeWaveletPitch+0x612>
					d = Abs(maxs[i] - maxs[i+j]);
  400cf8:	f855 3022 	ldr.w	r3, [r5, r2, lsl #2]
  400cfc:	ebae 0303 	sub.w	r3, lr, r3
  400d00:	ea83 70e3 	eor.w	r0, r3, r3, asr #31
  400d04:	eba0 70e3 	sub.w	r0, r0, r3, asr #31
					distances[d]++; 
  400d08:	f85b 3020 	ldr.w	r3, [fp, r0, lsl #2]
  400d0c:	3301      	adds	r3, #1
  400d0e:	f84b 3020 	str.w	r3, [fp, r0, lsl #2]
  400d12:	e664      	b.n	4009de <computeWaveletPitch+0x3fa>
	for (j = 0; j < i; j++) res <<= 1;
  400d14:	2304      	movs	r3, #4
  400d16:	e76a      	b.n	400bee <computeWaveletPitch+0x60a>
  400d18:	2302      	movs	r3, #2
  400d1a:	e768      	b.n	400bee <computeWaveletPitch+0x60a>

00400d1c <gfx_set_clipping>:
static gfx_ext_draw_handler_t gfx_ext_draw_func;

/* This function is documented in gfx.h */
void gfx_set_clipping(gfx_coord_t min_x, gfx_coord_t min_y,
		gfx_coord_t max_x, gfx_coord_t max_y)
{
  400d1c:	b4f0      	push	{r4, r5, r6, r7}

	if (min_y < 0) {
		min_y = 0;
	}

	if (max_x >= gfx_width) {
  400d1e:	4c0e      	ldr	r4, [pc, #56]	; (400d58 <gfx_set_clipping+0x3c>)
  400d20:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
  400d24:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
  400d28:	f9b4 4000 	ldrsh.w	r4, [r4]
  400d2c:	4294      	cmp	r4, r2
  400d2e:	dc01      	bgt.n	400d34 <gfx_set_clipping+0x18>
		max_x = gfx_width - 1;
  400d30:	1e62      	subs	r2, r4, #1
  400d32:	b212      	sxth	r2, r2
	}

	if (max_y >= gfx_height) {
  400d34:	4c09      	ldr	r4, [pc, #36]	; (400d5c <gfx_set_clipping+0x40>)
  400d36:	f9b4 4000 	ldrsh.w	r4, [r4]
  400d3a:	429c      	cmp	r4, r3
  400d3c:	dc01      	bgt.n	400d42 <gfx_set_clipping+0x26>
		max_y = gfx_height - 1;
  400d3e:	3c01      	subs	r4, #1
  400d40:	b223      	sxth	r3, r4
	}

	gfx_min_x = min_x;
  400d42:	4f07      	ldr	r7, [pc, #28]	; (400d60 <gfx_set_clipping+0x44>)
	gfx_min_y = min_y;
  400d44:	4e07      	ldr	r6, [pc, #28]	; (400d64 <gfx_set_clipping+0x48>)
	gfx_max_x = max_x;
  400d46:	4d08      	ldr	r5, [pc, #32]	; (400d68 <gfx_set_clipping+0x4c>)
	gfx_max_y = max_y;
  400d48:	4c08      	ldr	r4, [pc, #32]	; (400d6c <gfx_set_clipping+0x50>)
	gfx_min_x = min_x;
  400d4a:	8038      	strh	r0, [r7, #0]
	gfx_min_y = min_y;
  400d4c:	8031      	strh	r1, [r6, #0]
	gfx_max_x = max_x;
  400d4e:	802a      	strh	r2, [r5, #0]
	gfx_max_y = max_y;
  400d50:	8023      	strh	r3, [r4, #0]
#endif
}
  400d52:	bcf0      	pop	{r4, r5, r6, r7}
  400d54:	4770      	bx	lr
  400d56:	bf00      	nop
  400d58:	20419400 	.word	0x20419400
  400d5c:	2041940a 	.word	0x2041940a
  400d60:	20419402 	.word	0x20419402
  400d64:	20419406 	.word	0x20419406
  400d68:	20419404 	.word	0x20419404
  400d6c:	20419408 	.word	0x20419408

00400d70 <gfx_generic_draw_filled_rect>:

/* This function is documented in gfx.h */
void gfx_generic_draw_filled_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		gfx_color_t color)
{
  400d70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  400d74:	f8bd 7020 	ldrh.w	r7, [sp, #32]
	gfx_coord_t x2;
	gfx_coord_t y2;

	if ((width == 0) || (height == 0)) {
  400d78:	2a00      	cmp	r2, #0
  400d7a:	d047      	beq.n	400e0c <gfx_generic_draw_filled_rect+0x9c>
  400d7c:	461d      	mov	r5, r3
  400d7e:	2b00      	cmp	r3, #0
  400d80:	d044      	beq.n	400e0c <gfx_generic_draw_filled_rect+0x9c>
		return;
	}

	/* Invert if width or height is negative. */
	if (width < 0) {
  400d82:	2a00      	cmp	r2, #0
  400d84:	4614      	mov	r4, r2
  400d86:	db4f      	blt.n	400e28 <gfx_generic_draw_filled_rect+0xb8>
		width = -width;
		x -= width - 1;
	}

	if (height < 0) {
  400d88:	2d00      	cmp	r5, #0
  400d8a:	db41      	blt.n	400e10 <gfx_generic_draw_filled_rect+0xa0>
		y -= height - 1;
	}

#ifdef CONF_GFX_USE_CLIPPING
	/* Nothing to do if entire rectangle is outside clipping region. */
	if ((x > gfx_max_x) || (y > gfx_max_y) ||
  400d8c:	4b32      	ldr	r3, [pc, #200]	; (400e58 <gfx_generic_draw_filled_rect+0xe8>)
  400d8e:	f9b3 6000 	ldrsh.w	r6, [r3]
  400d92:	4286      	cmp	r6, r0
  400d94:	db3a      	blt.n	400e0c <gfx_generic_draw_filled_rect+0x9c>
  400d96:	4b31      	ldr	r3, [pc, #196]	; (400e5c <gfx_generic_draw_filled_rect+0xec>)
  400d98:	f9b3 e000 	ldrsh.w	lr, [r3]
  400d9c:	458e      	cmp	lr, r1
  400d9e:	db35      	blt.n	400e0c <gfx_generic_draw_filled_rect+0x9c>
			((x + width) <= gfx_min_x) ||
  400da0:	4b2f      	ldr	r3, [pc, #188]	; (400e60 <gfx_generic_draw_filled_rect+0xf0>)
  400da2:	1902      	adds	r2, r0, r4
  400da4:	f9b3 3000 	ldrsh.w	r3, [r3]
	if ((x > gfx_max_x) || (y > gfx_max_y) ||
  400da8:	429a      	cmp	r2, r3
  400daa:	dd2f      	ble.n	400e0c <gfx_generic_draw_filled_rect+0x9c>
			((y + height) <= gfx_min_y)) {
  400dac:	f8df c0bc 	ldr.w	ip, [pc, #188]	; 400e6c <gfx_generic_draw_filled_rect+0xfc>
  400db0:	eb01 0a05 	add.w	sl, r1, r5
  400db4:	f9bc 9000 	ldrsh.w	r9, [ip]
			((x + width) <= gfx_min_x) ||
  400db8:	45ca      	cmp	sl, r9
  400dba:	dd27      	ble.n	400e0c <gfx_generic_draw_filled_rect+0x9c>
		return;
	}

	/* Clip if outside left X limit. */
	if (x < gfx_min_x) {
  400dbc:	4298      	cmp	r0, r3
  400dbe:	db3d      	blt.n	400e3c <gfx_generic_draw_filled_rect+0xcc>
  400dc0:	fa1f fc80 	uxth.w	ip, r0
		width -= gfx_min_x - x;
		x = gfx_min_x;
	}

	/* Clip if outside top Y limit. */
	if (y < gfx_min_y) {
  400dc4:	4549      	cmp	r1, r9
  400dc6:	db40      	blt.n	400e4a <gfx_generic_draw_filled_rect+0xda>
  400dc8:	fa1f f881 	uxth.w	r8, r1
		y = gfx_min_y;
	}
#endif

	/*  Compute bottom right point. */
	x2 = x + width - 1;
  400dcc:	f10c 32ff 	add.w	r2, ip, #4294967295
	y2 = y + height - 1;
  400dd0:	f108 33ff 	add.w	r3, r8, #4294967295
	x2 = x + width - 1;
  400dd4:	4422      	add	r2, r4
	y2 = y + height - 1;
  400dd6:	442b      	add	r3, r5
	x2 = x + width - 1;
  400dd8:	b212      	sxth	r2, r2
	y2 = y + height - 1;
  400dda:	b21b      	sxth	r3, r3

#ifdef CONF_GFX_USE_CLIPPING
	/* Clip if outside right X limit. */
	if (x2 > gfx_max_x) {
  400ddc:	4296      	cmp	r6, r2
  400dde:	da04      	bge.n	400dea <gfx_generic_draw_filled_rect+0x7a>
		x2 = gfx_max_x;
		width = x2 - x + 1;
  400de0:	1c74      	adds	r4, r6, #1
  400de2:	4632      	mov	r2, r6
  400de4:	eba4 040c 	sub.w	r4, r4, ip
  400de8:	b224      	sxth	r4, r4
	}

	/* Clip if outside bottom Y limit. */
	if (y2 > gfx_max_y) {
  400dea:	459e      	cmp	lr, r3
  400dec:	da05      	bge.n	400dfa <gfx_generic_draw_filled_rect+0x8a>
		y2 = gfx_max_y;
		height = y2 - y + 1;
  400dee:	f10e 0501 	add.w	r5, lr, #1
  400df2:	4673      	mov	r3, lr
  400df4:	eba5 0508 	sub.w	r5, r5, r8
  400df8:	b22d      	sxth	r5, r5
	}
#endif

	/* Set up draw area and duplicate pixel color until area is full. */
	gfx_set_limits(x, y, x2, y2);
  400dfa:	4e1a      	ldr	r6, [pc, #104]	; (400e64 <gfx_generic_draw_filled_rect+0xf4>)
  400dfc:	47b0      	blx	r6
	gfx_duplicate_pixel(color, (uint32_t)width * height);
  400dfe:	fb04 f105 	mul.w	r1, r4, r5
  400e02:	4638      	mov	r0, r7
  400e04:	4b18      	ldr	r3, [pc, #96]	; (400e68 <gfx_generic_draw_filled_rect+0xf8>)
}
  400e06:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	gfx_duplicate_pixel(color, (uint32_t)width * height);
  400e0a:	4718      	bx	r3
  400e0c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		height = -height;
  400e10:	b2ab      	uxth	r3, r5
		y -= height - 1;
  400e12:	3101      	adds	r1, #1
		height = -height;
  400e14:	425d      	negs	r5, r3
		y -= height - 1;
  400e16:	4419      	add	r1, r3
	if ((x > gfx_max_x) || (y > gfx_max_y) ||
  400e18:	4b0f      	ldr	r3, [pc, #60]	; (400e58 <gfx_generic_draw_filled_rect+0xe8>)
		height = -height;
  400e1a:	b22d      	sxth	r5, r5
	if ((x > gfx_max_x) || (y > gfx_max_y) ||
  400e1c:	f9b3 6000 	ldrsh.w	r6, [r3]
		y -= height - 1;
  400e20:	b209      	sxth	r1, r1
	if ((x > gfx_max_x) || (y > gfx_max_y) ||
  400e22:	4286      	cmp	r6, r0
  400e24:	dab7      	bge.n	400d96 <gfx_generic_draw_filled_rect+0x26>
  400e26:	e7f1      	b.n	400e0c <gfx_generic_draw_filled_rect+0x9c>
		width = -width;
  400e28:	b293      	uxth	r3, r2
		x -= width - 1;
  400e2a:	3001      	adds	r0, #1
	if (height < 0) {
  400e2c:	2d00      	cmp	r5, #0
		width = -width;
  400e2e:	f1c3 0400 	rsb	r4, r3, #0
		x -= width - 1;
  400e32:	4418      	add	r0, r3
		width = -width;
  400e34:	b224      	sxth	r4, r4
		x -= width - 1;
  400e36:	b200      	sxth	r0, r0
	if (height < 0) {
  400e38:	daa8      	bge.n	400d8c <gfx_generic_draw_filled_rect+0x1c>
  400e3a:	e7e9      	b.n	400e10 <gfx_generic_draw_filled_rect+0xa0>
		width -= gfx_min_x - x;
  400e3c:	fa1f fc83 	uxth.w	ip, r3
  400e40:	4618      	mov	r0, r3
  400e42:	eba2 040c 	sub.w	r4, r2, ip
  400e46:	b224      	sxth	r4, r4
  400e48:	e7bc      	b.n	400dc4 <gfx_generic_draw_filled_rect+0x54>
		height -= gfx_min_y - y;
  400e4a:	fa1f f889 	uxth.w	r8, r9
  400e4e:	4649      	mov	r1, r9
  400e50:	ebaa 0508 	sub.w	r5, sl, r8
  400e54:	b22d      	sxth	r5, r5
  400e56:	e7b9      	b.n	400dcc <gfx_generic_draw_filled_rect+0x5c>
  400e58:	20419404 	.word	0x20419404
  400e5c:	20419408 	.word	0x20419408
  400e60:	20419402 	.word	0x20419402
  400e64:	00401e89 	.word	0x00401e89
  400e68:	00401f09 	.word	0x00401f09
  400e6c:	20419406 	.word	0x20419406

00400e70 <gfx_ili9488_init>:
	pio_set(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
	LCD_MULTI_WD(us_data, size);
}

void gfx_ili9488_init(void)
{
  400e70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  400e74:	b086      	sub	sp, #24

	/* Initialize display parameter */
	g_ili9488_display_opt.ul_width= ILI9488_LCD_WIDTH;
	g_ili9488_display_opt.ul_height = ILI9488_LCD_HEIGHT;
	g_ili9488_display_opt.foreground_color= COLOR_WHITE;
	g_ili9488_display_opt.background_color = COLOR_BLACK;
  400e76:	2400      	movs	r4, #0
	gfx_width = ILI9488_LCD_WIDTH;
  400e78:	4d28      	ldr	r5, [pc, #160]	; (400f1c <gfx_ili9488_init+0xac>)
	g_ili9488_display_opt.foreground_color= COLOR_WHITE;
  400e7a:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
	gfx_height = ILI9488_LCD_HEIGHT;
  400e7e:	4e28      	ldr	r6, [pc, #160]	; (400f20 <gfx_ili9488_init+0xb0>)
	gfx_width = ILI9488_LCD_WIDTH;
  400e80:	f44f 78a0 	mov.w	r8, #320	; 0x140
	gfx_height = ILI9488_LCD_HEIGHT;
  400e84:	f44f 77f0 	mov.w	r7, #480	; 0x1e0
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  400e88:	f8df a0b4 	ldr.w	sl, [pc, #180]	; 400f40 <gfx_ili9488_init+0xd0>

	ili9488_init(&g_ili9488_display_opt);
  400e8c:	a802      	add	r0, sp, #8
  400e8e:	4b25      	ldr	r3, [pc, #148]	; (400f24 <gfx_ili9488_init+0xb4>)
	g_ili9488_display_opt.foreground_color= COLOR_WHITE;
  400e90:	9204      	str	r2, [sp, #16]

/* Define EBI access for ILI9488 16-bit System Interface.*/
#ifdef ILI9488_EBIMODE
	static inline void LCD_IR(uint8_t lcd_index)
	{
		*((volatile uint16_t *)(BOARD_ILI9488_ADDR)) = lcd_index; /* ILI9488 index register address */
  400e92:	f04f 49c6 	mov.w	r9, #1660944384	; 0x63000000
	gfx_width = ILI9488_LCD_WIDTH;
  400e96:	f8a5 8000 	strh.w	r8, [r5]
	g_ili9488_display_opt.background_color = COLOR_BLACK;
  400e9a:	9405      	str	r4, [sp, #20]
	g_ili9488_display_opt.ul_width= ILI9488_LCD_WIDTH;
  400e9c:	f8cd 8008 	str.w	r8, [sp, #8]
	gfx_height = ILI9488_LCD_HEIGHT;
  400ea0:	8037      	strh	r7, [r6, #0]
	g_ili9488_display_opt.ul_height = ILI9488_LCD_HEIGHT;
  400ea2:	9703      	str	r7, [sp, #12]
	ili9488_init(&g_ili9488_display_opt);
  400ea4:	4798      	blx	r3
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  400ea6:	4650      	mov	r0, sl
  400ea8:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  400eac:	4b1e      	ldr	r3, [pc, #120]	; (400f28 <gfx_ili9488_init+0xb8>)
  400eae:	4798      	blx	r3
  400eb0:	2353      	movs	r3, #83	; 0x53
	pio_set(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  400eb2:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  400eb6:	4650      	mov	r0, sl
  400eb8:	f8a9 3000 	strh.w	r3, [r9]
  400ebc:	4b1b      	ldr	r3, [pc, #108]	; (400f2c <gfx_ili9488_init+0xbc>)
  400ebe:	4798      	blx	r3
		*(volatile uint16_t *)(BOARD_ILI9488_ADDR) = lcd_data;
	}
	static inline void LCD_MULTI_WD(const uint16_t *lcd_data, uint32_t size)
	{
		while(size--) {
			*((volatile uint16_t *)(BOARD_ILI9488_ADDR)) = *lcd_data++;
  400ec0:	2224      	movs	r2, #36	; 0x24
	
	/* Attempt to make display brighter :( */ 
	ili9488_color_t param = 0x24;
	ili9488_write_register(ILI9488_CMD_WRITE_CTRL_DISPLAY, &param, 1); 
	ili9488_write_brightness(0xFFFF);
  400ec2:	f64f 70ff 	movw	r0, #65535	; 0xffff
  400ec6:	4b1a      	ldr	r3, [pc, #104]	; (400f30 <gfx_ili9488_init+0xc0>)
  400ec8:	f8a9 2000 	strh.w	r2, [r9]
  400ecc:	4798      	blx	r3

	ili9488_display_on();
  400ece:	4b19      	ldr	r3, [pc, #100]	; (400f34 <gfx_ili9488_init+0xc4>)
  400ed0:	4798      	blx	r3

	/* Set clipping area to whole screen initially */
	gfx_set_clipping(0, 0, gfx_width, gfx_height);
  400ed2:	f8df 9070 	ldr.w	r9, [pc, #112]	; 400f44 <gfx_ili9488_init+0xd4>
  400ed6:	4621      	mov	r1, r4
  400ed8:	f9b5 2000 	ldrsh.w	r2, [r5]
  400edc:	f9b6 3000 	ldrsh.w	r3, [r6]
  400ee0:	4620      	mov	r0, r4
  400ee2:	47c8      	blx	r9
	ili9488_set_orientation(flags);
  400ee4:	2002      	movs	r0, #2
  400ee6:	4b14      	ldr	r3, [pc, #80]	; (400f38 <gfx_ili9488_init+0xc8>)
  400ee8:	4798      	blx	r3
	gfx_set_clipping(0, 0, gfx_width - 1, gfx_height - 1);
  400eea:	4621      	mov	r1, r4
  400eec:	4620      	mov	r0, r4
  400eee:	f240 133f 	movw	r3, #319	; 0x13f
  400ef2:	f240 12df 	movw	r2, #479	; 0x1df
		gfx_width = ILI9488_SWITCH_XY_HEIGHT;
  400ef6:	802f      	strh	r7, [r5, #0]
		gfx_height = ILI9488_SWITCH_XY_WIDTH;
  400ef8:	f8a6 8000 	strh.w	r8, [r6]
	gfx_set_clipping(0, 0, gfx_width - 1, gfx_height - 1);
  400efc:	47c8      	blx	r9

	gfx_set_orientation(GFX_FLIP_Y);
	gfx_draw_filled_rect(0, 0, gfx_width, gfx_height, g_ili9488_display_opt.background_color);			
  400efe:	f9b5 2000 	ldrsh.w	r2, [r5]
  400f02:	4621      	mov	r1, r4
  400f04:	f8bd 5014 	ldrh.w	r5, [sp, #20]
  400f08:	4620      	mov	r0, r4
  400f0a:	f9b6 3000 	ldrsh.w	r3, [r6]
  400f0e:	4c0b      	ldr	r4, [pc, #44]	; (400f3c <gfx_ili9488_init+0xcc>)
  400f10:	9500      	str	r5, [sp, #0]
  400f12:	47a0      	blx	r4
}
  400f14:	b006      	add	sp, #24
  400f16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400f1a:	bf00      	nop
  400f1c:	20419400 	.word	0x20419400
  400f20:	2041940a 	.word	0x2041940a
  400f24:	00401d11 	.word	0x00401d11
  400f28:	004027a9 	.word	0x004027a9
  400f2c:	004027a5 	.word	0x004027a5
  400f30:	00401e55 	.word	0x00401e55
  400f34:	00401c59 	.word	0x00401c59
  400f38:	00401eb1 	.word	0x00401eb1
  400f3c:	00400d71 	.word	0x00400d71
  400f40:	400e1200 	.word	0x400e1200
  400f44:	00400d1d 	.word	0x00400d1d

00400f48 <lcd_init>:
#include "LCDLib.h"
#include "asf.h"

/*********************************** Public Functions Start ***********************************/
void lcd_init(void)
{
  400f48:	b510      	push	{r4, lr}
	gfx_init();
  400f4a:	4b03      	ldr	r3, [pc, #12]	; (400f58 <lcd_init+0x10>)
  400f4c:	4798      	blx	r3
	mxt_init();
  400f4e:	4b03      	ldr	r3, [pc, #12]	; (400f5c <lcd_init+0x14>)
}
  400f50:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	mxt_init();
  400f54:	4718      	bx	r3
  400f56:	bf00      	nop
  400f58:	00400e71 	.word	0x00400e71
  400f5c:	00400f61 	.word	0x00400f61

00400f60 <mxt_init>:
	else 
		return false; 
}

void mxt_init(void)
{
  400f60:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	enum status_code status;

	/* T8 configuration object data */
	uint8_t t8_object[] = {
  400f64:	4c57      	ldr	r4, [pc, #348]	; (4010c4 <mxt_init+0x164>)
{
  400f66:	b09f      	sub	sp, #124	; 0x7c
	mxt_write_config_reg(&device, mxt_get_object_address(&device,
			MXT_GEN_COMMANDPROCESSOR_T6, 0)
			+ MXT_GEN_COMMANDPROCESSOR_RESET, 0x01);

	/* Wait for the reset of the device to complete */
	delay_ms(MXT_RESET_TIME);
  400f68:	f8df 9190 	ldr.w	r9, [pc, #400]	; 4010fc <mxt_init+0x19c>
	uint8_t t9_object[] = {
  400f6c:	f104 050c 	add.w	r5, r4, #12
	uint8_t t8_object[] = {
  400f70:	ab06      	add	r3, sp, #24
	uint8_t t9_object[] = {
  400f72:	af15      	add	r7, sp, #84	; 0x54
	uint8_t t46_object[] = {
  400f74:	f104 0c30 	add.w	ip, r4, #48	; 0x30
  400f78:	46ee      	mov	lr, sp
	uint8_t t56_object[] = {
  400f7a:	ae0c      	add	r6, sp, #48	; 0x30
			MXT_GEN_POWERCONFIG_T7, 0) + 2, 0x4b);
	mxt_write_config_reg(&device, mxt_get_object_address(&device,
			MXT_GEN_POWERCONFIG_T7, 0) + 3, 0x84);

	// Write predefined configuration data to configuration objects 
	mxt_write_config_object(&device, mxt_get_object_address(&device,
  400f7c:	f8df 8180 	ldr.w	r8, [pc, #384]	; 401100 <mxt_init+0x1a0>
	uint8_t t8_object[] = {
  400f80:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
  400f84:	c303      	stmia	r3!, {r0, r1}
  400f86:	801a      	strh	r2, [r3, #0]
	uint8_t t56_object[] = {
  400f88:	343c      	adds	r4, #60	; 0x3c
	uint8_t t9_object[] = {
  400f8a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  400f8c:	c70f      	stmia	r7!, {r0, r1, r2, r3}
  400f8e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  400f90:	c70f      	stmia	r7!, {r0, r1, r2, r3}
	uint8_t t46_object[] = {
  400f92:	e89c 0007 	ldmia.w	ip, {r0, r1, r2}
	uint8_t t9_object[] = {
  400f96:	682b      	ldr	r3, [r5, #0]
	twihs_master_options_t twi_opt = {
  400f98:	2500      	movs	r5, #0
	uint8_t t46_object[] = {
  400f9a:	e8ae 0003 	stmia.w	lr!, {r0, r1}
	uint8_t t9_object[] = {
  400f9e:	603b      	str	r3, [r7, #0]
	twihs_master_options_t twi_opt = {
  400fa0:	274a      	movs	r7, #74	; 0x4a
	uint8_t t46_object[] = {
  400fa2:	f88e 2000 	strb.w	r2, [lr]
	twihs_master_options_t twi_opt = {
  400fa6:	f8df e15c 	ldr.w	lr, [pc, #348]	; 401104 <mxt_init+0x1a4>
	uint8_t t56_object[] = {
  400faa:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  400fac:	c60f      	stmia	r6!, {r0, r1, r2, r3}
  400fae:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  400fb0:	f8d4 c000 	ldr.w	ip, [r4]
	pio_configure(PIOD, PIO_INPUT, PIO_PD28, PIO_PULLUP);
  400fb4:	4c44      	ldr	r4, [pc, #272]	; (4010c8 <mxt_init+0x168>)
	twihs_master_options_t twi_opt = {
  400fb6:	f8cd e028 	str.w	lr, [sp, #40]	; 0x28
  400fba:	950b      	str	r5, [sp, #44]	; 0x2c
  400fbc:	9509      	str	r5, [sp, #36]	; 0x24
  400fbe:	f88d 702c 	strb.w	r7, [sp, #44]	; 0x2c
	uint8_t t56_object[] = {
  400fc2:	c60f      	stmia	r6!, {r0, r1, r2, r3}
	pio_configure(PIOD, PIO_INPUT, PIO_PD28, PIO_PULLUP);
  400fc4:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  400fc8:	2301      	movs	r3, #1
  400fca:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  400fce:	483f      	ldr	r0, [pc, #252]	; (4010cc <mxt_init+0x16c>)
	uint8_t t56_object[] = {
  400fd0:	f886 c000 	strb.w	ip, [r6]
	pio_configure(PIOD, PIO_INPUT, PIO_PD28, PIO_PULLUP);
  400fd4:	47a0      	blx	r4
typedef twihs_packet_t twihs_package_t;

static inline uint32_t twihs_master_setup(twihs_master_t p_twihs,
		twihs_master_options_t *p_opt)
{
	p_opt->master_clk = sysclk_get_peripheral_hz();
  400fd6:	4a3e      	ldr	r2, [pc, #248]	; (4010d0 <mxt_init+0x170>)
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400fd8:	2013      	movs	r0, #19
  400fda:	4b3e      	ldr	r3, [pc, #248]	; (4010d4 <mxt_init+0x174>)

	// Issue recalibration command to maXTouch device by writing a non-zero
	 // value to the calibrate register 
	mxt_write_config_reg(&device, mxt_get_object_address(&device, MXT_GEN_COMMANDPROCESSOR_T6, 0) + MXT_GEN_COMMANDPROCESSOR_CALIBRATE, 0x01); 
	
	delay_ms(100); 
  400fdc:	f44f 74af 	mov.w	r4, #350	; 0x15e
  400fe0:	9209      	str	r2, [sp, #36]	; 0x24
	p_opt->smbus      = 0;
  400fe2:	f88d 502d 	strb.w	r5, [sp, #45]	; 0x2d
  400fe6:	4798      	blx	r3
#endif		
	} else {
		// Do Nothing
	}
#endif
	return (twihs_master_init(p_twihs, p_opt));
  400fe8:	a909      	add	r1, sp, #36	; 0x24
  400fea:	4b3b      	ldr	r3, [pc, #236]	; (4010d8 <mxt_init+0x178>)
  400fec:	483b      	ldr	r0, [pc, #236]	; (4010dc <mxt_init+0x17c>)
  400fee:	4798      	blx	r3
	status = mxt_init_device(&device, MAXTOUCH_TWI_INTERFACE,
  400ff0:	4e3b      	ldr	r6, [pc, #236]	; (4010e0 <mxt_init+0x180>)
  400ff2:	237c      	movs	r3, #124	; 0x7c
  400ff4:	463a      	mov	r2, r7
  400ff6:	4939      	ldr	r1, [pc, #228]	; (4010dc <mxt_init+0x17c>)
  400ff8:	483a      	ldr	r0, [pc, #232]	; (4010e4 <mxt_init+0x184>)
  400ffa:	47b0      	blx	r6
	mxt_write_config_reg(&device, mxt_get_object_address(&device,
  400ffc:	4e3a      	ldr	r6, [pc, #232]	; (4010e8 <mxt_init+0x188>)
  400ffe:	462a      	mov	r2, r5
  401000:	2106      	movs	r1, #6
  401002:	4838      	ldr	r0, [pc, #224]	; (4010e4 <mxt_init+0x184>)
  401004:	4f39      	ldr	r7, [pc, #228]	; (4010ec <mxt_init+0x18c>)
  401006:	47b0      	blx	r6
  401008:	2201      	movs	r2, #1
  40100a:	4601      	mov	r1, r0
  40100c:	4835      	ldr	r0, [pc, #212]	; (4010e4 <mxt_init+0x184>)
  40100e:	47b8      	blx	r7
	delay_ms(MXT_RESET_TIME);
  401010:	4837      	ldr	r0, [pc, #220]	; (4010f0 <mxt_init+0x190>)
  401012:	47c8      	blx	r9
	mxt_write_config_reg(&device, mxt_get_object_address(&device,
  401014:	462a      	mov	r2, r5
  401016:	2107      	movs	r1, #7
  401018:	4832      	ldr	r0, [pc, #200]	; (4010e4 <mxt_init+0x184>)
  40101a:	47b0      	blx	r6
  40101c:	2220      	movs	r2, #32
  40101e:	4601      	mov	r1, r0
  401020:	4830      	ldr	r0, [pc, #192]	; (4010e4 <mxt_init+0x184>)
  401022:	47b8      	blx	r7
	mxt_write_config_reg(&device, mxt_get_object_address(&device,
  401024:	462a      	mov	r2, r5
  401026:	2107      	movs	r1, #7
  401028:	482e      	ldr	r0, [pc, #184]	; (4010e4 <mxt_init+0x184>)
  40102a:	47b0      	blx	r6
  40102c:	1c41      	adds	r1, r0, #1
  40102e:	2210      	movs	r2, #16
  401030:	482c      	ldr	r0, [pc, #176]	; (4010e4 <mxt_init+0x184>)
  401032:	b289      	uxth	r1, r1
  401034:	47b8      	blx	r7
	mxt_write_config_reg(&device, mxt_get_object_address(&device,
  401036:	462a      	mov	r2, r5
  401038:	2107      	movs	r1, #7
  40103a:	482a      	ldr	r0, [pc, #168]	; (4010e4 <mxt_init+0x184>)
  40103c:	47b0      	blx	r6
  40103e:	1c81      	adds	r1, r0, #2
  401040:	224b      	movs	r2, #75	; 0x4b
  401042:	4828      	ldr	r0, [pc, #160]	; (4010e4 <mxt_init+0x184>)
  401044:	b289      	uxth	r1, r1
  401046:	47b8      	blx	r7
	mxt_write_config_reg(&device, mxt_get_object_address(&device,
  401048:	462a      	mov	r2, r5
  40104a:	2107      	movs	r1, #7
  40104c:	4825      	ldr	r0, [pc, #148]	; (4010e4 <mxt_init+0x184>)
  40104e:	47b0      	blx	r6
  401050:	1cc1      	adds	r1, r0, #3
  401052:	2284      	movs	r2, #132	; 0x84
  401054:	4823      	ldr	r0, [pc, #140]	; (4010e4 <mxt_init+0x184>)
  401056:	b289      	uxth	r1, r1
  401058:	47b8      	blx	r7
	mxt_write_config_object(&device, mxt_get_object_address(&device,
  40105a:	462a      	mov	r2, r5
  40105c:	2108      	movs	r1, #8
  40105e:	4821      	ldr	r0, [pc, #132]	; (4010e4 <mxt_init+0x184>)
  401060:	47b0      	blx	r6
  401062:	aa06      	add	r2, sp, #24
  401064:	4601      	mov	r1, r0
  401066:	481f      	ldr	r0, [pc, #124]	; (4010e4 <mxt_init+0x184>)
  401068:	47c0      	blx	r8
	mxt_write_config_object(&device, mxt_get_object_address(&device,
  40106a:	462a      	mov	r2, r5
  40106c:	2109      	movs	r1, #9
  40106e:	481d      	ldr	r0, [pc, #116]	; (4010e4 <mxt_init+0x184>)
  401070:	47b0      	blx	r6
  401072:	aa15      	add	r2, sp, #84	; 0x54
  401074:	4601      	mov	r1, r0
  401076:	481b      	ldr	r0, [pc, #108]	; (4010e4 <mxt_init+0x184>)
  401078:	47c0      	blx	r8
	mxt_write_config_object(&device, mxt_get_object_address(&device,
  40107a:	462a      	mov	r2, r5
  40107c:	212e      	movs	r1, #46	; 0x2e
  40107e:	4819      	ldr	r0, [pc, #100]	; (4010e4 <mxt_init+0x184>)
  401080:	47b0      	blx	r6
  401082:	466a      	mov	r2, sp
  401084:	4601      	mov	r1, r0
  401086:	4817      	ldr	r0, [pc, #92]	; (4010e4 <mxt_init+0x184>)
  401088:	47c0      	blx	r8
	mxt_write_config_object(&device, mxt_get_object_address(&device,
  40108a:	462a      	mov	r2, r5
  40108c:	2138      	movs	r1, #56	; 0x38
  40108e:	4815      	ldr	r0, [pc, #84]	; (4010e4 <mxt_init+0x184>)
  401090:	47b0      	blx	r6
  401092:	aa0c      	add	r2, sp, #48	; 0x30
  401094:	4601      	mov	r1, r0
  401096:	4813      	ldr	r0, [pc, #76]	; (4010e4 <mxt_init+0x184>)
  401098:	47c0      	blx	r8
	mxt_write_config_reg(&device, mxt_get_object_address(&device, MXT_GEN_COMMANDPROCESSOR_T6, 0) + MXT_GEN_COMMANDPROCESSOR_CALIBRATE, 0x01); 
  40109a:	462a      	mov	r2, r5
  40109c:	2106      	movs	r1, #6
  40109e:	4811      	ldr	r0, [pc, #68]	; (4010e4 <mxt_init+0x184>)
  4010a0:	47b0      	blx	r6
  4010a2:	1c81      	adds	r1, r0, #2
  4010a4:	2201      	movs	r2, #1
  4010a6:	480f      	ldr	r0, [pc, #60]	; (4010e4 <mxt_init+0x184>)
  4010a8:	b289      	uxth	r1, r1
  4010aa:	4e12      	ldr	r6, [pc, #72]	; (4010f4 <mxt_init+0x194>)
  4010ac:	47b8      	blx	r7
	delay_ms(100); 
  4010ae:	4812      	ldr	r0, [pc, #72]	; (4010f8 <mxt_init+0x198>)
		mxt_read_message(data, &message);
  4010b0:	4d0c      	ldr	r5, [pc, #48]	; (4010e4 <mxt_init+0x184>)
	delay_ms(100); 
  4010b2:	47c8      	blx	r9
		mxt_read_message(data, &message);
  4010b4:	a903      	add	r1, sp, #12
  4010b6:	4628      	mov	r0, r5
  4010b8:	47b0      	blx	r6
	} while (--count);
  4010ba:	3c01      	subs	r4, #1
  4010bc:	d1fa      	bne.n	4010b4 <mxt_init+0x154>
	
	// Make chg pin high 
	mxt_make_highchg(&device);
}
  4010be:	b01f      	add	sp, #124	; 0x7c
  4010c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4010c4:	0040ac50 	.word	0x0040ac50
  4010c8:	004027ad 	.word	0x004027ad
  4010cc:	400e1400 	.word	0x400e1400
  4010d0:	08f0d180 	.word	0x08f0d180
  4010d4:	00402f39 	.word	0x00402f39
  4010d8:	004020c1 	.word	0x004020c1
  4010dc:	40018000 	.word	0x40018000
  4010e0:	00401491 	.word	0x00401491
  4010e4:	20405400 	.word	0x20405400
  4010e8:	00401895 	.word	0x00401895
  4010ec:	00401959 	.word	0x00401959
  4010f0:	003228d8 	.word	0x003228d8
  4010f4:	004019a1 	.word	0x004019a1
  4010f8:	004d2b25 	.word	0x004d2b25
  4010fc:	20400001 	.word	0x20400001
  401100:	004018dd 	.word	0x004018dd
  401104:	00061a80 	.word	0x00061a80

00401108 <Vocoder_init>:
COMPILER_ALIGNED(WIN_SIZE) static float shift_envelope[WIN_SIZE];
extern float envelope_filter[];
extern uint32_t envelope_filter_length;

void Vocoder_init(void)
{
  401108:	b570      	push	{r4, r5, r6, lr}
  40110a:	f44f 5580 	mov.w	r5, #4096	; 0x1000
  40110e:	4c16      	ldr	r4, [pc, #88]	; (401168 <Vocoder_init+0x60>)
  401110:	2100      	movs	r1, #0
  401112:	4816      	ldr	r0, [pc, #88]	; (40116c <Vocoder_init+0x64>)
  401114:	462a      	mov	r2, r5
  401116:	f44f 5600 	mov.w	r6, #8192	; 0x2000
  40111a:	47a0      	blx	r4
  40111c:	462a      	mov	r2, r5
  40111e:	2100      	movs	r1, #0
  401120:	4813      	ldr	r0, [pc, #76]	; (401170 <Vocoder_init+0x68>)
  401122:	47a0      	blx	r4
  401124:	462a      	mov	r2, r5
  401126:	2100      	movs	r1, #0
  401128:	4812      	ldr	r0, [pc, #72]	; (401174 <Vocoder_init+0x6c>)
  40112a:	47a0      	blx	r4
  40112c:	f44f 6500 	mov.w	r5, #2048	; 0x800
  401130:	4632      	mov	r2, r6
  401132:	2100      	movs	r1, #0
  401134:	4810      	ldr	r0, [pc, #64]	; (401178 <Vocoder_init+0x70>)
  401136:	47a0      	blx	r4
  401138:	4632      	mov	r2, r6
  40113a:	2100      	movs	r1, #0
  40113c:	480f      	ldr	r0, [pc, #60]	; (40117c <Vocoder_init+0x74>)
  40113e:	47a0      	blx	r4
  401140:	462a      	mov	r2, r5
  401142:	2100      	movs	r1, #0
  401144:	480e      	ldr	r0, [pc, #56]	; (401180 <Vocoder_init+0x78>)
  401146:	47a0      	blx	r4
  401148:	462a      	mov	r2, r5
  40114a:	2100      	movs	r1, #0
  40114c:	480d      	ldr	r0, [pc, #52]	; (401184 <Vocoder_init+0x7c>)
  40114e:	47a0      	blx	r4
		prevAnaPhase[i] = 0.0f;
		gSumPhase[i] = 0.0f;
	}
	
	/* Create ifft hanning window with appropriate scaling factor */ 
	arm_scale_f32((float *)hanning, ifft_scale, scaled_hanning, WIN_SIZE);
  401150:	4c0d      	ldr	r4, [pc, #52]	; (401188 <Vocoder_init+0x80>)
  401152:	f44f 6380 	mov.w	r3, #1024	; 0x400
  401156:	4a0d      	ldr	r2, [pc, #52]	; (40118c <Vocoder_init+0x84>)
  401158:	46a4      	mov	ip, r4
  40115a:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
  40115e:	480c      	ldr	r0, [pc, #48]	; (401190 <Vocoder_init+0x88>)
}
  401160:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	arm_scale_f32((float *)hanning, ifft_scale, scaled_hanning, WIN_SIZE);
  401164:	4760      	bx	ip
  401166:	bf00      	nop
  401168:	00408555 	.word	0x00408555
  40116c:	20405800 	.word	0x20405800
  401170:	20409000 	.word	0x20409000
  401174:	2040a000 	.word	0x2040a000
  401178:	20419800 	.word	0x20419800
  40117c:	20406800 	.word	0x20406800
  401180:	2040c000 	.word	0x2040c000
  401184:	20408800 	.word	0x20408800
  401188:	00406b69 	.word	0x00406b69
  40118c:	2040c800 	.word	0x2040c800
  401190:	0040b000 	.word	0x0040b000

00401194 <pitch_shift_do>:
{
	return (inPhase - (float)(round(inPhase*OneOverTwoPi)) * TwoPi); 
}

void pitch_shift_do(float shift_amount, cvec_t *mags_and_phases)
{
  401194:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401198:	4d48      	ldr	r5, [pc, #288]	; (4012bc <pitch_shift_do+0x128>)
  40119a:	460e      	mov	r6, r1
  40119c:	f8df b150 	ldr.w	fp, [pc, #336]	; 4012f0 <pitch_shift_do+0x15c>
	float tmp; 
	uint32_t k, target;
	/* ***************** ANALYSIS ******************* */
	/* this is the analysis step */
	for (k = 0; k < WIN_SIZE_D2; k++) {
  4011a0:	2400      	movs	r4, #0
{
  4011a2:	46aa      	mov	sl, r5
  4011a4:	f8df 914c 	ldr.w	r9, [pc, #332]	; 4012f4 <pitch_shift_do+0x160>
  4011a8:	f8df 814c 	ldr.w	r8, [pc, #332]	; 4012f8 <pitch_shift_do+0x164>
  4011ac:	4f44      	ldr	r7, [pc, #272]	; (4012c0 <pitch_shift_do+0x12c>)
  4011ae:	ed2d 8b08 	vpush	{d8-d11}
  4011b2:	ee09 0a10 	vmov	s18, r0
		/* compute phase difference */
		tmp = mags_and_phases->phas[k] - prevAnaPhase[k]; 
			
		/* subtract expected phase difference */
		tmp -= (float)k * expct; 
  4011b6:	eddf ba43 	vldr	s23, [pc, #268]	; 4012c4 <pitch_shift_do+0x130>
	return (inPhase - (float)(round(inPhase*OneOverTwoPi)) * TwoPi); 
  4011ba:	ed9f ba43 	vldr	s22, [pc, #268]	; 4012c8 <pitch_shift_do+0x134>
  4011be:	eddf aa43 	vldr	s21, [pc, #268]	; 4012cc <pitch_shift_do+0x138>

		// get deviation from bin frequency from the +/- Pi interval
		tmp = Overlap_x_OneOverTwoPi*tmp;
		
		// compute the k-th partials' true frequency 
		tmp = ((float)k + tmp)*freqPerBin;
  4011c2:	ed9f aa43 	vldr	s20, [pc, #268]	; 4012d0 <pitch_shift_do+0x13c>
  4011c6:	eddf 9a43 	vldr	s19, [pc, #268]	; 4012d4 <pitch_shift_do+0x140>
		tmp = mags_and_phases->phas[k] - prevAnaPhase[k]; 
  4011ca:	68b3      	ldr	r3, [r6, #8]
		tmp -= (float)k * expct; 
  4011cc:	ee07 4a90 	vmov	s15, r4
		tmp = mags_and_phases->phas[k] - prevAnaPhase[k]; 
  4011d0:	eb03 0384 	add.w	r3, r3, r4, lsl #2
		tmp -= (float)k * expct; 
  4011d4:	eef8 8ae7 	vcvt.f32.s32	s17, s15
		tmp = mags_and_phases->phas[k] - prevAnaPhase[k]; 
  4011d8:	ecfb 7a01 	vldmia	fp!, {s15}
	for (k = 0; k < WIN_SIZE_D2; k++) {
  4011dc:	3401      	adds	r4, #1
		tmp = mags_and_phases->phas[k] - prevAnaPhase[k]; 
  4011de:	ed93 8a00 	vldr	s16, [r3]
  4011e2:	ee38 8a67 	vsub.f32	s16, s16, s15
		tmp -= (float)k * expct; 
  4011e6:	eea8 8aeb 	vfms.f32	s16, s17, s23
	return (inPhase - (float)(round(inPhase*OneOverTwoPi)) * TwoPi); 
  4011ea:	ee68 7a0b 	vmul.f32	s15, s16, s22
  4011ee:	ee17 0a90 	vmov	r0, s15
  4011f2:	47c8      	blx	r9
  4011f4:	47c0      	blx	r8
  4011f6:	47b8      	blx	r7
  4011f8:	ee07 0a90 	vmov	s15, r0
	for (k = 0; k < WIN_SIZE_D2; k++) {
  4011fc:	f5b4 7f00 	cmp.w	r4, #512	; 0x200
	return (inPhase - (float)(round(inPhase*OneOverTwoPi)) * TwoPi); 
  401200:	eea7 8aea 	vfms.f32	s16, s15, s21
		tmp = ((float)k + tmp)*freqPerBin;
  401204:	eee8 8a0a 	vfma.f32	s17, s16, s20
  401208:	ee68 8aa9 	vmul.f32	s17, s17, s19
		
		/* store true frequency in analysis arrays */
		gAnaFreq[k] = tmp; 
  40120c:	ecea 8a01 	vstmia	sl!, {s17}
	for (k = 0; k < WIN_SIZE_D2; k++) {
  401210:	d1db      	bne.n	4011ca <pitch_shift_do+0x36>
	}
	
	/* ***************** PROCESSING ******************* */
	arm_fill_f32(0.0f, gSynFreq, WIN_SIZE_D2); 
  401212:	4622      	mov	r2, r4
  401214:	4930      	ldr	r1, [pc, #192]	; (4012d8 <pitch_shift_do+0x144>)
  401216:	2000      	movs	r0, #0
  401218:	4b30      	ldr	r3, [pc, #192]	; (4012dc <pitch_shift_do+0x148>)
  40121a:	4798      	blx	r3
	arm_scale_f32(gAnaFreq, shift_amount, gAnaFreq, WIN_SIZE_D2);
  40121c:	4a27      	ldr	r2, [pc, #156]	; (4012bc <pitch_shift_do+0x128>)
  40121e:	4623      	mov	r3, r4
  401220:	ee19 1a10 	vmov	r1, s18
  401224:	4c2e      	ldr	r4, [pc, #184]	; (4012e0 <pitch_shift_do+0x14c>)
  401226:	4610      	mov	r0, r2
  401228:	47a0      	blx	r4
  40122a:	4f2b      	ldr	r7, [pc, #172]	; (4012d8 <pitch_shift_do+0x144>)
	for (k = 0; k < WIN_SIZE_D2; k++) 
  40122c:	2200      	movs	r2, #0
		{
#ifdef AUTOTUNE
			gSynMagn[target] += mags_and_phases->norm[k] ;
			gSynFreq[target] = gAnaFreq[k];
#else 
			gSynMagn[target] += mags_and_phases->norm[k];// * mags_and_phases->env[target] / mags_and_phases->env[k];
  40122e:	4c2d      	ldr	r4, [pc, #180]	; (4012e4 <pitch_shift_do+0x150>)
		target = (float)k * shift_amount; 
  401230:	ee07 2a90 	vmov	s15, r2
  401234:	eef8 7ae7 	vcvt.f32.s32	s15, s15
  401238:	ee67 7a89 	vmul.f32	s15, s15, s18
  40123c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
  401240:	ee17 3a90 	vmov	r3, s15
			gSynMagn[target] += mags_and_phases->norm[k];// * mags_and_phases->env[target] / mags_and_phases->env[k];
  401244:	0099      	lsls	r1, r3, #2
		if (target <= WIN_SIZE_D2) 
  401246:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
			gSynMagn[target] += mags_and_phases->norm[k];// * mags_and_phases->env[target] / mags_and_phases->env[k];
  40124a:	eb04 0301 	add.w	r3, r4, r1
			gSynFreq[target] = gAnaFreq[k]; //  * shift_amount;
  40124e:	4439      	add	r1, r7
		if (target <= WIN_SIZE_D2) 
  401250:	d80e      	bhi.n	401270 <pitch_shift_do+0xdc>
			gSynMagn[target] += mags_and_phases->norm[k];// * mags_and_phases->env[target] / mags_and_phases->env[k];
  401252:	6870      	ldr	r0, [r6, #4]
  401254:	ed93 7a00 	vldr	s14, [r3]
  401258:	eb00 0082 	add.w	r0, r0, r2, lsl #2
			gSynFreq[target] = gAnaFreq[k]; //  * shift_amount;
  40125c:	f8d5 e000 	ldr.w	lr, [r5]
			gSynMagn[target] += mags_and_phases->norm[k];// * mags_and_phases->env[target] / mags_and_phases->env[k];
  401260:	edd0 7a00 	vldr	s15, [r0]
			gSynFreq[target] = gAnaFreq[k]; //  * shift_amount;
  401264:	f8c1 e000 	str.w	lr, [r1]
			gSynMagn[target] += mags_and_phases->norm[k];// * mags_and_phases->env[target] / mags_and_phases->env[k];
  401268:	ee77 7a87 	vadd.f32	s15, s15, s14
  40126c:	edc3 7a00 	vstr	s15, [r3]
	for (k = 0; k < WIN_SIZE_D2; k++) 
  401270:	3201      	adds	r2, #1
  401272:	3504      	adds	r5, #4
  401274:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  401278:	d1da      	bne.n	401230 <pitch_shift_do+0x9c>
  40127a:	4917      	ldr	r1, [pc, #92]	; (4012d8 <pitch_shift_do+0x144>)
  40127c:	2300      	movs	r3, #0
  40127e:	4a1a      	ldr	r2, [pc, #104]	; (4012e8 <pitch_shift_do+0x154>)
	/* ***************** SYNTHESIS ******************* */
	/* this is the synthesis step */
	for (k = 0; k < WIN_SIZE_D2; k++) 
	{
		// subtract bin mid frequency from true frequency from synthesis arrays 
		tmp = gSynFreq[k] - (float)k * freqPerBin;
  401280:	ed9f 5a14 	vldr	s10, [pc, #80]	; 4012d4 <pitch_shift_do+0x140>

		// add the overlap phase advance back in 
		tmp += (float)k * expct; 

		// accumulate delta phase to get bin phase 
		gSumPhase[k] += tmp;
  401284:	eddf 5a0f 	vldr	s11, [pc, #60]	; 4012c4 <pitch_shift_do+0x130>
  401288:	ed9f 6a18 	vldr	s12, [pc, #96]	; 4012ec <pitch_shift_do+0x158>
		tmp = gSynFreq[k] - (float)k * freqPerBin;
  40128c:	ee07 3a90 	vmov	s15, r3
  401290:	ecb1 7a01 	vldmia	r1!, {s14}
	for (k = 0; k < WIN_SIZE_D2; k++) 
  401294:	3301      	adds	r3, #1
		tmp = gSynFreq[k] - (float)k * freqPerBin;
  401296:	eef8 6ae7 	vcvt.f32.s32	s13, s15
		gSumPhase[k] += tmp;
  40129a:	edd2 7a00 	vldr	s15, [r2]
	for (k = 0; k < WIN_SIZE_D2; k++) 
  40129e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
		tmp = gSynFreq[k] - (float)k * freqPerBin;
  4012a2:	eea6 7ac5 	vfms.f32	s14, s13, s10
		gSumPhase[k] += tmp;
  4012a6:	eee6 7aa5 	vfma.f32	s15, s13, s11
  4012aa:	eee7 7a06 	vfma.f32	s15, s14, s12
  4012ae:	ece2 7a01 	vstmia	r2!, {s15}
	for (k = 0; k < WIN_SIZE_D2; k++) 
  4012b2:	d1eb      	bne.n	40128c <pitch_shift_do+0xf8>
	}
}
  4012b4:	ecbd 8b08 	vpop	{d8-d11}
  4012b8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4012bc:	20405800 	.word	0x20405800
  4012c0:	00407d1d 	.word	0x00407d1d
  4012c4:	3fc90fdb 	.word	0x3fc90fdb
  4012c8:	3e22f983 	.word	0x3e22f983
  4012cc:	40c90fdb 	.word	0x40c90fdb
  4012d0:	3f22f983 	.word	0x3f22f983
  4012d4:	41b5a400 	.word	0x41b5a400
  4012d8:	20409000 	.word	0x20409000
  4012dc:	004056f9 	.word	0x004056f9
  4012e0:	00406b69 	.word	0x00406b69
  4012e4:	2040a000 	.word	0x2040a000
  4012e8:	20408800 	.word	0x20408800
  4012ec:	3d8daf9c 	.word	0x3d8daf9c
  4012f0:	2040c000 	.word	0x2040c000
  4012f4:	00407851 	.word	0x00407851
  4012f8:	00407435 	.word	0x00407435

004012fc <get_harmonized_output>:

void get_harmonized_output(float * outData, cvec_t *mags_and_phases, arm_rfft_fast_instance_f32 *fftInstance)
{
  4012fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	uint32_t k; 
	float sin_value, cos_value;

	/* calculate shift envelope -- todo: try different filter cutoffs */ 
	arm_conv_f32(gSynMagn, WIN_SIZE_D2, (float *)envelope_filter, envelope_filter_length, shift_envelope);
  401300:	4c4b      	ldr	r4, [pc, #300]	; (401430 <get_harmonized_output+0x134>)
{
  401302:	4688      	mov	r8, r1
	arm_conv_f32(gSynMagn, WIN_SIZE_D2, (float *)envelope_filter, envelope_filter_length, shift_envelope);
  401304:	4d4b      	ldr	r5, [pc, #300]	; (401434 <get_harmonized_output+0x138>)
  401306:	4e4c      	ldr	r6, [pc, #304]	; (401438 <get_harmonized_output+0x13c>)
  401308:	f8df a178 	ldr.w	sl, [pc, #376]	; 401484 <get_harmonized_output+0x188>
  40130c:	f8df 9178 	ldr.w	r9, [pc, #376]	; 401488 <get_harmonized_output+0x18c>
{
  401310:	ed2d 8b04 	vpush	{d8-d9}
  401314:	b089      	sub	sp, #36	; 0x24
	arm_conv_f32(gSynMagn, WIN_SIZE_D2, (float *)envelope_filter, envelope_filter_length, shift_envelope);
  401316:	6823      	ldr	r3, [r4, #0]
	//arm_scale_f32(gSynMagn, 2.0f, gSynMagn, WIN_SIZE_D2); // scaling... basically volume of harmonizer... can control this with a knob!!!
	arm_mult_f32(gSynMagn, mags_and_phases->env, gSynMagn, WIN_SIZE_D2); // scaling from original envelope
	for (k = 0; k < WIN_SIZE_D2; k++)
	{
		/* scale by synth envelope - adding small term to avoid dividing by zero */ 
		gSynMagn[k] /= (shift_env[k] + 0.000001f); //Abs(mags_and_phases->env[k] - shift_env[k]) / shift_env[k];  //Abs(2.0f*mags_and_phases->env[k] - shift_env[k]) / shift_env[k];
  401318:	eddf 9a48 	vldr	s19, [pc, #288]	; 40143c <get_harmonized_output+0x140>
{
  40131c:	9003      	str	r0, [sp, #12]
  40131e:	9104      	str	r1, [sp, #16]
	arm_conv_f32(gSynMagn, WIN_SIZE_D2, (float *)envelope_filter, envelope_filter_length, shift_envelope);
  401320:	f44f 7100 	mov.w	r1, #512	; 0x200
{
  401324:	9205      	str	r2, [sp, #20]
	arm_conv_f32(gSynMagn, WIN_SIZE_D2, (float *)envelope_filter, envelope_filter_length, shift_envelope);
  401326:	9500      	str	r5, [sp, #0]
  401328:	4a45      	ldr	r2, [pc, #276]	; (401440 <get_harmonized_output+0x144>)
  40132a:	4846      	ldr	r0, [pc, #280]	; (401444 <get_harmonized_output+0x148>)
  40132c:	47b0      	blx	r6
	float *shift_env = &shift_envelope[envelope_filter_length>>1];
  40132e:	6827      	ldr	r7, [r4, #0]
  401330:	4c44      	ldr	r4, [pc, #272]	; (401444 <get_harmonized_output+0x148>)
	arm_mult_f32(gSynMagn, mags_and_phases->env, gSynMagn, WIN_SIZE_D2); // scaling from original envelope
  401332:	f44f 7300 	mov.w	r3, #512	; 0x200
	float *shift_env = &shift_envelope[envelope_filter_length>>1];
  401336:	087f      	lsrs	r7, r7, #1
	arm_mult_f32(gSynMagn, mags_and_phases->env, gSynMagn, WIN_SIZE_D2); // scaling from original envelope
  401338:	f8d8 100c 	ldr.w	r1, [r8, #12]
  40133c:	4622      	mov	r2, r4
  40133e:	4620      	mov	r0, r4
	float *shift_env = &shift_envelope[envelope_filter_length>>1];
  401340:	eb05 0787 	add.w	r7, r5, r7, lsl #2
	arm_mult_f32(gSynMagn, mags_and_phases->env, gSynMagn, WIN_SIZE_D2); // scaling from original envelope
  401344:	4d40      	ldr	r5, [pc, #256]	; (401448 <get_harmonized_output+0x14c>)
  401346:	47a8      	blx	r5
  401348:	f504 6b00 	add.w	fp, r4, #2048	; 0x800
  40134c:	4e3f      	ldr	r6, [pc, #252]	; (40144c <get_harmonized_output+0x150>)
	return (inPhase - (float)(round(inPhase*OneOverTwoPi)) * TwoPi); 
  40134e:	ed9f 9a40 	vldr	s18, [pc, #256]	; 401450 <get_harmonized_output+0x154>
  401352:	eddf 8a40 	vldr	s17, [pc, #256]	; 401454 <get_harmonized_output+0x158>
  401356:	f8df 8134 	ldr.w	r8, [pc, #308]	; 40148c <get_harmonized_output+0x190>
  40135a:	4d3f      	ldr	r5, [pc, #252]	; (401458 <get_harmonized_output+0x15c>)
				
		/* Get real and imag part and interleave */ 
		gSumPhase[k] = princarg(gSumPhase[k]); 
  40135c:	ed96 8a00 	vldr	s16, [r6]
  401360:	3508      	adds	r5, #8
		gSynMagn[k] /= (shift_env[k] + 0.000001f); //Abs(mags_and_phases->env[k] - shift_env[k]) / shift_env[k];  //Abs(2.0f*mags_and_phases->env[k] - shift_env[k]) / shift_env[k];
  401362:	ecf7 7a01 	vldmia	r7!, {s15}
	return (inPhase - (float)(round(inPhase*OneOverTwoPi)) * TwoPi); 
  401366:	ee28 7a09 	vmul.f32	s14, s16, s18
		gSynMagn[k] /= (shift_env[k] + 0.000001f); //Abs(mags_and_phases->env[k] - shift_env[k]) / shift_env[k];  //Abs(2.0f*mags_and_phases->env[k] - shift_env[k]) / shift_env[k];
  40136a:	edd4 6a00 	vldr	s13, [r4]
  40136e:	ee77 7aa9 	vadd.f32	s15, s15, s19
	return (inPhase - (float)(round(inPhase*OneOverTwoPi)) * TwoPi); 
  401372:	4b3a      	ldr	r3, [pc, #232]	; (40145c <get_harmonized_output+0x160>)
  401374:	ee17 0a10 	vmov	r0, s14
		gSynMagn[k] /= (shift_env[k] + 0.000001f); //Abs(mags_and_phases->env[k] - shift_env[k]) / shift_env[k];  //Abs(2.0f*mags_and_phases->env[k] - shift_env[k]) / shift_env[k];
  401378:	ee86 7aa7 	vdiv.f32	s14, s13, s15
  40137c:	ed84 7a00 	vstr	s14, [r4]
	return (inPhase - (float)(round(inPhase*OneOverTwoPi)) * TwoPi); 
  401380:	4798      	blx	r3
  401382:	47d0      	blx	sl
  401384:	47c8      	blx	r9
  401386:	eef0 7a48 	vmov.f32	s15, s16
  40138a:	ee07 0a10 	vmov	s14, r0
		arm_sin_cos_f32(gSumPhase[k], &sin_value, &cos_value);
  40138e:	aa07      	add	r2, sp, #28
  401390:	a906      	add	r1, sp, #24
	return (inPhase - (float)(round(inPhase*OneOverTwoPi)) * TwoPi); 
  401392:	eee7 7a68 	vfms.f32	s15, s14, s17
		arm_sin_cos_f32(gSumPhase[k], &sin_value, &cos_value);
  401396:	ee17 0a90 	vmov	r0, s15
		gSumPhase[k] = princarg(gSumPhase[k]); 
  40139a:	ece6 7a01 	vstmia	r6!, {s15}
		arm_sin_cos_f32(gSumPhase[k], &sin_value, &cos_value);
  40139e:	47c0      	blx	r8
		gFFTworksp[2*k] = gSynMagn[k]*cos_value;
  4013a0:	ecf4 7a01 	vldmia	r4!, {s15}
  4013a4:	eddd 6a07 	vldr	s13, [sp, #28]
		gFFTworksp[2*k+1] = gSynMagn[k]*sin_value;
  4013a8:	ed9d 7a06 	vldr	s14, [sp, #24]
	for (k = 0; k < WIN_SIZE_D2; k++)
  4013ac:	45a3      	cmp	fp, r4
		gFFTworksp[2*k] = gSynMagn[k]*cos_value;
  4013ae:	ee66 6aa7 	vmul.f32	s13, s13, s15
		gFFTworksp[2*k+1] = gSynMagn[k]*sin_value;
  4013b2:	ee67 7a27 	vmul.f32	s15, s14, s15
		gFFTworksp[2*k] = gSynMagn[k]*cos_value;
  4013b6:	ed45 6a02 	vstr	s13, [r5, #-8]
		gFFTworksp[2*k+1] = gSynMagn[k]*sin_value;
  4013ba:	ed45 7a01 	vstr	s15, [r5, #-4]
	for (k = 0; k < WIN_SIZE_D2; k++)
  4013be:	d1cd      	bne.n	40135c <get_harmonized_output+0x60>
	}

	/* do inverse transform */
	arm_rfft_fast_f32(fftInstance, gFFTworksp, ifft_real_values, 1);
  4013c0:	9805      	ldr	r0, [sp, #20]
  4013c2:	2301      	movs	r3, #1
  4013c4:	4a26      	ldr	r2, [pc, #152]	; (401460 <get_harmonized_output+0x164>)
  4013c6:	4924      	ldr	r1, [pc, #144]	; (401458 <get_harmonized_output+0x15c>)
  4013c8:	4c26      	ldr	r4, [pc, #152]	; (401464 <get_harmonized_output+0x168>)
  4013ca:	47a0      	blx	r4
	
	arm_scale_f32(ifft_real_values, 4.0f, ifft_real_values, WIN_SIZE); 
  4013cc:	4a24      	ldr	r2, [pc, #144]	; (401460 <get_harmonized_output+0x164>)
  4013ce:	f44f 6380 	mov.w	r3, #1024	; 0x400
  4013d2:	f04f 4181 	mov.w	r1, #1082130432	; 0x40800000
  4013d6:	4610      	mov	r0, r2
  4013d8:	4c23      	ldr	r4, [pc, #140]	; (401468 <get_harmonized_output+0x16c>)
  4013da:	47a0      	blx	r4
	/* Window and overlap & add */ 
	arm_mult_f32(scaled_hanning, ifft_real_values, ifft_real_values, WIN_SIZE);
  4013dc:	4a20      	ldr	r2, [pc, #128]	; (401460 <get_harmonized_output+0x164>)
  4013de:	f44f 6380 	mov.w	r3, #1024	; 0x400
  4013e2:	4822      	ldr	r0, [pc, #136]	; (40146c <get_harmonized_output+0x170>)
  4013e4:	4611      	mov	r1, r2
  4013e6:	4d18      	ldr	r5, [pc, #96]	; (401448 <get_harmonized_output+0x14c>)
  4013e8:	47a8      	blx	r5
 	arm_add_f32(gOutputAccum, ifft_real_values, gOutputAccum, WIN_SIZE);
  4013ea:	4a21      	ldr	r2, [pc, #132]	; (401470 <get_harmonized_output+0x174>)
  4013ec:	f44f 6380 	mov.w	r3, #1024	; 0x400
  4013f0:	491b      	ldr	r1, [pc, #108]	; (401460 <get_harmonized_output+0x164>)
  4013f2:	4610      	mov	r0, r2
  4013f4:	4d1f      	ldr	r5, [pc, #124]	; (401474 <get_harmonized_output+0x178>)
  4013f6:	47a8      	blx	r5
	
		
	/* Copy data to output buffer */ 
	arm_copy_f32(gOutputAccum, outData, STEP_SIZE);
  4013f8:	4c1f      	ldr	r4, [pc, #124]	; (401478 <get_harmonized_output+0x17c>)
  4013fa:	9903      	ldr	r1, [sp, #12]
  4013fc:	f44f 7280 	mov.w	r2, #256	; 0x100
  401400:	481b      	ldr	r0, [pc, #108]	; (401470 <get_harmonized_output+0x174>)
  401402:	47a0      	blx	r4
		
	/* shift accumulator */
	arm_copy_f32(&gOutputAccum[STEP_SIZE], gOutputAccum, WIN_SIZE);
  401404:	491a      	ldr	r1, [pc, #104]	; (401470 <get_harmonized_output+0x174>)
  401406:	f44f 6280 	mov.w	r2, #1024	; 0x400
  40140a:	1888      	adds	r0, r1, r2
  40140c:	47a0      	blx	r4
	
	/* zero out synthesis mags */ 
	arm_fill_f32(0.0f, gSynMagn, WIN_SIZE_D2); 
  40140e:	f44f 7200 	mov.w	r2, #512	; 0x200
  401412:	490c      	ldr	r1, [pc, #48]	; (401444 <get_harmonized_output+0x148>)
  401414:	2000      	movs	r0, #0
  401416:	4b19      	ldr	r3, [pc, #100]	; (40147c <get_harmonized_output+0x180>)
  401418:	4798      	blx	r3
	
	/* Save previous phases */ 
	arm_copy_f32(mags_and_phases->phas, prevAnaPhase, WIN_SIZE_D2); 	
  40141a:	9b04      	ldr	r3, [sp, #16]
  40141c:	f44f 7200 	mov.w	r2, #512	; 0x200
  401420:	4917      	ldr	r1, [pc, #92]	; (401480 <get_harmonized_output+0x184>)
  401422:	6898      	ldr	r0, [r3, #8]
  401424:	47a0      	blx	r4
  401426:	b009      	add	sp, #36	; 0x24
  401428:	ecbd 8b04 	vpop	{d8-d9}
  40142c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401430:	20400074 	.word	0x20400074
  401434:	2040d800 	.word	0x2040d800
  401438:	004064a9 	.word	0x004064a9
  40143c:	358637bd 	.word	0x358637bd
  401440:	20400040 	.word	0x20400040
  401444:	2040a000 	.word	0x2040a000
  401448:	00406bd5 	.word	0x00406bd5
  40144c:	20408800 	.word	0x20408800
  401450:	3e22f983 	.word	0x3e22f983
  401454:	40c90fdb 	.word	0x40c90fdb
  401458:	20419800 	.word	0x20419800
  40145c:	00407851 	.word	0x00407851
  401460:	2040b000 	.word	0x2040b000
  401464:	00405b61 	.word	0x00405b61
  401468:	00406b69 	.word	0x00406b69
  40146c:	2040c800 	.word	0x2040c800
  401470:	20406800 	.word	0x20406800
  401474:	00406c65 	.word	0x00406c65
  401478:	00405729 	.word	0x00405729
  40147c:	004056f9 	.word	0x004056f9
  401480:	2040c000 	.word	0x2040c000
  401484:	00407435 	.word	0x00407435
  401488:	00407d1d 	.word	0x00407d1d
  40148c:	00405935 	.word	0x00405935

00401490 <mxt_init_device>:
 * \param chgpin IOPORT pin instance attached to the maXTouch device's /CHG pin
 * \return Operation result status code
 */
status_code_t mxt_init_device(struct mxt_device *device,
		twihs_master_t interface, uint8_t chip_adr, uint32_t chgpin)
{
  401490:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401494:	4604      	mov	r4, r0

	/* Set TWI interface, TWI address and CHG-pin of the maXTouch device. */
	device->interface = interface;
	device->mxt_chip_adr = chip_adr;
	device->chgpin = chgpin;
	device->handler = NULL;
  401496:	2500      	movs	r5, #0
	device->chgpin = chgpin;
  401498:	6183      	str	r3, [r0, #24]
			malloc(sizeof(struct mxt_info_object));
  40149a:	2007      	movs	r0, #7
{
  40149c:	b089      	sub	sp, #36	; 0x24
	device->interface = interface;
  40149e:	60a1      	str	r1, [r4, #8]
	device->handler = NULL;
  4014a0:	6125      	str	r5, [r4, #16]
{
  4014a2:	468a      	mov	sl, r1
	device->mxt_chip_adr = chip_adr;
  4014a4:	7322      	strb	r2, [r4, #12]
{
  4014a6:	4617      	mov	r7, r2
			malloc(sizeof(struct mxt_info_object));
  4014a8:	4e4e      	ldr	r6, [pc, #312]	; (4015e4 <mxt_init_device+0x154>)
	twihs_package_t packet = {
  4014aa:	4681      	mov	r9, r0
			malloc(sizeof(struct mxt_info_object));
  4014ac:	47b0      	blx	r6
  4014ae:	4603      	mov	r3, r0
	twihs_package_t packet = {
  4014b0:	f04f 0802 	mov.w	r8, #2
  4014b4:	9507      	str	r5, [sp, #28]
  4014b6:	9503      	str	r5, [sp, #12]
	if (twihs_master_read(device->interface, &packet) != STATUS_OK) {
  4014b8:	4650      	mov	r0, sl
	device->info_object = (struct mxt_info_object *)
  4014ba:	6023      	str	r3, [r4, #0]
	if (twihs_master_read(device->interface, &packet) != STATUS_OK) {
  4014bc:	a903      	add	r1, sp, #12
  4014be:	4d4a      	ldr	r5, [pc, #296]	; (4015e8 <mxt_init_device+0x158>)
	twihs_package_t packet = {
  4014c0:	9305      	str	r3, [sp, #20]
  4014c2:	f88d 701c 	strb.w	r7, [sp, #28]
  4014c6:	f8cd 8010 	str.w	r8, [sp, #16]
  4014ca:	f8cd 9018 	str.w	r9, [sp, #24]
	if (twihs_master_read(device->interface, &packet) != STATUS_OK) {
  4014ce:	47a8      	blx	r5
  4014d0:	2800      	cmp	r0, #0
  4014d2:	f040 81d7 	bne.w	401884 <mxt_init_device+0x3f4>
			malloc(device->info_object->obj_count *
  4014d6:	f8d4 a000 	ldr.w	sl, [r4]
  4014da:	4607      	mov	r7, r0
  4014dc:	f89a 0006 	ldrb.w	r0, [sl, #6]
  4014e0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
  4014e4:	0040      	lsls	r0, r0, #1
  4014e6:	47b0      	blx	r6
	twihs_package_t packet = {
  4014e8:	9703      	str	r7, [sp, #12]
	device->object_list = (struct mxt_object *)
  4014ea:	6060      	str	r0, [r4, #4]
	if (twihs_master_read(device->interface, &packet) != STATUS_OK) {
  4014ec:	a903      	add	r1, sp, #12
	twihs_package_t packet = {
  4014ee:	9005      	str	r0, [sp, #20]
  4014f0:	9706      	str	r7, [sp, #24]
  4014f2:	9707      	str	r7, [sp, #28]
  4014f4:	f88d 900c 	strb.w	r9, [sp, #12]
  4014f8:	f8cd 8010 	str.w	r8, [sp, #16]
		.length       = device->info_object->obj_count *
  4014fc:	f89a 3006 	ldrb.w	r3, [sl, #6]
	twihs_package_t packet = {
  401500:	7b22      	ldrb	r2, [r4, #12]
		.length       = device->info_object->obj_count *
  401502:	eb03 0343 	add.w	r3, r3, r3, lsl #1
	if (twihs_master_read(device->interface, &packet) != STATUS_OK) {
  401506:	68a0      	ldr	r0, [r4, #8]
	twihs_package_t packet = {
  401508:	f88d 201c 	strb.w	r2, [sp, #28]
		.length       = device->info_object->obj_count *
  40150c:	005b      	lsls	r3, r3, #1
	twihs_package_t packet = {
  40150e:	9306      	str	r3, [sp, #24]
	if (twihs_master_read(device->interface, &packet) != STATUS_OK) {
  401510:	47a8      	blx	r5
  401512:	2800      	cmp	r0, #0
  401514:	f040 81b6 	bne.w	401884 <mxt_init_device+0x3f4>
  401518:	e894 0088 	ldmia.w	r4, {r3, r7}
	data_word = (uint16_t)((uint16_t)(byte2 << 8u) | byte1);
  40151c:	7819      	ldrb	r1, [r3, #0]
  40151e:	7858      	ldrb	r0, [r3, #1]
  401520:	78da      	ldrb	r2, [r3, #3]
	result = ((crc << 1u) ^ (uint32_t)data_word);
  401522:	ea41 2000 	orr.w	r0, r1, r0, lsl #8
	data_word = (uint16_t)((uint16_t)(byte2 << 8u) | byte1);
  401526:	7899      	ldrb	r1, [r3, #2]
  401528:	f893 e005 	ldrb.w	lr, [r3, #5]
	result = ((crc << 1u) ^ (uint32_t)data_word);
  40152c:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
	data_word = (uint16_t)((uint16_t)(byte2 << 8u) | byte1);
  401530:	791a      	ldrb	r2, [r3, #4]
			(device->info_object->obj_count *
  401532:	799b      	ldrb	r3, [r3, #6]
	result = ((crc << 1u) ^ (uint32_t)data_word);
  401534:	ea81 0140 	eor.w	r1, r1, r0, lsl #1
	data_word = (uint16_t)((uint16_t)(byte2 << 8u) | byte1);
  401538:	7838      	ldrb	r0, [r7, #0]
	result = ((crc << 1u) ^ (uint32_t)data_word);
  40153a:	ea42 220e 	orr.w	r2, r2, lr, lsl #8
			(device->info_object->obj_count *
  40153e:	eb03 0c43 	add.w	ip, r3, r3, lsl #1
	result = ((crc << 1u) ^ (uint32_t)data_word);
  401542:	ea82 0241 	eor.w	r2, r2, r1, lsl #1
		result ^= crcpoly;
  401546:	4929      	ldr	r1, [pc, #164]	; (4015ec <mxt_init_device+0x15c>)
	result = ((crc << 1u) ^ (uint32_t)data_word);
  401548:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
			(device->info_object->obj_count *
  40154c:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
	result = ((crc << 1u) ^ (uint32_t)data_word);
  401550:	ea83 0342 	eor.w	r3, r3, r2, lsl #1
	crc_area_size = MXT_ID_BLOCK_SIZE +
  401554:	f10c 0c07 	add.w	ip, ip, #7
	if (result & 0x1000000) {
  401558:	01da      	lsls	r2, r3, #7
	crc_area_size = MXT_ID_BLOCK_SIZE +
  40155a:	fa1f fc8c 	uxth.w	ip, ip
	if (result & 0x1000000) {
  40155e:	d43e      	bmi.n	4015de <mxt_init_device+0x14e>
	for (i = 1; i < (crc_area_size - MXT_ID_BLOCK_SIZE - 1); i += 2) {
  401560:	f1ac 0e08 	sub.w	lr, ip, #8
  401564:	f1be 0f01 	cmp.w	lr, #1
  401568:	dd13      	ble.n	401592 <mxt_init_device+0x102>
  40156a:	2001      	movs	r0, #1
		result ^= crcpoly;
  40156c:	f8df 807c 	ldr.w	r8, [pc, #124]	; 4015ec <mxt_init_device+0x15c>
		crc_tmp = mxt_crc_24(crc_tmp, objects_pointer[i],
  401570:	1839      	adds	r1, r7, r0
	data_word = (uint16_t)((uint16_t)(byte2 << 8u) | byte1);
  401572:	5c3a      	ldrb	r2, [r7, r0]
	for (i = 1; i < (crc_area_size - MXT_ID_BLOCK_SIZE - 1); i += 2) {
  401574:	3002      	adds	r0, #2
	data_word = (uint16_t)((uint16_t)(byte2 << 8u) | byte1);
  401576:	7849      	ldrb	r1, [r1, #1]
	for (i = 1; i < (crc_area_size - MXT_ID_BLOCK_SIZE - 1); i += 2) {
  401578:	b280      	uxth	r0, r0
	result = ((crc << 1u) ^ (uint32_t)data_word);
  40157a:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  40157e:	ea82 0343 	eor.w	r3, r2, r3, lsl #1
  401582:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
		result ^= crcpoly;
  401586:	ea83 0208 	eor.w	r2, r3, r8
  40158a:	bf18      	it	ne
  40158c:	4613      	movne	r3, r2
	for (i = 1; i < (crc_area_size - MXT_ID_BLOCK_SIZE - 1); i += 2) {
  40158e:	4570      	cmp	r0, lr
  401590:	dbee      	blt.n	401570 <mxt_init_device+0xe0>
	crc_tmp = mxt_crc_24(crc_tmp,
  401592:	4467      	add	r7, ip
	result = ((crc << 1u) ^ (uint32_t)data_word);
  401594:	f817 7c08 	ldrb.w	r7, [r7, #-8]
  401598:	ea87 0743 	eor.w	r7, r7, r3, lsl #1
	if (result & 0x1000000) {
  40159c:	01f9      	lsls	r1, r7, #7
  40159e:	d503      	bpl.n	4015a8 <mxt_init_device+0x118>
		result ^= crcpoly;
  4015a0:	f487 0700 	eor.w	r7, r7, #8388608	; 0x800000
  4015a4:	f087 071b 	eor.w	r7, r7, #27
	twihs_package_t packet = {
  4015a8:	2002      	movs	r0, #2
  4015aa:	2300      	movs	r3, #0
  4015ac:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
  4015b0:	2203      	movs	r2, #3
  4015b2:	9004      	str	r0, [sp, #16]
  4015b4:	a802      	add	r0, sp, #8
  4015b6:	9303      	str	r3, [sp, #12]
	if (twihs_master_read(device->interface, &packet) != STATUS_OK) {
  4015b8:	a903      	add	r1, sp, #12
	twihs_package_t packet = {
  4015ba:	9307      	str	r3, [sp, #28]
  4015bc:	7b23      	ldrb	r3, [r4, #12]
  4015be:	9005      	str	r0, [sp, #20]
	if (twihs_master_read(device->interface, &packet) != STATUS_OK) {
  4015c0:	68a0      	ldr	r0, [r4, #8]
	twihs_package_t packet = {
  4015c2:	f88d c00c 	strb.w	ip, [sp, #12]
  4015c6:	f88d e00d 	strb.w	lr, [sp, #13]
  4015ca:	9206      	str	r2, [sp, #24]
  4015cc:	f88d 301c 	strb.w	r3, [sp, #28]
	if (twihs_master_read(device->interface, &packet) != STATUS_OK) {
  4015d0:	47a8      	blx	r5
  4015d2:	b168      	cbz	r0, 4015f0 <mxt_init_device+0x160>
		return ERR_BAD_DATA;
  4015d4:	f06f 0003 	mvn.w	r0, #3
	}

	device->multitouch_report_offset = status;

	return STATUS_OK;
}
  4015d8:	b009      	add	sp, #36	; 0x24
  4015da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		result ^= crcpoly;
  4015de:	404b      	eors	r3, r1
  4015e0:	e7be      	b.n	401560 <mxt_init_device+0xd0>
  4015e2:	bf00      	nop
  4015e4:	00407eb1 	.word	0x00407eb1
  4015e8:	004021a1 	.word	0x004021a1
  4015ec:	0080001b 	.word	0x0080001b
		return ((uint32_t)crc[2] << 16) | ((uint16_t)crc[1] << 8) | crc[0];
  4015f0:	f89d 500a 	ldrb.w	r5, [sp, #10]
	*crc = (crc_tmp & 0x00FFFFFF);
  4015f4:	f027 437f 	bic.w	r3, r7, #4278190080	; 0xff000000
		return ((uint32_t)crc[2] << 16) | ((uint16_t)crc[1] << 8) | crc[0];
  4015f8:	f89d 2008 	ldrb.w	r2, [sp, #8]
  4015fc:	f89d 1009 	ldrb.w	r1, [sp, #9]
  401600:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
  401604:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
	if (crc_calculated != crc_read) {
  401608:	429a      	cmp	r2, r3
  40160a:	d1e3      	bne.n	4015d4 <mxt_init_device+0x144>
  40160c:	6823      	ldr	r3, [r4, #0]
	for (i = 0; i < device->info_object->obj_count; ++i) {
  40160e:	799f      	ldrb	r7, [r3, #6]
  401610:	9301      	str	r3, [sp, #4]
  401612:	2f00      	cmp	r7, #0
  401614:	f000 8139 	beq.w	40188a <mxt_init_device+0x3fa>
  401618:	f1a7 0a08 	sub.w	sl, r7, #8
  40161c:	1e7b      	subs	r3, r7, #1
  40161e:	f8d4 8004 	ldr.w	r8, [r4, #4]
  401622:	f3ca 0ac4 	ubfx	sl, sl, #3, #5
  401626:	2b43      	cmp	r3, #67	; 0x43
  401628:	4603      	mov	r3, r0
  40162a:	f10a 0a01 	add.w	sl, sl, #1
  40162e:	ea4f 02ca 	mov.w	r2, sl, lsl #3
  401632:	b2d2      	uxtb	r2, r2
  401634:	f240 8116 	bls.w	401864 <mxt_init_device+0x3d4>
  401638:	f108 0935 	add.w	r9, r8, #53	; 0x35
  40163c:	4686      	mov	lr, r0
  40163e:	4601      	mov	r1, r0
		tot_report_ids += (device->object_list[i].num_report_ids);
  401640:	2000      	movs	r0, #0
  401642:	f819 cc18 	ldrb.w	ip, [r9, #-24]
  401646:	f819 bc30 	ldrb.w	fp, [r9, #-48]
  40164a:	3301      	adds	r3, #1
  40164c:	4605      	mov	r5, r0
  40164e:	f109 0930 	add.w	r9, r9, #48	; 0x30
  401652:	f36b 0007 	bfi	r0, fp, #0, #8
  401656:	f819 bc42 	ldrb.w	fp, [r9, #-66]
  40165a:	f36c 0507 	bfi	r5, ip, #0, #8
  40165e:	f819 cc5a 	ldrb.w	ip, [r9, #-90]
  401662:	f36b 250f 	bfi	r5, fp, #8, #8
  401666:	f819 bc3c 	ldrb.w	fp, [r9, #-60]
  40166a:	f36c 200f 	bfi	r0, ip, #8, #8
  40166e:	f819 cc54 	ldrb.w	ip, [r9, #-84]
  401672:	f36b 4517 	bfi	r5, fp, #16, #8
  401676:	f819 bc36 	ldrb.w	fp, [r9, #-54]
  40167a:	f36c 4017 	bfi	r0, ip, #16, #8
  40167e:	f819 cc4e 	ldrb.w	ip, [r9, #-78]
  401682:	f36b 651f 	bfi	r5, fp, #24, #8
  401686:	f001 3b7f 	and.w	fp, r1, #2139062143	; 0x7f7f7f7f
  40168a:	f36c 601f 	bfi	r0, ip, #24, #8
  40168e:	f005 3c7f 	and.w	ip, r5, #2139062143	; 0x7f7f7f7f
  401692:	4069      	eors	r1, r5
  401694:	f000 357f 	and.w	r5, r0, #2139062143	; 0x7f7f7f7f
  401698:	ea80 000e 	eor.w	r0, r0, lr
  40169c:	44dc      	add	ip, fp
  40169e:	f00e 3e7f 	and.w	lr, lr, #2139062143	; 0x7f7f7f7f
  4016a2:	fa5f fb83 	uxtb.w	fp, r3
  4016a6:	f001 3180 	and.w	r1, r1, #2155905152	; 0x80808080
  4016aa:	f000 3080 	and.w	r0, r0, #2155905152	; 0x80808080
  4016ae:	44ae      	add	lr, r5
  4016b0:	45da      	cmp	sl, fp
  4016b2:	ea8c 0101 	eor.w	r1, ip, r1
  4016b6:	ea8e 0e00 	eor.w	lr, lr, r0
  4016ba:	d8c1      	bhi.n	401640 <mxt_init_device+0x1b0>
  4016bc:	f3ce 2307 	ubfx	r3, lr, #8, #8
  4016c0:	f3ce 4c07 	ubfx	ip, lr, #16, #8
  4016c4:	f3c1 2507 	ubfx	r5, r1, #8, #8
  4016c8:	f3c1 4007 	ubfx	r0, r1, #16, #8
  4016cc:	4473      	add	r3, lr
  4016ce:	4297      	cmp	r7, r2
  4016d0:	4463      	add	r3, ip
  4016d2:	eb03 631e 	add.w	r3, r3, lr, lsr #24
  4016d6:	440b      	add	r3, r1
  4016d8:	442b      	add	r3, r5
  4016da:	4403      	add	r3, r0
  4016dc:	eb03 6311 	add.w	r3, r3, r1, lsr #24
  4016e0:	b2db      	uxtb	r3, r3
  4016e2:	d00a      	beq.n	4016fa <mxt_init_device+0x26a>
  4016e4:	eb02 0142 	add.w	r1, r2, r2, lsl #1
	for (i = 0; i < device->info_object->obj_count; ++i) {
  4016e8:	3201      	adds	r2, #1
		tot_report_ids += (device->object_list[i].num_report_ids);
  4016ea:	eb08 0141 	add.w	r1, r8, r1, lsl #1
	for (i = 0; i < device->info_object->obj_count; ++i) {
  4016ee:	b2d2      	uxtb	r2, r2
		tot_report_ids += (device->object_list[i].num_report_ids);
  4016f0:	7949      	ldrb	r1, [r1, #5]
	for (i = 0; i < device->info_object->obj_count; ++i) {
  4016f2:	4297      	cmp	r7, r2
		tot_report_ids += (device->object_list[i].num_report_ids);
  4016f4:	440b      	add	r3, r1
  4016f6:	b2db      	uxtb	r3, r3
	for (i = 0; i < device->info_object->obj_count; ++i) {
  4016f8:	d8f4      	bhi.n	4016e4 <mxt_init_device+0x254>
  4016fa:	0058      	lsls	r0, r3, #1
			malloc(sizeof(struct mxt_report_id_map) *
  4016fc:	47b0      	blx	r6
	for (i = 0; i < device->info_object->obj_count; ++i) {
  4016fe:	9b01      	ldr	r3, [sp, #4]
	device->report_id_map = (struct mxt_report_id_map *)
  401700:	6160      	str	r0, [r4, #20]
	for (i = 0; i < device->info_object->obj_count; ++i) {
  401702:	799b      	ldrb	r3, [r3, #6]
  401704:	2b00      	cmp	r3, #0
  401706:	f43f af65 	beq.w	4015d4 <mxt_init_device+0x144>
  40170a:	6860      	ldr	r0, [r4, #4]
  40170c:	f04f 0c00 	mov.w	ip, #0
  401710:	2701      	movs	r7, #1
		for (j = 0; j <= device->object_list[i].instances; ++j) {
  401712:	eb0c 0e4c 	add.w	lr, ip, ip, lsl #1
  401716:	2500      	movs	r5, #0
  401718:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
  40171c:	eb00 010e 	add.w	r1, r0, lr
			if (device->object_list[i].num_report_ids != 0) {
  401720:	794b      	ldrb	r3, [r1, #5]
  401722:	b1a3      	cbz	r3, 40174e <mxt_init_device+0x2be>
				for (k = 0; k < device->object_list[i].num_report_ids; ++k) {
  401724:	463b      	mov	r3, r7
					device->report_id_map[id_index].object_type =
  401726:	b218      	sxth	r0, r3
  401728:	6962      	ldr	r2, [r4, #20]
							device->object_list[i].type;
  40172a:	7809      	ldrb	r1, [r1, #0]
					id_index++;
  40172c:	3301      	adds	r3, #1
					device->report_id_map[id_index].object_type =
  40172e:	f802 1010 	strb.w	r1, [r2, r0, lsl #1]
					id_index++;
  401732:	b2db      	uxtb	r3, r3
					device->report_id_map[id_index].instance = j;
  401734:	6961      	ldr	r1, [r4, #20]
				for (k = 0; k < device->object_list[i].num_report_ids; ++k) {
  401736:	1bda      	subs	r2, r3, r7
					device->report_id_map[id_index].instance = j;
  401738:	eb01 0140 	add.w	r1, r1, r0, lsl #1
				for (k = 0; k < device->object_list[i].num_report_ids; ++k) {
  40173c:	b2d2      	uxtb	r2, r2
					device->report_id_map[id_index].instance = j;
  40173e:	704d      	strb	r5, [r1, #1]
				for (k = 0; k < device->object_list[i].num_report_ids; ++k) {
  401740:	6860      	ldr	r0, [r4, #4]
  401742:	eb00 010e 	add.w	r1, r0, lr
  401746:	794e      	ldrb	r6, [r1, #5]
  401748:	4296      	cmp	r6, r2
  40174a:	d8ec      	bhi.n	401726 <mxt_init_device+0x296>
					id_index++;
  40174c:	461f      	mov	r7, r3
		for (j = 0; j <= device->object_list[i].instances; ++j) {
  40174e:	3501      	adds	r5, #1
  401750:	790b      	ldrb	r3, [r1, #4]
  401752:	b2ed      	uxtb	r5, r5
  401754:	42ab      	cmp	r3, r5
  401756:	d2e3      	bcs.n	401720 <mxt_init_device+0x290>
	for (i = 0; i < device->info_object->obj_count; ++i) {
  401758:	f10c 0c01 	add.w	ip, ip, #1
  40175c:	6823      	ldr	r3, [r4, #0]
  40175e:	fa5f fc8c 	uxtb.w	ip, ip
  401762:	7999      	ldrb	r1, [r3, #6]
  401764:	458c      	cmp	ip, r1
  401766:	d3d4      	bcc.n	401712 <mxt_init_device+0x282>
	for (i = 0; i < device->info_object->obj_count; ++i) {
  401768:	2900      	cmp	r1, #0
  40176a:	f43f af33 	beq.w	4015d4 <mxt_init_device+0x144>
  40176e:	f1a1 0c08 	sub.w	ip, r1, #8
  401772:	1e4b      	subs	r3, r1, #1
  401774:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
  401778:	2b43      	cmp	r3, #67	; 0x43
  40177a:	f10c 0c01 	add.w	ip, ip, #1
  40177e:	ea4f 05cc 	mov.w	r5, ip, lsl #3
  401782:	b2ed      	uxtb	r5, r5
  401784:	d970      	bls.n	401868 <mxt_init_device+0x3d8>
  401786:	f04f 0800 	mov.w	r8, #0
  40178a:	f100 0735 	add.w	r7, r0, #53	; 0x35
  40178e:	4642      	mov	r2, r8
  401790:	4646      	mov	r6, r8
		tot_report_ids += (device->object_list[i].num_report_ids);
  401792:	2300      	movs	r3, #0
  401794:	f817 9c18 	ldrb.w	r9, [r7, #-24]
  401798:	f817 ac30 	ldrb.w	sl, [r7, #-48]
  40179c:	f108 0801 	add.w	r8, r8, #1
  4017a0:	469e      	mov	lr, r3
  4017a2:	3730      	adds	r7, #48	; 0x30
  4017a4:	f36a 0307 	bfi	r3, sl, #0, #8
  4017a8:	f817 ac42 	ldrb.w	sl, [r7, #-66]
  4017ac:	f369 0e07 	bfi	lr, r9, #0, #8
  4017b0:	f817 9c5a 	ldrb.w	r9, [r7, #-90]
  4017b4:	f36a 2e0f 	bfi	lr, sl, #8, #8
  4017b8:	f369 230f 	bfi	r3, r9, #8, #8
  4017bc:	f817 ac3c 	ldrb.w	sl, [r7, #-60]
  4017c0:	f817 9c54 	ldrb.w	r9, [r7, #-84]
  4017c4:	f36a 4e17 	bfi	lr, sl, #16, #8
  4017c8:	f817 ac36 	ldrb.w	sl, [r7, #-54]
  4017cc:	f369 4317 	bfi	r3, r9, #16, #8
  4017d0:	f817 9c4e 	ldrb.w	r9, [r7, #-78]
  4017d4:	f36a 6e1f 	bfi	lr, sl, #24, #8
  4017d8:	f006 3a7f 	and.w	sl, r6, #2139062143	; 0x7f7f7f7f
  4017dc:	f369 631f 	bfi	r3, r9, #24, #8
  4017e0:	ea8e 0606 	eor.w	r6, lr, r6
  4017e4:	f00e 397f 	and.w	r9, lr, #2139062143	; 0x7f7f7f7f
  4017e8:	f003 3b7f 	and.w	fp, r3, #2139062143	; 0x7f7f7f7f
  4017ec:	fa5f fe88 	uxtb.w	lr, r8
  4017f0:	4053      	eors	r3, r2
  4017f2:	f002 327f 	and.w	r2, r2, #2139062143	; 0x7f7f7f7f
  4017f6:	f006 3680 	and.w	r6, r6, #2155905152	; 0x80808080
  4017fa:	44d1      	add	r9, sl
  4017fc:	f003 3380 	and.w	r3, r3, #2155905152	; 0x80808080
  401800:	445a      	add	r2, fp
  401802:	45f4      	cmp	ip, lr
  401804:	ea89 0606 	eor.w	r6, r9, r6
  401808:	ea82 0203 	eor.w	r2, r2, r3
  40180c:	d8c1      	bhi.n	401792 <mxt_init_device+0x302>
  40180e:	f3c2 2307 	ubfx	r3, r2, #8, #8
  401812:	f3c2 4c07 	ubfx	ip, r2, #16, #8
  401816:	f3c6 2e07 	ubfx	lr, r6, #8, #8
  40181a:	f3c6 4707 	ubfx	r7, r6, #16, #8
  40181e:	4413      	add	r3, r2
  401820:	42a9      	cmp	r1, r5
  401822:	4463      	add	r3, ip
  401824:	eb03 6312 	add.w	r3, r3, r2, lsr #24
  401828:	4433      	add	r3, r6
  40182a:	4473      	add	r3, lr
  40182c:	443b      	add	r3, r7
  40182e:	eb03 6316 	add.w	r3, r3, r6, lsr #24
  401832:	b2db      	uxtb	r3, r3
  401834:	d11a      	bne.n	40186c <mxt_init_device+0x3dc>
	for (i = 0; i < tot_rpt_id; ++i) {
  401836:	2b00      	cmp	r3, #0
  401838:	f43f aecc 	beq.w	4015d4 <mxt_init_device+0x144>
		if (device->report_id_map[i].object_type == object_type) {
  40183c:	6961      	ldr	r1, [r4, #20]
  40183e:	780a      	ldrb	r2, [r1, #0]
  401840:	2a09      	cmp	r2, #9
  401842:	d024      	beq.n	40188e <mxt_init_device+0x3fe>
  401844:	2200      	movs	r2, #0
	for (i = 0; i < tot_rpt_id; ++i) {
  401846:	3201      	adds	r2, #1
  401848:	b2d2      	uxtb	r2, r2
  40184a:	429a      	cmp	r2, r3
  40184c:	f43f aec2 	beq.w	4015d4 <mxt_init_device+0x144>
		if (device->report_id_map[i].object_type == object_type) {
  401850:	f811 0f02 	ldrb.w	r0, [r1, #2]!
  401854:	2809      	cmp	r0, #9
  401856:	d1f6      	bne.n	401846 <mxt_init_device+0x3b6>
  401858:	b252      	sxtb	r2, r2
	return STATUS_OK;
  40185a:	2000      	movs	r0, #0
	device->multitouch_report_offset = status;
  40185c:	7722      	strb	r2, [r4, #28]
}
  40185e:	b009      	add	sp, #36	; 0x24
  401860:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	for (i = 0; i < device->info_object->obj_count; ++i) {
  401864:	4602      	mov	r2, r0
  401866:	e73d      	b.n	4016e4 <mxt_init_device+0x254>
	for (i = 0; i < device->info_object->obj_count; ++i) {
  401868:	2300      	movs	r3, #0
  40186a:	461d      	mov	r5, r3
		tot_report_ids += (device->object_list[i].num_report_ids);
  40186c:	eb05 0245 	add.w	r2, r5, r5, lsl #1
	for (i = 0; i < device->info_object->obj_count; ++i) {
  401870:	3501      	adds	r5, #1
		tot_report_ids += (device->object_list[i].num_report_ids);
  401872:	eb00 0242 	add.w	r2, r0, r2, lsl #1
	for (i = 0; i < device->info_object->obj_count; ++i) {
  401876:	b2ed      	uxtb	r5, r5
		tot_report_ids += (device->object_list[i].num_report_ids);
  401878:	7952      	ldrb	r2, [r2, #5]
	for (i = 0; i < device->info_object->obj_count; ++i) {
  40187a:	42a9      	cmp	r1, r5
		tot_report_ids += (device->object_list[i].num_report_ids);
  40187c:	4413      	add	r3, r2
  40187e:	b2db      	uxtb	r3, r3
	for (i = 0; i < device->info_object->obj_count; ++i) {
  401880:	d8f4      	bhi.n	40186c <mxt_init_device+0x3dc>
  401882:	e7d8      	b.n	401836 <mxt_init_device+0x3a6>
  401884:	f04f 30ff 	mov.w	r0, #4294967295
  401888:	e6a6      	b.n	4015d8 <mxt_init_device+0x148>
	for (i = 0; i < device->info_object->obj_count; ++i) {
  40188a:	4638      	mov	r0, r7
  40188c:	e736      	b.n	4016fc <mxt_init_device+0x26c>
		if (device->report_id_map[i].object_type == object_type) {
  40188e:	2200      	movs	r2, #0
  401890:	e7e3      	b.n	40185a <mxt_init_device+0x3ca>
  401892:	bf00      	nop

00401894 <mxt_get_object_address>:
uint16_t mxt_get_object_address(struct mxt_device *device, uint8_t object_id,
		uint8_t instance)
{
	uint8_t i;

	for (i = 0; i < device->info_object->obj_count; i++) {
  401894:	6803      	ldr	r3, [r0, #0]
  401896:	799b      	ldrb	r3, [r3, #6]
  401898:	b1eb      	cbz	r3, 4018d6 <mxt_get_object_address+0x42>
{
  40189a:	b410      	push	{r4}
		if (object_id == device->object_list[i].type) {
  40189c:	6844      	ldr	r4, [r0, #4]
  40189e:	7822      	ldrb	r2, [r4, #0]
  4018a0:	428a      	cmp	r2, r1
  4018a2:	d013      	beq.n	4018cc <mxt_get_object_address+0x38>
  4018a4:	1e5a      	subs	r2, r3, #1
  4018a6:	1da3      	adds	r3, r4, #6
  4018a8:	b2d2      	uxtb	r2, r2
  4018aa:	3201      	adds	r2, #1
  4018ac:	eb02 0242 	add.w	r2, r2, r2, lsl #1
  4018b0:	eb04 0242 	add.w	r2, r4, r2, lsl #1
  4018b4:	e003      	b.n	4018be <mxt_get_object_address+0x2a>
  4018b6:	f813 0b06 	ldrb.w	r0, [r3], #6
  4018ba:	4288      	cmp	r0, r1
  4018bc:	d006      	beq.n	4018cc <mxt_get_object_address+0x38>
	for (i = 0; i < device->info_object->obj_count; i++) {
  4018be:	4293      	cmp	r3, r2
		if (object_id == device->object_list[i].type) {
  4018c0:	461c      	mov	r4, r3
	for (i = 0; i < device->info_object->obj_count; i++) {
  4018c2:	d1f8      	bne.n	4018b6 <mxt_get_object_address+0x22>
			return device->object_list[i].start_address;
		}
	}

	return 0;
  4018c4:	2000      	movs	r0, #0
}
  4018c6:	f85d 4b04 	ldr.w	r4, [sp], #4
  4018ca:	4770      	bx	lr
			return device->object_list[i].start_address;
  4018cc:	f8b4 0001 	ldrh.w	r0, [r4, #1]
}
  4018d0:	f85d 4b04 	ldr.w	r4, [sp], #4
  4018d4:	4770      	bx	lr
	return 0;
  4018d6:	4618      	mov	r0, r3
  4018d8:	4770      	bx	lr
  4018da:	bf00      	nop

004018dc <mxt_write_config_object>:
 * \param *obj_data Pointer to memory buffer containing object data
 * \result Operation result status code
 */
status_code_t mxt_write_config_object(struct mxt_device *device,
		mxt_memory_adr memory_adr, void *obj_data)
{
  4018dc:	b530      	push	{r4, r5, lr}
	/* Initializing the TWI packet to send to the slave */
	twihs_package_t packet = {
  4018de:	2300      	movs	r3, #0
{
  4018e0:	b087      	sub	sp, #28
	for (i = 0; i < device->info_object->obj_count; ++i) {
  4018e2:	6804      	ldr	r4, [r0, #0]
	twihs_package_t packet = {
  4018e4:	2502      	movs	r5, #2
  4018e6:	9301      	str	r3, [sp, #4]
  4018e8:	9203      	str	r2, [sp, #12]
  4018ea:	0a0a      	lsrs	r2, r1, #8
  4018ec:	9304      	str	r3, [sp, #16]
  4018ee:	9305      	str	r3, [sp, #20]
  4018f0:	9502      	str	r5, [sp, #8]
	for (i = 0; i < device->info_object->obj_count; ++i) {
  4018f2:	79a3      	ldrb	r3, [r4, #6]
	twihs_package_t packet = {
  4018f4:	f88d 1004 	strb.w	r1, [sp, #4]
  4018f8:	f88d 2005 	strb.w	r2, [sp, #5]
	for (i = 0; i < device->info_object->obj_count; ++i) {
  4018fc:	b1bb      	cbz	r3, 40192e <mxt_write_config_object+0x52>
		if (device->object_list[i].start_address == mem_adr) {
  4018fe:	6844      	ldr	r4, [r0, #4]
  401900:	f8b4 2001 	ldrh.w	r2, [r4, #1]
  401904:	428a      	cmp	r2, r1
  401906:	d020      	beq.n	40194a <mxt_write_config_object+0x6e>
  401908:	1e5a      	subs	r2, r3, #1
  40190a:	1da3      	adds	r3, r4, #6
  40190c:	b2d2      	uxtb	r2, r2
  40190e:	3201      	adds	r2, #1
  401910:	eb02 0242 	add.w	r2, r2, r2, lsl #1
  401914:	eb04 0242 	add.w	r2, r4, r2, lsl #1
  401918:	e003      	b.n	401922 <mxt_write_config_object+0x46>
  40191a:	f8b4 5001 	ldrh.w	r5, [r4, #1]
  40191e:	428d      	cmp	r5, r1
  401920:	d013      	beq.n	40194a <mxt_write_config_object+0x6e>
	for (i = 0; i < device->info_object->obj_count; ++i) {
  401922:	429a      	cmp	r2, r3
		if (device->object_list[i].start_address == mem_adr) {
  401924:	461c      	mov	r4, r3
  401926:	f103 0306 	add.w	r3, r3, #6
	for (i = 0; i < device->info_object->obj_count; ++i) {
  40192a:	d1f6      	bne.n	40191a <mxt_write_config_object+0x3e>
  40192c:	2300      	movs	r3, #0
	twihs_package_t packet = {
  40192e:	7b04      	ldrb	r4, [r0, #12]
		.chip         = device->mxt_chip_adr,
		.buffer       = obj_data,
		.length       = mxt_get_object_size(device, memory_adr)
	};

	if (twihs_master_write(device->interface, &packet) != STATUS_OK) {
  401930:	a901      	add	r1, sp, #4
  401932:	4a08      	ldr	r2, [pc, #32]	; (401954 <mxt_write_config_object+0x78>)
  401934:	6880      	ldr	r0, [r0, #8]
	twihs_package_t packet = {
  401936:	9304      	str	r3, [sp, #16]
  401938:	f88d 4014 	strb.w	r4, [sp, #20]
	if (twihs_master_write(device->interface, &packet) != STATUS_OK) {
  40193c:	4790      	blx	r2
  40193e:	3000      	adds	r0, #0
  401940:	bf18      	it	ne
  401942:	2001      	movne	r0, #1
		return ERR_IO_ERROR;
	} else {
		return STATUS_OK;
	}

}
  401944:	4240      	negs	r0, r0
  401946:	b007      	add	sp, #28
  401948:	bd30      	pop	{r4, r5, pc}
			return (device->object_list[i].size + 1);
  40194a:	78e3      	ldrb	r3, [r4, #3]
  40194c:	3301      	adds	r3, #1
  40194e:	b2db      	uxtb	r3, r3
  401950:	e7ed      	b.n	40192e <mxt_write_config_object+0x52>
  401952:	bf00      	nop
  401954:	00402255 	.word	0x00402255

00401958 <mxt_write_config_reg>:
 * \param value Value to be written to register
 * \result Operation result status code
 */
status_code_t mxt_write_config_reg(struct mxt_device *device,
		mxt_memory_adr memory_adr, uint8_t value)
{
  401958:	b5f0      	push	{r4, r5, r6, r7, lr}
  40195a:	b089      	sub	sp, #36	; 0x24
  40195c:	460c      	mov	r4, r1
	/* Initializing the TWI packet to send to the slave */
	twihs_package_t packet = {
  40195e:	2300      	movs	r3, #0
  401960:	0a09      	lsrs	r1, r1, #8
  401962:	7b07      	ldrb	r7, [r0, #12]
  401964:	2602      	movs	r6, #2
{
  401966:	f88d 2007 	strb.w	r2, [sp, #7]
	twihs_package_t packet = {
  40196a:	f10d 0507 	add.w	r5, sp, #7
  40196e:	2201      	movs	r2, #1
  401970:	9303      	str	r3, [sp, #12]
  401972:	9307      	str	r3, [sp, #28]
  401974:	f88d 100d 	strb.w	r1, [sp, #13]
		.chip         = device->mxt_chip_adr,
		.buffer       = &value,
		.length       = sizeof(value)
	};

	if (twihs_master_write(device->interface, &packet) != STATUS_OK) {
  401978:	a903      	add	r1, sp, #12
  40197a:	4b08      	ldr	r3, [pc, #32]	; (40199c <mxt_write_config_reg+0x44>)
  40197c:	6880      	ldr	r0, [r0, #8]
	twihs_package_t packet = {
  40197e:	f88d 400c 	strb.w	r4, [sp, #12]
  401982:	f88d 701c 	strb.w	r7, [sp, #28]
  401986:	9604      	str	r6, [sp, #16]
  401988:	9505      	str	r5, [sp, #20]
  40198a:	9206      	str	r2, [sp, #24]
	if (twihs_master_write(device->interface, &packet) != STATUS_OK) {
  40198c:	4798      	blx	r3
  40198e:	3000      	adds	r0, #0
  401990:	bf18      	it	ne
  401992:	2001      	movne	r0, #1
		return ERR_IO_ERROR;
	} else {
		return STATUS_OK;
	}
}
  401994:	4240      	negs	r0, r0
  401996:	b009      	add	sp, #36	; 0x24
  401998:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40199a:	bf00      	nop
  40199c:	00402255 	.word	0x00402255

004019a0 <mxt_read_message>:
 * \param *message Pointer to mxt_message instance
 * \return Operation result status code
 */
status_code_t mxt_read_message(struct mxt_device *device,
		struct mxt_conf_messageprocessor_t5 *message)
{
  4019a0:	b5f0      	push	{r4, r5, r6, r7, lr}
	for (i = 0; i < device->info_object->obj_count; i++) {
  4019a2:	6803      	ldr	r3, [r0, #0]
{
  4019a4:	b087      	sub	sp, #28
	for (i = 0; i < device->info_object->obj_count; i++) {
  4019a6:	799b      	ldrb	r3, [r3, #6]
  4019a8:	2b00      	cmp	r3, #0
  4019aa:	d033      	beq.n	401a14 <mxt_read_message+0x74>
		if (object_id == device->object_list[i].type) {
  4019ac:	6845      	ldr	r5, [r0, #4]
  4019ae:	782a      	ldrb	r2, [r5, #0]
  4019b0:	2a05      	cmp	r2, #5
  4019b2:	d02a      	beq.n	401a0a <mxt_read_message+0x6a>
  4019b4:	1e5a      	subs	r2, r3, #1
  4019b6:	1dab      	adds	r3, r5, #6
  4019b8:	b2d2      	uxtb	r2, r2
  4019ba:	3201      	adds	r2, #1
  4019bc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
  4019c0:	eb05 0242 	add.w	r2, r5, r2, lsl #1
  4019c4:	e003      	b.n	4019ce <mxt_read_message+0x2e>
  4019c6:	f813 4b06 	ldrb.w	r4, [r3], #6
  4019ca:	2c05      	cmp	r4, #5
  4019cc:	d01d      	beq.n	401a0a <mxt_read_message+0x6a>
	for (i = 0; i < device->info_object->obj_count; i++) {
  4019ce:	4293      	cmp	r3, r2
		if (object_id == device->object_list[i].type) {
  4019d0:	461d      	mov	r5, r3
	for (i = 0; i < device->info_object->obj_count; i++) {
  4019d2:	d1f8      	bne.n	4019c6 <mxt_read_message+0x26>
  4019d4:	2300      	movs	r3, #0
  4019d6:	461f      	mov	r7, r3
	uint16_t obj_adr = mxt_get_object_address(device,
			MXT_GEN_MESSAGEPROCESSOR_T5, 0);

	/* Initializing the TWI packet to send to the slave */
	twihs_package_t packet = {
  4019d8:	2200      	movs	r2, #0
  4019da:	7b04      	ldrb	r4, [r0, #12]
  4019dc:	2602      	movs	r6, #2
  4019de:	2509      	movs	r5, #9
  4019e0:	9201      	str	r2, [sp, #4]
  4019e2:	9205      	str	r2, [sp, #20]
  4019e4:	9103      	str	r1, [sp, #12]
		.buffer       = message,
		.length       = MXT_TWI_MSG_SIZE_T5
	};

	/* Read information from the slave */
	if (twihs_master_read(device->interface, &packet) != STATUS_OK) {
  4019e6:	a901      	add	r1, sp, #4
  4019e8:	4a0b      	ldr	r2, [pc, #44]	; (401a18 <mxt_read_message+0x78>)
  4019ea:	6880      	ldr	r0, [r0, #8]
	twihs_package_t packet = {
  4019ec:	f88d 7004 	strb.w	r7, [sp, #4]
  4019f0:	f88d 3005 	strb.w	r3, [sp, #5]
  4019f4:	9602      	str	r6, [sp, #8]
  4019f6:	9504      	str	r5, [sp, #16]
  4019f8:	f88d 4014 	strb.w	r4, [sp, #20]
	if (twihs_master_read(device->interface, &packet) != STATUS_OK) {
  4019fc:	4790      	blx	r2
  4019fe:	3000      	adds	r0, #0
  401a00:	bf18      	it	ne
  401a02:	2001      	movne	r0, #1
		return mxt_validate_message(&packet);
#else
		return STATUS_OK;
#endif
	}
}
  401a04:	4240      	negs	r0, r0
  401a06:	b007      	add	sp, #28
  401a08:	bdf0      	pop	{r4, r5, r6, r7, pc}
			return device->object_list[i].start_address;
  401a0a:	f8b5 3001 	ldrh.w	r3, [r5, #1]
  401a0e:	b2df      	uxtb	r7, r3
  401a10:	0a1b      	lsrs	r3, r3, #8
  401a12:	e7e1      	b.n	4019d8 <mxt_read_message+0x38>
	for (i = 0; i < device->info_object->obj_count; i++) {
  401a14:	461f      	mov	r7, r3
  401a16:	e7df      	b.n	4019d8 <mxt_read_message+0x38>
  401a18:	004021a1 	.word	0x004021a1

00401a1c <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  401a1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
  401a20:	b990      	cbnz	r0, 401a48 <_read+0x2c>
		return -1;
	}

	for (; len > 0; --len) {
  401a22:	2a00      	cmp	r2, #0
  401a24:	4690      	mov	r8, r2
  401a26:	dd0d      	ble.n	401a44 <_read+0x28>
  401a28:	460c      	mov	r4, r1
  401a2a:	188f      	adds	r7, r1, r2
  401a2c:	4e08      	ldr	r6, [pc, #32]	; (401a50 <_read+0x34>)
  401a2e:	4d09      	ldr	r5, [pc, #36]	; (401a54 <_read+0x38>)
		ptr_get(stdio_base, ptr);
  401a30:	4621      	mov	r1, r4
		ptr++;
  401a32:	3401      	adds	r4, #1
		ptr_get(stdio_base, ptr);
  401a34:	6830      	ldr	r0, [r6, #0]
  401a36:	682b      	ldr	r3, [r5, #0]
  401a38:	4798      	blx	r3
	for (; len > 0; --len) {
  401a3a:	42bc      	cmp	r4, r7
  401a3c:	d1f8      	bne.n	401a30 <_read+0x14>
		nChars++;
	}
	return nChars;
}
  401a3e:	4640      	mov	r0, r8
  401a40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	for (; len > 0; --len) {
  401a44:	4680      	mov	r8, r0
  401a46:	e7fa      	b.n	401a3e <_read+0x22>
		return -1;
  401a48:	f04f 38ff 	mov.w	r8, #4294967295
  401a4c:	e7f7      	b.n	401a3e <_read+0x22>
  401a4e:	bf00      	nop
  401a50:	2041b808 	.word	0x2041b808
  401a54:	2041b800 	.word	0x2041b800

00401a58 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  401a58:	3801      	subs	r0, #1
  401a5a:	2802      	cmp	r0, #2
  401a5c:	d81e      	bhi.n	401a9c <_write+0x44>
{
  401a5e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401a62:	4615      	mov	r5, r2
		return -1;
	}

	for (; len != 0; --len) {
  401a64:	b1ba      	cbz	r2, 401a96 <_write+0x3e>
  401a66:	460e      	mov	r6, r1
  401a68:	460c      	mov	r4, r1
  401a6a:	f8df 803c 	ldr.w	r8, [pc, #60]	; 401aa8 <_write+0x50>
  401a6e:	4f0d      	ldr	r7, [pc, #52]	; (401aa4 <_write+0x4c>)
  401a70:	e001      	b.n	401a76 <_write+0x1e>
  401a72:	3d01      	subs	r5, #1
  401a74:	d00d      	beq.n	401a92 <_write+0x3a>
		if (ptr_put(stdio_base, *ptr++) < 0) {
  401a76:	f814 1b01 	ldrb.w	r1, [r4], #1
  401a7a:	f8d8 0000 	ldr.w	r0, [r8]
  401a7e:	683b      	ldr	r3, [r7, #0]
  401a80:	4798      	blx	r3
  401a82:	2800      	cmp	r0, #0
  401a84:	eba4 0006 	sub.w	r0, r4, r6
  401a88:	daf3      	bge.n	401a72 <_write+0x1a>
		return -1;
  401a8a:	f04f 30ff 	mov.w	r0, #4294967295
  401a8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401a92:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	for (; len != 0; --len) {
  401a96:	4610      	mov	r0, r2
			return -1;
		}
		++nChars;
	}
	return nChars;
}
  401a98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  401a9c:	f04f 30ff 	mov.w	r0, #4294967295
}
  401aa0:	4770      	bx	lr
  401aa2:	bf00      	nop
  401aa4:	2041b804 	.word	0x2041b804
  401aa8:	2041b808 	.word	0x2041b808

00401aac <wm8904_write_register>:
 *
 * \param uc_register_address Register address to write
 * \param us_data Data to write.
 */
void wm8904_write_register(uint8_t uc_register_address, uint16_t us_data)
{
  401aac:	b570      	push	{r4, r5, r6, lr}
  401aae:	460b      	mov	r3, r1
  401ab0:	b086      	sub	sp, #24
	uint8_t uc_temp_data[2];
	twihs_packet_t packet;

	uc_temp_data[0] = (us_data & 0xff00) >> 8;
  401ab2:	0a0e      	lsrs	r6, r1, #8

	packet.addr[0]     = uc_register_address;
	packet.addr_length = 0x1;
	packet.buffer      = uc_temp_data;
	packet.length      = 0x2;
	packet.chip        = WM8904_SLAVE_ADDRESS;
  401ab4:	221a      	movs	r2, #26
	uc_temp_data[1] = us_data & 0xff;
  401ab6:	f88d 3001 	strb.w	r3, [sp, #1]
	packet.addr_length = 0x1;
  401aba:	2501      	movs	r5, #1
	packet.length      = 0x2;
  401abc:	2402      	movs	r4, #2

	twihs_master_write(WM8904_TWIHS, &packet);
  401abe:	a901      	add	r1, sp, #4
  401ac0:	4b07      	ldr	r3, [pc, #28]	; (401ae0 <wm8904_write_register+0x34>)
	packet.addr[0]     = uc_register_address;
  401ac2:	f88d 0004 	strb.w	r0, [sp, #4]
	twihs_master_write(WM8904_TWIHS, &packet);
  401ac6:	4807      	ldr	r0, [pc, #28]	; (401ae4 <wm8904_write_register+0x38>)
	uc_temp_data[0] = (us_data & 0xff00) >> 8;
  401ac8:	f88d 6000 	strb.w	r6, [sp]
	packet.addr_length = 0x1;
  401acc:	9502      	str	r5, [sp, #8]
	packet.buffer      = uc_temp_data;
  401ace:	f8cd d00c 	str.w	sp, [sp, #12]
	packet.length      = 0x2;
  401ad2:	9404      	str	r4, [sp, #16]
	packet.chip        = WM8904_SLAVE_ADDRESS;
  401ad4:	f88d 2014 	strb.w	r2, [sp, #20]
	twihs_master_write(WM8904_TWIHS, &packet);
  401ad8:	4798      	blx	r3
}
  401ada:	b006      	add	sp, #24
  401adc:	bd70      	pop	{r4, r5, r6, pc}
  401ade:	bf00      	nop
  401ae0:	00402255 	.word	0x00402255
  401ae4:	40018000 	.word	0x40018000

00401ae8 <wm8904_read_register>:
 *
 * \param uc_register_address Register address to write
 * \retun Register value.
 */
uint16_t wm8904_read_register(uint8_t uc_register_address)
{
  401ae8:	b530      	push	{r4, r5, lr}
  401aea:	b087      	sub	sp, #28

	packet.addr[0]     = uc_register_address;
	packet.addr_length = 0x1;
	packet.buffer      = uc_temp_data;
	packet.length      = 0x2;
	packet.chip        = WM8904_SLAVE_ADDRESS;
  401aec:	221a      	movs	r2, #26
	packet.addr_length = 0x1;
  401aee:	2501      	movs	r5, #1
	packet.length      = 0x2;
  401af0:	2402      	movs	r4, #2
	packet.addr[0]     = uc_register_address;
  401af2:	f88d 0004 	strb.w	r0, [sp, #4]

	twihs_master_read(WM8904_TWIHS, &packet);
  401af6:	a901      	add	r1, sp, #4
  401af8:	4b08      	ldr	r3, [pc, #32]	; (401b1c <wm8904_read_register+0x34>)
  401afa:	4809      	ldr	r0, [pc, #36]	; (401b20 <wm8904_read_register+0x38>)
	packet.addr_length = 0x1;
  401afc:	9502      	str	r5, [sp, #8]
	packet.buffer      = uc_temp_data;
  401afe:	f8cd d00c 	str.w	sp, [sp, #12]
	packet.length      = 0x2;
  401b02:	9404      	str	r4, [sp, #16]
	packet.chip        = WM8904_SLAVE_ADDRESS;
  401b04:	f88d 2014 	strb.w	r2, [sp, #20]
	twihs_master_read(WM8904_TWIHS, &packet);
  401b08:	4798      	blx	r3
	us_data = (((uint16_t)uc_temp_data[0] << 8) & 0xff00) | uc_temp_data[1];
  401b0a:	f89d 0000 	ldrb.w	r0, [sp]
  401b0e:	f89d 3001 	ldrb.w	r3, [sp, #1]

	return us_data;
}
  401b12:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
  401b16:	b007      	add	sp, #28
  401b18:	bd30      	pop	{r4, r5, pc}
  401b1a:	bf00      	nop
  401b1c:	004021a1 	.word	0x004021a1
  401b20:	40018000 	.word	0x40018000

00401b24 <wm8904_twi_init>:
 * \brief Initialize TWIHS connect to WM8904.
 *
 * \retun TWIHS_SUCCESS if initialization is complete, error code otherwise.
 */
uint32_t wm8904_twi_init(void)
{
  401b24:	b510      	push	{r4, lr}
	pio_configure_pin(WM8904_TK_PIO, WM8904_TK_FLAGS);
  401b26:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
{
  401b2a:	b084      	sub	sp, #16
	pio_configure_pin(WM8904_TK_PIO, WM8904_TK_FLAGS);
  401b2c:	4c15      	ldr	r4, [pc, #84]	; (401b84 <wm8904_twi_init+0x60>)
  401b2e:	2021      	movs	r0, #33	; 0x21
  401b30:	47a0      	blx	r4
	pio_configure_pin(WM8904_TF_PIO, WM8904_TF_FLAGS);
  401b32:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  401b36:	2020      	movs	r0, #32
  401b38:	47a0      	blx	r4
	pio_configure_pin(WM8904_TD_PIO, WM8904_TD_FLAGS);
  401b3a:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  401b3e:	207a      	movs	r0, #122	; 0x7a
  401b40:	47a0      	blx	r4
	pio_configure_pin(WM8904_RK_PIO, WM8904_RK_FLAGS);
  401b42:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  401b46:	2016      	movs	r0, #22
  401b48:	47a0      	blx	r4
	pio_configure_pin(WM8904_RF_PIO, WM8904_RF_FLAGS);
  401b4a:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  401b4e:	2078      	movs	r0, #120	; 0x78
  401b50:	47a0      	blx	r4
	pio_configure_pin(WM8904_RD_PIO, WM8904_RD_FLAGS);
  401b52:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  401b56:	200a      	movs	r0, #10
  401b58:	47a0      	blx	r4
	pio_configure_pin(WM8904_PCK2_PIO, WM8904_PCK2_FLAGS);
  401b5a:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  401b5e:	2012      	movs	r0, #18
  401b60:	47a0      	blx	r4
	p_opt->smbus      = 0;
  401b62:	2200      	movs	r2, #0
	p_opt->master_clk = sysclk_get_peripheral_hz();
  401b64:	4908      	ldr	r1, [pc, #32]	; (401b88 <wm8904_twi_init+0x64>)
  401b66:	2013      	movs	r0, #19

	twihs_options_t opt;
	opt.master_clk = sysclk_get_cpu_hz();
	opt.speed = WM8904_TWIHS_CLK;
  401b68:	4c08      	ldr	r4, [pc, #32]	; (401b8c <wm8904_twi_init+0x68>)
  401b6a:	4b09      	ldr	r3, [pc, #36]	; (401b90 <wm8904_twi_init+0x6c>)
  401b6c:	9101      	str	r1, [sp, #4]
	p_opt->smbus      = 0;
  401b6e:	f88d 200d 	strb.w	r2, [sp, #13]
  401b72:	9402      	str	r4, [sp, #8]
  401b74:	4798      	blx	r3
	return (twihs_master_init(p_twihs, p_opt));
  401b76:	a901      	add	r1, sp, #4
  401b78:	4b06      	ldr	r3, [pc, #24]	; (401b94 <wm8904_twi_init+0x70>)
  401b7a:	4807      	ldr	r0, [pc, #28]	; (401b98 <wm8904_twi_init+0x74>)
  401b7c:	4798      	blx	r3
	return twihs_master_setup(WM8904_TWIHS, &opt);
}
  401b7e:	b004      	add	sp, #16
  401b80:	bd10      	pop	{r4, pc}
  401b82:	bf00      	nop
  401b84:	004028e1 	.word	0x004028e1
  401b88:	08f0d180 	.word	0x08f0d180
  401b8c:	00061a80 	.word	0x00061a80
  401b90:	00402f39 	.word	0x00402f39
  401b94:	004020c1 	.word	0x004020c1
  401b98:	40018000 	.word	0x40018000

00401b9c <ili9488_set_window>:
 * \Param y start position.
 * \Param width  Width of window.
 * \Param height Height of window.
 */
void ili9488_set_window(uint16_t x, uint16_t y, uint16_t width, uint16_t height )
{
  401b9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	ili9488_color_t buf[4];

	cnt = sizeof(buf)/sizeof(ili9488_color_t);

	col_start  =  x ;
	col_end    =  width + x - 1;
  401ba0:	3a01      	subs	r2, #1
{
  401ba2:	460c      	mov	r4, r1

	row_start = y ;
	row_end   = height + y - 1;
  401ba4:	3b01      	subs	r3, #1
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401ba6:	4f29      	ldr	r7, [pc, #164]	; (401c4c <ili9488_set_window+0xb0>)
{
  401ba8:	b085      	sub	sp, #20
	col_end    =  width + x - 1;
  401baa:	4402      	add	r2, r0
{
  401bac:	4605      	mov	r5, r0
	row_end   = height + y - 1;
  401bae:	4423      	add	r3, r4
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401bb0:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 401c54 <ili9488_set_window+0xb8>
  401bb4:	4638      	mov	r0, r7
  401bb6:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000

	buf[0] = get_8b_to_16b(col_start);
	buf[1] = get_0b_to_8b(col_start);
	buf[2] = get_8b_to_16b(col_end);
  401bba:	f3c2 2a07 	ubfx	sl, r2, #8, #8
	buf[3] = get_0b_to_8b(col_end);
  401bbe:	b2d6      	uxtb	r6, r2
	col_end    =  width + x - 1;
  401bc0:	f8ad 200a 	strh.w	r2, [sp, #10]
	row_end   = height + y - 1;
  401bc4:	f8ad 300e 	strh.w	r3, [sp, #14]
	buf[0] = get_8b_to_16b(col_start);
  401bc8:	ea4f 2b15 	mov.w	fp, r5, lsr #8
	col_start  =  x ;
  401bcc:	f8ad 5008 	strh.w	r5, [sp, #8]
	buf[1] = get_0b_to_8b(col_start);
  401bd0:	b2ed      	uxtb	r5, r5
	row_start = y ;
  401bd2:	f8ad 400c 	strh.w	r4, [sp, #12]
		*((volatile uint16_t *)(BOARD_ILI9488_ADDR)) = lcd_index; /* ILI9488 index register address */
  401bd6:	f04f 44c6 	mov.w	r4, #1660944384	; 0x63000000
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401bda:	47c0      	blx	r8
  401bdc:	222a      	movs	r2, #42	; 0x2a
	pio_set(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401bde:	4b1c      	ldr	r3, [pc, #112]	; (401c50 <ili9488_set_window+0xb4>)
  401be0:	4638      	mov	r0, r7
  401be2:	8022      	strh	r2, [r4, #0]
  401be4:	f04f 0900 	mov.w	r9, #0
  401be8:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401bec:	9301      	str	r3, [sp, #4]
  401bee:	4798      	blx	r3
			*((volatile uint16_t *)(BOARD_ILI9488_ADDR)) = *lcd_data++;
  401bf0:	f8a4 b000 	strh.w	fp, [r4]
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401bf4:	4638      	mov	r0, r7
  401bf6:	8025      	strh	r5, [r4, #0]
  401bf8:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401bfc:	f8a4 a000 	strh.w	sl, [r4]
  401c00:	8026      	strh	r6, [r4, #0]
  401c02:	47c0      	blx	r8
		*((volatile uint16_t *)(BOARD_ILI9488_ADDR)) = lcd_index; /* ILI9488 index register address */
  401c04:	f8a4 9000 	strh.w	r9, [r4]
  401c08:	4638      	mov	r0, r7
  401c0a:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
	ili9488_write_register(ILI9488_CMD_COLUMN_ADDRESS_SET, buf, cnt);
	ili9488_write_register(ILI9488_CMD_NOP, 0, 0);

	/* Set Horizontal Address End Position */
	buf[0] = get_8b_to_16b(row_start);
  401c0e:	f89d b00d 	ldrb.w	fp, [sp, #13]
	buf[1] = get_0b_to_8b(row_start);
  401c12:	f89d a00c 	ldrb.w	sl, [sp, #12]
	buf[2] = get_8b_to_16b(row_end);
  401c16:	f89d 600f 	ldrb.w	r6, [sp, #15]
	buf[3] = get_0b_to_8b(row_end);
  401c1a:	f89d 500e 	ldrb.w	r5, [sp, #14]
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401c1e:	47c0      	blx	r8
  401c20:	222b      	movs	r2, #43	; 0x2b
	pio_set(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401c22:	4638      	mov	r0, r7
  401c24:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401c28:	8022      	strh	r2, [r4, #0]
  401c2a:	9b01      	ldr	r3, [sp, #4]
  401c2c:	4798      	blx	r3
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401c2e:	4638      	mov	r0, r7
  401c30:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
			*((volatile uint16_t *)(BOARD_ILI9488_ADDR)) = *lcd_data++;
  401c34:	f8a4 b000 	strh.w	fp, [r4]
  401c38:	f8a4 a000 	strh.w	sl, [r4]
  401c3c:	8026      	strh	r6, [r4, #0]
  401c3e:	8025      	strh	r5, [r4, #0]
  401c40:	47c0      	blx	r8
		*((volatile uint16_t *)(BOARD_ILI9488_ADDR)) = lcd_index; /* ILI9488 index register address */
  401c42:	f8a4 9000 	strh.w	r9, [r4]
	ili9488_write_register(ILI9488_CMD_PAGE_ADDRESS_SET, buf, cnt);
	ili9488_write_register(ILI9488_CMD_NOP, 0, 0);
}
  401c46:	b005      	add	sp, #20
  401c48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401c4c:	400e1200 	.word	0x400e1200
  401c50:	004027a5 	.word	0x004027a5
  401c54:	004027a9 	.word	0x004027a9

00401c58 <ili9488_display_on>:

/**
 * \brief Turn on the LCD.
 */
void ili9488_display_on(void)
{
  401c58:	b508      	push	{r3, lr}
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401c5a:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401c5e:	4b04      	ldr	r3, [pc, #16]	; (401c70 <ili9488_display_on+0x18>)
  401c60:	4804      	ldr	r0, [pc, #16]	; (401c74 <ili9488_display_on+0x1c>)
  401c62:	4798      	blx	r3
  401c64:	f04f 43c6 	mov.w	r3, #1660944384	; 0x63000000
  401c68:	2229      	movs	r2, #41	; 0x29
  401c6a:	801a      	strh	r2, [r3, #0]
  401c6c:	bd08      	pop	{r3, pc}
  401c6e:	bf00      	nop
  401c70:	004027a9 	.word	0x004027a9
  401c74:	400e1200 	.word	0x400e1200

00401c78 <ili9488_set_cursor_position>:
 *
 * \param x X coordinate of upper-left corner on LCD.
 * \param y Y coordinate of upper-left corner on LCD.
 */
void ili9488_set_cursor_position(uint16_t x, uint16_t y)
{
  401c78:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401c7c:	4d21      	ldr	r5, [pc, #132]	; (401d04 <ili9488_set_cursor_position+0x8c>)
{
  401c7e:	b082      	sub	sp, #8
  401c80:	4606      	mov	r6, r0
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401c82:	4f21      	ldr	r7, [pc, #132]	; (401d08 <ili9488_set_cursor_position+0x90>)
{
  401c84:	f8ad 1004 	strh.w	r1, [sp, #4]
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401c88:	4628      	mov	r0, r5
  401c8a:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401c8e:	f04f 44c6 	mov.w	r4, #1660944384	; 0x63000000
{
  401c92:	f8ad 6006 	strh.w	r6, [sp, #6]
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401c96:	47b8      	blx	r7
  401c98:	232a      	movs	r3, #42	; 0x2a
	uint32_t cnt = 0;

	ili9488_color_t buf[4];
	cnt = sizeof(buf)/sizeof(ili9488_color_t);

	buf[0] = get_8b_to_16b(x);
  401c9a:	ea4f 2916 	mov.w	r9, r6, lsr #8
	buf[1] = get_0b_to_8b(x);
  401c9e:	b2f6      	uxtb	r6, r6
	pio_set(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401ca0:	4628      	mov	r0, r5
  401ca2:	8023      	strh	r3, [r4, #0]
  401ca4:	f04f 0800 	mov.w	r8, #0
  401ca8:	f8df a060 	ldr.w	sl, [pc, #96]	; 401d0c <ili9488_set_cursor_position+0x94>
  401cac:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401cb0:	47d0      	blx	sl
			*((volatile uint16_t *)(BOARD_ILI9488_ADDR)) = *lcd_data++;
  401cb2:	f8a4 9000 	strh.w	r9, [r4]
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401cb6:	4628      	mov	r0, r5
  401cb8:	8026      	strh	r6, [r4, #0]
  401cba:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401cbe:	f8a4 9000 	strh.w	r9, [r4]
  401cc2:	8026      	strh	r6, [r4, #0]
  401cc4:	47b8      	blx	r7
		*((volatile uint16_t *)(BOARD_ILI9488_ADDR)) = lcd_index; /* ILI9488 index register address */
  401cc6:	f8a4 8000 	strh.w	r8, [r4]
  401cca:	4628      	mov	r0, r5
  401ccc:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
	ili9488_write_register(ILI9488_CMD_COLUMN_ADDRESS_SET, buf, cnt);
	ili9488_write_register(ILI9488_CMD_NOP, 0, 0);


	/* Set Horizontal Address End Position */
	buf[0] = get_8b_to_16b(y);
  401cd0:	f89d 9005 	ldrb.w	r9, [sp, #5]
	buf[1] = get_0b_to_8b(y);
  401cd4:	f89d 6004 	ldrb.w	r6, [sp, #4]
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401cd8:	47b8      	blx	r7
  401cda:	232b      	movs	r3, #43	; 0x2b
	pio_set(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401cdc:	4628      	mov	r0, r5
  401cde:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401ce2:	8023      	strh	r3, [r4, #0]
  401ce4:	47d0      	blx	sl
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401ce6:	4628      	mov	r0, r5
  401ce8:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
			*((volatile uint16_t *)(BOARD_ILI9488_ADDR)) = *lcd_data++;
  401cec:	f8a4 9000 	strh.w	r9, [r4]
  401cf0:	8026      	strh	r6, [r4, #0]
  401cf2:	f8a4 9000 	strh.w	r9, [r4]
  401cf6:	8026      	strh	r6, [r4, #0]
  401cf8:	47b8      	blx	r7
		*((volatile uint16_t *)(BOARD_ILI9488_ADDR)) = lcd_index; /* ILI9488 index register address */
  401cfa:	f8a4 8000 	strh.w	r8, [r4]
	buf[2] = get_8b_to_16b(y);
	buf[3] = get_0b_to_8b(y);
	ili9488_write_register(ILI9488_CMD_PAGE_ADDRESS_SET, buf, cnt);
	ili9488_write_register(ILI9488_CMD_NOP, 0, 0);
}
  401cfe:	b002      	add	sp, #8
  401d00:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  401d04:	400e1200 	.word	0x400e1200
  401d08:	004027a9 	.word	0x004027a9
  401d0c:	004027a5 	.word	0x004027a5

00401d10 <ili9488_init>:
{
  401d10:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  401d14:	4607      	mov	r7, r0
	pmc_enable_periph_clk(ID_SMC);
  401d16:	4b40      	ldr	r3, [pc, #256]	; (401e18 <ili9488_init+0x108>)
  401d18:	2009      	movs	r0, #9
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401d1a:	4d40      	ldr	r5, [pc, #256]	; (401e1c <ili9488_init+0x10c>)
	pmc_enable_periph_clk(ID_SMC);
  401d1c:	4798      	blx	r3
	smc_set_setup_timing(SMC, BOARD_ILI9488_EBI_NPCS, SMC_SETUP_NWE_SETUP(0)
  401d1e:	2200      	movs	r2, #0
  401d20:	2103      	movs	r1, #3
  401d22:	483f      	ldr	r0, [pc, #252]	; (401e20 <ili9488_init+0x110>)
  401d24:	4b3f      	ldr	r3, [pc, #252]	; (401e24 <ili9488_init+0x114>)
  401d26:	f04f 44c6 	mov.w	r4, #1660944384	; 0x63000000
  401d2a:	4798      	blx	r3
	smc_set_pulse_timing(SMC, BOARD_ILI9488_EBI_NPCS , SMC_PULSE_NWE_PULSE(3)
  401d2c:	4a3e      	ldr	r2, [pc, #248]	; (401e28 <ili9488_init+0x118>)
  401d2e:	2103      	movs	r1, #3
  401d30:	483b      	ldr	r0, [pc, #236]	; (401e20 <ili9488_init+0x110>)
  401d32:	4b3e      	ldr	r3, [pc, #248]	; (401e2c <ili9488_init+0x11c>)
  401d34:	f04f 0936 	mov.w	r9, #54	; 0x36
  401d38:	4798      	blx	r3
	smc_set_cycle_timing(SMC, BOARD_ILI9488_EBI_NPCS, SMC_CYCLE_NWE_CYCLE(0x4)
  401d3a:	4a3d      	ldr	r2, [pc, #244]	; (401e30 <ili9488_init+0x120>)
  401d3c:	2103      	movs	r1, #3
  401d3e:	4838      	ldr	r0, [pc, #224]	; (401e20 <ili9488_init+0x110>)
  401d40:	4b3c      	ldr	r3, [pc, #240]	; (401e34 <ili9488_init+0x124>)
			*((volatile uint16_t *)(BOARD_ILI9488_ADDR)) = *lcd_data++;
  401d42:	f04f 0848 	mov.w	r8, #72	; 0x48
  401d46:	4798      	blx	r3
	smc_set_mode(SMC, BOARD_ILI9488_EBI_NPCS, SMC_MODE_READ_MODE
  401d48:	4a3b      	ldr	r2, [pc, #236]	; (401e38 <ili9488_init+0x128>)
  401d4a:	4b3c      	ldr	r3, [pc, #240]	; (401e3c <ili9488_init+0x12c>)
  401d4c:	2103      	movs	r1, #3
  401d4e:	4834      	ldr	r0, [pc, #208]	; (401e20 <ili9488_init+0x110>)
  401d50:	4798      	blx	r3
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401d52:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401d56:	483a      	ldr	r0, [pc, #232]	; (401e40 <ili9488_init+0x130>)
  401d58:	47a8      	blx	r5
		*((volatile uint16_t *)(BOARD_ILI9488_ADDR)) = lcd_index; /* ILI9488 index register address */
  401d5a:	2301      	movs	r3, #1
  401d5c:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401d60:	4837      	ldr	r0, [pc, #220]	; (401e40 <ili9488_init+0x130>)
  401d62:	8023      	strh	r3, [r4, #0]
  401d64:	47a8      	blx	r5
  401d66:	2311      	movs	r3, #17
  401d68:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401d6c:	4834      	ldr	r0, [pc, #208]	; (401e40 <ili9488_init+0x130>)
  401d6e:	8023      	strh	r3, [r4, #0]
  401d70:	47a8      	blx	r5
	pio_set(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401d72:	4e34      	ldr	r6, [pc, #208]	; (401e44 <ili9488_init+0x134>)
  401d74:	f8a4 9000 	strh.w	r9, [r4]
  401d78:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401d7c:	4830      	ldr	r0, [pc, #192]	; (401e40 <ili9488_init+0x130>)
  401d7e:	47b0      	blx	r6
			*((volatile uint16_t *)(BOARD_ILI9488_ADDR)) = *lcd_data++;
  401d80:	f8a4 8000 	strh.w	r8, [r4]
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401d84:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401d88:	482d      	ldr	r0, [pc, #180]	; (401e40 <ili9488_init+0x130>)
  401d8a:	47a8      	blx	r5
		*((volatile uint16_t *)(BOARD_ILI9488_ADDR)) = lcd_index; /* ILI9488 index register address */
  401d8c:	23cf      	movs	r3, #207	; 0xcf
	pio_set(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401d8e:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401d92:	482b      	ldr	r0, [pc, #172]	; (401e40 <ili9488_init+0x130>)
  401d94:	8023      	strh	r3, [r4, #0]
  401d96:	47b0      	blx	r6
			*((volatile uint16_t *)(BOARD_ILI9488_ADDR)) = *lcd_data++;
  401d98:	2304      	movs	r3, #4
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401d9a:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401d9e:	4828      	ldr	r0, [pc, #160]	; (401e40 <ili9488_init+0x130>)
  401da0:	8023      	strh	r3, [r4, #0]
  401da2:	47a8      	blx	r5
		*((volatile uint16_t *)(BOARD_ILI9488_ADDR)) = lcd_index; /* ILI9488 index register address */
  401da4:	233a      	movs	r3, #58	; 0x3a
	pio_set(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401da6:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401daa:	4825      	ldr	r0, [pc, #148]	; (401e40 <ili9488_init+0x130>)
  401dac:	8023      	strh	r3, [r4, #0]
  401dae:	47b0      	blx	r6
			*((volatile uint16_t *)(BOARD_ILI9488_ADDR)) = *lcd_data++;
  401db0:	2305      	movs	r3, #5
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401db2:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401db6:	4822      	ldr	r0, [pc, #136]	; (401e40 <ili9488_init+0x130>)
  401db8:	8023      	strh	r3, [r4, #0]
  401dba:	47a8      	blx	r5
		*((volatile uint16_t *)(BOARD_ILI9488_ADDR)) = lcd_index; /* ILI9488 index register address */
  401dbc:	2312      	movs	r3, #18
  401dbe:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401dc2:	481f      	ldr	r0, [pc, #124]	; (401e40 <ili9488_init+0x130>)
  401dc4:	8023      	strh	r3, [r4, #0]
  401dc6:	47a8      	blx	r5
  401dc8:	2329      	movs	r3, #41	; 0x29
  401dca:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401dce:	481c      	ldr	r0, [pc, #112]	; (401e40 <ili9488_init+0x130>)
  401dd0:	8023      	strh	r3, [r4, #0]
  401dd2:	47a8      	blx	r5
  401dd4:	f8a4 9000 	strh.w	r9, [r4]
	pio_set(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401dd8:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401ddc:	4818      	ldr	r0, [pc, #96]	; (401e40 <ili9488_init+0x130>)
  401dde:	47b0      	blx	r6
	ili9488_set_window(0, 0,p_opt->ul_width,p_opt->ul_height);
  401de0:	2100      	movs	r1, #0
			*((volatile uint16_t *)(BOARD_ILI9488_ADDR)) = *lcd_data++;
  401de2:	f8a4 8000 	strh.w	r8, [r4]
  401de6:	4608      	mov	r0, r1
  401de8:	88bb      	ldrh	r3, [r7, #4]
  401dea:	883a      	ldrh	r2, [r7, #0]
  401dec:	4c16      	ldr	r4, [pc, #88]	; (401e48 <ili9488_init+0x138>)
  401dee:	47a0      	blx	r4
  401df0:	8938      	ldrh	r0, [r7, #8]
  401df2:	2200      	movs	r2, #0
	ili9488_set_foreground_color(p_opt->foreground_color);
  401df4:	4b15      	ldr	r3, [pc, #84]	; (401e4c <ili9488_init+0x13c>)
  401df6:	f360 020f 	bfi	r2, r0, #0, #16
  401dfa:	f503 7120 	add.w	r1, r3, #640	; 0x280
  401dfe:	f360 421f 	bfi	r2, r0, #16, #16
		g_ul_pixel_cache[i] = ul_color;
  401e02:	f843 2b04 	str.w	r2, [r3], #4
  401e06:	428b      	cmp	r3, r1
  401e08:	d1fb      	bne.n	401e02 <ili9488_init+0xf2>
	ili9488_set_cursor_position(0, 0);
  401e0a:	2100      	movs	r1, #0
  401e0c:	4b10      	ldr	r3, [pc, #64]	; (401e50 <ili9488_init+0x140>)
  401e0e:	4608      	mov	r0, r1
  401e10:	4798      	blx	r3
}
  401e12:	2000      	movs	r0, #0
  401e14:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  401e18:	00402f39 	.word	0x00402f39
  401e1c:	004027a9 	.word	0x004027a9
  401e20:	40080000 	.word	0x40080000
  401e24:	00401f81 	.word	0x00401f81
  401e28:	0a0a0403 	.word	0x0a0a0403
  401e2c:	00401f89 	.word	0x00401f89
  401e30:	000a0004 	.word	0x000a0004
  401e34:	00401f91 	.word	0x00401f91
  401e38:	000f1003 	.word	0x000f1003
  401e3c:	00401f99 	.word	0x00401f99
  401e40:	400e1200 	.word	0x400e1200
  401e44:	004027a5 	.word	0x004027a5
  401e48:	00401b9d 	.word	0x00401b9d
  401e4c:	2040e800 	.word	0x2040e800
  401e50:	00401c79 	.word	0x00401c79

00401e54 <ili9488_write_brightness>:
 * Configures the display for a given brightness value
 *
 * \param us_value brightness value need to written.
 */
void ili9488_write_brightness(uint16_t us_value)
{
  401e54:	b570      	push	{r4, r5, r6, lr}
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401e56:	4d09      	ldr	r5, [pc, #36]	; (401e7c <ili9488_write_brightness+0x28>)
{
  401e58:	4606      	mov	r6, r0
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401e5a:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401e5e:	4b08      	ldr	r3, [pc, #32]	; (401e80 <ili9488_write_brightness+0x2c>)
  401e60:	4628      	mov	r0, r5
		*((volatile uint16_t *)(BOARD_ILI9488_ADDR)) = lcd_index; /* ILI9488 index register address */
  401e62:	f04f 44c6 	mov.w	r4, #1660944384	; 0x63000000
  401e66:	4798      	blx	r3
  401e68:	2351      	movs	r3, #81	; 0x51
	pio_set(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401e6a:	4628      	mov	r0, r5
  401e6c:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401e70:	8023      	strh	r3, [r4, #0]
  401e72:	4b04      	ldr	r3, [pc, #16]	; (401e84 <ili9488_write_brightness+0x30>)
  401e74:	4798      	blx	r3
			*((volatile uint16_t *)(BOARD_ILI9488_ADDR)) = *lcd_data++;
  401e76:	8026      	strh	r6, [r4, #0]
  401e78:	bd70      	pop	{r4, r5, r6, pc}
  401e7a:	bf00      	nop
  401e7c:	400e1200 	.word	0x400e1200
  401e80:	004027a9 	.word	0x004027a9
  401e84:	004027a5 	.word	0x004027a5

00401e88 <ili9488_set_limits>:
 * \param end_x The x coordinate of the bottom right corner
 * \param end_y The y coordinate of the bottom right corner
 */
void ili9488_set_limits(ili9488_coord_t start_x, ili9488_coord_t start_y,
		ili9488_coord_t end_x, ili9488_coord_t end_y)
{
  401e88:	b4f0      	push	{r4, r5, r6, r7}
	limit_start_x = start_x;
  401e8a:	4f05      	ldr	r7, [pc, #20]	; (401ea0 <ili9488_set_limits+0x18>)
	limit_start_y = start_y;
  401e8c:	4e05      	ldr	r6, [pc, #20]	; (401ea4 <ili9488_set_limits+0x1c>)
	limit_end_x = end_x;
  401e8e:	4d06      	ldr	r5, [pc, #24]	; (401ea8 <ili9488_set_limits+0x20>)
	limit_end_y = end_y;
  401e90:	4c06      	ldr	r4, [pc, #24]	; (401eac <ili9488_set_limits+0x24>)
	limit_start_x = start_x;
  401e92:	8038      	strh	r0, [r7, #0]
	limit_start_y = start_y;
  401e94:	8031      	strh	r1, [r6, #0]
	limit_end_x = end_x;
  401e96:	802a      	strh	r2, [r5, #0]
	limit_end_y = end_y;
  401e98:	8023      	strh	r3, [r4, #0]
}
  401e9a:	bcf0      	pop	{r4, r5, r6, r7}
  401e9c:	4770      	bx	lr
  401e9e:	bf00      	nop
  401ea0:	2040ea84 	.word	0x2040ea84
  401ea4:	2040ea86 	.word	0x2040ea86
  401ea8:	2040ea80 	.word	0x2040ea80
  401eac:	2040ea82 	.word	0x2040ea82

00401eb0 <ili9488_set_orientation>:
 *
 * \param flags Orientation flags to use, see \ref ILI9488_FLIP_X, \ref ILI9488_FLIP_Y
 *        and \ref ILI9488_SWITCH_XY.
 */
void ili9488_set_orientation(uint8_t flags)
{
  401eb0:	b538      	push	{r3, r4, r5, lr}
	/* Flip X/Y and reverse X orientation and set BGR mode*/
	ili9488_color_t madctl = 0x68;

	if (flags & ILI9488_FLIP_X) {
  401eb2:	f000 0301 	and.w	r3, r0, #1
  401eb6:	2b00      	cmp	r3, #0
  401eb8:	bf0b      	itete	eq
  401eba:	2448      	moveq	r4, #72	; 0x48
  401ebc:	2408      	movne	r4, #8
  401ebe:	21c8      	moveq	r1, #200	; 0xc8
  401ec0:	2188      	movne	r1, #136	; 0x88
  401ec2:	bf0b      	itete	eq
  401ec4:	22e8      	moveq	r2, #232	; 0xe8
  401ec6:	22a8      	movne	r2, #168	; 0xa8
  401ec8:	2368      	moveq	r3, #104	; 0x68
  401eca:	2328      	movne	r3, #40	; 0x28
		madctl &= ~(1 << 6);
	}

	if (flags & ILI9488_FLIP_Y) {
  401ecc:	0785      	lsls	r5, r0, #30
  401ece:	d501      	bpl.n	401ed4 <ili9488_set_orientation+0x24>
  401ed0:	460c      	mov	r4, r1
		madctl |= 1 << 7;
  401ed2:	4613      	mov	r3, r2
	}

	if (flags & ILI9488_SWITCH_XY) {
  401ed4:	f010 0f04 	tst.w	r0, #4
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401ed8:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401edc:	4807      	ldr	r0, [pc, #28]	; (401efc <ili9488_set_orientation+0x4c>)
		*((volatile uint16_t *)(BOARD_ILI9488_ADDR)) = lcd_index; /* ILI9488 index register address */
  401ede:	f04f 45c6 	mov.w	r5, #1660944384	; 0x63000000
  401ee2:	4a07      	ldr	r2, [pc, #28]	; (401f00 <ili9488_set_orientation+0x50>)
	if (flags & ILI9488_SWITCH_XY) {
  401ee4:	bf08      	it	eq
  401ee6:	461c      	moveq	r4, r3
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401ee8:	4790      	blx	r2
  401eea:	2336      	movs	r3, #54	; 0x36
	pio_set(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401eec:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401ef0:	4802      	ldr	r0, [pc, #8]	; (401efc <ili9488_set_orientation+0x4c>)
  401ef2:	802b      	strh	r3, [r5, #0]
  401ef4:	4b03      	ldr	r3, [pc, #12]	; (401f04 <ili9488_set_orientation+0x54>)
  401ef6:	4798      	blx	r3
			*((volatile uint16_t *)(BOARD_ILI9488_ADDR)) = *lcd_data++;
  401ef8:	802c      	strh	r4, [r5, #0]
  401efa:	bd38      	pop	{r3, r4, r5, pc}
  401efc:	400e1200 	.word	0x400e1200
  401f00:	004027a9 	.word	0x004027a9
  401f04:	004027a5 	.word	0x004027a5

00401f08 <ili9488_duplicate_pixel>:
 * \param color The color to write to the display
 * \param count The number of pixels to write with this color
 */
void ili9488_duplicate_pixel(const uint16_t color, uint32_t count)
{
	ili9488_set_window(limit_start_x, limit_start_y, (limit_end_x - limit_start_x) + 1, (limit_end_y - limit_start_y) + 1);
  401f08:	4b15      	ldr	r3, [pc, #84]	; (401f60 <ili9488_duplicate_pixel+0x58>)
  401f0a:	4a16      	ldr	r2, [pc, #88]	; (401f64 <ili9488_duplicate_pixel+0x5c>)
{
  401f0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401f10:	4606      	mov	r6, r0
	ili9488_set_window(limit_start_x, limit_start_y, (limit_end_x - limit_start_x) + 1, (limit_end_y - limit_start_y) + 1);
  401f12:	881b      	ldrh	r3, [r3, #0]
  401f14:	8812      	ldrh	r2, [r2, #0]
{
  401f16:	460f      	mov	r7, r1
	ili9488_set_window(limit_start_x, limit_start_y, (limit_end_x - limit_start_x) + 1, (limit_end_y - limit_start_y) + 1);
  401f18:	4813      	ldr	r0, [pc, #76]	; (401f68 <ili9488_duplicate_pixel+0x60>)
  401f1a:	3301      	adds	r3, #1
  401f1c:	4913      	ldr	r1, [pc, #76]	; (401f6c <ili9488_duplicate_pixel+0x64>)
  401f1e:	3201      	adds	r2, #1
  401f20:	8800      	ldrh	r0, [r0, #0]
  401f22:	8809      	ldrh	r1, [r1, #0]
  401f24:	1a12      	subs	r2, r2, r0
  401f26:	4d12      	ldr	r5, [pc, #72]	; (401f70 <ili9488_duplicate_pixel+0x68>)
  401f28:	1a5b      	subs	r3, r3, r1
  401f2a:	b292      	uxth	r2, r2
  401f2c:	b29b      	uxth	r3, r3
  401f2e:	47a8      	blx	r5
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401f30:	4b10      	ldr	r3, [pc, #64]	; (401f74 <ili9488_duplicate_pixel+0x6c>)
  401f32:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401f36:	4810      	ldr	r0, [pc, #64]	; (401f78 <ili9488_duplicate_pixel+0x70>)
  401f38:	4798      	blx	r3
		*((volatile uint16_t *)(BOARD_ILI9488_ADDR)) = lcd_index; /* ILI9488 index register address */
  401f3a:	f04f 45c6 	mov.w	r5, #1660944384	; 0x63000000
  401f3e:	232c      	movs	r3, #44	; 0x2c
  401f40:	802b      	strh	r3, [r5, #0]
	ili9488_write_ram_prepare();

#ifdef ILI9488_EBIMODE
	while (count--) {
  401f42:	b15f      	cbz	r7, 401f5c <ili9488_duplicate_pixel+0x54>
  401f44:	1e7c      	subs	r4, r7, #1
  401f46:	f8df 8034 	ldr.w	r8, [pc, #52]	; 401f7c <ili9488_duplicate_pixel+0x74>
	pio_set(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401f4a:	4f0b      	ldr	r7, [pc, #44]	; (401f78 <ili9488_duplicate_pixel+0x70>)
	while (count--) {
  401f4c:	3c01      	subs	r4, #1
	pio_set(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  401f4e:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401f52:	4638      	mov	r0, r7
  401f54:	47c0      	blx	r8
	while (count--) {
  401f56:	1c63      	adds	r3, r4, #1
		*(volatile uint16_t *)(BOARD_ILI9488_ADDR) = lcd_data;
  401f58:	802e      	strh	r6, [r5, #0]
  401f5a:	d1f7      	bne.n	401f4c <ili9488_duplicate_pixel+0x44>
  401f5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401f60:	2040ea82 	.word	0x2040ea82
  401f64:	2040ea80 	.word	0x2040ea80
  401f68:	2040ea84 	.word	0x2040ea84
  401f6c:	2040ea86 	.word	0x2040ea86
  401f70:	00401b9d 	.word	0x00401b9d
  401f74:	004027a9 	.word	0x004027a9
  401f78:	400e1200 	.word	0x400e1200
  401f7c:	004027a5 	.word	0x004027a5

00401f80 <smc_set_setup_timing>:
 * \param ul_setup_timing Setup timing for NWE, NCS, NRD.
 */
void smc_set_setup_timing(Smc *p_smc, uint32_t ul_cs,
		uint32_t ul_setup_timing)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_SETUP = ul_setup_timing;
  401f80:	0109      	lsls	r1, r1, #4
  401f82:	5042      	str	r2, [r0, r1]
  401f84:	4770      	bx	lr
  401f86:	bf00      	nop

00401f88 <smc_set_pulse_timing>:
 * \param ul_pulse_timing Pulse timing for NWE,NCS,NRD.
 */
void smc_set_pulse_timing(Smc *p_smc, uint32_t ul_cs,
		uint32_t ul_pulse_timing)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_PULSE = ul_pulse_timing;
  401f88:	eb00 1101 	add.w	r1, r0, r1, lsl #4
  401f8c:	604a      	str	r2, [r1, #4]
  401f8e:	4770      	bx	lr

00401f90 <smc_set_cycle_timing>:
 * \param ul_cycle_timing Cycle timing for NWE and NRD.
 */
void smc_set_cycle_timing(Smc *p_smc, uint32_t ul_cs,
		uint32_t ul_cycle_timing)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_CYCLE = ul_cycle_timing;
  401f90:	eb00 1101 	add.w	r1, r0, r1, lsl #4
  401f94:	608a      	str	r2, [r1, #8]
  401f96:	4770      	bx	lr

00401f98 <smc_set_mode>:
 * \param ul_cs Chip select number to be set.
 * \param ul_mode SMC mode.
 */
void smc_set_mode(Smc *p_smc, uint32_t ul_cs, uint32_t ul_mode)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_MODE = ul_mode;
  401f98:	eb00 1101 	add.w	r1, r0, r1, lsl #4
  401f9c:	60ca      	str	r2, [r1, #12]
  401f9e:	4770      	bx	lr

00401fa0 <ssc_reset>:
 * \param p_ssc Pointer to an SSC instance.
 */
void ssc_reset(Ssc *p_ssc)
{
	p_ssc->SSC_CR = SSC_CR_SWRST;
	p_ssc->SSC_CMR = 0;
  401fa0:	2300      	movs	r3, #0
	p_ssc->SSC_CR = SSC_CR_SWRST;
  401fa2:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  401fa6:	6002      	str	r2, [r0, #0]
	p_ssc->SSC_CMR = 0;
  401fa8:	6043      	str	r3, [r0, #4]
	p_ssc->SSC_RCMR = 0;
  401faa:	6103      	str	r3, [r0, #16]
	p_ssc->SSC_RFMR = 0;
  401fac:	6143      	str	r3, [r0, #20]
	p_ssc->SSC_TCMR = 0;
  401fae:	6183      	str	r3, [r0, #24]
	p_ssc->SSC_TFMR = 0;
  401fb0:	61c3      	str	r3, [r0, #28]
  401fb2:	4770      	bx	lr

00401fb4 <ssc_enable_rx>:
 *
 * \param p_ssc Pointer to an SSC instance.
 */
void ssc_enable_rx(Ssc *p_ssc)
{
	p_ssc->SSC_CR = SSC_CR_RXEN;
  401fb4:	2301      	movs	r3, #1
  401fb6:	6003      	str	r3, [r0, #0]
  401fb8:	4770      	bx	lr
  401fba:	bf00      	nop

00401fbc <ssc_disable_rx>:
 *
 * \param p_ssc Pointer to an SSC instance.
 */
void ssc_disable_rx(Ssc *p_ssc)
{
	p_ssc->SSC_CR = SSC_CR_RXDIS;
  401fbc:	2302      	movs	r3, #2
  401fbe:	6003      	str	r3, [r0, #0]
  401fc0:	4770      	bx	lr
  401fc2:	bf00      	nop

00401fc4 <ssc_enable_tx>:
 *
 * \param p_ssc Pointer to an SSC instance.
 */
void ssc_enable_tx(Ssc *p_ssc)
{
	p_ssc->SSC_CR = SSC_CR_TXEN;
  401fc4:	f44f 7380 	mov.w	r3, #256	; 0x100
  401fc8:	6003      	str	r3, [r0, #0]
  401fca:	4770      	bx	lr

00401fcc <ssc_disable_tx>:
 *
 * \param p_ssc Pointer to an SSC instance.
 */
void ssc_disable_tx(Ssc *p_ssc)
{
	p_ssc->SSC_CR = SSC_CR_TXDIS;
  401fcc:	f44f 7300 	mov.w	r3, #512	; 0x200
  401fd0:	6003      	str	r3, [r0, #0]
  401fd2:	4770      	bx	lr

00401fd4 <ssc_set_receiver>:
 * \param p_rx_clk_opt Pointer to the receiver clock configuration structure.
 * \param p_rx_data_frame Pointer to the receiver data frame configuration structure.
 */
void ssc_set_receiver(Ssc *p_ssc, clock_opt_t *p_rx_clk_opt,
		data_frame_opt_t *p_rx_data_frame)
{
  401fd4:	b4f0      	push	{r4, r5, r6, r7}
	if (p_rx_clk_opt == NULL) {
  401fd6:	2900      	cmp	r1, #0
  401fd8:	d02f      	beq.n	40203a <ssc_set_receiver+0x66>
		p_ssc->SSC_RCMR = 0;
	} else {
		p_ssc->SSC_RCMR |= p_rx_clk_opt->ul_cks |
  401fda:	6904      	ldr	r4, [r0, #16]
  401fdc:	68cf      	ldr	r7, [r1, #12]
  401fde:	698e      	ldr	r6, [r1, #24]
  401fe0:	e891 0028 	ldmia.w	r1, {r3, r5}
  401fe4:	432b      	orrs	r3, r5
  401fe6:	688d      	ldr	r5, [r1, #8]
  401fe8:	4323      	orrs	r3, r4
				p_rx_clk_opt->ul_cko | p_rx_clk_opt->ul_cki |
				p_rx_clk_opt->ul_ckg |
				p_rx_clk_opt->ul_start_sel |
				SSC_RCMR_PERIOD(p_rx_clk_opt->ul_period) |
				SSC_RCMR_STTDLY(p_rx_clk_opt->ul_sttdly);
  401fea:	694c      	ldr	r4, [r1, #20]
		p_ssc->SSC_RCMR |= p_rx_clk_opt->ul_cks |
  401fec:	432b      	orrs	r3, r5
				SSC_RCMR_PERIOD(p_rx_clk_opt->ul_period) |
  401fee:	690d      	ldr	r5, [r1, #16]
				SSC_RCMR_STTDLY(p_rx_clk_opt->ul_sttdly);
  401ff0:	0421      	lsls	r1, r4, #16
		p_ssc->SSC_RCMR |= p_rx_clk_opt->ul_cks |
  401ff2:	433b      	orrs	r3, r7
				SSC_RCMR_STTDLY(p_rx_clk_opt->ul_sttdly);
  401ff4:	f401 017f 	and.w	r1, r1, #16711680	; 0xff0000
		p_ssc->SSC_RCMR |= p_rx_clk_opt->ul_cks |
  401ff8:	4333      	orrs	r3, r6
  401ffa:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
  401ffe:	430b      	orrs	r3, r1
  402000:	6103      	str	r3, [r0, #16]
	}

	if (p_rx_data_frame == NULL) {
  402002:	b1ea      	cbz	r2, 402040 <ssc_set_receiver+0x6c>
		p_ssc->SSC_RFMR = 0;
	} else {
		p_ssc->SSC_RFMR |= SSC_RFMR_DATLEN(p_rx_data_frame->ul_datlen) |
  402004:	6954      	ldr	r4, [r2, #20]
  402006:	6853      	ldr	r3, [r2, #4]
  402008:	6991      	ldr	r1, [r2, #24]
  40200a:	4323      	orrs	r3, r4
  40200c:	6946      	ldr	r6, [r0, #20]
  40200e:	6814      	ldr	r4, [r2, #0]
  402010:	430b      	orrs	r3, r1
				p_rx_data_frame->ul_msbf |
				SSC_RFMR_DATNB(p_rx_data_frame->ul_datnb) |
  402012:	6891      	ldr	r1, [r2, #8]
		p_ssc->SSC_RFMR |= SSC_RFMR_DATLEN(p_rx_data_frame->ul_datlen) |
  402014:	f004 041f 	and.w	r4, r4, #31
				SSC_RFMR_FSLEN(p_rx_data_frame->ul_fslen) |
				SSC_RFMR_FSLEN_EXT(p_rx_data_frame->ul_fslen_ext) |
  402018:	6915      	ldr	r5, [r2, #16]
		p_ssc->SSC_RFMR |= SSC_RFMR_DATLEN(p_rx_data_frame->ul_datlen) |
  40201a:	4333      	orrs	r3, r6
				SSC_RFMR_FSLEN(p_rx_data_frame->ul_fslen) |
  40201c:	68d2      	ldr	r2, [r2, #12]
				SSC_RFMR_DATNB(p_rx_data_frame->ul_datnb) |
  40201e:	0209      	lsls	r1, r1, #8
		p_ssc->SSC_RFMR |= SSC_RFMR_DATLEN(p_rx_data_frame->ul_datlen) |
  402020:	4323      	orrs	r3, r4
				SSC_RFMR_FSLEN(p_rx_data_frame->ul_fslen) |
  402022:	0412      	lsls	r2, r2, #16
				SSC_RFMR_DATNB(p_rx_data_frame->ul_datnb) |
  402024:	f401 6170 	and.w	r1, r1, #3840	; 0xf00
		p_ssc->SSC_RFMR |= SSC_RFMR_DATLEN(p_rx_data_frame->ul_datlen) |
  402028:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
				SSC_RFMR_FSLEN(p_rx_data_frame->ul_fslen) |
  40202c:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
		p_ssc->SSC_RFMR |= SSC_RFMR_DATLEN(p_rx_data_frame->ul_datlen) |
  402030:	430b      	orrs	r3, r1
  402032:	4313      	orrs	r3, r2
				p_rx_data_frame->ul_fsos |
				p_rx_data_frame->ul_fsedge;
	}
}
  402034:	bcf0      	pop	{r4, r5, r6, r7}
		p_ssc->SSC_RFMR |= SSC_RFMR_DATLEN(p_rx_data_frame->ul_datlen) |
  402036:	6143      	str	r3, [r0, #20]
}
  402038:	4770      	bx	lr
		p_ssc->SSC_RCMR = 0;
  40203a:	6101      	str	r1, [r0, #16]
	if (p_rx_data_frame == NULL) {
  40203c:	2a00      	cmp	r2, #0
  40203e:	d1e1      	bne.n	402004 <ssc_set_receiver+0x30>
		p_ssc->SSC_RFMR = 0;
  402040:	6142      	str	r2, [r0, #20]
}
  402042:	bcf0      	pop	{r4, r5, r6, r7}
  402044:	4770      	bx	lr
  402046:	bf00      	nop

00402048 <ssc_set_transmitter>:
 * \param p_tx_clk_opt Pointer to the transmitter clock configuration structure.
 * \param p_tx_data_frame Pointer to the transmitter data frame configuration structure.
 */
void ssc_set_transmitter(Ssc *p_ssc, clock_opt_t *p_tx_clk_opt,
		data_frame_opt_t *p_tx_data_frame)
{
  402048:	b4f0      	push	{r4, r5, r6, r7}
	if (p_tx_clk_opt == NULL) {
  40204a:	2900      	cmp	r1, #0
  40204c:	d02f      	beq.n	4020ae <ssc_set_transmitter+0x66>
		p_ssc->SSC_TCMR = 0;
	} else {
		p_ssc->SSC_TCMR |= p_tx_clk_opt->ul_cks |
  40204e:	6984      	ldr	r4, [r0, #24]
  402050:	68cf      	ldr	r7, [r1, #12]
  402052:	698e      	ldr	r6, [r1, #24]
  402054:	e891 0028 	ldmia.w	r1, {r3, r5}
  402058:	432b      	orrs	r3, r5
  40205a:	688d      	ldr	r5, [r1, #8]
  40205c:	4323      	orrs	r3, r4
				p_tx_clk_opt->ul_cko | p_tx_clk_opt->ul_cki |
				p_tx_clk_opt->ul_ckg |
				p_tx_clk_opt->ul_start_sel |
				SSC_TCMR_PERIOD(p_tx_clk_opt->ul_period) |
				SSC_TCMR_STTDLY(p_tx_clk_opt->ul_sttdly);
  40205e:	694c      	ldr	r4, [r1, #20]
		p_ssc->SSC_TCMR |= p_tx_clk_opt->ul_cks |
  402060:	432b      	orrs	r3, r5
				SSC_TCMR_PERIOD(p_tx_clk_opt->ul_period) |
  402062:	690d      	ldr	r5, [r1, #16]
				SSC_TCMR_STTDLY(p_tx_clk_opt->ul_sttdly);
  402064:	0421      	lsls	r1, r4, #16
		p_ssc->SSC_TCMR |= p_tx_clk_opt->ul_cks |
  402066:	433b      	orrs	r3, r7
				SSC_TCMR_STTDLY(p_tx_clk_opt->ul_sttdly);
  402068:	f401 017f 	and.w	r1, r1, #16711680	; 0xff0000
		p_ssc->SSC_TCMR |= p_tx_clk_opt->ul_cks |
  40206c:	4333      	orrs	r3, r6
  40206e:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
  402072:	430b      	orrs	r3, r1
  402074:	6183      	str	r3, [r0, #24]
	}

	if (p_tx_data_frame == NULL) {
  402076:	b1ea      	cbz	r2, 4020b4 <ssc_set_transmitter+0x6c>
		p_ssc->SSC_TFMR = 0;
	} else {
		p_ssc->SSC_TFMR |= SSC_RFMR_DATLEN(p_tx_data_frame->ul_datlen) |
  402078:	6954      	ldr	r4, [r2, #20]
  40207a:	6853      	ldr	r3, [r2, #4]
  40207c:	6991      	ldr	r1, [r2, #24]
  40207e:	4323      	orrs	r3, r4
  402080:	69c6      	ldr	r6, [r0, #28]
  402082:	6814      	ldr	r4, [r2, #0]
  402084:	430b      	orrs	r3, r1
				p_tx_data_frame->ul_msbf |
				SSC_TFMR_DATNB(p_tx_data_frame->ul_datnb) |
  402086:	6891      	ldr	r1, [r2, #8]
		p_ssc->SSC_TFMR |= SSC_RFMR_DATLEN(p_tx_data_frame->ul_datlen) |
  402088:	f004 041f 	and.w	r4, r4, #31
				SSC_TFMR_FSLEN(p_tx_data_frame->ul_fslen) |
				SSC_TFMR_FSLEN_EXT(p_tx_data_frame->ul_fslen_ext) |
  40208c:	6915      	ldr	r5, [r2, #16]
		p_ssc->SSC_TFMR |= SSC_RFMR_DATLEN(p_tx_data_frame->ul_datlen) |
  40208e:	4333      	orrs	r3, r6
				SSC_TFMR_FSLEN(p_tx_data_frame->ul_fslen) |
  402090:	68d2      	ldr	r2, [r2, #12]
				SSC_TFMR_DATNB(p_tx_data_frame->ul_datnb) |
  402092:	0209      	lsls	r1, r1, #8
		p_ssc->SSC_TFMR |= SSC_RFMR_DATLEN(p_tx_data_frame->ul_datlen) |
  402094:	4323      	orrs	r3, r4
				SSC_TFMR_FSLEN(p_tx_data_frame->ul_fslen) |
  402096:	0412      	lsls	r2, r2, #16
				SSC_TFMR_DATNB(p_tx_data_frame->ul_datnb) |
  402098:	f401 6170 	and.w	r1, r1, #3840	; 0xf00
		p_ssc->SSC_TFMR |= SSC_RFMR_DATLEN(p_tx_data_frame->ul_datlen) |
  40209c:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
				SSC_TFMR_FSLEN(p_tx_data_frame->ul_fslen) |
  4020a0:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
		p_ssc->SSC_TFMR |= SSC_RFMR_DATLEN(p_tx_data_frame->ul_datlen) |
  4020a4:	430b      	orrs	r3, r1
  4020a6:	4313      	orrs	r3, r2
				p_tx_data_frame->ul_fsos |
				p_tx_data_frame->ul_fsedge;
	}
}
  4020a8:	bcf0      	pop	{r4, r5, r6, r7}
		p_ssc->SSC_TFMR |= SSC_RFMR_DATLEN(p_tx_data_frame->ul_datlen) |
  4020aa:	61c3      	str	r3, [r0, #28]
}
  4020ac:	4770      	bx	lr
		p_ssc->SSC_TCMR = 0;
  4020ae:	6181      	str	r1, [r0, #24]
	if (p_tx_data_frame == NULL) {
  4020b0:	2a00      	cmp	r2, #0
  4020b2:	d1e1      	bne.n	402078 <ssc_set_transmitter+0x30>
		p_ssc->SSC_TFMR = 0;
  4020b4:	61c2      	str	r2, [r0, #28]
}
  4020b6:	bcf0      	pop	{r4, r5, r6, r7}
  4020b8:	4770      	bx	lr
  4020ba:	bf00      	nop

004020bc <ssc_disable_interrupt>:
 * \param p_ssc Pointer to an SSC instance.
 * \param ul_sources Interrupts to be enabled.
 */
void ssc_disable_interrupt(Ssc *p_ssc, uint32_t ul_sources)
{
	p_ssc->SSC_IDR = ul_sources;
  4020bc:	6481      	str	r1, [r0, #72]	; 0x48
  4020be:	4770      	bx	lr

004020c0 <twihs_master_init>:
 * \param p_opt Options for initializing the TWIHS module (see \ref twihs_options_t).
 *
 * \return TWIHS_SUCCESS if initialization is complete, error code otherwise.
 */
uint32_t twihs_master_init(Twihs *p_twihs, const twihs_options_t *p_opt)
{
  4020c0:	b4f0      	push	{r4, r5, r6, r7}
	uint32_t status = TWIHS_SUCCESS;

	/* Disable TWIHS interrupts */
	p_twihs->TWIHS_IDR = ~0UL;
  4020c2:	f04f 33ff 	mov.w	r3, #4294967295
 * \param p_twihs Pointer to a TWIHS instance.
 */
void twihs_reset(Twihs *p_twihs)
{
	/* Set SWRST bit to reset TWIHS peripheral */
	p_twihs->TWIHS_CR = TWIHS_CR_SWRST;
  4020c6:	2680      	movs	r6, #128	; 0x80
	p_twihs->TWIHS_CR = TWIHS_CR_MSEN;
  4020c8:	2204      	movs	r2, #4
	p_twihs->TWIHS_CR = TWIHS_CR_MSDIS;
  4020ca:	2508      	movs	r5, #8
	p_twihs->TWIHS_CR = TWIHS_CR_SVDIS;
  4020cc:	2420      	movs	r4, #32
	p_twihs->TWIHS_IDR = ~0UL;
  4020ce:	6283      	str	r3, [r0, #40]	; 0x28
	if (ul_speed > I2C_FAST_MODE_SPEED) {
  4020d0:	4b2f      	ldr	r3, [pc, #188]	; (402190 <twihs_master_init+0xd0>)
	p_twihs->TWIHS_SR;
  4020d2:	6a07      	ldr	r7, [r0, #32]
	p_twihs->TWIHS_CR = TWIHS_CR_SWRST;
  4020d4:	6006      	str	r6, [r0, #0]
	p_twihs->TWIHS_RHR;
  4020d6:	6b06      	ldr	r6, [r0, #48]	; 0x30
	p_twihs->TWIHS_CR = TWIHS_CR_MSDIS;
  4020d8:	6005      	str	r5, [r0, #0]
	p_twihs->TWIHS_CR = TWIHS_CR_SVDIS;
  4020da:	6004      	str	r4, [r0, #0]
	p_twihs->TWIHS_CR = TWIHS_CR_MSEN;
  4020dc:	6002      	str	r2, [r0, #0]
	if (twihs_set_speed(p_twihs, p_opt->speed, p_opt->master_clk) == FAIL) {
  4020de:	684a      	ldr	r2, [r1, #4]
	if (ul_speed > I2C_FAST_MODE_SPEED) {
  4020e0:	429a      	cmp	r2, r3
  4020e2:	d84d      	bhi.n	402180 <twihs_master_init+0xc0>
	if (ul_speed > LOW_LEVEL_TIME_LIMIT) {
  4020e4:	4c2b      	ldr	r4, [pc, #172]	; (402194 <twihs_master_init+0xd4>)
	if (twihs_set_speed(p_twihs, p_opt->speed, p_opt->master_clk) == FAIL) {
  4020e6:	680b      	ldr	r3, [r1, #0]
	if (ul_speed > LOW_LEVEL_TIME_LIMIT) {
  4020e8:	42a2      	cmp	r2, r4
  4020ea:	d92e      	bls.n	40214a <twihs_master_init+0x8a>
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  4020ec:	4c2a      	ldr	r4, [pc, #168]	; (402198 <twihs_master_init+0xd8>)
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  4020ee:	492b      	ldr	r1, [pc, #172]	; (40219c <twihs_master_init+0xdc>)
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  4020f0:	4414      	add	r4, r2
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  4020f2:	fba1 2103 	umull	r2, r1, r1, r3
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  4020f6:	00a4      	lsls	r4, r4, #2
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  4020f8:	0b89      	lsrs	r1, r1, #14
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  4020fa:	fbb3 f3f4 	udiv	r3, r3, r4
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  4020fe:	3903      	subs	r1, #3
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  402100:	3b03      	subs	r3, #3
		while ((cldiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  402102:	29ff      	cmp	r1, #255	; 0xff
  402104:	d940      	bls.n	402188 <twihs_master_init+0xc8>
  402106:	2200      	movs	r2, #0
  402108:	e000      	b.n	40210c <twihs_master_init+0x4c>
  40210a:	b13c      	cbz	r4, 40211c <twihs_master_init+0x5c>
			ckdiv++;
  40210c:	3201      	adds	r2, #1
			cldiv /= TWIHS_CLK_DIVIDER;
  40210e:	0849      	lsrs	r1, r1, #1
		while ((cldiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  402110:	2a06      	cmp	r2, #6
  402112:	bf8c      	ite	hi
  402114:	2400      	movhi	r4, #0
  402116:	2401      	movls	r4, #1
  402118:	29ff      	cmp	r1, #255	; 0xff
  40211a:	d8f6      	bhi.n	40210a <twihs_master_init+0x4a>
		while ((chdiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  40211c:	2bff      	cmp	r3, #255	; 0xff
  40211e:	d907      	bls.n	402130 <twihs_master_init+0x70>
  402120:	b914      	cbnz	r4, 402128 <twihs_master_init+0x68>
  402122:	e005      	b.n	402130 <twihs_master_init+0x70>
  402124:	2a06      	cmp	r2, #6
  402126:	d803      	bhi.n	402130 <twihs_master_init+0x70>
			chdiv /= TWIHS_CLK_DIVIDER;
  402128:	085b      	lsrs	r3, r3, #1
			ckdiv++;
  40212a:	3201      	adds	r2, #1
		while ((chdiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  40212c:	2bff      	cmp	r3, #255	; 0xff
  40212e:	d8f9      	bhi.n	402124 <twihs_master_init+0x64>
				TWIHS_CWGR_CLDIV(cldiv) | TWIHS_CWGR_CHDIV(chdiv) |
  402130:	021b      	lsls	r3, r3, #8
	uint32_t status = TWIHS_SUCCESS;
  402132:	2400      	movs	r4, #0
				TWIHS_CWGR_CKDIV(ckdiv);
  402134:	0412      	lsls	r2, r2, #16
				TWIHS_CWGR_CLDIV(cldiv) | TWIHS_CWGR_CHDIV(chdiv) |
  402136:	b29b      	uxth	r3, r3
				TWIHS_CWGR_CKDIV(ckdiv);
  402138:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
				TWIHS_CWGR_CLDIV(cldiv) | TWIHS_CWGR_CHDIV(chdiv) |
  40213c:	b2c9      	uxtb	r1, r1
  40213e:	4313      	orrs	r3, r2
  402140:	430b      	orrs	r3, r1
		p_twihs->TWIHS_CWGR =
  402142:	6103      	str	r3, [r0, #16]
}
  402144:	4620      	mov	r0, r4
  402146:	bcf0      	pop	{r4, r5, r6, r7}
  402148:	4770      	bx	lr
		c_lh_div = ul_mck / (ul_speed * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  40214a:	0052      	lsls	r2, r2, #1
  40214c:	fbb3 f3f2 	udiv	r3, r3, r2
  402150:	3b03      	subs	r3, #3
		while ((c_lh_div > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  402152:	2200      	movs	r2, #0
  402154:	2bff      	cmp	r3, #255	; 0xff
  402156:	d802      	bhi.n	40215e <twihs_master_init+0x9e>
  402158:	e008      	b.n	40216c <twihs_master_init+0xac>
  40215a:	2a06      	cmp	r2, #6
  40215c:	d803      	bhi.n	402166 <twihs_master_init+0xa6>
			c_lh_div /= TWIHS_CLK_DIVIDER;
  40215e:	085b      	lsrs	r3, r3, #1
			ckdiv++;
  402160:	3201      	adds	r2, #1
		while ((c_lh_div > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  402162:	2bff      	cmp	r3, #255	; 0xff
  402164:	d8f9      	bhi.n	40215a <twihs_master_init+0x9a>
  402166:	0412      	lsls	r2, r2, #16
  402168:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
				TWIHS_CWGR_CLDIV(c_lh_div) | TWIHS_CWGR_CHDIV(c_lh_div) |
  40216c:	0219      	lsls	r1, r3, #8
	uint32_t status = TWIHS_SUCCESS;
  40216e:	2400      	movs	r4, #0
				TWIHS_CWGR_CLDIV(c_lh_div) | TWIHS_CWGR_CHDIV(c_lh_div) |
  402170:	b2db      	uxtb	r3, r3
  402172:	b289      	uxth	r1, r1
  402174:	4313      	orrs	r3, r2
  402176:	430b      	orrs	r3, r1
		p_twihs->TWIHS_CWGR =
  402178:	6103      	str	r3, [r0, #16]
}
  40217a:	4620      	mov	r0, r4
  40217c:	bcf0      	pop	{r4, r5, r6, r7}
  40217e:	4770      	bx	lr
		status = TWIHS_INVALID_ARGUMENT;
  402180:	2401      	movs	r4, #1
}
  402182:	4620      	mov	r0, r4
  402184:	bcf0      	pop	{r4, r5, r6, r7}
  402186:	4770      	bx	lr
		while ((cldiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  402188:	2401      	movs	r4, #1
	uint32_t ckdiv = 0;
  40218a:	2200      	movs	r2, #0
  40218c:	e7c6      	b.n	40211c <twihs_master_init+0x5c>
  40218e:	bf00      	nop
  402190:	00061a80 	.word	0x00061a80
  402194:	0005dc00 	.word	0x0005dc00
  402198:	3ffd1200 	.word	0x3ffd1200
  40219c:	057619f1 	.word	0x057619f1

004021a0 <twihs_master_read>:
	uint32_t status, cnt = p_packet->length;
  4021a0:	68ca      	ldr	r2, [r1, #12]
	if (cnt == 0) {
  4021a2:	2a00      	cmp	r2, #0
  4021a4:	d053      	beq.n	40224e <twihs_master_read+0xae>
{
  4021a6:	b470      	push	{r4, r5, r6}
	p_twihs->TWIHS_MMR = 0;
  4021a8:	2600      	movs	r6, #0
	uint8_t *buffer = p_packet->buffer;
  4021aa:	688c      	ldr	r4, [r1, #8]
	p_twihs->TWIHS_MMR = 0;
  4021ac:	6046      	str	r6, [r0, #4]
			((p_packet->addr_length << TWIHS_MMR_IADRSZ_Pos) &
  4021ae:	684b      	ldr	r3, [r1, #4]
	p_twihs->TWIHS_MMR = TWIHS_MMR_MREAD | TWIHS_MMR_DADR(p_packet->chip) |
  4021b0:	7c0d      	ldrb	r5, [r1, #16]
			((p_packet->addr_length << TWIHS_MMR_IADRSZ_Pos) &
  4021b2:	021b      	lsls	r3, r3, #8
	p_twihs->TWIHS_MMR = TWIHS_MMR_MREAD | TWIHS_MMR_DADR(p_packet->chip) |
  4021b4:	042d      	lsls	r5, r5, #16
			((p_packet->addr_length << TWIHS_MMR_IADRSZ_Pos) &
  4021b6:	f403 7340 	and.w	r3, r3, #768	; 0x300
	p_twihs->TWIHS_MMR = TWIHS_MMR_MREAD | TWIHS_MMR_DADR(p_packet->chip) |
  4021ba:	f405 05fe 	and.w	r5, r5, #8323072	; 0x7f0000
  4021be:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
  4021c2:	432b      	orrs	r3, r5
  4021c4:	6043      	str	r3, [r0, #4]
	p_twihs->TWIHS_IADR = 0;
  4021c6:	60c6      	str	r6, [r0, #12]
	p_twihs->TWIHS_IADR = twihs_mk_addr(p_packet->addr, p_packet->addr_length);
  4021c8:	684b      	ldr	r3, [r1, #4]
	if (len == 0)
  4021ca:	b99b      	cbnz	r3, 4021f4 <twihs_master_read+0x54>
		return 0;
  4021cc:	461d      	mov	r5, r3
	p_twihs->TWIHS_CR = TWIHS_CR_START;
  4021ce:	2301      	movs	r3, #1
	p_twihs->TWIHS_IADR = twihs_mk_addr(p_packet->addr, p_packet->addr_length);
  4021d0:	60c5      	str	r5, [r0, #12]
	p_twihs->TWIHS_CR = TWIHS_CR_START;
  4021d2:	6003      	str	r3, [r0, #0]
		status = p_twihs->TWIHS_SR;
  4021d4:	6a03      	ldr	r3, [r0, #32]
		if (status & TWIHS_SR_NACK) {
  4021d6:	05d9      	lsls	r1, r3, #23
  4021d8:	d41f      	bmi.n	40221a <twihs_master_read+0x7a>
  4021da:	2a01      	cmp	r2, #1
  4021dc:	d020      	beq.n	402220 <twihs_master_read+0x80>
  4021de:	f247 5130 	movw	r1, #30000	; 0x7530
		if (!(status & TWIHS_SR_RXRDY)) {
  4021e2:	079e      	lsls	r6, r3, #30
  4021e4:	d412      	bmi.n	40220c <twihs_master_read+0x6c>
		status = p_twihs->TWIHS_SR;
  4021e6:	6a03      	ldr	r3, [r0, #32]
		if (status & TWIHS_SR_NACK) {
  4021e8:	05dd      	lsls	r5, r3, #23
  4021ea:	d416      	bmi.n	40221a <twihs_master_read+0x7a>
		if (!timeout--) {
  4021ec:	3901      	subs	r1, #1
  4021ee:	d1f8      	bne.n	4021e2 <twihs_master_read+0x42>
			return TWIHS_ERROR_TIMEOUT;
  4021f0:	2009      	movs	r0, #9
  4021f2:	e02a      	b.n	40224a <twihs_master_read+0xaa>
	if (len > 1) {
  4021f4:	2b01      	cmp	r3, #1
	val = addr[0];
  4021f6:	780d      	ldrb	r5, [r1, #0]
	if (len > 1) {
  4021f8:	dde9      	ble.n	4021ce <twihs_master_read+0x2e>
		val |= addr[1];
  4021fa:	784e      	ldrb	r6, [r1, #1]
	if (len > 2) {
  4021fc:	2b02      	cmp	r3, #2
		val |= addr[1];
  4021fe:	ea46 2505 	orr.w	r5, r6, r5, lsl #8
	if (len > 2) {
  402202:	d0e4      	beq.n	4021ce <twihs_master_read+0x2e>
		val |= addr[2];
  402204:	788b      	ldrb	r3, [r1, #2]
  402206:	ea43 2505 	orr.w	r5, r3, r5, lsl #8
  40220a:	e7e0      	b.n	4021ce <twihs_master_read+0x2e>
		*buffer++ = p_twihs->TWIHS_RHR;
  40220c:	6b03      	ldr	r3, [r0, #48]	; 0x30
		cnt--;
  40220e:	3a01      	subs	r2, #1
		*buffer++ = p_twihs->TWIHS_RHR;
  402210:	f804 3b01 	strb.w	r3, [r4], #1
		status = p_twihs->TWIHS_SR;
  402214:	6a03      	ldr	r3, [r0, #32]
		if (status & TWIHS_SR_NACK) {
  402216:	05d9      	lsls	r1, r3, #23
  402218:	d5df      	bpl.n	4021da <twihs_master_read+0x3a>
			return TWIHS_RECEIVE_NACK;
  40221a:	2005      	movs	r0, #5
}
  40221c:	bc70      	pop	{r4, r5, r6}
  40221e:	4770      	bx	lr
			p_twihs->TWIHS_CR = TWIHS_CR_STOP;
  402220:	2102      	movs	r1, #2
		if (!(status & TWIHS_SR_RXRDY)) {
  402222:	079d      	lsls	r5, r3, #30
		if (status & TWIHS_SR_NACK) {
  402224:	f247 5230 	movw	r2, #30000	; 0x7530
			p_twihs->TWIHS_CR = TWIHS_CR_STOP;
  402228:	6001      	str	r1, [r0, #0]
		if (!(status & TWIHS_SR_RXRDY)) {
  40222a:	d407      	bmi.n	40223c <twihs_master_read+0x9c>
		status = p_twihs->TWIHS_SR;
  40222c:	6a03      	ldr	r3, [r0, #32]
		if (status & TWIHS_SR_NACK) {
  40222e:	05de      	lsls	r6, r3, #23
  402230:	d4f3      	bmi.n	40221a <twihs_master_read+0x7a>
		if (!timeout--) {
  402232:	3a01      	subs	r2, #1
  402234:	d0dc      	beq.n	4021f0 <twihs_master_read+0x50>
		if (!(status & TWIHS_SR_RXRDY)) {
  402236:	079d      	lsls	r5, r3, #30
			p_twihs->TWIHS_CR = TWIHS_CR_STOP;
  402238:	6001      	str	r1, [r0, #0]
		if (!(status & TWIHS_SR_RXRDY)) {
  40223a:	d5f7      	bpl.n	40222c <twihs_master_read+0x8c>
		*buffer++ = p_twihs->TWIHS_RHR;
  40223c:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40223e:	7023      	strb	r3, [r4, #0]
	while (!(p_twihs->TWIHS_SR & TWIHS_SR_TXCOMP)) {
  402240:	6a03      	ldr	r3, [r0, #32]
  402242:	07db      	lsls	r3, r3, #31
  402244:	d5fc      	bpl.n	402240 <twihs_master_read+0xa0>
	p_twihs->TWIHS_SR;
  402246:	6a03      	ldr	r3, [r0, #32]
	return TWIHS_SUCCESS;
  402248:	2000      	movs	r0, #0
}
  40224a:	bc70      	pop	{r4, r5, r6}
  40224c:	4770      	bx	lr
		return TWIHS_INVALID_ARGUMENT;
  40224e:	2001      	movs	r0, #1
  402250:	4770      	bx	lr
  402252:	bf00      	nop

00402254 <twihs_master_write>:
{
  402254:	4603      	mov	r3, r0
	uint32_t status, cnt = p_packet->length;
  402256:	68c8      	ldr	r0, [r1, #12]
	if (cnt == 0) {
  402258:	2800      	cmp	r0, #0
  40225a:	d034      	beq.n	4022c6 <twihs_master_write+0x72>
{
  40225c:	b470      	push	{r4, r5, r6}
	p_twihs->TWIHS_MMR = 0;
  40225e:	2600      	movs	r6, #0
	uint8_t *buffer = p_packet->buffer;
  402260:	688c      	ldr	r4, [r1, #8]
	p_twihs->TWIHS_MMR = 0;
  402262:	605e      	str	r6, [r3, #4]
	p_twihs->TWIHS_MMR = TWIHS_MMR_DADR(p_packet->chip) |
  402264:	7c0a      	ldrb	r2, [r1, #16]
			((p_packet->addr_length << TWIHS_MMR_IADRSZ_Pos) &
  402266:	684d      	ldr	r5, [r1, #4]
	p_twihs->TWIHS_MMR = TWIHS_MMR_DADR(p_packet->chip) |
  402268:	0412      	lsls	r2, r2, #16
			((p_packet->addr_length << TWIHS_MMR_IADRSZ_Pos) &
  40226a:	022d      	lsls	r5, r5, #8
	p_twihs->TWIHS_MMR = TWIHS_MMR_DADR(p_packet->chip) |
  40226c:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
			((p_packet->addr_length << TWIHS_MMR_IADRSZ_Pos) &
  402270:	f405 7540 	and.w	r5, r5, #768	; 0x300
	p_twihs->TWIHS_MMR = TWIHS_MMR_DADR(p_packet->chip) |
  402274:	432a      	orrs	r2, r5
  402276:	605a      	str	r2, [r3, #4]
	p_twihs->TWIHS_IADR = 0;
  402278:	60de      	str	r6, [r3, #12]
	p_twihs->TWIHS_IADR = twihs_mk_addr(p_packet->addr, p_packet->addr_length);
  40227a:	684a      	ldr	r2, [r1, #4]
	if (len == 0)
  40227c:	b98a      	cbnz	r2, 4022a2 <twihs_master_write+0x4e>
		return 0;
  40227e:	4615      	mov	r5, r2
	p_twihs->TWIHS_IADR = twihs_mk_addr(p_packet->addr, p_packet->addr_length);
  402280:	60dd      	str	r5, [r3, #12]
		status = p_twihs->TWIHS_SR;
  402282:	6a1a      	ldr	r2, [r3, #32]
		if (status & TWIHS_SR_NACK) {
  402284:	05d6      	lsls	r6, r2, #23
  402286:	d409      	bmi.n	40229c <twihs_master_write+0x48>
		if (!(status & TWIHS_SR_TXRDY)) {
  402288:	0755      	lsls	r5, r2, #29
  40228a:	d5fa      	bpl.n	402282 <twihs_master_write+0x2e>
		p_twihs->TWIHS_THR = *buffer++;
  40228c:	f814 2b01 	ldrb.w	r2, [r4], #1
	while (cnt > 0) {
  402290:	3801      	subs	r0, #1
		p_twihs->TWIHS_THR = *buffer++;
  402292:	635a      	str	r2, [r3, #52]	; 0x34
	while (cnt > 0) {
  402294:	d013      	beq.n	4022be <twihs_master_write+0x6a>
		status = p_twihs->TWIHS_SR;
  402296:	6a1a      	ldr	r2, [r3, #32]
		if (status & TWIHS_SR_NACK) {
  402298:	05d6      	lsls	r6, r2, #23
  40229a:	d5f5      	bpl.n	402288 <twihs_master_write+0x34>
			return TWIHS_RECEIVE_NACK;
  40229c:	2005      	movs	r0, #5
}
  40229e:	bc70      	pop	{r4, r5, r6}
  4022a0:	4770      	bx	lr
	if (len > 1) {
  4022a2:	2a01      	cmp	r2, #1
	val = addr[0];
  4022a4:	780d      	ldrb	r5, [r1, #0]
	if (len > 1) {
  4022a6:	ddeb      	ble.n	402280 <twihs_master_write+0x2c>
		val |= addr[1];
  4022a8:	784e      	ldrb	r6, [r1, #1]
	if (len > 2) {
  4022aa:	2a02      	cmp	r2, #2
		val |= addr[1];
  4022ac:	ea46 2505 	orr.w	r5, r6, r5, lsl #8
	if (len > 2) {
  4022b0:	d0e6      	beq.n	402280 <twihs_master_write+0x2c>
		val |= addr[2];
  4022b2:	788a      	ldrb	r2, [r1, #2]
  4022b4:	ea42 2505 	orr.w	r5, r2, r5, lsl #8
  4022b8:	e7e2      	b.n	402280 <twihs_master_write+0x2c>
		if (status & TWIHS_SR_TXRDY) {
  4022ba:	0751      	lsls	r1, r2, #29
  4022bc:	d405      	bmi.n	4022ca <twihs_master_write+0x76>
		status = p_twihs->TWIHS_SR;
  4022be:	6a1a      	ldr	r2, [r3, #32]
		if (status & TWIHS_SR_NACK) {
  4022c0:	05d4      	lsls	r4, r2, #23
  4022c2:	d4eb      	bmi.n	40229c <twihs_master_write+0x48>
  4022c4:	e7f9      	b.n	4022ba <twihs_master_write+0x66>
		return TWIHS_INVALID_ARGUMENT;
  4022c6:	2001      	movs	r0, #1
  4022c8:	4770      	bx	lr
	p_twihs->TWIHS_CR = TWIHS_CR_STOP;
  4022ca:	2202      	movs	r2, #2
  4022cc:	601a      	str	r2, [r3, #0]
	while (!(p_twihs->TWIHS_SR & TWIHS_SR_TXCOMP)) {
  4022ce:	6a1a      	ldr	r2, [r3, #32]
  4022d0:	07d2      	lsls	r2, r2, #31
  4022d2:	d5fc      	bpl.n	4022ce <twihs_master_write+0x7a>
}
  4022d4:	bc70      	pop	{r4, r5, r6}
  4022d6:	4770      	bx	lr

004022d8 <usart_init_rs232>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_init_rs232(Usart *p_usart,
		const sam_usart_opt_t *p_usart_opt, uint32_t ul_mck)
{
  4022d8:	b5f0      	push	{r4, r5, r6, r7, lr}
  4022da:	4603      	mov	r3, r0
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
  4022dc:	4c24      	ldr	r4, [pc, #144]	; (402370 <usart_init_rs232+0x98>)
	p_usart->US_MR = 0;
  4022de:	2000      	movs	r0, #0
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
  4022e0:	f04f 0e88 	mov.w	lr, #136	; 0x88
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
  4022e4:	f8c3 40e4 	str.w	r4, [r3, #228]	; 0xe4
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
  4022e8:	2724      	movs	r7, #36	; 0x24
	p_usart->US_CR = US_CR_RSTSTA;
  4022ea:	f44f 7680 	mov.w	r6, #256	; 0x100
	p_usart->US_CR = US_CR_RTSDIS;
  4022ee:	f44f 2500 	mov.w	r5, #524288	; 0x80000
	ul_reg_val = 0;
  4022f2:	4c20      	ldr	r4, [pc, #128]	; (402374 <usart_init_rs232+0x9c>)
	p_usart->US_MR = 0;
  4022f4:	6058      	str	r0, [r3, #4]
	ul_reg_val = 0;
  4022f6:	6020      	str	r0, [r4, #0]
	p_usart->US_RTOR = 0;
  4022f8:	6258      	str	r0, [r3, #36]	; 0x24
	p_usart->US_TTGR = 0;
  4022fa:	6298      	str	r0, [r3, #40]	; 0x28
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
  4022fc:	f8c3 e000 	str.w	lr, [r3]
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
  402300:	601f      	str	r7, [r3, #0]
	p_usart->US_CR = US_CR_RSTSTA;
  402302:	601e      	str	r6, [r3, #0]
	p_usart->US_CR = US_CR_RTSDIS;
  402304:	601d      	str	r5, [r3, #0]
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
  402306:	b361      	cbz	r1, 402362 <usart_init_rs232+0x8a>
  402308:	6808      	ldr	r0, [r1, #0]
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
  40230a:	0105      	lsls	r5, r0, #4
  40230c:	42aa      	cmp	r2, r5
  40230e:	d31c      	bcc.n	40234a <usart_init_rs232+0x72>
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  402310:	0868      	lsrs	r0, r5, #1
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  402312:	f64f 76fe 	movw	r6, #65534	; 0xfffe
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  402316:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
  40231a:	fbb2 f2f5 	udiv	r2, r2, r5
	cd = cd_fp >> 3;
  40231e:	08d5      	lsrs	r5, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  402320:	1e68      	subs	r0, r5, #1
  402322:	42b0      	cmp	r0, r6
  402324:	d81d      	bhi.n	402362 <usart_init_rs232+0x8a>
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
  402326:	0412      	lsls	r2, r2, #16
	p_usart->US_MR |= ul_reg_val;
  402328:	2000      	movs	r0, #0
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
  40232a:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
  40232e:	432a      	orrs	r2, r5
  402330:	621a      	str	r2, [r3, #32]
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  402332:	684d      	ldr	r5, [r1, #4]
  402334:	688a      	ldr	r2, [r1, #8]
  402336:	690f      	ldr	r7, [r1, #16]
  402338:	432a      	orrs	r2, r5
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  40233a:	68ce      	ldr	r6, [r1, #12]
	p_usart->US_MR |= ul_reg_val;
  40233c:	6859      	ldr	r1, [r3, #4]
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  40233e:	433a      	orrs	r2, r7
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  402340:	4332      	orrs	r2, r6
	p_usart->US_MR |= ul_reg_val;
  402342:	4311      	orrs	r1, r2
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  402344:	6022      	str	r2, [r4, #0]
	p_usart->US_MR |= ul_reg_val;
  402346:	6059      	str	r1, [r3, #4]
  402348:	bdf0      	pop	{r4, r5, r6, r7, pc}
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  40234a:	00c0      	lsls	r0, r0, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  40234c:	f64f 76fe 	movw	r6, #65534	; 0xfffe
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  402350:	00d2      	lsls	r2, r2, #3
  402352:	eb02 0250 	add.w	r2, r2, r0, lsr #1
  402356:	fbb2 f2f0 	udiv	r2, r2, r0
	cd = cd_fp >> 3;
  40235a:	08d5      	lsrs	r5, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  40235c:	1e68      	subs	r0, r5, #1
  40235e:	42b0      	cmp	r0, r6
  402360:	d901      	bls.n	402366 <usart_init_rs232+0x8e>
		return 1;
  402362:	2001      	movs	r0, #1
  402364:	bdf0      	pop	{r4, r5, r6, r7, pc}
		p_usart->US_MR |= US_MR_OVER;
  402366:	6858      	ldr	r0, [r3, #4]
  402368:	f440 2000 	orr.w	r0, r0, #524288	; 0x80000
  40236c:	6058      	str	r0, [r3, #4]
  40236e:	e7da      	b.n	402326 <usart_init_rs232+0x4e>
  402370:	55534100 	.word	0x55534100
  402374:	2040ea88 	.word	0x2040ea88

00402378 <usart_enable_tx>:
	p_usart->US_CR = US_CR_TXEN;
  402378:	2340      	movs	r3, #64	; 0x40
  40237a:	6003      	str	r3, [r0, #0]
  40237c:	4770      	bx	lr
  40237e:	bf00      	nop

00402380 <usart_enable_rx>:
	p_usart->US_CR = US_CR_RXEN;
  402380:	2310      	movs	r3, #16
  402382:	6003      	str	r3, [r0, #0]
  402384:	4770      	bx	lr
  402386:	bf00      	nop

00402388 <usart_enable_interrupt>:
	p_usart->US_IER = ul_sources;
  402388:	6081      	str	r1, [r0, #8]
  40238a:	4770      	bx	lr

0040238c <usart_get_status>:
	return p_usart->US_CSR;
  40238c:	6940      	ldr	r0, [r0, #20]
}
  40238e:	4770      	bx	lr

00402390 <usart_read>:
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  402390:	6943      	ldr	r3, [r0, #20]
  402392:	07db      	lsls	r3, r3, #31
  402394:	d505      	bpl.n	4023a2 <usart_read+0x12>
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  402396:	6983      	ldr	r3, [r0, #24]
	return 0;
  402398:	2000      	movs	r0, #0
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  40239a:	f3c3 0308 	ubfx	r3, r3, #0, #9
  40239e:	600b      	str	r3, [r1, #0]
	return 0;
  4023a0:	4770      	bx	lr
		return 1;
  4023a2:	2001      	movs	r0, #1
}
  4023a4:	4770      	bx	lr
  4023a6:	bf00      	nop

004023a8 <xdmac_configure_transfer>:
	return xdmac->XDMAC_CHID[channel_num].XDMAC_CIS;
  4023a8:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	Assert(xdmac);
	Assert(channel_num < XDMACCHID_NUMBER);
	Assert(cfg);
	
	xdmac_channel_get_interrupt_status( xdmac, channel_num);
	xdmac_channel_set_source_addr(xdmac, channel_num, cfg->mbr_sa);
  4023ac:	6853      	ldr	r3, [r2, #4]
  4023ae:	6dc8      	ldr	r0, [r1, #92]	; 0x5c
	xdmac->XDMAC_CHID[channel_num].XDMAC_CSA = src_addr;
  4023b0:	660b      	str	r3, [r1, #96]	; 0x60
	xdmac_channel_set_destination_addr(xdmac, channel_num, cfg->mbr_da);
  4023b2:	6893      	ldr	r3, [r2, #8]
	xdmac->XDMAC_CHID[channel_num].XDMAC_CDA = dst_addr;
  4023b4:	664b      	str	r3, [r1, #100]	; 0x64
 */
static inline void xdmac_channel_set_microblock_control(Xdmac *xdmac, uint32_t channel_num, uint32_t ublen)
{
	Assert(xdmac);
	Assert(channel_num < XDMACCHID_NUMBER);
	xdmac->XDMAC_CHID[channel_num].XDMAC_CUBC = XDMAC_CUBC_UBLEN(ublen);
  4023b6:	6813      	ldr	r3, [r2, #0]
  4023b8:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
  4023bc:	670b      	str	r3, [r1, #112]	; 0x70
 */
static inline void xdmac_channel_set_block_control(Xdmac *xdmac, uint32_t channel_num, uint32_t blen)
{
	Assert(xdmac);
	Assert(channel_num < XDMACCHID_NUMBER);
	xdmac->XDMAC_CHID[channel_num].XDMAC_CBC = XDMAC_CBC_BLEN(blen);
  4023be:	6913      	ldr	r3, [r2, #16]
  4023c0:	f3c3 030b 	ubfx	r3, r3, #0, #12
  4023c4:	674b      	str	r3, [r1, #116]	; 0x74
	xdmac_channel_set_microblock_control(xdmac, channel_num, cfg->mbr_ubc);
	xdmac_channel_set_block_control(xdmac, channel_num, cfg->mbr_bc);
	xdmac_channel_set_datastride_mempattern(xdmac, channel_num, cfg->mbr_ds);
  4023c6:	6953      	ldr	r3, [r2, #20]
 */
static inline void xdmac_channel_set_datastride_mempattern(Xdmac *xdmac, uint32_t channel_num, uint32_t dds_msp)
{
	Assert(xdmac);
	Assert(channel_num < XDMACCHID_NUMBER);
	xdmac->XDMAC_CHID[channel_num].XDMAC_CDS_MSP = dds_msp;
  4023c8:	67cb      	str	r3, [r1, #124]	; 0x7c
static inline void xdmac_channel_set_source_microblock_stride(Xdmac *xdmac,
		uint32_t channel_num, uint32_t subs)
{
	Assert(xdmac);
	Assert(channel_num < XDMACCHID_NUMBER);
	xdmac->XDMAC_CHID[channel_num].XDMAC_CSUS = XDMAC_CSUS_SUBS(subs);
  4023ca:	6993      	ldr	r3, [r2, #24]
  4023cc:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
  4023d0:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
static inline void xdmac_channel_set_destination_microblock_stride(Xdmac *xdmac,
		uint32_t channel_num, uint32_t dubs)
{
	Assert(xdmac);
	Assert(channel_num < XDMACCHID_NUMBER);
	xdmac->XDMAC_CHID[channel_num].XDMAC_CDUS = XDMAC_CDUS_DUBS(dubs);
  4023d4:	69d3      	ldr	r3, [r2, #28]
  4023d6:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
  4023da:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
	xdmac_channel_set_source_microblock_stride(xdmac, channel_num, cfg->mbr_sus);
	xdmac_channel_set_destination_microblock_stride(xdmac, channel_num, cfg->mbr_dus);
	xdmac_channel_set_config(xdmac, channel_num, cfg->mbr_cfg );
  4023de:	68d3      	ldr	r3, [r2, #12]
	xdmac->XDMAC_CHID[channel_num].XDMAC_CC = config;
  4023e0:	678b      	str	r3, [r1, #120]	; 0x78
  4023e2:	4770      	bx	lr

004023e4 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  4023e4:	b570      	push	{r4, r5, r6, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  4023e6:	4810      	ldr	r0, [pc, #64]	; (402428 <sysclk_init+0x44>)
  4023e8:	4d10      	ldr	r5, [pc, #64]	; (40242c <sysclk_init+0x48>)
  4023ea:	47a8      	blx	r5
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  4023ec:	213e      	movs	r1, #62	; 0x3e
  4023ee:	2000      	movs	r0, #0
  4023f0:	4b0f      	ldr	r3, [pc, #60]	; (402430 <sysclk_init+0x4c>)
  4023f2:	4c10      	ldr	r4, [pc, #64]	; (402434 <sysclk_init+0x50>)
  4023f4:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  4023f6:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  4023f8:	2800      	cmp	r0, #0
  4023fa:	d0fc      	beq.n	4023f6 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  4023fc:	4b0e      	ldr	r3, [pc, #56]	; (402438 <sysclk_init+0x54>)
  4023fe:	4798      	blx	r3
  402400:	4c0e      	ldr	r4, [pc, #56]	; (40243c <sysclk_init+0x58>)
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  402402:	4b0f      	ldr	r3, [pc, #60]	; (402440 <sysclk_init+0x5c>)
  402404:	4a0f      	ldr	r2, [pc, #60]	; (402444 <sysclk_init+0x60>)
  402406:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  402408:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  40240a:	2800      	cmp	r0, #0
  40240c:	d0fc      	beq.n	402408 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  40240e:	2002      	movs	r0, #2
  402410:	4b0d      	ldr	r3, [pc, #52]	; (402448 <sysclk_init+0x64>)
  402412:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  402414:	4b0d      	ldr	r3, [pc, #52]	; (40244c <sysclk_init+0x68>)
  402416:	2000      	movs	r0, #0
  402418:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  40241a:	4b0d      	ldr	r3, [pc, #52]	; (402450 <sysclk_init+0x6c>)
  40241c:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  40241e:	462b      	mov	r3, r5
  402420:	4801      	ldr	r0, [pc, #4]	; (402428 <sysclk_init+0x44>)

#if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
	/* Signal that the internal frequencies are setup */
	sysclk_initialized = 1;
#endif
}
  402422:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	system_init_flash(sysclk_get_cpu_hz());
  402426:	4718      	bx	r3
  402428:	11e1a300 	.word	0x11e1a300
  40242c:	004031a5 	.word	0x004031a5
  402430:	00402eb5 	.word	0x00402eb5
  402434:	00402f09 	.word	0x00402f09
  402438:	00402f19 	.word	0x00402f19
  40243c:	00402f29 	.word	0x00402f29
  402440:	400e0600 	.word	0x400e0600
  402444:	20183f01 	.word	0x20183f01
  402448:	00402e31 	.word	0x00402e31
  40244c:	00402e61 	.word	0x00402e61
  402450:	004030bd 	.word	0x004030bd

00402454 <board_init>:

void board_init(void)
{
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  402454:	4ba4      	ldr	r3, [pc, #656]	; (4026e8 <board_init+0x294>)
  402456:	f44f 4200 	mov.w	r2, #32768	; 0x8000
{
  40245a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	WDT->WDT_MR = WDT_MR_WDDIS;
  40245e:	605a      	str	r2, [r3, #4]
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
  402460:	f3bf 8f5f 	dmb	sy
		mpu_cal_mpu_region_size(ITCM_END_ADDRESS - ITCM_START_ADDRESS) |
  402464:	f8df 82f4 	ldr.w	r8, [pc, #756]	; 40275c <board_init+0x308>
	dw_region_attr =
  402468:	4fa0      	ldr	r7, [pc, #640]	; (4026ec <board_init+0x298>)
		mpu_cal_mpu_region_size(ITCM_END_ADDRESS - ITCM_START_ADDRESS) |
  40246a:	4ea1      	ldr	r6, [pc, #644]	; (4026f0 <board_init+0x29c>)
  40246c:	4640      	mov	r0, r8
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  40246e:	4da1      	ldr	r5, [pc, #644]	; (4026f4 <board_init+0x2a0>)
		mpu_cal_mpu_region_size(ITCM_END_ADDRESS - ITCM_START_ADDRESS) |
  402470:	47b0      	blx	r6
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  402472:	ea40 0107 	orr.w	r1, r0, r7
  402476:	2011      	movs	r0, #17
  402478:	47a8      	blx	r5
		mpu_cal_mpu_region_size(IFLASH_END_ADDRESS - IFLASH_START_ADDRESS) |
  40247a:	489f      	ldr	r0, [pc, #636]	; (4026f8 <board_init+0x2a4>)
  40247c:	47b0      	blx	r6
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  40247e:	499f      	ldr	r1, [pc, #636]	; (4026fc <board_init+0x2a8>)
	dw_region_attr =
  402480:	4c9f      	ldr	r4, [pc, #636]	; (402700 <board_init+0x2ac>)
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  402482:	4301      	orrs	r1, r0
  402484:	489f      	ldr	r0, [pc, #636]	; (402704 <board_init+0x2b0>)
  402486:	47a8      	blx	r5
		mpu_cal_mpu_region_size(DTCM_END_ADDRESS - DTCM_START_ADDRESS) |
  402488:	4640      	mov	r0, r8
  40248a:	47b0      	blx	r6
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  40248c:	ea40 0107 	orr.w	r1, r0, r7
  402490:	489d      	ldr	r0, [pc, #628]	; (402708 <board_init+0x2b4>)
  402492:	47a8      	blx	r5
		mpu_cal_mpu_region_size(SRAM_FIRST_END_ADDRESS - SRAM_FIRST_START_ADDRESS)
  402494:	489d      	ldr	r0, [pc, #628]	; (40270c <board_init+0x2b8>)
  402496:	47b0      	blx	r6
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  402498:	ea40 0104 	orr.w	r1, r0, r4
  40249c:	489c      	ldr	r0, [pc, #624]	; (402710 <board_init+0x2bc>)
  40249e:	47a8      	blx	r5
		mpu_cal_mpu_region_size(SRAM_SECOND_END_ADDRESS - SRAM_SECOND_START_ADDRESS) |
  4024a0:	489c      	ldr	r0, [pc, #624]	; (402714 <board_init+0x2c0>)
  4024a2:	47b0      	blx	r6
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  4024a4:	ea40 0104 	orr.w	r1, r0, r4
  4024a8:	489b      	ldr	r0, [pc, #620]	; (402718 <board_init+0x2c4>)
  4024aa:	47a8      	blx	r5
		mpu_cal_mpu_region_size(PERIPHERALS_END_ADDRESS - PERIPHERALS_START_ADDRESS)
  4024ac:	f06f 4060 	mvn.w	r0, #3758096384	; 0xe0000000
  4024b0:	47b0      	blx	r6
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  4024b2:	499a      	ldr	r1, [pc, #616]	; (40271c <board_init+0x2c8>)
	SCB->SHCSR |= (SCB_SHCSR_MEMFAULTENA_Msk | SCB_SHCSR_BUSFAULTENA_Msk
  4024b4:	4c9a      	ldr	r4, [pc, #616]	; (402720 <board_init+0x2cc>)
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  4024b6:	4301      	orrs	r1, r0
  4024b8:	489a      	ldr	r0, [pc, #616]	; (402724 <board_init+0x2d0>)
  4024ba:	47a8      	blx	r5
		mpu_cal_mpu_region_size(EXT_EBI_END_ADDRESS - EXT_EBI_START_ADDRESS) |
  4024bc:	f06f 4070 	mvn.w	r0, #4026531840	; 0xf0000000
  4024c0:	47b0      	blx	r6
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  4024c2:	4999      	ldr	r1, [pc, #612]	; (402728 <board_init+0x2d4>)
  4024c4:	4301      	orrs	r1, r0
  4024c6:	4899      	ldr	r0, [pc, #612]	; (40272c <board_init+0x2d8>)
  4024c8:	47a8      	blx	r5
	SCB->SHCSR |= (SCB_SHCSR_MEMFAULTENA_Msk | SCB_SHCSR_BUSFAULTENA_Msk
  4024ca:	6a63      	ldr	r3, [r4, #36]	; 0x24
	mpu_enable( MPU_ENABLE | MPU_PRIVDEFENA);
  4024cc:	2005      	movs	r0, #5
  4024ce:	4a98      	ldr	r2, [pc, #608]	; (402730 <board_init+0x2dc>)
	SCB->SHCSR |= (SCB_SHCSR_MEMFAULTENA_Msk | SCB_SHCSR_BUSFAULTENA_Msk
  4024d0:	f443 23e0 	orr.w	r3, r3, #458752	; 0x70000
  4024d4:	6263      	str	r3, [r4, #36]	; 0x24
	mpu_enable( MPU_ENABLE | MPU_PRIVDEFENA);
  4024d6:	4790      	blx	r2
  __ASM volatile ("dsb");
  4024d8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  4024dc:	f3bf 8f6f 	isb	sy
  __ASM volatile ("dsb");
  4024e0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  4024e4:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache(void)
{
  #if (__ICACHE_PRESENT == 1)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  4024e8:	f04f 0900 	mov.w	r9, #0
  4024ec:	f8c4 9250 	str.w	r9, [r4, #592]	; 0x250
    SCB->CCR |=  SCB_CCR_IC_Msk;            // enable I-Cache
  4024f0:	6963      	ldr	r3, [r4, #20]
  4024f2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  4024f6:	6163      	str	r3, [r4, #20]
  __ASM volatile ("dsb");
  4024f8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  4024fc:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  402500:	4b8c      	ldr	r3, [pc, #560]	; (402734 <board_init+0x2e0>)
  402502:	498d      	ldr	r1, [pc, #564]	; (402738 <board_init+0x2e4>)
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  402504:	4a8d      	ldr	r2, [pc, #564]	; (40273c <board_init+0x2e8>)
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  402506:	6059      	str	r1, [r3, #4]
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  402508:	605a      	str	r2, [r3, #4]
  __ASM volatile ("dsb");
  40250a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  40250e:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  402512:	f8d4 3290 	ldr.w	r3, [r4, #656]	; 0x290
  402516:	f023 0301 	bic.w	r3, r3, #1
  40251a:	f8c4 3290 	str.w	r3, [r4, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  40251e:	f8d4 3294 	ldr.w	r3, [r4, #660]	; 0x294
  402522:	f023 0301 	bic.w	r3, r3, #1
  402526:	f8c4 3294 	str.w	r3, [r4, #660]	; 0x294
  __ASM volatile ("dsb");
  40252a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  40252e:	f3bf 8f6f 	isb	sy
  402532:	4c83      	ldr	r4, [pc, #524]	; (402740 <board_init+0x2ec>)
  402534:	200a      	movs	r0, #10
  402536:	47a0      	blx	r4
  402538:	200b      	movs	r0, #11
  40253a:	47a0      	blx	r4
  40253c:	200c      	movs	r0, #12
  40253e:	47a0      	blx	r4
  402540:	2010      	movs	r0, #16
  402542:	47a0      	blx	r4
  402544:	2011      	movs	r0, #17
  402546:	47a0      	blx	r4
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  402548:	f44f 7500 	mov.w	r5, #512	; 0x200
  40254c:	4c7d      	ldr	r4, [pc, #500]	; (402744 <board_init+0x2f0>)
  40254e:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
  402552:	4f7d      	ldr	r7, [pc, #500]	; (402748 <board_init+0x2f4>)
		base->PIO_PUDR = mask;
  402554:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  402558:	6123      	str	r3, [r4, #16]
		base->PIO_PUDR = mask;
  40255a:	2610      	movs	r6, #16
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  40255c:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
		base->PIO_PUDR = mask;
  402560:	f04f 0e08 	mov.w	lr, #8
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  402564:	6323      	str	r3, [r4, #48]	; 0x30
	ioport_set_pin_mode(SD_MMC_0_CD_GPIO, SD_MMC_0_CD_FLAGS);
#endif

#ifdef CONF_BOARD_ILI9488
	/**LCD pin configure on EBI*/
	pio_configure(PIN_EBI_RESET_PIO, PIN_EBI_RESET_TYPE, PIN_EBI_RESET_MASK, PIN_EBI_RESET_ATTRI);
  402566:	4638      	mov	r0, r7
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  402568:	613d      	str	r5, [r7, #16]
  40256a:	464b      	mov	r3, r9
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  40256c:	f8c7 50a0 	str.w	r5, [r7, #160]	; 0xa0
  402570:	f44f 5200 	mov.w	r2, #8192	; 0x2000
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  402574:	633d      	str	r5, [r7, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  402576:	6165      	str	r5, [r4, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  402578:	f8c4 50a0 	str.w	r5, [r4, #160]	; 0xa0
		base->PIO_PUER = mask;
  40257c:	6665      	str	r5, [r4, #100]	; 0x64
		base->PIO_PPDDR = mask;
  40257e:	f8c4 5090 	str.w	r5, [r4, #144]	; 0x90
		base->PIO_MDDR = mask;
  402582:	6565      	str	r5, [r4, #84]	; 0x54
		base->PIO_IFER = mask;
  402584:	6225      	str	r5, [r4, #32]
		base->PIO_IFSCER = mask;
  402586:	f8c4 5084 	str.w	r5, [r4, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  40258a:	f8d4 c070 	ldr.w	ip, [r4, #112]	; 0x70
	MATRIX->CCFG_SYSIO |= CCFG_SYSIO_SYSIO4;
  40258e:	f8df 81d0 	ldr.w	r8, [pc, #464]	; 402760 <board_init+0x30c>
  402592:	f42c 7c00 	bic.w	ip, ip, #512	; 0x200
  402596:	f8c4 c070 	str.w	ip, [r4, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  40259a:	f8d4 c074 	ldr.w	ip, [r4, #116]	; 0x74
  40259e:	f42c 7c00 	bic.w	ip, ip, #512	; 0x200
  4025a2:	f8c4 c074 	str.w	ip, [r4, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  4025a6:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  4025aa:	f8c4 50d4 	str.w	r5, [r4, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  4025ae:	f8c4 50b0 	str.w	r5, [r4, #176]	; 0xb0
		base->PIO_PUDR = mask;
  4025b2:	6621      	str	r1, [r4, #96]	; 0x60
		base->PIO_PPDDR = mask;
  4025b4:	f8c4 1090 	str.w	r1, [r4, #144]	; 0x90
		base->PIO_MDDR = mask;
  4025b8:	6561      	str	r1, [r4, #84]	; 0x54
		base->PIO_IFDR = mask;
  4025ba:	6261      	str	r1, [r4, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  4025bc:	f8c4 1080 	str.w	r1, [r4, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  4025c0:	f8d4 c070 	ldr.w	ip, [r4, #112]	; 0x70
  4025c4:	f42c 1c00 	bic.w	ip, ip, #2097152	; 0x200000
  4025c8:	f8c4 c070 	str.w	ip, [r4, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  4025cc:	f8d4 c074 	ldr.w	ip, [r4, #116]	; 0x74
  4025d0:	f42c 1c00 	bic.w	ip, ip, #2097152	; 0x200000
  4025d4:	f8c4 c074 	str.w	ip, [r4, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  4025d8:	6061      	str	r1, [r4, #4]
  4025da:	f8d8 1114 	ldr.w	r1, [r8, #276]	; 0x114
  4025de:	ea41 0c06 	orr.w	ip, r1, r6
		base->PIO_PUDR = mask;
  4025e2:	495a      	ldr	r1, [pc, #360]	; (40274c <board_init+0x2f8>)
  4025e4:	f8c8 c114 	str.w	ip, [r8, #276]	; 0x114
  4025e8:	660e      	str	r6, [r1, #96]	; 0x60
		base->PIO_PPDDR = mask;
  4025ea:	f8c1 6090 	str.w	r6, [r1, #144]	; 0x90
		base->PIO_MDDR = mask;
  4025ee:	654e      	str	r6, [r1, #84]	; 0x54
		base->PIO_IFDR = mask;
  4025f0:	624e      	str	r6, [r1, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  4025f2:	f8c1 6080 	str.w	r6, [r1, #128]	; 0x80
		base->PIO_ABCDSR[0] |= mask;
  4025f6:	f8d1 c070 	ldr.w	ip, [r1, #112]	; 0x70
	pio_configure(PIN_EBI_RESET_PIO, PIN_EBI_RESET_TYPE, PIN_EBI_RESET_MASK, PIN_EBI_RESET_ATTRI);
  4025fa:	f8df 8168 	ldr.w	r8, [pc, #360]	; 402764 <board_init+0x310>
  4025fe:	ea4c 0c06 	orr.w	ip, ip, r6
  402602:	f8c1 c070 	str.w	ip, [r1, #112]	; 0x70
		base->PIO_ABCDSR[1] |= mask;
  402606:	f8d1 c074 	ldr.w	ip, [r1, #116]	; 0x74
  40260a:	ea4c 0c06 	orr.w	ip, ip, r6
  40260e:	f8c1 c074 	str.w	ip, [r1, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  402612:	604e      	str	r6, [r1, #4]
  402614:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
		base->PIO_PUDR = mask;
  402618:	f8c4 e060 	str.w	lr, [r4, #96]	; 0x60
		base->PIO_PPDDR = mask;
  40261c:	f8c4 e090 	str.w	lr, [r4, #144]	; 0x90
		base->PIO_MDDR = mask;
  402620:	f8c4 e054 	str.w	lr, [r4, #84]	; 0x54
		base->PIO_IFDR = mask;
  402624:	f8c4 e024 	str.w	lr, [r4, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  402628:	f8c4 e080 	str.w	lr, [r4, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  40262c:	f8d4 c070 	ldr.w	ip, [r4, #112]	; 0x70
  402630:	f02c 0c08 	bic.w	ip, ip, #8
  402634:	f8c4 c070 	str.w	ip, [r4, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  402638:	f8d4 c074 	ldr.w	ip, [r4, #116]	; 0x74
  40263c:	f02c 0c08 	bic.w	ip, ip, #8
  402640:	f8c4 c074 	str.w	ip, [r4, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  402644:	f8c4 e004 	str.w	lr, [r4, #4]
		base->PIO_PUDR = mask;
  402648:	6626      	str	r6, [r4, #96]	; 0x60
		base->PIO_PPDDR = mask;
  40264a:	f8c4 6090 	str.w	r6, [r4, #144]	; 0x90
		base->PIO_MDDR = mask;
  40264e:	6566      	str	r6, [r4, #84]	; 0x54
		base->PIO_IFDR = mask;
  402650:	6266      	str	r6, [r4, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  402652:	f8c4 6080 	str.w	r6, [r4, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  402656:	f8d4 e070 	ldr.w	lr, [r4, #112]	; 0x70
  40265a:	f02e 0e10 	bic.w	lr, lr, #16
  40265e:	f8c4 e070 	str.w	lr, [r4, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  402662:	f8d4 e074 	ldr.w	lr, [r4, #116]	; 0x74
  402666:	f02e 0e10 	bic.w	lr, lr, #16
  40266a:	f8c4 e074 	str.w	lr, [r4, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  40266e:	6066      	str	r6, [r4, #4]
  402670:	47c0      	blx	r8
	pio_configure(PIN_EBI_CDS_PIO, PIN_EBI_CDS_TYPE, PIN_EBI_CDS_MASK, PIN_EBI_CDS_ATTRI);
  402672:	464b      	mov	r3, r9
  402674:	4638      	mov	r0, r7
  402676:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  40267a:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  40267e:	47c0      	blx	r8
	pio_configure(PIN_EBI_DATAL_PIO, PIN_EBI_DATAL_TYPE, PIN_EBI_DATAL_MASK, PIN_EBI_DATAL_ATTRI);
  402680:	4638      	mov	r0, r7
  402682:	2301      	movs	r3, #1
  402684:	22ff      	movs	r2, #255	; 0xff
  402686:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40268a:	47c0      	blx	r8
	pio_configure(PIN_EBI_DATAH_0_PIO, PIN_EBI_DATAH_0_TYPE, PIN_EBI_DATAH_0_MASK, PIN_EBI_DATAH_0_ATTRI);
  40268c:	2301      	movs	r3, #1
  40268e:	223f      	movs	r2, #63	; 0x3f
  402690:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  402694:	482e      	ldr	r0, [pc, #184]	; (402750 <board_init+0x2fc>)
  402696:	47c0      	blx	r8
	pio_configure(PIN_EBI_DATAH_1_PIO, PIN_EBI_DATAH_1_TYPE, PIN_EBI_DATAH_1_MASK, PIN_EBI_DATAH_1_ATTRI);
  402698:	4620      	mov	r0, r4
  40269a:	2301      	movs	r3, #1
  40269c:	f44f 32c0 	mov.w	r2, #98304	; 0x18000
  4026a0:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4026a4:	47c0      	blx	r8
	pio_configure(PIN_EBI_NWE_PIO, PIN_EBI_NWE_TYPE, PIN_EBI_NWE_MASK, PIN_EBI_NWE_ATTRI);
  4026a6:	4638      	mov	r0, r7
  4026a8:	2301      	movs	r3, #1
  4026aa:	f44f 7280 	mov.w	r2, #256	; 0x100
  4026ae:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4026b2:	47c0      	blx	r8
	pio_configure(PIN_EBI_NRD_PIO, PIN_EBI_NRD_TYPE, PIN_EBI_NRD_MASK, PIN_EBI_NRD_ATTRI);
  4026b4:	4638      	mov	r0, r7
  4026b6:	2301      	movs	r3, #1
  4026b8:	f44f 6200 	mov.w	r2, #2048	; 0x800
  4026bc:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4026c0:	47c0      	blx	r8
	pio_configure(PIN_EBI_CS_PIO, PIN_EBI_CS_TYPE, PIN_EBI_CS_MASK, PIN_EBI_CS_ATTRI);
  4026c2:	2301      	movs	r3, #1
  4026c4:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  4026c8:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4026cc:	4821      	ldr	r0, [pc, #132]	; (402754 <board_init+0x300>)
  4026ce:	47c0      	blx	r8
	pio_configure(PIN_EBI_BACKLIGHT_PIO, PIN_EBI_BACKLIGHT_TYPE, PIN_EBI_BACKLIGHT_MASK, PIN_EBI_BACKLIGHT_ATTRI);
  4026d0:	464b      	mov	r3, r9
  4026d2:	462a      	mov	r2, r5
  4026d4:	4638      	mov	r0, r7
  4026d6:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4026da:	47c0      	blx	r8
	pio_set(PIN_EBI_BACKLIGHT_PIO, PIN_EBI_BACKLIGHT_MASK);
  4026dc:	4629      	mov	r1, r5
  4026de:	4638      	mov	r0, r7
  4026e0:	4b1d      	ldr	r3, [pc, #116]	; (402758 <board_init+0x304>)
	pio_configure_pin(ISI_PCK_PIO, ISI_PCK_FLAGS);
	pio_configure_pin(ISI_PCK0_PIO, ISI_PCK0_FLAGS);
	pio_configure_pin(OV_PWD_GPIO, OV_PWD_FLAGS);
	pio_configure_pin(OV_RST_GPIO, OV_RST_FLAGS);
#endif
}
  4026e2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	pio_set(PIN_EBI_BACKLIGHT_PIO, PIN_EBI_BACKLIGHT_MASK);
  4026e6:	4718      	bx	r3
  4026e8:	400e1850 	.word	0x400e1850
  4026ec:	01000001 	.word	0x01000001
  4026f0:	00402781 	.word	0x00402781
  4026f4:	00402775 	.word	0x00402775
  4026f8:	001fffff 	.word	0x001fffff
  4026fc:	06230001 	.word	0x06230001
  402700:	03230001 	.word	0x03230001
  402704:	00400012 	.word	0x00400012
  402708:	20000013 	.word	0x20000013
  40270c:	0003ffff 	.word	0x0003ffff
  402710:	20400014 	.word	0x20400014
  402714:	0001ffff 	.word	0x0001ffff
  402718:	20440015 	.word	0x20440015
  40271c:	13010001 	.word	0x13010001
  402720:	e000ed00 	.word	0xe000ed00
  402724:	40000016 	.word	0x40000016
  402728:	03000001 	.word	0x03000001
  40272c:	60000017 	.word	0x60000017
  402730:	00402769 	.word	0x00402769
  402734:	400e0c00 	.word	0x400e0c00
  402738:	5a00080c 	.word	0x5a00080c
  40273c:	5a00070c 	.word	0x5a00070c
  402740:	00402f39 	.word	0x00402f39
  402744:	400e0e00 	.word	0x400e0e00
  402748:	400e1200 	.word	0x400e1200
  40274c:	400e1000 	.word	0x400e1000
  402750:	400e1600 	.word	0x400e1600
  402754:	400e1400 	.word	0x400e1400
  402758:	004027a5 	.word	0x004027a5
  40275c:	003fffff 	.word	0x003fffff
  402760:	40088000 	.word	0x40088000
  402764:	004027ad 	.word	0x004027ad

00402768 <mpu_enable>:
 *
 * \param dwMPUEnable  Enable/Disable the memory region.
 */
void mpu_enable(uint32_t dw_mpu_enable)
{
	MPU->CTRL = dw_mpu_enable ;
  402768:	4b01      	ldr	r3, [pc, #4]	; (402770 <mpu_enable+0x8>)
  40276a:	6058      	str	r0, [r3, #4]
  40276c:	4770      	bx	lr
  40276e:	bf00      	nop
  402770:	e000ed90 	.word	0xe000ed90

00402774 <mpu_set_region>:
 * \param dwRegionBaseAddr  Memory region base address.
 * \param dwRegionAttr  Memory region attributes.
 */
void mpu_set_region(uint32_t dw_region_base_addr, uint32_t dw_region_attr)
{
	MPU->RBAR = dw_region_base_addr;
  402774:	4b01      	ldr	r3, [pc, #4]	; (40277c <mpu_set_region+0x8>)
  402776:	60d8      	str	r0, [r3, #12]
	MPU->RASR = dw_region_attr;
  402778:	6119      	str	r1, [r3, #16]
  40277a:	4770      	bx	lr
  40277c:	e000ed90 	.word	0xe000ed90

00402780 <mpu_cal_mpu_region_size>:
{
	uint32_t dwRegionSize = 32;
	uint32_t dwReturnValue = 4;

	while( dwReturnValue < 31 ) {
		if( dw_actual_size_in_bytes <= dwRegionSize ) {
  402780:	2820      	cmp	r0, #32
  402782:	d90d      	bls.n	4027a0 <mpu_cal_mpu_region_size+0x20>
  402784:	2240      	movs	r2, #64	; 0x40
  402786:	2305      	movs	r3, #5
  402788:	e002      	b.n	402790 <mpu_cal_mpu_region_size+0x10>
			break;
		} else {
			dwReturnValue++;
  40278a:	3301      	adds	r3, #1
	while( dwReturnValue < 31 ) {
  40278c:	2b1f      	cmp	r3, #31
  40278e:	d005      	beq.n	40279c <mpu_cal_mpu_region_size+0x1c>
		if( dw_actual_size_in_bytes <= dwRegionSize ) {
  402790:	4290      	cmp	r0, r2
		}
		dwRegionSize <<= 1;
  402792:	ea4f 0242 	mov.w	r2, r2, lsl #1
		if( dw_actual_size_in_bytes <= dwRegionSize ) {
  402796:	d8f8      	bhi.n	40278a <mpu_cal_mpu_region_size+0xa>
  402798:	0058      	lsls	r0, r3, #1
  40279a:	4770      	bx	lr
  40279c:	203e      	movs	r0, #62	; 0x3e
  40279e:	4770      	bx	lr
  4027a0:	2008      	movs	r0, #8
	}

	return ( dwReturnValue << 1 );
}
  4027a2:	4770      	bx	lr

004027a4 <pio_set>:
  4027a4:	6301      	str	r1, [r0, #48]	; 0x30
  4027a6:	4770      	bx	lr

004027a8 <pio_clear>:
  4027a8:	6341      	str	r1, [r0, #52]	; 0x34
  4027aa:	4770      	bx	lr

004027ac <pio_configure>:
 */
uint32_t pio_configure(Pio *p_pio, const pio_type_t ul_type,
		const uint32_t ul_mask, const uint32_t ul_attribute)
{
	/* Configure pins */
	switch (ul_type) {
  4027ac:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
{
  4027b0:	b430      	push	{r4, r5}
	switch (ul_type) {
  4027b2:	d03b      	beq.n	40282c <pio_configure+0x80>
  4027b4:	d931      	bls.n	40281a <pio_configure+0x6e>
  4027b6:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  4027ba:	d01b      	beq.n	4027f4 <pio_configure+0x48>
  4027bc:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  4027c0:	d018      	beq.n	4027f4 <pio_configure+0x48>
  4027c2:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  4027c6:	d003      	beq.n	4027d0 <pio_configure+0x24>
				(ul_attribute & PIO_OPENDRAIN) ? 1 : 0,
				(ul_attribute & PIO_PULLUP) ? 1 : 0);
		break;

	default:
		return 0;
  4027c8:	2300      	movs	r3, #0
	}

	return 1;
}
  4027ca:	bc30      	pop	{r4, r5}
  4027cc:	4618      	mov	r0, r3
  4027ce:	4770      	bx	lr
	if (ul_pull_up_enable) {
  4027d0:	07dd      	lsls	r5, r3, #31
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  4027d2:	6442      	str	r2, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  4027d4:	d448      	bmi.n	402868 <pio_configure+0xbc>
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  4027d6:	f013 0f0a 	tst.w	r3, #10
		p_pio->PIO_PUDR = ul_mask;
  4027da:	6602      	str	r2, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  4027dc:	d048      	beq.n	402870 <pio_configure+0xc4>
	if (ul_attribute & PIO_DEGLITCH) {
  4027de:	079c      	lsls	r4, r3, #30
		p_pio->PIO_IFER = ul_mask;
  4027e0:	6202      	str	r2, [r0, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  4027e2:	d548      	bpl.n	402876 <pio_configure+0xca>
		p_pio->PIO_IFSCDR = ul_mask;
  4027e4:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
	return 1;
  4027e8:	2301      	movs	r3, #1
	p_pio->PIO_ODR = ul_mask;
  4027ea:	6142      	str	r2, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  4027ec:	6002      	str	r2, [r0, #0]
}
  4027ee:	4618      	mov	r0, r3
  4027f0:	bc30      	pop	{r4, r5}
  4027f2:	4770      	bx	lr
				(ul_attribute & PIO_OPENDRAIN) ? 1 : 0,
  4027f4:	f003 0404 	and.w	r4, r3, #4
	if (ul_pull_up_enable) {
  4027f8:	07db      	lsls	r3, r3, #31
	p_pio->PIO_IDR = ul_mask;
  4027fa:	6442      	str	r2, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  4027fc:	d52f      	bpl.n	40285e <pio_configure+0xb2>
		p_pio->PIO_PUER = ul_mask;
  4027fe:	6642      	str	r2, [r0, #100]	; 0x64
	if (ul_multidrive_enable) {
  402800:	2c00      	cmp	r4, #0
  402802:	d02f      	beq.n	402864 <pio_configure+0xb8>
		p_pio->PIO_MDER = ul_mask;
  402804:	6502      	str	r2, [r0, #80]	; 0x50
	if (ul_default_level) {
  402806:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  40280a:	d04e      	beq.n	4028aa <pio_configure+0xfe>
		p_pio->PIO_CODR = ul_mask;
  40280c:	6342      	str	r2, [r0, #52]	; 0x34
	return 1;
  40280e:	2301      	movs	r3, #1
	p_pio->PIO_OER = ul_mask;
  402810:	6102      	str	r2, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  402812:	6002      	str	r2, [r0, #0]
}
  402814:	4618      	mov	r0, r3
  402816:	bc30      	pop	{r4, r5}
  402818:	4770      	bx	lr
	switch (ul_type) {
  40281a:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  40281e:	d005      	beq.n	40282c <pio_configure+0x80>
  402820:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  402824:	d002      	beq.n	40282c <pio_configure+0x80>
  402826:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  40282a:	d1cd      	bne.n	4027c8 <pio_configure+0x1c>
	switch (ul_type) {
  40282c:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
	p_pio->PIO_IDR = ul_mask;
  402830:	6442      	str	r2, [r0, #68]	; 0x44
	switch (ul_type) {
  402832:	d03c      	beq.n	4028ae <pio_configure+0x102>
  402834:	d924      	bls.n	402880 <pio_configure+0xd4>
  402836:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  40283a:	d042      	beq.n	4028c2 <pio_configure+0x116>
  40283c:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  402840:	d105      	bne.n	40284e <pio_configure+0xa2>
		ul_sr = p_pio->PIO_ABCDSR[0];
  402842:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  402844:	4311      	orrs	r1, r2
  402846:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  402848:	6f41      	ldr	r1, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  40284a:	4311      	orrs	r1, r2
  40284c:	6741      	str	r1, [r0, #116]	; 0x74
	if (ul_pull_up_enable) {
  40284e:	07db      	lsls	r3, r3, #31
	p_pio->PIO_PDR = ul_mask;
  402850:	6042      	str	r2, [r0, #4]
	if (ul_pull_up_enable) {
  402852:	d525      	bpl.n	4028a0 <pio_configure+0xf4>
	return 1;
  402854:	2301      	movs	r3, #1
		p_pio->PIO_PUER = ul_mask;
  402856:	6642      	str	r2, [r0, #100]	; 0x64
}
  402858:	4618      	mov	r0, r3
  40285a:	bc30      	pop	{r4, r5}
  40285c:	4770      	bx	lr
		p_pio->PIO_PUDR = ul_mask;
  40285e:	6602      	str	r2, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  402860:	2c00      	cmp	r4, #0
  402862:	d1cf      	bne.n	402804 <pio_configure+0x58>
		p_pio->PIO_MDDR = ul_mask;
  402864:	6542      	str	r2, [r0, #84]	; 0x54
  402866:	e7ce      	b.n	402806 <pio_configure+0x5a>
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  402868:	f013 0f0a 	tst.w	r3, #10
		p_pio->PIO_PUER = ul_mask;
  40286c:	6642      	str	r2, [r0, #100]	; 0x64
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  40286e:	d1b6      	bne.n	4027de <pio_configure+0x32>
	if (ul_attribute & PIO_DEGLITCH) {
  402870:	079c      	lsls	r4, r3, #30
		p_pio->PIO_IFDR = ul_mask;
  402872:	6242      	str	r2, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
  402874:	d4b6      	bmi.n	4027e4 <pio_configure+0x38>
		if (ul_attribute & PIO_DEBOUNCE) {
  402876:	0719      	lsls	r1, r3, #28
  402878:	d5b6      	bpl.n	4027e8 <pio_configure+0x3c>
			p_pio->PIO_IFSCER = ul_mask;
  40287a:	f8c0 2084 	str.w	r2, [r0, #132]	; 0x84
  40287e:	e7b3      	b.n	4027e8 <pio_configure+0x3c>
	switch (ul_type) {
  402880:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  402884:	d1e3      	bne.n	40284e <pio_configure+0xa2>
		ul_sr = p_pio->PIO_ABCDSR[0];
  402886:	6f04      	ldr	r4, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  402888:	43d1      	mvns	r1, r2
  40288a:	6f05      	ldr	r5, [r0, #112]	; 0x70
  40288c:	402c      	ands	r4, r5
  40288e:	460d      	mov	r5, r1
  402890:	400c      	ands	r4, r1
  402892:	6704      	str	r4, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  402894:	6f41      	ldr	r1, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  402896:	6f44      	ldr	r4, [r0, #116]	; 0x74
  402898:	4021      	ands	r1, r4
  40289a:	4029      	ands	r1, r5
  40289c:	6741      	str	r1, [r0, #116]	; 0x74
  40289e:	e7d6      	b.n	40284e <pio_configure+0xa2>
	return 1;
  4028a0:	2301      	movs	r3, #1
		p_pio->PIO_PUDR = ul_mask;
  4028a2:	6602      	str	r2, [r0, #96]	; 0x60
}
  4028a4:	4618      	mov	r0, r3
  4028a6:	bc30      	pop	{r4, r5}
  4028a8:	4770      	bx	lr
		p_pio->PIO_SODR = ul_mask;
  4028aa:	6302      	str	r2, [r0, #48]	; 0x30
  4028ac:	e7af      	b.n	40280e <pio_configure+0x62>
		ul_sr = p_pio->PIO_ABCDSR[0];
  4028ae:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4028b0:	4311      	orrs	r1, r2
  4028b2:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  4028b4:	6f41      	ldr	r1, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4028b6:	6f44      	ldr	r4, [r0, #116]	; 0x74
  4028b8:	4021      	ands	r1, r4
  4028ba:	ea21 0102 	bic.w	r1, r1, r2
  4028be:	6741      	str	r1, [r0, #116]	; 0x74
  4028c0:	e7c5      	b.n	40284e <pio_configure+0xa2>
		ul_sr = p_pio->PIO_ABCDSR[0];
  4028c2:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  4028c4:	6f04      	ldr	r4, [r0, #112]	; 0x70
  4028c6:	4021      	ands	r1, r4
  4028c8:	ea21 0102 	bic.w	r1, r1, r2
  4028cc:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  4028ce:	6f41      	ldr	r1, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  4028d0:	4311      	orrs	r1, r2
  4028d2:	6741      	str	r1, [r0, #116]	; 0x74
  4028d4:	e7bb      	b.n	40284e <pio_configure+0xa2>
  4028d6:	bf00      	nop

004028d8 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  4028d8:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  4028da:	4770      	bx	lr

004028dc <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  4028dc:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  4028de:	4770      	bx	lr

004028e0 <pio_configure_pin>:
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  4028e0:	4b53      	ldr	r3, [pc, #332]	; (402a30 <pio_configure_pin+0x150>)
	switch (ul_flags & PIO_TYPE_Msk) {
  4028e2:	f001 42f0 	and.w	r2, r1, #2013265920	; 0x78000000
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  4028e6:	eb03 1350 	add.w	r3, r3, r0, lsr #5
	switch (ul_flags & PIO_TYPE_Msk) {
  4028ea:	f1b2 5f00 	cmp.w	r2, #536870912	; 0x20000000
{
  4028ee:	b470      	push	{r4, r5, r6}
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  4028f0:	ea4f 2343 	mov.w	r3, r3, lsl #9
	switch (ul_flags & PIO_TYPE_Msk) {
  4028f4:	d06d      	beq.n	4029d2 <pio_configure_pin+0xf2>
  4028f6:	d80b      	bhi.n	402910 <pio_configure_pin+0x30>
  4028f8:	f1b2 5f80 	cmp.w	r2, #268435456	; 0x10000000
  4028fc:	d027      	beq.n	40294e <pio_configure_pin+0x6e>
  4028fe:	f1b2 5fc0 	cmp.w	r2, #402653184	; 0x18000000
  402902:	d052      	beq.n	4029aa <pio_configure_pin+0xca>
  402904:	f1b2 6f00 	cmp.w	r2, #134217728	; 0x8000000
  402908:	d038      	beq.n	40297c <pio_configure_pin+0x9c>
		return 0;
  40290a:	2000      	movs	r0, #0
}
  40290c:	bc70      	pop	{r4, r5, r6}
  40290e:	4770      	bx	lr
	switch (ul_flags & PIO_TYPE_Msk) {
  402910:	f1b2 5f40 	cmp.w	r2, #805306368	; 0x30000000
  402914:	d066      	beq.n	4029e4 <pio_configure_pin+0x104>
  402916:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  40291a:	d063      	beq.n	4029e4 <pio_configure_pin+0x104>
  40291c:	f1b2 5f20 	cmp.w	r2, #671088640	; 0x28000000
  402920:	d1f3      	bne.n	40290a <pio_configure_pin+0x2a>
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  402922:	f000 001f 	and.w	r0, r0, #31
  402926:	2201      	movs	r2, #1
	if (ul_pull_up_enable) {
  402928:	07cd      	lsls	r5, r1, #31
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  40292a:	fa02 f200 	lsl.w	r2, r2, r0
	p_pio->PIO_IDR = ul_mask;
  40292e:	645a      	str	r2, [r3, #68]	; 0x44
	if (ul_pull_up_enable) {
  402930:	d573      	bpl.n	402a1a <pio_configure_pin+0x13a>
		p_pio->PIO_PUER = ul_mask;
  402932:	665a      	str	r2, [r3, #100]	; 0x64
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  402934:	f011 0f0a 	tst.w	r1, #10
  402938:	d06d      	beq.n	402a16 <pio_configure_pin+0x136>
		p_pio->PIO_IFER = ul_mask;
  40293a:	621a      	str	r2, [r3, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  40293c:	078c      	lsls	r4, r1, #30
  40293e:	d56e      	bpl.n	402a1e <pio_configure_pin+0x13e>
		p_pio->PIO_IFSCDR = ul_mask;
  402940:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  402944:	615a      	str	r2, [r3, #20]
	return 1;
  402946:	2001      	movs	r0, #1
	p_pio->PIO_PER = ul_mask;
  402948:	601a      	str	r2, [r3, #0]
}
  40294a:	bc70      	pop	{r4, r5, r6}
  40294c:	4770      	bx	lr
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  40294e:	f000 021f 	and.w	r2, r0, #31
  402952:	2001      	movs	r0, #1
	if (ul_pull_up_enable) {
  402954:	07c9      	lsls	r1, r1, #31
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  402956:	fa00 f202 	lsl.w	r2, r0, r2
	p_pio->PIO_IDR = ul_mask;
  40295a:	645a      	str	r2, [r3, #68]	; 0x44
		ul_sr = p_pio->PIO_ABCDSR[0];
  40295c:	6f1c      	ldr	r4, [r3, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  40295e:	ea44 0402 	orr.w	r4, r4, r2
  402962:	671c      	str	r4, [r3, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  402964:	6f5c      	ldr	r4, [r3, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  402966:	6f5d      	ldr	r5, [r3, #116]	; 0x74
  402968:	ea04 0405 	and.w	r4, r4, r5
  40296c:	ea24 0402 	bic.w	r4, r4, r2
  402970:	675c      	str	r4, [r3, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  402972:	605a      	str	r2, [r3, #4]
	if (ul_pull_up_enable) {
  402974:	d516      	bpl.n	4029a4 <pio_configure_pin+0xc4>
		p_pio->PIO_PUER = ul_mask;
  402976:	665a      	str	r2, [r3, #100]	; 0x64
}
  402978:	bc70      	pop	{r4, r5, r6}
  40297a:	4770      	bx	lr
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  40297c:	f000 021f 	and.w	r2, r0, #31
  402980:	2001      	movs	r0, #1
  402982:	fa00 f202 	lsl.w	r2, r0, r2
	p_pio->PIO_IDR = ul_mask;
  402986:	645a      	str	r2, [r3, #68]	; 0x44
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  402988:	43d6      	mvns	r6, r2
		ul_sr = p_pio->PIO_ABCDSR[0];
  40298a:	6f1d      	ldr	r5, [r3, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  40298c:	6f1c      	ldr	r4, [r3, #112]	; 0x70
  40298e:	4025      	ands	r5, r4
  402990:	4035      	ands	r5, r6
  402992:	671d      	str	r5, [r3, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  402994:	6f5c      	ldr	r4, [r3, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  402996:	6f5d      	ldr	r5, [r3, #116]	; 0x74
  402998:	402c      	ands	r4, r5
  40299a:	4034      	ands	r4, r6
  40299c:	675c      	str	r4, [r3, #116]	; 0x74
	if (ul_pull_up_enable) {
  40299e:	07cc      	lsls	r4, r1, #31
	p_pio->PIO_PDR = ul_mask;
  4029a0:	605a      	str	r2, [r3, #4]
	if (ul_pull_up_enable) {
  4029a2:	d4e8      	bmi.n	402976 <pio_configure_pin+0x96>
		p_pio->PIO_PUDR = ul_mask;
  4029a4:	661a      	str	r2, [r3, #96]	; 0x60
}
  4029a6:	bc70      	pop	{r4, r5, r6}
  4029a8:	4770      	bx	lr
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  4029aa:	f000 021f 	and.w	r2, r0, #31
  4029ae:	2001      	movs	r0, #1
  4029b0:	fa00 f202 	lsl.w	r2, r0, r2
	p_pio->PIO_IDR = ul_mask;
  4029b4:	645a      	str	r2, [r3, #68]	; 0x44
		ul_sr = p_pio->PIO_ABCDSR[0];
  4029b6:	6f1c      	ldr	r4, [r3, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  4029b8:	6f1d      	ldr	r5, [r3, #112]	; 0x70
  4029ba:	402c      	ands	r4, r5
  4029bc:	ea24 0402 	bic.w	r4, r4, r2
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4029c0:	671c      	str	r4, [r3, #112]	; 0x70
	if (ul_pull_up_enable) {
  4029c2:	07ce      	lsls	r6, r1, #31
		ul_sr = p_pio->PIO_ABCDSR[1];
  4029c4:	6f5c      	ldr	r4, [r3, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  4029c6:	ea44 0402 	orr.w	r4, r4, r2
  4029ca:	675c      	str	r4, [r3, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  4029cc:	605a      	str	r2, [r3, #4]
	if (ul_pull_up_enable) {
  4029ce:	d5e9      	bpl.n	4029a4 <pio_configure_pin+0xc4>
  4029d0:	e7d1      	b.n	402976 <pio_configure_pin+0x96>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  4029d2:	f000 021f 	and.w	r2, r0, #31
  4029d6:	2001      	movs	r0, #1
  4029d8:	fa00 f202 	lsl.w	r2, r0, r2
	p_pio->PIO_IDR = ul_mask;
  4029dc:	645a      	str	r2, [r3, #68]	; 0x44
		ul_sr = p_pio->PIO_ABCDSR[0];
  4029de:	6f1c      	ldr	r4, [r3, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4029e0:	4314      	orrs	r4, r2
  4029e2:	e7ed      	b.n	4029c0 <pio_configure_pin+0xe0>
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  4029e4:	f000 001f 	and.w	r0, r0, #31
  4029e8:	2201      	movs	r2, #1
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  4029ea:	f001 5460 	and.w	r4, r1, #939524096	; 0x38000000
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
  4029ee:	f001 0504 	and.w	r5, r1, #4
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  4029f2:	4082      	lsls	r2, r0
	if (ul_pull_up_enable) {
  4029f4:	07c9      	lsls	r1, r1, #31
	p_pio->PIO_IDR = ul_mask;
  4029f6:	645a      	str	r2, [r3, #68]	; 0x44
	if (ul_pull_up_enable) {
  4029f8:	d50b      	bpl.n	402a12 <pio_configure_pin+0x132>
		p_pio->PIO_PUER = ul_mask;
  4029fa:	665a      	str	r2, [r3, #100]	; 0x64
	if (ul_multidrive_enable) {
  4029fc:	b1a5      	cbz	r5, 402a28 <pio_configure_pin+0x148>
		p_pio->PIO_MDER = ul_mask;
  4029fe:	651a      	str	r2, [r3, #80]	; 0x50
	if (ul_default_level) {
  402a00:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
  402a04:	d012      	beq.n	402a2c <pio_configure_pin+0x14c>
		p_pio->PIO_CODR = ul_mask;
  402a06:	635a      	str	r2, [r3, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  402a08:	611a      	str	r2, [r3, #16]
	return 1;
  402a0a:	2001      	movs	r0, #1
	p_pio->PIO_PER = ul_mask;
  402a0c:	601a      	str	r2, [r3, #0]
}
  402a0e:	bc70      	pop	{r4, r5, r6}
  402a10:	4770      	bx	lr
		p_pio->PIO_PUDR = ul_mask;
  402a12:	661a      	str	r2, [r3, #96]	; 0x60
  402a14:	e7f2      	b.n	4029fc <pio_configure_pin+0x11c>
		p_pio->PIO_IFDR = ul_mask;
  402a16:	625a      	str	r2, [r3, #36]	; 0x24
  402a18:	e790      	b.n	40293c <pio_configure_pin+0x5c>
		p_pio->PIO_PUDR = ul_mask;
  402a1a:	661a      	str	r2, [r3, #96]	; 0x60
  402a1c:	e78a      	b.n	402934 <pio_configure_pin+0x54>
		if (ul_attribute & PIO_DEBOUNCE) {
  402a1e:	0708      	lsls	r0, r1, #28
  402a20:	d590      	bpl.n	402944 <pio_configure_pin+0x64>
			p_pio->PIO_IFSCER = ul_mask;
  402a22:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  402a26:	e78d      	b.n	402944 <pio_configure_pin+0x64>
		p_pio->PIO_MDDR = ul_mask;
  402a28:	655a      	str	r2, [r3, #84]	; 0x54
  402a2a:	e7e9      	b.n	402a00 <pio_configure_pin+0x120>
		p_pio->PIO_SODR = ul_mask;
  402a2c:	631a      	str	r2, [r3, #48]	; 0x30
  402a2e:	e7eb      	b.n	402a08 <pio_configure_pin+0x128>
  402a30:	00200707 	.word	0x00200707

00402a34 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  402a34:	b570      	push	{r4, r5, r6, lr}
	status = pio_get_interrupt_status(p_pio);
  402a36:	4b2e      	ldr	r3, [pc, #184]	; (402af0 <PIOA_Handler+0xbc>)
  402a38:	482e      	ldr	r0, [pc, #184]	; (402af4 <PIOA_Handler+0xc0>)
  402a3a:	4798      	blx	r3
  402a3c:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  402a3e:	4b2e      	ldr	r3, [pc, #184]	; (402af8 <PIOA_Handler+0xc4>)
  402a40:	482c      	ldr	r0, [pc, #176]	; (402af4 <PIOA_Handler+0xc0>)
  402a42:	4798      	blx	r3
	if (status != 0) {
  402a44:	4005      	ands	r5, r0
  402a46:	d015      	beq.n	402a74 <PIOA_Handler+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  402a48:	4c2c      	ldr	r4, [pc, #176]	; (402afc <PIOA_Handler+0xc8>)
  402a4a:	6820      	ldr	r0, [r4, #0]
  402a4c:	280a      	cmp	r0, #10
  402a4e:	d019      	beq.n	402a84 <PIOA_Handler+0x50>
  402a50:	6920      	ldr	r0, [r4, #16]
  402a52:	280a      	cmp	r0, #10
  402a54:	d01f      	beq.n	402a96 <PIOA_Handler+0x62>
  402a56:	6a20      	ldr	r0, [r4, #32]
  402a58:	280a      	cmp	r0, #10
  402a5a:	d025      	beq.n	402aa8 <PIOA_Handler+0x74>
  402a5c:	6b20      	ldr	r0, [r4, #48]	; 0x30
  402a5e:	280a      	cmp	r0, #10
  402a60:	d02b      	beq.n	402aba <PIOA_Handler+0x86>
  402a62:	6c20      	ldr	r0, [r4, #64]	; 0x40
  402a64:	280a      	cmp	r0, #10
  402a66:	d031      	beq.n	402acc <PIOA_Handler+0x98>
  402a68:	6d20      	ldr	r0, [r4, #80]	; 0x50
  402a6a:	280a      	cmp	r0, #10
  402a6c:	d037      	beq.n	402ade <PIOA_Handler+0xaa>
  402a6e:	6e20      	ldr	r0, [r4, #96]	; 0x60
  402a70:	280a      	cmp	r0, #10
  402a72:	d000      	beq.n	402a76 <PIOA_Handler+0x42>
  402a74:	bd70      	pop	{r4, r5, r6, pc}
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402a76:	6e61      	ldr	r1, [r4, #100]	; 0x64
  402a78:	4229      	tst	r1, r5
  402a7a:	d0fb      	beq.n	402a74 <PIOA_Handler+0x40>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402a7c:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
	pio_handler_process(PIOA, ID_PIOA);
}
  402a7e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402a82:	4718      	bx	r3
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402a84:	6861      	ldr	r1, [r4, #4]
  402a86:	420d      	tst	r5, r1
  402a88:	d0e2      	beq.n	402a50 <PIOA_Handler+0x1c>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402a8a:	68e3      	ldr	r3, [r4, #12]
  402a8c:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  402a8e:	6863      	ldr	r3, [r4, #4]
		while (status != 0) {
  402a90:	439d      	bics	r5, r3
  402a92:	d0ef      	beq.n	402a74 <PIOA_Handler+0x40>
  402a94:	e7dc      	b.n	402a50 <PIOA_Handler+0x1c>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402a96:	6961      	ldr	r1, [r4, #20]
  402a98:	4229      	tst	r1, r5
  402a9a:	d0dc      	beq.n	402a56 <PIOA_Handler+0x22>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402a9c:	69e3      	ldr	r3, [r4, #28]
  402a9e:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  402aa0:	6963      	ldr	r3, [r4, #20]
		while (status != 0) {
  402aa2:	439d      	bics	r5, r3
  402aa4:	d0e6      	beq.n	402a74 <PIOA_Handler+0x40>
  402aa6:	e7d6      	b.n	402a56 <PIOA_Handler+0x22>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402aa8:	6a61      	ldr	r1, [r4, #36]	; 0x24
  402aaa:	4229      	tst	r1, r5
  402aac:	d0d6      	beq.n	402a5c <PIOA_Handler+0x28>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402aae:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  402ab0:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  402ab2:	6a63      	ldr	r3, [r4, #36]	; 0x24
		while (status != 0) {
  402ab4:	439d      	bics	r5, r3
  402ab6:	d0dd      	beq.n	402a74 <PIOA_Handler+0x40>
  402ab8:	e7d0      	b.n	402a5c <PIOA_Handler+0x28>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402aba:	6b61      	ldr	r1, [r4, #52]	; 0x34
  402abc:	4229      	tst	r1, r5
  402abe:	d0d0      	beq.n	402a62 <PIOA_Handler+0x2e>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402ac0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  402ac2:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  402ac4:	6b63      	ldr	r3, [r4, #52]	; 0x34
		while (status != 0) {
  402ac6:	439d      	bics	r5, r3
  402ac8:	d0d4      	beq.n	402a74 <PIOA_Handler+0x40>
  402aca:	e7ca      	b.n	402a62 <PIOA_Handler+0x2e>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402acc:	6c61      	ldr	r1, [r4, #68]	; 0x44
  402ace:	4229      	tst	r1, r5
  402ad0:	d0ca      	beq.n	402a68 <PIOA_Handler+0x34>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402ad2:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
  402ad4:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  402ad6:	6c63      	ldr	r3, [r4, #68]	; 0x44
		while (status != 0) {
  402ad8:	439d      	bics	r5, r3
  402ada:	d0cb      	beq.n	402a74 <PIOA_Handler+0x40>
  402adc:	e7c4      	b.n	402a68 <PIOA_Handler+0x34>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402ade:	6d61      	ldr	r1, [r4, #84]	; 0x54
  402ae0:	4229      	tst	r1, r5
  402ae2:	d0c4      	beq.n	402a6e <PIOA_Handler+0x3a>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402ae4:	6de3      	ldr	r3, [r4, #92]	; 0x5c
  402ae6:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  402ae8:	6d63      	ldr	r3, [r4, #84]	; 0x54
		while (status != 0) {
  402aea:	439d      	bics	r5, r3
  402aec:	d0c2      	beq.n	402a74 <PIOA_Handler+0x40>
  402aee:	e7be      	b.n	402a6e <PIOA_Handler+0x3a>
  402af0:	004028d9 	.word	0x004028d9
  402af4:	400e0e00 	.word	0x400e0e00
  402af8:	004028dd 	.word	0x004028dd
  402afc:	2040ea8c 	.word	0x2040ea8c

00402b00 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  402b00:	b570      	push	{r4, r5, r6, lr}
	status = pio_get_interrupt_status(p_pio);
  402b02:	4b2e      	ldr	r3, [pc, #184]	; (402bbc <PIOB_Handler+0xbc>)
  402b04:	482e      	ldr	r0, [pc, #184]	; (402bc0 <PIOB_Handler+0xc0>)
  402b06:	4798      	blx	r3
  402b08:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  402b0a:	4b2e      	ldr	r3, [pc, #184]	; (402bc4 <PIOB_Handler+0xc4>)
  402b0c:	482c      	ldr	r0, [pc, #176]	; (402bc0 <PIOB_Handler+0xc0>)
  402b0e:	4798      	blx	r3
	if (status != 0) {
  402b10:	4005      	ands	r5, r0
  402b12:	d015      	beq.n	402b40 <PIOB_Handler+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  402b14:	4c2c      	ldr	r4, [pc, #176]	; (402bc8 <PIOB_Handler+0xc8>)
  402b16:	6820      	ldr	r0, [r4, #0]
  402b18:	280b      	cmp	r0, #11
  402b1a:	d019      	beq.n	402b50 <PIOB_Handler+0x50>
  402b1c:	6920      	ldr	r0, [r4, #16]
  402b1e:	280b      	cmp	r0, #11
  402b20:	d01f      	beq.n	402b62 <PIOB_Handler+0x62>
  402b22:	6a20      	ldr	r0, [r4, #32]
  402b24:	280b      	cmp	r0, #11
  402b26:	d025      	beq.n	402b74 <PIOB_Handler+0x74>
  402b28:	6b20      	ldr	r0, [r4, #48]	; 0x30
  402b2a:	280b      	cmp	r0, #11
  402b2c:	d02b      	beq.n	402b86 <PIOB_Handler+0x86>
  402b2e:	6c20      	ldr	r0, [r4, #64]	; 0x40
  402b30:	280b      	cmp	r0, #11
  402b32:	d031      	beq.n	402b98 <PIOB_Handler+0x98>
  402b34:	6d20      	ldr	r0, [r4, #80]	; 0x50
  402b36:	280b      	cmp	r0, #11
  402b38:	d037      	beq.n	402baa <PIOB_Handler+0xaa>
  402b3a:	6e20      	ldr	r0, [r4, #96]	; 0x60
  402b3c:	280b      	cmp	r0, #11
  402b3e:	d000      	beq.n	402b42 <PIOB_Handler+0x42>
  402b40:	bd70      	pop	{r4, r5, r6, pc}
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402b42:	6e61      	ldr	r1, [r4, #100]	; 0x64
  402b44:	4229      	tst	r1, r5
  402b46:	d0fb      	beq.n	402b40 <PIOB_Handler+0x40>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402b48:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
    pio_handler_process(PIOB, ID_PIOB);
}
  402b4a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402b4e:	4718      	bx	r3
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402b50:	6861      	ldr	r1, [r4, #4]
  402b52:	420d      	tst	r5, r1
  402b54:	d0e2      	beq.n	402b1c <PIOB_Handler+0x1c>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402b56:	68e3      	ldr	r3, [r4, #12]
  402b58:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  402b5a:	6863      	ldr	r3, [r4, #4]
		while (status != 0) {
  402b5c:	439d      	bics	r5, r3
  402b5e:	d0ef      	beq.n	402b40 <PIOB_Handler+0x40>
  402b60:	e7dc      	b.n	402b1c <PIOB_Handler+0x1c>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402b62:	6961      	ldr	r1, [r4, #20]
  402b64:	4229      	tst	r1, r5
  402b66:	d0dc      	beq.n	402b22 <PIOB_Handler+0x22>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402b68:	69e3      	ldr	r3, [r4, #28]
  402b6a:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  402b6c:	6963      	ldr	r3, [r4, #20]
		while (status != 0) {
  402b6e:	439d      	bics	r5, r3
  402b70:	d0e6      	beq.n	402b40 <PIOB_Handler+0x40>
  402b72:	e7d6      	b.n	402b22 <PIOB_Handler+0x22>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402b74:	6a61      	ldr	r1, [r4, #36]	; 0x24
  402b76:	4229      	tst	r1, r5
  402b78:	d0d6      	beq.n	402b28 <PIOB_Handler+0x28>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402b7a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  402b7c:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  402b7e:	6a63      	ldr	r3, [r4, #36]	; 0x24
		while (status != 0) {
  402b80:	439d      	bics	r5, r3
  402b82:	d0dd      	beq.n	402b40 <PIOB_Handler+0x40>
  402b84:	e7d0      	b.n	402b28 <PIOB_Handler+0x28>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402b86:	6b61      	ldr	r1, [r4, #52]	; 0x34
  402b88:	4229      	tst	r1, r5
  402b8a:	d0d0      	beq.n	402b2e <PIOB_Handler+0x2e>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402b8c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  402b8e:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  402b90:	6b63      	ldr	r3, [r4, #52]	; 0x34
		while (status != 0) {
  402b92:	439d      	bics	r5, r3
  402b94:	d0d4      	beq.n	402b40 <PIOB_Handler+0x40>
  402b96:	e7ca      	b.n	402b2e <PIOB_Handler+0x2e>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402b98:	6c61      	ldr	r1, [r4, #68]	; 0x44
  402b9a:	4229      	tst	r1, r5
  402b9c:	d0ca      	beq.n	402b34 <PIOB_Handler+0x34>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402b9e:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
  402ba0:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  402ba2:	6c63      	ldr	r3, [r4, #68]	; 0x44
		while (status != 0) {
  402ba4:	439d      	bics	r5, r3
  402ba6:	d0cb      	beq.n	402b40 <PIOB_Handler+0x40>
  402ba8:	e7c4      	b.n	402b34 <PIOB_Handler+0x34>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402baa:	6d61      	ldr	r1, [r4, #84]	; 0x54
  402bac:	4229      	tst	r1, r5
  402bae:	d0c4      	beq.n	402b3a <PIOB_Handler+0x3a>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402bb0:	6de3      	ldr	r3, [r4, #92]	; 0x5c
  402bb2:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  402bb4:	6d63      	ldr	r3, [r4, #84]	; 0x54
		while (status != 0) {
  402bb6:	439d      	bics	r5, r3
  402bb8:	d0c2      	beq.n	402b40 <PIOB_Handler+0x40>
  402bba:	e7be      	b.n	402b3a <PIOB_Handler+0x3a>
  402bbc:	004028d9 	.word	0x004028d9
  402bc0:	400e1000 	.word	0x400e1000
  402bc4:	004028dd 	.word	0x004028dd
  402bc8:	2040ea8c 	.word	0x2040ea8c

00402bcc <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  402bcc:	b570      	push	{r4, r5, r6, lr}
	status = pio_get_interrupt_status(p_pio);
  402bce:	4b2e      	ldr	r3, [pc, #184]	; (402c88 <PIOC_Handler+0xbc>)
  402bd0:	482e      	ldr	r0, [pc, #184]	; (402c8c <PIOC_Handler+0xc0>)
  402bd2:	4798      	blx	r3
  402bd4:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  402bd6:	4b2e      	ldr	r3, [pc, #184]	; (402c90 <PIOC_Handler+0xc4>)
  402bd8:	482c      	ldr	r0, [pc, #176]	; (402c8c <PIOC_Handler+0xc0>)
  402bda:	4798      	blx	r3
	if (status != 0) {
  402bdc:	4005      	ands	r5, r0
  402bde:	d015      	beq.n	402c0c <PIOC_Handler+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  402be0:	4c2c      	ldr	r4, [pc, #176]	; (402c94 <PIOC_Handler+0xc8>)
  402be2:	6820      	ldr	r0, [r4, #0]
  402be4:	280c      	cmp	r0, #12
  402be6:	d019      	beq.n	402c1c <PIOC_Handler+0x50>
  402be8:	6920      	ldr	r0, [r4, #16]
  402bea:	280c      	cmp	r0, #12
  402bec:	d01f      	beq.n	402c2e <PIOC_Handler+0x62>
  402bee:	6a20      	ldr	r0, [r4, #32]
  402bf0:	280c      	cmp	r0, #12
  402bf2:	d025      	beq.n	402c40 <PIOC_Handler+0x74>
  402bf4:	6b20      	ldr	r0, [r4, #48]	; 0x30
  402bf6:	280c      	cmp	r0, #12
  402bf8:	d02b      	beq.n	402c52 <PIOC_Handler+0x86>
  402bfa:	6c20      	ldr	r0, [r4, #64]	; 0x40
  402bfc:	280c      	cmp	r0, #12
  402bfe:	d031      	beq.n	402c64 <PIOC_Handler+0x98>
  402c00:	6d20      	ldr	r0, [r4, #80]	; 0x50
  402c02:	280c      	cmp	r0, #12
  402c04:	d037      	beq.n	402c76 <PIOC_Handler+0xaa>
  402c06:	6e20      	ldr	r0, [r4, #96]	; 0x60
  402c08:	280c      	cmp	r0, #12
  402c0a:	d000      	beq.n	402c0e <PIOC_Handler+0x42>
  402c0c:	bd70      	pop	{r4, r5, r6, pc}
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402c0e:	6e61      	ldr	r1, [r4, #100]	; 0x64
  402c10:	4229      	tst	r1, r5
  402c12:	d0fb      	beq.n	402c0c <PIOC_Handler+0x40>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402c14:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
	pio_handler_process(PIOC, ID_PIOC);
}
  402c16:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402c1a:	4718      	bx	r3
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402c1c:	6861      	ldr	r1, [r4, #4]
  402c1e:	420d      	tst	r5, r1
  402c20:	d0e2      	beq.n	402be8 <PIOC_Handler+0x1c>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402c22:	68e3      	ldr	r3, [r4, #12]
  402c24:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  402c26:	6863      	ldr	r3, [r4, #4]
		while (status != 0) {
  402c28:	439d      	bics	r5, r3
  402c2a:	d0ef      	beq.n	402c0c <PIOC_Handler+0x40>
  402c2c:	e7dc      	b.n	402be8 <PIOC_Handler+0x1c>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402c2e:	6961      	ldr	r1, [r4, #20]
  402c30:	4229      	tst	r1, r5
  402c32:	d0dc      	beq.n	402bee <PIOC_Handler+0x22>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402c34:	69e3      	ldr	r3, [r4, #28]
  402c36:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  402c38:	6963      	ldr	r3, [r4, #20]
		while (status != 0) {
  402c3a:	439d      	bics	r5, r3
  402c3c:	d0e6      	beq.n	402c0c <PIOC_Handler+0x40>
  402c3e:	e7d6      	b.n	402bee <PIOC_Handler+0x22>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402c40:	6a61      	ldr	r1, [r4, #36]	; 0x24
  402c42:	4229      	tst	r1, r5
  402c44:	d0d6      	beq.n	402bf4 <PIOC_Handler+0x28>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402c46:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  402c48:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  402c4a:	6a63      	ldr	r3, [r4, #36]	; 0x24
		while (status != 0) {
  402c4c:	439d      	bics	r5, r3
  402c4e:	d0dd      	beq.n	402c0c <PIOC_Handler+0x40>
  402c50:	e7d0      	b.n	402bf4 <PIOC_Handler+0x28>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402c52:	6b61      	ldr	r1, [r4, #52]	; 0x34
  402c54:	4229      	tst	r1, r5
  402c56:	d0d0      	beq.n	402bfa <PIOC_Handler+0x2e>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402c58:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  402c5a:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  402c5c:	6b63      	ldr	r3, [r4, #52]	; 0x34
		while (status != 0) {
  402c5e:	439d      	bics	r5, r3
  402c60:	d0d4      	beq.n	402c0c <PIOC_Handler+0x40>
  402c62:	e7ca      	b.n	402bfa <PIOC_Handler+0x2e>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402c64:	6c61      	ldr	r1, [r4, #68]	; 0x44
  402c66:	4229      	tst	r1, r5
  402c68:	d0ca      	beq.n	402c00 <PIOC_Handler+0x34>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402c6a:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
  402c6c:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  402c6e:	6c63      	ldr	r3, [r4, #68]	; 0x44
		while (status != 0) {
  402c70:	439d      	bics	r5, r3
  402c72:	d0cb      	beq.n	402c0c <PIOC_Handler+0x40>
  402c74:	e7c4      	b.n	402c00 <PIOC_Handler+0x34>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402c76:	6d61      	ldr	r1, [r4, #84]	; 0x54
  402c78:	4229      	tst	r1, r5
  402c7a:	d0c4      	beq.n	402c06 <PIOC_Handler+0x3a>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402c7c:	6de3      	ldr	r3, [r4, #92]	; 0x5c
  402c7e:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  402c80:	6d63      	ldr	r3, [r4, #84]	; 0x54
		while (status != 0) {
  402c82:	439d      	bics	r5, r3
  402c84:	d0c2      	beq.n	402c0c <PIOC_Handler+0x40>
  402c86:	e7be      	b.n	402c06 <PIOC_Handler+0x3a>
  402c88:	004028d9 	.word	0x004028d9
  402c8c:	400e1200 	.word	0x400e1200
  402c90:	004028dd 	.word	0x004028dd
  402c94:	2040ea8c 	.word	0x2040ea8c

00402c98 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
  402c98:	b570      	push	{r4, r5, r6, lr}
	status = pio_get_interrupt_status(p_pio);
  402c9a:	4b2e      	ldr	r3, [pc, #184]	; (402d54 <PIOD_Handler+0xbc>)
  402c9c:	482e      	ldr	r0, [pc, #184]	; (402d58 <PIOD_Handler+0xc0>)
  402c9e:	4798      	blx	r3
  402ca0:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  402ca2:	4b2e      	ldr	r3, [pc, #184]	; (402d5c <PIOD_Handler+0xc4>)
  402ca4:	482c      	ldr	r0, [pc, #176]	; (402d58 <PIOD_Handler+0xc0>)
  402ca6:	4798      	blx	r3
	if (status != 0) {
  402ca8:	4005      	ands	r5, r0
  402caa:	d015      	beq.n	402cd8 <PIOD_Handler+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  402cac:	4c2c      	ldr	r4, [pc, #176]	; (402d60 <PIOD_Handler+0xc8>)
  402cae:	6820      	ldr	r0, [r4, #0]
  402cb0:	2810      	cmp	r0, #16
  402cb2:	d019      	beq.n	402ce8 <PIOD_Handler+0x50>
  402cb4:	6920      	ldr	r0, [r4, #16]
  402cb6:	2810      	cmp	r0, #16
  402cb8:	d01f      	beq.n	402cfa <PIOD_Handler+0x62>
  402cba:	6a20      	ldr	r0, [r4, #32]
  402cbc:	2810      	cmp	r0, #16
  402cbe:	d025      	beq.n	402d0c <PIOD_Handler+0x74>
  402cc0:	6b20      	ldr	r0, [r4, #48]	; 0x30
  402cc2:	2810      	cmp	r0, #16
  402cc4:	d02b      	beq.n	402d1e <PIOD_Handler+0x86>
  402cc6:	6c20      	ldr	r0, [r4, #64]	; 0x40
  402cc8:	2810      	cmp	r0, #16
  402cca:	d031      	beq.n	402d30 <PIOD_Handler+0x98>
  402ccc:	6d20      	ldr	r0, [r4, #80]	; 0x50
  402cce:	2810      	cmp	r0, #16
  402cd0:	d037      	beq.n	402d42 <PIOD_Handler+0xaa>
  402cd2:	6e20      	ldr	r0, [r4, #96]	; 0x60
  402cd4:	2810      	cmp	r0, #16
  402cd6:	d000      	beq.n	402cda <PIOD_Handler+0x42>
  402cd8:	bd70      	pop	{r4, r5, r6, pc}
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402cda:	6e61      	ldr	r1, [r4, #100]	; 0x64
  402cdc:	4229      	tst	r1, r5
  402cde:	d0fb      	beq.n	402cd8 <PIOD_Handler+0x40>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402ce0:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
	pio_handler_process(PIOD, ID_PIOD);
}
  402ce2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402ce6:	4718      	bx	r3
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402ce8:	6861      	ldr	r1, [r4, #4]
  402cea:	420d      	tst	r5, r1
  402cec:	d0e2      	beq.n	402cb4 <PIOD_Handler+0x1c>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402cee:	68e3      	ldr	r3, [r4, #12]
  402cf0:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  402cf2:	6863      	ldr	r3, [r4, #4]
		while (status != 0) {
  402cf4:	439d      	bics	r5, r3
  402cf6:	d0ef      	beq.n	402cd8 <PIOD_Handler+0x40>
  402cf8:	e7dc      	b.n	402cb4 <PIOD_Handler+0x1c>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402cfa:	6961      	ldr	r1, [r4, #20]
  402cfc:	4229      	tst	r1, r5
  402cfe:	d0dc      	beq.n	402cba <PIOD_Handler+0x22>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402d00:	69e3      	ldr	r3, [r4, #28]
  402d02:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  402d04:	6963      	ldr	r3, [r4, #20]
		while (status != 0) {
  402d06:	439d      	bics	r5, r3
  402d08:	d0e6      	beq.n	402cd8 <PIOD_Handler+0x40>
  402d0a:	e7d6      	b.n	402cba <PIOD_Handler+0x22>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402d0c:	6a61      	ldr	r1, [r4, #36]	; 0x24
  402d0e:	4229      	tst	r1, r5
  402d10:	d0d6      	beq.n	402cc0 <PIOD_Handler+0x28>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402d12:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  402d14:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  402d16:	6a63      	ldr	r3, [r4, #36]	; 0x24
		while (status != 0) {
  402d18:	439d      	bics	r5, r3
  402d1a:	d0dd      	beq.n	402cd8 <PIOD_Handler+0x40>
  402d1c:	e7d0      	b.n	402cc0 <PIOD_Handler+0x28>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402d1e:	6b61      	ldr	r1, [r4, #52]	; 0x34
  402d20:	4229      	tst	r1, r5
  402d22:	d0d0      	beq.n	402cc6 <PIOD_Handler+0x2e>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402d24:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  402d26:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  402d28:	6b63      	ldr	r3, [r4, #52]	; 0x34
		while (status != 0) {
  402d2a:	439d      	bics	r5, r3
  402d2c:	d0d4      	beq.n	402cd8 <PIOD_Handler+0x40>
  402d2e:	e7ca      	b.n	402cc6 <PIOD_Handler+0x2e>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402d30:	6c61      	ldr	r1, [r4, #68]	; 0x44
  402d32:	4229      	tst	r1, r5
  402d34:	d0ca      	beq.n	402ccc <PIOD_Handler+0x34>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402d36:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
  402d38:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  402d3a:	6c63      	ldr	r3, [r4, #68]	; 0x44
		while (status != 0) {
  402d3c:	439d      	bics	r5, r3
  402d3e:	d0cb      	beq.n	402cd8 <PIOD_Handler+0x40>
  402d40:	e7c4      	b.n	402ccc <PIOD_Handler+0x34>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402d42:	6d61      	ldr	r1, [r4, #84]	; 0x54
  402d44:	4229      	tst	r1, r5
  402d46:	d0c4      	beq.n	402cd2 <PIOD_Handler+0x3a>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402d48:	6de3      	ldr	r3, [r4, #92]	; 0x5c
  402d4a:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  402d4c:	6d63      	ldr	r3, [r4, #84]	; 0x54
		while (status != 0) {
  402d4e:	439d      	bics	r5, r3
  402d50:	d0c2      	beq.n	402cd8 <PIOD_Handler+0x40>
  402d52:	e7be      	b.n	402cd2 <PIOD_Handler+0x3a>
  402d54:	004028d9 	.word	0x004028d9
  402d58:	400e1400 	.word	0x400e1400
  402d5c:	004028dd 	.word	0x004028dd
  402d60:	2040ea8c 	.word	0x2040ea8c

00402d64 <PIOE_Handler>:
/**
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
  402d64:	b570      	push	{r4, r5, r6, lr}
	status = pio_get_interrupt_status(p_pio);
  402d66:	4b2e      	ldr	r3, [pc, #184]	; (402e20 <PIOE_Handler+0xbc>)
  402d68:	482e      	ldr	r0, [pc, #184]	; (402e24 <PIOE_Handler+0xc0>)
  402d6a:	4798      	blx	r3
  402d6c:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  402d6e:	4b2e      	ldr	r3, [pc, #184]	; (402e28 <PIOE_Handler+0xc4>)
  402d70:	482c      	ldr	r0, [pc, #176]	; (402e24 <PIOE_Handler+0xc0>)
  402d72:	4798      	blx	r3
	if (status != 0) {
  402d74:	4005      	ands	r5, r0
  402d76:	d015      	beq.n	402da4 <PIOE_Handler+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  402d78:	4c2c      	ldr	r4, [pc, #176]	; (402e2c <PIOE_Handler+0xc8>)
  402d7a:	6820      	ldr	r0, [r4, #0]
  402d7c:	2811      	cmp	r0, #17
  402d7e:	d019      	beq.n	402db4 <PIOE_Handler+0x50>
  402d80:	6920      	ldr	r0, [r4, #16]
  402d82:	2811      	cmp	r0, #17
  402d84:	d01f      	beq.n	402dc6 <PIOE_Handler+0x62>
  402d86:	6a20      	ldr	r0, [r4, #32]
  402d88:	2811      	cmp	r0, #17
  402d8a:	d025      	beq.n	402dd8 <PIOE_Handler+0x74>
  402d8c:	6b20      	ldr	r0, [r4, #48]	; 0x30
  402d8e:	2811      	cmp	r0, #17
  402d90:	d02b      	beq.n	402dea <PIOE_Handler+0x86>
  402d92:	6c20      	ldr	r0, [r4, #64]	; 0x40
  402d94:	2811      	cmp	r0, #17
  402d96:	d031      	beq.n	402dfc <PIOE_Handler+0x98>
  402d98:	6d20      	ldr	r0, [r4, #80]	; 0x50
  402d9a:	2811      	cmp	r0, #17
  402d9c:	d037      	beq.n	402e0e <PIOE_Handler+0xaa>
  402d9e:	6e20      	ldr	r0, [r4, #96]	; 0x60
  402da0:	2811      	cmp	r0, #17
  402da2:	d000      	beq.n	402da6 <PIOE_Handler+0x42>
  402da4:	bd70      	pop	{r4, r5, r6, pc}
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402da6:	6e61      	ldr	r1, [r4, #100]	; 0x64
  402da8:	4229      	tst	r1, r5
  402daa:	d0fb      	beq.n	402da4 <PIOE_Handler+0x40>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402dac:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
	pio_handler_process(PIOE, ID_PIOE);
}
  402dae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402db2:	4718      	bx	r3
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402db4:	6861      	ldr	r1, [r4, #4]
  402db6:	420d      	tst	r5, r1
  402db8:	d0e2      	beq.n	402d80 <PIOE_Handler+0x1c>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402dba:	68e3      	ldr	r3, [r4, #12]
  402dbc:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  402dbe:	6863      	ldr	r3, [r4, #4]
		while (status != 0) {
  402dc0:	439d      	bics	r5, r3
  402dc2:	d0ef      	beq.n	402da4 <PIOE_Handler+0x40>
  402dc4:	e7dc      	b.n	402d80 <PIOE_Handler+0x1c>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402dc6:	6961      	ldr	r1, [r4, #20]
  402dc8:	4229      	tst	r1, r5
  402dca:	d0dc      	beq.n	402d86 <PIOE_Handler+0x22>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402dcc:	69e3      	ldr	r3, [r4, #28]
  402dce:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  402dd0:	6963      	ldr	r3, [r4, #20]
		while (status != 0) {
  402dd2:	439d      	bics	r5, r3
  402dd4:	d0e6      	beq.n	402da4 <PIOE_Handler+0x40>
  402dd6:	e7d6      	b.n	402d86 <PIOE_Handler+0x22>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402dd8:	6a61      	ldr	r1, [r4, #36]	; 0x24
  402dda:	4229      	tst	r1, r5
  402ddc:	d0d6      	beq.n	402d8c <PIOE_Handler+0x28>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402dde:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  402de0:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  402de2:	6a63      	ldr	r3, [r4, #36]	; 0x24
		while (status != 0) {
  402de4:	439d      	bics	r5, r3
  402de6:	d0dd      	beq.n	402da4 <PIOE_Handler+0x40>
  402de8:	e7d0      	b.n	402d8c <PIOE_Handler+0x28>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402dea:	6b61      	ldr	r1, [r4, #52]	; 0x34
  402dec:	4229      	tst	r1, r5
  402dee:	d0d0      	beq.n	402d92 <PIOE_Handler+0x2e>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402df0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  402df2:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  402df4:	6b63      	ldr	r3, [r4, #52]	; 0x34
		while (status != 0) {
  402df6:	439d      	bics	r5, r3
  402df8:	d0d4      	beq.n	402da4 <PIOE_Handler+0x40>
  402dfa:	e7ca      	b.n	402d92 <PIOE_Handler+0x2e>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402dfc:	6c61      	ldr	r1, [r4, #68]	; 0x44
  402dfe:	4229      	tst	r1, r5
  402e00:	d0ca      	beq.n	402d98 <PIOE_Handler+0x34>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402e02:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
  402e04:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  402e06:	6c63      	ldr	r3, [r4, #68]	; 0x44
		while (status != 0) {
  402e08:	439d      	bics	r5, r3
  402e0a:	d0cb      	beq.n	402da4 <PIOE_Handler+0x40>
  402e0c:	e7c4      	b.n	402d98 <PIOE_Handler+0x34>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402e0e:	6d61      	ldr	r1, [r4, #84]	; 0x54
  402e10:	4229      	tst	r1, r5
  402e12:	d0c4      	beq.n	402d9e <PIOE_Handler+0x3a>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402e14:	6de3      	ldr	r3, [r4, #92]	; 0x5c
  402e16:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  402e18:	6d63      	ldr	r3, [r4, #84]	; 0x54
		while (status != 0) {
  402e1a:	439d      	bics	r5, r3
  402e1c:	d0c2      	beq.n	402da4 <PIOE_Handler+0x40>
  402e1e:	e7be      	b.n	402d9e <PIOE_Handler+0x3a>
  402e20:	004028d9 	.word	0x004028d9
  402e24:	400e1600 	.word	0x400e1600
  402e28:	004028dd 	.word	0x004028dd
  402e2c:	2040ea8c 	.word	0x2040ea8c

00402e30 <pmc_mck_set_division>:
 * \brief Set the division of the MCK.
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
  402e30:	3802      	subs	r0, #2
  402e32:	2802      	cmp	r0, #2
  402e34:	d80d      	bhi.n	402e52 <pmc_mck_set_division+0x22>
  402e36:	4b08      	ldr	r3, [pc, #32]	; (402e58 <pmc_mck_set_division+0x28>)
  402e38:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  402e3c:	4907      	ldr	r1, [pc, #28]	; (402e5c <pmc_mck_set_division+0x2c>)
  402e3e:	6b0b      	ldr	r3, [r1, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  402e40:	460a      	mov	r2, r1
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  402e42:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  402e46:	4303      	orrs	r3, r0
	PMC->PMC_MCKR =
  402e48:	630b      	str	r3, [r1, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  402e4a:	6e93      	ldr	r3, [r2, #104]	; 0x68
  402e4c:	071b      	lsls	r3, r3, #28
  402e4e:	d5fc      	bpl.n	402e4a <pmc_mck_set_division+0x1a>
}
  402e50:	4770      	bx	lr
{
  402e52:	2000      	movs	r0, #0
  402e54:	e7f2      	b.n	402e3c <pmc_mck_set_division+0xc>
  402e56:	bf00      	nop
  402e58:	0040c000 	.word	0x0040c000
  402e5c:	400e0600 	.word	0x400e0600

00402e60 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  402e60:	4913      	ldr	r1, [pc, #76]	; (402eb0 <pmc_switch_mck_to_pllack+0x50>)
  402e62:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  402e64:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  402e68:	4318      	orrs	r0, r3
  402e6a:	6308      	str	r0, [r1, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  402e6c:	6e8b      	ldr	r3, [r1, #104]	; 0x68
  402e6e:	0718      	lsls	r0, r3, #28
  402e70:	d407      	bmi.n	402e82 <pmc_switch_mck_to_pllack+0x22>
  402e72:	f44f 6300 	mov.w	r3, #2048	; 0x800
  402e76:	e001      	b.n	402e7c <pmc_switch_mck_to_pllack+0x1c>
			--ul_timeout) {
		if (ul_timeout == 0) {
  402e78:	3b01      	subs	r3, #1
  402e7a:	d016      	beq.n	402eaa <pmc_switch_mck_to_pllack+0x4a>
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  402e7c:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  402e7e:	0712      	lsls	r2, r2, #28
  402e80:	d5fa      	bpl.n	402e78 <pmc_switch_mck_to_pllack+0x18>
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  402e82:	490b      	ldr	r1, [pc, #44]	; (402eb0 <pmc_switch_mck_to_pllack+0x50>)
  402e84:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  402e86:	f023 0303 	bic.w	r3, r3, #3
  402e8a:	f043 0302 	orr.w	r3, r3, #2
  402e8e:	630b      	str	r3, [r1, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  402e90:	6e8b      	ldr	r3, [r1, #104]	; 0x68
  402e92:	0718      	lsls	r0, r3, #28
  402e94:	d407      	bmi.n	402ea6 <pmc_switch_mck_to_pllack+0x46>
  402e96:	f44f 6300 	mov.w	r3, #2048	; 0x800
  402e9a:	e001      	b.n	402ea0 <pmc_switch_mck_to_pllack+0x40>
			--ul_timeout) {
		if (ul_timeout == 0) {
  402e9c:	3b01      	subs	r3, #1
  402e9e:	d004      	beq.n	402eaa <pmc_switch_mck_to_pllack+0x4a>
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  402ea0:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  402ea2:	0712      	lsls	r2, r2, #28
  402ea4:	d5fa      	bpl.n	402e9c <pmc_switch_mck_to_pllack+0x3c>
			return 1;
		}
	}

	return 0;
  402ea6:	2000      	movs	r0, #0
}
  402ea8:	4770      	bx	lr
			return 1;
  402eaa:	2001      	movs	r0, #1
  402eac:	4770      	bx	lr
  402eae:	bf00      	nop
  402eb0:	400e0600 	.word	0x400e0600

00402eb4 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  402eb4:	b9a0      	cbnz	r0, 402ee0 <pmc_switch_mainck_to_xtal+0x2c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  402eb6:	4b0e      	ldr	r3, [pc, #56]	; (402ef0 <pmc_switch_mainck_to_xtal+0x3c>)
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  402eb8:	0209      	lsls	r1, r1, #8
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  402eba:	480e      	ldr	r0, [pc, #56]	; (402ef4 <pmc_switch_mainck_to_xtal+0x40>)
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  402ebc:	b289      	uxth	r1, r1
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  402ebe:	461a      	mov	r2, r3
{
  402ec0:	b430      	push	{r4, r5}
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  402ec2:	4c0d      	ldr	r4, [pc, #52]	; (402ef8 <pmc_switch_mainck_to_xtal+0x44>)
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  402ec4:	6a1d      	ldr	r5, [r3, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  402ec6:	402c      	ands	r4, r5
  402ec8:	4320      	orrs	r0, r4
  402eca:	4301      	orrs	r1, r0
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  402ecc:	6219      	str	r1, [r3, #32]
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  402ece:	6e93      	ldr	r3, [r2, #104]	; 0x68
  402ed0:	07db      	lsls	r3, r3, #31
  402ed2:	d5fc      	bpl.n	402ece <pmc_switch_mainck_to_xtal+0x1a>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  402ed4:	6a11      	ldr	r1, [r2, #32]
  402ed6:	4b09      	ldr	r3, [pc, #36]	; (402efc <pmc_switch_mainck_to_xtal+0x48>)
  402ed8:	430b      	orrs	r3, r1
  402eda:	6213      	str	r3, [r2, #32]
	}
}
  402edc:	bc30      	pop	{r4, r5}
  402ede:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  402ee0:	4903      	ldr	r1, [pc, #12]	; (402ef0 <pmc_switch_mainck_to_xtal+0x3c>)
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  402ee2:	4a07      	ldr	r2, [pc, #28]	; (402f00 <pmc_switch_mainck_to_xtal+0x4c>)
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  402ee4:	6a08      	ldr	r0, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  402ee6:	4b07      	ldr	r3, [pc, #28]	; (402f04 <pmc_switch_mainck_to_xtal+0x50>)
  402ee8:	4002      	ands	r2, r0
  402eea:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  402eec:	620b      	str	r3, [r1, #32]
  402eee:	4770      	bx	lr
  402ef0:	400e0600 	.word	0x400e0600
  402ef4:	00370001 	.word	0x00370001
  402ef8:	ffc8fffc 	.word	0xffc8fffc
  402efc:	01370000 	.word	0x01370000
  402f00:	fec8fffc 	.word	0xfec8fffc
  402f04:	01370002 	.word	0x01370002

00402f08 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  402f08:	4b02      	ldr	r3, [pc, #8]	; (402f14 <pmc_osc_is_ready_mainck+0xc>)
  402f0a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  402f0c:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  402f10:	4770      	bx	lr
  402f12:	bf00      	nop
  402f14:	400e0600 	.word	0x400e0600

00402f18 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  402f18:	4b02      	ldr	r3, [pc, #8]	; (402f24 <pmc_disable_pllack+0xc>)
  402f1a:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  402f1e:	629a      	str	r2, [r3, #40]	; 0x28
  402f20:	4770      	bx	lr
  402f22:	bf00      	nop
  402f24:	400e0600 	.word	0x400e0600

00402f28 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  402f28:	4b02      	ldr	r3, [pc, #8]	; (402f34 <pmc_is_locked_pllack+0xc>)
  402f2a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  402f2c:	f000 0002 	and.w	r0, r0, #2
  402f30:	4770      	bx	lr
  402f32:	bf00      	nop
  402f34:	400e0600 	.word	0x400e0600

00402f38 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  402f38:	283f      	cmp	r0, #63	; 0x3f
  402f3a:	d81a      	bhi.n	402f72 <pmc_enable_periph_clk+0x3a>
		return 1;
	}

	if (ul_id < 32) {
  402f3c:	281f      	cmp	r0, #31
  402f3e:	d80a      	bhi.n	402f56 <pmc_enable_periph_clk+0x1e>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  402f40:	2301      	movs	r3, #1
  402f42:	4a0e      	ldr	r2, [pc, #56]	; (402f7c <pmc_enable_periph_clk+0x44>)
  402f44:	fa03 f000 	lsl.w	r0, r3, r0
  402f48:	6991      	ldr	r1, [r2, #24]
  402f4a:	ea30 0301 	bics.w	r3, r0, r1
  402f4e:	d012      	beq.n	402f76 <pmc_enable_periph_clk+0x3e>
			PMC->PMC_PCER0 = 1 << ul_id;
  402f50:	6110      	str	r0, [r2, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  402f52:	2000      	movs	r0, #0
  402f54:	4770      	bx	lr
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  402f56:	2301      	movs	r3, #1
		ul_id -= 32;
  402f58:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  402f5a:	4a08      	ldr	r2, [pc, #32]	; (402f7c <pmc_enable_periph_clk+0x44>)
  402f5c:	fa03 f000 	lsl.w	r0, r3, r0
  402f60:	f8d2 3108 	ldr.w	r3, [r2, #264]	; 0x108
  402f64:	ea30 0303 	bics.w	r3, r0, r3
  402f68:	d005      	beq.n	402f76 <pmc_enable_periph_clk+0x3e>
			PMC->PMC_PCER1 = 1 << ul_id;
  402f6a:	f8c2 0100 	str.w	r0, [r2, #256]	; 0x100
	return 0;
  402f6e:	2000      	movs	r0, #0
  402f70:	4770      	bx	lr
		return 1;
  402f72:	2001      	movs	r0, #1
  402f74:	4770      	bx	lr
	return 0;
  402f76:	2000      	movs	r0, #0
}
  402f78:	4770      	bx	lr
  402f7a:	bf00      	nop
  402f7c:	400e0600 	.word	0x400e0600

00402f80 <pmc_pck_set_prescaler>:
 *
 * \param ul_id Peripheral ID.
 * \param ul_pres Prescaler value.
 */
void pmc_pck_set_prescaler(uint32_t ul_id, uint32_t ul_pres)
{
  402f80:	4b0b      	ldr	r3, [pc, #44]	; (402fb0 <pmc_pck_set_prescaler+0x30>)
  402f82:	f44f 7280 	mov.w	r2, #256	; 0x100
  402f86:	b410      	push	{r4}
  402f88:	eb03 0480 	add.w	r4, r3, r0, lsl #2
  402f8c:	fa02 f000 	lsl.w	r0, r2, r0
	PMC->PMC_PCK[ul_id] =
			(PMC->PMC_PCK[ul_id] & ~PMC_PCK_PRES_Msk) | ul_pres;
  402f90:	6c22      	ldr	r2, [r4, #64]	; 0x40
  402f92:	f422 627f 	bic.w	r2, r2, #4080	; 0xff0
  402f96:	4311      	orrs	r1, r2
	PMC->PMC_PCK[ul_id] =
  402f98:	6421      	str	r1, [r4, #64]	; 0x40
	while ((PMC->PMC_SCER & (PMC_SCER_PCK0 << ul_id))
  402f9a:	e002      	b.n	402fa2 <pmc_pck_set_prescaler+0x22>
			&& !(PMC->PMC_SR & (PMC_SR_PCKRDY0 << ul_id)));
  402f9c:	6e9a      	ldr	r2, [r3, #104]	; 0x68
  402f9e:	4202      	tst	r2, r0
  402fa0:	d102      	bne.n	402fa8 <pmc_pck_set_prescaler+0x28>
	while ((PMC->PMC_SCER & (PMC_SCER_PCK0 << ul_id))
  402fa2:	681a      	ldr	r2, [r3, #0]
  402fa4:	4202      	tst	r2, r0
  402fa6:	d1f9      	bne.n	402f9c <pmc_pck_set_prescaler+0x1c>
}
  402fa8:	f85d 4b04 	ldr.w	r4, [sp], #4
  402fac:	4770      	bx	lr
  402fae:	bf00      	nop
  402fb0:	400e0600 	.word	0x400e0600

00402fb4 <pmc_pck_set_source>:
 *
 * \param ul_id Peripheral ID.
 * \param ul_source Source selection value.
 */
void pmc_pck_set_source(uint32_t ul_id, uint32_t ul_source)
{
  402fb4:	4b0b      	ldr	r3, [pc, #44]	; (402fe4 <pmc_pck_set_source+0x30>)
  402fb6:	f44f 7280 	mov.w	r2, #256	; 0x100
  402fba:	b410      	push	{r4}
  402fbc:	eb03 0480 	add.w	r4, r3, r0, lsl #2
  402fc0:	fa02 f000 	lsl.w	r0, r2, r0
	PMC->PMC_PCK[ul_id] =
			(PMC->PMC_PCK[ul_id] & ~PMC_PCK_CSS_Msk) | ul_source;
  402fc4:	6c22      	ldr	r2, [r4, #64]	; 0x40
  402fc6:	f022 0207 	bic.w	r2, r2, #7
  402fca:	4311      	orrs	r1, r2
	PMC->PMC_PCK[ul_id] =
  402fcc:	6421      	str	r1, [r4, #64]	; 0x40
	while ((PMC->PMC_SCER & (PMC_SCER_PCK0 << ul_id))
  402fce:	e002      	b.n	402fd6 <pmc_pck_set_source+0x22>
			&& !(PMC->PMC_SR & (PMC_SR_PCKRDY0 << ul_id)));
  402fd0:	6e9a      	ldr	r2, [r3, #104]	; 0x68
  402fd2:	4202      	tst	r2, r0
  402fd4:	d102      	bne.n	402fdc <pmc_pck_set_source+0x28>
	while ((PMC->PMC_SCER & (PMC_SCER_PCK0 << ul_id))
  402fd6:	681a      	ldr	r2, [r3, #0]
  402fd8:	4202      	tst	r2, r0
  402fda:	d1f9      	bne.n	402fd0 <pmc_pck_set_source+0x1c>
}
  402fdc:	f85d 4b04 	ldr.w	r4, [sp], #4
  402fe0:	4770      	bx	lr
  402fe2:	bf00      	nop
  402fe4:	400e0600 	.word	0x400e0600

00402fe8 <pmc_enable_pck>:
 *
 * \param ul_id Id of the programmable clock.
 */
void pmc_enable_pck(uint32_t ul_id)
{
	PMC->PMC_SCER = PMC_SCER_PCK0 << ul_id;
  402fe8:	f44f 7380 	mov.w	r3, #256	; 0x100
  402fec:	4a02      	ldr	r2, [pc, #8]	; (402ff8 <pmc_enable_pck+0x10>)
  402fee:	fa03 f000 	lsl.w	r0, r3, r0
  402ff2:	6010      	str	r0, [r2, #0]
  402ff4:	4770      	bx	lr
  402ff6:	bf00      	nop
  402ff8:	400e0600 	.word	0x400e0600

00402ffc <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  402ffc:	e7fe      	b.n	402ffc <Dummy_Handler>
  402ffe:	bf00      	nop

00403000 <Dummy_Handler2>:
	while (1) {
	}
}

void Dummy_Handler2(void)
{
  403000:	e7fe      	b.n	403000 <Dummy_Handler2>
  403002:	bf00      	nop

00403004 <Reset_Handler>:
        if (pSrc != pDest) {
  403004:	4920      	ldr	r1, [pc, #128]	; (403088 <Reset_Handler+0x84>)
  403006:	4821      	ldr	r0, [pc, #132]	; (40308c <Reset_Handler+0x88>)
  403008:	4281      	cmp	r1, r0
{
  40300a:	b510      	push	{r4, lr}
  40300c:	b082      	sub	sp, #8
        if (pSrc != pDest) {
  40300e:	d009      	beq.n	403024 <Reset_Handler+0x20>
                for (; pDest < &_erelocate;) {
  403010:	4b1f      	ldr	r3, [pc, #124]	; (403090 <Reset_Handler+0x8c>)
  403012:	4298      	cmp	r0, r3
  403014:	d206      	bcs.n	403024 <Reset_Handler+0x20>
                        *pDest++ = *pSrc++;
  403016:	43c2      	mvns	r2, r0
  403018:	4c1e      	ldr	r4, [pc, #120]	; (403094 <Reset_Handler+0x90>)
  40301a:	441a      	add	r2, r3
  40301c:	f022 0203 	bic.w	r2, r2, #3
  403020:	3204      	adds	r2, #4
  403022:	47a0      	blx	r4
        for (pDest = &_szero; pDest < &_ezero;) {
  403024:	481c      	ldr	r0, [pc, #112]	; (403098 <Reset_Handler+0x94>)
  403026:	4b1d      	ldr	r3, [pc, #116]	; (40309c <Reset_Handler+0x98>)
  403028:	4298      	cmp	r0, r3
  40302a:	d207      	bcs.n	40303c <Reset_Handler+0x38>
                *pDest++ = 0;
  40302c:	43c2      	mvns	r2, r0
  40302e:	2100      	movs	r1, #0
  403030:	4c1b      	ldr	r4, [pc, #108]	; (4030a0 <Reset_Handler+0x9c>)
  403032:	441a      	add	r2, r3
  403034:	f022 0203 	bic.w	r2, r2, #3
  403038:	3204      	adds	r2, #4
  40303a:	47a0      	blx	r4
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  40303c:	4b19      	ldr	r3, [pc, #100]	; (4030a4 <Reset_Handler+0xa0>)
  40303e:	4a1a      	ldr	r2, [pc, #104]	; (4030a8 <Reset_Handler+0xa4>)
  403040:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  403044:	6093      	str	r3, [r2, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  403046:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  40304a:	fab3 f383 	clz	r3, r3
  40304e:	095b      	lsrs	r3, r3, #5
  403050:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  403052:	b672      	cpsid	i
  __ASM volatile ("dmb");
  403054:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  403058:	4a14      	ldr	r2, [pc, #80]	; (4030ac <Reset_Handler+0xa8>)
  40305a:	2300      	movs	r3, #0
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  40305c:	4914      	ldr	r1, [pc, #80]	; (4030b0 <Reset_Handler+0xac>)
  40305e:	7013      	strb	r3, [r2, #0]
	return flags;
  403060:	9801      	ldr	r0, [sp, #4]
  403062:	680b      	ldr	r3, [r1, #0]
  403064:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  403068:	600b      	str	r3, [r1, #0]
  __ASM volatile ("dsb");
  40306a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  40306e:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  403072:	b120      	cbz	r0, 40307e <Reset_Handler+0x7a>
		cpu_irq_enable();
  403074:	2301      	movs	r3, #1
  403076:	7013      	strb	r3, [r2, #0]
  __ASM volatile ("dmb");
  403078:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40307c:	b662      	cpsie	i
        __libc_init_array();
  40307e:	4b0d      	ldr	r3, [pc, #52]	; (4030b4 <Reset_Handler+0xb0>)
  403080:	4798      	blx	r3
        main();
  403082:	4b0d      	ldr	r3, [pc, #52]	; (4030b8 <Reset_Handler+0xb4>)
  403084:	4798      	blx	r3
  403086:	e7fe      	b.n	403086 <Reset_Handler+0x82>
  403088:	00420014 	.word	0x00420014
  40308c:	20400000 	.word	0x20400000
  403090:	20400a30 	.word	0x20400a30
  403094:	00408421 	.word	0x00408421
  403098:	20401000 	.word	0x20401000
  40309c:	2041b88c 	.word	0x2041b88c
  4030a0:	00408555 	.word	0x00408555
  4030a4:	00400000 	.word	0x00400000
  4030a8:	e000ed00 	.word	0xe000ed00
  4030ac:	20400028 	.word	0x20400028
  4030b0:	e000ed88 	.word	0xe000ed88
  4030b4:	00407e39 	.word	0x00407e39
  4030b8:	00405041 	.word	0x00405041

004030bc <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  4030bc:	4a32      	ldr	r2, [pc, #200]	; (403188 <SystemCoreClockUpdate+0xcc>)
  4030be:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4030c0:	f003 0303 	and.w	r3, r3, #3
  4030c4:	2b01      	cmp	r3, #1
  4030c6:	d03c      	beq.n	403142 <SystemCoreClockUpdate+0x86>
  4030c8:	d325      	bcc.n	403116 <SystemCoreClockUpdate+0x5a>
  4030ca:	2b02      	cmp	r3, #2
  4030cc:	d00d      	beq.n	4030ea <SystemCoreClockUpdate+0x2e>
  4030ce:	482f      	ldr	r0, [pc, #188]	; (40318c <SystemCoreClockUpdate+0xd0>)
  4030d0:	6803      	ldr	r3, [r0, #0]

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  4030d2:	492d      	ldr	r1, [pc, #180]	; (403188 <SystemCoreClockUpdate+0xcc>)
  4030d4:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  4030d6:	f002 0270 	and.w	r2, r2, #112	; 0x70
  4030da:	2a70      	cmp	r2, #112	; 0x70
  4030dc:	d02b      	beq.n	403136 <SystemCoreClockUpdate+0x7a>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  4030de:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  4030e0:	f3c2 1202 	ubfx	r2, r2, #4, #3
  4030e4:	40d3      	lsrs	r3, r2
  4030e6:	6003      	str	r3, [r0, #0]
  4030e8:	4770      	bx	lr
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4030ea:	6a13      	ldr	r3, [r2, #32]
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  4030ec:	4827      	ldr	r0, [pc, #156]	; (40318c <SystemCoreClockUpdate+0xd0>)
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4030ee:	01db      	lsls	r3, r3, #7
  4030f0:	d53a      	bpl.n	403168 <SystemCoreClockUpdate+0xac>
            SystemCoreClock *= 3U;
  4030f2:	4b27      	ldr	r3, [pc, #156]	; (403190 <SystemCoreClockUpdate+0xd4>)
  4030f4:	6003      	str	r3, [r0, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  4030f6:	4924      	ldr	r1, [pc, #144]	; (403188 <SystemCoreClockUpdate+0xcc>)
  4030f8:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  4030fa:	f002 0203 	and.w	r2, r2, #3
  4030fe:	2a02      	cmp	r2, #2
  403100:	d1e7      	bne.n	4030d2 <SystemCoreClockUpdate+0x16>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  403102:	6a8a      	ldr	r2, [r1, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  403104:	6a89      	ldr	r1, [r1, #40]	; 0x28
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  403106:	f3c2 420a 	ubfx	r2, r2, #16, #11
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  40310a:	b2c9      	uxtb	r1, r1
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  40310c:	fb02 3303 	mla	r3, r2, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  403110:	fbb3 f3f1 	udiv	r3, r3, r1
  403114:	e7dd      	b.n	4030d2 <SystemCoreClockUpdate+0x16>
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  403116:	4b1f      	ldr	r3, [pc, #124]	; (403194 <SystemCoreClockUpdate+0xd8>)
  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  403118:	491b      	ldr	r1, [pc, #108]	; (403188 <SystemCoreClockUpdate+0xcc>)
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  40311a:	695b      	ldr	r3, [r3, #20]
  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  40311c:	6b0a      	ldr	r2, [r1, #48]	; 0x30
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  40311e:	f013 0f80 	tst.w	r3, #128	; 0x80
  403122:	481a      	ldr	r0, [pc, #104]	; (40318c <SystemCoreClockUpdate+0xd0>)
  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  403124:	f002 0270 	and.w	r2, r2, #112	; 0x70
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  403128:	bf14      	ite	ne
  40312a:	f44f 4300 	movne.w	r3, #32768	; 0x8000
  40312e:	f44f 43fa 	moveq.w	r3, #32000	; 0x7d00
  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  403132:	2a70      	cmp	r2, #112	; 0x70
  403134:	d1d3      	bne.n	4030de <SystemCoreClockUpdate+0x22>
    SystemCoreClock /= 3U;
  403136:	4a18      	ldr	r2, [pc, #96]	; (403198 <SystemCoreClockUpdate+0xdc>)
  403138:	fba2 2303 	umull	r2, r3, r2, r3
  40313c:	085b      	lsrs	r3, r3, #1
  40313e:	6003      	str	r3, [r0, #0]
  403140:	4770      	bx	lr
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  403142:	6a13      	ldr	r3, [r2, #32]
  403144:	01d9      	lsls	r1, r3, #7
  403146:	d40c      	bmi.n	403162 <SystemCoreClockUpdate+0xa6>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  403148:	4810      	ldr	r0, [pc, #64]	; (40318c <SystemCoreClockUpdate+0xd0>)
  40314a:	4914      	ldr	r1, [pc, #80]	; (40319c <SystemCoreClockUpdate+0xe0>)
  40314c:	6001      	str	r1, [r0, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  40314e:	6a12      	ldr	r2, [r2, #32]
  403150:	f002 0270 	and.w	r2, r2, #112	; 0x70
  403154:	2a10      	cmp	r2, #16
  403156:	d011      	beq.n	40317c <SystemCoreClockUpdate+0xc0>
  403158:	4b0d      	ldr	r3, [pc, #52]	; (403190 <SystemCoreClockUpdate+0xd4>)
  40315a:	2a20      	cmp	r2, #32
  40315c:	bf18      	it	ne
  40315e:	460b      	movne	r3, r1
  403160:	e7b7      	b.n	4030d2 <SystemCoreClockUpdate+0x16>
  403162:	4b0b      	ldr	r3, [pc, #44]	; (403190 <SystemCoreClockUpdate+0xd4>)
  403164:	4809      	ldr	r0, [pc, #36]	; (40318c <SystemCoreClockUpdate+0xd0>)
  403166:	e7b4      	b.n	4030d2 <SystemCoreClockUpdate+0x16>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  403168:	4b0c      	ldr	r3, [pc, #48]	; (40319c <SystemCoreClockUpdate+0xe0>)
  40316a:	6003      	str	r3, [r0, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  40316c:	6a12      	ldr	r2, [r2, #32]
  40316e:	f002 0270 	and.w	r2, r2, #112	; 0x70
  403172:	2a10      	cmp	r2, #16
  403174:	d004      	beq.n	403180 <SystemCoreClockUpdate+0xc4>
  403176:	2a20      	cmp	r2, #32
  403178:	d0bb      	beq.n	4030f2 <SystemCoreClockUpdate+0x36>
  40317a:	e7bc      	b.n	4030f6 <SystemCoreClockUpdate+0x3a>
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  40317c:	4b08      	ldr	r3, [pc, #32]	; (4031a0 <SystemCoreClockUpdate+0xe4>)
  40317e:	e7a8      	b.n	4030d2 <SystemCoreClockUpdate+0x16>
            SystemCoreClock *= 2U;
  403180:	4b07      	ldr	r3, [pc, #28]	; (4031a0 <SystemCoreClockUpdate+0xe4>)
  403182:	6003      	str	r3, [r0, #0]
          break;
  403184:	e7b7      	b.n	4030f6 <SystemCoreClockUpdate+0x3a>
  403186:	bf00      	nop
  403188:	400e0600 	.word	0x400e0600
  40318c:	2040002c 	.word	0x2040002c
  403190:	00b71b00 	.word	0x00b71b00
  403194:	400e1810 	.word	0x400e1810
  403198:	aaaaaaab 	.word	0xaaaaaaab
  40319c:	003d0900 	.word	0x003d0900
  4031a0:	007a1200 	.word	0x007a1200

004031a4 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  4031a4:	4b16      	ldr	r3, [pc, #88]	; (403200 <system_init_flash+0x5c>)
  4031a6:	4298      	cmp	r0, r3
  4031a8:	d917      	bls.n	4031da <system_init_flash+0x36>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  4031aa:	4b16      	ldr	r3, [pc, #88]	; (403204 <system_init_flash+0x60>)
  4031ac:	4298      	cmp	r0, r3
  4031ae:	d910      	bls.n	4031d2 <system_init_flash+0x2e>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  4031b0:	4b15      	ldr	r3, [pc, #84]	; (403208 <system_init_flash+0x64>)
  4031b2:	4298      	cmp	r0, r3
  4031b4:	d91a      	bls.n	4031ec <system_init_flash+0x48>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  4031b6:	4b15      	ldr	r3, [pc, #84]	; (40320c <system_init_flash+0x68>)
  4031b8:	4298      	cmp	r0, r3
  4031ba:	d913      	bls.n	4031e4 <system_init_flash+0x40>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  4031bc:	4b14      	ldr	r3, [pc, #80]	; (403210 <system_init_flash+0x6c>)
  4031be:	4298      	cmp	r0, r3
  4031c0:	d918      	bls.n	4031f4 <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  4031c2:	4b14      	ldr	r3, [pc, #80]	; (403214 <system_init_flash+0x70>)
  4031c4:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  4031c6:	4b14      	ldr	r3, [pc, #80]	; (403218 <system_init_flash+0x74>)
  4031c8:	bf94      	ite	ls
  4031ca:	4a14      	ldrls	r2, [pc, #80]	; (40321c <system_init_flash+0x78>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  4031cc:	4a14      	ldrhi	r2, [pc, #80]	; (403220 <system_init_flash+0x7c>)
  4031ce:	601a      	str	r2, [r3, #0]
  4031d0:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  4031d2:	4b11      	ldr	r3, [pc, #68]	; (403218 <system_init_flash+0x74>)
  4031d4:	4a13      	ldr	r2, [pc, #76]	; (403224 <system_init_flash+0x80>)
  4031d6:	601a      	str	r2, [r3, #0]
  4031d8:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  4031da:	4b0f      	ldr	r3, [pc, #60]	; (403218 <system_init_flash+0x74>)
  4031dc:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  4031e0:	601a      	str	r2, [r3, #0]
  4031e2:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  4031e4:	4b0c      	ldr	r3, [pc, #48]	; (403218 <system_init_flash+0x74>)
  4031e6:	4a10      	ldr	r2, [pc, #64]	; (403228 <system_init_flash+0x84>)
  4031e8:	601a      	str	r2, [r3, #0]
  4031ea:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  4031ec:	4b0a      	ldr	r3, [pc, #40]	; (403218 <system_init_flash+0x74>)
  4031ee:	4a0f      	ldr	r2, [pc, #60]	; (40322c <system_init_flash+0x88>)
  4031f0:	601a      	str	r2, [r3, #0]
  4031f2:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  4031f4:	4b08      	ldr	r3, [pc, #32]	; (403218 <system_init_flash+0x74>)
  4031f6:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  4031fa:	601a      	str	r2, [r3, #0]
  4031fc:	4770      	bx	lr
  4031fe:	bf00      	nop
  403200:	015ef3bf 	.word	0x015ef3bf
  403204:	02bde77f 	.word	0x02bde77f
  403208:	041cdb3f 	.word	0x041cdb3f
  40320c:	057bceff 	.word	0x057bceff
  403210:	06dac2bf 	.word	0x06dac2bf
  403214:	0839b67f 	.word	0x0839b67f
  403218:	400e0c00 	.word	0x400e0c00
  40321c:	04000500 	.word	0x04000500
  403220:	04000600 	.word	0x04000600
  403224:	04000100 	.word	0x04000100
  403228:	04000300 	.word	0x04000300
  40322c:	04000200 	.word	0x04000200

00403230 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  403230:	4a0d      	ldr	r2, [pc, #52]	; (403268 <_sbrk+0x38>)
	int ramend = (int)&__ram_end__;
  403232:	490e      	ldr	r1, [pc, #56]	; (40326c <_sbrk+0x3c>)
	if (heap == NULL) {
  403234:	6813      	ldr	r3, [r2, #0]
  403236:	b143      	cbz	r3, 40324a <_sbrk+0x1a>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
  403238:	4418      	add	r0, r3
  40323a:	4281      	cmp	r1, r0
  40323c:	db02      	blt.n	403244 <_sbrk+0x14>
		return (caddr_t) -1;	
	}

	heap += incr;
  40323e:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  403240:	4618      	mov	r0, r3
  403242:	4770      	bx	lr
		return (caddr_t) -1;	
  403244:	f04f 30ff 	mov.w	r0, #4294967295
  403248:	4770      	bx	lr
{
  40324a:	b410      	push	{r4}
		heap = (unsigned char *)&_end;
  40324c:	4c08      	ldr	r4, [pc, #32]	; (403270 <_sbrk+0x40>)
	if (((int)prev_heap + incr) > ramend) {
  40324e:	4420      	add	r0, r4
		heap = (unsigned char *)&_end;
  403250:	6014      	str	r4, [r2, #0]
	if (((int)prev_heap + incr) > ramend) {
  403252:	4281      	cmp	r1, r0
  403254:	db04      	blt.n	403260 <_sbrk+0x30>
	heap += incr;
  403256:	6010      	str	r0, [r2, #0]
	return (caddr_t) prev_heap;
  403258:	4620      	mov	r0, r4
}
  40325a:	f85d 4b04 	ldr.w	r4, [sp], #4
  40325e:	4770      	bx	lr
		return (caddr_t) -1;	
  403260:	f04f 30ff 	mov.w	r0, #4294967295
  403264:	e7f9      	b.n	40325a <_sbrk+0x2a>
  403266:	bf00      	nop
  403268:	2040eafc 	.word	0x2040eafc
  40326c:	2045fffc 	.word	0x2045fffc
  403270:	2041da90 	.word	0x2041da90

00403274 <_close>:
}

extern int _close(int file)
{
	return -1;
}
  403274:	f04f 30ff 	mov.w	r0, #4294967295
  403278:	4770      	bx	lr
  40327a:	bf00      	nop

0040327c <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  40327c:	f44f 5300 	mov.w	r3, #8192	; 0x2000

	return 0;
}
  403280:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
  403282:	604b      	str	r3, [r1, #4]
}
  403284:	4770      	bx	lr
  403286:	bf00      	nop

00403288 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  403288:	2001      	movs	r0, #1
  40328a:	4770      	bx	lr

0040328c <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  40328c:	2000      	movs	r0, #0
  40328e:	4770      	bx	lr

00403290 <xEventGroupSetBits.part.0>:

	return uxReturn;
}
/*-----------------------------------------------------------*/

EventBits_t xEventGroupSetBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet )
  403290:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403294:	4604      	mov	r4, r0
	configASSERT( xEventGroup );
	configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );

	pxList = &( pxEventBits->xTasksWaitingForBits );
	pxListEnd = listGET_END_MARKER( pxList ); /*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	vTaskSuspendAll();
  403296:	4b15      	ldr	r3, [pc, #84]	; (4032ec <xEventGroupSetBits.part.0+0x5c>)
EventBits_t xEventGroupSetBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet )
  403298:	460e      	mov	r6, r1
	vTaskSuspendAll();
  40329a:	4798      	blx	r3
		traceEVENT_GROUP_SET_BITS( xEventGroup, uxBitsToSet );

		pxListItem = listGET_HEAD_ENTRY( pxList );

		/* Set the bits. */
		pxEventBits->uxEventBits |= uxBitsToSet;
  40329c:	6823      	ldr	r3, [r4, #0]
	pxListEnd = listGET_END_MARKER( pxList ); /*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
  40329e:	f104 070c 	add.w	r7, r4, #12
		pxListItem = listGET_HEAD_ENTRY( pxList );
  4032a2:	6920      	ldr	r0, [r4, #16]
EventBits_t uxBitsToClear = 0, uxBitsWaitedFor, uxControlBits;
  4032a4:	2500      	movs	r5, #0
		pxEventBits->uxEventBits |= uxBitsToSet;
  4032a6:	4333      	orrs	r3, r6
				/* Store the actual event flag value in the task's event list
				item before removing the task from the event list.  The
				eventUNBLOCKED_DUE_TO_BIT_SET bit is set so the task knows
				that is was unblocked due to its required bits matching, rather
				than because it timed out. */
				vTaskRemoveFromUnorderedEventList( pxListItem, pxEventBits->uxEventBits | eventUNBLOCKED_DUE_TO_BIT_SET );
  4032a8:	4e11      	ldr	r6, [pc, #68]	; (4032f0 <xEventGroupSetBits.part.0+0x60>)
		pxEventBits->uxEventBits |= uxBitsToSet;
  4032aa:	6023      	str	r3, [r4, #0]
		while( pxListItem != pxListEnd )
  4032ac:	4287      	cmp	r7, r0
  4032ae:	6821      	ldr	r1, [r4, #0]
  4032b0:	d014      	beq.n	4032dc <xEventGroupSetBits.part.0+0x4c>
			pxNext = listGET_NEXT( pxListItem );
  4032b2:	e890 0108 	ldmia.w	r0, {r3, r8}
			if( ( uxControlBits & eventWAIT_FOR_ALL_BITS ) == ( EventBits_t ) 0 )
  4032b6:	f013 6f80 	tst.w	r3, #67108864	; 0x4000000
			uxBitsWaitedFor &= ~eventEVENT_BITS_CONTROL_BYTES;
  4032ba:	f023 427f 	bic.w	r2, r3, #4278190080	; 0xff000000
			if( ( uxControlBits & eventWAIT_FOR_ALL_BITS ) == ( EventBits_t ) 0 )
  4032be:	d102      	bne.n	4032c6 <xEventGroupSetBits.part.0+0x36>
				if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) != ( EventBits_t ) 0 )
  4032c0:	420a      	tst	r2, r1
  4032c2:	d103      	bne.n	4032cc <xEventGroupSetBits.part.0+0x3c>
  4032c4:	e008      	b.n	4032d8 <xEventGroupSetBits.part.0+0x48>
			else if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) == uxBitsWaitedFor )
  4032c6:	ea32 0e01 	bics.w	lr, r2, r1
  4032ca:	d105      	bne.n	4032d8 <xEventGroupSetBits.part.0+0x48>
				if( ( uxControlBits & eventCLEAR_EVENTS_ON_EXIT_BIT ) != ( EventBits_t ) 0 )
  4032cc:	01db      	lsls	r3, r3, #7
  4032ce:	d500      	bpl.n	4032d2 <xEventGroupSetBits.part.0+0x42>
					uxBitsToClear |= uxBitsWaitedFor;
  4032d0:	4315      	orrs	r5, r2
				vTaskRemoveFromUnorderedEventList( pxListItem, pxEventBits->uxEventBits | eventUNBLOCKED_DUE_TO_BIT_SET );
  4032d2:	f041 7100 	orr.w	r1, r1, #33554432	; 0x2000000
  4032d6:	47b0      	blx	r6
EventBits_t xEventGroupSetBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet )
  4032d8:	4640      	mov	r0, r8
  4032da:	e7e7      	b.n	4032ac <xEventGroupSetBits.part.0+0x1c>
			pxListItem = pxNext;
		}

		/* Clear any bits that matched when the eventCLEAR_EVENTS_ON_EXIT_BIT
		bit was set in the control word. */
		pxEventBits->uxEventBits &= ~uxBitsToClear;
  4032dc:	ea21 0105 	bic.w	r1, r1, r5
	}
	( void ) xTaskResumeAll();
  4032e0:	4b04      	ldr	r3, [pc, #16]	; (4032f4 <xEventGroupSetBits.part.0+0x64>)
		pxEventBits->uxEventBits &= ~uxBitsToClear;
  4032e2:	6021      	str	r1, [r4, #0]
	( void ) xTaskResumeAll();
  4032e4:	4798      	blx	r3

	return pxEventBits->uxEventBits;
  4032e6:	6820      	ldr	r0, [r4, #0]
}
  4032e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4032ec:	00403d59 	.word	0x00403d59
  4032f0:	00404231 	.word	0x00404231
  4032f4:	00403ef9 	.word	0x00403ef9

004032f8 <vEventGroupClearBitsCallback>:
	configASSERT( xEventGroup );
  4032f8:	b1d0      	cbz	r0, 403330 <vEventGroupClearBitsCallback+0x38>
	configASSERT( ( uxBitsToClear & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
  4032fa:	f011 4f7f 	tst.w	r1, #4278190080	; 0xff000000
  4032fe:	d00a      	beq.n	403316 <vEventGroupClearBitsCallback+0x1e>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
  403300:	f04f 0380 	mov.w	r3, #128	; 0x80
  403304:	b672      	cpsid	i
  403306:	f383 8811 	msr	BASEPRI, r3
  40330a:	f3bf 8f6f 	isb	sy
  40330e:	f3bf 8f4f 	dsb	sy
  403312:	b662      	cpsie	i
  403314:	e7fe      	b.n	403314 <vEventGroupClearBitsCallback+0x1c>
/*-----------------------------------------------------------*/

/* For internal use only - execute a 'clear bits' command that was pended from
an interrupt. */
void vEventGroupClearBitsCallback( void *pvEventGroup, const uint32_t ulBitsToClear )
{
  403316:	b570      	push	{r4, r5, r6, lr}
  403318:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
  40331a:	4b0b      	ldr	r3, [pc, #44]	; (403348 <vEventGroupClearBitsCallback+0x50>)
  40331c:	460d      	mov	r5, r1
  40331e:	4798      	blx	r3
		pxEventBits->uxEventBits &= ~uxBitsToClear;
  403320:	6823      	ldr	r3, [r4, #0]
	taskEXIT_CRITICAL();
  403322:	4a0a      	ldr	r2, [pc, #40]	; (40334c <vEventGroupClearBitsCallback+0x54>)
		pxEventBits->uxEventBits &= ~uxBitsToClear;
  403324:	ea23 0305 	bic.w	r3, r3, r5
  403328:	6023      	str	r3, [r4, #0]
	( void ) xEventGroupClearBits( pvEventGroup, ( EventBits_t ) ulBitsToClear );
}
  40332a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
  40332e:	4710      	bx	r2
  403330:	f04f 0380 	mov.w	r3, #128	; 0x80
  403334:	b672      	cpsid	i
  403336:	f383 8811 	msr	BASEPRI, r3
  40333a:	f3bf 8f6f 	isb	sy
  40333e:	f3bf 8f4f 	dsb	sy
  403342:	b662      	cpsie	i
  403344:	e7fe      	b.n	403344 <vEventGroupClearBitsCallback+0x4c>
  403346:	bf00      	nop
  403348:	00403485 	.word	0x00403485
  40334c:	004034d1 	.word	0x004034d1

00403350 <vEventGroupSetBitsCallback>:
	configASSERT( xEventGroup );
  403350:	b168      	cbz	r0, 40336e <vEventGroupSetBitsCallback+0x1e>
	configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
  403352:	f011 4f7f 	tst.w	r1, #4278190080	; 0xff000000
  403356:	d015      	beq.n	403384 <vEventGroupSetBitsCallback+0x34>
  403358:	f04f 0380 	mov.w	r3, #128	; 0x80
  40335c:	b672      	cpsid	i
  40335e:	f383 8811 	msr	BASEPRI, r3
  403362:	f3bf 8f6f 	isb	sy
  403366:	f3bf 8f4f 	dsb	sy
  40336a:	b662      	cpsie	i
  40336c:	e7fe      	b.n	40336c <vEventGroupSetBitsCallback+0x1c>
  40336e:	f04f 0380 	mov.w	r3, #128	; 0x80
  403372:	b672      	cpsid	i
  403374:	f383 8811 	msr	BASEPRI, r3
  403378:	f3bf 8f6f 	isb	sy
  40337c:	f3bf 8f4f 	dsb	sy
  403380:	b662      	cpsie	i
  403382:	e7fe      	b.n	403382 <vEventGroupSetBitsCallback+0x32>
  403384:	4b00      	ldr	r3, [pc, #0]	; (403388 <vEventGroupSetBitsCallback+0x38>)
  403386:	4718      	bx	r3
  403388:	00403291 	.word	0x00403291

0040338c <xEventGroupClearBitsFromISR>:
	{
  40338c:	b410      	push	{r4}
		xReturn = xTimerPendFunctionCallFromISR( vEventGroupClearBitsCallback, ( void * ) xEventGroup, ( uint32_t ) uxBitsToClear, NULL );
  40338e:	4c04      	ldr	r4, [pc, #16]	; (4033a0 <xEventGroupClearBitsFromISR+0x14>)
  403390:	460a      	mov	r2, r1
  403392:	2300      	movs	r3, #0
  403394:	4601      	mov	r1, r0
  403396:	46a4      	mov	ip, r4
  403398:	4802      	ldr	r0, [pc, #8]	; (4033a4 <xEventGroupClearBitsFromISR+0x18>)
	}
  40339a:	f85d 4b04 	ldr.w	r4, [sp], #4
		xReturn = xTimerPendFunctionCallFromISR( vEventGroupClearBitsCallback, ( void * ) xEventGroup, ( uint32_t ) uxBitsToClear, NULL );
  40339e:	4760      	bx	ip
  4033a0:	0040472d 	.word	0x0040472d
  4033a4:	004032f9 	.word	0x004032f9

004033a8 <xEventGroupGetBitsFromISR>:

portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
{
uint32_t ulOriginalBASEPRI, ulNewBASEPRI;

	__asm volatile
  4033a8:	f3ef 8311 	mrs	r3, BASEPRI
  4033ac:	f04f 0280 	mov.w	r2, #128	; 0x80
  4033b0:	b672      	cpsid	i
  4033b2:	f382 8811 	msr	BASEPRI, r2
  4033b6:	f3bf 8f6f 	isb	sy
  4033ba:	f3bf 8f4f 	dsb	sy
  4033be:	b662      	cpsie	i
		uxReturn = pxEventBits->uxEventBits;
  4033c0:	6800      	ldr	r0, [r0, #0]
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
  4033c2:	f383 8811 	msr	BASEPRI, r3
}
  4033c6:	4770      	bx	lr

004033c8 <xEventGroupSetBitsFromISR>:
/*-----------------------------------------------------------*/

#if ( ( configUSE_TRACE_FACILITY == 1 ) && ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_TIMERS == 1 ) )

	BaseType_t xEventGroupSetBitsFromISR( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet, BaseType_t *pxHigherPriorityTaskWoken )
	{
  4033c8:	b410      	push	{r4}
	BaseType_t xReturn;

		traceEVENT_GROUP_SET_BITS_FROM_ISR( xEventGroup, uxBitsToSet );
		xReturn = xTimerPendFunctionCallFromISR( vEventGroupSetBitsCallback, ( void * ) xEventGroup, ( uint32_t ) uxBitsToSet, pxHigherPriorityTaskWoken );
  4033ca:	4c04      	ldr	r4, [pc, #16]	; (4033dc <xEventGroupSetBitsFromISR+0x14>)
  4033cc:	4613      	mov	r3, r2
  4033ce:	460a      	mov	r2, r1
  4033d0:	4601      	mov	r1, r0
  4033d2:	46a4      	mov	ip, r4
  4033d4:	4802      	ldr	r0, [pc, #8]	; (4033e0 <xEventGroupSetBitsFromISR+0x18>)

		return xReturn;
	}
  4033d6:	f85d 4b04 	ldr.w	r4, [sp], #4
		xReturn = xTimerPendFunctionCallFromISR( vEventGroupSetBitsCallback, ( void * ) xEventGroup, ( uint32_t ) uxBitsToSet, pxHigherPriorityTaskWoken );
  4033da:	4760      	bx	ip
  4033dc:	0040472d 	.word	0x0040472d
  4033e0:	00403351 	.word	0x00403351

004033e4 <vListInsertEnd>:
}
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
  4033e4:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
  4033e6:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
  4033e8:	689a      	ldr	r2, [r3, #8]
  4033ea:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
  4033ec:	689a      	ldr	r2, [r3, #8]
  4033ee:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
  4033f0:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pvContainer = ( void * ) pxList;
  4033f2:	6108      	str	r0, [r1, #16]

	( pxList->uxNumberOfItems )++;
  4033f4:	6803      	ldr	r3, [r0, #0]
  4033f6:	3301      	adds	r3, #1
  4033f8:	6003      	str	r3, [r0, #0]
  4033fa:	4770      	bx	lr

004033fc <vListInsert>:
}
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
  4033fc:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
  4033fe:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCB's which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
  403400:	1c6b      	adds	r3, r5, #1
  403402:	d011      	beq.n	403428 <vListInsert+0x2c>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
  403404:	f100 0208 	add.w	r2, r0, #8
  403408:	e000      	b.n	40340c <vListInsert+0x10>
  40340a:	461a      	mov	r2, r3
  40340c:	6853      	ldr	r3, [r2, #4]
  40340e:	681c      	ldr	r4, [r3, #0]
  403410:	42a5      	cmp	r5, r4
  403412:	d2fa      	bcs.n	40340a <vListInsert+0xe>
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
  403414:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
  403416:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
  403418:	608a      	str	r2, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
  40341a:	6051      	str	r1, [r2, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pvContainer = ( void * ) pxList;
  40341c:	6108      	str	r0, [r1, #16]

	( pxList->uxNumberOfItems )++;
  40341e:	6803      	ldr	r3, [r0, #0]
  403420:	3301      	adds	r3, #1
}
  403422:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
  403424:	6003      	str	r3, [r0, #0]
}
  403426:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
  403428:	6902      	ldr	r2, [r0, #16]
  40342a:	6853      	ldr	r3, [r2, #4]
  40342c:	e7f2      	b.n	403414 <vListInsert+0x18>
  40342e:	bf00      	nop

00403430 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = ( List_t * ) pxItemToRemove->pvContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
  403430:	6842      	ldr	r2, [r0, #4]
  403432:	6881      	ldr	r1, [r0, #8]
List_t * const pxList = ( List_t * ) pxItemToRemove->pvContainer;
  403434:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
  403436:	6091      	str	r1, [r2, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
  403438:	6882      	ldr	r2, [r0, #8]
  40343a:	6841      	ldr	r1, [r0, #4]
  40343c:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
  40343e:	685a      	ldr	r2, [r3, #4]
  403440:	4290      	cmp	r0, r2
  403442:	d006      	beq.n	403452 <uxListRemove+0x22>
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pvContainer = NULL;
  403444:	2200      	movs	r2, #0
  403446:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
  403448:	681a      	ldr	r2, [r3, #0]
  40344a:	3a01      	subs	r2, #1
  40344c:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
  40344e:	6818      	ldr	r0, [r3, #0]
}
  403450:	4770      	bx	lr
		pxList->pxIndex = pxItemToRemove->pxPrevious;
  403452:	6882      	ldr	r2, [r0, #8]
  403454:	605a      	str	r2, [r3, #4]
  403456:	e7f5      	b.n	403444 <uxListRemove+0x14>
	...

00403460 <SVC_Handler>:
}
/*-----------------------------------------------------------*/

void vPortSVCHandler( void )
{
	__asm volatile (
  403460:	4b07      	ldr	r3, [pc, #28]	; (403480 <pxCurrentTCBConst2>)
  403462:	6819      	ldr	r1, [r3, #0]
  403464:	6808      	ldr	r0, [r1, #0]
  403466:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40346a:	f380 8809 	msr	PSP, r0
  40346e:	f3bf 8f6f 	isb	sy
  403472:	f04f 0000 	mov.w	r0, #0
  403476:	f380 8811 	msr	BASEPRI, r0
  40347a:	4770      	bx	lr
  40347c:	f3af 8000 	nop.w

00403480 <pxCurrentTCBConst2>:
  403480:	2040eb08 	.word	0x2040eb08

00403484 <vPortEnterCritical>:
	__asm volatile
  403484:	f04f 0380 	mov.w	r3, #128	; 0x80
  403488:	b672      	cpsid	i
  40348a:	f383 8811 	msr	BASEPRI, r3
  40348e:	f3bf 8f6f 	isb	sy
  403492:	f3bf 8f4f 	dsb	sy
  403496:	b662      	cpsie	i
/*-----------------------------------------------------------*/

void vPortEnterCritical( void )
{
	portDISABLE_INTERRUPTS();
	uxCriticalNesting++;
  403498:	4a0b      	ldr	r2, [pc, #44]	; (4034c8 <vPortEnterCritical+0x44>)
  40349a:	6813      	ldr	r3, [r2, #0]
  40349c:	3301      	adds	r3, #1
	/* This is not the interrupt safe version of the enter critical function so
	assert() if it is being called from an interrupt context.  Only API
	functions that end in "FromISR" can be used in an interrupt.  Only assert if
	the critical nesting count is 1 to protect against recursive calls if the
	assert function also uses a critical section. */
	if( uxCriticalNesting == 1 )
  40349e:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
  4034a0:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
  4034a2:	d000      	beq.n	4034a6 <vPortEnterCritical+0x22>
  4034a4:	4770      	bx	lr
	{
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
  4034a6:	4b09      	ldr	r3, [pc, #36]	; (4034cc <vPortEnterCritical+0x48>)
  4034a8:	681b      	ldr	r3, [r3, #0]
  4034aa:	f013 0fff 	tst.w	r3, #255	; 0xff
  4034ae:	d0f9      	beq.n	4034a4 <vPortEnterCritical+0x20>
  4034b0:	f04f 0380 	mov.w	r3, #128	; 0x80
  4034b4:	b672      	cpsid	i
  4034b6:	f383 8811 	msr	BASEPRI, r3
  4034ba:	f3bf 8f6f 	isb	sy
  4034be:	f3bf 8f4f 	dsb	sy
  4034c2:	b662      	cpsie	i
  4034c4:	e7fe      	b.n	4034c4 <vPortEnterCritical+0x40>
  4034c6:	bf00      	nop
  4034c8:	20400030 	.word	0x20400030
  4034cc:	e000ed04 	.word	0xe000ed04

004034d0 <vPortExitCritical>:
}
/*-----------------------------------------------------------*/

void vPortExitCritical( void )
{
	configASSERT( uxCriticalNesting );
  4034d0:	4a09      	ldr	r2, [pc, #36]	; (4034f8 <vPortExitCritical+0x28>)
  4034d2:	6813      	ldr	r3, [r2, #0]
  4034d4:	b953      	cbnz	r3, 4034ec <vPortExitCritical+0x1c>
  4034d6:	f04f 0380 	mov.w	r3, #128	; 0x80
  4034da:	b672      	cpsid	i
  4034dc:	f383 8811 	msr	BASEPRI, r3
  4034e0:	f3bf 8f6f 	isb	sy
  4034e4:	f3bf 8f4f 	dsb	sy
  4034e8:	b662      	cpsie	i
  4034ea:	e7fe      	b.n	4034ea <vPortExitCritical+0x1a>
	uxCriticalNesting--;
  4034ec:	3b01      	subs	r3, #1
  4034ee:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
  4034f0:	b90b      	cbnz	r3, 4034f6 <vPortExitCritical+0x26>
	__asm volatile
  4034f2:	f383 8811 	msr	BASEPRI, r3
  4034f6:	4770      	bx	lr
  4034f8:	20400030 	.word	0x20400030
  4034fc:	00000000 	.word	0x00000000

00403500 <PendSV_Handler>:

void xPortPendSVHandler( void )
{
	/* This is a naked function. */

	__asm volatile
  403500:	f3ef 8009 	mrs	r0, PSP
  403504:	f3bf 8f6f 	isb	sy
  403508:	4b15      	ldr	r3, [pc, #84]	; (403560 <pxCurrentTCBConst>)
  40350a:	681a      	ldr	r2, [r3, #0]
  40350c:	f01e 0f10 	tst.w	lr, #16
  403510:	bf08      	it	eq
  403512:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
  403516:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40351a:	6010      	str	r0, [r2, #0]
  40351c:	e92d 0009 	stmdb	sp!, {r0, r3}
  403520:	f04f 0080 	mov.w	r0, #128	; 0x80
  403524:	b672      	cpsid	i
  403526:	f380 8811 	msr	BASEPRI, r0
  40352a:	f3bf 8f4f 	dsb	sy
  40352e:	f3bf 8f6f 	isb	sy
  403532:	b662      	cpsie	i
  403534:	f000 fd7e 	bl	404034 <vTaskSwitchContext>
  403538:	f04f 0000 	mov.w	r0, #0
  40353c:	f380 8811 	msr	BASEPRI, r0
  403540:	bc09      	pop	{r0, r3}
  403542:	6819      	ldr	r1, [r3, #0]
  403544:	6808      	ldr	r0, [r1, #0]
  403546:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40354a:	f01e 0f10 	tst.w	lr, #16
  40354e:	bf08      	it	eq
  403550:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
  403554:	f380 8809 	msr	PSP, r0
  403558:	f3bf 8f6f 	isb	sy
  40355c:	4770      	bx	lr
  40355e:	bf00      	nop

00403560 <pxCurrentTCBConst>:
  403560:	2040eb08 	.word	0x2040eb08

00403564 <SysTick_Handler>:
	);
}
/*-----------------------------------------------------------*/

void xPortSysTickHandler( void )
{
  403564:	b508      	push	{r3, lr}
	__asm volatile
  403566:	f04f 0380 	mov.w	r3, #128	; 0x80
  40356a:	b672      	cpsid	i
  40356c:	f383 8811 	msr	BASEPRI, r3
  403570:	f3bf 8f6f 	isb	sy
  403574:	f3bf 8f4f 	dsb	sy
  403578:	b662      	cpsie	i
	save and then restore the interrupt mask value as its value is already
	known. */
	portDISABLE_INTERRUPTS();
	{
		/* Increment the RTOS tick. */
		if( xTaskIncrementTick() != pdFALSE )
  40357a:	4b05      	ldr	r3, [pc, #20]	; (403590 <SysTick_Handler+0x2c>)
  40357c:	4798      	blx	r3
  40357e:	b118      	cbz	r0, 403588 <SysTick_Handler+0x24>
		{
			/* A context switch is required.  Context switching is performed in
			the PendSV interrupt.  Pend the PendSV interrupt. */
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
  403580:	4b04      	ldr	r3, [pc, #16]	; (403594 <SysTick_Handler+0x30>)
  403582:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  403586:	601a      	str	r2, [r3, #0]
	__asm volatile
  403588:	2300      	movs	r3, #0
  40358a:	f383 8811 	msr	BASEPRI, r3
  40358e:	bd08      	pop	{r3, pc}
  403590:	00403d7d 	.word	0x00403d7d
  403594:	e000ed04 	.word	0xe000ed04

00403598 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
  403598:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
  40359c:	2b0f      	cmp	r3, #15
  40359e:	d910      	bls.n	4035c2 <vPortValidateInterruptPriority+0x2a>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
  4035a0:	4912      	ldr	r1, [pc, #72]	; (4035ec <vPortValidateInterruptPriority+0x54>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
  4035a2:	4a13      	ldr	r2, [pc, #76]	; (4035f0 <vPortValidateInterruptPriority+0x58>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
  4035a4:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
  4035a6:	7812      	ldrb	r2, [r2, #0]
  4035a8:	429a      	cmp	r2, r3
  4035aa:	d90a      	bls.n	4035c2 <vPortValidateInterruptPriority+0x2a>
	__asm volatile
  4035ac:	f04f 0380 	mov.w	r3, #128	; 0x80
  4035b0:	b672      	cpsid	i
  4035b2:	f383 8811 	msr	BASEPRI, r3
  4035b6:	f3bf 8f6f 	isb	sy
  4035ba:	f3bf 8f4f 	dsb	sy
  4035be:	b662      	cpsie	i
  4035c0:	e7fe      	b.n	4035c0 <vPortValidateInterruptPriority+0x28>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
  4035c2:	4b0c      	ldr	r3, [pc, #48]	; (4035f4 <vPortValidateInterruptPriority+0x5c>)
  4035c4:	4a0c      	ldr	r2, [pc, #48]	; (4035f8 <vPortValidateInterruptPriority+0x60>)
  4035c6:	681b      	ldr	r3, [r3, #0]
  4035c8:	6812      	ldr	r2, [r2, #0]
  4035ca:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  4035ce:	4293      	cmp	r3, r2
  4035d0:	d90a      	bls.n	4035e8 <vPortValidateInterruptPriority+0x50>
  4035d2:	f04f 0380 	mov.w	r3, #128	; 0x80
  4035d6:	b672      	cpsid	i
  4035d8:	f383 8811 	msr	BASEPRI, r3
  4035dc:	f3bf 8f6f 	isb	sy
  4035e0:	f3bf 8f4f 	dsb	sy
  4035e4:	b662      	cpsie	i
  4035e6:	e7fe      	b.n	4035e6 <vPortValidateInterruptPriority+0x4e>
  4035e8:	4770      	bx	lr
  4035ea:	bf00      	nop
  4035ec:	e000e3f0 	.word	0xe000e3f0
  4035f0:	2040eb00 	.word	0x2040eb00
  4035f4:	e000ed0c 	.word	0xe000ed0c
  4035f8:	2040eb04 	.word	0x2040eb04

004035fc <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
  4035fc:	b570      	push	{r4, r5, r6, lr}
  4035fe:	4615      	mov	r5, r2

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
  403600:	6c02      	ldr	r2, [r0, #64]	; 0x40
{
  403602:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
  403604:	6b86      	ldr	r6, [r0, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
  403606:	b932      	cbnz	r2, 403616 <prvCopyDataToQueue+0x1a>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
  403608:	6805      	ldr	r5, [r0, #0]
  40360a:	bb35      	cbnz	r5, 40365a <prvCopyDataToQueue+0x5e>
			{
				/* The mutex is no longer being held. */
				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
  40360c:	6840      	ldr	r0, [r0, #4]
  40360e:	4b16      	ldr	r3, [pc, #88]	; (403668 <prvCopyDataToQueue+0x6c>)
  403610:	4798      	blx	r3
				pxQueue->pxMutexHolder = NULL;
  403612:	6065      	str	r5, [r4, #4]
  403614:	e024      	b.n	403660 <prvCopyDataToQueue+0x64>
  403616:	4b15      	ldr	r3, [pc, #84]	; (40366c <prvCopyDataToQueue+0x70>)
				mtCOVERAGE_TEST_MARKER();
			}
		}
		#endif /* configUSE_MUTEXES */
	}
	else if( xPosition == queueSEND_TO_BACK )
  403618:	b965      	cbnz	r5, 403634 <prvCopyDataToQueue+0x38>
	{
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0. */
  40361a:	6880      	ldr	r0, [r0, #8]
  40361c:	4798      	blx	r3
		pxQueue->pcWriteTo += pxQueue->uxItemSize;
  40361e:	68a3      	ldr	r3, [r4, #8]
  403620:	6c21      	ldr	r1, [r4, #64]	; 0x40
		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
  403622:	6862      	ldr	r2, [r4, #4]
		pxQueue->pcWriteTo += pxQueue->uxItemSize;
  403624:	440b      	add	r3, r1
		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
  403626:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize;
  403628:	60a3      	str	r3, [r4, #8]
		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
  40362a:	d316      	bcc.n	40365a <prvCopyDataToQueue+0x5e>
		{
			pxQueue->pcWriteTo = pxQueue->pcHead;
  40362c:	6823      	ldr	r3, [r4, #0]
BaseType_t xReturn = pdFALSE;
  40362e:	4628      	mov	r0, r5
			pxQueue->pcWriteTo = pxQueue->pcHead;
  403630:	60a3      	str	r3, [r4, #8]
  403632:	e015      	b.n	403660 <prvCopyDataToQueue+0x64>
			mtCOVERAGE_TEST_MARKER();
		}
	}
	else
	{
		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
  403634:	68c0      	ldr	r0, [r0, #12]
  403636:	4798      	blx	r3
		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
  403638:	6c23      	ldr	r3, [r4, #64]	; 0x40
  40363a:	68e2      	ldr	r2, [r4, #12]
  40363c:	425b      	negs	r3, r3
		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
  40363e:	6821      	ldr	r1, [r4, #0]
		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
  403640:	441a      	add	r2, r3
		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
  403642:	428a      	cmp	r2, r1
		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
  403644:	60e2      	str	r2, [r4, #12]
		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
  403646:	d202      	bcs.n	40364e <prvCopyDataToQueue+0x52>
		{
			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
  403648:	6862      	ldr	r2, [r4, #4]
  40364a:	4413      	add	r3, r2
  40364c:	60e3      	str	r3, [r4, #12]
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}

		if( xPosition == queueOVERWRITE )
  40364e:	2d02      	cmp	r5, #2
  403650:	d103      	bne.n	40365a <prvCopyDataToQueue+0x5e>
		{
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
  403652:	b126      	cbz	r6, 40365e <prvCopyDataToQueue+0x62>
			{
				/* An item is not being added but overwritten, so subtract
				one from the recorded number of items in the queue so when
				one is added again below the number of recorded items remains
				correct. */
				--uxMessagesWaiting;
  403654:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
  403656:	2000      	movs	r0, #0
  403658:	e002      	b.n	403660 <prvCopyDataToQueue+0x64>
  40365a:	2000      	movs	r0, #0
  40365c:	e000      	b.n	403660 <prvCopyDataToQueue+0x64>
  40365e:	4630      	mov	r0, r6
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
  403660:	3601      	adds	r6, #1
  403662:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
  403664:	bd70      	pop	{r4, r5, r6, pc}
  403666:	bf00      	nop
  403668:	004043b1 	.word	0x004043b1
  40366c:	00408421 	.word	0x00408421

00403670 <prvCopyDataFromQueue>:
/*-----------------------------------------------------------*/

static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
{
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
  403670:	6c02      	ldr	r2, [r0, #64]	; 0x40
{
  403672:	4603      	mov	r3, r0
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
  403674:	b172      	cbz	r2, 403694 <prvCopyDataFromQueue+0x24>
  403676:	4608      	mov	r0, r1
{
  403678:	b410      	push	{r4}
	{
		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
  40367a:	68d9      	ldr	r1, [r3, #12]
		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
  40367c:	685c      	ldr	r4, [r3, #4]
		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
  40367e:	4411      	add	r1, r2
		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
  403680:	42a1      	cmp	r1, r4
		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
  403682:	60d9      	str	r1, [r3, #12]
		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
  403684:	d301      	bcc.n	40368a <prvCopyDataFromQueue+0x1a>
		{
			pxQueue->u.pcReadFrom = pxQueue->pcHead;
  403686:	6819      	ldr	r1, [r3, #0]
  403688:	60d9      	str	r1, [r3, #12]
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0. */
  40368a:	68d9      	ldr	r1, [r3, #12]
	}
}
  40368c:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0. */
  403690:	4b01      	ldr	r3, [pc, #4]	; (403698 <prvCopyDataFromQueue+0x28>)
  403692:	4718      	bx	r3
  403694:	4770      	bx	lr
  403696:	bf00      	nop
  403698:	00408421 	.word	0x00408421

0040369c <prvNotifyQueueSetContainer.part.0>:
  40369c:	f04f 0380 	mov.w	r3, #128	; 0x80
  4036a0:	b672      	cpsid	i
  4036a2:	f383 8811 	msr	BASEPRI, r3
  4036a6:	f3bf 8f6f 	isb	sy
  4036aa:	f3bf 8f4f 	dsb	sy
  4036ae:	b662      	cpsie	i
  4036b0:	e7fe      	b.n	4036b0 <prvNotifyQueueSetContainer.part.0+0x14>
  4036b2:	bf00      	nop

004036b4 <prvNotifyQueueSetContainer>:
/*-----------------------------------------------------------*/

#if ( configUSE_QUEUE_SETS == 1 )

	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCopyPosition )
	{
  4036b4:	b570      	push	{r4, r5, r6, lr}
  4036b6:	b082      	sub	sp, #8
	Queue_t *pxQueueSetContainer = pxQueue->pxQueueSetContainer;
  4036b8:	6c84      	ldr	r4, [r0, #72]	; 0x48
	{
  4036ba:	9001      	str	r0, [sp, #4]
	BaseType_t xReturn = pdFALSE;

		/* This function must be called form a critical section. */

		configASSERT( pxQueueSetContainer );
  4036bc:	b1b4      	cbz	r4, 4036ec <prvNotifyQueueSetContainer+0x38>
  4036be:	460a      	mov	r2, r1
		configASSERT( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength );
  4036c0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  4036c2:	6ba1      	ldr	r1, [r4, #56]	; 0x38
  4036c4:	4299      	cmp	r1, r3
  4036c6:	d30a      	bcc.n	4036de <prvNotifyQueueSetContainer+0x2a>
  4036c8:	f04f 0380 	mov.w	r3, #128	; 0x80
  4036cc:	b672      	cpsid	i
  4036ce:	f383 8811 	msr	BASEPRI, r3
  4036d2:	f3bf 8f6f 	isb	sy
  4036d6:	f3bf 8f4f 	dsb	sy
  4036da:	b662      	cpsie	i
  4036dc:	e7fe      	b.n	4036dc <prvNotifyQueueSetContainer+0x28>

		if( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength )
  4036de:	6ba1      	ldr	r1, [r4, #56]	; 0x38
  4036e0:	428b      	cmp	r3, r1
  4036e2:	d805      	bhi.n	4036f0 <prvNotifyQueueSetContainer+0x3c>
	BaseType_t xReturn = pdFALSE;
  4036e4:	2600      	movs	r6, #0
		{
			mtCOVERAGE_TEST_MARKER();
		}

		return xReturn;
	}
  4036e6:	4630      	mov	r0, r6
  4036e8:	b002      	add	sp, #8
  4036ea:	bd70      	pop	{r4, r5, r6, pc}
  4036ec:	4b0f      	ldr	r3, [pc, #60]	; (40372c <prvNotifyQueueSetContainer+0x78>)
  4036ee:	4798      	blx	r3
			const int8_t cTxLock = pxQueueSetContainer->cTxLock;
  4036f0:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, xCopyPosition );
  4036f4:	a901      	add	r1, sp, #4
  4036f6:	4b0e      	ldr	r3, [pc, #56]	; (403730 <prvNotifyQueueSetContainer+0x7c>)
  4036f8:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueueSetContainer->cTxLock;
  4036fa:	b26d      	sxtb	r5, r5
			xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, xCopyPosition );
  4036fc:	4798      	blx	r3
  4036fe:	4606      	mov	r6, r0
			if( cTxLock == queueUNLOCKED )
  403700:	1c6b      	adds	r3, r5, #1
  403702:	d006      	beq.n	403712 <prvNotifyQueueSetContainer+0x5e>
				pxQueueSetContainer->cTxLock = ( int8_t ) ( cTxLock + 1 );
  403704:	1c6b      	adds	r3, r5, #1
	}
  403706:	4630      	mov	r0, r6
				pxQueueSetContainer->cTxLock = ( int8_t ) ( cTxLock + 1 );
  403708:	b25b      	sxtb	r3, r3
  40370a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	}
  40370e:	b002      	add	sp, #8
  403710:	bd70      	pop	{r4, r5, r6, pc}
				if( listLIST_IS_EMPTY( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) == pdFALSE )
  403712:	6a63      	ldr	r3, [r4, #36]	; 0x24
  403714:	2b00      	cmp	r3, #0
  403716:	d0e6      	beq.n	4036e6 <prvNotifyQueueSetContainer+0x32>
					if( xTaskRemoveFromEventList( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) != pdFALSE )
  403718:	f104 0024 	add.w	r0, r4, #36	; 0x24
  40371c:	4b05      	ldr	r3, [pc, #20]	; (403734 <prvNotifyQueueSetContainer+0x80>)
  40371e:	4798      	blx	r3
						xReturn = pdTRUE;
  403720:	2800      	cmp	r0, #0
  403722:	bf18      	it	ne
  403724:	2601      	movne	r6, #1
	}
  403726:	4630      	mov	r0, r6
  403728:	b002      	add	sp, #8
  40372a:	bd70      	pop	{r4, r5, r6, pc}
  40372c:	0040369d 	.word	0x0040369d
  403730:	004035fd 	.word	0x004035fd
  403734:	0040419d 	.word	0x0040419d

00403738 <xQueueReceiveFromISR.part.2>:
BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const pxHigherPriorityTaskWoken )
  403738:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
  40373c:	4b1c      	ldr	r3, [pc, #112]	; (4037b0 <xQueueReceiveFromISR.part.2+0x78>)
BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const pxHigherPriorityTaskWoken )
  40373e:	4607      	mov	r7, r0
  403740:	4689      	mov	r9, r1
  403742:	4690      	mov	r8, r2
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
  403744:	4798      	blx	r3
	__asm volatile
  403746:	f3ef 8611 	mrs	r6, BASEPRI
  40374a:	f04f 0380 	mov.w	r3, #128	; 0x80
  40374e:	b672      	cpsid	i
  403750:	f383 8811 	msr	BASEPRI, r3
  403754:	f3bf 8f6f 	isb	sy
  403758:	f3bf 8f4f 	dsb	sy
  40375c:	b662      	cpsie	i
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
  40375e:	6bbc      	ldr	r4, [r7, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
  403760:	b30c      	cbz	r4, 4037a6 <xQueueReceiveFromISR.part.2+0x6e>
			const int8_t cRxLock = pxQueue->cRxLock;
  403762:	f897 5044 	ldrb.w	r5, [r7, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
  403766:	4649      	mov	r1, r9
  403768:	4b12      	ldr	r3, [pc, #72]	; (4037b4 <xQueueReceiveFromISR.part.2+0x7c>)
  40376a:	4638      	mov	r0, r7
			const int8_t cRxLock = pxQueue->cRxLock;
  40376c:	b26d      	sxtb	r5, r5
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
  40376e:	3c01      	subs	r4, #1
			prvCopyDataFromQueue( pxQueue, pvBuffer );
  403770:	4798      	blx	r3
			if( cRxLock == queueUNLOCKED )
  403772:	1c6b      	adds	r3, r5, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
  403774:	63bc      	str	r4, [r7, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
  403776:	d110      	bne.n	40379a <xQueueReceiveFromISR.part.2+0x62>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
  403778:	693b      	ldr	r3, [r7, #16]
  40377a:	b90b      	cbnz	r3, 403780 <xQueueReceiveFromISR.part.2+0x48>
			xReturn = pdPASS;
  40377c:	2001      	movs	r0, #1
  40377e:	e013      	b.n	4037a8 <xQueueReceiveFromISR.part.2+0x70>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
  403780:	f107 0010 	add.w	r0, r7, #16
  403784:	4b0c      	ldr	r3, [pc, #48]	; (4037b8 <xQueueReceiveFromISR.part.2+0x80>)
  403786:	4798      	blx	r3
						if( pxHigherPriorityTaskWoken != NULL )
  403788:	f1b8 0f00 	cmp.w	r8, #0
  40378c:	d0f6      	beq.n	40377c <xQueueReceiveFromISR.part.2+0x44>
  40378e:	2800      	cmp	r0, #0
  403790:	d0f4      	beq.n	40377c <xQueueReceiveFromISR.part.2+0x44>
							*pxHigherPriorityTaskWoken = pdTRUE;
  403792:	2001      	movs	r0, #1
  403794:	f8c8 0000 	str.w	r0, [r8]
  403798:	e006      	b.n	4037a8 <xQueueReceiveFromISR.part.2+0x70>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
  40379a:	3501      	adds	r5, #1
			xReturn = pdPASS;
  40379c:	2001      	movs	r0, #1
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
  40379e:	b26d      	sxtb	r5, r5
  4037a0:	f887 5044 	strb.w	r5, [r7, #68]	; 0x44
  4037a4:	e000      	b.n	4037a8 <xQueueReceiveFromISR.part.2+0x70>
			xReturn = pdFAIL;
  4037a6:	4620      	mov	r0, r4
	__asm volatile
  4037a8:	f386 8811 	msr	BASEPRI, r6
}
  4037ac:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4037b0:	00403599 	.word	0x00403599
  4037b4:	00403671 	.word	0x00403671
  4037b8:	0040419d 	.word	0x0040419d

004037bc <prvUnlockQueue>:
{
  4037bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4037c0:	4604      	mov	r4, r0
  4037c2:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
  4037c4:	f8df 80ec 	ldr.w	r8, [pc, #236]	; 4038b4 <prvUnlockQueue+0xf8>
  4037c8:	47c0      	blx	r8
		int8_t cTxLock = pxQueue->cTxLock;
  4037ca:	f894 7045 	ldrb.w	r7, [r4, #69]	; 0x45
  4037ce:	b27f      	sxtb	r7, r7
		while( cTxLock > queueLOCKED_UNMODIFIED )
  4037d0:	2f00      	cmp	r7, #0
  4037d2:	dd1e      	ble.n	403812 <prvUnlockQueue+0x56>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
  4037d4:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 4038b8 <prvUnlockQueue+0xfc>
						vTaskMissedYield();
  4037d8:	f8df b0d0 	ldr.w	fp, [pc, #208]	; 4038ac <prvUnlockQueue+0xf0>
				if( pxQueue->pxQueueSetContainer != NULL )
  4037dc:	6ca5      	ldr	r5, [r4, #72]	; 0x48
  4037de:	2d00      	cmp	r5, #0
  4037e0:	d03c      	beq.n	40385c <prvUnlockQueue+0xa0>
		configASSERT( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength );
  4037e2:	6baa      	ldr	r2, [r5, #56]	; 0x38
  4037e4:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  4037e6:	9401      	str	r4, [sp, #4]
  4037e8:	429a      	cmp	r2, r3
  4037ea:	d30a      	bcc.n	403802 <prvUnlockQueue+0x46>
	__asm volatile
  4037ec:	f04f 0380 	mov.w	r3, #128	; 0x80
  4037f0:	b672      	cpsid	i
  4037f2:	f383 8811 	msr	BASEPRI, r3
  4037f6:	f3bf 8f6f 	isb	sy
  4037fa:	f3bf 8f4f 	dsb	sy
  4037fe:	b662      	cpsie	i
  403800:	e7fe      	b.n	403800 <prvUnlockQueue+0x44>
		if( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength )
  403802:	6baa      	ldr	r2, [r5, #56]	; 0x38
  403804:	4293      	cmp	r3, r2
  403806:	d833      	bhi.n	403870 <prvUnlockQueue+0xb4>
  403808:	1e7b      	subs	r3, r7, #1
  40380a:	b2db      	uxtb	r3, r3
  40380c:	b25f      	sxtb	r7, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
  40380e:	2b00      	cmp	r3, #0
  403810:	d1e4      	bne.n	4037dc <prvUnlockQueue+0x20>
		pxQueue->cTxLock = queueUNLOCKED;
  403812:	23ff      	movs	r3, #255	; 0xff
	taskEXIT_CRITICAL();
  403814:	4e24      	ldr	r6, [pc, #144]	; (4038a8 <prvUnlockQueue+0xec>)
		pxQueue->cTxLock = queueUNLOCKED;
  403816:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
  40381a:	47b0      	blx	r6
	taskENTER_CRITICAL();
  40381c:	47c0      	blx	r8
		int8_t cRxLock = pxQueue->cRxLock;
  40381e:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
  403822:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
  403824:	2d00      	cmp	r5, #0
  403826:	dd12      	ble.n	40384e <prvUnlockQueue+0x92>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
  403828:	6923      	ldr	r3, [r4, #16]
  40382a:	b183      	cbz	r3, 40384e <prvUnlockQueue+0x92>
  40382c:	f104 0910 	add.w	r9, r4, #16
  403830:	f8df 8084 	ldr.w	r8, [pc, #132]	; 4038b8 <prvUnlockQueue+0xfc>
					vTaskMissedYield();
  403834:	4f1d      	ldr	r7, [pc, #116]	; (4038ac <prvUnlockQueue+0xf0>)
  403836:	e001      	b.n	40383c <prvUnlockQueue+0x80>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
  403838:	6923      	ldr	r3, [r4, #16]
  40383a:	b143      	cbz	r3, 40384e <prvUnlockQueue+0x92>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
  40383c:	4648      	mov	r0, r9
  40383e:	47c0      	blx	r8
  403840:	b100      	cbz	r0, 403844 <prvUnlockQueue+0x88>
					vTaskMissedYield();
  403842:	47b8      	blx	r7
  403844:	3d01      	subs	r5, #1
  403846:	b2eb      	uxtb	r3, r5
  403848:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
  40384a:	2b00      	cmp	r3, #0
  40384c:	d1f4      	bne.n	403838 <prvUnlockQueue+0x7c>
		pxQueue->cRxLock = queueUNLOCKED;
  40384e:	23ff      	movs	r3, #255	; 0xff
  403850:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
  403854:	47b0      	blx	r6
}
  403856:	b003      	add	sp, #12
  403858:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
  40385c:	6a63      	ldr	r3, [r4, #36]	; 0x24
  40385e:	2b00      	cmp	r3, #0
  403860:	d0d7      	beq.n	403812 <prvUnlockQueue+0x56>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
  403862:	f104 0024 	add.w	r0, r4, #36	; 0x24
  403866:	47c8      	blx	r9
  403868:	2800      	cmp	r0, #0
  40386a:	d0cd      	beq.n	403808 <prvUnlockQueue+0x4c>
						vTaskMissedYield();
  40386c:	47d8      	blx	fp
  40386e:	e7cb      	b.n	403808 <prvUnlockQueue+0x4c>
			const int8_t cTxLock = pxQueueSetContainer->cTxLock;
  403870:	f895 6045 	ldrb.w	r6, [r5, #69]	; 0x45
			xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, xCopyPosition );
  403874:	2200      	movs	r2, #0
  403876:	4b0e      	ldr	r3, [pc, #56]	; (4038b0 <prvUnlockQueue+0xf4>)
  403878:	a901      	add	r1, sp, #4
			const int8_t cTxLock = pxQueueSetContainer->cTxLock;
  40387a:	b276      	sxtb	r6, r6
			xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, xCopyPosition );
  40387c:	4628      	mov	r0, r5
  40387e:	4798      	blx	r3
  403880:	4682      	mov	sl, r0
			if( cTxLock == queueUNLOCKED )
  403882:	1c73      	adds	r3, r6, #1
  403884:	d007      	beq.n	403896 <prvUnlockQueue+0xda>
				pxQueueSetContainer->cTxLock = ( int8_t ) ( cTxLock + 1 );
  403886:	1c73      	adds	r3, r6, #1
  403888:	b25b      	sxtb	r3, r3
  40388a:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
  40388e:	f1ba 0f00 	cmp.w	sl, #0
  403892:	d0b9      	beq.n	403808 <prvUnlockQueue+0x4c>
  403894:	e7ea      	b.n	40386c <prvUnlockQueue+0xb0>
				if( listLIST_IS_EMPTY( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) == pdFALSE )
  403896:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  403898:	2b00      	cmp	r3, #0
  40389a:	d0f8      	beq.n	40388e <prvUnlockQueue+0xd2>
					if( xTaskRemoveFromEventList( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) != pdFALSE )
  40389c:	f105 0024 	add.w	r0, r5, #36	; 0x24
  4038a0:	47c8      	blx	r9
  4038a2:	2800      	cmp	r0, #0
  4038a4:	d0f3      	beq.n	40388e <prvUnlockQueue+0xd2>
  4038a6:	e7e1      	b.n	40386c <prvUnlockQueue+0xb0>
  4038a8:	004034d1 	.word	0x004034d1
  4038ac:	00404385 	.word	0x00404385
  4038b0:	004035fd 	.word	0x004035fd
  4038b4:	00403485 	.word	0x00403485
  4038b8:	0040419d 	.word	0x0040419d

004038bc <xQueueGenericSend>:
{
  4038bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4038c0:	b085      	sub	sp, #20
  4038c2:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
  4038c4:	2800      	cmp	r0, #0
  4038c6:	f000 80b8 	beq.w	403a3a <xQueueGenericSend+0x17e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
  4038ca:	2900      	cmp	r1, #0
  4038cc:	f000 80a6 	beq.w	403a1c <xQueueGenericSend+0x160>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
  4038d0:	2b02      	cmp	r3, #2
  4038d2:	f000 8094 	beq.w	4039fe <xQueueGenericSend+0x142>
  4038d6:	461e      	mov	r6, r3
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
  4038d8:	4b65      	ldr	r3, [pc, #404]	; (403a70 <xQueueGenericSend+0x1b4>)
  4038da:	4604      	mov	r4, r0
  4038dc:	4688      	mov	r8, r1
  4038de:	4798      	blx	r3
  4038e0:	b910      	cbnz	r0, 4038e8 <xQueueGenericSend+0x2c>
  4038e2:	9b01      	ldr	r3, [sp, #4]
  4038e4:	2b00      	cmp	r3, #0
  4038e6:	d178      	bne.n	4039da <xQueueGenericSend+0x11e>
  4038e8:	f1a6 0502 	sub.w	r5, r6, #2
{
  4038ec:	f04f 0a00 	mov.w	sl, #0
  4038f0:	f8df 91a8 	ldr.w	r9, [pc, #424]	; 403a9c <xQueueGenericSend+0x1e0>
  4038f4:	fab5 f585 	clz	r5, r5
  4038f8:	4f5e      	ldr	r7, [pc, #376]	; (403a74 <xQueueGenericSend+0x1b8>)
					vTaskInternalSetTimeOutState( &xTimeOut );
  4038fa:	f8df b1a4 	ldr.w	fp, [pc, #420]	; 403aa0 <xQueueGenericSend+0x1e4>
  4038fe:	096d      	lsrs	r5, r5, #5
  403900:	e024      	b.n	40394c <xQueueGenericSend+0x90>
  403902:	f10d 0a08 	add.w	sl, sp, #8
		taskEXIT_CRITICAL();
  403906:	47b8      	blx	r7
		vTaskSuspendAll();
  403908:	4b5b      	ldr	r3, [pc, #364]	; (403a78 <xQueueGenericSend+0x1bc>)
  40390a:	4798      	blx	r3
		prvLockQueue( pxQueue );
  40390c:	47c8      	blx	r9
  40390e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
  403912:	2bff      	cmp	r3, #255	; 0xff
  403914:	f000 80a7 	beq.w	403a66 <xQueueGenericSend+0x1aa>
  403918:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
  40391c:	2bff      	cmp	r3, #255	; 0xff
  40391e:	f000 809e 	beq.w	403a5e <xQueueGenericSend+0x1a2>
  403922:	47b8      	blx	r7
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
  403924:	4650      	mov	r0, sl
  403926:	a901      	add	r1, sp, #4
  403928:	4b54      	ldr	r3, [pc, #336]	; (403a7c <xQueueGenericSend+0x1c0>)
  40392a:	4798      	blx	r3
  40392c:	2800      	cmp	r0, #0
  40392e:	f040 808f 	bne.w	403a50 <xQueueGenericSend+0x194>
	taskENTER_CRITICAL();
  403932:	47c8      	blx	r9
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
  403934:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  403936:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  403938:	429a      	cmp	r2, r3
  40393a:	d017      	beq.n	40396c <xQueueGenericSend+0xb0>
	taskEXIT_CRITICAL();
  40393c:	47b8      	blx	r7
				prvUnlockQueue( pxQueue );
  40393e:	4b50      	ldr	r3, [pc, #320]	; (403a80 <xQueueGenericSend+0x1c4>)
  403940:	4620      	mov	r0, r4
  403942:	4798      	blx	r3
				( void ) xTaskResumeAll();
  403944:	4b4f      	ldr	r3, [pc, #316]	; (403a84 <xQueueGenericSend+0x1c8>)
  403946:	4798      	blx	r3
  403948:	f04f 0a01 	mov.w	sl, #1
		taskENTER_CRITICAL();
  40394c:	47c8      	blx	r9
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
  40394e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  403950:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  403952:	429a      	cmp	r2, r3
  403954:	d325      	bcc.n	4039a2 <xQueueGenericSend+0xe6>
  403956:	bb25      	cbnz	r5, 4039a2 <xQueueGenericSend+0xe6>
				if( xTicksToWait == ( TickType_t ) 0 )
  403958:	9b01      	ldr	r3, [sp, #4]
  40395a:	b1eb      	cbz	r3, 403998 <xQueueGenericSend+0xdc>
				else if( xEntryTimeSet == pdFALSE )
  40395c:	f1ba 0f00 	cmp.w	sl, #0
  403960:	d1cf      	bne.n	403902 <xQueueGenericSend+0x46>
					vTaskInternalSetTimeOutState( &xTimeOut );
  403962:	f10d 0a08 	add.w	sl, sp, #8
  403966:	4650      	mov	r0, sl
  403968:	47d8      	blx	fp
  40396a:	e7cc      	b.n	403906 <xQueueGenericSend+0x4a>
	taskEXIT_CRITICAL();
  40396c:	47b8      	blx	r7
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
  40396e:	9901      	ldr	r1, [sp, #4]
  403970:	f104 0010 	add.w	r0, r4, #16
  403974:	4b44      	ldr	r3, [pc, #272]	; (403a88 <xQueueGenericSend+0x1cc>)
  403976:	4798      	blx	r3
				prvUnlockQueue( pxQueue );
  403978:	4b41      	ldr	r3, [pc, #260]	; (403a80 <xQueueGenericSend+0x1c4>)
  40397a:	4620      	mov	r0, r4
  40397c:	4798      	blx	r3
				if( xTaskResumeAll() == pdFALSE )
  40397e:	4b41      	ldr	r3, [pc, #260]	; (403a84 <xQueueGenericSend+0x1c8>)
  403980:	4798      	blx	r3
  403982:	2800      	cmp	r0, #0
  403984:	d1e0      	bne.n	403948 <xQueueGenericSend+0x8c>
					portYIELD_WITHIN_API();
  403986:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
  40398a:	4a40      	ldr	r2, [pc, #256]	; (403a8c <xQueueGenericSend+0x1d0>)
  40398c:	6013      	str	r3, [r2, #0]
  40398e:	f3bf 8f4f 	dsb	sy
  403992:	f3bf 8f6f 	isb	sy
  403996:	e7d7      	b.n	403948 <xQueueGenericSend+0x8c>
					taskEXIT_CRITICAL();
  403998:	47b8      	blx	r7
					return errQUEUE_FULL;
  40399a:	4628      	mov	r0, r5
}
  40399c:	b005      	add	sp, #20
  40399e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
  4039a2:	4b3b      	ldr	r3, [pc, #236]	; (403a90 <xQueueGenericSend+0x1d4>)
  4039a4:	4641      	mov	r1, r8
  4039a6:	4632      	mov	r2, r6
  4039a8:	4620      	mov	r0, r4
  4039aa:	4798      	blx	r3
					if( pxQueue->pxQueueSetContainer != NULL )
  4039ac:	6ca3      	ldr	r3, [r4, #72]	; 0x48
  4039ae:	b17b      	cbz	r3, 4039d0 <xQueueGenericSend+0x114>
						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
  4039b0:	4631      	mov	r1, r6
  4039b2:	4620      	mov	r0, r4
  4039b4:	4b37      	ldr	r3, [pc, #220]	; (403a94 <xQueueGenericSend+0x1d8>)
  4039b6:	4798      	blx	r3
  4039b8:	b138      	cbz	r0, 4039ca <xQueueGenericSend+0x10e>
							queueYIELD_IF_USING_PREEMPTION();
  4039ba:	4b34      	ldr	r3, [pc, #208]	; (403a8c <xQueueGenericSend+0x1d0>)
  4039bc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  4039c0:	601a      	str	r2, [r3, #0]
  4039c2:	f3bf 8f4f 	dsb	sy
  4039c6:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
  4039ca:	47b8      	blx	r7
				return pdPASS;
  4039cc:	2001      	movs	r0, #1
  4039ce:	e7e5      	b.n	40399c <xQueueGenericSend+0xe0>
						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
  4039d0:	6a63      	ldr	r3, [r4, #36]	; 0x24
  4039d2:	b96b      	cbnz	r3, 4039f0 <xQueueGenericSend+0x134>
						else if( xYieldRequired != pdFALSE )
  4039d4:	2800      	cmp	r0, #0
  4039d6:	d1f0      	bne.n	4039ba <xQueueGenericSend+0xfe>
  4039d8:	e7f7      	b.n	4039ca <xQueueGenericSend+0x10e>
  4039da:	f04f 0380 	mov.w	r3, #128	; 0x80
  4039de:	b672      	cpsid	i
  4039e0:	f383 8811 	msr	BASEPRI, r3
  4039e4:	f3bf 8f6f 	isb	sy
  4039e8:	f3bf 8f4f 	dsb	sy
  4039ec:	b662      	cpsie	i
  4039ee:	e7fe      	b.n	4039ee <xQueueGenericSend+0x132>
							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
  4039f0:	f104 0024 	add.w	r0, r4, #36	; 0x24
  4039f4:	4b28      	ldr	r3, [pc, #160]	; (403a98 <xQueueGenericSend+0x1dc>)
  4039f6:	4798      	blx	r3
  4039f8:	2800      	cmp	r0, #0
  4039fa:	d1de      	bne.n	4039ba <xQueueGenericSend+0xfe>
  4039fc:	e7e5      	b.n	4039ca <xQueueGenericSend+0x10e>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
  4039fe:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
  403a00:	2a01      	cmp	r2, #1
  403a02:	f43f af68 	beq.w	4038d6 <xQueueGenericSend+0x1a>
  403a06:	f04f 0380 	mov.w	r3, #128	; 0x80
  403a0a:	b672      	cpsid	i
  403a0c:	f383 8811 	msr	BASEPRI, r3
  403a10:	f3bf 8f6f 	isb	sy
  403a14:	f3bf 8f4f 	dsb	sy
  403a18:	b662      	cpsie	i
  403a1a:	e7fe      	b.n	403a1a <xQueueGenericSend+0x15e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
  403a1c:	6c02      	ldr	r2, [r0, #64]	; 0x40
  403a1e:	2a00      	cmp	r2, #0
  403a20:	f43f af56 	beq.w	4038d0 <xQueueGenericSend+0x14>
  403a24:	f04f 0380 	mov.w	r3, #128	; 0x80
  403a28:	b672      	cpsid	i
  403a2a:	f383 8811 	msr	BASEPRI, r3
  403a2e:	f3bf 8f6f 	isb	sy
  403a32:	f3bf 8f4f 	dsb	sy
  403a36:	b662      	cpsie	i
  403a38:	e7fe      	b.n	403a38 <xQueueGenericSend+0x17c>
  403a3a:	f04f 0380 	mov.w	r3, #128	; 0x80
  403a3e:	b672      	cpsid	i
  403a40:	f383 8811 	msr	BASEPRI, r3
  403a44:	f3bf 8f6f 	isb	sy
  403a48:	f3bf 8f4f 	dsb	sy
  403a4c:	b662      	cpsie	i
  403a4e:	e7fe      	b.n	403a4e <xQueueGenericSend+0x192>
			prvUnlockQueue( pxQueue );
  403a50:	4620      	mov	r0, r4
  403a52:	4b0b      	ldr	r3, [pc, #44]	; (403a80 <xQueueGenericSend+0x1c4>)
  403a54:	4798      	blx	r3
			( void ) xTaskResumeAll();
  403a56:	4b0b      	ldr	r3, [pc, #44]	; (403a84 <xQueueGenericSend+0x1c8>)
  403a58:	4798      	blx	r3
			return errQUEUE_FULL;
  403a5a:	2000      	movs	r0, #0
  403a5c:	e79e      	b.n	40399c <xQueueGenericSend+0xe0>
		prvLockQueue( pxQueue );
  403a5e:	2300      	movs	r3, #0
  403a60:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  403a64:	e75d      	b.n	403922 <xQueueGenericSend+0x66>
  403a66:	2300      	movs	r3, #0
  403a68:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
  403a6c:	e754      	b.n	403918 <xQueueGenericSend+0x5c>
  403a6e:	bf00      	nop
  403a70:	00404391 	.word	0x00404391
  403a74:	004034d1 	.word	0x004034d1
  403a78:	00403d59 	.word	0x00403d59
  403a7c:	004042e1 	.word	0x004042e1
  403a80:	004037bd 	.word	0x004037bd
  403a84:	00403ef9 	.word	0x00403ef9
  403a88:	004040e5 	.word	0x004040e5
  403a8c:	e000ed04 	.word	0xe000ed04
  403a90:	004035fd 	.word	0x004035fd
  403a94:	004036b5 	.word	0x004036b5
  403a98:	0040419d 	.word	0x0040419d
  403a9c:	00403485 	.word	0x00403485
  403aa0:	004042c9 	.word	0x004042c9

00403aa4 <xQueueGenericSendFromISR>:
{
  403aa4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
  403aa8:	b318      	cbz	r0, 403af2 <xQueueGenericSendFromISR+0x4e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
  403aaa:	2900      	cmp	r1, #0
  403aac:	d04a      	beq.n	403b44 <xQueueGenericSendFromISR+0xa0>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
  403aae:	2b02      	cmp	r3, #2
  403ab0:	d03a      	beq.n	403b28 <xQueueGenericSendFromISR+0x84>
  403ab2:	461f      	mov	r7, r3
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
  403ab4:	4b38      	ldr	r3, [pc, #224]	; (403b98 <xQueueGenericSendFromISR+0xf4>)
  403ab6:	4604      	mov	r4, r0
  403ab8:	4690      	mov	r8, r2
  403aba:	4689      	mov	r9, r1
  403abc:	4798      	blx	r3
	__asm volatile
  403abe:	f3ef 8611 	mrs	r6, BASEPRI
  403ac2:	f04f 0380 	mov.w	r3, #128	; 0x80
  403ac6:	b672      	cpsid	i
  403ac8:	f383 8811 	msr	BASEPRI, r3
  403acc:	f3bf 8f6f 	isb	sy
  403ad0:	f3bf 8f4f 	dsb	sy
  403ad4:	b662      	cpsie	i
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
  403ad6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  403ad8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  403ada:	429a      	cmp	r2, r3
  403adc:	d314      	bcc.n	403b08 <xQueueGenericSendFromISR+0x64>
  403ade:	f1a7 0002 	sub.w	r0, r7, #2
  403ae2:	fab0 f080 	clz	r0, r0
  403ae6:	0940      	lsrs	r0, r0, #5
  403ae8:	b970      	cbnz	r0, 403b08 <xQueueGenericSendFromISR+0x64>
	__asm volatile
  403aea:	f386 8811 	msr	BASEPRI, r6
}
  403aee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	__asm volatile
  403af2:	f04f 0380 	mov.w	r3, #128	; 0x80
  403af6:	b672      	cpsid	i
  403af8:	f383 8811 	msr	BASEPRI, r3
  403afc:	f3bf 8f6f 	isb	sy
  403b00:	f3bf 8f4f 	dsb	sy
  403b04:	b662      	cpsie	i
  403b06:	e7fe      	b.n	403b06 <xQueueGenericSendFromISR+0x62>
			const int8_t cTxLock = pxQueue->cTxLock;
  403b08:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
  403b0c:	4649      	mov	r1, r9
  403b0e:	4b23      	ldr	r3, [pc, #140]	; (403b9c <xQueueGenericSendFromISR+0xf8>)
  403b10:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
  403b12:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
  403b14:	4620      	mov	r0, r4
  403b16:	4798      	blx	r3
			if( cTxLock == queueUNLOCKED )
  403b18:	1c6b      	adds	r3, r5, #1
  403b1a:	d021      	beq.n	403b60 <xQueueGenericSendFromISR+0xbc>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
  403b1c:	1c6b      	adds	r3, r5, #1
			xReturn = pdPASS;
  403b1e:	2001      	movs	r0, #1
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
  403b20:	b25b      	sxtb	r3, r3
  403b22:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  403b26:	e7e0      	b.n	403aea <xQueueGenericSendFromISR+0x46>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
  403b28:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
  403b2a:	2c01      	cmp	r4, #1
  403b2c:	d0c1      	beq.n	403ab2 <xQueueGenericSendFromISR+0xe>
  403b2e:	f04f 0380 	mov.w	r3, #128	; 0x80
  403b32:	b672      	cpsid	i
  403b34:	f383 8811 	msr	BASEPRI, r3
  403b38:	f3bf 8f6f 	isb	sy
  403b3c:	f3bf 8f4f 	dsb	sy
  403b40:	b662      	cpsie	i
  403b42:	e7fe      	b.n	403b42 <xQueueGenericSendFromISR+0x9e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
  403b44:	6c04      	ldr	r4, [r0, #64]	; 0x40
  403b46:	2c00      	cmp	r4, #0
  403b48:	d0b1      	beq.n	403aae <xQueueGenericSendFromISR+0xa>
  403b4a:	f04f 0380 	mov.w	r3, #128	; 0x80
  403b4e:	b672      	cpsid	i
  403b50:	f383 8811 	msr	BASEPRI, r3
  403b54:	f3bf 8f6f 	isb	sy
  403b58:	f3bf 8f4f 	dsb	sy
  403b5c:	b662      	cpsie	i
  403b5e:	e7fe      	b.n	403b5e <xQueueGenericSendFromISR+0xba>
					if( pxQueue->pxQueueSetContainer != NULL )
  403b60:	6ca3      	ldr	r3, [r4, #72]	; 0x48
  403b62:	b15b      	cbz	r3, 403b7c <xQueueGenericSendFromISR+0xd8>
						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
  403b64:	4639      	mov	r1, r7
  403b66:	4620      	mov	r0, r4
  403b68:	4b0d      	ldr	r3, [pc, #52]	; (403ba0 <xQueueGenericSendFromISR+0xfc>)
  403b6a:	4798      	blx	r3
							if( pxHigherPriorityTaskWoken != NULL )
  403b6c:	b140      	cbz	r0, 403b80 <xQueueGenericSendFromISR+0xdc>
  403b6e:	f1b8 0f00 	cmp.w	r8, #0
  403b72:	d005      	beq.n	403b80 <xQueueGenericSendFromISR+0xdc>
								*pxHigherPriorityTaskWoken = pdTRUE;
  403b74:	2001      	movs	r0, #1
  403b76:	f8c8 0000 	str.w	r0, [r8]
  403b7a:	e7b6      	b.n	403aea <xQueueGenericSendFromISR+0x46>
						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
  403b7c:	6a63      	ldr	r3, [r4, #36]	; 0x24
  403b7e:	b90b      	cbnz	r3, 403b84 <xQueueGenericSendFromISR+0xe0>
			xReturn = pdPASS;
  403b80:	2001      	movs	r0, #1
  403b82:	e7b2      	b.n	403aea <xQueueGenericSendFromISR+0x46>
							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
  403b84:	f104 0024 	add.w	r0, r4, #36	; 0x24
  403b88:	4b06      	ldr	r3, [pc, #24]	; (403ba4 <xQueueGenericSendFromISR+0x100>)
  403b8a:	4798      	blx	r3
								if( pxHigherPriorityTaskWoken != NULL )
  403b8c:	f1b8 0f00 	cmp.w	r8, #0
  403b90:	d0f6      	beq.n	403b80 <xQueueGenericSendFromISR+0xdc>
  403b92:	2800      	cmp	r0, #0
  403b94:	d1ee      	bne.n	403b74 <xQueueGenericSendFromISR+0xd0>
  403b96:	e7f3      	b.n	403b80 <xQueueGenericSendFromISR+0xdc>
  403b98:	00403599 	.word	0x00403599
  403b9c:	004035fd 	.word	0x004035fd
  403ba0:	004036b5 	.word	0x004036b5
  403ba4:	0040419d 	.word	0x0040419d

00403ba8 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
  403ba8:	2800      	cmp	r0, #0
  403baa:	d033      	beq.n	403c14 <xQueueGiveFromISR+0x6c>
	configASSERT( pxQueue->uxItemSize == 0 );
  403bac:	6c03      	ldr	r3, [r0, #64]	; 0x40
  403bae:	b153      	cbz	r3, 403bc6 <xQueueGiveFromISR+0x1e>
  403bb0:	f04f 0380 	mov.w	r3, #128	; 0x80
  403bb4:	b672      	cpsid	i
  403bb6:	f383 8811 	msr	BASEPRI, r3
  403bba:	f3bf 8f6f 	isb	sy
  403bbe:	f3bf 8f4f 	dsb	sy
  403bc2:	b662      	cpsie	i
  403bc4:	e7fe      	b.n	403bc4 <xQueueGiveFromISR+0x1c>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->pxMutexHolder != NULL ) ) );
  403bc6:	6803      	ldr	r3, [r0, #0]
  403bc8:	2b00      	cmp	r3, #0
  403bca:	d03b      	beq.n	403c44 <xQueueGiveFromISR+0x9c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
  403bcc:	4b2a      	ldr	r3, [pc, #168]	; (403c78 <xQueueGiveFromISR+0xd0>)
{
  403bce:	b570      	push	{r4, r5, r6, lr}
  403bd0:	4604      	mov	r4, r0
  403bd2:	460e      	mov	r6, r1
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
  403bd4:	4798      	blx	r3
	__asm volatile
  403bd6:	f3ef 8511 	mrs	r5, BASEPRI
  403bda:	f04f 0380 	mov.w	r3, #128	; 0x80
  403bde:	b672      	cpsid	i
  403be0:	f383 8811 	msr	BASEPRI, r3
  403be4:	f3bf 8f6f 	isb	sy
  403be8:	f3bf 8f4f 	dsb	sy
  403bec:	b662      	cpsie	i
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
  403bee:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
  403bf0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  403bf2:	429a      	cmp	r2, r3
  403bf4:	d224      	bcs.n	403c40 <xQueueGiveFromISR+0x98>
			const int8_t cTxLock = pxQueue->cTxLock;
  403bf6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
  403bfa:	3201      	adds	r2, #1
			const int8_t cTxLock = pxQueue->cTxLock;
  403bfc:	b25b      	sxtb	r3, r3
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
  403bfe:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
  403c00:	1c5a      	adds	r2, r3, #1
  403c02:	d012      	beq.n	403c2a <xQueueGiveFromISR+0x82>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
  403c04:	3301      	adds	r3, #1
			xReturn = pdPASS;
  403c06:	2001      	movs	r0, #1
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
  403c08:	b25b      	sxtb	r3, r3
  403c0a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	__asm volatile
  403c0e:	f385 8811 	msr	BASEPRI, r5
}
  403c12:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
  403c14:	f04f 0380 	mov.w	r3, #128	; 0x80
  403c18:	b672      	cpsid	i
  403c1a:	f383 8811 	msr	BASEPRI, r3
  403c1e:	f3bf 8f6f 	isb	sy
  403c22:	f3bf 8f4f 	dsb	sy
  403c26:	b662      	cpsie	i
  403c28:	e7fe      	b.n	403c28 <xQueueGiveFromISR+0x80>
					if( pxQueue->pxQueueSetContainer != NULL )
  403c2a:	6ca3      	ldr	r3, [r4, #72]	; 0x48
  403c2c:	b1c3      	cbz	r3, 403c60 <xQueueGiveFromISR+0xb8>
						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
  403c2e:	4620      	mov	r0, r4
  403c30:	2100      	movs	r1, #0
  403c32:	4b12      	ldr	r3, [pc, #72]	; (403c7c <xQueueGiveFromISR+0xd4>)
  403c34:	4798      	blx	r3
							if( pxHigherPriorityTaskWoken != NULL )
  403c36:	b1e0      	cbz	r0, 403c72 <xQueueGiveFromISR+0xca>
  403c38:	b1de      	cbz	r6, 403c72 <xQueueGiveFromISR+0xca>
								*pxHigherPriorityTaskWoken = pdTRUE;
  403c3a:	2001      	movs	r0, #1
  403c3c:	6030      	str	r0, [r6, #0]
  403c3e:	e7e6      	b.n	403c0e <xQueueGiveFromISR+0x66>
			xReturn = errQUEUE_FULL;
  403c40:	2000      	movs	r0, #0
  403c42:	e7e4      	b.n	403c0e <xQueueGiveFromISR+0x66>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->pxMutexHolder != NULL ) ) );
  403c44:	6843      	ldr	r3, [r0, #4]
  403c46:	2b00      	cmp	r3, #0
  403c48:	d0c0      	beq.n	403bcc <xQueueGiveFromISR+0x24>
  403c4a:	f04f 0380 	mov.w	r3, #128	; 0x80
  403c4e:	b672      	cpsid	i
  403c50:	f383 8811 	msr	BASEPRI, r3
  403c54:	f3bf 8f6f 	isb	sy
  403c58:	f3bf 8f4f 	dsb	sy
  403c5c:	b662      	cpsie	i
  403c5e:	e7fe      	b.n	403c5e <xQueueGiveFromISR+0xb6>
						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
  403c60:	6a63      	ldr	r3, [r4, #36]	; 0x24
  403c62:	b133      	cbz	r3, 403c72 <xQueueGiveFromISR+0xca>
							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
  403c64:	f104 0024 	add.w	r0, r4, #36	; 0x24
  403c68:	4b05      	ldr	r3, [pc, #20]	; (403c80 <xQueueGiveFromISR+0xd8>)
  403c6a:	4798      	blx	r3
								if( pxHigherPriorityTaskWoken != NULL )
  403c6c:	b10e      	cbz	r6, 403c72 <xQueueGiveFromISR+0xca>
  403c6e:	2800      	cmp	r0, #0
  403c70:	d1e3      	bne.n	403c3a <xQueueGiveFromISR+0x92>
			xReturn = pdPASS;
  403c72:	2001      	movs	r0, #1
  403c74:	e7cb      	b.n	403c0e <xQueueGiveFromISR+0x66>
  403c76:	bf00      	nop
  403c78:	00403599 	.word	0x00403599
  403c7c:	004036b5 	.word	0x004036b5
  403c80:	0040419d 	.word	0x0040419d

00403c84 <xQueueReceiveFromISR>:
	configASSERT( pxQueue );
  403c84:	b110      	cbz	r0, 403c8c <xQueueReceiveFromISR+0x8>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
  403c86:	b161      	cbz	r1, 403ca2 <xQueueReceiveFromISR+0x1e>
  403c88:	4b0d      	ldr	r3, [pc, #52]	; (403cc0 <xQueueReceiveFromISR+0x3c>)
  403c8a:	4718      	bx	r3
  403c8c:	f04f 0380 	mov.w	r3, #128	; 0x80
  403c90:	b672      	cpsid	i
  403c92:	f383 8811 	msr	BASEPRI, r3
  403c96:	f3bf 8f6f 	isb	sy
  403c9a:	f3bf 8f4f 	dsb	sy
  403c9e:	b662      	cpsie	i
  403ca0:	e7fe      	b.n	403ca0 <xQueueReceiveFromISR+0x1c>
  403ca2:	6c03      	ldr	r3, [r0, #64]	; 0x40
  403ca4:	2b00      	cmp	r3, #0
  403ca6:	d0ef      	beq.n	403c88 <xQueueReceiveFromISR+0x4>
  403ca8:	f04f 0380 	mov.w	r3, #128	; 0x80
  403cac:	b672      	cpsid	i
  403cae:	f383 8811 	msr	BASEPRI, r3
  403cb2:	f3bf 8f6f 	isb	sy
  403cb6:	f3bf 8f4f 	dsb	sy
  403cba:	b662      	cpsie	i
  403cbc:	e7fe      	b.n	403cbc <xQueueReceiveFromISR+0x38>
  403cbe:	bf00      	nop
  403cc0:	00403739 	.word	0x00403739

00403cc4 <xQueuePeekFromISR>:
{
  403cc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	configASSERT( pxQueue );
  403cc6:	b170      	cbz	r0, 403ce6 <xQueuePeekFromISR+0x22>
	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
  403cc8:	6c03      	ldr	r3, [r0, #64]	; 0x40
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
  403cca:	2900      	cmp	r1, #0
  403ccc:	d032      	beq.n	403d34 <xQueuePeekFromISR+0x70>
	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
  403cce:	b9ab      	cbnz	r3, 403cfc <xQueuePeekFromISR+0x38>
  403cd0:	f04f 0380 	mov.w	r3, #128	; 0x80
  403cd4:	b672      	cpsid	i
  403cd6:	f383 8811 	msr	BASEPRI, r3
  403cda:	f3bf 8f6f 	isb	sy
  403cde:	f3bf 8f4f 	dsb	sy
  403ce2:	b662      	cpsie	i
  403ce4:	e7fe      	b.n	403ce4 <xQueuePeekFromISR+0x20>
  403ce6:	f04f 0380 	mov.w	r3, #128	; 0x80
  403cea:	b672      	cpsid	i
  403cec:	f383 8811 	msr	BASEPRI, r3
  403cf0:	f3bf 8f6f 	isb	sy
  403cf4:	f3bf 8f4f 	dsb	sy
  403cf8:	b662      	cpsie	i
  403cfa:	e7fe      	b.n	403cfa <xQueuePeekFromISR+0x36>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
  403cfc:	4b14      	ldr	r3, [pc, #80]	; (403d50 <xQueuePeekFromISR+0x8c>)
  403cfe:	4604      	mov	r4, r0
  403d00:	460d      	mov	r5, r1
  403d02:	4798      	blx	r3
	__asm volatile
  403d04:	f3ef 8611 	mrs	r6, BASEPRI
  403d08:	f04f 0380 	mov.w	r3, #128	; 0x80
  403d0c:	b672      	cpsid	i
  403d0e:	f383 8811 	msr	BASEPRI, r3
  403d12:	f3bf 8f6f 	isb	sy
  403d16:	f3bf 8f4f 	dsb	sy
  403d1a:	b662      	cpsie	i
		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
  403d1c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
  403d1e:	b130      	cbz	r0, 403d2e <xQueuePeekFromISR+0x6a>
			prvCopyDataFromQueue( pxQueue, pvBuffer );
  403d20:	4620      	mov	r0, r4
  403d22:	4629      	mov	r1, r5
  403d24:	4b0b      	ldr	r3, [pc, #44]	; (403d54 <xQueuePeekFromISR+0x90>)
			pcOriginalReadPosition = pxQueue->u.pcReadFrom;
  403d26:	68e7      	ldr	r7, [r4, #12]
			prvCopyDataFromQueue( pxQueue, pvBuffer );
  403d28:	4798      	blx	r3
			xReturn = pdPASS;
  403d2a:	2001      	movs	r0, #1
			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
  403d2c:	60e7      	str	r7, [r4, #12]
	__asm volatile
  403d2e:	f386 8811 	msr	BASEPRI, r6
}
  403d32:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
  403d34:	2b00      	cmp	r3, #0
  403d36:	d0cb      	beq.n	403cd0 <xQueuePeekFromISR+0xc>
	__asm volatile
  403d38:	f04f 0380 	mov.w	r3, #128	; 0x80
  403d3c:	b672      	cpsid	i
  403d3e:	f383 8811 	msr	BASEPRI, r3
  403d42:	f3bf 8f6f 	isb	sy
  403d46:	f3bf 8f4f 	dsb	sy
  403d4a:	b662      	cpsie	i
  403d4c:	e7fe      	b.n	403d4c <xQueuePeekFromISR+0x88>
  403d4e:	bf00      	nop
  403d50:	00403599 	.word	0x00403599
  403d54:	00403671 	.word	0x00403671

00403d58 <vTaskSuspendAll>:
{
	/* A critical section is not required as the variable is of type
	BaseType_t.  Please read Richard Barry's reply in the following link to a
	post in the FreeRTOS support forum before reporting this as a bug! -
	http://goo.gl/wu4acr */
	++uxSchedulerSuspended;
  403d58:	4a02      	ldr	r2, [pc, #8]	; (403d64 <vTaskSuspendAll+0xc>)
  403d5a:	6813      	ldr	r3, [r2, #0]
  403d5c:	3301      	adds	r3, #1
  403d5e:	6013      	str	r3, [r2, #0]
  403d60:	4770      	bx	lr
  403d62:	bf00      	nop
  403d64:	2040eb80 	.word	0x2040eb80

00403d68 <xTaskGetTickCountFromISR>:
	return xTicks;
}
/*-----------------------------------------------------------*/

TickType_t xTaskGetTickCountFromISR( void )
{
  403d68:	b508      	push	{r3, lr}
	that have been assigned a priority at or (logically) below the maximum
	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
	safe API to ensure interrupt entry is as fast and as simple as possible.
	More information (albeit Cortex-M specific) is provided on the following
	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
  403d6a:	4b02      	ldr	r3, [pc, #8]	; (403d74 <xTaskGetTickCountFromISR+0xc>)
  403d6c:	4798      	blx	r3

	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
	{
		xReturn = xTickCount;
  403d6e:	4b02      	ldr	r3, [pc, #8]	; (403d78 <xTaskGetTickCountFromISR+0x10>)
  403d70:	6818      	ldr	r0, [r3, #0]
	}
	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );

	return xReturn;
}
  403d72:	bd08      	pop	{r3, pc}
  403d74:	00403599 	.word	0x00403599
  403d78:	2040ebbc 	.word	0x2040ebbc

00403d7c <xTaskIncrementTick>:

#endif /* INCLUDE_xTaskAbortDelay */
/*----------------------------------------------------------*/

BaseType_t xTaskIncrementTick( void )
{
  403d7c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}

	/* Called by the portable layer each time a tick interrupt occurs.
	Increments the tick then checks to see if the new tick value will cause any
	tasks to be unblocked. */
	traceTASK_INCREMENT_TICK( xTickCount );
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
  403d80:	4b4f      	ldr	r3, [pc, #316]	; (403ec0 <xTaskIncrementTick+0x144>)
  403d82:	681b      	ldr	r3, [r3, #0]
  403d84:	2b00      	cmp	r3, #0
  403d86:	d16f      	bne.n	403e68 <xTaskIncrementTick+0xec>
	{
		/* Minor optimisation.  The tick count cannot change in this
		block. */
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
  403d88:	4b4e      	ldr	r3, [pc, #312]	; (403ec4 <xTaskIncrementTick+0x148>)
  403d8a:	681e      	ldr	r6, [r3, #0]
  403d8c:	3601      	adds	r6, #1

		/* Increment the RTOS tick, switching the delayed and overflowed
		delayed lists if it wraps to 0. */
		xTickCount = xConstTickCount;
  403d8e:	601e      	str	r6, [r3, #0]

		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
  403d90:	2e00      	cmp	r6, #0
  403d92:	d05a      	beq.n	403e4a <xTaskIncrementTick+0xce>
  403d94:	f8df a158 	ldr.w	sl, [pc, #344]	; 403ef0 <xTaskIncrementTick+0x174>

		/* See if this tick has made a timeout expire.  Tasks are stored in
		the	queue in the order of their wake time - meaning once one task
		has been found whose block time has not expired there is no need to
		look any further down the list. */
		if( xConstTickCount >= xNextTaskUnblockTime )
  403d98:	f8da 2000 	ldr.w	r2, [sl]
  403d9c:	2400      	movs	r4, #0
  403d9e:	4296      	cmp	r6, r2
  403da0:	d36a      	bcc.n	403e78 <xTaskIncrementTick+0xfc>
  403da2:	4d49      	ldr	r5, [pc, #292]	; (403ec8 <xTaskIncrementTick+0x14c>)
  403da4:	4f49      	ldr	r7, [pc, #292]	; (403ecc <xTaskIncrementTick+0x150>)
  403da6:	f8df 814c 	ldr.w	r8, [pc, #332]	; 403ef4 <xTaskIncrementTick+0x178>
  403daa:	e02f      	b.n	403e0c <xTaskIncrementTick+0x90>
				{
					/* The delayed list is not empty, get the value of the
					item at the head of the delayed list.  This is the time
					at which the task at the head of the delayed list must
					be removed from the Blocked state. */
					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
  403dac:	682a      	ldr	r2, [r5, #0]
  403dae:	68d2      	ldr	r2, [r2, #12]
  403db0:	f8d2 900c 	ldr.w	r9, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
  403db4:	f8d9 1004 	ldr.w	r1, [r9, #4]
					{
						mtCOVERAGE_TEST_MARKER();
					}

					/* It is time to remove the item from the Blocked state. */
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
  403db8:	f109 0b04 	add.w	fp, r9, #4
					if( xConstTickCount < xItemValue )
  403dbc:	428e      	cmp	r6, r1
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
  403dbe:	4658      	mov	r0, fp
					if( xConstTickCount < xItemValue )
  403dc0:	d373      	bcc.n	403eaa <xTaskIncrementTick+0x12e>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
  403dc2:	4b43      	ldr	r3, [pc, #268]	; (403ed0 <xTaskIncrementTick+0x154>)
  403dc4:	4798      	blx	r3

					/* Is the task waiting on an event also?  If so remove
					it from the event list. */
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
  403dc6:	f8d9 1028 	ldr.w	r1, [r9, #40]	; 0x28
					{
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
  403dca:	f109 0018 	add.w	r0, r9, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
  403dce:	b109      	cbz	r1, 403dd4 <xTaskIncrementTick+0x58>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
  403dd0:	4b3f      	ldr	r3, [pc, #252]	; (403ed0 <xTaskIncrementTick+0x154>)
  403dd2:	4798      	blx	r3
						mtCOVERAGE_TEST_MARKER();
					}

					/* Place the unblocked task into the appropriate ready
					list. */
					prvAddTaskToReadyList( pxTCB );
  403dd4:	f8d9 002c 	ldr.w	r0, [r9, #44]	; 0x2c
  403dd8:	f04f 0e01 	mov.w	lr, #1
  403ddc:	4b3d      	ldr	r3, [pc, #244]	; (403ed4 <xTaskIncrementTick+0x158>)
  403dde:	4659      	mov	r1, fp
  403de0:	fa0e fe00 	lsl.w	lr, lr, r0
  403de4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  403de8:	681b      	ldr	r3, [r3, #0]
  403dea:	eb07 0080 	add.w	r0, r7, r0, lsl #2
  403dee:	ea4e 0e03 	orr.w	lr, lr, r3
  403df2:	4b38      	ldr	r3, [pc, #224]	; (403ed4 <xTaskIncrementTick+0x158>)
  403df4:	f8c3 e000 	str.w	lr, [r3]
  403df8:	4b37      	ldr	r3, [pc, #220]	; (403ed8 <xTaskIncrementTick+0x15c>)
  403dfa:	4798      	blx	r3
					{
						/* Preemption is on, but a context switch should
						only be performed if the unblocked task has a
						priority that is equal to or higher than the
						currently executing task. */
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
  403dfc:	f8d8 0000 	ldr.w	r0, [r8]
  403e00:	f8d9 102c 	ldr.w	r1, [r9, #44]	; 0x2c
  403e04:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
						{
							xSwitchRequired = pdTRUE;
  403e06:	4291      	cmp	r1, r2
  403e08:	bf28      	it	cs
  403e0a:	2401      	movcs	r4, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
  403e0c:	682a      	ldr	r2, [r5, #0]
  403e0e:	6812      	ldr	r2, [r2, #0]
  403e10:	2a00      	cmp	r2, #0
  403e12:	d1cb      	bne.n	403dac <xTaskIncrementTick+0x30>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
  403e14:	f04f 32ff 	mov.w	r2, #4294967295
  403e18:	f8ca 2000 	str.w	r2, [sl]
		/* Tasks of equal priority to the currently running task will share
		processing time (time slice) if preemption is on, and the application
		writer has not explicitly turned time slicing off. */
		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
		{
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
  403e1c:	f8d8 3000 	ldr.w	r3, [r8]

		#if ( configUSE_TICK_HOOK == 1 )
		{
			/* Guard against the tick hook being called when the pended tick
			count is being unwound (when the scheduler is being unlocked). */
			if( uxPendedTicks == ( UBaseType_t ) 0U )
  403e20:	492e      	ldr	r1, [pc, #184]	; (403edc <xTaskIncrementTick+0x160>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
  403e22:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  403e24:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  403e28:	009b      	lsls	r3, r3, #2
  403e2a:	58fa      	ldr	r2, [r7, r3]
			if( uxPendedTicks == ( UBaseType_t ) 0U )
  403e2c:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
  403e2e:	2a02      	cmp	r2, #2
  403e30:	bf28      	it	cs
  403e32:	2401      	movcs	r4, #1
			if( uxPendedTicks == ( UBaseType_t ) 0U )
  403e34:	b90b      	cbnz	r3, 403e3a <xTaskIncrementTick+0xbe>
			{
				vApplicationTickHook();
  403e36:	4b2a      	ldr	r3, [pc, #168]	; (403ee0 <xTaskIncrementTick+0x164>)
  403e38:	4798      	blx	r3
		#endif
	}

	#if ( configUSE_PREEMPTION == 1 )
	{
		if( xYieldPending != pdFALSE )
  403e3a:	4b2a      	ldr	r3, [pc, #168]	; (403ee4 <xTaskIncrementTick+0x168>)
  403e3c:	681b      	ldr	r3, [r3, #0]
		{
			xSwitchRequired = pdTRUE;
  403e3e:	2b00      	cmp	r3, #0
  403e40:	bf18      	it	ne
  403e42:	2401      	movne	r4, #1
		}
	}
	#endif /* configUSE_PREEMPTION */

	return xSwitchRequired;
}
  403e44:	4620      	mov	r0, r4
  403e46:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
  403e4a:	4d1f      	ldr	r5, [pc, #124]	; (403ec8 <xTaskIncrementTick+0x14c>)
  403e4c:	682b      	ldr	r3, [r5, #0]
  403e4e:	681b      	ldr	r3, [r3, #0]
  403e50:	b1b3      	cbz	r3, 403e80 <xTaskIncrementTick+0x104>
  403e52:	f04f 0380 	mov.w	r3, #128	; 0x80
  403e56:	b672      	cpsid	i
  403e58:	f383 8811 	msr	BASEPRI, r3
  403e5c:	f3bf 8f6f 	isb	sy
  403e60:	f3bf 8f4f 	dsb	sy
  403e64:	b662      	cpsie	i
  403e66:	e7fe      	b.n	403e66 <xTaskIncrementTick+0xea>
		++uxPendedTicks;
  403e68:	4a1c      	ldr	r2, [pc, #112]	; (403edc <xTaskIncrementTick+0x160>)
BaseType_t xSwitchRequired = pdFALSE;
  403e6a:	2400      	movs	r4, #0
			vApplicationTickHook();
  403e6c:	491c      	ldr	r1, [pc, #112]	; (403ee0 <xTaskIncrementTick+0x164>)
		++uxPendedTicks;
  403e6e:	6813      	ldr	r3, [r2, #0]
  403e70:	3301      	adds	r3, #1
  403e72:	6013      	str	r3, [r2, #0]
			vApplicationTickHook();
  403e74:	4788      	blx	r1
  403e76:	e7e0      	b.n	403e3a <xTaskIncrementTick+0xbe>
  403e78:	4f14      	ldr	r7, [pc, #80]	; (403ecc <xTaskIncrementTick+0x150>)
  403e7a:	f8df 8078 	ldr.w	r8, [pc, #120]	; 403ef4 <xTaskIncrementTick+0x178>
  403e7e:	e7cd      	b.n	403e1c <xTaskIncrementTick+0xa0>
			taskSWITCH_DELAYED_LISTS();
  403e80:	4b19      	ldr	r3, [pc, #100]	; (403ee8 <xTaskIncrementTick+0x16c>)
  403e82:	6829      	ldr	r1, [r5, #0]
  403e84:	4a19      	ldr	r2, [pc, #100]	; (403eec <xTaskIncrementTick+0x170>)
  403e86:	6818      	ldr	r0, [r3, #0]
  403e88:	6028      	str	r0, [r5, #0]
  403e8a:	6019      	str	r1, [r3, #0]
  403e8c:	6813      	ldr	r3, [r2, #0]
  403e8e:	3301      	adds	r3, #1
  403e90:	6013      	str	r3, [r2, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
  403e92:	682b      	ldr	r3, [r5, #0]
  403e94:	681b      	ldr	r3, [r3, #0]
  403e96:	b15b      	cbz	r3, 403eb0 <xTaskIncrementTick+0x134>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
  403e98:	682a      	ldr	r2, [r5, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
  403e9a:	f8df a054 	ldr.w	sl, [pc, #84]	; 403ef0 <xTaskIncrementTick+0x174>
		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
  403e9e:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
  403ea0:	68d2      	ldr	r2, [r2, #12]
  403ea2:	6852      	ldr	r2, [r2, #4]
  403ea4:	f8ca 2000 	str.w	r2, [sl]
  403ea8:	e776      	b.n	403d98 <xTaskIncrementTick+0x1c>
						xNextTaskUnblockTime = xItemValue;
  403eaa:	f8ca 1000 	str.w	r1, [sl]
						break;
  403eae:	e7b5      	b.n	403e1c <xTaskIncrementTick+0xa0>
		xNextTaskUnblockTime = portMAX_DELAY;
  403eb0:	f8df a03c 	ldr.w	sl, [pc, #60]	; 403ef0 <xTaskIncrementTick+0x174>
  403eb4:	f04f 32ff 	mov.w	r2, #4294967295
  403eb8:	f8ca 2000 	str.w	r2, [sl]
  403ebc:	e76c      	b.n	403d98 <xTaskIncrementTick+0x1c>
  403ebe:	bf00      	nop
  403ec0:	2040eb80 	.word	0x2040eb80
  403ec4:	2040ebbc 	.word	0x2040ebbc
  403ec8:	2040eb0c 	.word	0x2040eb0c
  403ecc:	2040eb14 	.word	0x2040eb14
  403ed0:	00403431 	.word	0x00403431
  403ed4:	2040eb84 	.word	0x2040eb84
  403ed8:	004033e5 	.word	0x004033e5
  403edc:	2040eb7c 	.word	0x2040eb7c
  403ee0:	004056c9 	.word	0x004056c9
  403ee4:	2040ebc0 	.word	0x2040ebc0
  403ee8:	2040eb10 	.word	0x2040eb10
  403eec:	2040eb8c 	.word	0x2040eb8c
  403ef0:	2040eb88 	.word	0x2040eb88
  403ef4:	2040eb08 	.word	0x2040eb08

00403ef8 <xTaskResumeAll>:
{
  403ef8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	configASSERT( uxSchedulerSuspended );
  403efc:	4c3d      	ldr	r4, [pc, #244]	; (403ff4 <xTaskResumeAll+0xfc>)
  403efe:	6823      	ldr	r3, [r4, #0]
  403f00:	b953      	cbnz	r3, 403f18 <xTaskResumeAll+0x20>
  403f02:	f04f 0380 	mov.w	r3, #128	; 0x80
  403f06:	b672      	cpsid	i
  403f08:	f383 8811 	msr	BASEPRI, r3
  403f0c:	f3bf 8f6f 	isb	sy
  403f10:	f3bf 8f4f 	dsb	sy
  403f14:	b662      	cpsie	i
  403f16:	e7fe      	b.n	403f16 <xTaskResumeAll+0x1e>
	taskENTER_CRITICAL();
  403f18:	4b37      	ldr	r3, [pc, #220]	; (403ff8 <xTaskResumeAll+0x100>)
  403f1a:	4798      	blx	r3
		--uxSchedulerSuspended;
  403f1c:	6823      	ldr	r3, [r4, #0]
  403f1e:	3b01      	subs	r3, #1
  403f20:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
  403f22:	6824      	ldr	r4, [r4, #0]
  403f24:	2c00      	cmp	r4, #0
  403f26:	d157      	bne.n	403fd8 <xTaskResumeAll+0xe0>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
  403f28:	4b34      	ldr	r3, [pc, #208]	; (403ffc <xTaskResumeAll+0x104>)
  403f2a:	681b      	ldr	r3, [r3, #0]
  403f2c:	2b00      	cmp	r3, #0
  403f2e:	d053      	beq.n	403fd8 <xTaskResumeAll+0xe0>
  403f30:	4d33      	ldr	r5, [pc, #204]	; (404000 <xTaskResumeAll+0x108>)
  403f32:	f8df b0f4 	ldr.w	fp, [pc, #244]	; 404028 <xTaskResumeAll+0x130>
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
  403f36:	4f33      	ldr	r7, [pc, #204]	; (404004 <xTaskResumeAll+0x10c>)
					prvAddTaskToReadyList( pxTCB );
  403f38:	4e33      	ldr	r6, [pc, #204]	; (404008 <xTaskResumeAll+0x110>)
  403f3a:	f8df 90f0 	ldr.w	r9, [pc, #240]	; 40402c <xTaskResumeAll+0x134>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
  403f3e:	f8db 3000 	ldr.w	r3, [fp]
					prvAddTaskToReadyList( pxTCB );
  403f42:	f04f 0801 	mov.w	r8, #1
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
  403f46:	b333      	cbz	r3, 403f96 <xTaskResumeAll+0x9e>
					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
  403f48:	f8db 300c 	ldr.w	r3, [fp, #12]
  403f4c:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
  403f4e:	f104 0a04 	add.w	sl, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
  403f52:	f104 0018 	add.w	r0, r4, #24
  403f56:	47b8      	blx	r7
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
  403f58:	4650      	mov	r0, sl
  403f5a:	47b8      	blx	r7
					prvAddTaskToReadyList( pxTCB );
  403f5c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  403f5e:	f8d6 e000 	ldr.w	lr, [r6]
  403f62:	4651      	mov	r1, sl
  403f64:	fa08 f300 	lsl.w	r3, r8, r0
  403f68:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  403f6c:	4a27      	ldr	r2, [pc, #156]	; (40400c <xTaskResumeAll+0x114>)
  403f6e:	ea43 030e 	orr.w	r3, r3, lr
  403f72:	eb09 0080 	add.w	r0, r9, r0, lsl #2
  403f76:	6033      	str	r3, [r6, #0]
  403f78:	4790      	blx	r2
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
  403f7a:	4b25      	ldr	r3, [pc, #148]	; (404010 <xTaskResumeAll+0x118>)
  403f7c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
  403f7e:	681b      	ldr	r3, [r3, #0]
  403f80:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  403f82:	429a      	cmp	r2, r3
  403f84:	d3db      	bcc.n	403f3e <xTaskResumeAll+0x46>
						xYieldPending = pdTRUE;
  403f86:	f8c5 8000 	str.w	r8, [r5]
					prvAddTaskToReadyList( pxTCB );
  403f8a:	f04f 0801 	mov.w	r8, #1
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
  403f8e:	f8db 3000 	ldr.w	r3, [fp]
  403f92:	2b00      	cmp	r3, #0
  403f94:	d1d8      	bne.n	403f48 <xTaskResumeAll+0x50>
				if( pxTCB != NULL )
  403f96:	b13c      	cbz	r4, 403fa8 <xTaskResumeAll+0xb0>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
  403f98:	4b1e      	ldr	r3, [pc, #120]	; (404014 <xTaskResumeAll+0x11c>)
  403f9a:	681a      	ldr	r2, [r3, #0]
  403f9c:	6812      	ldr	r2, [r2, #0]
  403f9e:	bb0a      	cbnz	r2, 403fe4 <xTaskResumeAll+0xec>
		xNextTaskUnblockTime = portMAX_DELAY;
  403fa0:	4b1d      	ldr	r3, [pc, #116]	; (404018 <xTaskResumeAll+0x120>)
  403fa2:	f04f 32ff 	mov.w	r2, #4294967295
  403fa6:	601a      	str	r2, [r3, #0]
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
  403fa8:	4e1c      	ldr	r6, [pc, #112]	; (40401c <xTaskResumeAll+0x124>)
  403faa:	6834      	ldr	r4, [r6, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
  403fac:	b144      	cbz	r4, 403fc0 <xTaskResumeAll+0xc8>
  403fae:	f8df 8080 	ldr.w	r8, [pc, #128]	; 404030 <xTaskResumeAll+0x138>
								xYieldPending = pdTRUE;
  403fb2:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
  403fb4:	47c0      	blx	r8
  403fb6:	b100      	cbz	r0, 403fba <xTaskResumeAll+0xc2>
								xYieldPending = pdTRUE;
  403fb8:	602f      	str	r7, [r5, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
  403fba:	3c01      	subs	r4, #1
  403fbc:	d1fa      	bne.n	403fb4 <xTaskResumeAll+0xbc>
						uxPendedTicks = 0;
  403fbe:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
  403fc0:	682b      	ldr	r3, [r5, #0]
  403fc2:	b14b      	cbz	r3, 403fd8 <xTaskResumeAll+0xe0>
					taskYIELD_IF_USING_PREEMPTION();
  403fc4:	4b16      	ldr	r3, [pc, #88]	; (404020 <xTaskResumeAll+0x128>)
  403fc6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  403fca:	601a      	str	r2, [r3, #0]
  403fcc:	f3bf 8f4f 	dsb	sy
  403fd0:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
  403fd4:	2401      	movs	r4, #1
  403fd6:	e000      	b.n	403fda <xTaskResumeAll+0xe2>
BaseType_t xAlreadyYielded = pdFALSE;
  403fd8:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
  403fda:	4b12      	ldr	r3, [pc, #72]	; (404024 <xTaskResumeAll+0x12c>)
  403fdc:	4798      	blx	r3
}
  403fde:	4620      	mov	r0, r4
  403fe0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
  403fe4:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
  403fe6:	4b0c      	ldr	r3, [pc, #48]	; (404018 <xTaskResumeAll+0x120>)
		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
  403fe8:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
  403fea:	68d2      	ldr	r2, [r2, #12]
  403fec:	6852      	ldr	r2, [r2, #4]
  403fee:	601a      	str	r2, [r3, #0]
  403ff0:	e7da      	b.n	403fa8 <xTaskResumeAll+0xb0>
  403ff2:	bf00      	nop
  403ff4:	2040eb80 	.word	0x2040eb80
  403ff8:	00403485 	.word	0x00403485
  403ffc:	2040eb78 	.word	0x2040eb78
  404000:	2040ebc0 	.word	0x2040ebc0
  404004:	00403431 	.word	0x00403431
  404008:	2040eb84 	.word	0x2040eb84
  40400c:	004033e5 	.word	0x004033e5
  404010:	2040eb08 	.word	0x2040eb08
  404014:	2040eb0c 	.word	0x2040eb0c
  404018:	2040eb88 	.word	0x2040eb88
  40401c:	2040eb7c 	.word	0x2040eb7c
  404020:	e000ed04 	.word	0xe000ed04
  404024:	004034d1 	.word	0x004034d1
  404028:	2040eb90 	.word	0x2040eb90
  40402c:	2040eb14 	.word	0x2040eb14
  404030:	00403d7d 	.word	0x00403d7d

00404034 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
  404034:	4b25      	ldr	r3, [pc, #148]	; (4040cc <vTaskSwitchContext+0x98>)
  404036:	681b      	ldr	r3, [r3, #0]
  404038:	2b00      	cmp	r3, #0
  40403a:	d135      	bne.n	4040a8 <vTaskSwitchContext+0x74>
		xYieldPending = pdFALSE;
  40403c:	4a24      	ldr	r2, [pc, #144]	; (4040d0 <vTaskSwitchContext+0x9c>)
{
  40403e:	b510      	push	{r4, lr}
		taskCHECK_FOR_STACK_OVERFLOW();
  404040:	4c24      	ldr	r4, [pc, #144]	; (4040d4 <vTaskSwitchContext+0xa0>)
		xYieldPending = pdFALSE;
  404042:	6013      	str	r3, [r2, #0]
		taskCHECK_FOR_STACK_OVERFLOW();
  404044:	6823      	ldr	r3, [r4, #0]
  404046:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  404048:	681a      	ldr	r2, [r3, #0]
  40404a:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
  40404e:	d103      	bne.n	404058 <vTaskSwitchContext+0x24>
  404050:	685a      	ldr	r2, [r3, #4]
  404052:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
  404056:	d02b      	beq.n	4040b0 <vTaskSwitchContext+0x7c>
  404058:	6820      	ldr	r0, [r4, #0]
  40405a:	6821      	ldr	r1, [r4, #0]
  40405c:	4b1e      	ldr	r3, [pc, #120]	; (4040d8 <vTaskSwitchContext+0xa4>)
  40405e:	3134      	adds	r1, #52	; 0x34
  404060:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK();
  404062:	4b1e      	ldr	r3, [pc, #120]	; (4040dc <vTaskSwitchContext+0xa8>)
  404064:	681b      	ldr	r3, [r3, #0]
		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
  404066:	fab3 f383 	clz	r3, r3
  40406a:	b2db      	uxtb	r3, r3
  40406c:	4a1c      	ldr	r2, [pc, #112]	; (4040e0 <vTaskSwitchContext+0xac>)
  40406e:	f1c3 031f 	rsb	r3, r3, #31
  404072:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  404076:	009b      	lsls	r3, r3, #2
  404078:	58d0      	ldr	r0, [r2, r3]
  40407a:	18d1      	adds	r1, r2, r3
  40407c:	b950      	cbnz	r0, 404094 <vTaskSwitchContext+0x60>
	__asm volatile
  40407e:	f04f 0380 	mov.w	r3, #128	; 0x80
  404082:	b672      	cpsid	i
  404084:	f383 8811 	msr	BASEPRI, r3
  404088:	f3bf 8f6f 	isb	sy
  40408c:	f3bf 8f4f 	dsb	sy
  404090:	b662      	cpsie	i
  404092:	e7fe      	b.n	404092 <vTaskSwitchContext+0x5e>
  404094:	3308      	adds	r3, #8
  404096:	6848      	ldr	r0, [r1, #4]
  404098:	441a      	add	r2, r3
  40409a:	6843      	ldr	r3, [r0, #4]
  40409c:	4293      	cmp	r3, r2
  40409e:	604b      	str	r3, [r1, #4]
  4040a0:	d00f      	beq.n	4040c2 <vTaskSwitchContext+0x8e>
  4040a2:	68db      	ldr	r3, [r3, #12]
  4040a4:	6023      	str	r3, [r4, #0]
  4040a6:	bd10      	pop	{r4, pc}
		xYieldPending = pdTRUE;
  4040a8:	4b09      	ldr	r3, [pc, #36]	; (4040d0 <vTaskSwitchContext+0x9c>)
  4040aa:	2201      	movs	r2, #1
  4040ac:	601a      	str	r2, [r3, #0]
  4040ae:	4770      	bx	lr
		taskCHECK_FOR_STACK_OVERFLOW();
  4040b0:	689a      	ldr	r2, [r3, #8]
  4040b2:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
  4040b6:	d1cf      	bne.n	404058 <vTaskSwitchContext+0x24>
  4040b8:	68db      	ldr	r3, [r3, #12]
  4040ba:	f1b3 3fa5 	cmp.w	r3, #2779096485	; 0xa5a5a5a5
  4040be:	d1cb      	bne.n	404058 <vTaskSwitchContext+0x24>
  4040c0:	e7cf      	b.n	404062 <vTaskSwitchContext+0x2e>
		taskSELECT_HIGHEST_PRIORITY_TASK();
  4040c2:	685b      	ldr	r3, [r3, #4]
  4040c4:	604b      	str	r3, [r1, #4]
  4040c6:	68db      	ldr	r3, [r3, #12]
  4040c8:	6023      	str	r3, [r4, #0]
  4040ca:	bd10      	pop	{r4, pc}
  4040cc:	2040eb80 	.word	0x2040eb80
  4040d0:	2040ebc0 	.word	0x2040ebc0
  4040d4:	2040eb08 	.word	0x2040eb08
  4040d8:	004056b1 	.word	0x004056b1
  4040dc:	2040eb84 	.word	0x2040eb84
  4040e0:	2040eb14 	.word	0x2040eb14

004040e4 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
  4040e4:	2800      	cmp	r0, #0
  4040e6:	d02a      	beq.n	40413e <vTaskPlaceOnEventList+0x5a>
{
  4040e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
  4040ec:	4d21      	ldr	r5, [pc, #132]	; (404174 <vTaskPlaceOnEventList+0x90>)
  4040ee:	460c      	mov	r4, r1
  4040f0:	4e21      	ldr	r6, [pc, #132]	; (404178 <vTaskPlaceOnEventList+0x94>)
  4040f2:	6829      	ldr	r1, [r5, #0]
  4040f4:	3118      	adds	r1, #24
  4040f6:	47b0      	blx	r6


static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
  4040f8:	4a20      	ldr	r2, [pc, #128]	; (40417c <vTaskPlaceOnEventList+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
  4040fa:	4b21      	ldr	r3, [pc, #132]	; (404180 <vTaskPlaceOnEventList+0x9c>)
const TickType_t xConstTickCount = xTickCount;
  4040fc:	6817      	ldr	r7, [r2, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
  4040fe:	6828      	ldr	r0, [r5, #0]
  404100:	3004      	adds	r0, #4
  404102:	4798      	blx	r3
  404104:	b940      	cbnz	r0, 404118 <vTaskPlaceOnEventList+0x34>
	{
		/* The current task must be in a ready list, so there is no need to
		check, and the port reset macro can be called directly. */
		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
  404106:	682b      	ldr	r3, [r5, #0]
  404108:	2201      	movs	r2, #1
  40410a:	491e      	ldr	r1, [pc, #120]	; (404184 <vTaskPlaceOnEventList+0xa0>)
  40410c:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
  40410e:	680b      	ldr	r3, [r1, #0]
  404110:	4082      	lsls	r2, r0
  404112:	ea23 0302 	bic.w	r3, r3, r2
  404116:	600b      	str	r3, [r1, #0]
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
  404118:	1c63      	adds	r3, r4, #1
  40411a:	d01b      	beq.n	404154 <vTaskPlaceOnEventList+0x70>
		else
		{
			/* Calculate the time at which the task should be woken if the event
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;
  40411c:	443c      	add	r4, r7

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
  40411e:	682b      	ldr	r3, [r5, #0]

			if( xTimeToWake < xConstTickCount )
  404120:	42a7      	cmp	r7, r4
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
  404122:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
  404124:	d81d      	bhi.n	404162 <vTaskPlaceOnEventList+0x7e>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
  404126:	4b18      	ldr	r3, [pc, #96]	; (404188 <vTaskPlaceOnEventList+0xa4>)
  404128:	6818      	ldr	r0, [r3, #0]
  40412a:	6829      	ldr	r1, [r5, #0]
  40412c:	3104      	adds	r1, #4
  40412e:	47b0      	blx	r6

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
  404130:	4b16      	ldr	r3, [pc, #88]	; (40418c <vTaskPlaceOnEventList+0xa8>)
  404132:	681a      	ldr	r2, [r3, #0]
  404134:	4294      	cmp	r4, r2
  404136:	d200      	bcs.n	40413a <vTaskPlaceOnEventList+0x56>
				{
					xNextTaskUnblockTime = xTimeToWake;
  404138:	601c      	str	r4, [r3, #0]
  40413a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40413e:	f04f 0380 	mov.w	r3, #128	; 0x80
  404142:	b672      	cpsid	i
  404144:	f383 8811 	msr	BASEPRI, r3
  404148:	f3bf 8f6f 	isb	sy
  40414c:	f3bf 8f4f 	dsb	sy
  404150:	b662      	cpsie	i
  404152:	e7fe      	b.n	404152 <vTaskPlaceOnEventList+0x6e>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
  404154:	6829      	ldr	r1, [r5, #0]
  404156:	480e      	ldr	r0, [pc, #56]	; (404190 <vTaskPlaceOnEventList+0xac>)
  404158:	3104      	adds	r1, #4
  40415a:	4b0e      	ldr	r3, [pc, #56]	; (404194 <vTaskPlaceOnEventList+0xb0>)
}
  40415c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
  404160:	4718      	bx	r3
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
  404162:	4b0d      	ldr	r3, [pc, #52]	; (404198 <vTaskPlaceOnEventList+0xb4>)
  404164:	6818      	ldr	r0, [r3, #0]
  404166:	4633      	mov	r3, r6
  404168:	6829      	ldr	r1, [r5, #0]
}
  40416a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
  40416e:	3104      	adds	r1, #4
  404170:	4718      	bx	r3
  404172:	bf00      	nop
  404174:	2040eb08 	.word	0x2040eb08
  404178:	004033fd 	.word	0x004033fd
  40417c:	2040ebbc 	.word	0x2040ebbc
  404180:	00403431 	.word	0x00403431
  404184:	2040eb84 	.word	0x2040eb84
  404188:	2040eb0c 	.word	0x2040eb0c
  40418c:	2040eb88 	.word	0x2040eb88
  404190:	2040eba8 	.word	0x2040eba8
  404194:	004033e5 	.word	0x004033e5
  404198:	2040eb10 	.word	0x2040eb10

0040419c <xTaskRemoveFromEventList>:
{
  40419c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
  40419e:	68c3      	ldr	r3, [r0, #12]
  4041a0:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
  4041a2:	b31c      	cbz	r4, 4041ec <xTaskRemoveFromEventList+0x50>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
  4041a4:	f104 0518 	add.w	r5, r4, #24
  4041a8:	4f19      	ldr	r7, [pc, #100]	; (404210 <xTaskRemoveFromEventList+0x74>)
  4041aa:	4628      	mov	r0, r5
  4041ac:	47b8      	blx	r7
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
  4041ae:	4b19      	ldr	r3, [pc, #100]	; (404214 <xTaskRemoveFromEventList+0x78>)
  4041b0:	681b      	ldr	r3, [r3, #0]
  4041b2:	bb43      	cbnz	r3, 404206 <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
  4041b4:	1d26      	adds	r6, r4, #4
		prvAddTaskToReadyList( pxUnblockedTCB );
  4041b6:	4d18      	ldr	r5, [pc, #96]	; (404218 <xTaskRemoveFromEventList+0x7c>)
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
  4041b8:	4630      	mov	r0, r6
  4041ba:	47b8      	blx	r7
		prvAddTaskToReadyList( pxUnblockedTCB );
  4041bc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
  4041be:	2301      	movs	r3, #1
  4041c0:	4816      	ldr	r0, [pc, #88]	; (40421c <xTaskRemoveFromEventList+0x80>)
  4041c2:	eb02 0782 	add.w	r7, r2, r2, lsl #2
  4041c6:	4631      	mov	r1, r6
  4041c8:	4093      	lsls	r3, r2
  4041ca:	682a      	ldr	r2, [r5, #0]
  4041cc:	eb00 0087 	add.w	r0, r0, r7, lsl #2
  4041d0:	4313      	orrs	r3, r2
  4041d2:	4a13      	ldr	r2, [pc, #76]	; (404220 <xTaskRemoveFromEventList+0x84>)
  4041d4:	602b      	str	r3, [r5, #0]
  4041d6:	4790      	blx	r2
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
  4041d8:	4b12      	ldr	r3, [pc, #72]	; (404224 <xTaskRemoveFromEventList+0x88>)
  4041da:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
  4041dc:	681b      	ldr	r3, [r3, #0]
  4041de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  4041e0:	429a      	cmp	r2, r3
  4041e2:	d90e      	bls.n	404202 <xTaskRemoveFromEventList+0x66>
		xYieldPending = pdTRUE;
  4041e4:	4b10      	ldr	r3, [pc, #64]	; (404228 <xTaskRemoveFromEventList+0x8c>)
  4041e6:	2001      	movs	r0, #1
  4041e8:	6018      	str	r0, [r3, #0]
  4041ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4041ec:	f04f 0380 	mov.w	r3, #128	; 0x80
  4041f0:	b672      	cpsid	i
  4041f2:	f383 8811 	msr	BASEPRI, r3
  4041f6:	f3bf 8f6f 	isb	sy
  4041fa:	f3bf 8f4f 	dsb	sy
  4041fe:	b662      	cpsie	i
  404200:	e7fe      	b.n	404200 <xTaskRemoveFromEventList+0x64>
		xReturn = pdFALSE;
  404202:	2000      	movs	r0, #0
}
  404204:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
  404206:	4629      	mov	r1, r5
  404208:	4808      	ldr	r0, [pc, #32]	; (40422c <xTaskRemoveFromEventList+0x90>)
  40420a:	4b05      	ldr	r3, [pc, #20]	; (404220 <xTaskRemoveFromEventList+0x84>)
  40420c:	4798      	blx	r3
  40420e:	e7e3      	b.n	4041d8 <xTaskRemoveFromEventList+0x3c>
  404210:	00403431 	.word	0x00403431
  404214:	2040eb80 	.word	0x2040eb80
  404218:	2040eb84 	.word	0x2040eb84
  40421c:	2040eb14 	.word	0x2040eb14
  404220:	004033e5 	.word	0x004033e5
  404224:	2040eb08 	.word	0x2040eb08
  404228:	2040ebc0 	.word	0x2040ebc0
  40422c:	2040eb90 	.word	0x2040eb90

00404230 <vTaskRemoveFromUnorderedEventList>:
{
  404230:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended != pdFALSE );
  404232:	4b1e      	ldr	r3, [pc, #120]	; (4042ac <vTaskRemoveFromUnorderedEventList+0x7c>)
  404234:	681b      	ldr	r3, [r3, #0]
  404236:	b953      	cbnz	r3, 40424e <vTaskRemoveFromUnorderedEventList+0x1e>
  404238:	f04f 0380 	mov.w	r3, #128	; 0x80
  40423c:	b672      	cpsid	i
  40423e:	f383 8811 	msr	BASEPRI, r3
  404242:	f3bf 8f6f 	isb	sy
  404246:	f3bf 8f4f 	dsb	sy
  40424a:	b662      	cpsie	i
  40424c:	e7fe      	b.n	40424c <vTaskRemoveFromUnorderedEventList+0x1c>
	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
  40424e:	f041 4100 	orr.w	r1, r1, #2147483648	; 0x80000000
	pxUnblockedTCB = ( TCB_t * ) listGET_LIST_ITEM_OWNER( pxEventListItem );
  404252:	68c4      	ldr	r4, [r0, #12]
	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
  404254:	6001      	str	r1, [r0, #0]
	configASSERT( pxUnblockedTCB );
  404256:	b1ec      	cbz	r4, 404294 <vTaskRemoveFromUnorderedEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
  404258:	1d26      	adds	r6, r4, #4
	( void ) uxListRemove( pxEventListItem );
  40425a:	4f15      	ldr	r7, [pc, #84]	; (4042b0 <vTaskRemoveFromUnorderedEventList+0x80>)
  40425c:	47b8      	blx	r7
	prvAddTaskToReadyList( pxUnblockedTCB );
  40425e:	2501      	movs	r5, #1
	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
  404260:	4630      	mov	r0, r6
  404262:	47b8      	blx	r7
	prvAddTaskToReadyList( pxUnblockedTCB );
  404264:	4a13      	ldr	r2, [pc, #76]	; (4042b4 <vTaskRemoveFromUnorderedEventList+0x84>)
  404266:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  404268:	4631      	mov	r1, r6
  40426a:	6816      	ldr	r6, [r2, #0]
  40426c:	fa05 f300 	lsl.w	r3, r5, r0
  404270:	4f11      	ldr	r7, [pc, #68]	; (4042b8 <vTaskRemoveFromUnorderedEventList+0x88>)
  404272:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  404276:	4333      	orrs	r3, r6
  404278:	4e10      	ldr	r6, [pc, #64]	; (4042bc <vTaskRemoveFromUnorderedEventList+0x8c>)
  40427a:	eb07 0080 	add.w	r0, r7, r0, lsl #2
  40427e:	6013      	str	r3, [r2, #0]
  404280:	47b0      	blx	r6
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
  404282:	4b0f      	ldr	r3, [pc, #60]	; (4042c0 <vTaskRemoveFromUnorderedEventList+0x90>)
  404284:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
  404286:	681b      	ldr	r3, [r3, #0]
  404288:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  40428a:	429a      	cmp	r2, r3
  40428c:	d901      	bls.n	404292 <vTaskRemoveFromUnorderedEventList+0x62>
		xYieldPending = pdTRUE;
  40428e:	4b0d      	ldr	r3, [pc, #52]	; (4042c4 <vTaskRemoveFromUnorderedEventList+0x94>)
  404290:	601d      	str	r5, [r3, #0]
  404292:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404294:	f04f 0380 	mov.w	r3, #128	; 0x80
  404298:	b672      	cpsid	i
  40429a:	f383 8811 	msr	BASEPRI, r3
  40429e:	f3bf 8f6f 	isb	sy
  4042a2:	f3bf 8f4f 	dsb	sy
  4042a6:	b662      	cpsie	i
  4042a8:	e7fe      	b.n	4042a8 <vTaskRemoveFromUnorderedEventList+0x78>
  4042aa:	bf00      	nop
  4042ac:	2040eb80 	.word	0x2040eb80
  4042b0:	00403431 	.word	0x00403431
  4042b4:	2040eb84 	.word	0x2040eb84
  4042b8:	2040eb14 	.word	0x2040eb14
  4042bc:	004033e5 	.word	0x004033e5
  4042c0:	2040eb08 	.word	0x2040eb08
  4042c4:	2040ebc0 	.word	0x2040ebc0

004042c8 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
  4042c8:	4a03      	ldr	r2, [pc, #12]	; (4042d8 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
  4042ca:	4b04      	ldr	r3, [pc, #16]	; (4042dc <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
  4042cc:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
  4042ce:	681b      	ldr	r3, [r3, #0]
  4042d0:	e880 000c 	stmia.w	r0, {r2, r3}
  4042d4:	4770      	bx	lr
  4042d6:	bf00      	nop
  4042d8:	2040eb8c 	.word	0x2040eb8c
  4042dc:	2040ebbc 	.word	0x2040ebbc

004042e0 <xTaskCheckForTimeOut>:
{
  4042e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	configASSERT( pxTimeOut );
  4042e2:	2800      	cmp	r0, #0
  4042e4:	d02d      	beq.n	404342 <xTaskCheckForTimeOut+0x62>
	configASSERT( pxTicksToWait );
  4042e6:	b309      	cbz	r1, 40432c <xTaskCheckForTimeOut+0x4c>
  4042e8:	460d      	mov	r5, r1
	taskENTER_CRITICAL();
  4042ea:	4b22      	ldr	r3, [pc, #136]	; (404374 <xTaskCheckForTimeOut+0x94>)
  4042ec:	4604      	mov	r4, r0
  4042ee:	4798      	blx	r3
			if( *pxTicksToWait == portMAX_DELAY )
  4042f0:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
  4042f2:	f8df e08c 	ldr.w	lr, [pc, #140]	; 404380 <xTaskCheckForTimeOut+0xa0>
			if( *pxTicksToWait == portMAX_DELAY )
  4042f6:	1c59      	adds	r1, r3, #1
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
  4042f8:	6866      	ldr	r6, [r4, #4]
		const TickType_t xConstTickCount = xTickCount;
  4042fa:	f8de 2000 	ldr.w	r2, [lr]
			if( *pxTicksToWait == portMAX_DELAY )
  4042fe:	d037      	beq.n	404370 <xTaskCheckForTimeOut+0x90>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
  404300:	481d      	ldr	r0, [pc, #116]	; (404378 <xTaskCheckForTimeOut+0x98>)
  404302:	6821      	ldr	r1, [r4, #0]
  404304:	6807      	ldr	r7, [r0, #0]
  404306:	42b9      	cmp	r1, r7
  404308:	d006      	beq.n	404318 <xTaskCheckForTimeOut+0x38>
  40430a:	42b2      	cmp	r2, r6
  40430c:	d304      	bcc.n	404318 <xTaskCheckForTimeOut+0x38>
			xReturn = pdTRUE;
  40430e:	2601      	movs	r6, #1
	taskEXIT_CRITICAL();
  404310:	4b1a      	ldr	r3, [pc, #104]	; (40437c <xTaskCheckForTimeOut+0x9c>)
  404312:	4798      	blx	r3
}
  404314:	4630      	mov	r0, r6
  404316:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
  404318:	1b92      	subs	r2, r2, r6
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
  40431a:	429a      	cmp	r2, r3
  40431c:	d31c      	bcc.n	404358 <xTaskCheckForTimeOut+0x78>
			*pxTicksToWait = 0;
  40431e:	2300      	movs	r3, #0
			xReturn = pdTRUE;
  404320:	2601      	movs	r6, #1
			*pxTicksToWait = 0;
  404322:	602b      	str	r3, [r5, #0]
	taskEXIT_CRITICAL();
  404324:	4b15      	ldr	r3, [pc, #84]	; (40437c <xTaskCheckForTimeOut+0x9c>)
  404326:	4798      	blx	r3
}
  404328:	4630      	mov	r0, r6
  40432a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40432c:	f04f 0380 	mov.w	r3, #128	; 0x80
  404330:	b672      	cpsid	i
  404332:	f383 8811 	msr	BASEPRI, r3
  404336:	f3bf 8f6f 	isb	sy
  40433a:	f3bf 8f4f 	dsb	sy
  40433e:	b662      	cpsie	i
  404340:	e7fe      	b.n	404340 <xTaskCheckForTimeOut+0x60>
  404342:	f04f 0380 	mov.w	r3, #128	; 0x80
  404346:	b672      	cpsid	i
  404348:	f383 8811 	msr	BASEPRI, r3
  40434c:	f3bf 8f6f 	isb	sy
  404350:	f3bf 8f4f 	dsb	sy
  404354:	b662      	cpsie	i
  404356:	e7fe      	b.n	404356 <xTaskCheckForTimeOut+0x76>
	pxTimeOut->xOverflowCount = xNumOfOverflows;
  404358:	6800      	ldr	r0, [r0, #0]
			*pxTicksToWait -= xElapsedTime;
  40435a:	1a9b      	subs	r3, r3, r2
	pxTimeOut->xTimeOnEntering = xTickCount;
  40435c:	f8de 2000 	ldr.w	r2, [lr]
			xReturn = pdFALSE;
  404360:	2600      	movs	r6, #0
			*pxTicksToWait -= xElapsedTime;
  404362:	602b      	str	r3, [r5, #0]
	taskEXIT_CRITICAL();
  404364:	4b05      	ldr	r3, [pc, #20]	; (40437c <xTaskCheckForTimeOut+0x9c>)
	pxTimeOut->xTimeOnEntering = xTickCount;
  404366:	e884 0005 	stmia.w	r4, {r0, r2}
	taskEXIT_CRITICAL();
  40436a:	4798      	blx	r3
}
  40436c:	4630      	mov	r0, r6
  40436e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				xReturn = pdFALSE;
  404370:	2600      	movs	r6, #0
  404372:	e7cd      	b.n	404310 <xTaskCheckForTimeOut+0x30>
  404374:	00403485 	.word	0x00403485
  404378:	2040eb8c 	.word	0x2040eb8c
  40437c:	004034d1 	.word	0x004034d1
  404380:	2040ebbc 	.word	0x2040ebbc

00404384 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
  404384:	4b01      	ldr	r3, [pc, #4]	; (40438c <vTaskMissedYield+0x8>)
  404386:	2201      	movs	r2, #1
  404388:	601a      	str	r2, [r3, #0]
  40438a:	4770      	bx	lr
  40438c:	2040ebc0 	.word	0x2040ebc0

00404390 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
  404390:	4b05      	ldr	r3, [pc, #20]	; (4043a8 <xTaskGetSchedulerState+0x18>)
  404392:	681b      	ldr	r3, [r3, #0]
  404394:	b133      	cbz	r3, 4043a4 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
  404396:	4b05      	ldr	r3, [pc, #20]	; (4043ac <xTaskGetSchedulerState+0x1c>)
  404398:	681b      	ldr	r3, [r3, #0]
  40439a:	2b00      	cmp	r3, #0
				xReturn = taskSCHEDULER_SUSPENDED;
  40439c:	bf0c      	ite	eq
  40439e:	2002      	moveq	r0, #2
  4043a0:	2000      	movne	r0, #0
  4043a2:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
  4043a4:	2001      	movs	r0, #1
	}
  4043a6:	4770      	bx	lr
  4043a8:	2040eba4 	.word	0x2040eba4
  4043ac:	2040eb80 	.word	0x2040eb80

004043b0 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
  4043b0:	2800      	cmp	r0, #0
  4043b2:	d042      	beq.n	40443a <xTaskPriorityDisinherit+0x8a>
	{
  4043b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
			configASSERT( pxTCB == pxCurrentTCB );
  4043b6:	4b2b      	ldr	r3, [pc, #172]	; (404464 <xTaskPriorityDisinherit+0xb4>)
  4043b8:	681b      	ldr	r3, [r3, #0]
  4043ba:	4298      	cmp	r0, r3
  4043bc:	d00a      	beq.n	4043d4 <xTaskPriorityDisinherit+0x24>
  4043be:	f04f 0380 	mov.w	r3, #128	; 0x80
  4043c2:	b672      	cpsid	i
  4043c4:	f383 8811 	msr	BASEPRI, r3
  4043c8:	f3bf 8f6f 	isb	sy
  4043cc:	f3bf 8f4f 	dsb	sy
  4043d0:	b662      	cpsie	i
  4043d2:	e7fe      	b.n	4043d2 <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
  4043d4:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  4043d6:	b953      	cbnz	r3, 4043ee <xTaskPriorityDisinherit+0x3e>
  4043d8:	f04f 0380 	mov.w	r3, #128	; 0x80
  4043dc:	b672      	cpsid	i
  4043de:	f383 8811 	msr	BASEPRI, r3
  4043e2:	f3bf 8f6f 	isb	sy
  4043e6:	f3bf 8f4f 	dsb	sy
  4043ea:	b662      	cpsie	i
  4043ec:	e7fe      	b.n	4043ec <xTaskPriorityDisinherit+0x3c>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
  4043ee:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
			( pxTCB->uxMutexesHeld )--;
  4043f0:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
  4043f2:	6c82      	ldr	r2, [r0, #72]	; 0x48
			( pxTCB->uxMutexesHeld )--;
  4043f4:	64c3      	str	r3, [r0, #76]	; 0x4c
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
  4043f6:	4291      	cmp	r1, r2
  4043f8:	d031      	beq.n	40445e <xTaskPriorityDisinherit+0xae>
  4043fa:	2b00      	cmp	r3, #0
  4043fc:	d12f      	bne.n	40445e <xTaskPriorityDisinherit+0xae>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
  4043fe:	1d07      	adds	r7, r0, #4
  404400:	4604      	mov	r4, r0
  404402:	4b19      	ldr	r3, [pc, #100]	; (404468 <xTaskPriorityDisinherit+0xb8>)
  404404:	4638      	mov	r0, r7
  404406:	4798      	blx	r3
  404408:	b1c8      	cbz	r0, 40443e <xTaskPriorityDisinherit+0x8e>
  40440a:	4818      	ldr	r0, [pc, #96]	; (40446c <xTaskPriorityDisinherit+0xbc>)
  40440c:	4a18      	ldr	r2, [pc, #96]	; (404470 <xTaskPriorityDisinherit+0xc0>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
  40440e:	6ca3      	ldr	r3, [r4, #72]	; 0x48
					prvAddTaskToReadyList( pxTCB );
  404410:	2501      	movs	r5, #1
  404412:	f8d2 e000 	ldr.w	lr, [r2]
  404416:	4639      	mov	r1, r7
  404418:	fa05 f603 	lsl.w	r6, r5, r3
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
  40441c:	f1c3 0705 	rsb	r7, r3, #5
					pxTCB->uxPriority = pxTCB->uxBasePriority;
  404420:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxTCB );
  404422:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  404426:	ea46 060e 	orr.w	r6, r6, lr
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
  40442a:	61a7      	str	r7, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
  40442c:	eb00 0083 	add.w	r0, r0, r3, lsl #2
  404430:	4b10      	ldr	r3, [pc, #64]	; (404474 <xTaskPriorityDisinherit+0xc4>)
  404432:	6016      	str	r6, [r2, #0]
  404434:	4798      	blx	r3
					xReturn = pdTRUE;
  404436:	4628      	mov	r0, r5
	}
  404438:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	BaseType_t xReturn = pdFALSE;
  40443a:	2000      	movs	r0, #0
	}
  40443c:	4770      	bx	lr
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
  40443e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
  404440:	480a      	ldr	r0, [pc, #40]	; (40446c <xTaskPriorityDisinherit+0xbc>)
  404442:	eb06 0386 	add.w	r3, r6, r6, lsl #2
  404446:	4a0a      	ldr	r2, [pc, #40]	; (404470 <xTaskPriorityDisinherit+0xc0>)
  404448:	009b      	lsls	r3, r3, #2
  40444a:	58c3      	ldr	r3, [r0, r3]
  40444c:	2b00      	cmp	r3, #0
  40444e:	d1de      	bne.n	40440e <xTaskPriorityDisinherit+0x5e>
  404450:	2501      	movs	r5, #1
  404452:	6813      	ldr	r3, [r2, #0]
  404454:	40b5      	lsls	r5, r6
  404456:	ea23 0305 	bic.w	r3, r3, r5
  40445a:	6013      	str	r3, [r2, #0]
  40445c:	e7d7      	b.n	40440e <xTaskPriorityDisinherit+0x5e>
	BaseType_t xReturn = pdFALSE;
  40445e:	2000      	movs	r0, #0
  404460:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404462:	bf00      	nop
  404464:	2040eb08 	.word	0x2040eb08
  404468:	00403431 	.word	0x00403431
  40446c:	2040eb14 	.word	0x2040eb14
  404470:	2040eb84 	.word	0x2040eb84
  404474:	004033e5 	.word	0x004033e5

00404478 <xTaskGenericNotifyFromISR>:
	{
  404478:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40447c:	9f08      	ldr	r7, [sp, #32]
		configASSERT( xTaskToNotify );
  40447e:	b368      	cbz	r0, 4044dc <xTaskGenericNotifyFromISR+0x64>
  404480:	4699      	mov	r9, r3
		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
  404482:	4b43      	ldr	r3, [pc, #268]	; (404590 <xTaskGenericNotifyFromISR+0x118>)
  404484:	4604      	mov	r4, r0
  404486:	4615      	mov	r5, r2
  404488:	4688      	mov	r8, r1
  40448a:	4798      	blx	r3
	__asm volatile
  40448c:	f3ef 8611 	mrs	r6, BASEPRI
  404490:	f04f 0380 	mov.w	r3, #128	; 0x80
  404494:	b672      	cpsid	i
  404496:	f383 8811 	msr	BASEPRI, r3
  40449a:	f3bf 8f6f 	isb	sy
  40449e:	f3bf 8f4f 	dsb	sy
  4044a2:	b662      	cpsie	i
			if( pulPreviousNotificationValue != NULL )
  4044a4:	f1b9 0f00 	cmp.w	r9, #0
  4044a8:	d002      	beq.n	4044b0 <xTaskGenericNotifyFromISR+0x38>
				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
  4044aa:	6d23      	ldr	r3, [r4, #80]	; 0x50
  4044ac:	f8c9 3000 	str.w	r3, [r9]
			switch( eAction )
  4044b0:	1e6b      	subs	r3, r5, #1
			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
  4044b2:	2202      	movs	r2, #2
			ucOriginalNotifyState = pxTCB->ucNotifyState;
  4044b4:	f894 5054 	ldrb.w	r5, [r4, #84]	; 0x54
			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
  4044b8:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
			ucOriginalNotifyState = pxTCB->ucNotifyState;
  4044bc:	b2ed      	uxtb	r5, r5
			switch( eAction )
  4044be:	2b03      	cmp	r3, #3
  4044c0:	d805      	bhi.n	4044ce <xTaskGenericNotifyFromISR+0x56>
  4044c2:	e8df f003 	tbb	[pc, r3]
  4044c6:	2327      	.short	0x2327
  4044c8:	2c02      	.short	0x2c02
						pxTCB->ulNotifiedValue = ulValue;
  4044ca:	f8c4 8050 	str.w	r8, [r4, #80]	; 0x50
			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
  4044ce:	2d01      	cmp	r5, #1
  4044d0:	d00f      	beq.n	4044f2 <xTaskGenericNotifyFromISR+0x7a>
	{
  4044d2:	2001      	movs	r0, #1
	__asm volatile
  4044d4:	f386 8811 	msr	BASEPRI, r6
	}
  4044d8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	__asm volatile
  4044dc:	f04f 0380 	mov.w	r3, #128	; 0x80
  4044e0:	b672      	cpsid	i
  4044e2:	f383 8811 	msr	BASEPRI, r3
  4044e6:	f3bf 8f6f 	isb	sy
  4044ea:	f3bf 8f4f 	dsb	sy
  4044ee:	b662      	cpsie	i
  4044f0:	e7fe      	b.n	4044f0 <xTaskGenericNotifyFromISR+0x78>
				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
  4044f2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
  4044f4:	b1d3      	cbz	r3, 40452c <xTaskGenericNotifyFromISR+0xb4>
  4044f6:	f04f 0380 	mov.w	r3, #128	; 0x80
  4044fa:	b672      	cpsid	i
  4044fc:	f383 8811 	msr	BASEPRI, r3
  404500:	f3bf 8f6f 	isb	sy
  404504:	f3bf 8f4f 	dsb	sy
  404508:	b662      	cpsie	i
  40450a:	e7fe      	b.n	40450a <xTaskGenericNotifyFromISR+0x92>
					( pxTCB->ulNotifiedValue )++;
  40450c:	6d23      	ldr	r3, [r4, #80]	; 0x50
  40450e:	3301      	adds	r3, #1
  404510:	6523      	str	r3, [r4, #80]	; 0x50
					break;
  404512:	e7dc      	b.n	4044ce <xTaskGenericNotifyFromISR+0x56>
					pxTCB->ulNotifiedValue |= ulValue;
  404514:	6d23      	ldr	r3, [r4, #80]	; 0x50
  404516:	ea43 0308 	orr.w	r3, r3, r8
  40451a:	6523      	str	r3, [r4, #80]	; 0x50
					break;
  40451c:	e7d7      	b.n	4044ce <xTaskGenericNotifyFromISR+0x56>
					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
  40451e:	2d02      	cmp	r5, #2
  404520:	d1d3      	bne.n	4044ca <xTaskGenericNotifyFromISR+0x52>
						xReturn = pdFAIL;
  404522:	2000      	movs	r0, #0
	__asm volatile
  404524:	f386 8811 	msr	BASEPRI, r6
	}
  404528:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
  40452c:	4b19      	ldr	r3, [pc, #100]	; (404594 <xTaskGenericNotifyFromISR+0x11c>)
  40452e:	681b      	ldr	r3, [r3, #0]
  404530:	bb0b      	cbnz	r3, 404576 <xTaskGenericNotifyFromISR+0xfe>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
  404532:	f104 0804 	add.w	r8, r4, #4
  404536:	4b18      	ldr	r3, [pc, #96]	; (404598 <xTaskGenericNotifyFromISR+0x120>)
  404538:	4640      	mov	r0, r8
  40453a:	4798      	blx	r3
					prvAddTaskToReadyList( pxTCB );
  40453c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  40453e:	4a17      	ldr	r2, [pc, #92]	; (40459c <xTaskGenericNotifyFromISR+0x124>)
  404540:	4641      	mov	r1, r8
  404542:	fa05 f300 	lsl.w	r3, r5, r0
  404546:	f8df e068 	ldr.w	lr, [pc, #104]	; 4045b0 <xTaskGenericNotifyFromISR+0x138>
  40454a:	6815      	ldr	r5, [r2, #0]
  40454c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  404550:	432b      	orrs	r3, r5
  404552:	eb0e 0080 	add.w	r0, lr, r0, lsl #2
  404556:	4d12      	ldr	r5, [pc, #72]	; (4045a0 <xTaskGenericNotifyFromISR+0x128>)
  404558:	6013      	str	r3, [r2, #0]
  40455a:	47a8      	blx	r5
				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
  40455c:	4b11      	ldr	r3, [pc, #68]	; (4045a4 <xTaskGenericNotifyFromISR+0x12c>)
  40455e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
  404560:	681b      	ldr	r3, [r3, #0]
  404562:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  404564:	429a      	cmp	r2, r3
  404566:	d9b4      	bls.n	4044d2 <xTaskGenericNotifyFromISR+0x5a>
					if( pxHigherPriorityTaskWoken != NULL )
  404568:	b15f      	cbz	r7, 404582 <xTaskGenericNotifyFromISR+0x10a>
						*pxHigherPriorityTaskWoken = pdTRUE;
  40456a:	2001      	movs	r0, #1
  40456c:	6038      	str	r0, [r7, #0]
  40456e:	f386 8811 	msr	BASEPRI, r6
	}
  404572:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
  404576:	f104 0118 	add.w	r1, r4, #24
  40457a:	480b      	ldr	r0, [pc, #44]	; (4045a8 <xTaskGenericNotifyFromISR+0x130>)
  40457c:	4b08      	ldr	r3, [pc, #32]	; (4045a0 <xTaskGenericNotifyFromISR+0x128>)
  40457e:	4798      	blx	r3
  404580:	e7ec      	b.n	40455c <xTaskGenericNotifyFromISR+0xe4>
						xYieldPending = pdTRUE;
  404582:	4b0a      	ldr	r3, [pc, #40]	; (4045ac <xTaskGenericNotifyFromISR+0x134>)
  404584:	2001      	movs	r0, #1
  404586:	6018      	str	r0, [r3, #0]
  404588:	f386 8811 	msr	BASEPRI, r6
	}
  40458c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404590:	00403599 	.word	0x00403599
  404594:	2040eb80 	.word	0x2040eb80
  404598:	00403431 	.word	0x00403431
  40459c:	2040eb84 	.word	0x2040eb84
  4045a0:	004033e5 	.word	0x004033e5
  4045a4:	2040eb08 	.word	0x2040eb08
  4045a8:	2040eb90 	.word	0x2040eb90
  4045ac:	2040ebc0 	.word	0x2040ebc0
  4045b0:	2040eb14 	.word	0x2040eb14

004045b4 <vTaskNotifyGiveFromISR>:
		configASSERT( xTaskToNotify );
  4045b4:	b308      	cbz	r0, 4045fa <vTaskNotifyGiveFromISR+0x46>
		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
  4045b6:	4b36      	ldr	r3, [pc, #216]	; (404690 <vTaskNotifyGiveFromISR+0xdc>)
	{
  4045b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4045bc:	4604      	mov	r4, r0
  4045be:	460e      	mov	r6, r1
		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
  4045c0:	4798      	blx	r3
	__asm volatile
  4045c2:	f3ef 8711 	mrs	r7, BASEPRI
  4045c6:	f04f 0380 	mov.w	r3, #128	; 0x80
  4045ca:	b672      	cpsid	i
  4045cc:	f383 8811 	msr	BASEPRI, r3
  4045d0:	f3bf 8f6f 	isb	sy
  4045d4:	f3bf 8f4f 	dsb	sy
  4045d8:	b662      	cpsie	i
			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
  4045da:	2302      	movs	r3, #2
			ucOriginalNotifyState = pxTCB->ucNotifyState;
  4045dc:	f894 5054 	ldrb.w	r5, [r4, #84]	; 0x54
			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
  4045e0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
			ucOriginalNotifyState = pxTCB->ucNotifyState;
  4045e4:	b2ed      	uxtb	r5, r5
			( pxTCB->ulNotifiedValue )++;
  4045e6:	6d23      	ldr	r3, [r4, #80]	; 0x50
			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
  4045e8:	2d01      	cmp	r5, #1
			( pxTCB->ulNotifiedValue )++;
  4045ea:	f103 0301 	add.w	r3, r3, #1
  4045ee:	6523      	str	r3, [r4, #80]	; 0x50
			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
  4045f0:	d00e      	beq.n	404610 <vTaskNotifyGiveFromISR+0x5c>
	__asm volatile
  4045f2:	f387 8811 	msr	BASEPRI, r7
  4045f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
  4045fa:	f04f 0380 	mov.w	r3, #128	; 0x80
  4045fe:	b672      	cpsid	i
  404600:	f383 8811 	msr	BASEPRI, r3
  404604:	f3bf 8f6f 	isb	sy
  404608:	f3bf 8f4f 	dsb	sy
  40460c:	b662      	cpsie	i
  40460e:	e7fe      	b.n	40460e <vTaskNotifyGiveFromISR+0x5a>
				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
  404610:	6aa3      	ldr	r3, [r4, #40]	; 0x28
  404612:	b153      	cbz	r3, 40462a <vTaskNotifyGiveFromISR+0x76>
  404614:	f04f 0380 	mov.w	r3, #128	; 0x80
  404618:	b672      	cpsid	i
  40461a:	f383 8811 	msr	BASEPRI, r3
  40461e:	f3bf 8f6f 	isb	sy
  404622:	f3bf 8f4f 	dsb	sy
  404626:	b662      	cpsie	i
  404628:	e7fe      	b.n	404628 <vTaskNotifyGiveFromISR+0x74>
				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
  40462a:	4b1a      	ldr	r3, [pc, #104]	; (404694 <vTaskNotifyGiveFromISR+0xe0>)
  40462c:	681b      	ldr	r3, [r3, #0]
  40462e:	bb0b      	cbnz	r3, 404674 <vTaskNotifyGiveFromISR+0xc0>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
  404630:	f104 0804 	add.w	r8, r4, #4
  404634:	4b18      	ldr	r3, [pc, #96]	; (404698 <vTaskNotifyGiveFromISR+0xe4>)
  404636:	4640      	mov	r0, r8
  404638:	4798      	blx	r3
					prvAddTaskToReadyList( pxTCB );
  40463a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  40463c:	4a17      	ldr	r2, [pc, #92]	; (40469c <vTaskNotifyGiveFromISR+0xe8>)
  40463e:	4641      	mov	r1, r8
  404640:	fa05 f300 	lsl.w	r3, r5, r0
  404644:	f8df e068 	ldr.w	lr, [pc, #104]	; 4046b0 <vTaskNotifyGiveFromISR+0xfc>
  404648:	6815      	ldr	r5, [r2, #0]
  40464a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  40464e:	432b      	orrs	r3, r5
  404650:	eb0e 0080 	add.w	r0, lr, r0, lsl #2
  404654:	4d12      	ldr	r5, [pc, #72]	; (4046a0 <vTaskNotifyGiveFromISR+0xec>)
  404656:	6013      	str	r3, [r2, #0]
  404658:	47a8      	blx	r5
				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
  40465a:	4b12      	ldr	r3, [pc, #72]	; (4046a4 <vTaskNotifyGiveFromISR+0xf0>)
  40465c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
  40465e:	681b      	ldr	r3, [r3, #0]
  404660:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  404662:	429a      	cmp	r2, r3
  404664:	d9c5      	bls.n	4045f2 <vTaskNotifyGiveFromISR+0x3e>
					if( pxHigherPriorityTaskWoken != NULL )
  404666:	b15e      	cbz	r6, 404680 <vTaskNotifyGiveFromISR+0xcc>
						*pxHigherPriorityTaskWoken = pdTRUE;
  404668:	2301      	movs	r3, #1
  40466a:	6033      	str	r3, [r6, #0]
	__asm volatile
  40466c:	f387 8811 	msr	BASEPRI, r7
  404670:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
  404674:	f104 0118 	add.w	r1, r4, #24
  404678:	480b      	ldr	r0, [pc, #44]	; (4046a8 <vTaskNotifyGiveFromISR+0xf4>)
  40467a:	4b09      	ldr	r3, [pc, #36]	; (4046a0 <vTaskNotifyGiveFromISR+0xec>)
  40467c:	4798      	blx	r3
  40467e:	e7ec      	b.n	40465a <vTaskNotifyGiveFromISR+0xa6>
						xYieldPending = pdTRUE;
  404680:	4b0a      	ldr	r3, [pc, #40]	; (4046ac <vTaskNotifyGiveFromISR+0xf8>)
  404682:	2201      	movs	r2, #1
  404684:	601a      	str	r2, [r3, #0]
  404686:	f387 8811 	msr	BASEPRI, r7
  40468a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40468e:	bf00      	nop
  404690:	00403599 	.word	0x00403599
  404694:	2040eb80 	.word	0x2040eb80
  404698:	00403431 	.word	0x00403431
  40469c:	2040eb84 	.word	0x2040eb84
  4046a0:	004033e5 	.word	0x004033e5
  4046a4:	2040eb08 	.word	0x2040eb08
  4046a8:	2040eb90 	.word	0x2040eb90
  4046ac:	2040ebc0 	.word	0x2040ebc0
  4046b0:	2040eb14 	.word	0x2040eb14

004046b4 <xTimerGenericCommand>:
BaseType_t xTimerGenericCommand( TimerHandle_t xTimer, const BaseType_t xCommandID, const TickType_t xOptionalValue, BaseType_t * const pxHigherPriorityTaskWoken, const TickType_t xTicksToWait )
{
BaseType_t xReturn = pdFAIL;
DaemonTaskMessage_t xMessage;

	configASSERT( xTimer );
  4046b4:	b338      	cbz	r0, 404706 <xTimerGenericCommand+0x52>
{
  4046b6:	b570      	push	{r4, r5, r6, lr}

	/* Send a message to the timer service task to perform a particular action
	on a particular timer definition. */
	if( xTimerQueue != NULL )
  4046b8:	4d18      	ldr	r5, [pc, #96]	; (40471c <xTimerGenericCommand+0x68>)
  4046ba:	4604      	mov	r4, r0
{
  4046bc:	b084      	sub	sp, #16
	if( xTimerQueue != NULL )
  4046be:	6828      	ldr	r0, [r5, #0]
  4046c0:	b188      	cbz	r0, 4046e6 <xTimerGenericCommand+0x32>
  4046c2:	4616      	mov	r6, r2
		/* Send a command to the timer service task to start the xTimer timer. */
		xMessage.xMessageID = xCommandID;
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
		xMessage.u.xTimerParameters.pxTimer = ( Timer_t * ) xTimer;

		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
  4046c4:	2905      	cmp	r1, #5
  4046c6:	461a      	mov	r2, r3
  4046c8:	460b      	mov	r3, r1
		xMessage.u.xTimerParameters.pxTimer = ( Timer_t * ) xTimer;
  4046ca:	9402      	str	r4, [sp, #8]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
  4046cc:	e88d 0048 	stmia.w	sp, {r3, r6}
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
  4046d0:	dc0b      	bgt.n	4046ea <xTimerGenericCommand+0x36>
		{
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
  4046d2:	4b13      	ldr	r3, [pc, #76]	; (404720 <xTimerGenericCommand+0x6c>)
  4046d4:	4798      	blx	r3
  4046d6:	2802      	cmp	r0, #2
  4046d8:	d00d      	beq.n	4046f6 <xTimerGenericCommand+0x42>
			{
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
			}
			else
			{
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
  4046da:	2300      	movs	r3, #0
  4046dc:	6828      	ldr	r0, [r5, #0]
  4046de:	4669      	mov	r1, sp
  4046e0:	4c10      	ldr	r4, [pc, #64]	; (404724 <xTimerGenericCommand+0x70>)
  4046e2:	461a      	mov	r2, r3
  4046e4:	47a0      	blx	r4
	{
		mtCOVERAGE_TEST_MARKER();
	}

	return xReturn;
}
  4046e6:	b004      	add	sp, #16
  4046e8:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
  4046ea:	2300      	movs	r3, #0
  4046ec:	4669      	mov	r1, sp
  4046ee:	4c0e      	ldr	r4, [pc, #56]	; (404728 <xTimerGenericCommand+0x74>)
  4046f0:	47a0      	blx	r4
}
  4046f2:	b004      	add	sp, #16
  4046f4:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
  4046f6:	2300      	movs	r3, #0
  4046f8:	9a08      	ldr	r2, [sp, #32]
  4046fa:	4669      	mov	r1, sp
  4046fc:	4c09      	ldr	r4, [pc, #36]	; (404724 <xTimerGenericCommand+0x70>)
  4046fe:	6828      	ldr	r0, [r5, #0]
  404700:	47a0      	blx	r4
}
  404702:	b004      	add	sp, #16
  404704:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
  404706:	f04f 0380 	mov.w	r3, #128	; 0x80
  40470a:	b672      	cpsid	i
  40470c:	f383 8811 	msr	BASEPRI, r3
  404710:	f3bf 8f6f 	isb	sy
  404714:	f3bf 8f4f 	dsb	sy
  404718:	b662      	cpsie	i
  40471a:	e7fe      	b.n	40471a <xTimerGenericCommand+0x66>
  40471c:	2040ebc4 	.word	0x2040ebc4
  404720:	00404391 	.word	0x00404391
  404724:	004038bd 	.word	0x004038bd
  404728:	00403aa5 	.word	0x00403aa5

0040472c <xTimerPendFunctionCallFromISR>:
/*-----------------------------------------------------------*/

#if( INCLUDE_xTimerPendFunctionCall == 1 )

	BaseType_t xTimerPendFunctionCallFromISR( PendedFunction_t xFunctionToPend, void *pvParameter1, uint32_t ulParameter2, BaseType_t *pxHigherPriorityTaskWoken )
	{
  40472c:	b570      	push	{r4, r5, r6, lr}
  40472e:	461e      	mov	r6, r3
  404730:	b084      	sub	sp, #16
		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK_FROM_ISR;
		xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
		xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
		xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;

		xReturn = xQueueSendFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
  404732:	4c07      	ldr	r4, [pc, #28]	; (404750 <xTimerPendFunctionCallFromISR+0x24>)
		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK_FROM_ISR;
  404734:	f06f 0501 	mvn.w	r5, #1
		xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
  404738:	9001      	str	r0, [sp, #4]
		xReturn = xQueueSendFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
  40473a:	2300      	movs	r3, #0
		xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
  40473c:	9102      	str	r1, [sp, #8]
		xReturn = xQueueSendFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
  40473e:	4669      	mov	r1, sp
		xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
  404740:	9203      	str	r2, [sp, #12]
		xReturn = xQueueSendFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
  404742:	4632      	mov	r2, r6
  404744:	6820      	ldr	r0, [r4, #0]
  404746:	4c03      	ldr	r4, [pc, #12]	; (404754 <xTimerPendFunctionCallFromISR+0x28>)
		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK_FROM_ISR;
  404748:	9500      	str	r5, [sp, #0]
		xReturn = xQueueSendFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
  40474a:	47a0      	blx	r4

		tracePEND_FUNC_CALL_FROM_ISR( xFunctionToPend, pvParameter1, ulParameter2, xReturn );

		return xReturn;
	}
  40474c:	b004      	add	sp, #16
  40474e:	bd70      	pop	{r4, r5, r6, pc}
  404750:	2040ebc4 	.word	0x2040ebc4
  404754:	00403aa5 	.word	0x00403aa5

00404758 <vPeriodicEventGroupsProcessing>:
	return xError;
}
/*-----------------------------------------------------------*/

void vPeriodicEventGroupsProcessing( void )
{
  404758:	b510      	push	{r4, lr}
BaseType_t xMessagePosted;

	/* Called periodically from the tick hook to exercise the "FromISR"
	functions. */

	xCallCount++;
  40475a:	4c1e      	ldr	r4, [pc, #120]	; (4047d4 <vPeriodicEventGroupsProcessing+0x7c>)
  40475c:	6823      	ldr	r3, [r4, #0]
  40475e:	3301      	adds	r3, #1

	if( xCallCount == xSetBitCount )
  404760:	2b64      	cmp	r3, #100	; 0x64
	xCallCount++;
  404762:	6023      	str	r3, [r4, #0]
	if( xCallCount == xSetBitCount )
  404764:	d012      	beq.n	40478c <vPeriodicEventGroupsProcessing+0x34>
			{
				xISRTestError = pdTRUE;
			}
		}
	}
	else if( xCallCount == xGetBitsCount )
  404766:	2bc8      	cmp	r3, #200	; 0xc8
  404768:	d019      	beq.n	40479e <vPeriodicEventGroupsProcessing+0x46>
		if( uxReturned != uxBitsToSet )
		{
			xISRTestError = pdTRUE;
		}
	}
	else if( xCallCount == xClearBitsCount )
  40476a:	f5b3 7f96 	cmp.w	r3, #300	; 0x12c
  40476e:	d000      	beq.n	404772 <vPeriodicEventGroupsProcessing+0x1a>
  404770:	bd10      	pop	{r4, pc}
	{
		/* Clear the bits again. */
		uxReturned = ( EventBits_t ) xEventGroupClearBitsFromISR( xISREventGroup, uxBitsToSet );
  404772:	4a19      	ldr	r2, [pc, #100]	; (4047d8 <vPeriodicEventGroupsProcessing+0x80>)
  404774:	2112      	movs	r1, #18
  404776:	4b19      	ldr	r3, [pc, #100]	; (4047dc <vPeriodicEventGroupsProcessing+0x84>)
  404778:	6810      	ldr	r0, [r2, #0]
  40477a:	4798      	blx	r3

		/* Check the message was posted. */
		if( uxReturned != pdPASS )
  40477c:	2801      	cmp	r0, #1
  40477e:	d01d      	beq.n	4047bc <vPeriodicEventGroupsProcessing+0x64>
		{
			xISRTestError = pdTRUE;
  404780:	4a17      	ldr	r2, [pc, #92]	; (4047e0 <vPeriodicEventGroupsProcessing+0x88>)
  404782:	2101      	movs	r1, #1
		}

		/* Go back to the start. */
		xCallCount = 0;
  404784:	2300      	movs	r3, #0
			xISRTestError = pdTRUE;
  404786:	6011      	str	r1, [r2, #0]
		xCallCount = 0;
  404788:	6023      	str	r3, [r4, #0]
  40478a:	bd10      	pop	{r4, pc}
		uxReturned = xEventGroupGetBitsFromISR( xISREventGroup );
  40478c:	4c12      	ldr	r4, [pc, #72]	; (4047d8 <vPeriodicEventGroupsProcessing+0x80>)
  40478e:	4b15      	ldr	r3, [pc, #84]	; (4047e4 <vPeriodicEventGroupsProcessing+0x8c>)
  404790:	6820      	ldr	r0, [r4, #0]
  404792:	4798      	blx	r3
		if( uxReturned != 0x00 )
  404794:	b150      	cbz	r0, 4047ac <vPeriodicEventGroupsProcessing+0x54>
			xISRTestError = pdTRUE;
  404796:	4b12      	ldr	r3, [pc, #72]	; (4047e0 <vPeriodicEventGroupsProcessing+0x88>)
  404798:	2201      	movs	r2, #1
  40479a:	601a      	str	r2, [r3, #0]
  40479c:	bd10      	pop	{r4, pc}
		uxReturned = xEventGroupGetBitsFromISR( xISREventGroup );
  40479e:	4a0e      	ldr	r2, [pc, #56]	; (4047d8 <vPeriodicEventGroupsProcessing+0x80>)
  4047a0:	4b10      	ldr	r3, [pc, #64]	; (4047e4 <vPeriodicEventGroupsProcessing+0x8c>)
  4047a2:	6810      	ldr	r0, [r2, #0]
  4047a4:	4798      	blx	r3
		if( uxReturned != uxBitsToSet )
  4047a6:	2812      	cmp	r0, #18
  4047a8:	d1f5      	bne.n	404796 <vPeriodicEventGroupsProcessing+0x3e>
  4047aa:	bd10      	pop	{r4, pc}
			xMessagePosted = xEventGroupSetBitsFromISR( xISREventGroup, uxBitsToSet, NULL );
  4047ac:	4602      	mov	r2, r0
  4047ae:	2112      	movs	r1, #18
  4047b0:	6820      	ldr	r0, [r4, #0]
  4047b2:	4b0d      	ldr	r3, [pc, #52]	; (4047e8 <vPeriodicEventGroupsProcessing+0x90>)
  4047b4:	4798      	blx	r3
			if( xMessagePosted != pdPASS )
  4047b6:	2801      	cmp	r0, #1
  4047b8:	d1ed      	bne.n	404796 <vPeriodicEventGroupsProcessing+0x3e>
  4047ba:	bd10      	pop	{r4, pc}
  4047bc:	4b08      	ldr	r3, [pc, #32]	; (4047e0 <vPeriodicEventGroupsProcessing+0x88>)
		xCallCount = 0;
  4047be:	2200      	movs	r2, #0
  4047c0:	681b      	ldr	r3, [r3, #0]
  4047c2:	6022      	str	r2, [r4, #0]

		/* If no errors have been detected then increment the count of test
		cycles. */
		if( xISRTestError == pdFALSE )
  4047c4:	b923      	cbnz	r3, 4047d0 <vPeriodicEventGroupsProcessing+0x78>
		{
			ulISRCycles++;
  4047c6:	4a09      	ldr	r2, [pc, #36]	; (4047ec <vPeriodicEventGroupsProcessing+0x94>)
  4047c8:	6813      	ldr	r3, [r2, #0]
  4047ca:	3301      	adds	r3, #1
  4047cc:	6013      	str	r3, [r2, #0]
	}
	else
	{
		/* Nothing else to do. */
	}
}
  4047ce:	e7cf      	b.n	404770 <vPeriodicEventGroupsProcessing+0x18>
  4047d0:	bd10      	pop	{r4, pc}
  4047d2:	bf00      	nop
  4047d4:	2040ebcc 	.word	0x2040ebcc
  4047d8:	2040ebd0 	.word	0x2040ebd0
  4047dc:	0040338d 	.word	0x0040338d
  4047e0:	2040ebd4 	.word	0x2040ebd4
  4047e4:	004033a9 	.word	0x004033a9
  4047e8:	004033c9 	.word	0x004033c9
  4047ec:	2040ebc8 	.word	0x2040ebc8

004047f0 <vInterruptSemaphorePeriodicTest>:
	}
}
/*-----------------------------------------------------------*/

void vInterruptSemaphorePeriodicTest( void )
{
  4047f0:	b5f0      	push	{r4, r5, r6, r7, lr}
static TickType_t xLastGiveTime = 0;
BaseType_t xHigherPriorityTaskWoken = pdFALSE;
  4047f2:	2600      	movs	r6, #0
{
  4047f4:	b083      	sub	sp, #12
TickType_t xTimeNow;

	/* No mutual exclusion on xOkToGiveMutex, but this is only test code (and
	only executed on a 32-bit architecture) so ignore that in this case. */
	xTimeNow = xTaskGetTickCountFromISR();
	if( ( ( TickType_t ) ( xTimeNow - xLastGiveTime ) ) >= pdMS_TO_TICKS( intsemINTERRUPT_MUTEX_GIVE_PERIOD_MS ) )
  4047f6:	4c1c      	ldr	r4, [pc, #112]	; (404868 <vInterruptSemaphorePeriodicTest+0x78>)
	xTimeNow = xTaskGetTickCountFromISR();
  4047f8:	4b1c      	ldr	r3, [pc, #112]	; (40486c <vInterruptSemaphorePeriodicTest+0x7c>)
BaseType_t xHigherPriorityTaskWoken = pdFALSE;
  4047fa:	9601      	str	r6, [sp, #4]
	xTimeNow = xTaskGetTickCountFromISR();
  4047fc:	4798      	blx	r3
	if( ( ( TickType_t ) ( xTimeNow - xLastGiveTime ) ) >= pdMS_TO_TICKS( intsemINTERRUPT_MUTEX_GIVE_PERIOD_MS ) )
  4047fe:	6823      	ldr	r3, [r4, #0]
  404800:	1ac3      	subs	r3, r0, r3
  404802:	2b63      	cmp	r3, #99	; 0x63
  404804:	d90a      	bls.n	40481c <vInterruptSemaphorePeriodicTest+0x2c>
	{
		configASSERT( xISRMutex );
  404806:	4f1a      	ldr	r7, [pc, #104]	; (404870 <vInterruptSemaphorePeriodicTest+0x80>)
  404808:	4605      	mov	r5, r0
  40480a:	6838      	ldr	r0, [r7, #0]
  40480c:	b308      	cbz	r0, 404852 <vInterruptSemaphorePeriodicTest+0x62>
		if( xOkToGiveMutex != pdFALSE )
  40480e:	4b19      	ldr	r3, [pc, #100]	; (404874 <vInterruptSemaphorePeriodicTest+0x84>)
  404810:	681b      	ldr	r3, [r3, #0]
  404812:	b92b      	cbnz	r3, 404820 <vInterruptSemaphorePeriodicTest+0x30>

			/* Second give attempt should fail. */
			configASSERT( xSemaphoreGiveFromISR( xISRMutex, &xHigherPriorityTaskWoken ) == pdFAIL );
		}

		if( xOkToGiveCountingSemaphore != pdFALSE )
  404814:	4b18      	ldr	r3, [pc, #96]	; (404878 <vInterruptSemaphorePeriodicTest+0x88>)
  404816:	681b      	ldr	r3, [r3, #0]
  404818:	b9ab      	cbnz	r3, 404846 <vInterruptSemaphorePeriodicTest+0x56>
		{
			xSemaphoreGiveFromISR( xISRCountingSemaphore, &xHigherPriorityTaskWoken );
		}
		xLastGiveTime = xTimeNow;
  40481a:	6025      	str	r5, [r4, #0]
	}

	/* Remove compiler warnings about the value being set but not used. */
	( void ) xHigherPriorityTaskWoken;
}
  40481c:	b003      	add	sp, #12
  40481e:	bdf0      	pop	{r4, r5, r6, r7, pc}
			xSemaphoreGiveFromISR( xISRMutex, NULL );
  404820:	4631      	mov	r1, r6
  404822:	4e16      	ldr	r6, [pc, #88]	; (40487c <vInterruptSemaphorePeriodicTest+0x8c>)
  404824:	47b0      	blx	r6
			configASSERT( xSemaphoreGiveFromISR( xISRMutex, &xHigherPriorityTaskWoken ) == pdFAIL );
  404826:	6838      	ldr	r0, [r7, #0]
  404828:	a901      	add	r1, sp, #4
  40482a:	47b0      	blx	r6
  40482c:	2800      	cmp	r0, #0
  40482e:	d0f1      	beq.n	404814 <vInterruptSemaphorePeriodicTest+0x24>
  404830:	f04f 0380 	mov.w	r3, #128	; 0x80
  404834:	b672      	cpsid	i
  404836:	f383 8811 	msr	BASEPRI, r3
  40483a:	f3bf 8f6f 	isb	sy
  40483e:	f3bf 8f4f 	dsb	sy
  404842:	b662      	cpsie	i
  404844:	e7fe      	b.n	404844 <vInterruptSemaphorePeriodicTest+0x54>
			xSemaphoreGiveFromISR( xISRCountingSemaphore, &xHigherPriorityTaskWoken );
  404846:	4a0e      	ldr	r2, [pc, #56]	; (404880 <vInterruptSemaphorePeriodicTest+0x90>)
  404848:	a901      	add	r1, sp, #4
  40484a:	4b0c      	ldr	r3, [pc, #48]	; (40487c <vInterruptSemaphorePeriodicTest+0x8c>)
  40484c:	6810      	ldr	r0, [r2, #0]
  40484e:	4798      	blx	r3
  404850:	e7e3      	b.n	40481a <vInterruptSemaphorePeriodicTest+0x2a>
  404852:	f04f 0380 	mov.w	r3, #128	; 0x80
  404856:	b672      	cpsid	i
  404858:	f383 8811 	msr	BASEPRI, r3
  40485c:	f3bf 8f6f 	isb	sy
  404860:	f3bf 8f4f 	dsb	sy
  404864:	b662      	cpsie	i
  404866:	e7fe      	b.n	404866 <vInterruptSemaphorePeriodicTest+0x76>
  404868:	2040ebe0 	.word	0x2040ebe0
  40486c:	00403d69 	.word	0x00403d69
  404870:	2040ebdc 	.word	0x2040ebdc
  404874:	2040ebe8 	.word	0x2040ebe8
  404878:	2040ebe4 	.word	0x2040ebe4
  40487c:	00403ba9 	.word	0x00403ba9
  404880:	2040ebd8 	.word	0x2040ebd8

00404884 <vQueueOverwritePeriodicISRDemo>:
	return xReturn;
}
/*-----------------------------------------------------------*/

void vQueueOverwritePeriodicISRDemo( void )
{
  404884:	b570      	push	{r4, r5, r6, lr}
uint32_t ulRx;

	/* This function should be called from an interrupt, such as the tick hook
	function vApplicationTickHook(). */

	configASSERT( xISRQueue );
  404886:	4d21      	ldr	r5, [pc, #132]	; (40490c <vQueueOverwritePeriodicISRDemo+0x88>)
{
  404888:	b084      	sub	sp, #16
const uint32_t ulTx1 = 10UL, ulTx2 = 20UL, ulNumberOfSwitchCases = 3UL;
  40488a:	220a      	movs	r2, #10
  40488c:	2314      	movs	r3, #20
	configASSERT( xISRQueue );
  40488e:	6828      	ldr	r0, [r5, #0]
const uint32_t ulTx1 = 10UL, ulTx2 = 20UL, ulNumberOfSwitchCases = 3UL;
  404890:	9201      	str	r2, [sp, #4]
  404892:	9302      	str	r3, [sp, #8]
	configASSERT( xISRQueue );
  404894:	2800      	cmp	r0, #0
  404896:	d02d      	beq.n	4048f4 <vQueueOverwritePeriodicISRDemo+0x70>

	switch( ulCallCount )
  404898:	4c1d      	ldr	r4, [pc, #116]	; (404910 <vQueueOverwritePeriodicISRDemo+0x8c>)
  40489a:	6823      	ldr	r3, [r4, #0]
  40489c:	2b01      	cmp	r3, #1
  40489e:	d022      	beq.n	4048e6 <vQueueOverwritePeriodicISRDemo+0x62>
  4048a0:	d313      	bcc.n	4048ca <vQueueOverwritePeriodicISRDemo+0x46>
  4048a2:	2b02      	cmp	r3, #2
  4048a4:	d10a      	bne.n	4048bc <vQueueOverwritePeriodicISRDemo+0x38>
			break;

		case 2:
			/* Read from the queue to empty the queue again.  The value read
			should be ulTx2. */
			xQueueReceiveFromISR( xISRQueue, &ulRx, NULL );
  4048a6:	4b1b      	ldr	r3, [pc, #108]	; (404914 <vQueueOverwritePeriodicISRDemo+0x90>)
  4048a8:	2200      	movs	r2, #0
  4048aa:	a903      	add	r1, sp, #12
  4048ac:	4798      	blx	r3

			if( ulRx != ulTx2 )
  4048ae:	9b03      	ldr	r3, [sp, #12]
  4048b0:	2b14      	cmp	r3, #20
  4048b2:	d016      	beq.n	4048e2 <vQueueOverwritePeriodicISRDemo+0x5e>
			{
				xISRTestStatus = pdFAIL;
  4048b4:	4a18      	ldr	r2, [pc, #96]	; (404918 <vQueueOverwritePeriodicISRDemo+0x94>)
  4048b6:	2100      	movs	r1, #0
  4048b8:	6823      	ldr	r3, [r4, #0]
  4048ba:	6011      	str	r1, [r2, #0]
			break;
	}

	/* Run the next case in the switch statement above next time this function
	is called. */
	ulCallCount++;
  4048bc:	3301      	adds	r3, #1

	if( ulCallCount >= ulNumberOfSwitchCases )
  4048be:	2b02      	cmp	r3, #2
	{
		/* Go back to the start. */
		ulCallCount = 0;
  4048c0:	bf88      	it	hi
  4048c2:	2300      	movhi	r3, #0
  4048c4:	6023      	str	r3, [r4, #0]
	}
}
  4048c6:	b004      	add	sp, #16
  4048c8:	bd70      	pop	{r4, r5, r6, pc}
			xQueueOverwriteFromISR( xISRQueue, &ulTx1, NULL );
  4048ca:	2302      	movs	r3, #2
  4048cc:	2200      	movs	r2, #0
  4048ce:	a901      	add	r1, sp, #4
  4048d0:	4e12      	ldr	r6, [pc, #72]	; (40491c <vQueueOverwritePeriodicISRDemo+0x98>)
  4048d2:	47b0      	blx	r6
			xQueuePeekFromISR( xISRQueue, &ulRx );
  4048d4:	4b12      	ldr	r3, [pc, #72]	; (404920 <vQueueOverwritePeriodicISRDemo+0x9c>)
  4048d6:	6828      	ldr	r0, [r5, #0]
  4048d8:	a903      	add	r1, sp, #12
  4048da:	4798      	blx	r3
			if( ulRx != ulTx1 )
  4048dc:	9b03      	ldr	r3, [sp, #12]
  4048de:	2b0a      	cmp	r3, #10
  4048e0:	d1e8      	bne.n	4048b4 <vQueueOverwritePeriodicISRDemo+0x30>
  4048e2:	6823      	ldr	r3, [r4, #0]
			break;
  4048e4:	e7ea      	b.n	4048bc <vQueueOverwritePeriodicISRDemo+0x38>
			xQueueOverwriteFromISR( xISRQueue, &ulTx2, NULL );
  4048e6:	2302      	movs	r3, #2
  4048e8:	2200      	movs	r2, #0
  4048ea:	a902      	add	r1, sp, #8
  4048ec:	4d0b      	ldr	r5, [pc, #44]	; (40491c <vQueueOverwritePeriodicISRDemo+0x98>)
  4048ee:	47a8      	blx	r5
  4048f0:	6823      	ldr	r3, [r4, #0]
  4048f2:	e7e3      	b.n	4048bc <vQueueOverwritePeriodicISRDemo+0x38>
  4048f4:	f04f 0380 	mov.w	r3, #128	; 0x80
  4048f8:	b672      	cpsid	i
  4048fa:	f383 8811 	msr	BASEPRI, r3
  4048fe:	f3bf 8f6f 	isb	sy
  404902:	f3bf 8f4f 	dsb	sy
  404906:	b662      	cpsie	i
  404908:	e7fe      	b.n	404908 <vQueueOverwritePeriodicISRDemo+0x84>
  40490a:	bf00      	nop
  40490c:	2040ebf0 	.word	0x2040ebf0
  404910:	2040ebec 	.word	0x2040ebec
  404914:	00403c85 	.word	0x00403c85
  404918:	20400034 	.word	0x20400034
  40491c:	00403aa5 	.word	0x00403aa5
  404920:	00403cc5 	.word	0x00403cc5

00404924 <xNotifyTaskFromISR>:

	/* The task performs some tests before starting the timer that gives the
	notification from this interrupt.  If the timer has not been created yet
	then the initial tests have not yet completed and the notification should
	not be sent. */
	if( xTimer != NULL )
  404924:	4b24      	ldr	r3, [pc, #144]	; (4049b8 <xNotifyTaskFromISR+0x94>)
  404926:	681b      	ldr	r3, [r3, #0]
  404928:	b1eb      	cbz	r3, 404966 <xNotifyTaskFromISR+0x42>
	{
		xCallCount++;
  40492a:	4924      	ldr	r1, [pc, #144]	; (4049bc <xNotifyTaskFromISR+0x98>)
  40492c:	680b      	ldr	r3, [r1, #0]
  40492e:	3301      	adds	r3, #1

		if( xCallCount >= xCallInterval )
  404930:	2b31      	cmp	r3, #49	; 0x31
  404932:	dd19      	ble.n	404968 <xNotifyTaskFromISR+0x44>
{
  404934:	b570      	push	{r4, r5, r6, lr}
			/* It is time to 'give' the notification again. */
			xCallCount = 0;

			/* Test using both vTaskNotifyGiveFromISR(), xTaskNotifyFromISR()
			and xTaskNotifyAndQueryFromISR(). */
			switch( xAPIToUse )
  404936:	4c22      	ldr	r4, [pc, #136]	; (4049c0 <xNotifyTaskFromISR+0x9c>)
			xCallCount = 0;
  404938:	2500      	movs	r5, #0
{
  40493a:	b084      	sub	sp, #16
			switch( xAPIToUse )
  40493c:	6822      	ldr	r2, [r4, #0]
			xCallCount = 0;
  40493e:	600d      	str	r5, [r1, #0]
			switch( xAPIToUse )
  404940:	2a01      	cmp	r2, #1
  404942:	d013      	beq.n	40496c <xNotifyTaskFromISR+0x48>
  404944:	2a02      	cmp	r2, #2
  404946:	d01d      	beq.n	404984 <xNotifyTaskFromISR+0x60>
  404948:	b93a      	cbnz	r2, 40495a <xNotifyTaskFromISR+0x36>
			{
				case 0:	vTaskNotifyGiveFromISR( xTaskToNotify, NULL );
  40494a:	481e      	ldr	r0, [pc, #120]	; (4049c4 <xNotifyTaskFromISR+0xa0>)
  40494c:	4611      	mov	r1, r2
  40494e:	4b1e      	ldr	r3, [pc, #120]	; (4049c8 <xNotifyTaskFromISR+0xa4>)
  404950:	6800      	ldr	r0, [r0, #0]
  404952:	4798      	blx	r3
						xAPIToUse++;
  404954:	6823      	ldr	r3, [r4, #0]
  404956:	3301      	adds	r3, #1
  404958:	6023      	str	r3, [r4, #0]

				default:/* Should never get here!. */
						break;
			}

			ulTimerNotificationsSent++;
  40495a:	4a1c      	ldr	r2, [pc, #112]	; (4049cc <xNotifyTaskFromISR+0xa8>)
  40495c:	6813      	ldr	r3, [r2, #0]
  40495e:	3301      	adds	r3, #1
  404960:	6013      	str	r3, [r2, #0]
		}
	}
}
  404962:	b004      	add	sp, #16
  404964:	bd70      	pop	{r4, r5, r6, pc}
  404966:	4770      	bx	lr
		xCallCount++;
  404968:	600b      	str	r3, [r1, #0]
  40496a:	4770      	bx	lr
				case 1:	xTaskNotifyFromISR( xTaskToNotify, 0, eIncrement, NULL );
  40496c:	4a15      	ldr	r2, [pc, #84]	; (4049c4 <xNotifyTaskFromISR+0xa0>)
  40496e:	462b      	mov	r3, r5
  404970:	9500      	str	r5, [sp, #0]
  404972:	4629      	mov	r1, r5
  404974:	6810      	ldr	r0, [r2, #0]
  404976:	2202      	movs	r2, #2
  404978:	4d15      	ldr	r5, [pc, #84]	; (4049d0 <xNotifyTaskFromISR+0xac>)
  40497a:	47a8      	blx	r5
						xAPIToUse++;
  40497c:	6823      	ldr	r3, [r4, #0]
  40497e:	3301      	adds	r3, #1
  404980:	6023      	str	r3, [r4, #0]
						break;
  404982:	e7ea      	b.n	40495a <xNotifyTaskFromISR+0x36>
				case 2: ulPreviousValue = ulUnexpectedValue;
  404984:	ab04      	add	r3, sp, #16
  404986:	21ff      	movs	r1, #255	; 0xff
						xTaskNotifyAndQueryFromISR( xTaskToNotify, 0, eIncrement, &ulPreviousValue, NULL );
  404988:	480e      	ldr	r0, [pc, #56]	; (4049c4 <xNotifyTaskFromISR+0xa0>)
  40498a:	9500      	str	r5, [sp, #0]
  40498c:	4e10      	ldr	r6, [pc, #64]	; (4049d0 <xNotifyTaskFromISR+0xac>)
				case 2: ulPreviousValue = ulUnexpectedValue;
  40498e:	f843 1d04 	str.w	r1, [r3, #-4]!
						xTaskNotifyAndQueryFromISR( xTaskToNotify, 0, eIncrement, &ulPreviousValue, NULL );
  404992:	4629      	mov	r1, r5
  404994:	6800      	ldr	r0, [r0, #0]
  404996:	47b0      	blx	r6
						configASSERT( ulPreviousValue != ulUnexpectedValue );
  404998:	9b03      	ldr	r3, [sp, #12]
  40499a:	2bff      	cmp	r3, #255	; 0xff
  40499c:	d001      	beq.n	4049a2 <xNotifyTaskFromISR+0x7e>
						xAPIToUse = 0;
  40499e:	6025      	str	r5, [r4, #0]
						break;
  4049a0:	e7db      	b.n	40495a <xNotifyTaskFromISR+0x36>
  4049a2:	f04f 0380 	mov.w	r3, #128	; 0x80
  4049a6:	b672      	cpsid	i
  4049a8:	f383 8811 	msr	BASEPRI, r3
  4049ac:	f3bf 8f6f 	isb	sy
  4049b0:	f3bf 8f4f 	dsb	sy
  4049b4:	b662      	cpsie	i
  4049b6:	e7fe      	b.n	4049b6 <xNotifyTaskFromISR+0x92>
  4049b8:	2040ec04 	.word	0x2040ec04
  4049bc:	2040ebfc 	.word	0x2040ebfc
  4049c0:	2040ebf8 	.word	0x2040ebf8
  4049c4:	2040ec00 	.word	0x2040ec00
  4049c8:	004045b5 	.word	0x004045b5
  4049cc:	2040ebf4 	.word	0x2040ebf4
  4049d0:	00404479 	.word	0x00404479

004049d4 <vTimerPeriodicISRTests>:
	}
}
/*-----------------------------------------------------------*/

void vTimerPeriodicISRTests( void )
{
  4049d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
		const TickType_t xMargin = 4;
	#endif /* _WINDOWS_ */
#endif


	uxTick++;
  4049d8:	4dab      	ldr	r5, [pc, #684]	; (404c88 <vTimerPeriodicISRTests+0x2b4>)
{
  4049da:	b082      	sub	sp, #8
	uxTick++;
  4049dc:	682c      	ldr	r4, [r5, #0]
  4049de:	3401      	adds	r4, #1
  4049e0:	602c      	str	r4, [r5, #0]

	if( uxTick == 0 )
  4049e2:	2c00      	cmp	r4, #0
  4049e4:	d063      	beq.n	404aae <vTimerPeriodicISRTests+0xda>
				again. */
				xTimerStopFromISR( xISRAutoReloadTimer, NULL );
			}
		}
	}
	else if( uxTick == ( xBasePeriod - xMargin ) )
  4049e6:	4ba9      	ldr	r3, [pc, #676]	; (404c8c <vTimerPeriodicISRTests+0x2b8>)
  4049e8:	681b      	ldr	r3, [r3, #0]
  4049ea:	1f1a      	subs	r2, r3, #4
  4049ec:	4294      	cmp	r4, r2
  4049ee:	d079      	beq.n	404ae4 <vTimerPeriodicISRTests+0x110>
		{
			xTestStatus = pdFAIL;
			configASSERT( xTestStatus );
		}
	}
	else if( uxTick == ( xBasePeriod + xMargin ) )
  4049f0:	1d1a      	adds	r2, r3, #4
  4049f2:	4294      	cmp	r4, r2
  4049f4:	f000 808f 	beq.w	404b16 <vTimerPeriodicISRTests+0x142>
		{
			xTestStatus = pdFAIL;
			configASSERT( xTestStatus );
		}
	}
	else if( uxTick == ( ( 2 * xBasePeriod ) - xMargin ) )
  4049f8:	4aa5      	ldr	r2, [pc, #660]	; (404c90 <vTimerPeriodicISRTests+0x2bc>)
  4049fa:	441a      	add	r2, r3
  4049fc:	0052      	lsls	r2, r2, #1
  4049fe:	4294      	cmp	r4, r2
  404a00:	f000 80eb 	beq.w	404bda <vTimerPeriodicISRTests+0x206>
		{
			xTestStatus = pdFAIL;
			configASSERT( xTestStatus );
		}
	}
	else if( uxTick == ( ( 2 * xBasePeriod ) + xMargin ) )
  404a04:	f102 0108 	add.w	r1, r2, #8
  404a08:	428c      	cmp	r4, r1
  404a0a:	f000 80bd 	beq.w	404b88 <vTimerPeriodicISRTests+0x1b4>
		{
			xTestStatus = pdFAIL;
			configASSERT( xTestStatus );
		}
	}
	else if( uxTick == ( ( 2 * xBasePeriod ) + ( xBasePeriod >> ( TickType_t ) 2U ) ) )
  404a0e:	3204      	adds	r2, #4
  404a10:	eb02 0293 	add.w	r2, r2, r3, lsr #2
  404a14:	4294      	cmp	r4, r2
  404a16:	f000 8094 	beq.w	404b42 <vTimerPeriodicISRTests+0x16e>
		{
			xTestStatus = pdFAIL;
			configASSERT( xTestStatus );
		}
	}
	else if( uxTick == ( 3 * xBasePeriod ) )
  404a1a:	005a      	lsls	r2, r3, #1
  404a1c:	18d1      	adds	r1, r2, r3
  404a1e:	428c      	cmp	r4, r1
  404a20:	f000 8250 	beq.w	404ec4 <vTimerPeriodicISRTests+0x4f0>
	{
		/* Start the one shot timer again. */
		xTimerStartFromISR( xISROneShotTimer, NULL );
	}
	else if( uxTick == ( ( 3 * xBasePeriod ) + xMargin ) )
  404a24:	3104      	adds	r1, #4
  404a26:	428c      	cmp	r4, r1
  404a28:	f000 828f 	beq.w	404f4a <vTimerPeriodicISRTests+0x576>

		/* Now stop the auto reload timer.  The one shot timer was started
		a few ticks ago. */
		xTimerStopFromISR( xISRAutoReloadTimer, NULL );
	}
	else if( uxTick == ( 4 * ( xBasePeriod - xMargin ) ) )
  404a2c:	4999      	ldr	r1, [pc, #612]	; (404c94 <vTimerPeriodicISRTests+0x2c0>)
  404a2e:	4419      	add	r1, r3
  404a30:	0089      	lsls	r1, r1, #2
  404a32:	428c      	cmp	r4, r1
  404a34:	f000 8252 	beq.w	404edc <vTimerPeriodicISRTests+0x508>
		{
			xTestStatus = pdFAIL;
			configASSERT( xTestStatus );
		}
	}
	else if( uxTick == ( ( 4 * xBasePeriod ) + xMargin ) )
  404a38:	3114      	adds	r1, #20
  404a3a:	428c      	cmp	r4, r1
  404a3c:	f000 818c 	beq.w	404d58 <vTimerPeriodicISRTests+0x384>
		{
			xTestStatus = pdFAIL;
			configASSERT( xTestStatus );
		}
	}
	else if( uxTick == ( 8 * xBasePeriod ) )
  404a40:	00d9      	lsls	r1, r3, #3
  404a42:	428c      	cmp	r4, r1
  404a44:	f000 815f 	beq.w	404d06 <vTimerPeriodicISRTests+0x332>
		}

		/* Now reset the one shot timer. */
		xTimerResetFromISR( xISROneShotTimer, NULL );
	}
	else if( uxTick == ( ( 9 * xBasePeriod ) - xMargin ) )
  404a48:	4419      	add	r1, r3
  404a4a:	3904      	subs	r1, #4
  404a4c:	428c      	cmp	r4, r1
  404a4e:	f000 8131 	beq.w	404cb4 <vTimerPeriodicISRTests+0x2e0>
			configASSERT( xTestStatus );
		}

		xTimerResetFromISR( xISROneShotTimer, NULL );
	}
	else if( uxTick == ( ( 10 * xBasePeriod ) - ( 2 * xMargin ) ) )
  404a52:	eb03 0183 	add.w	r1, r3, r3, lsl #2
  404a56:	0049      	lsls	r1, r1, #1
  404a58:	f1a1 0008 	sub.w	r0, r1, #8
  404a5c:	4284      	cmp	r4, r0
  404a5e:	f000 80de 	beq.w	404c1e <vTimerPeriodicISRTests+0x24a>
			configASSERT( xTestStatus );
		}

		xTimerResetFromISR( xISROneShotTimer, NULL );
	}
	else if( uxTick == ( ( 11 * xBasePeriod ) - ( 3 * xMargin ) ) )
  404a62:	4419      	add	r1, r3
  404a64:	390c      	subs	r1, #12
  404a66:	428c      	cmp	r4, r1
  404a68:	f000 81cc 	beq.w	404e04 <vTimerPeriodicISRTests+0x430>
			configASSERT( xTestStatus );
		}

		xTimerResetFromISR( xISROneShotTimer, NULL );
	}
	else if( uxTick == ( ( 12 * xBasePeriod ) - ( 2 * xMargin ) ) )
  404a6c:	441a      	add	r2, r3
  404a6e:	0092      	lsls	r2, r2, #2
  404a70:	3a08      	subs	r2, #8
  404a72:	4294      	cmp	r4, r2
  404a74:	f000 819b 	beq.w	404dae <vTimerPeriodicISRTests+0x3da>
		{
			xTestStatus = pdFAIL;
			configASSERT( xTestStatus );
		}
	}
	else if( uxTick == ( 15 * xBasePeriod ) )
  404a78:	ebc3 1303 	rsb	r3, r3, r3, lsl #4
  404a7c:	429c      	cmp	r4, r3
  404a7e:	d12e      	bne.n	404ade <vTimerPeriodicISRTests+0x10a>
	{
		/* Neither timer should be running now.  Check neither callback count
		has incremented, then go back to the start to run these tests all
		over again. */
		if( ucISRAutoReloadTimerCounter != 3 )
  404a80:	4b85      	ldr	r3, [pc, #532]	; (404c98 <vTimerPeriodicISRTests+0x2c4>)
  404a82:	781b      	ldrb	r3, [r3, #0]
  404a84:	2b03      	cmp	r3, #3
  404a86:	f000 8205 	beq.w	404e94 <vTimerPeriodicISRTests+0x4c0>
		{
			xTestStatus = pdFAIL;
  404a8a:	4b84      	ldr	r3, [pc, #528]	; (404c9c <vTimerPeriodicISRTests+0x2c8>)
  404a8c:	2200      	movs	r2, #0
  404a8e:	601a      	str	r2, [r3, #0]
			configASSERT( xTestStatus );
  404a90:	681b      	ldr	r3, [r3, #0]
  404a92:	2b00      	cmp	r3, #0
  404a94:	f040 81fe 	bne.w	404e94 <vTimerPeriodicISRTests+0x4c0>
  404a98:	f04f 0380 	mov.w	r3, #128	; 0x80
  404a9c:	b672      	cpsid	i
  404a9e:	f383 8811 	msr	BASEPRI, r3
  404aa2:	f3bf 8f6f 	isb	sy
  404aa6:	f3bf 8f4f 	dsb	sy
  404aaa:	b662      	cpsie	i
  404aac:	e7fe      	b.n	404aac <vTimerPeriodicISRTests+0xd8>
		ucISRAutoReloadTimerCounter = 0;
  404aae:	f8df e1e8 	ldr.w	lr, [pc, #488]	; 404c98 <vTimerPeriodicISRTests+0x2c4>
		uxTick = ( TickType_t ) -1;
  404ab2:	f04f 36ff 	mov.w	r6, #4294967295
		if( xTimerChangePeriodFromISR( xISRAutoReloadTimer, xBasePeriod, NULL ) == pdPASS )
  404ab6:	4f7a      	ldr	r7, [pc, #488]	; (404ca0 <vTimerPeriodicISRTests+0x2cc>)
  404ab8:	4623      	mov	r3, r4
  404aba:	f8df 81d0 	ldr.w	r8, [pc, #464]	; 404c8c <vTimerPeriodicISRTests+0x2b8>
  404abe:	2109      	movs	r1, #9
  404ac0:	6838      	ldr	r0, [r7, #0]
  404ac2:	9400      	str	r4, [sp, #0]
		ucISRAutoReloadTimerCounter = 0;
  404ac4:	f88e 4000 	strb.w	r4, [lr]
		ucISROneShotTimerCounter = 0;
  404ac8:	f8df e1dc 	ldr.w	lr, [pc, #476]	; 404ca8 <vTimerPeriodicISRTests+0x2d4>
		uxTick = ( TickType_t ) -1;
  404acc:	602e      	str	r6, [r5, #0]
		if( xTimerChangePeriodFromISR( xISRAutoReloadTimer, xBasePeriod, NULL ) == pdPASS )
  404ace:	f8d8 2000 	ldr.w	r2, [r8]
  404ad2:	4e74      	ldr	r6, [pc, #464]	; (404ca4 <vTimerPeriodicISRTests+0x2d0>)
		ucISROneShotTimerCounter = 0;
  404ad4:	f88e 4000 	strb.w	r4, [lr]
		if( xTimerChangePeriodFromISR( xISRAutoReloadTimer, xBasePeriod, NULL ) == pdPASS )
  404ad8:	47b0      	blx	r6
  404ada:	2801      	cmp	r0, #1
  404adc:	d048      	beq.n	404b70 <vTimerPeriodicISRTests+0x19c>
			configASSERT( xTestStatus );
		}

		uxTick = ( TickType_t ) -1;
	}
}
  404ade:	b002      	add	sp, #8
  404ae0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		if( ( ucISRAutoReloadTimerCounter != 0 ) || ( ucISROneShotTimerCounter != 0 ) )
  404ae4:	4b6c      	ldr	r3, [pc, #432]	; (404c98 <vTimerPeriodicISRTests+0x2c4>)
  404ae6:	781b      	ldrb	r3, [r3, #0]
  404ae8:	b183      	cbz	r3, 404b0c <vTimerPeriodicISRTests+0x138>
			xTestStatus = pdFAIL;
  404aea:	4b6c      	ldr	r3, [pc, #432]	; (404c9c <vTimerPeriodicISRTests+0x2c8>)
  404aec:	2200      	movs	r2, #0
  404aee:	601a      	str	r2, [r3, #0]
			configASSERT( xTestStatus );
  404af0:	681b      	ldr	r3, [r3, #0]
  404af2:	2b00      	cmp	r3, #0
  404af4:	d1f3      	bne.n	404ade <vTimerPeriodicISRTests+0x10a>
  404af6:	f04f 0380 	mov.w	r3, #128	; 0x80
  404afa:	b672      	cpsid	i
  404afc:	f383 8811 	msr	BASEPRI, r3
  404b00:	f3bf 8f6f 	isb	sy
  404b04:	f3bf 8f4f 	dsb	sy
  404b08:	b662      	cpsie	i
  404b0a:	e7fe      	b.n	404b0a <vTimerPeriodicISRTests+0x136>
		if( ( ucISRAutoReloadTimerCounter != 0 ) || ( ucISROneShotTimerCounter != 0 ) )
  404b0c:	4b66      	ldr	r3, [pc, #408]	; (404ca8 <vTimerPeriodicISRTests+0x2d4>)
  404b0e:	781b      	ldrb	r3, [r3, #0]
  404b10:	2b00      	cmp	r3, #0
  404b12:	d1ea      	bne.n	404aea <vTimerPeriodicISRTests+0x116>
  404b14:	e7e3      	b.n	404ade <vTimerPeriodicISRTests+0x10a>
		if( ( ucISRAutoReloadTimerCounter != 1 ) || ( ucISROneShotTimerCounter != 1 ) )
  404b16:	4b60      	ldr	r3, [pc, #384]	; (404c98 <vTimerPeriodicISRTests+0x2c4>)
  404b18:	781b      	ldrb	r3, [r3, #0]
  404b1a:	2b01      	cmp	r3, #1
  404b1c:	f000 81b4 	beq.w	404e88 <vTimerPeriodicISRTests+0x4b4>
			xTestStatus = pdFAIL;
  404b20:	4b5e      	ldr	r3, [pc, #376]	; (404c9c <vTimerPeriodicISRTests+0x2c8>)
  404b22:	2200      	movs	r2, #0
  404b24:	601a      	str	r2, [r3, #0]
			configASSERT( xTestStatus );
  404b26:	681b      	ldr	r3, [r3, #0]
  404b28:	2b00      	cmp	r3, #0
  404b2a:	d1d8      	bne.n	404ade <vTimerPeriodicISRTests+0x10a>
  404b2c:	f04f 0380 	mov.w	r3, #128	; 0x80
  404b30:	b672      	cpsid	i
  404b32:	f383 8811 	msr	BASEPRI, r3
  404b36:	f3bf 8f6f 	isb	sy
  404b3a:	f3bf 8f4f 	dsb	sy
  404b3e:	b662      	cpsie	i
  404b40:	e7fe      	b.n	404b40 <vTimerPeriodicISRTests+0x16c>
		if( ucISRAutoReloadTimerCounter != 2 )
  404b42:	4b55      	ldr	r3, [pc, #340]	; (404c98 <vTimerPeriodicISRTests+0x2c4>)
  404b44:	781b      	ldrb	r3, [r3, #0]
  404b46:	2b02      	cmp	r3, #2
  404b48:	f000 8187 	beq.w	404e5a <vTimerPeriodicISRTests+0x486>
			xTestStatus = pdFAIL;
  404b4c:	4b53      	ldr	r3, [pc, #332]	; (404c9c <vTimerPeriodicISRTests+0x2c8>)
  404b4e:	2200      	movs	r2, #0
  404b50:	601a      	str	r2, [r3, #0]
			configASSERT( xTestStatus );
  404b52:	681b      	ldr	r3, [r3, #0]
  404b54:	2b00      	cmp	r3, #0
  404b56:	f040 8180 	bne.w	404e5a <vTimerPeriodicISRTests+0x486>
  404b5a:	f04f 0380 	mov.w	r3, #128	; 0x80
  404b5e:	b672      	cpsid	i
  404b60:	f383 8811 	msr	BASEPRI, r3
  404b64:	f3bf 8f6f 	isb	sy
  404b68:	f3bf 8f4f 	dsb	sy
  404b6c:	b662      	cpsie	i
  404b6e:	e7fe      	b.n	404b6e <vTimerPeriodicISRTests+0x19a>
			if( xTimerChangePeriodFromISR( xISROneShotTimer, xBasePeriod, NULL ) == pdPASS )
  404b70:	484e      	ldr	r0, [pc, #312]	; (404cac <vTimerPeriodicISRTests+0x2d8>)
  404b72:	4623      	mov	r3, r4
  404b74:	f8d8 2000 	ldr.w	r2, [r8]
  404b78:	2109      	movs	r1, #9
  404b7a:	6800      	ldr	r0, [r0, #0]
  404b7c:	9400      	str	r4, [sp, #0]
  404b7e:	47b0      	blx	r6
  404b80:	2801      	cmp	r0, #1
  404b82:	d145      	bne.n	404c10 <vTimerPeriodicISRTests+0x23c>
				uxTick = 0;
  404b84:	602c      	str	r4, [r5, #0]
  404b86:	e7aa      	b.n	404ade <vTimerPeriodicISRTests+0x10a>
		if( ucISRAutoReloadTimerCounter != 2 )
  404b88:	4b43      	ldr	r3, [pc, #268]	; (404c98 <vTimerPeriodicISRTests+0x2c4>)
  404b8a:	781b      	ldrb	r3, [r3, #0]
  404b8c:	2b02      	cmp	r3, #2
  404b8e:	d00f      	beq.n	404bb0 <vTimerPeriodicISRTests+0x1dc>
			xTestStatus = pdFAIL;
  404b90:	4b42      	ldr	r3, [pc, #264]	; (404c9c <vTimerPeriodicISRTests+0x2c8>)
  404b92:	2200      	movs	r2, #0
  404b94:	601a      	str	r2, [r3, #0]
			configASSERT( xTestStatus );
  404b96:	681b      	ldr	r3, [r3, #0]
  404b98:	b953      	cbnz	r3, 404bb0 <vTimerPeriodicISRTests+0x1dc>
  404b9a:	f04f 0380 	mov.w	r3, #128	; 0x80
  404b9e:	b672      	cpsid	i
  404ba0:	f383 8811 	msr	BASEPRI, r3
  404ba4:	f3bf 8f6f 	isb	sy
  404ba8:	f3bf 8f4f 	dsb	sy
  404bac:	b662      	cpsie	i
  404bae:	e7fe      	b.n	404bae <vTimerPeriodicISRTests+0x1da>
		if( ucISROneShotTimerCounter != 1 )
  404bb0:	4b3d      	ldr	r3, [pc, #244]	; (404ca8 <vTimerPeriodicISRTests+0x2d4>)
  404bb2:	781b      	ldrb	r3, [r3, #0]
  404bb4:	2b01      	cmp	r3, #1
  404bb6:	d092      	beq.n	404ade <vTimerPeriodicISRTests+0x10a>
			xTestStatus = pdFAIL;
  404bb8:	4b38      	ldr	r3, [pc, #224]	; (404c9c <vTimerPeriodicISRTests+0x2c8>)
  404bba:	2200      	movs	r2, #0
  404bbc:	601a      	str	r2, [r3, #0]
			configASSERT( xTestStatus );
  404bbe:	681b      	ldr	r3, [r3, #0]
  404bc0:	2b00      	cmp	r3, #0
  404bc2:	d18c      	bne.n	404ade <vTimerPeriodicISRTests+0x10a>
  404bc4:	f04f 0380 	mov.w	r3, #128	; 0x80
  404bc8:	b672      	cpsid	i
  404bca:	f383 8811 	msr	BASEPRI, r3
  404bce:	f3bf 8f6f 	isb	sy
  404bd2:	f3bf 8f4f 	dsb	sy
  404bd6:	b662      	cpsie	i
  404bd8:	e7fe      	b.n	404bd8 <vTimerPeriodicISRTests+0x204>
		if( ( ucISRAutoReloadTimerCounter != 1 ) || ( ucISROneShotTimerCounter != 1 ) )
  404bda:	4b2f      	ldr	r3, [pc, #188]	; (404c98 <vTimerPeriodicISRTests+0x2c4>)
  404bdc:	781b      	ldrb	r3, [r3, #0]
  404bde:	2b01      	cmp	r3, #1
  404be0:	d011      	beq.n	404c06 <vTimerPeriodicISRTests+0x232>
			xTestStatus = pdFAIL;
  404be2:	4b2e      	ldr	r3, [pc, #184]	; (404c9c <vTimerPeriodicISRTests+0x2c8>)
  404be4:	2200      	movs	r2, #0
  404be6:	601a      	str	r2, [r3, #0]
			configASSERT( xTestStatus );
  404be8:	681b      	ldr	r3, [r3, #0]
  404bea:	2b00      	cmp	r3, #0
  404bec:	f47f af77 	bne.w	404ade <vTimerPeriodicISRTests+0x10a>
  404bf0:	f04f 0380 	mov.w	r3, #128	; 0x80
  404bf4:	b672      	cpsid	i
  404bf6:	f383 8811 	msr	BASEPRI, r3
  404bfa:	f3bf 8f6f 	isb	sy
  404bfe:	f3bf 8f4f 	dsb	sy
  404c02:	b662      	cpsie	i
  404c04:	e7fe      	b.n	404c04 <vTimerPeriodicISRTests+0x230>
		if( ( ucISRAutoReloadTimerCounter != 1 ) || ( ucISROneShotTimerCounter != 1 ) )
  404c06:	4b28      	ldr	r3, [pc, #160]	; (404ca8 <vTimerPeriodicISRTests+0x2d4>)
  404c08:	781b      	ldrb	r3, [r3, #0]
  404c0a:	2b01      	cmp	r3, #1
  404c0c:	d1e9      	bne.n	404be2 <vTimerPeriodicISRTests+0x20e>
  404c0e:	e766      	b.n	404ade <vTimerPeriodicISRTests+0x10a>
				xTimerStopFromISR( xISRAutoReloadTimer, NULL );
  404c10:	6838      	ldr	r0, [r7, #0]
  404c12:	4623      	mov	r3, r4
  404c14:	9400      	str	r4, [sp, #0]
  404c16:	4622      	mov	r2, r4
  404c18:	2108      	movs	r1, #8
  404c1a:	47b0      	blx	r6
  404c1c:	e75f      	b.n	404ade <vTimerPeriodicISRTests+0x10a>
		if( ucISRAutoReloadTimerCounter != 3 )
  404c1e:	4b1e      	ldr	r3, [pc, #120]	; (404c98 <vTimerPeriodicISRTests+0x2c4>)
  404c20:	781b      	ldrb	r3, [r3, #0]
  404c22:	2b03      	cmp	r3, #3
  404c24:	d00f      	beq.n	404c46 <vTimerPeriodicISRTests+0x272>
			xTestStatus = pdFAIL;
  404c26:	4b1d      	ldr	r3, [pc, #116]	; (404c9c <vTimerPeriodicISRTests+0x2c8>)
  404c28:	2200      	movs	r2, #0
  404c2a:	601a      	str	r2, [r3, #0]
			configASSERT( xTestStatus );
  404c2c:	681b      	ldr	r3, [r3, #0]
  404c2e:	b953      	cbnz	r3, 404c46 <vTimerPeriodicISRTests+0x272>
  404c30:	f04f 0380 	mov.w	r3, #128	; 0x80
  404c34:	b672      	cpsid	i
  404c36:	f383 8811 	msr	BASEPRI, r3
  404c3a:	f3bf 8f6f 	isb	sy
  404c3e:	f3bf 8f4f 	dsb	sy
  404c42:	b662      	cpsie	i
  404c44:	e7fe      	b.n	404c44 <vTimerPeriodicISRTests+0x270>
		if( ucISROneShotTimerCounter != 2 )
  404c46:	4b18      	ldr	r3, [pc, #96]	; (404ca8 <vTimerPeriodicISRTests+0x2d4>)
  404c48:	781b      	ldrb	r3, [r3, #0]
  404c4a:	2b02      	cmp	r3, #2
  404c4c:	d00f      	beq.n	404c6e <vTimerPeriodicISRTests+0x29a>
			xTestStatus = pdFAIL;
  404c4e:	4b13      	ldr	r3, [pc, #76]	; (404c9c <vTimerPeriodicISRTests+0x2c8>)
  404c50:	2200      	movs	r2, #0
  404c52:	601a      	str	r2, [r3, #0]
			configASSERT( xTestStatus );
  404c54:	681b      	ldr	r3, [r3, #0]
  404c56:	b953      	cbnz	r3, 404c6e <vTimerPeriodicISRTests+0x29a>
  404c58:	f04f 0380 	mov.w	r3, #128	; 0x80
  404c5c:	b672      	cpsid	i
  404c5e:	f383 8811 	msr	BASEPRI, r3
  404c62:	f3bf 8f6f 	isb	sy
  404c66:	f3bf 8f4f 	dsb	sy
  404c6a:	b662      	cpsie	i
  404c6c:	e7fe      	b.n	404c6c <vTimerPeriodicISRTests+0x298>
		xTimerResetFromISR( xISROneShotTimer, NULL );
  404c6e:	4a0f      	ldr	r2, [pc, #60]	; (404cac <vTimerPeriodicISRTests+0x2d8>)
  404c70:	4b0f      	ldr	r3, [pc, #60]	; (404cb0 <vTimerPeriodicISRTests+0x2dc>)
  404c72:	6814      	ldr	r4, [r2, #0]
  404c74:	4798      	blx	r3
  404c76:	2300      	movs	r3, #0
  404c78:	4602      	mov	r2, r0
  404c7a:	2107      	movs	r1, #7
  404c7c:	4620      	mov	r0, r4
  404c7e:	9300      	str	r3, [sp, #0]
  404c80:	4c08      	ldr	r4, [pc, #32]	; (404ca4 <vTimerPeriodicISRTests+0x2d0>)
  404c82:	47a0      	blx	r4
  404c84:	e72b      	b.n	404ade <vTimerPeriodicISRTests+0x10a>
  404c86:	bf00      	nop
  404c88:	20400038 	.word	0x20400038
  404c8c:	2040ec0c 	.word	0x2040ec0c
  404c90:	7ffffffe 	.word	0x7ffffffe
  404c94:	3ffffffc 	.word	0x3ffffffc
  404c98:	2040ec08 	.word	0x2040ec08
  404c9c:	2040003c 	.word	0x2040003c
  404ca0:	2040ec10 	.word	0x2040ec10
  404ca4:	004046b5 	.word	0x004046b5
  404ca8:	2040ec09 	.word	0x2040ec09
  404cac:	2040ec14 	.word	0x2040ec14
  404cb0:	00403d69 	.word	0x00403d69
		if( ucISRAutoReloadTimerCounter != 3 )
  404cb4:	4b93      	ldr	r3, [pc, #588]	; (404f04 <vTimerPeriodicISRTests+0x530>)
  404cb6:	781b      	ldrb	r3, [r3, #0]
  404cb8:	2b03      	cmp	r3, #3
  404cba:	d00f      	beq.n	404cdc <vTimerPeriodicISRTests+0x308>
			xTestStatus = pdFAIL;
  404cbc:	4b92      	ldr	r3, [pc, #584]	; (404f08 <vTimerPeriodicISRTests+0x534>)
  404cbe:	2200      	movs	r2, #0
  404cc0:	601a      	str	r2, [r3, #0]
			configASSERT( xTestStatus );
  404cc2:	681b      	ldr	r3, [r3, #0]
  404cc4:	b953      	cbnz	r3, 404cdc <vTimerPeriodicISRTests+0x308>
  404cc6:	f04f 0380 	mov.w	r3, #128	; 0x80
  404cca:	b672      	cpsid	i
  404ccc:	f383 8811 	msr	BASEPRI, r3
  404cd0:	f3bf 8f6f 	isb	sy
  404cd4:	f3bf 8f4f 	dsb	sy
  404cd8:	b662      	cpsie	i
  404cda:	e7fe      	b.n	404cda <vTimerPeriodicISRTests+0x306>
		if( ucISROneShotTimerCounter != 2 )
  404cdc:	4b8b      	ldr	r3, [pc, #556]	; (404f0c <vTimerPeriodicISRTests+0x538>)
  404cde:	781b      	ldrb	r3, [r3, #0]
  404ce0:	2b02      	cmp	r3, #2
  404ce2:	d0c4      	beq.n	404c6e <vTimerPeriodicISRTests+0x29a>
			xTestStatus = pdFAIL;
  404ce4:	4b88      	ldr	r3, [pc, #544]	; (404f08 <vTimerPeriodicISRTests+0x534>)
  404ce6:	2200      	movs	r2, #0
  404ce8:	601a      	str	r2, [r3, #0]
			configASSERT( xTestStatus );
  404cea:	681b      	ldr	r3, [r3, #0]
  404cec:	2b00      	cmp	r3, #0
  404cee:	d1be      	bne.n	404c6e <vTimerPeriodicISRTests+0x29a>
  404cf0:	f04f 0380 	mov.w	r3, #128	; 0x80
  404cf4:	b672      	cpsid	i
  404cf6:	f383 8811 	msr	BASEPRI, r3
  404cfa:	f3bf 8f6f 	isb	sy
  404cfe:	f3bf 8f4f 	dsb	sy
  404d02:	b662      	cpsie	i
  404d04:	e7fe      	b.n	404d04 <vTimerPeriodicISRTests+0x330>
		if( ucISRAutoReloadTimerCounter != 3 )
  404d06:	4b7f      	ldr	r3, [pc, #508]	; (404f04 <vTimerPeriodicISRTests+0x530>)
  404d08:	781b      	ldrb	r3, [r3, #0]
  404d0a:	2b03      	cmp	r3, #3
  404d0c:	d00f      	beq.n	404d2e <vTimerPeriodicISRTests+0x35a>
			xTestStatus = pdFAIL;
  404d0e:	4b7e      	ldr	r3, [pc, #504]	; (404f08 <vTimerPeriodicISRTests+0x534>)
  404d10:	2200      	movs	r2, #0
  404d12:	601a      	str	r2, [r3, #0]
			configASSERT( xTestStatus );
  404d14:	681b      	ldr	r3, [r3, #0]
  404d16:	b953      	cbnz	r3, 404d2e <vTimerPeriodicISRTests+0x35a>
  404d18:	f04f 0380 	mov.w	r3, #128	; 0x80
  404d1c:	b672      	cpsid	i
  404d1e:	f383 8811 	msr	BASEPRI, r3
  404d22:	f3bf 8f6f 	isb	sy
  404d26:	f3bf 8f4f 	dsb	sy
  404d2a:	b662      	cpsie	i
  404d2c:	e7fe      	b.n	404d2c <vTimerPeriodicISRTests+0x358>
		if( ucISROneShotTimerCounter != 2 )
  404d2e:	4b77      	ldr	r3, [pc, #476]	; (404f0c <vTimerPeriodicISRTests+0x538>)
  404d30:	781b      	ldrb	r3, [r3, #0]
  404d32:	2b02      	cmp	r3, #2
  404d34:	d09b      	beq.n	404c6e <vTimerPeriodicISRTests+0x29a>
			xTestStatus = pdFAIL;
  404d36:	4b74      	ldr	r3, [pc, #464]	; (404f08 <vTimerPeriodicISRTests+0x534>)
  404d38:	2200      	movs	r2, #0
  404d3a:	601a      	str	r2, [r3, #0]
			configASSERT( xTestStatus );
  404d3c:	681b      	ldr	r3, [r3, #0]
  404d3e:	2b00      	cmp	r3, #0
  404d40:	d195      	bne.n	404c6e <vTimerPeriodicISRTests+0x29a>
  404d42:	f04f 0380 	mov.w	r3, #128	; 0x80
  404d46:	b672      	cpsid	i
  404d48:	f383 8811 	msr	BASEPRI, r3
  404d4c:	f3bf 8f6f 	isb	sy
  404d50:	f3bf 8f4f 	dsb	sy
  404d54:	b662      	cpsie	i
  404d56:	e7fe      	b.n	404d56 <vTimerPeriodicISRTests+0x382>
		if( ucISRAutoReloadTimerCounter != 3 )
  404d58:	4b6a      	ldr	r3, [pc, #424]	; (404f04 <vTimerPeriodicISRTests+0x530>)
  404d5a:	781b      	ldrb	r3, [r3, #0]
  404d5c:	2b03      	cmp	r3, #3
  404d5e:	d00f      	beq.n	404d80 <vTimerPeriodicISRTests+0x3ac>
			xTestStatus = pdFAIL;
  404d60:	4b69      	ldr	r3, [pc, #420]	; (404f08 <vTimerPeriodicISRTests+0x534>)
  404d62:	2200      	movs	r2, #0
  404d64:	601a      	str	r2, [r3, #0]
			configASSERT( xTestStatus );
  404d66:	681b      	ldr	r3, [r3, #0]
  404d68:	b953      	cbnz	r3, 404d80 <vTimerPeriodicISRTests+0x3ac>
  404d6a:	f04f 0380 	mov.w	r3, #128	; 0x80
  404d6e:	b672      	cpsid	i
  404d70:	f383 8811 	msr	BASEPRI, r3
  404d74:	f3bf 8f6f 	isb	sy
  404d78:	f3bf 8f4f 	dsb	sy
  404d7c:	b662      	cpsie	i
  404d7e:	e7fe      	b.n	404d7e <vTimerPeriodicISRTests+0x3aa>
		if( ucISROneShotTimerCounter != 2 )
  404d80:	4b62      	ldr	r3, [pc, #392]	; (404f0c <vTimerPeriodicISRTests+0x538>)
  404d82:	781b      	ldrb	r3, [r3, #0]
  404d84:	2b02      	cmp	r3, #2
  404d86:	f43f aeaa 	beq.w	404ade <vTimerPeriodicISRTests+0x10a>
			xTestStatus = pdFAIL;
  404d8a:	4b5f      	ldr	r3, [pc, #380]	; (404f08 <vTimerPeriodicISRTests+0x534>)
  404d8c:	2200      	movs	r2, #0
  404d8e:	601a      	str	r2, [r3, #0]
			configASSERT( xTestStatus );
  404d90:	681b      	ldr	r3, [r3, #0]
  404d92:	2b00      	cmp	r3, #0
  404d94:	f47f aea3 	bne.w	404ade <vTimerPeriodicISRTests+0x10a>
  404d98:	f04f 0380 	mov.w	r3, #128	; 0x80
  404d9c:	b672      	cpsid	i
  404d9e:	f383 8811 	msr	BASEPRI, r3
  404da2:	f3bf 8f6f 	isb	sy
  404da6:	f3bf 8f4f 	dsb	sy
  404daa:	b662      	cpsie	i
  404dac:	e7fe      	b.n	404dac <vTimerPeriodicISRTests+0x3d8>
		if( ucISRAutoReloadTimerCounter != 3 )
  404dae:	4b55      	ldr	r3, [pc, #340]	; (404f04 <vTimerPeriodicISRTests+0x530>)
  404db0:	781b      	ldrb	r3, [r3, #0]
  404db2:	2b03      	cmp	r3, #3
  404db4:	d00f      	beq.n	404dd6 <vTimerPeriodicISRTests+0x402>
			xTestStatus = pdFAIL;
  404db6:	4b54      	ldr	r3, [pc, #336]	; (404f08 <vTimerPeriodicISRTests+0x534>)
  404db8:	2200      	movs	r2, #0
  404dba:	601a      	str	r2, [r3, #0]
			configASSERT( xTestStatus );
  404dbc:	681b      	ldr	r3, [r3, #0]
  404dbe:	b953      	cbnz	r3, 404dd6 <vTimerPeriodicISRTests+0x402>
  404dc0:	f04f 0380 	mov.w	r3, #128	; 0x80
  404dc4:	b672      	cpsid	i
  404dc6:	f383 8811 	msr	BASEPRI, r3
  404dca:	f3bf 8f6f 	isb	sy
  404dce:	f3bf 8f4f 	dsb	sy
  404dd2:	b662      	cpsie	i
  404dd4:	e7fe      	b.n	404dd4 <vTimerPeriodicISRTests+0x400>
		if( ucISROneShotTimerCounter != 3 )
  404dd6:	4b4d      	ldr	r3, [pc, #308]	; (404f0c <vTimerPeriodicISRTests+0x538>)
  404dd8:	781b      	ldrb	r3, [r3, #0]
  404dda:	2b03      	cmp	r3, #3
  404ddc:	f43f ae7f 	beq.w	404ade <vTimerPeriodicISRTests+0x10a>
			xTestStatus = pdFAIL;
  404de0:	4b49      	ldr	r3, [pc, #292]	; (404f08 <vTimerPeriodicISRTests+0x534>)
  404de2:	2200      	movs	r2, #0
  404de4:	601a      	str	r2, [r3, #0]
			configASSERT( xTestStatus );
  404de6:	681b      	ldr	r3, [r3, #0]
  404de8:	2b00      	cmp	r3, #0
  404dea:	f47f ae78 	bne.w	404ade <vTimerPeriodicISRTests+0x10a>
  404dee:	f04f 0380 	mov.w	r3, #128	; 0x80
  404df2:	b672      	cpsid	i
  404df4:	f383 8811 	msr	BASEPRI, r3
  404df8:	f3bf 8f6f 	isb	sy
  404dfc:	f3bf 8f4f 	dsb	sy
  404e00:	b662      	cpsie	i
  404e02:	e7fe      	b.n	404e02 <vTimerPeriodicISRTests+0x42e>
		if( ucISRAutoReloadTimerCounter != 3 )
  404e04:	4b3f      	ldr	r3, [pc, #252]	; (404f04 <vTimerPeriodicISRTests+0x530>)
  404e06:	781b      	ldrb	r3, [r3, #0]
  404e08:	2b03      	cmp	r3, #3
  404e0a:	d00f      	beq.n	404e2c <vTimerPeriodicISRTests+0x458>
			xTestStatus = pdFAIL;
  404e0c:	4b3e      	ldr	r3, [pc, #248]	; (404f08 <vTimerPeriodicISRTests+0x534>)
  404e0e:	2200      	movs	r2, #0
  404e10:	601a      	str	r2, [r3, #0]
			configASSERT( xTestStatus );
  404e12:	681b      	ldr	r3, [r3, #0]
  404e14:	b953      	cbnz	r3, 404e2c <vTimerPeriodicISRTests+0x458>
  404e16:	f04f 0380 	mov.w	r3, #128	; 0x80
  404e1a:	b672      	cpsid	i
  404e1c:	f383 8811 	msr	BASEPRI, r3
  404e20:	f3bf 8f6f 	isb	sy
  404e24:	f3bf 8f4f 	dsb	sy
  404e28:	b662      	cpsie	i
  404e2a:	e7fe      	b.n	404e2a <vTimerPeriodicISRTests+0x456>
		if( ucISROneShotTimerCounter != 2 )
  404e2c:	4b37      	ldr	r3, [pc, #220]	; (404f0c <vTimerPeriodicISRTests+0x538>)
  404e2e:	781b      	ldrb	r3, [r3, #0]
  404e30:	2b02      	cmp	r3, #2
  404e32:	f43f af1c 	beq.w	404c6e <vTimerPeriodicISRTests+0x29a>
			xTestStatus = pdFAIL;
  404e36:	4b34      	ldr	r3, [pc, #208]	; (404f08 <vTimerPeriodicISRTests+0x534>)
  404e38:	2200      	movs	r2, #0
  404e3a:	601a      	str	r2, [r3, #0]
			configASSERT( xTestStatus );
  404e3c:	681b      	ldr	r3, [r3, #0]
  404e3e:	2b00      	cmp	r3, #0
  404e40:	f47f af15 	bne.w	404c6e <vTimerPeriodicISRTests+0x29a>
  404e44:	f04f 0380 	mov.w	r3, #128	; 0x80
  404e48:	b672      	cpsid	i
  404e4a:	f383 8811 	msr	BASEPRI, r3
  404e4e:	f3bf 8f6f 	isb	sy
  404e52:	f3bf 8f4f 	dsb	sy
  404e56:	b662      	cpsie	i
  404e58:	e7fe      	b.n	404e58 <vTimerPeriodicISRTests+0x484>
		if( ucISROneShotTimerCounter != 1 )
  404e5a:	4b2c      	ldr	r3, [pc, #176]	; (404f0c <vTimerPeriodicISRTests+0x538>)
  404e5c:	781b      	ldrb	r3, [r3, #0]
  404e5e:	2b01      	cmp	r3, #1
  404e60:	f43f ae3d 	beq.w	404ade <vTimerPeriodicISRTests+0x10a>
			xTestStatus = pdFAIL;
  404e64:	4b28      	ldr	r3, [pc, #160]	; (404f08 <vTimerPeriodicISRTests+0x534>)
  404e66:	2200      	movs	r2, #0
  404e68:	601a      	str	r2, [r3, #0]
			configASSERT( xTestStatus );
  404e6a:	681b      	ldr	r3, [r3, #0]
  404e6c:	2b00      	cmp	r3, #0
  404e6e:	f47f ae36 	bne.w	404ade <vTimerPeriodicISRTests+0x10a>
  404e72:	f04f 0380 	mov.w	r3, #128	; 0x80
  404e76:	b672      	cpsid	i
  404e78:	f383 8811 	msr	BASEPRI, r3
  404e7c:	f3bf 8f6f 	isb	sy
  404e80:	f3bf 8f4f 	dsb	sy
  404e84:	b662      	cpsie	i
  404e86:	e7fe      	b.n	404e86 <vTimerPeriodicISRTests+0x4b2>
		if( ( ucISRAutoReloadTimerCounter != 1 ) || ( ucISROneShotTimerCounter != 1 ) )
  404e88:	4b20      	ldr	r3, [pc, #128]	; (404f0c <vTimerPeriodicISRTests+0x538>)
  404e8a:	781b      	ldrb	r3, [r3, #0]
  404e8c:	2b01      	cmp	r3, #1
  404e8e:	f47f ae47 	bne.w	404b20 <vTimerPeriodicISRTests+0x14c>
  404e92:	e624      	b.n	404ade <vTimerPeriodicISRTests+0x10a>
		if( ucISROneShotTimerCounter != 3 )
  404e94:	4b1d      	ldr	r3, [pc, #116]	; (404f0c <vTimerPeriodicISRTests+0x538>)
  404e96:	781b      	ldrb	r3, [r3, #0]
  404e98:	2b03      	cmp	r3, #3
  404e9a:	d00f      	beq.n	404ebc <vTimerPeriodicISRTests+0x4e8>
			xTestStatus = pdFAIL;
  404e9c:	4b1a      	ldr	r3, [pc, #104]	; (404f08 <vTimerPeriodicISRTests+0x534>)
  404e9e:	2200      	movs	r2, #0
  404ea0:	601a      	str	r2, [r3, #0]
			configASSERT( xTestStatus );
  404ea2:	681b      	ldr	r3, [r3, #0]
  404ea4:	b953      	cbnz	r3, 404ebc <vTimerPeriodicISRTests+0x4e8>
  404ea6:	f04f 0380 	mov.w	r3, #128	; 0x80
  404eaa:	b672      	cpsid	i
  404eac:	f383 8811 	msr	BASEPRI, r3
  404eb0:	f3bf 8f6f 	isb	sy
  404eb4:	f3bf 8f4f 	dsb	sy
  404eb8:	b662      	cpsie	i
  404eba:	e7fe      	b.n	404eba <vTimerPeriodicISRTests+0x4e6>
		uxTick = ( TickType_t ) -1;
  404ebc:	f04f 33ff 	mov.w	r3, #4294967295
  404ec0:	602b      	str	r3, [r5, #0]
}
  404ec2:	e60c      	b.n	404ade <vTimerPeriodicISRTests+0x10a>
		xTimerStartFromISR( xISROneShotTimer, NULL );
  404ec4:	4a12      	ldr	r2, [pc, #72]	; (404f10 <vTimerPeriodicISRTests+0x53c>)
  404ec6:	4b13      	ldr	r3, [pc, #76]	; (404f14 <vTimerPeriodicISRTests+0x540>)
  404ec8:	6814      	ldr	r4, [r2, #0]
  404eca:	4798      	blx	r3
  404ecc:	2300      	movs	r3, #0
  404ece:	4602      	mov	r2, r0
  404ed0:	2106      	movs	r1, #6
  404ed2:	4620      	mov	r0, r4
  404ed4:	9300      	str	r3, [sp, #0]
  404ed6:	4c10      	ldr	r4, [pc, #64]	; (404f18 <vTimerPeriodicISRTests+0x544>)
  404ed8:	47a0      	blx	r4
  404eda:	e600      	b.n	404ade <vTimerPeriodicISRTests+0x10a>
		if( ucISRAutoReloadTimerCounter != 3 )
  404edc:	4b09      	ldr	r3, [pc, #36]	; (404f04 <vTimerPeriodicISRTests+0x530>)
  404ede:	781b      	ldrb	r3, [r3, #0]
  404ee0:	2b03      	cmp	r3, #3
  404ee2:	d01b      	beq.n	404f1c <vTimerPeriodicISRTests+0x548>
			xTestStatus = pdFAIL;
  404ee4:	4b08      	ldr	r3, [pc, #32]	; (404f08 <vTimerPeriodicISRTests+0x534>)
  404ee6:	2200      	movs	r2, #0
  404ee8:	601a      	str	r2, [r3, #0]
			configASSERT( xTestStatus );
  404eea:	681b      	ldr	r3, [r3, #0]
  404eec:	b9b3      	cbnz	r3, 404f1c <vTimerPeriodicISRTests+0x548>
  404eee:	f04f 0380 	mov.w	r3, #128	; 0x80
  404ef2:	b672      	cpsid	i
  404ef4:	f383 8811 	msr	BASEPRI, r3
  404ef8:	f3bf 8f6f 	isb	sy
  404efc:	f3bf 8f4f 	dsb	sy
  404f00:	b662      	cpsie	i
  404f02:	e7fe      	b.n	404f02 <vTimerPeriodicISRTests+0x52e>
  404f04:	2040ec08 	.word	0x2040ec08
  404f08:	2040003c 	.word	0x2040003c
  404f0c:	2040ec09 	.word	0x2040ec09
  404f10:	2040ec14 	.word	0x2040ec14
  404f14:	00403d69 	.word	0x00403d69
  404f18:	004046b5 	.word	0x004046b5
		if( ucISROneShotTimerCounter != 1 )
  404f1c:	4b23      	ldr	r3, [pc, #140]	; (404fac <vTimerPeriodicISRTests+0x5d8>)
  404f1e:	781b      	ldrb	r3, [r3, #0]
  404f20:	2b01      	cmp	r3, #1
  404f22:	f43f addc 	beq.w	404ade <vTimerPeriodicISRTests+0x10a>
			xTestStatus = pdFAIL;
  404f26:	4b22      	ldr	r3, [pc, #136]	; (404fb0 <vTimerPeriodicISRTests+0x5dc>)
  404f28:	2200      	movs	r2, #0
  404f2a:	601a      	str	r2, [r3, #0]
			configASSERT( xTestStatus );
  404f2c:	681b      	ldr	r3, [r3, #0]
  404f2e:	2b00      	cmp	r3, #0
  404f30:	f47f add5 	bne.w	404ade <vTimerPeriodicISRTests+0x10a>
  404f34:	f04f 0380 	mov.w	r3, #128	; 0x80
  404f38:	b672      	cpsid	i
  404f3a:	f383 8811 	msr	BASEPRI, r3
  404f3e:	f3bf 8f6f 	isb	sy
  404f42:	f3bf 8f4f 	dsb	sy
  404f46:	b662      	cpsie	i
  404f48:	e7fe      	b.n	404f48 <vTimerPeriodicISRTests+0x574>
		if( ucISRAutoReloadTimerCounter != 3 )
  404f4a:	4b1a      	ldr	r3, [pc, #104]	; (404fb4 <vTimerPeriodicISRTests+0x5e0>)
  404f4c:	781b      	ldrb	r3, [r3, #0]
  404f4e:	2b03      	cmp	r3, #3
  404f50:	d00f      	beq.n	404f72 <vTimerPeriodicISRTests+0x59e>
			xTestStatus = pdFAIL;
  404f52:	4b17      	ldr	r3, [pc, #92]	; (404fb0 <vTimerPeriodicISRTests+0x5dc>)
  404f54:	2200      	movs	r2, #0
  404f56:	601a      	str	r2, [r3, #0]
			configASSERT( xTestStatus );
  404f58:	681b      	ldr	r3, [r3, #0]
  404f5a:	b953      	cbnz	r3, 404f72 <vTimerPeriodicISRTests+0x59e>
  404f5c:	f04f 0380 	mov.w	r3, #128	; 0x80
  404f60:	b672      	cpsid	i
  404f62:	f383 8811 	msr	BASEPRI, r3
  404f66:	f3bf 8f6f 	isb	sy
  404f6a:	f3bf 8f4f 	dsb	sy
  404f6e:	b662      	cpsie	i
  404f70:	e7fe      	b.n	404f70 <vTimerPeriodicISRTests+0x59c>
		if( ucISROneShotTimerCounter != 1 )
  404f72:	4b0e      	ldr	r3, [pc, #56]	; (404fac <vTimerPeriodicISRTests+0x5d8>)
  404f74:	781b      	ldrb	r3, [r3, #0]
  404f76:	2b01      	cmp	r3, #1
  404f78:	d00f      	beq.n	404f9a <vTimerPeriodicISRTests+0x5c6>
			xTestStatus = pdFAIL;
  404f7a:	4b0d      	ldr	r3, [pc, #52]	; (404fb0 <vTimerPeriodicISRTests+0x5dc>)
  404f7c:	2200      	movs	r2, #0
  404f7e:	601a      	str	r2, [r3, #0]
			configASSERT( xTestStatus );
  404f80:	681b      	ldr	r3, [r3, #0]
  404f82:	b953      	cbnz	r3, 404f9a <vTimerPeriodicISRTests+0x5c6>
  404f84:	f04f 0380 	mov.w	r3, #128	; 0x80
  404f88:	b672      	cpsid	i
  404f8a:	f383 8811 	msr	BASEPRI, r3
  404f8e:	f3bf 8f6f 	isb	sy
  404f92:	f3bf 8f4f 	dsb	sy
  404f96:	b662      	cpsie	i
  404f98:	e7fe      	b.n	404f98 <vTimerPeriodicISRTests+0x5c4>
		xTimerStopFromISR( xISRAutoReloadTimer, NULL );
  404f9a:	2300      	movs	r3, #0
  404f9c:	4a06      	ldr	r2, [pc, #24]	; (404fb8 <vTimerPeriodicISRTests+0x5e4>)
  404f9e:	2108      	movs	r1, #8
  404fa0:	4c06      	ldr	r4, [pc, #24]	; (404fbc <vTimerPeriodicISRTests+0x5e8>)
  404fa2:	6810      	ldr	r0, [r2, #0]
  404fa4:	461a      	mov	r2, r3
  404fa6:	9300      	str	r3, [sp, #0]
  404fa8:	47a0      	blx	r4
  404faa:	e598      	b.n	404ade <vTimerPeriodicISRTests+0x10a>
  404fac:	2040ec09 	.word	0x2040ec09
  404fb0:	2040003c 	.word	0x2040003c
  404fb4:	2040ec08 	.word	0x2040ec08
  404fb8:	2040ec10 	.word	0x2040ec10
  404fbc:	004046b5 	.word	0x004046b5

00404fc0 <USART1_Handler>:
volatile float harmony_list_b[11];
volatile float *harmony_list_read = harmony_list_a; 
volatile float *harmony_list_fill = harmony_list_b; 
volatile uint32_t harmony_idx = 0;  
void USART_SERIAL_ISR_HANDLER(void)
{
  404fc0:	b530      	push	{r4, r5, lr}
	uint32_t dw_status = usart_get_status(USART_SERIAL);
  404fc2:	4b18      	ldr	r3, [pc, #96]	; (405024 <USART1_Handler+0x64>)
{
  404fc4:	b083      	sub	sp, #12
	uint32_t dw_status = usart_get_status(USART_SERIAL);
  404fc6:	4818      	ldr	r0, [pc, #96]	; (405028 <USART1_Handler+0x68>)
  404fc8:	4798      	blx	r3
	if (dw_status & US_CSR_RXRDY) {
  404fca:	07c3      	lsls	r3, r0, #31
  404fcc:	d401      	bmi.n	404fd2 <USART1_Handler+0x12>
			harmony_list_read = harmony_list_fill; 
			harmony_list_fill = temp; 
			harmony_idx = 0; 
		}
	}
}
  404fce:	b003      	add	sp, #12
  404fd0:	bd30      	pop	{r4, r5, pc}
		usart_read(USART_SERIAL, &received_byte);
  404fd2:	4b16      	ldr	r3, [pc, #88]	; (40502c <USART1_Handler+0x6c>)
  404fd4:	a901      	add	r1, sp, #4
  404fd6:	4814      	ldr	r0, [pc, #80]	; (405028 <USART1_Handler+0x68>)
  404fd8:	4798      	blx	r3
		if (received_byte != 0 && harmony_idx < 10)
  404fda:	9a01      	ldr	r2, [sp, #4]
  404fdc:	4b14      	ldr	r3, [pc, #80]	; (405030 <USART1_Handler+0x70>)
  404fde:	b182      	cbz	r2, 405002 <USART1_Handler+0x42>
  404fe0:	6819      	ldr	r1, [r3, #0]
  404fe2:	2909      	cmp	r1, #9
  404fe4:	d80d      	bhi.n	405002 <USART1_Handler+0x42>
			harmony_list_fill[harmony_idx] = midi_note_frequencies[received_byte]; 
  404fe6:	4913      	ldr	r1, [pc, #76]	; (405034 <USART1_Handler+0x74>)
  404fe8:	4813      	ldr	r0, [pc, #76]	; (405038 <USART1_Handler+0x78>)
  404fea:	681c      	ldr	r4, [r3, #0]
  404fec:	6809      	ldr	r1, [r1, #0]
  404fee:	eb00 0282 	add.w	r2, r0, r2, lsl #2
  404ff2:	eb01 0184 	add.w	r1, r1, r4, lsl #2
  404ff6:	6812      	ldr	r2, [r2, #0]
  404ff8:	600a      	str	r2, [r1, #0]
			harmony_idx++;
  404ffa:	681a      	ldr	r2, [r3, #0]
  404ffc:	3201      	adds	r2, #1
  404ffe:	601a      	str	r2, [r3, #0]
  405000:	e7e5      	b.n	404fce <USART1_Handler+0xe>
			harmony_list_fill[harmony_idx] = 0.0f; 
  405002:	4a0c      	ldr	r2, [pc, #48]	; (405034 <USART1_Handler+0x74>)
  405004:	2400      	movs	r4, #0
  405006:	6818      	ldr	r0, [r3, #0]
			harmony_idx = 0; 
  405008:	2500      	movs	r5, #0
			harmony_list_fill[harmony_idx] = 0.0f; 
  40500a:	6811      	ldr	r1, [r2, #0]
  40500c:	eb01 0180 	add.w	r1, r1, r0, lsl #2
			float *temp = harmony_list_read; 
  405010:	480a      	ldr	r0, [pc, #40]	; (40503c <USART1_Handler+0x7c>)
			harmony_list_fill[harmony_idx] = 0.0f; 
  405012:	600c      	str	r4, [r1, #0]
			float *temp = harmony_list_read; 
  405014:	6804      	ldr	r4, [r0, #0]
			harmony_list_read = harmony_list_fill; 
  405016:	6811      	ldr	r1, [r2, #0]
			harmony_idx = 0; 
  405018:	601d      	str	r5, [r3, #0]
			harmony_list_fill = temp; 
  40501a:	6014      	str	r4, [r2, #0]
			harmony_list_read = harmony_list_fill; 
  40501c:	6001      	str	r1, [r0, #0]
}
  40501e:	b003      	add	sp, #12
  405020:	bd30      	pop	{r4, r5, pc}
  405022:	bf00      	nop
  405024:	0040238d 	.word	0x0040238d
  405028:	40028000 	.word	0x40028000
  40502c:	00402391 	.word	0x00402391
  405030:	20413000 	.word	0x20413000
  405034:	20400078 	.word	0x20400078
  405038:	0040c01c 	.word	0x0040c01c
  40503c:	2040007c 	.word	0x2040007c

00405040 <main>:
int main(void)
{
  405040:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	sysclk_init();
  405044:	4b9d      	ldr	r3, [pc, #628]	; (4052bc <main+0x27c>)
{
  405046:	ed2d 8b0a 	vpush	{d8-d12}
  40504a:	b08f      	sub	sp, #60	; 0x3c
	sysclk_init();
  40504c:	4798      	blx	r3
	board_init();
  40504e:	4b9c      	ldr	r3, [pc, #624]	; (4052c0 <main+0x280>)
  405050:	4798      	blx	r3
  __ASM volatile ("dsb");
  405052:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  405056:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_DisableICache(void)
{
  #if (__ICACHE_PRESENT == 1)
    __DSB();
    __ISB();
    SCB->CCR &= ~SCB_CCR_IC_Msk;            // disable I-Cache
  40505a:	4c9a      	ldr	r4, [pc, #616]	; (4052c4 <main+0x284>)
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  40505c:	2700      	movs	r7, #0
    SCB->CCR &= ~SCB_CCR_IC_Msk;            // disable I-Cache
  40505e:	6963      	ldr	r3, [r4, #20]
  405060:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
  405064:	6163      	str	r3, [r4, #20]
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  405066:	f8c4 7250 	str.w	r7, [r4, #592]	; 0x250
  __ASM volatile ("dsb");
  40506a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  40506e:	f3bf 8f6f 	isb	sy
	SCB_DisableICache(); 
	lcd_init(); 
  405072:	4b95      	ldr	r3, [pc, #596]	; (4052c8 <main+0x288>)
  405074:	4798      	blx	r3
  __ASM volatile ("dsb");
  405076:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  40507a:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  40507e:	f8c4 7250 	str.w	r7, [r4, #592]	; 0x250
    SCB->CCR |=  SCB_CCR_IC_Msk;            // enable I-Cache
  405082:	6963      	ldr	r3, [r4, #20]
  405084:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  405088:	6163      	str	r3, [r4, #20]
  __ASM volatile ("dsb");
  40508a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  40508e:	f3bf 8f6f 	isb	sy
	SCB_EnableICache();
	audio_init();
  405092:	4b8e      	ldr	r3, [pc, #568]	; (4052cc <main+0x28c>)
  405094:	4798      	blx	r3
	//configure_console();
	Vocoder_init();
  405096:	4b8e      	ldr	r3, [pc, #568]	; (4052d0 <main+0x290>)
  405098:	4798      	blx	r3
  __ASM volatile ("dsb");
  40509a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  40509e:	f3bf 8f6f 	isb	sy
    SCB->CCR &= ~SCB_CCR_IC_Msk;            // disable I-Cache
  4050a2:	6963      	ldr	r3, [r4, #20]
  4050a4:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
  4050a8:	6163      	str	r3, [r4, #20]
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  4050aa:	f8c4 7250 	str.w	r7, [r4, #592]	; 0x250
  __ASM volatile ("dsb");
  4050ae:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  4050b2:	f3bf 8f6f 	isb	sy
	 
	SCB_DisableICache(); 
	gfx_draw_filled_rect(100, 100, 20, 20, GFX_COLOR_YELLOW);
  4050b6:	f64f 76e0 	movw	r6, #65504	; 0xffe0
  4050ba:	2314      	movs	r3, #20
  4050bc:	2164      	movs	r1, #100	; 0x64
  4050be:	4d85      	ldr	r5, [pc, #532]	; (4052d4 <main+0x294>)
  4050c0:	461a      	mov	r2, r3
  4050c2:	9600      	str	r6, [sp, #0]
  4050c4:	4608      	mov	r0, r1
  4050c6:	47a8      	blx	r5
	gfx_draw_filled_rect(200, 100, 20, 20, GFX_COLOR_YELLOW);
  4050c8:	2314      	movs	r3, #20
  4050ca:	9600      	str	r6, [sp, #0]
  4050cc:	2164      	movs	r1, #100	; 0x64
  4050ce:	461a      	mov	r2, r3
  4050d0:	20c8      	movs	r0, #200	; 0xc8
  4050d2:	47a8      	blx	r5
	gfx_draw_filled_rect(80, 180, 20, 20, GFX_COLOR_YELLOW);
  4050d4:	2314      	movs	r3, #20
  4050d6:	9600      	str	r6, [sp, #0]
  4050d8:	21b4      	movs	r1, #180	; 0xb4
  4050da:	461a      	mov	r2, r3
  4050dc:	2050      	movs	r0, #80	; 0x50
  4050de:	47a8      	blx	r5
	gfx_draw_filled_rect(100, 200, 20, 20, GFX_COLOR_YELLOW);
  4050e0:	2314      	movs	r3, #20
  4050e2:	9600      	str	r6, [sp, #0]
  4050e4:	21c8      	movs	r1, #200	; 0xc8
  4050e6:	461a      	mov	r2, r3
  4050e8:	2064      	movs	r0, #100	; 0x64
  4050ea:	47a8      	blx	r5
	gfx_draw_filled_rect(120, 220, 20, 20, GFX_COLOR_YELLOW);
  4050ec:	2314      	movs	r3, #20
  4050ee:	9600      	str	r6, [sp, #0]
  4050f0:	21dc      	movs	r1, #220	; 0xdc
  4050f2:	461a      	mov	r2, r3
  4050f4:	2078      	movs	r0, #120	; 0x78
  4050f6:	47a8      	blx	r5
	gfx_draw_filled_rect(140, 220, 20, 20, GFX_COLOR_YELLOW);
  4050f8:	2314      	movs	r3, #20
  4050fa:	9600      	str	r6, [sp, #0]
  4050fc:	21dc      	movs	r1, #220	; 0xdc
  4050fe:	461a      	mov	r2, r3
  405100:	208c      	movs	r0, #140	; 0x8c
  405102:	47a8      	blx	r5
	gfx_draw_filled_rect(160, 220, 20, 20, GFX_COLOR_YELLOW);
  405104:	2314      	movs	r3, #20
  405106:	9600      	str	r6, [sp, #0]
  405108:	21dc      	movs	r1, #220	; 0xdc
  40510a:	461a      	mov	r2, r3
  40510c:	20a0      	movs	r0, #160	; 0xa0
  40510e:	47a8      	blx	r5
	gfx_draw_filled_rect(180, 220, 20, 20, GFX_COLOR_YELLOW);
  405110:	2314      	movs	r3, #20
  405112:	9600      	str	r6, [sp, #0]
  405114:	21dc      	movs	r1, #220	; 0xdc
  405116:	461a      	mov	r2, r3
  405118:	20b4      	movs	r0, #180	; 0xb4
  40511a:	47a8      	blx	r5
	gfx_draw_filled_rect(200, 200, 20, 20, GFX_COLOR_YELLOW);
  40511c:	2314      	movs	r3, #20
  40511e:	21c8      	movs	r1, #200	; 0xc8
  405120:	9600      	str	r6, [sp, #0]
  405122:	461a      	mov	r2, r3
  405124:	4608      	mov	r0, r1
  405126:	47a8      	blx	r5
	gfx_draw_filled_rect(220, 180, 20, 20, GFX_COLOR_YELLOW);
  405128:	2314      	movs	r3, #20
  40512a:	9600      	str	r6, [sp, #0]
  40512c:	21b4      	movs	r1, #180	; 0xb4
  40512e:	461a      	mov	r2, r3
  405130:	20dc      	movs	r0, #220	; 0xdc
  405132:	47a8      	blx	r5
  __ASM volatile ("dsb");
  405134:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  405138:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  40513c:	f8c4 7250 	str.w	r7, [r4, #592]	; 0x250
    SCB->CCR |=  SCB_CCR_IC_Msk;            // enable I-Cache
  405140:	6963      	ldr	r3, [r4, #20]
  405142:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  405146:	6163      	str	r3, [r4, #20]
  __ASM volatile ("dsb");
  405148:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  40514c:	f3bf 8f6f 	isb	sy
	uart_settings.ul_mode = opt->paritytype;
#endif

	sam_usart_opt_t usart_settings;
	usart_settings.baudrate = opt->baudrate;
	usart_settings.char_length = opt->charlength;
  405150:	21c0      	movs	r1, #192	; 0xc0
	usart_settings.parity_type = opt->paritytype;
  405152:	f44f 6200 	mov.w	r2, #2048	; 0x800
	usart_settings.baudrate = opt->baudrate;
  405156:	f44f 34e1 	mov.w	r4, #115200	; 0x1c200
  40515a:	4b5f      	ldr	r3, [pc, #380]	; (4052d8 <main+0x298>)
  40515c:	200e      	movs	r0, #14
	usart_settings.stop_bits= opt->stopbits;
  40515e:	970b      	str	r7, [sp, #44]	; 0x2c
	usart_settings.channel_mode= US_MR_CHMODE_NORMAL;
  405160:	970c      	str	r7, [sp, #48]	; 0x30
	mags_and_phases->phas = _phas; 
	mags_and_phases->env = &_envelope[envelope_filter_length>>1]; 
	mags_and_phases->unshiftedEnv = _envelope; 
	
	fvec_t *inputVec = (fvec_t*)calloc(sizeof(fvec_t), 1);
	inputVec->length = WIN_SIZE;
  405162:	f44f 6580 	mov.w	r5, #1024	; 0x400
	usart_settings.baudrate = opt->baudrate;
  405166:	9408      	str	r4, [sp, #32]
	usart_settings.char_length = opt->charlength;
  405168:	9109      	str	r1, [sp, #36]	; 0x24
	float pitch_diff;
	float oneOverInputPitch; 
	bool harmonize_flag = false;
	for (i = 0; i < 11; i++)
	{
		harmony_list_a[i] = 0.0f; harmony_list_b[i] = 0.0f; 
  40516a:	46ab      	mov	fp, r5
	usart_settings.parity_type = opt->paritytype;
  40516c:	920a      	str	r2, [sp, #40]	; 0x28
  40516e:	4798      	blx	r3
		flexcom_set_opmode(FLEXCOM1, FLEXCOM_USART);
#else
		sysclk_enable_peripheral_clock(ID_USART1);
#endif
		/* Configure USART */
		usart_init_rs232(p_usart, &usart_settings,
  405170:	4a5a      	ldr	r2, [pc, #360]	; (4052dc <main+0x29c>)
  405172:	a908      	add	r1, sp, #32
  405174:	4b5a      	ldr	r3, [pc, #360]	; (4052e0 <main+0x2a0>)
  405176:	485b      	ldr	r0, [pc, #364]	; (4052e4 <main+0x2a4>)
  405178:	4798      	blx	r3
		/* Configure USART */
		usart_init_rs232(p_usart, &usart_settings,
				sysclk_get_peripheral_bus_hz(p_usart));
#endif
		/* Enable the receiver and transmitter. */
		usart_enable_tx(p_usart);
  40517a:	4e5b      	ldr	r6, [pc, #364]	; (4052e8 <main+0x2a8>)
  40517c:	4859      	ldr	r0, [pc, #356]	; (4052e4 <main+0x2a4>)
  40517e:	47b0      	blx	r6
		usart_enable_rx(p_usart);
  405180:	4c5a      	ldr	r4, [pc, #360]	; (4052ec <main+0x2ac>)
  405182:	4858      	ldr	r0, [pc, #352]	; (4052e4 <main+0x2a4>)
  405184:	47a0      	blx	r4
	usart_enable_tx(USART_SERIAL);
  405186:	4857      	ldr	r0, [pc, #348]	; (4052e4 <main+0x2a4>)
  405188:	47b0      	blx	r6
	usart_enable_rx(USART_SERIAL);
  40518a:	4856      	ldr	r0, [pc, #344]	; (4052e4 <main+0x2a4>)
  40518c:	47a0      	blx	r4
	usart_enable_interrupt(USART_SERIAL, US_IER_RXRDY); 
  40518e:	2101      	movs	r1, #1
  405190:	4854      	ldr	r0, [pc, #336]	; (4052e4 <main+0x2a4>)
  405192:	4b57      	ldr	r3, [pc, #348]	; (4052f0 <main+0x2b0>)
  405194:	4798      	blx	r3
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  405196:	4b57      	ldr	r3, [pc, #348]	; (4052f4 <main+0x2b4>)
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  405198:	f44f 4280 	mov.w	r2, #16384	; 0x4000
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  40519c:	2040      	movs	r0, #64	; 0x40
	cvec_t *mags_and_phases = (cvec_t*)calloc(sizeof(cvec_t), 1); 
  40519e:	4e56      	ldr	r6, [pc, #344]	; (4052f8 <main+0x2b8>)
  4051a0:	2101      	movs	r1, #1
  4051a2:	f883 030e 	strb.w	r0, [r3, #782]	; 0x30e
  4051a6:	2014      	movs	r0, #20
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  4051a8:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  4051ac:	601a      	str	r2, [r3, #0]
  4051ae:	47b0      	blx	r6
	mags_and_phases->env = &_envelope[envelope_filter_length>>1]; 
  4051b0:	4b52      	ldr	r3, [pc, #328]	; (4052fc <main+0x2bc>)
	fvec_t *inputVec = (fvec_t*)calloc(sizeof(fvec_t), 1);
  4051b2:	2101      	movs	r1, #1
	mags_and_phases->env = &_envelope[envelope_filter_length>>1]; 
  4051b4:	4a52      	ldr	r2, [pc, #328]	; (405300 <main+0x2c0>)
  4051b6:	681b      	ldr	r3, [r3, #0]
	cvec_t *mags_and_phases = (cvec_t*)calloc(sizeof(cvec_t), 1); 
  4051b8:	4681      	mov	r9, r0
	mags_and_phases->length = WIN_SIZE_D2; 
  4051ba:	f44f 7e00 	mov.w	lr, #512	; 0x200
	mags_and_phases->norm = _norm; 
  4051be:	4f51      	ldr	r7, [pc, #324]	; (405304 <main+0x2c4>)
	mags_and_phases->env = &_envelope[envelope_filter_length>>1]; 
  4051c0:	40cb      	lsrs	r3, r1
	mags_and_phases->phas = _phas; 
  4051c2:	4c51      	ldr	r4, [pc, #324]	; (405308 <main+0x2c8>)
	mags_and_phases->length = WIN_SIZE_D2; 
  4051c4:	f8c9 e000 	str.w	lr, [r9]
	fvec_t *inputVec = (fvec_t*)calloc(sizeof(fvec_t), 1);
  4051c8:	2008      	movs	r0, #8
	mags_and_phases->env = &_envelope[envelope_filter_length>>1]; 
  4051ca:	eb02 0383 	add.w	r3, r2, r3, lsl #2
	mags_and_phases->norm = _norm; 
  4051ce:	f8c9 7004 	str.w	r7, [r9, #4]
	mags_and_phases->phas = _phas; 
  4051d2:	f8c9 4008 	str.w	r4, [r9, #8]
	mags_and_phases->env = &_envelope[envelope_filter_length>>1]; 
  4051d6:	f8c9 300c 	str.w	r3, [r9, #12]
	mags_and_phases->unshiftedEnv = _envelope; 
  4051da:	f8c9 2010 	str.w	r2, [r9, #16]
	fvec_t *inputVec = (fvec_t*)calloc(sizeof(fvec_t), 1);
  4051de:	47b0      	blx	r6
	inputVec->data = inWindowBuffer; 
  4051e0:	4c4a      	ldr	r4, [pc, #296]	; (40530c <main+0x2cc>)
	fvec_t *inputVec = (fvec_t*)calloc(sizeof(fvec_t), 1);
  4051e2:	4602      	mov	r2, r0
  4051e4:	9005      	str	r0, [sp, #20]
	fvec_t *inputVecCopy = (fvec_t*)calloc(sizeof(fvec_t), 1);
  4051e6:	2101      	movs	r1, #1
  4051e8:	2008      	movs	r0, #8
	inputVec->length = WIN_SIZE;
  4051ea:	6015      	str	r5, [r2, #0]
	inputVec->data = inWindowBuffer; 
  4051ec:	6054      	str	r4, [r2, #4]
	fvec_t *inputVecCopy = (fvec_t*)calloc(sizeof(fvec_t), 1);
  4051ee:	47b0      	blx	r6
	inputVecCopy->data = inWindowBufferCopy;
  4051f0:	4f47      	ldr	r7, [pc, #284]	; (405310 <main+0x2d0>)
	fvec_t *inputVecCopy = (fvec_t*)calloc(sizeof(fvec_t), 1);
  4051f2:	4602      	mov	r2, r0
  4051f4:	9006      	str	r0, [sp, #24]
	fvec_t *fft_samples = (fvec_t*)calloc(sizeof(fvec_t), 1);
  4051f6:	2101      	movs	r1, #1
  4051f8:	2008      	movs	r0, #8
  4051fa:	f8df a164 	ldr.w	sl, [pc, #356]	; 405360 <main+0x320>
  4051fe:	f8df 8164 	ldr.w	r8, [pc, #356]	; 405364 <main+0x324>
	inputVecCopy->data = inWindowBufferCopy;
  405202:	e882 00a0 	stmia.w	r2, {r5, r7}
	fvec_t *fft_samples = (fvec_t*)calloc(sizeof(fvec_t), 1);
  405206:	47b0      	blx	r6
	fft_samples->data = _samples_fft;
  405208:	4a42      	ldr	r2, [pc, #264]	; (405314 <main+0x2d4>)
	fvec_t *fft_samples = (fvec_t*)calloc(sizeof(fvec_t), 1);
  40520a:	4606      	mov	r6, r0
	arm_rfft_fast_init_f32(&fftInstance, WIN_SIZE);
  40520c:	4629      	mov	r1, r5
	fvec_t *fft_samples = (fvec_t*)calloc(sizeof(fvec_t), 1);
  40520e:	9007      	str	r0, [sp, #28]
	arm_rfft_fast_init_f32(&fftInstance, WIN_SIZE);
  405210:	a808      	add	r0, sp, #32
	fft_samples->length = WIN_SIZE;
  405212:	6035      	str	r5, [r6, #0]
	fft_samples->data = _samples_fft;
  405214:	6072      	str	r2, [r6, #4]
	arm_rfft_fast_init_f32(&fftInstance, WIN_SIZE);
  405216:	4b40      	ldr	r3, [pc, #256]	; (405318 <main+0x2d8>)
		harmony_list_a[i] = 0.0f; harmony_list_b[i] = 0.0f; 
  405218:	9703      	str	r7, [sp, #12]
  40521a:	9202      	str	r2, [sp, #8]
	arm_rfft_fast_init_f32(&fftInstance, WIN_SIZE);
  40521c:	4798      	blx	r3
  40521e:	4f3f      	ldr	r7, [pc, #252]	; (40531c <main+0x2dc>)
		harmony_list_a[i] = 0.0f; harmony_list_b[i] = 0.0f; 
  405220:	2300      	movs	r3, #0
  405222:	493f      	ldr	r1, [pc, #252]	; (405320 <main+0x2e0>)
  405224:	4a3f      	ldr	r2, [pc, #252]	; (405324 <main+0x2e4>)
  405226:	4e40      	ldr	r6, [pc, #256]	; (405328 <main+0x2e8>)
  405228:	4d40      	ldr	r5, [pc, #256]	; (40532c <main+0x2ec>)
  40522a:	600b      	str	r3, [r1, #0]
		r = M_PI - r; 
  40522c:	9404      	str	r4, [sp, #16]
		harmony_list_a[i] = 0.0f; harmony_list_b[i] = 0.0f; 
  40522e:	6013      	str	r3, [r2, #0]
  405230:	604b      	str	r3, [r1, #4]
  405232:	6053      	str	r3, [r2, #4]
  405234:	608b      	str	r3, [r1, #8]
  405236:	6093      	str	r3, [r2, #8]
  405238:	60cb      	str	r3, [r1, #12]
  40523a:	60d3      	str	r3, [r2, #12]
  40523c:	610b      	str	r3, [r1, #16]
  40523e:	6113      	str	r3, [r2, #16]
  405240:	614b      	str	r3, [r1, #20]
  405242:	6153      	str	r3, [r2, #20]
  405244:	618b      	str	r3, [r1, #24]
  405246:	6193      	str	r3, [r2, #24]
  405248:	61cb      	str	r3, [r1, #28]
  40524a:	61d3      	str	r3, [r2, #28]
  40524c:	620b      	str	r3, [r1, #32]
  40524e:	6213      	str	r3, [r2, #32]
  405250:	624b      	str	r3, [r1, #36]	; 0x24
  405252:	6253      	str	r3, [r2, #36]	; 0x24
  405254:	628b      	str	r3, [r1, #40]	; 0x28
  405256:	6293      	str	r3, [r2, #40]	; 0x28
	}
	/*************** Application code variables end ***************/

	while(1)
	{
		if (dataReceived)
  405258:	4b35      	ldr	r3, [pc, #212]	; (405330 <main+0x2f0>)
  40525a:	781b      	ldrb	r3, [r3, #0]
  40525c:	2b00      	cmp	r3, #0
  40525e:	d0fb      	beq.n	405258 <main+0x218>
		{	
			// store process buffer values into last quarter of input buffer 
			arm_copy_f32((float  *)processBuffer, &x_in[WIN_SIZE-STEP_SIZE], STEP_SIZE); 
  405260:	4b34      	ldr	r3, [pc, #208]	; (405334 <main+0x2f4>)
  405262:	f44f 7280 	mov.w	r2, #256	; 0x100
  405266:	4934      	ldr	r1, [pc, #208]	; (405338 <main+0x2f8>)
	float r = ((-0.0464964749f * s + 0.15931422f) * s - 0.327622764f) * s * a + a; 
  405268:	eef7 ba00 	vmov.f32	s23, #112	; 0x3f800000  1.0
			arm_copy_f32((float  *)processBuffer, &x_in[WIN_SIZE-STEP_SIZE], STEP_SIZE); 
  40526c:	6818      	ldr	r0, [r3, #0]
  40526e:	4b33      	ldr	r3, [pc, #204]	; (40533c <main+0x2fc>)
  405270:	4798      	blx	r3
										
			// apply hanning window -- can't do in-place since we would be double-windowing 
			arm_mult_f32(x_in, (float *)hanning, inputVec->data, WIN_SIZE); 
  405272:	4c33      	ldr	r4, [pc, #204]	; (405340 <main+0x300>)
  405274:	f44f 6380 	mov.w	r3, #1024	; 0x400
  405278:	9a04      	ldr	r2, [sp, #16]
  40527a:	4932      	ldr	r1, [pc, #200]	; (405344 <main+0x304>)
  40527c:	4832      	ldr	r0, [pc, #200]	; (405348 <main+0x308>)
  40527e:	47a0      	blx	r4
			
			// save input since fft changes it 
			arm_copy_f32(inputVec->data, inputVecCopy->data, inputVec->length); 
  405280:	9c04      	ldr	r4, [sp, #16]
  405282:	465a      	mov	r2, fp
  405284:	9903      	ldr	r1, [sp, #12]
  405286:	4620      	mov	r0, r4
  405288:	4b2c      	ldr	r3, [pc, #176]	; (40533c <main+0x2fc>)
  40528a:	4798      	blx	r3
  40528c:	9a02      	ldr	r2, [sp, #8]
							
			// take fft of the windowed signal
			arm_rfft_fast_f32(&fftInstance, inputVec->data, fft_samples->data, 0);
  40528e:	2300      	movs	r3, #0
  405290:	4621      	mov	r1, r4
  405292:	a808      	add	r0, sp, #32
  405294:	4c2d      	ldr	r4, [pc, #180]	; (40534c <main+0x30c>)
  405296:	f102 0b04 	add.w	fp, r2, #4
						
			// compute magnitude and phase 
			arm_cmplx_mag_f32(fft_samples->data, mags_and_phases->norm, WIN_SIZE >> 1); 
  40529a:	9304      	str	r3, [sp, #16]
			arm_rfft_fast_f32(&fftInstance, inputVec->data, fft_samples->data, 0);
  40529c:	47a0      	blx	r4
			arm_cmplx_mag_f32(fft_samples->data, mags_and_phases->norm, WIN_SIZE >> 1); 
  40529e:	f44f 7200 	mov.w	r2, #512	; 0x200
  4052a2:	f8d9 1004 	ldr.w	r1, [r9, #4]
  4052a6:	9802      	ldr	r0, [sp, #8]
  4052a8:	4b29      	ldr	r3, [pc, #164]	; (405350 <main+0x310>)
  4052aa:	4798      	blx	r3
	float r = ((-0.0464964749f * s + 0.15931422f) * s - 0.327622764f) * s * a + a; 
  4052ac:	ed9f ba29 	vldr	s22, [pc, #164]	; 405354 <main+0x314>
  4052b0:	eddf aa29 	vldr	s21, [pc, #164]	; 405358 <main+0x318>
  4052b4:	ed9f aa29 	vldr	s20, [pc, #164]	; 40535c <main+0x31c>
			arm_cmplx_mag_f32(fft_samples->data, mags_and_phases->norm, WIN_SIZE >> 1); 
  4052b8:	9c04      	ldr	r4, [sp, #16]
  4052ba:	e055      	b.n	405368 <main+0x328>
  4052bc:	004023e5 	.word	0x004023e5
  4052c0:	00402455 	.word	0x00402455
  4052c4:	e000ed00 	.word	0xe000ed00
  4052c8:	00400f49 	.word	0x00400f49
  4052cc:	00400379 	.word	0x00400379
  4052d0:	00401109 	.word	0x00401109
  4052d4:	00400d71 	.word	0x00400d71
  4052d8:	00402f39 	.word	0x00402f39
  4052dc:	08f0d180 	.word	0x08f0d180
  4052e0:	004022d9 	.word	0x004022d9
  4052e4:	40028000 	.word	0x40028000
  4052e8:	00402379 	.word	0x00402379
  4052ec:	00402381 	.word	0x00402381
  4052f0:	00402389 	.word	0x00402389
  4052f4:	e000e100 	.word	0xe000e100
  4052f8:	00407dbd 	.word	0x00407dbd
  4052fc:	20400074 	.word	0x20400074
  405300:	2040f000 	.word	0x2040f000
  405304:	20410000 	.word	0x20410000
  405308:	20410800 	.word	0x20410800
  40530c:	20413400 	.word	0x20413400
  405310:	20414400 	.word	0x20414400
  405314:	20411000 	.word	0x20411000
  405318:	00405a59 	.word	0x00405a59
  40531c:	00407591 	.word	0x00407591
  405320:	2041b838 	.word	0x2041b838
  405324:	2041b80c 	.word	0x2041b80c
  405328:	00407d1d 	.word	0x00407d1d
  40532c:	20400014 	.word	0x20400014
  405330:	2040101c 	.word	0x2040101c
  405334:	2040001c 	.word	0x2040001c
  405338:	20416400 	.word	0x20416400
  40533c:	00405729 	.word	0x00405729
  405340:	00406bd5 	.word	0x00406bd5
  405344:	0040b000 	.word	0x0040b000
  405348:	20415800 	.word	0x20415800
  40534c:	00405b61 	.word	0x00405b61
  405350:	0040697d 	.word	0x0040697d
  405354:	bd3e7316 	.word	0xbd3e7316
  405358:	3e232344 	.word	0x3e232344
  40535c:	bea7be2c 	.word	0xbea7be2c
  405360:	20415800 	.word	0x20415800
  405364:	00407851 	.word	0x00407851
			for (j = 0, i = 0; i < WIN_SIZE; i+=2, j++)
			{
				mags_and_phases->phas[j] = atan2_approximation(fft_samples->data[i+1], fft_samples->data[i]); 
  405368:	eddb 9a00 	vldr	s19, [fp]
	float r = ((-0.0464964749f * s + 0.15931422f) * s - 0.327622764f) * s * a + a; 
  40536c:	eeb0 6a4a 	vmov.f32	s12, s20
				mags_and_phases->phas[j] = atan2_approximation(fft_samples->data[i+1], fft_samples->data[i]); 
  405370:	ed5b ca01 	vldr	s25, [fp, #-4]
	float r = ((-0.0464964749f * s + 0.15931422f) * s - 0.327622764f) * s * a + a; 
  405374:	eeb0 8a6b 	vmov.f32	s16, s23
	float y_abs = Abs(y); 
  405378:	eeb0 9ae9 	vabs.f32	s18, s19
  40537c:	f10b 0b08 	add.w	fp, fp, #8
	float x_abs = Abs(x); 
  405380:	eef0 8aec 	vabs.f32	s17, s25
	float a = min(x_abs, y_abs) / max(x_abs, y_abs); 
  405384:	fec9 6a68 	vminnm.f32	s13, s18, s17
  405388:	fe89 7a28 	vmaxnm.f32	s14, s18, s17
  40538c:	eec6 7a87 	vdiv.f32	s15, s13, s14
	float r = ((-0.0464964749f * s + 0.15931422f) * s - 0.327622764f) * s * a + a; 
  405390:	eef0 6a6a 	vmov.f32	s13, s21
	float s = a * a; 
  405394:	ee27 7aa7 	vmul.f32	s14, s15, s15
	float r = ((-0.0464964749f * s + 0.15931422f) * s - 0.327622764f) * s * a + a; 
  405398:	eee7 6a0b 	vfma.f32	s13, s14, s22
  40539c:	eea7 6a26 	vfma.f32	s12, s14, s13
  4053a0:	eea7 8a06 	vfma.f32	s16, s14, s12
  4053a4:	ee28 8a27 	vmul.f32	s16, s16, s15
		r =  M_PI_2 - r; 
  4053a8:	ee18 0a10 	vmov	r0, s16
  4053ac:	47c0      	blx	r8
  4053ae:	4602      	mov	r2, r0
  4053b0:	460b      	mov	r3, r1
  4053b2:	a1bb      	add	r1, pc, #748	; (adr r1, 4056a0 <main+0x660>)
  4053b4:	e9d1 0100 	ldrd	r0, r1, [r1]
  4053b8:	47b8      	blx	r7
  4053ba:	47b0      	blx	r6
  4053bc:	eeb4 9ae8 	vcmpe.f32	s18, s17
  4053c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4053c4:	bf88      	it	hi
  4053c6:	ee08 0a10 	vmovhi	s16, r0
		r = M_PI - r; 
  4053ca:	ee18 0a10 	vmov	r0, s16
  4053ce:	47c0      	blx	r8
  4053d0:	460b      	mov	r3, r1
  4053d2:	4602      	mov	r2, r0
  4053d4:	a1b4      	add	r1, pc, #720	; (adr r1, 4056a8 <main+0x668>)
  4053d6:	e9d1 0100 	ldrd	r0, r1, [r1]
  4053da:	47b8      	blx	r7
  4053dc:	47b0      	blx	r6
  4053de:	eef5 cac0 	vcmpe.f32	s25, #0.0
  4053e2:	ee07 0a90 	vmov	s15, r0
				mags_and_phases->phas[j] = atan2_approximation(fft_samples->data[i+1], fft_samples->data[i]); 
  4053e6:	f8d9 3008 	ldr.w	r3, [r9, #8]
  4053ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4053ee:	4423      	add	r3, r4
  4053f0:	eef5 9ac0 	vcmpe.f32	s19, #0.0
  4053f4:	f104 0404 	add.w	r4, r4, #4
  4053f8:	bfa8      	it	ge
  4053fa:	eef0 7a48 	vmovge.f32	s15, s16
  4053fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
		r = -r; 
  405402:	eeb1 7a67 	vneg.f32	s14, s15
				mags_and_phases->phas[j] = atan2_approximation(fft_samples->data[i+1], fft_samples->data[i]); 
  405406:	bfb8      	it	lt
  405408:	eef0 7a47 	vmovlt.f32	s15, s14
			for (j = 0, i = 0; i < WIN_SIZE; i+=2, j++)
  40540c:	f5b4 6f00 	cmp.w	r4, #2048	; 0x800
				mags_and_phases->phas[j] = atan2_approximation(fft_samples->data[i+1], fft_samples->data[i]); 
  405410:	edc3 7a00 	vstr	s15, [r3]
			for (j = 0, i = 0; i < WIN_SIZE; i+=2, j++)
  405414:	d1a8      	bne.n	405368 <main+0x328>
			}
			
			// compute envelope 
			arm_conv_f32(mags_and_phases->norm, mags_and_phases->length, (float *)envelope_filter, envelope_filter_length, mags_and_phases->unshiftedEnv); 			
  405416:	f8d9 4010 	ldr.w	r4, [r9, #16]
  40541a:	4b87      	ldr	r3, [pc, #540]	; (405638 <main+0x5f8>)
  40541c:	f8d9 1000 	ldr.w	r1, [r9]
  405420:	681b      	ldr	r3, [r3, #0]
  405422:	f8d9 0004 	ldr.w	r0, [r9, #4]
  405426:	4a85      	ldr	r2, [pc, #532]	; (40563c <main+0x5fc>)
  405428:	9400      	str	r4, [sp, #0]
  40542a:	4c85      	ldr	r4, [pc, #532]	; (405640 <main+0x600>)
  40542c:	47a0      	blx	r4
				
			// compute pitch 
			float tempPitch = inputPitch; 
			inputPitch = computeWaveletPitch(inputVecCopy->data); 
  40542e:	9803      	ldr	r0, [sp, #12]
  405430:	4b84      	ldr	r3, [pc, #528]	; (405644 <main+0x604>)
  405432:	4798      	blx	r3
			if (inputPitch < 50.0f) inputPitch = tempPitch; 
  405434:	ed9f 7a84 	vldr	s14, [pc, #528]	; 405648 <main+0x608>
			inputPitch = computeWaveletPitch(inputVecCopy->data); 
  405438:	ee07 0a90 	vmov	s15, r0
  40543c:	eef4 7ac7 	vcmpe.f32	s15, s14
  405440:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  405444:	bf58      	it	pl
  405446:	eeb0 ca67 	vmovpl.f32	s24, s15
			if (inputPitch > 0.0f)
  40544a:	eeb5 cac0 	vcmpe.f32	s24, #0.0
  40544e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  405452:	dd7c      	ble.n	40554e <main+0x50e>
			{
				pitch_shift = 1.0f; 
			}
			pitch_shift_do(pitch_shift, mags_and_phases);
#else 
			if (inputPitch > 0.0f && harmony_list_read[0] > 1.0f)
  405454:	4b7d      	ldr	r3, [pc, #500]	; (40564c <main+0x60c>)
  405456:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
  40545a:	681b      	ldr	r3, [r3, #0]
  40545c:	ed93 7a00 	vldr	s14, [r3]
  405460:	eeb4 7ae7 	vcmpe.f32	s14, s15
  405464:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  405468:	dd71      	ble.n	40554e <main+0x50e>
  40546a:	ed9f 7a79 	vldr	s14, [pc, #484]	; 405650 <main+0x610>
  40546e:	207f      	movs	r0, #127	; 0x7f
  405470:	eddf 7a78 	vldr	s15, [pc, #480]	; 405654 <main+0x614>
  405474:	220c      	movs	r2, #12
		d1 = Abs(midi_note_frequencies[mid] - frequency);
  405476:	ee37 7a4c 	vsub.f32	s14, s14, s24
		mid = (hi + lo) >> 1;
  40547a:	1813      	adds	r3, r2, r0
		d2 = Abs(midi_note_frequencies[mid+1] - frequency);
  40547c:	ee77 7acc 	vsub.f32	s15, s15, s24
		mid = (hi + lo) >> 1;
  405480:	085b      	lsrs	r3, r3, #1
		d1 = Abs(midi_note_frequencies[mid] - frequency);
  405482:	eeb0 7ac7 	vabs.f32	s14, s14
		d2 = Abs(midi_note_frequencies[mid+1] - frequency);
  405486:	eef0 7ae7 	vabs.f32	s15, s15
  40548a:	1c59      	adds	r1, r3, #1
		d1 = Abs(midi_note_frequencies[mid] - frequency);
  40548c:	eebc 7ac7 	vcvt.u32.f32	s14, s14
		d2 = Abs(midi_note_frequencies[mid+1] - frequency);
  405490:	eefc 7ae7 	vcvt.u32.f32	s15, s15
		if (d2 <= d1)
  405494:	ee17 4a10 	vmov	r4, s14
  405498:	ee17 ea90 	vmov	lr, s15
  40549c:	4574      	cmp	r4, lr
  40549e:	d21e      	bcs.n	4054de <main+0x49e>
  4054a0:	e0ba      	b.n	405618 <main+0x5d8>
		d1 = Abs(midi_note_frequencies[mid] - frequency);
  4054a2:	4a6d      	ldr	r2, [pc, #436]	; (405658 <main+0x618>)
		d2 = Abs(midi_note_frequencies[mid+1] - frequency);
  4054a4:	1c5c      	adds	r4, r3, #1
		d1 = Abs(midi_note_frequencies[mid] - frequency);
  4054a6:	eb02 0c83 	add.w	ip, r2, r3, lsl #2
		d2 = Abs(midi_note_frequencies[mid+1] - frequency);
  4054aa:	eb02 0e84 	add.w	lr, r2, r4, lsl #2
		d1 = Abs(midi_note_frequencies[mid] - frequency);
  4054ae:	ed9c 7a00 	vldr	s14, [ip]
		d2 = Abs(midi_note_frequencies[mid+1] - frequency);
  4054b2:	edde 7a00 	vldr	s15, [lr]
		d1 = Abs(midi_note_frequencies[mid] - frequency);
  4054b6:	ee37 7a4c 	vsub.f32	s14, s14, s24
		d2 = Abs(midi_note_frequencies[mid+1] - frequency);
  4054ba:	ee77 7acc 	vsub.f32	s15, s15, s24
		d1 = Abs(midi_note_frequencies[mid] - frequency);
  4054be:	eeb0 7ac7 	vabs.f32	s14, s14
		d2 = Abs(midi_note_frequencies[mid+1] - frequency);
  4054c2:	eef0 7ae7 	vabs.f32	s15, s15
		d1 = Abs(midi_note_frequencies[mid] - frequency);
  4054c6:	eebc 7ac7 	vcvt.u32.f32	s14, s14
		d2 = Abs(midi_note_frequencies[mid+1] - frequency);
  4054ca:	eefc 7ae7 	vcvt.u32.f32	s15, s15
		if (d2 <= d1)
  4054ce:	ee17 2a10 	vmov	r2, s14
  4054d2:	ee17 ea90 	vmov	lr, s15
  4054d6:	4572      	cmp	r2, lr
  4054d8:	f0c0 809f 	bcc.w	40561a <main+0x5da>
		d2 = Abs(midi_note_frequencies[mid+1] - frequency);
  4054dc:	4621      	mov	r1, r4
		mid = (hi + lo) >> 1;
  4054de:	180b      	adds	r3, r1, r0
	while (lo < hi)
  4054e0:	4281      	cmp	r1, r0
		mid = (hi + lo) >> 1;
  4054e2:	ea4f 0353 	mov.w	r3, r3, lsr #1
	while (lo < hi)
  4054e6:	d3dc      	bcc.n	4054a2 <main+0x462>
				oneOverInputPitch = 1.0f / inputPitch; 
  4054e8:	eeb7 8a00 	vmov.f32	s16, #112	; 0x3f800000  1.0
			{
				auto_tuned_pitch = get_frequency_from_all(inputPitch);
				
				pitch_shift_do(1.0f, mags_and_phases); 
  4054ec:	4b5b      	ldr	r3, [pc, #364]	; (40565c <main+0x61c>)
  4054ee:	4649      	mov	r1, r9
  4054f0:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  4054f4:	4798      	blx	r3
  4054f6:	4b55      	ldr	r3, [pc, #340]	; (40564c <main+0x60c>)
				oneOverInputPitch = 1.0f / inputPitch; 
  4054f8:	eec8 8a0c 	vdiv.f32	s17, s16, s24
				
				i = 0; 
				while(harmony_list_read[i] > 1.0f)
  4054fc:	2400      	movs	r4, #0
  4054fe:	681a      	ldr	r2, [r3, #0]
				{
					pitch_shift = 1.0f - (inputPitch-harmony_list_read[i++])*oneOverInputPitch;
					if (pitch_shift > 0.49f && pitch_shift < 2.01f)
  405500:	ed9f 9a57 	vldr	s18, [pc, #348]	; 405660 <main+0x620>
  405504:	eddf 9a57 	vldr	s19, [pc, #348]	; 405664 <main+0x624>
				while(harmony_list_read[i] > 1.0f)
  405508:	1913      	adds	r3, r2, r4
  40550a:	3404      	adds	r4, #4
  40550c:	edd3 7a00 	vldr	s15, [r3]
  405510:	eef4 7ac8 	vcmpe.f32	s15, s16
  405514:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  405518:	dd1e      	ble.n	405558 <main+0x518>
					pitch_shift = 1.0f - (inputPitch-harmony_list_read[i++])*oneOverInputPitch;
  40551a:	edd3 7a00 	vldr	s15, [r3]
  40551e:	ee77 7acc 	vsub.f32	s15, s15, s24
  405522:	ee67 7aa8 	vmul.f32	s15, s15, s17
					if (pitch_shift > 0.49f && pitch_shift < 2.01f)
  405526:	eef4 7a49 	vcmp.f32	s15, s18
  40552a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  40552e:	ddeb      	ble.n	405508 <main+0x4c8>
  405530:	eef4 7a69 	vcmp.f32	s15, s19
						pitch_shift_do(pitch_shift, mags_and_phases);
  405534:	4649      	mov	r1, r9
  405536:	ee77 7a88 	vadd.f32	s15, s15, s16
					if (pitch_shift > 0.49f && pitch_shift < 2.01f)
  40553a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
						pitch_shift_do(pitch_shift, mags_and_phases);
  40553e:	ee17 0a90 	vmov	r0, s15
					if (pitch_shift > 0.49f && pitch_shift < 2.01f)
  405542:	d5e1      	bpl.n	405508 <main+0x4c8>
						pitch_shift_do(pitch_shift, mags_and_phases);
  405544:	4b45      	ldr	r3, [pc, #276]	; (40565c <main+0x61c>)
  405546:	4798      	blx	r3
  405548:	4b40      	ldr	r3, [pc, #256]	; (40564c <main+0x60c>)
  40554a:	681a      	ldr	r2, [r3, #0]
  40554c:	e7dc      	b.n	405508 <main+0x4c8>
// 				pitch_shift_do(pitch_shift, mags_and_phases);
				 
			}
			else
			{
				pitch_shift_do(1.0f, mags_and_phases); 
  40554e:	4649      	mov	r1, r9
  405550:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  405554:	4b41      	ldr	r3, [pc, #260]	; (40565c <main+0x61c>)
  405556:	4798      	blx	r3
			}
#endif 
			get_harmonized_output(&harmonized_output[lp_filter_11k_length], mags_and_phases, &fftInstance);
  405558:	aa08      	add	r2, sp, #32
  40555a:	4649      	mov	r1, r9
  40555c:	4842      	ldr	r0, [pc, #264]	; (405668 <main+0x628>)
  40555e:	4b43      	ldr	r3, [pc, #268]	; (40566c <main+0x62c>)
  405560:	4798      	blx	r3
							
			/* low-pass filter with 11k cut off */ 
			arm_conv_f32(&harmonized_output[0], STEP_SIZE+lp_filter_11k_length, (float *)lp_filter_11k, lp_filter_11k_length, harmonized_output_filt);
  405562:	4b43      	ldr	r3, [pc, #268]	; (405670 <main+0x630>)
  405564:	4a43      	ldr	r2, [pc, #268]	; (405674 <main+0x634>)
  405566:	f44f 7182 	mov.w	r1, #260	; 0x104
  40556a:	9300      	str	r3, [sp, #0]
  40556c:	2304      	movs	r3, #4
  40556e:	4842      	ldr	r0, [pc, #264]	; (405678 <main+0x638>)
  405570:	4c33      	ldr	r4, [pc, #204]	; (405640 <main+0x600>)
  405572:	47a0      	blx	r4
							
			/* shift last filter length harmonized values for filter memory */ 
			arm_copy_f32(&harmonized_output[STEP_SIZE], &harmonized_output[0], lp_filter_11k_length);
  405574:	4940      	ldr	r1, [pc, #256]	; (405678 <main+0x638>)
  405576:	2204      	movs	r2, #4
  405578:	4b40      	ldr	r3, [pc, #256]	; (40567c <main+0x63c>)
  40557a:	f501 6080 	add.w	r0, r1, #1024	; 0x400
			uint32_t processIdx = lp_filter_11k_length; 
#else
			uint32_t idx = 0; 
	
			// get output 
			arm_add_f32((float *)processBuffer, &harmonized_output_filt[lp_filter_11k_length], mixed_buffer, STEP_SIZE);
  40557e:	4c40      	ldr	r4, [pc, #256]	; (405680 <main+0x640>)
			arm_copy_f32(&harmonized_output[STEP_SIZE], &harmonized_output[0], lp_filter_11k_length);
  405580:	4798      	blx	r3
			arm_add_f32((float *)processBuffer, &harmonized_output_filt[lp_filter_11k_length], mixed_buffer, STEP_SIZE);
  405582:	4840      	ldr	r0, [pc, #256]	; (405684 <main+0x644>)
  405584:	f44f 7380 	mov.w	r3, #256	; 0x100
  405588:	4a3f      	ldr	r2, [pc, #252]	; (405688 <main+0x648>)
  40558a:	4940      	ldr	r1, [pc, #256]	; (40568c <main+0x64c>)
  40558c:	6800      	ldr	r0, [r0, #0]
  40558e:	47a0      	blx	r4
			//arm_copy_f32(&harmonized_output[lp_filter_11k_length], mixed_buffer, STEP_SIZE);

			arm_scale_f32(mixed_buffer, (float)INT16_MAX, mixed_buffer, STEP_SIZE); // should technically multiply by 0.5 here 
  405590:	4a3d      	ldr	r2, [pc, #244]	; (405688 <main+0x648>)
  405592:	f44f 7380 	mov.w	r3, #256	; 0x100
  405596:	493e      	ldr	r1, [pc, #248]	; (405690 <main+0x650>)
  405598:	4610      	mov	r0, r2
  40559a:	4c3e      	ldr	r4, [pc, #248]	; (405694 <main+0x654>)
  40559c:	47a0      	blx	r4
  40559e:	483a      	ldr	r0, [pc, #232]	; (405688 <main+0x648>)
  4055a0:	2300      	movs	r3, #0
			for(i = 0; i < IO_BUF_SIZE; i+=4)
			{
#ifdef AUTOTUNE
				outBuffer[i] = (uint16_t)(int16_t)(harmonized_output_filt[processIdx++] * INT16_MAX);
#else
				outBuffer[i] = (uint16_t)(int16_t)(mixed_buffer[idx++]);  
  4055a2:	ecf0 7a01 	vldmia	r0!, {s15}
#endif 
				outBuffer[i+1] = outBuffer[i]; 
  4055a6:	f103 0e02 	add.w	lr, r3, #2
				outBuffer[i] = (uint16_t)(int16_t)(mixed_buffer[idx++]);  
  4055aa:	6829      	ldr	r1, [r5, #0]
				outBuffer[i+2] = outBuffer[i]; 
  4055ac:	1d1c      	adds	r4, r3, #4
				outBuffer[i] = (uint16_t)(int16_t)(mixed_buffer[idx++]);  
  4055ae:	eefd 7ae7 	vcvt.s32.f32	s15, s15
				outBuffer[i+3] = outBuffer[i];
  4055b2:	1d9a      	adds	r2, r3, #6
			for(i = 0; i < IO_BUF_SIZE; i+=4)
  4055b4:	4550      	cmp	r0, sl
				outBuffer[i] = (uint16_t)(int16_t)(mixed_buffer[idx++]);  
  4055b6:	edcd 7a02 	vstr	s15, [sp, #8]
  4055ba:	f8bd c008 	ldrh.w	ip, [sp, #8]
  4055be:	f821 c003 	strh.w	ip, [r1, r3]
				outBuffer[i+1] = outBuffer[i]; 
  4055c2:	f8d5 c000 	ldr.w	ip, [r5]
  4055c6:	f83c 1003 	ldrh.w	r1, [ip, r3]
  4055ca:	b289      	uxth	r1, r1
  4055cc:	f82c 100e 	strh.w	r1, [ip, lr]
				outBuffer[i+2] = outBuffer[i]; 
  4055d0:	f8d5 e000 	ldr.w	lr, [r5]
  4055d4:	f83e 1003 	ldrh.w	r1, [lr, r3]
  4055d8:	b289      	uxth	r1, r1
  4055da:	f82e 1004 	strh.w	r1, [lr, r4]
				outBuffer[i+3] = outBuffer[i];
  4055de:	682c      	ldr	r4, [r5, #0]
  4055e0:	5ae1      	ldrh	r1, [r4, r3]
  4055e2:	f103 0308 	add.w	r3, r3, #8
  4055e6:	b289      	uxth	r1, r1
  4055e8:	52a1      	strh	r1, [r4, r2]
			for(i = 0; i < IO_BUF_SIZE; i+=4)
  4055ea:	d1da      	bne.n	4055a2 <main+0x562>
			}
			
			/* shift input back one quarter */ 
			arm_copy_f32(&x_in[STEP_SIZE], &x_in[0], WIN_SIZE-STEP_SIZE);
  4055ec:	492a      	ldr	r1, [pc, #168]	; (405698 <main+0x658>)
  4055ee:	f44f 7240 	mov.w	r2, #768	; 0x300
  4055f2:	4b22      	ldr	r3, [pc, #136]	; (40567c <main+0x63c>)
  4055f4:	f501 6080 	add.w	r0, r1, #1024	; 0x400
  4055f8:	4798      	blx	r3
  4055fa:	9905      	ldr	r1, [sp, #20]
			dataReceived = false; 
  4055fc:	2300      	movs	r3, #0
  4055fe:	684a      	ldr	r2, [r1, #4]
  405600:	f8d1 b000 	ldr.w	fp, [r1]
  405604:	9204      	str	r2, [sp, #16]
  405606:	4a25      	ldr	r2, [pc, #148]	; (40569c <main+0x65c>)
  405608:	7013      	strb	r3, [r2, #0]
  40560a:	9b06      	ldr	r3, [sp, #24]
  40560c:	685b      	ldr	r3, [r3, #4]
  40560e:	9303      	str	r3, [sp, #12]
  405610:	9b07      	ldr	r3, [sp, #28]
  405612:	685b      	ldr	r3, [r3, #4]
  405614:	9302      	str	r3, [sp, #8]
  405616:	e61f      	b.n	405258 <main+0x218>
		if (d2 <= d1)
  405618:	4611      	mov	r1, r2
	while (lo < hi)
  40561a:	428b      	cmp	r3, r1
  40561c:	f67f af64 	bls.w	4054e8 <main+0x4a8>
  405620:	185c      	adds	r4, r3, r1
  405622:	4618      	mov	r0, r3
  405624:	460a      	mov	r2, r1
  405626:	490c      	ldr	r1, [pc, #48]	; (405658 <main+0x618>)
  405628:	0863      	lsrs	r3, r4, #1
  40562a:	eb01 0183 	add.w	r1, r1, r3, lsl #2
  40562e:	edd1 7a01 	vldr	s15, [r1, #4]
  405632:	ed91 7a00 	vldr	s14, [r1]
  405636:	e71e      	b.n	405476 <main+0x436>
  405638:	20400074 	.word	0x20400074
  40563c:	20400040 	.word	0x20400040
  405640:	004064a9 	.word	0x004064a9
  405644:	004005e5 	.word	0x004005e5
  405648:	42480000 	.word	0x42480000
  40564c:	2040007c 	.word	0x2040007c
  405650:	43dc0000 	.word	0x43dc0000
  405654:	43e914fe 	.word	0x43e914fe
  405658:	0040c01c 	.word	0x0040c01c
  40565c:	00401195 	.word	0x00401195
  405660:	bf028f5c 	.word	0xbf028f5c
  405664:	3f8147ae 	.word	0x3f8147ae
  405668:	20412010 	.word	0x20412010
  40566c:	004012fd 	.word	0x004012fd
  405670:	20412800 	.word	0x20412800
  405674:	0040c00c 	.word	0x0040c00c
  405678:	20412000 	.word	0x20412000
  40567c:	00405729 	.word	0x00405729
  405680:	00406c65 	.word	0x00406c65
  405684:	2040001c 	.word	0x2040001c
  405688:	20415400 	.word	0x20415400
  40568c:	20412810 	.word	0x20412810
  405690:	46fffe00 	.word	0x46fffe00
  405694:	00406b69 	.word	0x00406b69
  405698:	20415800 	.word	0x20415800
  40569c:	2040101c 	.word	0x2040101c
  4056a0:	54442d18 	.word	0x54442d18
  4056a4:	3ff921fb 	.word	0x3ff921fb
  4056a8:	54442d18 	.word	0x54442d18
  4056ac:	400921fb 	.word	0x400921fb

004056b0 <vApplicationStackOverflowHook>:
  4056b0:	f04f 0380 	mov.w	r3, #128	; 0x80
  4056b4:	b672      	cpsid	i
  4056b6:	f383 8811 	msr	BASEPRI, r3
  4056ba:	f3bf 8f6f 	isb	sy
  4056be:	f3bf 8f4f 	dsb	sy
  4056c2:	b662      	cpsie	i
  4056c4:	e7fe      	b.n	4056c4 <vApplicationStackOverflowHook+0x14>
  4056c6:	bf00      	nop

004056c8 <vApplicationTickHook>:
	( void ) xFreeHeapSpace;
}
/*-----------------------------------------------------------*/

void vApplicationTickHook( void )
{
  4056c8:	b510      	push	{r4, lr}
	#if mainCREATE_SIMPLE_BLINKY_DEMO_ONLY == 0
	{
		/* The full demo includes a software timer demo/test that requires
		prodding periodically from the tick interrupt. */
		vTimerPeriodicISRTests();
  4056ca:	4b06      	ldr	r3, [pc, #24]	; (4056e4 <vApplicationTickHook+0x1c>)
  4056cc:	4798      	blx	r3

		/* Call the periodic queue overwrite from ISR demo. */
		vQueueOverwritePeriodicISRDemo();
  4056ce:	4b06      	ldr	r3, [pc, #24]	; (4056e8 <vApplicationTickHook+0x20>)
  4056d0:	4798      	blx	r3

		/* Call the periodic event group from ISR demo. */
		vPeriodicEventGroupsProcessing();
  4056d2:	4b06      	ldr	r3, [pc, #24]	; (4056ec <vApplicationTickHook+0x24>)
  4056d4:	4798      	blx	r3

		/* Call the code that uses a mutex from an ISR. */
		vInterruptSemaphorePeriodicTest();
  4056d6:	4b06      	ldr	r3, [pc, #24]	; (4056f0 <vApplicationTickHook+0x28>)
  4056d8:	4798      	blx	r3

		/* Call the code that 'gives' a task notification from an ISR. */
		xNotifyTaskFromISR();
  4056da:	4b06      	ldr	r3, [pc, #24]	; (4056f4 <vApplicationTickHook+0x2c>)
	}
	#endif
}
  4056dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		xNotifyTaskFromISR();
  4056e0:	4718      	bx	r3
  4056e2:	bf00      	nop
  4056e4:	004049d5 	.word	0x004049d5
  4056e8:	00404885 	.word	0x00404885
  4056ec:	00404759 	.word	0x00404759
  4056f0:	004047f1 	.word	0x004047f1
  4056f4:	00404925 	.word	0x00404925

004056f8 <arm_fill_f32>:
  4056f8:	b430      	push	{r4, r5}
  4056fa:	0895      	lsrs	r5, r2, #2
  4056fc:	d00b      	beq.n	405716 <arm_fill_f32+0x1e>
  4056fe:	460b      	mov	r3, r1
  405700:	462c      	mov	r4, r5
  405702:	3c01      	subs	r4, #1
  405704:	6018      	str	r0, [r3, #0]
  405706:	6058      	str	r0, [r3, #4]
  405708:	6098      	str	r0, [r3, #8]
  40570a:	60d8      	str	r0, [r3, #12]
  40570c:	f103 0310 	add.w	r3, r3, #16
  405710:	d1f7      	bne.n	405702 <arm_fill_f32+0xa>
  405712:	eb01 1105 	add.w	r1, r1, r5, lsl #4
  405716:	f012 0203 	ands.w	r2, r2, #3
  40571a:	d003      	beq.n	405724 <arm_fill_f32+0x2c>
  40571c:	3a01      	subs	r2, #1
  40571e:	f841 0b04 	str.w	r0, [r1], #4
  405722:	d1fb      	bne.n	40571c <arm_fill_f32+0x24>
  405724:	bc30      	pop	{r4, r5}
  405726:	4770      	bx	lr

00405728 <arm_copy_f32>:
  405728:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
  40572c:	ea5f 0992 	movs.w	r9, r2, lsr #2
  405730:	d018      	beq.n	405764 <arm_copy_f32+0x3c>
  405732:	4604      	mov	r4, r0
  405734:	460b      	mov	r3, r1
  405736:	464d      	mov	r5, r9
  405738:	f8d4 8000 	ldr.w	r8, [r4]
  40573c:	f8d4 c004 	ldr.w	ip, [r4, #4]
  405740:	68a7      	ldr	r7, [r4, #8]
  405742:	68e6      	ldr	r6, [r4, #12]
  405744:	3d01      	subs	r5, #1
  405746:	f8c3 8000 	str.w	r8, [r3]
  40574a:	f8c3 c004 	str.w	ip, [r3, #4]
  40574e:	609f      	str	r7, [r3, #8]
  405750:	60de      	str	r6, [r3, #12]
  405752:	f104 0410 	add.w	r4, r4, #16
  405756:	f103 0310 	add.w	r3, r3, #16
  40575a:	d1ed      	bne.n	405738 <arm_copy_f32+0x10>
  40575c:	ea4f 1909 	mov.w	r9, r9, lsl #4
  405760:	4448      	add	r0, r9
  405762:	4449      	add	r1, r9
  405764:	f012 0203 	ands.w	r2, r2, #3
  405768:	d005      	beq.n	405776 <arm_copy_f32+0x4e>
  40576a:	f850 3b04 	ldr.w	r3, [r0], #4
  40576e:	3a01      	subs	r2, #1
  405770:	f841 3b04 	str.w	r3, [r1], #4
  405774:	d1f9      	bne.n	40576a <arm_copy_f32+0x42>
  405776:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
  40577a:	4770      	bx	lr

0040577c <arm_min_f32>:
  40577c:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
  405780:	f101 3cff 	add.w	ip, r1, #4294967295
  405784:	ea5f 099c 	movs.w	r9, ip, lsr #2
  405788:	f100 0704 	add.w	r7, r0, #4
  40578c:	edd0 7a00 	vldr	s15, [r0]
  405790:	d05c      	beq.n	40584c <arm_min_f32+0xd0>
  405792:	463c      	mov	r4, r7
  405794:	464e      	mov	r6, r9
  405796:	2004      	movs	r0, #4
  405798:	2500      	movs	r5, #0
  40579a:	edd4 6a00 	vldr	s13, [r4]
  40579e:	eef4 6ae7 	vcmpe.f32	s13, s15
  4057a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4057a6:	ed94 7a01 	vldr	s14, [r4, #4]
  4057aa:	bf48      	it	mi
  4057ac:	eef0 7a66 	vmovmi.f32	s15, s13
  4057b0:	eef4 7ac7 	vcmpe.f32	s15, s14
  4057b4:	f1a0 0803 	sub.w	r8, r0, #3
  4057b8:	bf48      	it	mi
  4057ba:	4645      	movmi	r5, r8
  4057bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4057c0:	edd4 6a02 	vldr	s13, [r4, #8]
  4057c4:	bfc8      	it	gt
  4057c6:	eef0 7a47 	vmovgt.f32	s15, s14
  4057ca:	eef4 7ae6 	vcmpe.f32	s15, s13
  4057ce:	f1a0 0802 	sub.w	r8, r0, #2
  4057d2:	bfc8      	it	gt
  4057d4:	4645      	movgt	r5, r8
  4057d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4057da:	ed94 7a03 	vldr	s14, [r4, #12]
  4057de:	bfc8      	it	gt
  4057e0:	eef0 7a66 	vmovgt.f32	s15, s13
  4057e4:	eef4 7ac7 	vcmpe.f32	s15, s14
  4057e8:	f100 38ff 	add.w	r8, r0, #4294967295
  4057ec:	bfc8      	it	gt
  4057ee:	4645      	movgt	r5, r8
  4057f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4057f4:	bfc8      	it	gt
  4057f6:	4605      	movgt	r5, r0
  4057f8:	bfc8      	it	gt
  4057fa:	eef0 7a47 	vmovgt.f32	s15, s14
  4057fe:	3e01      	subs	r6, #1
  405800:	f104 0410 	add.w	r4, r4, #16
  405804:	f100 0004 	add.w	r0, r0, #4
  405808:	d1c7      	bne.n	40579a <arm_min_f32+0x1e>
  40580a:	eb07 1709 	add.w	r7, r7, r9, lsl #4
  40580e:	f01c 0c03 	ands.w	ip, ip, #3
  405812:	d01d      	beq.n	405850 <arm_min_f32+0xd4>
  405814:	ebcc 0101 	rsb	r1, ip, r1
  405818:	2000      	movs	r0, #0
  40581a:	ecb7 7a01 	vldmia	r7!, {s14}
  40581e:	eeb4 7ae7 	vcmpe.f32	s14, s15
  405822:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  405826:	bf48      	it	mi
  405828:	eef0 7a47 	vmovmi.f32	s15, s14
  40582c:	eb01 0400 	add.w	r4, r1, r0
  405830:	f100 0001 	add.w	r0, r0, #1
  405834:	bf48      	it	mi
  405836:	4625      	movmi	r5, r4
  405838:	4560      	cmp	r0, ip
  40583a:	eeb0 7a67 	vmov.f32	s14, s15
  40583e:	d1ec      	bne.n	40581a <arm_min_f32+0x9e>
  405840:	ed82 7a00 	vstr	s14, [r2]
  405844:	601d      	str	r5, [r3, #0]
  405846:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
  40584a:	4770      	bx	lr
  40584c:	464d      	mov	r5, r9
  40584e:	e7de      	b.n	40580e <arm_min_f32+0x92>
  405850:	eeb0 7a67 	vmov.f32	s14, s15
  405854:	e7f4      	b.n	405840 <arm_min_f32+0xc4>
  405856:	bf00      	nop

00405858 <arm_max_f32>:
  405858:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
  40585c:	f101 3cff 	add.w	ip, r1, #4294967295
  405860:	ea5f 099c 	movs.w	r9, ip, lsr #2
  405864:	f100 0704 	add.w	r7, r0, #4
  405868:	edd0 7a00 	vldr	s15, [r0]
  40586c:	d05c      	beq.n	405928 <arm_max_f32+0xd0>
  40586e:	463c      	mov	r4, r7
  405870:	464e      	mov	r6, r9
  405872:	2004      	movs	r0, #4
  405874:	2500      	movs	r5, #0
  405876:	edd4 6a00 	vldr	s13, [r4]
  40587a:	eef4 6ae7 	vcmpe.f32	s13, s15
  40587e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  405882:	ed94 7a01 	vldr	s14, [r4, #4]
  405886:	bfc8      	it	gt
  405888:	eef0 7a66 	vmovgt.f32	s15, s13
  40588c:	eef4 7ac7 	vcmpe.f32	s15, s14
  405890:	f1a0 0803 	sub.w	r8, r0, #3
  405894:	bfc8      	it	gt
  405896:	4645      	movgt	r5, r8
  405898:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  40589c:	edd4 6a02 	vldr	s13, [r4, #8]
  4058a0:	bf48      	it	mi
  4058a2:	eef0 7a47 	vmovmi.f32	s15, s14
  4058a6:	eef4 7ae6 	vcmpe.f32	s15, s13
  4058aa:	f1a0 0802 	sub.w	r8, r0, #2
  4058ae:	bf48      	it	mi
  4058b0:	4645      	movmi	r5, r8
  4058b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4058b6:	ed94 7a03 	vldr	s14, [r4, #12]
  4058ba:	bf48      	it	mi
  4058bc:	eef0 7a66 	vmovmi.f32	s15, s13
  4058c0:	eef4 7ac7 	vcmpe.f32	s15, s14
  4058c4:	f100 38ff 	add.w	r8, r0, #4294967295
  4058c8:	bf48      	it	mi
  4058ca:	4645      	movmi	r5, r8
  4058cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4058d0:	bf48      	it	mi
  4058d2:	4605      	movmi	r5, r0
  4058d4:	bf48      	it	mi
  4058d6:	eef0 7a47 	vmovmi.f32	s15, s14
  4058da:	3e01      	subs	r6, #1
  4058dc:	f104 0410 	add.w	r4, r4, #16
  4058e0:	f100 0004 	add.w	r0, r0, #4
  4058e4:	d1c7      	bne.n	405876 <arm_max_f32+0x1e>
  4058e6:	eb07 1709 	add.w	r7, r7, r9, lsl #4
  4058ea:	f01c 0c03 	ands.w	ip, ip, #3
  4058ee:	d01d      	beq.n	40592c <arm_max_f32+0xd4>
  4058f0:	ebcc 0101 	rsb	r1, ip, r1
  4058f4:	2000      	movs	r0, #0
  4058f6:	ecb7 7a01 	vldmia	r7!, {s14}
  4058fa:	eeb4 7ae7 	vcmpe.f32	s14, s15
  4058fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  405902:	bfc8      	it	gt
  405904:	eef0 7a47 	vmovgt.f32	s15, s14
  405908:	eb01 0400 	add.w	r4, r1, r0
  40590c:	f100 0001 	add.w	r0, r0, #1
  405910:	bfc8      	it	gt
  405912:	4625      	movgt	r5, r4
  405914:	4560      	cmp	r0, ip
  405916:	eeb0 7a67 	vmov.f32	s14, s15
  40591a:	d1ec      	bne.n	4058f6 <arm_max_f32+0x9e>
  40591c:	ed82 7a00 	vstr	s14, [r2]
  405920:	601d      	str	r5, [r3, #0]
  405922:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
  405926:	4770      	bx	lr
  405928:	464d      	mov	r5, r9
  40592a:	e7de      	b.n	4058ea <arm_max_f32+0x92>
  40592c:	eeb0 7a67 	vmov.f32	s14, s15
  405930:	e7f4      	b.n	40591c <arm_max_f32+0xc4>
  405932:	bf00      	nop

00405934 <arm_sin_cos_f32>:
  405934:	eddf 7a44 	vldr	s15, [pc, #272]	; 405a48 <arm_sin_cos_f32+0x114>
  405938:	ee03 0a10 	vmov	s6, r0
  40593c:	ee63 7a27 	vmul.f32	s15, s6, s15
  405940:	eef5 7ac0 	vcmpe.f32	s15, #0.0
  405944:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  405948:	b430      	push	{r4, r5}
  40594a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
  40594e:	d504      	bpl.n	40595a <arm_sin_cos_f32+0x26>
  405950:	ee17 3a10 	vmov	r3, s14
  405954:	3b01      	subs	r3, #1
  405956:	ee07 3a10 	vmov	s14, r3
  40595a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
  40595e:	eddf 6a3b 	vldr	s13, [pc, #236]	; 405a4c <arm_sin_cos_f32+0x118>
  405962:	ee37 7ac7 	vsub.f32	s14, s15, s14
  405966:	ee27 7a26 	vmul.f32	s14, s14, s13
  40596a:	eebc 3ac7 	vcvt.u32.f32	s6, s14
  40596e:	ee13 3a10 	vmov	r3, s6
  405972:	4837      	ldr	r0, [pc, #220]	; (405a50 <arm_sin_cos_f32+0x11c>)
  405974:	f3c3 0308 	ubfx	r3, r3, #0, #9
  405978:	eb00 0483 	add.w	r4, r0, r3, lsl #2
  40597c:	edd4 5a00 	vldr	s11, [r4]
  405980:	f103 0480 	add.w	r4, r3, #128	; 0x80
  405984:	f3c4 0408 	ubfx	r4, r4, #0, #9
  405988:	eb00 0584 	add.w	r5, r0, r4, lsl #2
  40598c:	eb00 0083 	add.w	r0, r0, r3, lsl #2
  405990:	edd5 7a00 	vldr	s15, [r5]
  405994:	ed95 4a01 	vldr	s8, [r5, #4]
  405998:	bc30      	pop	{r4, r5}
  40599a:	eeb1 6a65 	vneg.f32	s12, s11
  40599e:	edd0 3a01 	vldr	s7, [r0, #4]
  4059a2:	eddf 6a2c 	vldr	s13, [pc, #176]	; 405a54 <arm_sin_cos_f32+0x120>
  4059a6:	ee74 4a67 	vsub.f32	s9, s8, s15
  4059aa:	ee33 5ae5 	vsub.f32	s10, s7, s11
  4059ae:	ee36 2a63 	vsub.f32	s4, s12, s7
  4059b2:	ee76 1a06 	vadd.f32	s3, s12, s12
  4059b6:	ee77 2a84 	vadd.f32	s5, s15, s8
  4059ba:	ee37 0aa7 	vadd.f32	s0, s15, s15
  4059be:	ee03 3a10 	vmov	s6, r3
  4059c2:	ee34 1aa4 	vadd.f32	s2, s9, s9
  4059c6:	eef8 0a43 	vcvt.f32.u32	s1, s6
  4059ca:	ee22 2a26 	vmul.f32	s4, s4, s13
  4059ce:	eeb0 3a08 	vmov.f32	s6, #8	; 0x40400000  3.0
  4059d2:	ee71 3ae3 	vsub.f32	s7, s3, s7
  4059d6:	ee62 2aa6 	vmul.f32	s5, s5, s13
  4059da:	ee75 1a05 	vadd.f32	s3, s10, s10
  4059de:	ee34 4a00 	vadd.f32	s8, s8, s0
  4059e2:	ee37 7a60 	vsub.f32	s14, s14, s1
  4059e6:	ee63 3aa6 	vmul.f32	s7, s7, s13
  4059ea:	ee24 4a26 	vmul.f32	s8, s8, s13
  4059ee:	ee32 2a41 	vsub.f32	s4, s4, s2
  4059f2:	ee64 4a83 	vmul.f32	s9, s9, s6
  4059f6:	ee25 5a03 	vmul.f32	s10, s10, s6
  4059fa:	ee72 2ae1 	vsub.f32	s5, s5, s3
  4059fe:	ee27 2a02 	vmul.f32	s4, s14, s4
  405a02:	ee67 2a22 	vmul.f32	s5, s14, s5
  405a06:	ee74 4ae3 	vsub.f32	s9, s9, s7
  405a0a:	ee35 5a44 	vsub.f32	s10, s10, s8
  405a0e:	ee72 4a24 	vadd.f32	s9, s4, s9
  405a12:	ee32 5a85 	vadd.f32	s10, s5, s10
  405a16:	ee67 4a24 	vmul.f32	s9, s14, s9
  405a1a:	ee26 6a26 	vmul.f32	s12, s12, s13
  405a1e:	ee27 5a05 	vmul.f32	s10, s14, s10
  405a22:	ee67 6aa6 	vmul.f32	s13, s15, s13
  405a26:	ee34 6a86 	vadd.f32	s12, s9, s12
  405a2a:	ee75 6a26 	vadd.f32	s13, s10, s13
  405a2e:	ee27 6a06 	vmul.f32	s12, s14, s12
  405a32:	ee27 7a26 	vmul.f32	s14, s14, s13
  405a36:	ee76 7a27 	vadd.f32	s15, s12, s15
  405a3a:	ee75 5a87 	vadd.f32	s11, s11, s14
  405a3e:	edc2 7a00 	vstr	s15, [r2]
  405a42:	edc1 5a00 	vstr	s11, [r1]
  405a46:	4770      	bx	lr
  405a48:	3b360b61 	.word	0x3b360b61
  405a4c:	44000000 	.word	0x44000000
  405a50:	00419c24 	.word	0x00419c24
  405a54:	3c490fdb 	.word	0x3c490fdb

00405a58 <arm_rfft_fast_init_f32>:
  405a58:	084b      	lsrs	r3, r1, #1
  405a5a:	2b80      	cmp	r3, #128	; 0x80
  405a5c:	b410      	push	{r4}
  405a5e:	8201      	strh	r1, [r0, #16]
  405a60:	8003      	strh	r3, [r0, #0]
  405a62:	d047      	beq.n	405af4 <arm_rfft_fast_init_f32+0x9c>
  405a64:	d917      	bls.n	405a96 <arm_rfft_fast_init_f32+0x3e>
  405a66:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  405a6a:	d03d      	beq.n	405ae8 <arm_rfft_fast_init_f32+0x90>
  405a6c:	d929      	bls.n	405ac2 <arm_rfft_fast_init_f32+0x6a>
  405a6e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
  405a72:	d020      	beq.n	405ab6 <arm_rfft_fast_init_f32+0x5e>
  405a74:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
  405a78:	d113      	bne.n	405aa2 <arm_rfft_fast_init_f32+0x4a>
  405a7a:	4c21      	ldr	r4, [pc, #132]	; (405b00 <arm_rfft_fast_init_f32+0xa8>)
  405a7c:	4921      	ldr	r1, [pc, #132]	; (405b04 <arm_rfft_fast_init_f32+0xac>)
  405a7e:	4a22      	ldr	r2, [pc, #136]	; (405b08 <arm_rfft_fast_init_f32+0xb0>)
  405a80:	f44f 636e 	mov.w	r3, #3808	; 0xee0
  405a84:	6084      	str	r4, [r0, #8]
  405a86:	6041      	str	r1, [r0, #4]
  405a88:	6142      	str	r2, [r0, #20]
  405a8a:	8183      	strh	r3, [r0, #12]
  405a8c:	2000      	movs	r0, #0
  405a8e:	b240      	sxtb	r0, r0
  405a90:	f85d 4b04 	ldr.w	r4, [sp], #4
  405a94:	4770      	bx	lr
  405a96:	2b20      	cmp	r3, #32
  405a98:	d01c      	beq.n	405ad4 <arm_rfft_fast_init_f32+0x7c>
  405a9a:	2b40      	cmp	r3, #64	; 0x40
  405a9c:	d006      	beq.n	405aac <arm_rfft_fast_init_f32+0x54>
  405a9e:	2b10      	cmp	r3, #16
  405aa0:	d01d      	beq.n	405ade <arm_rfft_fast_init_f32+0x86>
  405aa2:	20ff      	movs	r0, #255	; 0xff
  405aa4:	b240      	sxtb	r0, r0
  405aa6:	f85d 4b04 	ldr.w	r4, [sp], #4
  405aaa:	4770      	bx	lr
  405aac:	4c17      	ldr	r4, [pc, #92]	; (405b0c <arm_rfft_fast_init_f32+0xb4>)
  405aae:	4918      	ldr	r1, [pc, #96]	; (405b10 <arm_rfft_fast_init_f32+0xb8>)
  405ab0:	4a18      	ldr	r2, [pc, #96]	; (405b14 <arm_rfft_fast_init_f32+0xbc>)
  405ab2:	2338      	movs	r3, #56	; 0x38
  405ab4:	e7e6      	b.n	405a84 <arm_rfft_fast_init_f32+0x2c>
  405ab6:	4c18      	ldr	r4, [pc, #96]	; (405b18 <arm_rfft_fast_init_f32+0xc0>)
  405ab8:	4918      	ldr	r1, [pc, #96]	; (405b1c <arm_rfft_fast_init_f32+0xc4>)
  405aba:	4a19      	ldr	r2, [pc, #100]	; (405b20 <arm_rfft_fast_init_f32+0xc8>)
  405abc:	f44f 63e1 	mov.w	r3, #1800	; 0x708
  405ac0:	e7e0      	b.n	405a84 <arm_rfft_fast_init_f32+0x2c>
  405ac2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
  405ac6:	d1ec      	bne.n	405aa2 <arm_rfft_fast_init_f32+0x4a>
  405ac8:	4c16      	ldr	r4, [pc, #88]	; (405b24 <arm_rfft_fast_init_f32+0xcc>)
  405aca:	4917      	ldr	r1, [pc, #92]	; (405b28 <arm_rfft_fast_init_f32+0xd0>)
  405acc:	4a17      	ldr	r2, [pc, #92]	; (405b2c <arm_rfft_fast_init_f32+0xd4>)
  405ace:	f44f 73dc 	mov.w	r3, #440	; 0x1b8
  405ad2:	e7d7      	b.n	405a84 <arm_rfft_fast_init_f32+0x2c>
  405ad4:	4c16      	ldr	r4, [pc, #88]	; (405b30 <arm_rfft_fast_init_f32+0xd8>)
  405ad6:	4917      	ldr	r1, [pc, #92]	; (405b34 <arm_rfft_fast_init_f32+0xdc>)
  405ad8:	4a17      	ldr	r2, [pc, #92]	; (405b38 <arm_rfft_fast_init_f32+0xe0>)
  405ada:	2330      	movs	r3, #48	; 0x30
  405adc:	e7d2      	b.n	405a84 <arm_rfft_fast_init_f32+0x2c>
  405ade:	4c17      	ldr	r4, [pc, #92]	; (405b3c <arm_rfft_fast_init_f32+0xe4>)
  405ae0:	4917      	ldr	r1, [pc, #92]	; (405b40 <arm_rfft_fast_init_f32+0xe8>)
  405ae2:	4a18      	ldr	r2, [pc, #96]	; (405b44 <arm_rfft_fast_init_f32+0xec>)
  405ae4:	2314      	movs	r3, #20
  405ae6:	e7cd      	b.n	405a84 <arm_rfft_fast_init_f32+0x2c>
  405ae8:	4c17      	ldr	r4, [pc, #92]	; (405b48 <arm_rfft_fast_init_f32+0xf0>)
  405aea:	4918      	ldr	r1, [pc, #96]	; (405b4c <arm_rfft_fast_init_f32+0xf4>)
  405aec:	4a18      	ldr	r2, [pc, #96]	; (405b50 <arm_rfft_fast_init_f32+0xf8>)
  405aee:	f44f 73e0 	mov.w	r3, #448	; 0x1c0
  405af2:	e7c7      	b.n	405a84 <arm_rfft_fast_init_f32+0x2c>
  405af4:	4c17      	ldr	r4, [pc, #92]	; (405b54 <arm_rfft_fast_init_f32+0xfc>)
  405af6:	4918      	ldr	r1, [pc, #96]	; (405b58 <arm_rfft_fast_init_f32+0x100>)
  405af8:	4a18      	ldr	r2, [pc, #96]	; (405b5c <arm_rfft_fast_init_f32+0x104>)
  405afa:	23d0      	movs	r3, #208	; 0xd0
  405afc:	e7c2      	b.n	405a84 <arm_rfft_fast_init_f32+0x2c>
  405afe:	bf00      	nop
  405b00:	0041b828 	.word	0x0041b828
  405b04:	0040c21c 	.word	0x0040c21c
  405b08:	0041238c 	.word	0x0041238c
  405b0c:	0041031c 	.word	0x0041031c
  405b10:	0041d5e8 	.word	0x0041d5e8
  405b14:	0041fad8 	.word	0x0041fad8
  405b18:	00418d0c 	.word	0x00418d0c
  405b1c:	00416c0c 	.word	0x00416c0c
  405b20:	0041038c 	.word	0x0041038c
  405b24:	0041f768 	.word	0x0041f768
  405b28:	0041638c 	.word	0x0041638c
  405b2c:	0041d7e8 	.word	0x0041d7e8
  405b30:	00419bc4 	.word	0x00419bc4
  405b34:	00418c0c 	.word	0x00418c0c
  405b38:	0041021c 	.word	0x0041021c
  405b3c:	00419b1c 	.word	0x00419b1c
  405b40:	00416b8c 	.word	0x00416b8c
  405b44:	00419b44 	.word	0x00419b44
  405b48:	0041dfe8 	.word	0x0041dfe8
  405b4c:	0041a828 	.word	0x0041a828
  405b50:	0041e368 	.word	0x0041e368
  405b54:	0041fcd8 	.word	0x0041fcd8
  405b58:	0041a428 	.word	0x0041a428
  405b5c:	0041f368 	.word	0x0041f368

00405b60 <arm_rfft_fast_f32>:
  405b60:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  405b64:	8a07      	ldrh	r7, [r0, #16]
  405b66:	4682      	mov	sl, r0
  405b68:	087f      	lsrs	r7, r7, #1
  405b6a:	4691      	mov	r9, r2
  405b6c:	8007      	strh	r7, [r0, #0]
  405b6e:	4688      	mov	r8, r1
  405b70:	2b00      	cmp	r3, #0
  405b72:	d15e      	bne.n	405c32 <arm_rfft_fast_f32+0xd2>
  405b74:	461a      	mov	r2, r3
  405b76:	2301      	movs	r3, #1
  405b78:	f000 fc16 	bl	4063a8 <arm_cfft_f32>
  405b7c:	ed98 7a00 	vldr	s14, [r8]
  405b80:	edd8 7a01 	vldr	s15, [r8, #4]
  405b84:	ee37 7a07 	vadd.f32	s14, s14, s14
  405b88:	ee77 7aa7 	vadd.f32	s15, s15, s15
  405b8c:	eeb6 4a00 	vmov.f32	s8, #96	; 0x3f000000  0.5
  405b90:	ee77 6a27 	vadd.f32	s13, s14, s15
  405b94:	ee77 7a67 	vsub.f32	s15, s14, s15
  405b98:	ee66 6a84 	vmul.f32	s13, s13, s8
  405b9c:	ee67 7a84 	vmul.f32	s15, s15, s8
  405ba0:	f8ba 4000 	ldrh.w	r4, [sl]
  405ba4:	f8da 0014 	ldr.w	r0, [sl, #20]
  405ba8:	edc9 6a00 	vstr	s13, [r9]
  405bac:	edc9 7a01 	vstr	s15, [r9, #4]
  405bb0:	3c01      	subs	r4, #1
  405bb2:	3008      	adds	r0, #8
  405bb4:	f109 0208 	add.w	r2, r9, #8
  405bb8:	eb08 05c4 	add.w	r5, r8, r4, lsl #3
  405bbc:	f108 0308 	add.w	r3, r8, #8
  405bc0:	4629      	mov	r1, r5
  405bc2:	edd3 7a00 	vldr	s15, [r3]
  405bc6:	edd1 4a00 	vldr	s9, [r1]
  405bca:	edd5 5a01 	vldr	s11, [r5, #4]
  405bce:	edd0 6a00 	vldr	s13, [r0]
  405bd2:	ed93 5a01 	vldr	s10, [r3, #4]
  405bd6:	ed90 7a01 	vldr	s14, [r0, #4]
  405bda:	ee34 6ae7 	vsub.f32	s12, s9, s15
  405bde:	ee74 4aa7 	vadd.f32	s9, s9, s15
  405be2:	ee66 3a86 	vmul.f32	s7, s13, s12
  405be6:	ee75 7a85 	vadd.f32	s15, s11, s10
  405bea:	ee27 6a06 	vmul.f32	s12, s14, s12
  405bee:	ee75 5a65 	vsub.f32	s11, s10, s11
  405bf2:	ee66 6aa7 	vmul.f32	s13, s13, s15
  405bf6:	ee73 4aa4 	vadd.f32	s9, s7, s9
  405bfa:	ee67 7a27 	vmul.f32	s15, s14, s15
  405bfe:	ee36 6a25 	vadd.f32	s12, s12, s11
  405c02:	ee77 7aa4 	vadd.f32	s15, s15, s9
  405c06:	ee76 6a66 	vsub.f32	s13, s12, s13
  405c0a:	ee67 7a84 	vmul.f32	s15, s15, s8
  405c0e:	ee66 6a84 	vmul.f32	s13, s13, s8
  405c12:	3c01      	subs	r4, #1
  405c14:	edc2 7a00 	vstr	s15, [r2]
  405c18:	edc2 6a01 	vstr	s13, [r2, #4]
  405c1c:	f1a5 0508 	sub.w	r5, r5, #8
  405c20:	f103 0308 	add.w	r3, r3, #8
  405c24:	f100 0008 	add.w	r0, r0, #8
  405c28:	f102 0208 	add.w	r2, r2, #8
  405c2c:	d1c8      	bne.n	405bc0 <arm_rfft_fast_f32+0x60>
  405c2e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405c32:	ed91 7a00 	vldr	s14, [r1]
  405c36:	edd1 7a01 	vldr	s15, [r1, #4]
  405c3a:	eeb6 4a00 	vmov.f32	s8, #96	; 0x3f000000  0.5
  405c3e:	ee77 6a27 	vadd.f32	s13, s14, s15
  405c42:	ee77 7a67 	vsub.f32	s15, s14, s15
  405c46:	ee66 6a84 	vmul.f32	s13, s13, s8
  405c4a:	ee67 7a84 	vmul.f32	s15, s15, s8
  405c4e:	ee16 1a90 	vmov	r1, s13
  405c52:	6945      	ldr	r5, [r0, #20]
  405c54:	3f01      	subs	r7, #1
  405c56:	4616      	mov	r6, r2
  405c58:	f846 1b08 	str.w	r1, [r6], #8
  405c5c:	3508      	adds	r5, #8
  405c5e:	eb08 0cc7 	add.w	ip, r8, r7, lsl #3
  405c62:	edc2 7a01 	vstr	s15, [r2, #4]
  405c66:	f108 0408 	add.w	r4, r8, #8
  405c6a:	b3b7      	cbz	r7, 405cda <arm_rfft_fast_f32+0x17a>
  405c6c:	4662      	mov	r2, ip
  405c6e:	edd4 7a00 	vldr	s15, [r4]
  405c72:	edd2 4a00 	vldr	s9, [r2]
  405c76:	eddc 5a01 	vldr	s11, [ip, #4]
  405c7a:	edd5 6a00 	vldr	s13, [r5]
  405c7e:	ed94 5a01 	vldr	s10, [r4, #4]
  405c82:	ed95 7a01 	vldr	s14, [r5, #4]
  405c86:	ee37 6ae4 	vsub.f32	s12, s15, s9
  405c8a:	ee74 4aa7 	vadd.f32	s9, s9, s15
  405c8e:	ee66 3a86 	vmul.f32	s7, s13, s12
  405c92:	ee75 7a85 	vadd.f32	s15, s11, s10
  405c96:	ee27 6a06 	vmul.f32	s12, s14, s12
  405c9a:	ee75 5a65 	vsub.f32	s11, s10, s11
  405c9e:	ee66 6aa7 	vmul.f32	s13, s13, s15
  405ca2:	ee74 4ae3 	vsub.f32	s9, s9, s7
  405ca6:	ee27 7a27 	vmul.f32	s14, s14, s15
  405caa:	ee36 6a25 	vadd.f32	s12, s12, s11
  405cae:	ee74 7ac7 	vsub.f32	s15, s9, s14
  405cb2:	ee76 6a66 	vsub.f32	s13, s12, s13
  405cb6:	ee67 7a84 	vmul.f32	s15, s15, s8
  405cba:	ee66 6a84 	vmul.f32	s13, s13, s8
  405cbe:	3f01      	subs	r7, #1
  405cc0:	edc6 7a00 	vstr	s15, [r6]
  405cc4:	edc6 6a01 	vstr	s13, [r6, #4]
  405cc8:	f1ac 0c08 	sub.w	ip, ip, #8
  405ccc:	f104 0408 	add.w	r4, r4, #8
  405cd0:	f105 0508 	add.w	r5, r5, #8
  405cd4:	f106 0608 	add.w	r6, r6, #8
  405cd8:	d1c8      	bne.n	405c6c <arm_rfft_fast_f32+0x10c>
  405cda:	4650      	mov	r0, sl
  405cdc:	4649      	mov	r1, r9
  405cde:	461a      	mov	r2, r3
  405ce0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  405ce4:	2301      	movs	r3, #1
  405ce6:	f000 bb5f 	b.w	4063a8 <arm_cfft_f32>
  405cea:	bf00      	nop

00405cec <arm_cfft_radix8by2_f32>:
  405cec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405cf0:	ed2d 8b08 	vpush	{d8-d11}
  405cf4:	f8b0 b000 	ldrh.w	fp, [r0]
  405cf8:	4680      	mov	r8, r0
  405cfa:	4608      	mov	r0, r1
  405cfc:	ea4f 015b 	mov.w	r1, fp, lsr #1
  405d00:	008d      	lsls	r5, r1, #2
  405d02:	eb00 098b 	add.w	r9, r0, fp, lsl #2
  405d06:	ea5f 0bdb 	movs.w	fp, fp, lsr #3
  405d0a:	eb00 0605 	add.w	r6, r0, r5
  405d0e:	b081      	sub	sp, #4
  405d10:	444d      	add	r5, r9
  405d12:	f8d8 2004 	ldr.w	r2, [r8, #4]
  405d16:	f000 80ba 	beq.w	405e8e <arm_cfft_radix8by2_f32+0x1a2>
  405d1a:	f100 0a10 	add.w	sl, r0, #16
  405d1e:	f106 0c10 	add.w	ip, r6, #16
  405d22:	f109 0e10 	add.w	lr, r9, #16
  405d26:	f105 0710 	add.w	r7, r5, #16
  405d2a:	4604      	mov	r4, r0
  405d2c:	464b      	mov	r3, r9
  405d2e:	ed1a 0a04 	vldr	s0, [sl, #-16]
  405d32:	ed1c 7a04 	vldr	s14, [ip, #-16]
  405d36:	ed1e 1a04 	vldr	s2, [lr, #-16]
  405d3a:	ed57 2a04 	vldr	s5, [r7, #-16]
  405d3e:	ed95 2a01 	vldr	s4, [r5, #4]
  405d42:	ed95 4a02 	vldr	s8, [r5, #8]
  405d46:	edd5 4a03 	vldr	s9, [r5, #12]
  405d4a:	edd4 0a01 	vldr	s1, [r4, #4]
  405d4e:	edd4 3a03 	vldr	s7, [r4, #12]
  405d52:	edd3 1a01 	vldr	s3, [r3, #4]
  405d56:	ed93 5a02 	vldr	s10, [r3, #8]
  405d5a:	edd6 6a01 	vldr	s13, [r6, #4]
  405d5e:	edd6 7a02 	vldr	s15, [r6, #8]
  405d62:	ed94 3a02 	vldr	s6, [r4, #8]
  405d66:	edd3 5a03 	vldr	s11, [r3, #12]
  405d6a:	ed96 6a03 	vldr	s12, [r6, #12]
  405d6e:	ee70 ba01 	vadd.f32	s23, s0, s2
  405d72:	ee36 8a24 	vadd.f32	s16, s12, s9
  405d76:	ee30 baa1 	vadd.f32	s22, s1, s3
  405d7a:	ee33 aaa5 	vadd.f32	s20, s7, s11
  405d7e:	ee77 9a22 	vadd.f32	s19, s14, s5
  405d82:	ee36 9a82 	vadd.f32	s18, s13, s4
  405d86:	ee77 8a84 	vadd.f32	s17, s15, s8
  405d8a:	ee73 aa05 	vadd.f32	s21, s6, s10
  405d8e:	ed4a ba04 	vstr	s23, [sl, #-16]
  405d92:	ed84 ba01 	vstr	s22, [r4, #4]
  405d96:	edc4 aa02 	vstr	s21, [r4, #8]
  405d9a:	ed84 aa03 	vstr	s20, [r4, #12]
  405d9e:	ed4c 9a04 	vstr	s19, [ip, #-16]
  405da2:	ed86 8a03 	vstr	s16, [r6, #12]
  405da6:	ed86 9a01 	vstr	s18, [r6, #4]
  405daa:	edc6 8a02 	vstr	s17, [r6, #8]
  405dae:	ee30 1a41 	vsub.f32	s2, s0, s2
  405db2:	ee72 2ac7 	vsub.f32	s5, s5, s14
  405db6:	ee32 2a66 	vsub.f32	s4, s4, s13
  405dba:	ed92 7a00 	vldr	s14, [r2]
  405dbe:	edd2 6a01 	vldr	s13, [r2, #4]
  405dc2:	ee70 1ae1 	vsub.f32	s3, s1, s3
  405dc6:	ee21 8a07 	vmul.f32	s16, s2, s14
  405dca:	ee61 0aa6 	vmul.f32	s1, s3, s13
  405dce:	ee21 1a26 	vmul.f32	s2, s2, s13
  405dd2:	ee61 1a87 	vmul.f32	s3, s3, s14
  405dd6:	ee22 0aa6 	vmul.f32	s0, s5, s13
  405dda:	ee62 6a26 	vmul.f32	s13, s4, s13
  405dde:	ee22 2a07 	vmul.f32	s4, s4, s14
  405de2:	ee22 7a87 	vmul.f32	s14, s5, s14
  405de6:	ee78 0a20 	vadd.f32	s1, s16, s1
  405dea:	ee36 7a87 	vadd.f32	s14, s13, s14
  405dee:	ee71 1ac1 	vsub.f32	s3, s3, s2
  405df2:	ee30 2a42 	vsub.f32	s4, s0, s4
  405df6:	ed4e 0a04 	vstr	s1, [lr, #-16]
  405dfa:	edc3 1a01 	vstr	s3, [r3, #4]
  405dfe:	ed07 2a04 	vstr	s4, [r7, #-16]
  405e02:	ed85 7a01 	vstr	s14, [r5, #4]
  405e06:	ee73 5ae5 	vsub.f32	s11, s7, s11
  405e0a:	ed92 7a03 	vldr	s14, [r2, #12]
  405e0e:	ee74 6a67 	vsub.f32	s13, s8, s15
  405e12:	ee34 6ac6 	vsub.f32	s12, s9, s12
  405e16:	edd2 7a02 	vldr	s15, [r2, #8]
  405e1a:	ee33 5a45 	vsub.f32	s10, s6, s10
  405e1e:	ee65 4a87 	vmul.f32	s9, s11, s14
  405e22:	ee65 3a27 	vmul.f32	s7, s10, s15
  405e26:	ee65 5aa7 	vmul.f32	s11, s11, s15
  405e2a:	ee25 5a07 	vmul.f32	s10, s10, s14
  405e2e:	ee26 4a87 	vmul.f32	s8, s13, s14
  405e32:	ee26 7a07 	vmul.f32	s14, s12, s14
  405e36:	ee26 6a27 	vmul.f32	s12, s12, s15
  405e3a:	ee66 7aa7 	vmul.f32	s15, s13, s15
  405e3e:	ee73 4aa4 	vadd.f32	s9, s7, s9
  405e42:	ee75 5ac5 	vsub.f32	s11, s11, s10
  405e46:	ee34 6a46 	vsub.f32	s12, s8, s12
  405e4a:	ee77 7a27 	vadd.f32	s15, s14, s15
  405e4e:	f1bb 0b01 	subs.w	fp, fp, #1
  405e52:	edc3 4a02 	vstr	s9, [r3, #8]
  405e56:	f10a 0a10 	add.w	sl, sl, #16
  405e5a:	edc3 5a03 	vstr	s11, [r3, #12]
  405e5e:	f104 0410 	add.w	r4, r4, #16
  405e62:	ed85 6a02 	vstr	s12, [r5, #8]
  405e66:	edc5 7a03 	vstr	s15, [r5, #12]
  405e6a:	f10c 0c10 	add.w	ip, ip, #16
  405e6e:	f106 0610 	add.w	r6, r6, #16
  405e72:	f10e 0e10 	add.w	lr, lr, #16
  405e76:	f107 0710 	add.w	r7, r7, #16
  405e7a:	f102 0210 	add.w	r2, r2, #16
  405e7e:	f103 0310 	add.w	r3, r3, #16
  405e82:	f105 0510 	add.w	r5, r5, #16
  405e86:	f47f af52 	bne.w	405d2e <arm_cfft_radix8by2_f32+0x42>
  405e8a:	f8d8 2004 	ldr.w	r2, [r8, #4]
  405e8e:	b28c      	uxth	r4, r1
  405e90:	4621      	mov	r1, r4
  405e92:	2302      	movs	r3, #2
  405e94:	f000 ff90 	bl	406db8 <arm_radix8_butterfly_f32>
  405e98:	f8d8 2004 	ldr.w	r2, [r8, #4]
  405e9c:	4648      	mov	r0, r9
  405e9e:	4621      	mov	r1, r4
  405ea0:	2302      	movs	r3, #2
  405ea2:	b001      	add	sp, #4
  405ea4:	ecbd 8b08 	vpop	{d8-d11}
  405ea8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405eac:	f000 bf84 	b.w	406db8 <arm_radix8_butterfly_f32>

00405eb0 <arm_cfft_radix8by4_f32>:
  405eb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405eb4:	ed2d 8b0a 	vpush	{d8-d12}
  405eb8:	8802      	ldrh	r2, [r0, #0]
  405eba:	b091      	sub	sp, #68	; 0x44
  405ebc:	0852      	lsrs	r2, r2, #1
  405ebe:	0093      	lsls	r3, r2, #2
  405ec0:	9109      	str	r1, [sp, #36]	; 0x24
  405ec2:	900a      	str	r0, [sp, #40]	; 0x28
  405ec4:	4419      	add	r1, r3
  405ec6:	9809      	ldr	r0, [sp, #36]	; 0x24
  405ec8:	9104      	str	r1, [sp, #16]
  405eca:	4419      	add	r1, r3
  405ecc:	edd0 4a00 	vldr	s9, [r0]
  405ed0:	ed91 5a00 	vldr	s10, [r1]
  405ed4:	9c04      	ldr	r4, [sp, #16]
  405ed6:	ee34 4a85 	vadd.f32	s8, s9, s10
  405eda:	ed94 7a00 	vldr	s14, [r4]
  405ede:	9105      	str	r1, [sp, #20]
  405ee0:	4419      	add	r1, r3
  405ee2:	edd1 7a00 	vldr	s15, [r1]
  405ee6:	ee34 3a07 	vadd.f32	s6, s8, s14
  405eea:	ee37 3a83 	vadd.f32	s6, s15, s6
  405eee:	9d05      	ldr	r5, [sp, #20]
  405ef0:	ed94 6a01 	vldr	s12, [r4, #4]
  405ef4:	ee13 4a10 	vmov	r4, s6
  405ef8:	edd0 3a01 	vldr	s7, [r0, #4]
  405efc:	edd5 5a01 	vldr	s11, [r5, #4]
  405f00:	ee34 5ac5 	vsub.f32	s10, s9, s10
  405f04:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  405f08:	9d04      	ldr	r5, [sp, #16]
  405f0a:	edd1 6a01 	vldr	s13, [r1, #4]
  405f0e:	9108      	str	r1, [sp, #32]
  405f10:	f8db 1004 	ldr.w	r1, [fp, #4]
  405f14:	f840 4b08 	str.w	r4, [r0], #8
  405f18:	ee73 4aa5 	vadd.f32	s9, s7, s11
  405f1c:	ed95 3a01 	vldr	s6, [r5, #4]
  405f20:	ee73 5ae5 	vsub.f32	s11, s7, s11
  405f24:	ee76 3a05 	vadd.f32	s7, s12, s10
  405f28:	f8dd b020 	ldr.w	fp, [sp, #32]
  405f2c:	ee34 3a83 	vadd.f32	s6, s9, s6
  405f30:	ed9b 2a01 	vldr	s4, [fp, #4]
  405f34:	ee34 4a47 	vsub.f32	s8, s8, s14
  405f38:	ee73 3ae6 	vsub.f32	s7, s7, s13
  405f3c:	ee74 4ac6 	vsub.f32	s9, s9, s12
  405f40:	ee75 2ac7 	vsub.f32	s5, s11, s14
  405f44:	ee35 6a46 	vsub.f32	s12, s10, s12
  405f48:	ee33 3a02 	vadd.f32	s6, s6, s4
  405f4c:	9006      	str	r0, [sp, #24]
  405f4e:	ee34 4a67 	vsub.f32	s8, s8, s15
  405f52:	ee13 0a90 	vmov	r0, s7
  405f56:	9c05      	ldr	r4, [sp, #20]
  405f58:	9502      	str	r5, [sp, #8]
  405f5a:	f8cd b00c 	str.w	fp, [sp, #12]
  405f5e:	f1ab 0504 	sub.w	r5, fp, #4
  405f62:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
  405f66:	0852      	lsrs	r2, r2, #1
  405f68:	ee74 4ae6 	vsub.f32	s9, s9, s13
  405f6c:	920f      	str	r2, [sp, #60]	; 0x3c
  405f6e:	ee76 6a86 	vadd.f32	s13, s13, s12
  405f72:	9407      	str	r4, [sp, #28]
  405f74:	ee32 6aa7 	vadd.f32	s12, s5, s15
  405f78:	ed8b 3a01 	vstr	s6, [fp, #4]
  405f7c:	9c02      	ldr	r4, [sp, #8]
  405f7e:	ee35 7a87 	vadd.f32	s14, s11, s14
  405f82:	f844 0b08 	str.w	r0, [r4], #8
  405f86:	ee14 0a10 	vmov	r0, s8
  405f8a:	9402      	str	r4, [sp, #8]
  405f8c:	9c04      	ldr	r4, [sp, #16]
  405f8e:	ee77 7a67 	vsub.f32	s15, s14, s15
  405f92:	ed84 6a01 	vstr	s12, [r4, #4]
  405f96:	9c07      	ldr	r4, [sp, #28]
  405f98:	f101 0b08 	add.w	fp, r1, #8
  405f9c:	f844 0b08 	str.w	r0, [r4], #8
  405fa0:	ee16 0a90 	vmov	r0, s13
  405fa4:	f8cd b038 	str.w	fp, [sp, #56]	; 0x38
  405fa8:	f101 0b10 	add.w	fp, r1, #16
  405fac:	3118      	adds	r1, #24
  405fae:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
  405fb2:	910c      	str	r1, [sp, #48]	; 0x30
  405fb4:	f8dd b014 	ldr.w	fp, [sp, #20]
  405fb8:	9903      	ldr	r1, [sp, #12]
  405fba:	3a02      	subs	r2, #2
  405fbc:	9407      	str	r4, [sp, #28]
  405fbe:	9c08      	ldr	r4, [sp, #32]
  405fc0:	edcb 4a01 	vstr	s9, [fp, #4]
  405fc4:	0852      	lsrs	r2, r2, #1
  405fc6:	f841 0b08 	str.w	r0, [r1], #8
  405fca:	442b      	add	r3, r5
  405fcc:	9103      	str	r1, [sp, #12]
  405fce:	edc4 7a01 	vstr	s15, [r4, #4]
  405fd2:	920d      	str	r2, [sp, #52]	; 0x34
  405fd4:	f000 8143 	beq.w	40625e <arm_cfft_radix8by4_f32+0x3ae>
  405fd8:	46dc      	mov	ip, fp
  405fda:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
  405fde:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
  405fe2:	f10b 0410 	add.w	r4, fp, #16
  405fe6:	f8dd b014 	ldr.w	fp, [sp, #20]
  405fea:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
  405fee:	f10b 0010 	add.w	r0, fp, #16
  405ff2:	f8dd b010 	ldr.w	fp, [sp, #16]
  405ff6:	f1ac 0604 	sub.w	r6, ip, #4
  405ffa:	f1ab 0904 	sub.w	r9, fp, #4
  405ffe:	46d8      	mov	r8, fp
  406000:	4693      	mov	fp, r2
  406002:	e88d 0820 	stmia.w	sp, {r5, fp}
  406006:	9a02      	ldr	r2, [sp, #8]
  406008:	4657      	mov	r7, sl
  40600a:	ed50 0a02 	vldr	s1, [r0, #-8]
  40600e:	ed54 8a02 	vldr	s17, [r4, #-8]
  406012:	ed92 6a00 	vldr	s12, [r2]
  406016:	ee78 9aa0 	vadd.f32	s19, s17, s1
  40601a:	edd1 6a00 	vldr	s13, [r1]
  40601e:	ee79 7a86 	vadd.f32	s15, s19, s12
  406022:	ee76 7aa7 	vadd.f32	s15, s13, s15
  406026:	ed10 4a01 	vldr	s8, [r0, #-4]
  40602a:	edd1 3a01 	vldr	s7, [r1, #4]
  40602e:	ed92 2a01 	vldr	s4, [r2, #4]
  406032:	ed14 8a01 	vldr	s16, [r4, #-4]
  406036:	ed44 7a02 	vstr	s15, [r4, #-8]
  40603a:	ee38 7a04 	vadd.f32	s14, s16, s8
  40603e:	edd2 7a01 	vldr	s15, [r2, #4]
  406042:	edd1 5a01 	vldr	s11, [r1, #4]
  406046:	ee77 7a27 	vadd.f32	s15, s14, s15
  40604a:	ee77 7aa5 	vadd.f32	s15, s15, s11
  40604e:	ed44 7a01 	vstr	s15, [r4, #-4]
  406052:	9d00      	ldr	r5, [sp, #0]
  406054:	ed18 0a01 	vldr	s0, [r8, #-4]
  406058:	edd5 4a00 	vldr	s9, [r5]
  40605c:	ed1c 5a01 	vldr	s10, [ip, #-4]
  406060:	ee30 9a24 	vadd.f32	s18, s0, s9
  406064:	edd3 1a00 	vldr	s3, [r3]
  406068:	ee79 7a05 	vadd.f32	s15, s18, s10
  40606c:	ee71 7aa7 	vadd.f32	s15, s3, s15
  406070:	ed55 5a01 	vldr	s11, [r5, #-4]
  406074:	ed16 3a01 	vldr	s6, [r6, #-4]
  406078:	ed53 2a01 	vldr	s5, [r3, #-4]
  40607c:	ed19 1a01 	vldr	s2, [r9, #-4]
  406080:	ed48 7a01 	vstr	s15, [r8, #-4]
  406084:	ee71 7a25 	vadd.f32	s15, s2, s11
  406088:	ed56 aa01 	vldr	s21, [r6, #-4]
  40608c:	ed13 aa01 	vldr	s20, [r3, #-4]
  406090:	ee77 aaaa 	vadd.f32	s21, s15, s21
  406094:	ee78 8ae0 	vsub.f32	s17, s17, s1
  406098:	ee38 8a44 	vsub.f32	s16, s16, s8
  40609c:	ee3a 4a8a 	vadd.f32	s8, s21, s20
  4060a0:	ee32 ba28 	vadd.f32	s22, s4, s17
  4060a4:	ed09 4a01 	vstr	s8, [r9, #-4]
  4060a8:	ee78 aa46 	vsub.f32	s21, s16, s12
  4060ac:	ee30 0a64 	vsub.f32	s0, s0, s9
  4060b0:	ed1a 4a02 	vldr	s8, [sl, #-8]
  4060b4:	ed5a 4a01 	vldr	s9, [sl, #-4]
  4060b8:	ee3b ba63 	vsub.f32	s22, s22, s7
  4060bc:	ee7a aaa6 	vadd.f32	s21, s21, s13
  4060c0:	ee75 0a61 	vsub.f32	s1, s10, s3
  4060c4:	ee31 1a65 	vsub.f32	s2, s2, s11
  4060c8:	ee30 aa43 	vsub.f32	s20, s0, s6
  4060cc:	ee6b ca04 	vmul.f32	s25, s22, s8
  4060d0:	ee6a baa4 	vmul.f32	s23, s21, s9
  4060d4:	ee3a aa22 	vadd.f32	s20, s20, s5
  4060d8:	ee70 5a81 	vadd.f32	s11, s1, s2
  4060dc:	ee7c baab 	vadd.f32	s23, s25, s23
  4060e0:	ee2a ca24 	vmul.f32	s24, s20, s9
  4060e4:	ee2b ba24 	vmul.f32	s22, s22, s9
  4060e8:	ee2a aa04 	vmul.f32	s20, s20, s8
  4060ec:	ee6a aa84 	vmul.f32	s21, s21, s8
  4060f0:	ee25 4a84 	vmul.f32	s8, s11, s8
  4060f4:	ee65 5aa4 	vmul.f32	s11, s11, s9
  4060f8:	ee1b ba90 	vmov	fp, s23
  4060fc:	ee75 5a8a 	vadd.f32	s11, s11, s20
  406100:	ee3c 4a44 	vsub.f32	s8, s24, s8
  406104:	ee7a aacb 	vsub.f32	s21, s21, s22
  406108:	ee39 5a45 	vsub.f32	s10, s18, s10
  40610c:	ee77 7ac3 	vsub.f32	s15, s15, s6
  406110:	f842 bb08 	str.w	fp, [r2], #8
  406114:	ed42 aa01 	vstr	s21, [r2, #-4]
  406118:	ed0c 4a01 	vstr	s8, [ip, #-4]
  40611c:	ed46 5a01 	vstr	s11, [r6, #-4]
  406120:	edd7 5a00 	vldr	s11, [r7]
  406124:	ee79 9ac6 	vsub.f32	s19, s19, s12
  406128:	ee75 1a61 	vsub.f32	s3, s10, s3
  40612c:	ee77 7ae2 	vsub.f32	s15, s15, s5
  406130:	ed97 5a01 	vldr	s10, [r7, #4]
  406134:	ee37 7a42 	vsub.f32	s14, s14, s4
  406138:	ee79 4ae6 	vsub.f32	s9, s19, s13
  40613c:	ee37 7a63 	vsub.f32	s14, s14, s7
  406140:	ee61 9ae5 	vnmul.f32	s19, s3, s11
  406144:	ee27 4a85 	vmul.f32	s8, s15, s10
  406148:	ee24 aaa5 	vmul.f32	s20, s9, s11
  40614c:	ee27 9a05 	vmul.f32	s18, s14, s10
  406150:	ee64 4a85 	vmul.f32	s9, s9, s10
  406154:	ee27 7a25 	vmul.f32	s14, s14, s11
  406158:	ee39 4ac4 	vsub.f32	s8, s19, s8
  40615c:	ee67 5aa5 	vmul.f32	s11, s15, s11
  406160:	ee61 1a85 	vmul.f32	s3, s3, s10
  406164:	ee37 7a64 	vsub.f32	s14, s14, s9
  406168:	ee14 ba10 	vmov	fp, s8
  40616c:	ee3a 9a09 	vadd.f32	s18, s20, s18
  406170:	ee71 1ae5 	vsub.f32	s3, s3, s11
  406174:	ed00 9a02 	vstr	s18, [r0, #-8]
  406178:	ed00 7a01 	vstr	s14, [r0, #-4]
  40617c:	f845 b908 	str.w	fp, [r5], #-8
  406180:	edc5 1a01 	vstr	s3, [r5, #4]
  406184:	ee38 6a06 	vadd.f32	s12, s16, s12
  406188:	ee38 2ac2 	vsub.f32	s4, s17, s4
  40618c:	ee32 3ac3 	vsub.f32	s6, s5, s6
  406190:	edde 7a00 	vldr	s15, [lr]
  406194:	ed9e 7a01 	vldr	s14, [lr, #4]
  406198:	ee73 3a82 	vadd.f32	s7, s7, s4
  40619c:	ee76 6a66 	vsub.f32	s13, s12, s13
  4061a0:	ee33 3a40 	vsub.f32	s6, s6, s0
  4061a4:	ee70 5ac1 	vsub.f32	s11, s1, s2
  4061a8:	ee63 4aa7 	vmul.f32	s9, s7, s15
  4061ac:	ee26 6a87 	vmul.f32	s12, s13, s14
  4061b0:	ee23 4a07 	vmul.f32	s8, s6, s14
  4061b4:	ee25 5aa7 	vmul.f32	s10, s11, s15
  4061b8:	ee74 4a86 	vadd.f32	s9, s9, s12
  4061bc:	ee63 3a87 	vmul.f32	s7, s7, s14
  4061c0:	ee66 6aa7 	vmul.f32	s13, s13, s15
  4061c4:	ee34 5a45 	vsub.f32	s10, s8, s10
  4061c8:	ee25 7a87 	vmul.f32	s14, s11, s14
  4061cc:	ee63 7a27 	vmul.f32	s15, s6, s15
  4061d0:	9500      	str	r5, [sp, #0]
  4061d2:	ee14 5a90 	vmov	r5, s9
  4061d6:	ee76 6ae3 	vsub.f32	s13, s13, s7
  4061da:	ee15 ba10 	vmov	fp, s10
  4061de:	ee37 3a27 	vadd.f32	s6, s14, s15
  4061e2:	f841 5b08 	str.w	r5, [r1], #8
  4061e6:	9d01      	ldr	r5, [sp, #4]
  4061e8:	ed41 6a01 	vstr	s13, [r1, #-4]
  4061ec:	3d01      	subs	r5, #1
  4061ee:	f843 b908 	str.w	fp, [r3], #-8
  4061f2:	f104 0408 	add.w	r4, r4, #8
  4061f6:	f1a8 0808 	sub.w	r8, r8, #8
  4061fa:	f1a9 0908 	sub.w	r9, r9, #8
  4061fe:	f10a 0a08 	add.w	sl, sl, #8
  406202:	f1ac 0c08 	sub.w	ip, ip, #8
  406206:	f1a6 0608 	sub.w	r6, r6, #8
  40620a:	f107 0710 	add.w	r7, r7, #16
  40620e:	f100 0008 	add.w	r0, r0, #8
  406212:	f10e 0e18 	add.w	lr, lr, #24
  406216:	ed83 3a01 	vstr	s6, [r3, #4]
  40621a:	9501      	str	r5, [sp, #4]
  40621c:	f47f aef5 	bne.w	40600a <arm_cfft_radix8by4_f32+0x15a>
  406220:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  406224:	980b      	ldr	r0, [sp, #44]	; 0x2c
  406226:	9906      	ldr	r1, [sp, #24]
  406228:	ea4f 03cb 	mov.w	r3, fp, lsl #3
  40622c:	eb00 100b 	add.w	r0, r0, fp, lsl #4
  406230:	4419      	add	r1, r3
  406232:	eb0b 024b 	add.w	r2, fp, fp, lsl #1
  406236:	9c0e      	ldr	r4, [sp, #56]	; 0x38
  406238:	9d02      	ldr	r5, [sp, #8]
  40623a:	f8dd b01c 	ldr.w	fp, [sp, #28]
  40623e:	900b      	str	r0, [sp, #44]	; 0x2c
  406240:	9106      	str	r1, [sp, #24]
  406242:	9803      	ldr	r0, [sp, #12]
  406244:	990c      	ldr	r1, [sp, #48]	; 0x30
  406246:	441c      	add	r4, r3
  406248:	441d      	add	r5, r3
  40624a:	449b      	add	fp, r3
  40624c:	4418      	add	r0, r3
  40624e:	eb01 01c2 	add.w	r1, r1, r2, lsl #3
  406252:	940e      	str	r4, [sp, #56]	; 0x38
  406254:	9502      	str	r5, [sp, #8]
  406256:	f8cd b01c 	str.w	fp, [sp, #28]
  40625a:	9003      	str	r0, [sp, #12]
  40625c:	910c      	str	r1, [sp, #48]	; 0x30
  40625e:	9a06      	ldr	r2, [sp, #24]
  406260:	9b07      	ldr	r3, [sp, #28]
  406262:	ed92 3a00 	vldr	s6, [r2]
  406266:	edd3 5a00 	vldr	s11, [r3]
  40626a:	9c02      	ldr	r4, [sp, #8]
  40626c:	ee33 4a25 	vadd.f32	s8, s6, s11
  406270:	ed94 7a00 	vldr	s14, [r4]
  406274:	9d03      	ldr	r5, [sp, #12]
  406276:	ee74 3a07 	vadd.f32	s7, s8, s14
  40627a:	edd5 7a00 	vldr	s15, [r5]
  40627e:	ee77 3aa3 	vadd.f32	s7, s15, s7
  406282:	ed94 6a01 	vldr	s12, [r4, #4]
  406286:	edd5 6a01 	vldr	s13, [r5, #4]
  40628a:	edd2 4a01 	vldr	s9, [r2, #4]
  40628e:	ed93 5a01 	vldr	s10, [r3, #4]
  406292:	edc2 3a00 	vstr	s7, [r2]
  406296:	ee74 3a85 	vadd.f32	s7, s9, s10
  40629a:	ed94 2a01 	vldr	s4, [r4, #4]
  40629e:	edd5 2a01 	vldr	s5, [r5, #4]
  4062a2:	ee33 2a82 	vadd.f32	s4, s7, s4
  4062a6:	ee34 5ac5 	vsub.f32	s10, s9, s10
  4062aa:	ee73 5a65 	vsub.f32	s11, s6, s11
  4062ae:	ee72 4a22 	vadd.f32	s9, s4, s5
  4062b2:	ee35 3a47 	vsub.f32	s6, s10, s14
  4062b6:	edc2 4a01 	vstr	s9, [r2, #4]
  4062ba:	ee36 2a25 	vadd.f32	s4, s12, s11
  4062be:	f8dd b038 	ldr.w	fp, [sp, #56]	; 0x38
  4062c2:	ee33 3a27 	vadd.f32	s6, s6, s15
  4062c6:	eddb 4a00 	vldr	s9, [fp]
  4062ca:	eddb 2a01 	vldr	s5, [fp, #4]
  4062ce:	ee32 2a66 	vsub.f32	s4, s4, s13
  4062d2:	ee62 1a24 	vmul.f32	s3, s4, s9
  4062d6:	ee22 2a22 	vmul.f32	s4, s4, s5
  4062da:	ee63 4a24 	vmul.f32	s9, s6, s9
  4062de:	ee63 2a22 	vmul.f32	s5, s6, s5
  4062e2:	ee74 4ac2 	vsub.f32	s9, s9, s4
  4062e6:	ee71 2aa2 	vadd.f32	s5, s3, s5
  4062ea:	edc4 4a01 	vstr	s9, [r4, #4]
  4062ee:	edc4 2a00 	vstr	s5, [r4]
  4062f2:	ee34 4a47 	vsub.f32	s8, s8, s14
  4062f6:	ee73 3ac6 	vsub.f32	s7, s7, s12
  4062fa:	980b      	ldr	r0, [sp, #44]	; 0x2c
  4062fc:	ee34 4a67 	vsub.f32	s8, s8, s15
  406300:	ed90 3a00 	vldr	s6, [r0]
  406304:	edd0 4a01 	vldr	s9, [r0, #4]
  406308:	ee73 3ae6 	vsub.f32	s7, s7, s13
  40630c:	ee64 2a03 	vmul.f32	s5, s8, s6
  406310:	ee23 3a83 	vmul.f32	s6, s7, s6
  406314:	ee63 3aa4 	vmul.f32	s7, s7, s9
  406318:	ee64 4a24 	vmul.f32	s9, s8, s9
  40631c:	ee72 3aa3 	vadd.f32	s7, s5, s7
  406320:	ee73 4a64 	vsub.f32	s9, s6, s9
  406324:	edc3 3a00 	vstr	s7, [r3]
  406328:	edc3 4a01 	vstr	s9, [r3, #4]
  40632c:	ee35 7a07 	vadd.f32	s14, s10, s14
  406330:	ee35 6ac6 	vsub.f32	s12, s11, s12
  406334:	990c      	ldr	r1, [sp, #48]	; 0x30
  406336:	ee77 7a67 	vsub.f32	s15, s14, s15
  40633a:	edd1 5a01 	vldr	s11, [r1, #4]
  40633e:	ed91 7a00 	vldr	s14, [r1]
  406342:	ee76 6a86 	vadd.f32	s13, s13, s12
  406346:	ee26 6a87 	vmul.f32	s12, s13, s14
  40634a:	ee27 7a87 	vmul.f32	s14, s15, s14
  40634e:	ee66 6aa5 	vmul.f32	s13, s13, s11
  406352:	ee67 7aa5 	vmul.f32	s15, s15, s11
  406356:	ee77 6a66 	vsub.f32	s13, s14, s13
  40635a:	ee76 7a27 	vadd.f32	s15, s12, s15
  40635e:	edc5 6a01 	vstr	s13, [r5, #4]
  406362:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  406364:	edc5 7a00 	vstr	s15, [r5]
  406368:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  40636a:	b294      	uxth	r4, r2
  40636c:	9809      	ldr	r0, [sp, #36]	; 0x24
  40636e:	686a      	ldr	r2, [r5, #4]
  406370:	4621      	mov	r1, r4
  406372:	2304      	movs	r3, #4
  406374:	f000 fd20 	bl	406db8 <arm_radix8_butterfly_f32>
  406378:	9804      	ldr	r0, [sp, #16]
  40637a:	4621      	mov	r1, r4
  40637c:	686a      	ldr	r2, [r5, #4]
  40637e:	2304      	movs	r3, #4
  406380:	f000 fd1a 	bl	406db8 <arm_radix8_butterfly_f32>
  406384:	9805      	ldr	r0, [sp, #20]
  406386:	4621      	mov	r1, r4
  406388:	686a      	ldr	r2, [r5, #4]
  40638a:	2304      	movs	r3, #4
  40638c:	f000 fd14 	bl	406db8 <arm_radix8_butterfly_f32>
  406390:	9808      	ldr	r0, [sp, #32]
  406392:	686a      	ldr	r2, [r5, #4]
  406394:	4621      	mov	r1, r4
  406396:	2304      	movs	r3, #4
  406398:	b011      	add	sp, #68	; 0x44
  40639a:	ecbd 8b0a 	vpop	{d8-d12}
  40639e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4063a2:	f000 bd09 	b.w	406db8 <arm_radix8_butterfly_f32>
  4063a6:	bf00      	nop

004063a8 <arm_cfft_f32>:
  4063a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4063ac:	2a01      	cmp	r2, #1
  4063ae:	4607      	mov	r7, r0
  4063b0:	4690      	mov	r8, r2
  4063b2:	4689      	mov	r9, r1
  4063b4:	469a      	mov	sl, r3
  4063b6:	8804      	ldrh	r4, [r0, #0]
  4063b8:	d05a      	beq.n	406470 <arm_cfft_f32+0xc8>
  4063ba:	f5b4 7f80 	cmp.w	r4, #256	; 0x100
  4063be:	d052      	beq.n	406466 <arm_cfft_f32+0xbe>
  4063c0:	d917      	bls.n	4063f2 <arm_cfft_f32+0x4a>
  4063c2:	f5b4 6f80 	cmp.w	r4, #1024	; 0x400
  4063c6:	d01b      	beq.n	406400 <arm_cfft_f32+0x58>
  4063c8:	d962      	bls.n	406490 <arm_cfft_f32+0xe8>
  4063ca:	f5b4 6f00 	cmp.w	r4, #2048	; 0x800
  4063ce:	d04a      	beq.n	406466 <arm_cfft_f32+0xbe>
  4063d0:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  4063d4:	d105      	bne.n	4063e2 <arm_cfft_f32+0x3a>
  4063d6:	4648      	mov	r0, r9
  4063d8:	4621      	mov	r1, r4
  4063da:	687a      	ldr	r2, [r7, #4]
  4063dc:	2301      	movs	r3, #1
  4063de:	f000 fceb 	bl	406db8 <arm_radix8_butterfly_f32>
  4063e2:	f1ba 0f00 	cmp.w	sl, #0
  4063e6:	d112      	bne.n	40640e <arm_cfft_f32+0x66>
  4063e8:	f1b8 0f01 	cmp.w	r8, #1
  4063ec:	d017      	beq.n	40641e <arm_cfft_f32+0x76>
  4063ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4063f2:	2c20      	cmp	r4, #32
  4063f4:	d037      	beq.n	406466 <arm_cfft_f32+0xbe>
  4063f6:	d94f      	bls.n	406498 <arm_cfft_f32+0xf0>
  4063f8:	2c40      	cmp	r4, #64	; 0x40
  4063fa:	d0ec      	beq.n	4063d6 <arm_cfft_f32+0x2e>
  4063fc:	2c80      	cmp	r4, #128	; 0x80
  4063fe:	d1f0      	bne.n	4063e2 <arm_cfft_f32+0x3a>
  406400:	4638      	mov	r0, r7
  406402:	4649      	mov	r1, r9
  406404:	f7ff fc72 	bl	405cec <arm_cfft_radix8by2_f32>
  406408:	f1ba 0f00 	cmp.w	sl, #0
  40640c:	d0ec      	beq.n	4063e8 <arm_cfft_f32+0x40>
  40640e:	4648      	mov	r0, r9
  406410:	89b9      	ldrh	r1, [r7, #12]
  406412:	68ba      	ldr	r2, [r7, #8]
  406414:	f000 fc6e 	bl	406cf4 <arm_bitreversal_32>
  406418:	f1b8 0f01 	cmp.w	r8, #1
  40641c:	d1e7      	bne.n	4063ee <arm_cfft_f32+0x46>
  40641e:	ee07 4a10 	vmov	s14, r4
  406422:	eef8 7a47 	vcvt.f32.u32	s15, s14
  406426:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
  40642a:	eec7 7a27 	vdiv.f32	s15, s14, s15
  40642e:	2c00      	cmp	r4, #0
  406430:	d0dd      	beq.n	4063ee <arm_cfft_f32+0x46>
  406432:	f109 0308 	add.w	r3, r9, #8
  406436:	f109 0104 	add.w	r1, r9, #4
  40643a:	2200      	movs	r2, #0
  40643c:	ed13 7a02 	vldr	s14, [r3, #-8]
  406440:	ee27 7a27 	vmul.f32	s14, s14, s15
  406444:	ed03 7a02 	vstr	s14, [r3, #-8]
  406448:	ed91 7a00 	vldr	s14, [r1]
  40644c:	ee27 7a67 	vnmul.f32	s14, s14, s15
  406450:	ee17 0a10 	vmov	r0, s14
  406454:	3201      	adds	r2, #1
  406456:	4294      	cmp	r4, r2
  406458:	f103 0308 	add.w	r3, r3, #8
  40645c:	f841 0b08 	str.w	r0, [r1], #8
  406460:	d8ec      	bhi.n	40643c <arm_cfft_f32+0x94>
  406462:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406466:	4638      	mov	r0, r7
  406468:	4649      	mov	r1, r9
  40646a:	f7ff fd21 	bl	405eb0 <arm_cfft_radix8by4_f32>
  40646e:	e7b8      	b.n	4063e2 <arm_cfft_f32+0x3a>
  406470:	b1ac      	cbz	r4, 40649e <arm_cfft_f32+0xf6>
  406472:	f101 050c 	add.w	r5, r1, #12
  406476:	2600      	movs	r6, #0
  406478:	ed55 7a02 	vldr	s15, [r5, #-8]
  40647c:	eef1 7a67 	vneg.f32	s15, s15
  406480:	3601      	adds	r6, #1
  406482:	42b4      	cmp	r4, r6
  406484:	ed45 7a02 	vstr	s15, [r5, #-8]
  406488:	f105 0508 	add.w	r5, r5, #8
  40648c:	d8f4      	bhi.n	406478 <arm_cfft_f32+0xd0>
  40648e:	e794      	b.n	4063ba <arm_cfft_f32+0x12>
  406490:	f5b4 7f00 	cmp.w	r4, #512	; 0x200
  406494:	d09f      	beq.n	4063d6 <arm_cfft_f32+0x2e>
  406496:	e7a4      	b.n	4063e2 <arm_cfft_f32+0x3a>
  406498:	2c10      	cmp	r4, #16
  40649a:	d0b1      	beq.n	406400 <arm_cfft_f32+0x58>
  40649c:	e7a1      	b.n	4063e2 <arm_cfft_f32+0x3a>
  40649e:	f5b4 7f80 	cmp.w	r4, #256	; 0x100
  4064a2:	d88e      	bhi.n	4063c2 <arm_cfft_f32+0x1a>
  4064a4:	e7a5      	b.n	4063f2 <arm_cfft_f32+0x4a>
  4064a6:	bf00      	nop

004064a8 <arm_conv_f32>:
  4064a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4064ac:	4299      	cmp	r1, r3
  4064ae:	b087      	sub	sp, #28
  4064b0:	4680      	mov	r8, r0
  4064b2:	9e10      	ldr	r6, [sp, #64]	; 0x40
  4064b4:	d205      	bcs.n	4064c2 <arm_conv_f32+0x1a>
  4064b6:	4604      	mov	r4, r0
  4064b8:	4608      	mov	r0, r1
  4064ba:	4690      	mov	r8, r2
  4064bc:	4619      	mov	r1, r3
  4064be:	4622      	mov	r2, r4
  4064c0:	4603      	mov	r3, r0
  4064c2:	3101      	adds	r1, #1
  4064c4:	1ac9      	subs	r1, r1, r3
  4064c6:	1e5c      	subs	r4, r3, #1
  4064c8:	9101      	str	r1, [sp, #4]
  4064ca:	f000 8208 	beq.w	4068de <arm_conv_f32+0x436>
  4064ce:	eddf 7a91 	vldr	s15, [pc, #580]	; 406714 <arm_conv_f32+0x26c>
  4064d2:	f102 0904 	add.w	r9, r2, #4
  4064d6:	46b2      	mov	sl, r6
  4064d8:	4640      	mov	r0, r8
  4064da:	f04f 0c01 	mov.w	ip, #1
  4064de:	4615      	mov	r5, r2
  4064e0:	f01c 0103 	ands.w	r1, ip, #3
  4064e4:	d00a      	beq.n	4064fc <arm_conv_f32+0x54>
  4064e6:	3504      	adds	r5, #4
  4064e8:	ecf0 6a01 	vldmia	r0!, {s13}
  4064ec:	ed35 7a01 	vldmdb	r5!, {s14}
  4064f0:	ee26 7a87 	vmul.f32	s14, s13, s14
  4064f4:	3901      	subs	r1, #1
  4064f6:	ee77 7a87 	vadd.f32	s15, s15, s14
  4064fa:	d1f5      	bne.n	4064e8 <arm_conv_f32+0x40>
  4064fc:	f10c 0c01 	add.w	ip, ip, #1
  406500:	459c      	cmp	ip, r3
  406502:	ecea 7a01 	vstmia	sl!, {s15}
  406506:	464d      	mov	r5, r9
  406508:	d034      	beq.n	406574 <arm_conv_f32+0xcc>
  40650a:	ea5f 0b9c 	movs.w	fp, ip, lsr #2
  40650e:	eddf 7a81 	vldr	s15, [pc, #516]	; 406714 <arm_conv_f32+0x26c>
  406512:	4640      	mov	r0, r8
  406514:	d02b      	beq.n	40656e <arm_conv_f32+0xc6>
  406516:	4649      	mov	r1, r9
  406518:	465d      	mov	r5, fp
  40651a:	edd0 6a00 	vldr	s13, [r0]
  40651e:	ed91 7a00 	vldr	s14, [r1]
  406522:	ed90 6a01 	vldr	s12, [r0, #4]
  406526:	ee26 7a87 	vmul.f32	s14, s13, s14
  40652a:	ed51 6a01 	vldr	s13, [r1, #-4]
  40652e:	ee77 7a27 	vadd.f32	s15, s14, s15
  406532:	ee26 6a26 	vmul.f32	s12, s12, s13
  406536:	ed90 7a02 	vldr	s14, [r0, #8]
  40653a:	ed51 6a02 	vldr	s13, [r1, #-8]
  40653e:	ee36 6a27 	vadd.f32	s12, s12, s15
  406542:	ee27 7a26 	vmul.f32	s14, s14, s13
  406546:	edd0 7a03 	vldr	s15, [r0, #12]
  40654a:	ed51 6a03 	vldr	s13, [r1, #-12]
  40654e:	ee37 7a06 	vadd.f32	s14, s14, s12
  406552:	ee67 7aa6 	vmul.f32	s15, s15, s13
  406556:	3d01      	subs	r5, #1
  406558:	f100 0010 	add.w	r0, r0, #16
  40655c:	ee77 7a87 	vadd.f32	s15, s15, s14
  406560:	f1a1 0110 	sub.w	r1, r1, #16
  406564:	d1d9      	bne.n	40651a <arm_conv_f32+0x72>
  406566:	eb08 100b 	add.w	r0, r8, fp, lsl #4
  40656a:	eba9 150b 	sub.w	r5, r9, fp, lsl #4
  40656e:	f109 0904 	add.w	r9, r9, #4
  406572:	e7b5      	b.n	4064e0 <arm_conv_f32+0x38>
  406574:	f103 4580 	add.w	r5, r3, #1073741824	; 0x40000000
  406578:	3d01      	subs	r5, #1
  40657a:	eb06 0685 	add.w	r6, r6, r5, lsl #2
  40657e:	2b03      	cmp	r3, #3
  406580:	eb02 0585 	add.w	r5, r2, r5, lsl #2
  406584:	d83b      	bhi.n	4065fe <arm_conv_f32+0x156>
  406586:	9901      	ldr	r1, [sp, #4]
  406588:	2900      	cmp	r1, #0
  40658a:	f000 81a3 	beq.w	4068d4 <arm_conv_f32+0x42c>
  40658e:	2b00      	cmp	r3, #0
  406590:	f000 81a9 	beq.w	4068e6 <arm_conv_f32+0x43e>
  406594:	2c00      	cmp	r4, #0
  406596:	f000 81d7 	beq.w	406948 <arm_conv_f32+0x4a0>
  40659a:	2b02      	cmp	r3, #2
  40659c:	f000 81b2 	beq.w	406904 <arm_conv_f32+0x45c>
  4065a0:	eddf 5a5c 	vldr	s11, [pc, #368]	; 406714 <arm_conv_f32+0x26c>
  4065a4:	ea4f 0981 	mov.w	r9, r1, lsl #2
  4065a8:	eb06 0709 	add.w	r7, r6, r9
  4065ac:	f108 0104 	add.w	r1, r8, #4
  4065b0:	4643      	mov	r3, r8
  4065b2:	ed93 6a00 	vldr	s12, [r3]
  4065b6:	edd5 7a00 	vldr	s15, [r5]
  4065ba:	ed93 7a01 	vldr	s14, [r3, #4]
  4065be:	ee26 6a27 	vmul.f32	s12, s12, s15
  4065c2:	ed55 7a01 	vldr	s15, [r5, #-4]
  4065c6:	ed55 6a02 	vldr	s13, [r5, #-8]
  4065ca:	ee27 7a27 	vmul.f32	s14, s14, s15
  4065ce:	ee36 6a25 	vadd.f32	s12, s12, s11
  4065d2:	edd3 7a02 	vldr	s15, [r3, #8]
  4065d6:	ee36 7a07 	vadd.f32	s14, s12, s14
  4065da:	ee67 7aa6 	vmul.f32	s15, s15, s13
  4065de:	ee77 7a27 	vadd.f32	s15, s14, s15
  4065e2:	ece6 7a01 	vstmia	r6!, {s15}
  4065e6:	42be      	cmp	r6, r7
  4065e8:	460b      	mov	r3, r1
  4065ea:	f101 0104 	add.w	r1, r1, #4
  4065ee:	d1e0      	bne.n	4065b2 <arm_conv_f32+0x10a>
  4065f0:	44c8      	add	r8, r9
  4065f2:	2c00      	cmp	r4, #0
  4065f4:	f040 8121 	bne.w	40683a <arm_conv_f32+0x392>
  4065f8:	b007      	add	sp, #28
  4065fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4065fe:	9a01      	ldr	r2, [sp, #4]
  406600:	0892      	lsrs	r2, r2, #2
  406602:	9202      	str	r2, [sp, #8]
  406604:	f000 8169 	beq.w	4068da <arm_conv_f32+0x432>
  406608:	4611      	mov	r1, r2
  40660a:	0109      	lsls	r1, r1, #4
  40660c:	ea4f 0a93 	mov.w	sl, r3, lsr #2
  406610:	9103      	str	r1, [sp, #12]
  406612:	eba5 120a 	sub.w	r2, r5, sl, lsl #4
  406616:	f8dd b00c 	ldr.w	fp, [sp, #12]
  40661a:	1d11      	adds	r1, r2, #4
  40661c:	f003 0903 	and.w	r9, r3, #3
  406620:	ea4f 120a 	mov.w	r2, sl, lsl #4
  406624:	f108 0710 	add.w	r7, r8, #16
  406628:	9404      	str	r4, [sp, #16]
  40662a:	f8cd 8014 	str.w	r8, [sp, #20]
  40662e:	4644      	mov	r4, r8
  406630:	469c      	mov	ip, r3
  406632:	44b3      	add	fp, r6
  406634:	464b      	mov	r3, r9
  406636:	4690      	mov	r8, r2
  406638:	4689      	mov	r9, r1
  40663a:	ed9f 6a36 	vldr	s12, [pc, #216]	; 406714 <arm_conv_f32+0x26c>
  40663e:	eeb0 3a46 	vmov.f32	s6, s12
  406642:	eef0 2a46 	vmov.f32	s5, s12
  406646:	eeb0 2a46 	vmov.f32	s4, s12
  40664a:	edd4 6a00 	vldr	s13, [r4]
  40664e:	edd4 7a01 	vldr	s15, [r4, #4]
  406652:	ed94 7a02 	vldr	s14, [r4, #8]
  406656:	340c      	adds	r4, #12
  406658:	4621      	mov	r1, r4
  40665a:	462a      	mov	r2, r5
  40665c:	4650      	mov	r0, sl
  40665e:	ed92 4a00 	vldr	s8, [r2]
  406662:	edd1 5a00 	vldr	s11, [r1]
  406666:	ed52 4a01 	vldr	s9, [r2, #-4]
  40666a:	ee66 3a84 	vmul.f32	s7, s13, s8
  40666e:	ee27 5a84 	vmul.f32	s10, s15, s8
  406672:	ee27 1a04 	vmul.f32	s2, s14, s8
  406676:	edd1 6a01 	vldr	s13, [r1, #4]
  40667a:	ee25 4a84 	vmul.f32	s8, s11, s8
  40667e:	ee67 1aa4 	vmul.f32	s3, s15, s9
  406682:	ee34 4a06 	vadd.f32	s8, s8, s12
  406686:	edd1 7a02 	vldr	s15, [r1, #8]
  40668a:	ee33 2a82 	vadd.f32	s4, s7, s4
  40668e:	ee75 2a22 	vadd.f32	s5, s10, s5
  406692:	ee67 3a24 	vmul.f32	s7, s14, s9
  406696:	ed12 5a02 	vldr	s10, [r2, #-8]
  40669a:	ee31 3a03 	vadd.f32	s6, s2, s6
  40669e:	ee25 1aa4 	vmul.f32	s2, s11, s9
  4066a2:	ee66 4aa4 	vmul.f32	s9, s13, s9
  4066a6:	ed12 6a03 	vldr	s12, [r2, #-12]
  4066aa:	ee74 4a84 	vadd.f32	s9, s9, s8
  4066ae:	ee31 2a82 	vadd.f32	s4, s3, s4
  4066b2:	ee73 2aa2 	vadd.f32	s5, s7, s5
  4066b6:	ee67 1a05 	vmul.f32	s3, s14, s10
  4066ba:	ee65 3a85 	vmul.f32	s7, s11, s10
  4066be:	ee26 4a85 	vmul.f32	s8, s13, s10
  4066c2:	ed91 7a03 	vldr	s14, [r1, #12]
  4066c6:	ee31 3a03 	vadd.f32	s6, s2, s6
  4066ca:	ee27 5a85 	vmul.f32	s10, s15, s10
  4066ce:	ee65 5a86 	vmul.f32	s11, s11, s12
  4066d2:	ee73 2aa2 	vadd.f32	s5, s7, s5
  4066d6:	ee35 5a24 	vadd.f32	s10, s10, s9
  4066da:	ee66 3a86 	vmul.f32	s7, s13, s12
  4066de:	ee67 4a86 	vmul.f32	s9, s15, s12
  4066e2:	ee31 2a82 	vadd.f32	s4, s3, s4
  4066e6:	ee34 3a03 	vadd.f32	s6, s8, s6
  4066ea:	ee27 6a06 	vmul.f32	s12, s14, s12
  4066ee:	3801      	subs	r0, #1
  4066f0:	f1a2 0210 	sub.w	r2, r2, #16
  4066f4:	ee35 2a82 	vadd.f32	s4, s11, s4
  4066f8:	ee73 2aa2 	vadd.f32	s5, s7, s5
  4066fc:	ee34 3a83 	vadd.f32	s6, s9, s6
  406700:	ee36 6a05 	vadd.f32	s12, s12, s10
  406704:	f101 0110 	add.w	r1, r1, #16
  406708:	d1a9      	bne.n	40665e <arm_conv_f32+0x1b6>
  40670a:	4444      	add	r4, r8
  40670c:	b303      	cbz	r3, 406750 <arm_conv_f32+0x2a8>
  40670e:	4649      	mov	r1, r9
  406710:	461a      	mov	r2, r3
  406712:	e007      	b.n	406724 <arm_conv_f32+0x27c>
  406714:	00000000 	.word	0x00000000
  406718:	eef0 6a67 	vmov.f32	s13, s15
  40671c:	eef0 7a47 	vmov.f32	s15, s14
  406720:	eeb0 7a65 	vmov.f32	s14, s11
  406724:	ed71 3a01 	vldmdb	r1!, {s7}
  406728:	ecf4 5a01 	vldmia	r4!, {s11}
  40672c:	ee66 6aa3 	vmul.f32	s13, s13, s7
  406730:	ee67 4aa3 	vmul.f32	s9, s15, s7
  406734:	ee27 5a23 	vmul.f32	s10, s14, s7
  406738:	ee65 3aa3 	vmul.f32	s7, s11, s7
  40673c:	3a01      	subs	r2, #1
  40673e:	ee32 2a26 	vadd.f32	s4, s4, s13
  406742:	ee72 2aa4 	vadd.f32	s5, s5, s9
  406746:	ee33 3a05 	vadd.f32	s6, s6, s10
  40674a:	ee36 6a23 	vadd.f32	s12, s12, s7
  40674e:	d1e3      	bne.n	406718 <arm_conv_f32+0x270>
  406750:	ed86 2a00 	vstr	s4, [r6]
  406754:	edc6 2a01 	vstr	s5, [r6, #4]
  406758:	ed86 3a02 	vstr	s6, [r6, #8]
  40675c:	ed86 6a03 	vstr	s12, [r6, #12]
  406760:	3610      	adds	r6, #16
  406762:	455e      	cmp	r6, fp
  406764:	463c      	mov	r4, r7
  406766:	f107 0710 	add.w	r7, r7, #16
  40676a:	f47f af66 	bne.w	40663a <arm_conv_f32+0x192>
  40676e:	f8dd 8014 	ldr.w	r8, [sp, #20]
  406772:	9902      	ldr	r1, [sp, #8]
  406774:	9803      	ldr	r0, [sp, #12]
  406776:	9c04      	ldr	r4, [sp, #16]
  406778:	4663      	mov	r3, ip
  40677a:	008a      	lsls	r2, r1, #2
  40677c:	4440      	add	r0, r8
  40677e:	9901      	ldr	r1, [sp, #4]
  406780:	f011 0703 	ands.w	r7, r1, #3
  406784:	f000 80ba 	beq.w	4068fc <arm_conv_f32+0x454>
  406788:	ea4f 0a93 	mov.w	sl, r3, lsr #2
  40678c:	eba5 110a 	sub.w	r1, r5, sl, lsl #4
  406790:	f003 0903 	and.w	r9, r3, #3
  406794:	3201      	adds	r2, #1
  406796:	3104      	adds	r1, #4
  406798:	9402      	str	r4, [sp, #8]
  40679a:	eb08 0c82 	add.w	ip, r8, r2, lsl #2
  40679e:	464c      	mov	r4, r9
  4067a0:	eb06 0787 	add.w	r7, r6, r7, lsl #2
  4067a4:	ea4f 1b0a 	mov.w	fp, sl, lsl #4
  4067a8:	4689      	mov	r9, r1
  4067aa:	ed5f 7a26 	vldr	s15, [pc, #-152]	; 406714 <arm_conv_f32+0x26c>
  4067ae:	4602      	mov	r2, r0
  4067b0:	462b      	mov	r3, r5
  4067b2:	4651      	mov	r1, sl
  4067b4:	edd2 6a00 	vldr	s13, [r2]
  4067b8:	ed93 7a00 	vldr	s14, [r3]
  4067bc:	ed92 6a01 	vldr	s12, [r2, #4]
  4067c0:	ee26 7a87 	vmul.f32	s14, s13, s14
  4067c4:	ed53 6a01 	vldr	s13, [r3, #-4]
  4067c8:	ee77 7a27 	vadd.f32	s15, s14, s15
  4067cc:	ee26 6a26 	vmul.f32	s12, s12, s13
  4067d0:	ed92 7a02 	vldr	s14, [r2, #8]
  4067d4:	ed53 6a02 	vldr	s13, [r3, #-8]
  4067d8:	ee36 6a27 	vadd.f32	s12, s12, s15
  4067dc:	ee27 7a26 	vmul.f32	s14, s14, s13
  4067e0:	edd2 7a03 	vldr	s15, [r2, #12]
  4067e4:	ed53 6a03 	vldr	s13, [r3, #-12]
  4067e8:	ee37 7a06 	vadd.f32	s14, s14, s12
  4067ec:	ee67 7aa6 	vmul.f32	s15, s15, s13
  4067f0:	3901      	subs	r1, #1
  4067f2:	f102 0210 	add.w	r2, r2, #16
  4067f6:	ee77 7a87 	vadd.f32	s15, s15, s14
  4067fa:	f1a3 0310 	sub.w	r3, r3, #16
  4067fe:	d1d9      	bne.n	4067b4 <arm_conv_f32+0x30c>
  406800:	4458      	add	r0, fp
  406802:	b15c      	cbz	r4, 40681c <arm_conv_f32+0x374>
  406804:	464a      	mov	r2, r9
  406806:	4623      	mov	r3, r4
  406808:	ecf0 6a01 	vldmia	r0!, {s13}
  40680c:	ed32 7a01 	vldmdb	r2!, {s14}
  406810:	ee26 7a87 	vmul.f32	s14, s13, s14
  406814:	3b01      	subs	r3, #1
  406816:	ee77 7a87 	vadd.f32	s15, s15, s14
  40681a:	d1f5      	bne.n	406808 <arm_conv_f32+0x360>
  40681c:	ece6 7a01 	vstmia	r6!, {s15}
  406820:	42be      	cmp	r6, r7
  406822:	4660      	mov	r0, ip
  406824:	f10c 0c04 	add.w	ip, ip, #4
  406828:	d1bf      	bne.n	4067aa <arm_conv_f32+0x302>
  40682a:	9a01      	ldr	r2, [sp, #4]
  40682c:	9c02      	ldr	r4, [sp, #8]
  40682e:	ea4f 0982 	mov.w	r9, r2, lsl #2
  406832:	44c8      	add	r8, r9
  406834:	2c00      	cmp	r4, #0
  406836:	f43f aedf 	beq.w	4065f8 <arm_conv_f32+0x150>
  40683a:	08a0      	lsrs	r0, r4, #2
  40683c:	ed5f 7a4b 	vldr	s15, [pc, #-300]	; 406714 <arm_conv_f32+0x26c>
  406840:	d045      	beq.n	4068ce <arm_conv_f32+0x426>
  406842:	4642      	mov	r2, r8
  406844:	462b      	mov	r3, r5
  406846:	4601      	mov	r1, r0
  406848:	edd2 6a00 	vldr	s13, [r2]
  40684c:	ed93 7a00 	vldr	s14, [r3]
  406850:	ed92 6a01 	vldr	s12, [r2, #4]
  406854:	ee26 7a87 	vmul.f32	s14, s13, s14
  406858:	ed53 6a01 	vldr	s13, [r3, #-4]
  40685c:	ee77 7a27 	vadd.f32	s15, s14, s15
  406860:	ee26 6a26 	vmul.f32	s12, s12, s13
  406864:	ed92 7a02 	vldr	s14, [r2, #8]
  406868:	ed53 6a02 	vldr	s13, [r3, #-8]
  40686c:	ee36 6a27 	vadd.f32	s12, s12, s15
  406870:	ee27 7a26 	vmul.f32	s14, s14, s13
  406874:	edd2 7a03 	vldr	s15, [r2, #12]
  406878:	ed53 6a03 	vldr	s13, [r3, #-12]
  40687c:	ee37 7a06 	vadd.f32	s14, s14, s12
  406880:	ee67 7aa6 	vmul.f32	s15, s15, s13
  406884:	3901      	subs	r1, #1
  406886:	f102 0210 	add.w	r2, r2, #16
  40688a:	ee77 7a87 	vadd.f32	s15, s15, s14
  40688e:	f1a3 0310 	sub.w	r3, r3, #16
  406892:	d1d9      	bne.n	406848 <arm_conv_f32+0x3a0>
  406894:	eb08 1200 	add.w	r2, r8, r0, lsl #4
  406898:	eba5 1100 	sub.w	r1, r5, r0, lsl #4
  40689c:	f014 0303 	ands.w	r3, r4, #3
  4068a0:	d00a      	beq.n	4068b8 <arm_conv_f32+0x410>
  4068a2:	3104      	adds	r1, #4
  4068a4:	ecf2 6a01 	vldmia	r2!, {s13}
  4068a8:	ed31 7a01 	vldmdb	r1!, {s14}
  4068ac:	ee26 7a87 	vmul.f32	s14, s13, s14
  4068b0:	3b01      	subs	r3, #1
  4068b2:	ee77 7a87 	vadd.f32	s15, s15, s14
  4068b6:	d1f5      	bne.n	4068a4 <arm_conv_f32+0x3fc>
  4068b8:	3c01      	subs	r4, #1
  4068ba:	ece7 7a01 	vstmia	r7!, {s15}
  4068be:	f108 0804 	add.w	r8, r8, #4
  4068c2:	f43f ae99 	beq.w	4065f8 <arm_conv_f32+0x150>
  4068c6:	08a0      	lsrs	r0, r4, #2
  4068c8:	ed5f 7a6e 	vldr	s15, [pc, #-440]	; 406714 <arm_conv_f32+0x26c>
  4068cc:	d1b9      	bne.n	406842 <arm_conv_f32+0x39a>
  4068ce:	4629      	mov	r1, r5
  4068d0:	4642      	mov	r2, r8
  4068d2:	e7e3      	b.n	40689c <arm_conv_f32+0x3f4>
  4068d4:	4689      	mov	r9, r1
  4068d6:	4637      	mov	r7, r6
  4068d8:	e7ab      	b.n	406832 <arm_conv_f32+0x38a>
  4068da:	4640      	mov	r0, r8
  4068dc:	e74f      	b.n	40677e <arm_conv_f32+0x2d6>
  4068de:	f103 4580 	add.w	r5, r3, #1073741824	; 0x40000000
  4068e2:	3d01      	subs	r5, #1
  4068e4:	e64b      	b.n	40657e <arm_conv_f32+0xd6>
  4068e6:	9901      	ldr	r1, [sp, #4]
  4068e8:	4630      	mov	r0, r6
  4068ea:	ea4f 0981 	mov.w	r9, r1, lsl #2
  4068ee:	464a      	mov	r2, r9
  4068f0:	4619      	mov	r1, r3
  4068f2:	f001 fe2f 	bl	408554 <memset>
  4068f6:	eb06 0709 	add.w	r7, r6, r9
  4068fa:	e79a      	b.n	406832 <arm_conv_f32+0x38a>
  4068fc:	4637      	mov	r7, r6
  4068fe:	ea4f 0981 	mov.w	r9, r1, lsl #2
  406902:	e796      	b.n	406832 <arm_conv_f32+0x38a>
  406904:	ed1f 6a7d 	vldr	s12, [pc, #-500]	; 406714 <arm_conv_f32+0x26c>
  406908:	9a01      	ldr	r2, [sp, #4]
  40690a:	4643      	mov	r3, r8
  40690c:	ea4f 0982 	mov.w	r9, r2, lsl #2
  406910:	eb06 0709 	add.w	r7, r6, r9
  406914:	f108 0204 	add.w	r2, r8, #4
  406918:	ed93 7a00 	vldr	s14, [r3]
  40691c:	edd5 7a00 	vldr	s15, [r5]
  406920:	edd3 6a01 	vldr	s13, [r3, #4]
  406924:	ee27 7a27 	vmul.f32	s14, s14, s15
  406928:	ed55 7a01 	vldr	s15, [r5, #-4]
  40692c:	ee37 7a06 	vadd.f32	s14, s14, s12
  406930:	ee66 7aa7 	vmul.f32	s15, s13, s15
  406934:	ee77 7a27 	vadd.f32	s15, s14, s15
  406938:	ece6 7a01 	vstmia	r6!, {s15}
  40693c:	42be      	cmp	r6, r7
  40693e:	4613      	mov	r3, r2
  406940:	f102 0204 	add.w	r2, r2, #4
  406944:	d1e8      	bne.n	406918 <arm_conv_f32+0x470>
  406946:	e774      	b.n	406832 <arm_conv_f32+0x38a>
  406948:	ed5f 6a8e 	vldr	s13, [pc, #-568]	; 406714 <arm_conv_f32+0x26c>
  40694c:	9b01      	ldr	r3, [sp, #4]
  40694e:	4642      	mov	r2, r8
  406950:	ea4f 0983 	mov.w	r9, r3, lsl #2
  406954:	eb06 0709 	add.w	r7, r6, r9
  406958:	f108 0304 	add.w	r3, r8, #4
  40695c:	ed92 7a00 	vldr	s14, [r2]
  406960:	edd5 7a00 	vldr	s15, [r5]
  406964:	ee67 7a27 	vmul.f32	s15, s14, s15
  406968:	ee77 7aa6 	vadd.f32	s15, s15, s13
  40696c:	ece6 7a01 	vstmia	r6!, {s15}
  406970:	42be      	cmp	r6, r7
  406972:	461a      	mov	r2, r3
  406974:	f103 0304 	add.w	r3, r3, #4
  406978:	d1f0      	bne.n	40695c <arm_conv_f32+0x4b4>
  40697a:	e75a      	b.n	406832 <arm_conv_f32+0x38a>

0040697c <arm_cmplx_mag_f32>:
  40697c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  406980:	ea5f 0a92 	movs.w	sl, r2, lsr #2
  406984:	b082      	sub	sp, #8
  406986:	4681      	mov	r9, r0
  406988:	f000 8086 	beq.w	406a98 <arm_cmplx_mag_f32+0x11c>
  40698c:	f04f 0800 	mov.w	r8, #0
  406990:	f101 0710 	add.w	r7, r1, #16
  406994:	4604      	mov	r4, r0
  406996:	f101 050c 	add.w	r5, r1, #12
  40699a:	4656      	mov	r6, sl
  40699c:	e05c      	b.n	406a58 <arm_cmplx_mag_f32+0xdc>
  40699e:	eeb1 7ae7 	vsqrt.f32	s14, s15
  4069a2:	eeb4 7a47 	vcmp.f32	s14, s14
  4069a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4069aa:	f040 80a8 	bne.w	406afe <arm_cmplx_mag_f32+0x182>
  4069ae:	ed07 7a04 	vstr	s14, [r7, #-16]
  4069b2:	ed94 7a02 	vldr	s14, [r4, #8]
  4069b6:	edd4 7a03 	vldr	s15, [r4, #12]
  4069ba:	ee27 7a07 	vmul.f32	s14, s14, s14
  4069be:	ee67 7aa7 	vmul.f32	s15, s15, s15
  4069c2:	ee77 7a27 	vadd.f32	s15, s14, s15
  4069c6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
  4069ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4069ce:	f340 8093 	ble.w	406af8 <arm_cmplx_mag_f32+0x17c>
  4069d2:	eeb1 7ae7 	vsqrt.f32	s14, s15
  4069d6:	eeb4 7a47 	vcmp.f32	s14, s14
  4069da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4069de:	f040 80b8 	bne.w	406b52 <arm_cmplx_mag_f32+0x1d6>
  4069e2:	ed05 7a02 	vstr	s14, [r5, #-8]
  4069e6:	ed94 7a04 	vldr	s14, [r4, #16]
  4069ea:	edd4 7a05 	vldr	s15, [r4, #20]
  4069ee:	ee27 7a07 	vmul.f32	s14, s14, s14
  4069f2:	ee67 7aa7 	vmul.f32	s15, s15, s15
  4069f6:	ee77 7a27 	vadd.f32	s15, s14, s15
  4069fa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
  4069fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  406a02:	dd76      	ble.n	406af2 <arm_cmplx_mag_f32+0x176>
  406a04:	eeb1 7ae7 	vsqrt.f32	s14, s15
  406a08:	eeb4 7a47 	vcmp.f32	s14, s14
  406a0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  406a10:	f040 8094 	bne.w	406b3c <arm_cmplx_mag_f32+0x1c0>
  406a14:	ed05 7a01 	vstr	s14, [r5, #-4]
  406a18:	ed94 7a06 	vldr	s14, [r4, #24]
  406a1c:	edd4 7a07 	vldr	s15, [r4, #28]
  406a20:	ee27 7a07 	vmul.f32	s14, s14, s14
  406a24:	ee67 7aa7 	vmul.f32	s15, s15, s15
  406a28:	ee77 7a27 	vadd.f32	s15, s14, s15
  406a2c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
  406a30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  406a34:	dd22      	ble.n	406a7c <arm_cmplx_mag_f32+0x100>
  406a36:	eeb1 7ae7 	vsqrt.f32	s14, s15
  406a3a:	eeb4 7a47 	vcmp.f32	s14, s14
  406a3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  406a42:	d170      	bne.n	406b26 <arm_cmplx_mag_f32+0x1aa>
  406a44:	3e01      	subs	r6, #1
  406a46:	ed85 7a00 	vstr	s14, [r5]
  406a4a:	f107 0710 	add.w	r7, r7, #16
  406a4e:	f104 0420 	add.w	r4, r4, #32
  406a52:	f105 0510 	add.w	r5, r5, #16
  406a56:	d01b      	beq.n	406a90 <arm_cmplx_mag_f32+0x114>
  406a58:	ed94 7a00 	vldr	s14, [r4]
  406a5c:	edd4 7a01 	vldr	s15, [r4, #4]
  406a60:	ee27 7a07 	vmul.f32	s14, s14, s14
  406a64:	ee67 7aa7 	vmul.f32	s15, s15, s15
  406a68:	ee77 7a27 	vadd.f32	s15, s14, s15
  406a6c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
  406a70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  406a74:	dc93      	bgt.n	40699e <arm_cmplx_mag_f32+0x22>
  406a76:	f847 8c10 	str.w	r8, [r7, #-16]
  406a7a:	e79a      	b.n	4069b2 <arm_cmplx_mag_f32+0x36>
  406a7c:	3e01      	subs	r6, #1
  406a7e:	f8c5 8000 	str.w	r8, [r5]
  406a82:	f107 0710 	add.w	r7, r7, #16
  406a86:	f104 0420 	add.w	r4, r4, #32
  406a8a:	f105 0510 	add.w	r5, r5, #16
  406a8e:	d1e3      	bne.n	406a58 <arm_cmplx_mag_f32+0xdc>
  406a90:	eb09 194a 	add.w	r9, r9, sl, lsl #5
  406a94:	eb01 110a 	add.w	r1, r1, sl, lsl #4
  406a98:	f012 0503 	ands.w	r5, r2, #3
  406a9c:	d026      	beq.n	406aec <arm_cmplx_mag_f32+0x170>
  406a9e:	2600      	movs	r6, #0
  406aa0:	464c      	mov	r4, r9
  406aa2:	e00c      	b.n	406abe <arm_cmplx_mag_f32+0x142>
  406aa4:	eeb1 7ae7 	vsqrt.f32	s14, s15
  406aa8:	eeb4 7a47 	vcmp.f32	s14, s14
  406aac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  406ab0:	d130      	bne.n	406b14 <arm_cmplx_mag_f32+0x198>
  406ab2:	3d01      	subs	r5, #1
  406ab4:	ed01 7a01 	vstr	s14, [r1, #-4]
  406ab8:	f104 0408 	add.w	r4, r4, #8
  406abc:	d016      	beq.n	406aec <arm_cmplx_mag_f32+0x170>
  406abe:	ed94 7a00 	vldr	s14, [r4]
  406ac2:	edd4 7a01 	vldr	s15, [r4, #4]
  406ac6:	ee27 7a07 	vmul.f32	s14, s14, s14
  406aca:	ee67 7aa7 	vmul.f32	s15, s15, s15
  406ace:	ee77 7a27 	vadd.f32	s15, s14, s15
  406ad2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
  406ad6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  406ada:	f101 0104 	add.w	r1, r1, #4
  406ade:	dce1      	bgt.n	406aa4 <arm_cmplx_mag_f32+0x128>
  406ae0:	3d01      	subs	r5, #1
  406ae2:	f841 6c04 	str.w	r6, [r1, #-4]
  406ae6:	f104 0408 	add.w	r4, r4, #8
  406aea:	d1e8      	bne.n	406abe <arm_cmplx_mag_f32+0x142>
  406aec:	b002      	add	sp, #8
  406aee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406af2:	f845 8c04 	str.w	r8, [r5, #-4]
  406af6:	e78f      	b.n	406a18 <arm_cmplx_mag_f32+0x9c>
  406af8:	f845 8c08 	str.w	r8, [r5, #-8]
  406afc:	e773      	b.n	4069e6 <arm_cmplx_mag_f32+0x6a>
  406afe:	ee17 0a90 	vmov	r0, s15
  406b02:	e88d 0006 	stmia.w	sp, {r1, r2}
  406b06:	f000 fce1 	bl	4074cc <sqrtf>
  406b0a:	e89d 0006 	ldmia.w	sp, {r1, r2}
  406b0e:	ee07 0a10 	vmov	s14, r0
  406b12:	e74c      	b.n	4069ae <arm_cmplx_mag_f32+0x32>
  406b14:	ee17 0a90 	vmov	r0, s15
  406b18:	9100      	str	r1, [sp, #0]
  406b1a:	f000 fcd7 	bl	4074cc <sqrtf>
  406b1e:	9900      	ldr	r1, [sp, #0]
  406b20:	ee07 0a10 	vmov	s14, r0
  406b24:	e7c5      	b.n	406ab2 <arm_cmplx_mag_f32+0x136>
  406b26:	ee17 0a90 	vmov	r0, s15
  406b2a:	e88d 0006 	stmia.w	sp, {r1, r2}
  406b2e:	f000 fccd 	bl	4074cc <sqrtf>
  406b32:	e89d 0006 	ldmia.w	sp, {r1, r2}
  406b36:	ee07 0a10 	vmov	s14, r0
  406b3a:	e783      	b.n	406a44 <arm_cmplx_mag_f32+0xc8>
  406b3c:	ee17 0a90 	vmov	r0, s15
  406b40:	e88d 0006 	stmia.w	sp, {r1, r2}
  406b44:	f000 fcc2 	bl	4074cc <sqrtf>
  406b48:	e89d 0006 	ldmia.w	sp, {r1, r2}
  406b4c:	ee07 0a10 	vmov	s14, r0
  406b50:	e760      	b.n	406a14 <arm_cmplx_mag_f32+0x98>
  406b52:	ee17 0a90 	vmov	r0, s15
  406b56:	e88d 0006 	stmia.w	sp, {r1, r2}
  406b5a:	f000 fcb7 	bl	4074cc <sqrtf>
  406b5e:	e89d 0006 	ldmia.w	sp, {r1, r2}
  406b62:	ee07 0a10 	vmov	s14, r0
  406b66:	e73c      	b.n	4069e2 <arm_cmplx_mag_f32+0x66>

00406b68 <arm_scale_f32>:
  406b68:	b470      	push	{r4, r5, r6}
  406b6a:	089e      	lsrs	r6, r3, #2
  406b6c:	ee07 1a90 	vmov	s15, r1
  406b70:	d023      	beq.n	406bba <arm_scale_f32+0x52>
  406b72:	4635      	mov	r5, r6
  406b74:	4614      	mov	r4, r2
  406b76:	4601      	mov	r1, r0
  406b78:	edd1 5a00 	vldr	s11, [r1]
  406b7c:	ed91 6a01 	vldr	s12, [r1, #4]
  406b80:	edd1 6a02 	vldr	s13, [r1, #8]
  406b84:	ed91 7a03 	vldr	s14, [r1, #12]
  406b88:	ee65 5aa7 	vmul.f32	s11, s11, s15
  406b8c:	ee26 6a27 	vmul.f32	s12, s12, s15
  406b90:	ee66 6aa7 	vmul.f32	s13, s13, s15
  406b94:	ee27 7a27 	vmul.f32	s14, s14, s15
  406b98:	3d01      	subs	r5, #1
  406b9a:	edc4 5a00 	vstr	s11, [r4]
  406b9e:	ed84 6a01 	vstr	s12, [r4, #4]
  406ba2:	edc4 6a02 	vstr	s13, [r4, #8]
  406ba6:	ed84 7a03 	vstr	s14, [r4, #12]
  406baa:	f101 0110 	add.w	r1, r1, #16
  406bae:	f104 0410 	add.w	r4, r4, #16
  406bb2:	d1e1      	bne.n	406b78 <arm_scale_f32+0x10>
  406bb4:	0136      	lsls	r6, r6, #4
  406bb6:	4430      	add	r0, r6
  406bb8:	4432      	add	r2, r6
  406bba:	f013 0303 	ands.w	r3, r3, #3
  406bbe:	d007      	beq.n	406bd0 <arm_scale_f32+0x68>
  406bc0:	ecb0 7a01 	vldmia	r0!, {s14}
  406bc4:	ee27 7a27 	vmul.f32	s14, s14, s15
  406bc8:	3b01      	subs	r3, #1
  406bca:	eca2 7a01 	vstmia	r2!, {s14}
  406bce:	d1f7      	bne.n	406bc0 <arm_scale_f32+0x58>
  406bd0:	bc70      	pop	{r4, r5, r6}
  406bd2:	4770      	bx	lr

00406bd4 <arm_mult_f32>:
  406bd4:	ea5f 0c93 	movs.w	ip, r3, lsr #2
  406bd8:	e92d 01f0 	stmdb	sp!, {r4, r5, r6, r7, r8}
  406bdc:	d031      	beq.n	406c42 <arm_mult_f32+0x6e>
  406bde:	4667      	mov	r7, ip
  406be0:	4615      	mov	r5, r2
  406be2:	460c      	mov	r4, r1
  406be4:	4606      	mov	r6, r0
  406be6:	46b0      	mov	r8, r6
  406be8:	edd4 7a00 	vldr	s15, [r4]
  406bec:	ed98 7a00 	vldr	s14, [r8]
  406bf0:	ee27 7a27 	vmul.f32	s14, s14, s15
  406bf4:	ed96 5a02 	vldr	s10, [r6, #8]
  406bf8:	edd6 5a01 	vldr	s11, [r6, #4]
  406bfc:	ed96 6a03 	vldr	s12, [r6, #12]
  406c00:	edd4 6a02 	vldr	s13, [r4, #8]
  406c04:	edd4 7a01 	vldr	s15, [r4, #4]
  406c08:	ed85 7a00 	vstr	s14, [r5]
  406c0c:	ed94 7a03 	vldr	s14, [r4, #12]
  406c10:	ee65 6a26 	vmul.f32	s13, s10, s13
  406c14:	ee65 7aa7 	vmul.f32	s15, s11, s15
  406c18:	ee26 7a07 	vmul.f32	s14, s12, s14
  406c1c:	3f01      	subs	r7, #1
  406c1e:	edc5 6a02 	vstr	s13, [r5, #8]
  406c22:	ed85 7a03 	vstr	s14, [r5, #12]
  406c26:	edc5 7a01 	vstr	s15, [r5, #4]
  406c2a:	f106 0610 	add.w	r6, r6, #16
  406c2e:	f104 0410 	add.w	r4, r4, #16
  406c32:	f105 0510 	add.w	r5, r5, #16
  406c36:	d1d6      	bne.n	406be6 <arm_mult_f32+0x12>
  406c38:	ea4f 140c 	mov.w	r4, ip, lsl #4
  406c3c:	4420      	add	r0, r4
  406c3e:	4421      	add	r1, r4
  406c40:	4422      	add	r2, r4
  406c42:	f013 0303 	ands.w	r3, r3, #3
  406c46:	d009      	beq.n	406c5c <arm_mult_f32+0x88>
  406c48:	ecb0 7a01 	vldmia	r0!, {s14}
  406c4c:	ecf1 7a01 	vldmia	r1!, {s15}
  406c50:	ee67 7a27 	vmul.f32	s15, s14, s15
  406c54:	3b01      	subs	r3, #1
  406c56:	ece2 7a01 	vstmia	r2!, {s15}
  406c5a:	d1f5      	bne.n	406c48 <arm_mult_f32+0x74>
  406c5c:	e8bd 01f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8}
  406c60:	4770      	bx	lr
  406c62:	bf00      	nop

00406c64 <arm_add_f32>:
  406c64:	ea5f 0c93 	movs.w	ip, r3, lsr #2
  406c68:	e92d 01f0 	stmdb	sp!, {r4, r5, r6, r7, r8}
  406c6c:	d032      	beq.n	406cd4 <arm_add_f32+0x70>
  406c6e:	4667      	mov	r7, ip
  406c70:	4614      	mov	r4, r2
  406c72:	460e      	mov	r6, r1
  406c74:	4605      	mov	r5, r0
  406c76:	46a8      	mov	r8, r5
  406c78:	edd8 5a00 	vldr	s11, [r8]
  406c7c:	46b0      	mov	r8, r6
  406c7e:	ed95 4a01 	vldr	s8, [r5, #4]
  406c82:	ed96 6a01 	vldr	s12, [r6, #4]
  406c86:	edd5 4a02 	vldr	s9, [r5, #8]
  406c8a:	edd6 6a02 	vldr	s13, [r6, #8]
  406c8e:	ed95 5a03 	vldr	s10, [r5, #12]
  406c92:	ed96 7a03 	vldr	s14, [r6, #12]
  406c96:	edd8 7a00 	vldr	s15, [r8]
  406c9a:	ee34 6a06 	vadd.f32	s12, s8, s12
  406c9e:	ee74 6aa6 	vadd.f32	s13, s9, s13
  406ca2:	ee35 7a07 	vadd.f32	s14, s10, s14
  406ca6:	ee75 7aa7 	vadd.f32	s15, s11, s15
  406caa:	3f01      	subs	r7, #1
  406cac:	ed84 6a01 	vstr	s12, [r4, #4]
  406cb0:	edc4 6a02 	vstr	s13, [r4, #8]
  406cb4:	ed84 7a03 	vstr	s14, [r4, #12]
  406cb8:	edc4 7a00 	vstr	s15, [r4]
  406cbc:	f105 0510 	add.w	r5, r5, #16
  406cc0:	f106 0610 	add.w	r6, r6, #16
  406cc4:	f104 0410 	add.w	r4, r4, #16
  406cc8:	d1d5      	bne.n	406c76 <arm_add_f32+0x12>
  406cca:	ea4f 140c 	mov.w	r4, ip, lsl #4
  406cce:	4420      	add	r0, r4
  406cd0:	4421      	add	r1, r4
  406cd2:	4422      	add	r2, r4
  406cd4:	f013 0303 	ands.w	r3, r3, #3
  406cd8:	d009      	beq.n	406cee <arm_add_f32+0x8a>
  406cda:	ecb0 7a01 	vldmia	r0!, {s14}
  406cde:	ecf1 7a01 	vldmia	r1!, {s15}
  406ce2:	ee77 7a27 	vadd.f32	s15, s14, s15
  406ce6:	3b01      	subs	r3, #1
  406ce8:	ece2 7a01 	vstmia	r2!, {s15}
  406cec:	d1f5      	bne.n	406cda <arm_add_f32+0x76>
  406cee:	e8bd 01f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8}
  406cf2:	4770      	bx	lr

00406cf4 <arm_bitreversal_32>:
  406cf4:	1c4b      	adds	r3, r1, #1
  406cf6:	2b01      	cmp	r3, #1
  406cf8:	bf98      	it	ls
  406cfa:	4770      	bxls	lr
  406cfc:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
  406d00:	1c91      	adds	r1, r2, #2
  406d02:	089b      	lsrs	r3, r3, #2

00406d04 <arm_bitreversal_32_0>:
  406d04:	f8b1 8004 	ldrh.w	r8, [r1, #4]
  406d08:	f8b1 9002 	ldrh.w	r9, [r1, #2]
  406d0c:	880a      	ldrh	r2, [r1, #0]
  406d0e:	f831 cc02 	ldrh.w	ip, [r1, #-2]
  406d12:	4480      	add	r8, r0
  406d14:	4481      	add	r9, r0
  406d16:	4402      	add	r2, r0
  406d18:	4484      	add	ip, r0
  406d1a:	f8d9 7000 	ldr.w	r7, [r9]
  406d1e:	f8d8 6000 	ldr.w	r6, [r8]
  406d22:	6815      	ldr	r5, [r2, #0]
  406d24:	f8dc 4000 	ldr.w	r4, [ip]
  406d28:	f8c9 6000 	str.w	r6, [r9]
  406d2c:	f8c8 7000 	str.w	r7, [r8]
  406d30:	f8cc 5000 	str.w	r5, [ip]
  406d34:	6014      	str	r4, [r2, #0]
  406d36:	f8d9 7004 	ldr.w	r7, [r9, #4]
  406d3a:	f8d8 6004 	ldr.w	r6, [r8, #4]
  406d3e:	6855      	ldr	r5, [r2, #4]
  406d40:	f8dc 4004 	ldr.w	r4, [ip, #4]
  406d44:	f8c9 6004 	str.w	r6, [r9, #4]
  406d48:	f8c8 7004 	str.w	r7, [r8, #4]
  406d4c:	f8cc 5004 	str.w	r5, [ip, #4]
  406d50:	6054      	str	r4, [r2, #4]
  406d52:	3108      	adds	r1, #8
  406d54:	3b01      	subs	r3, #1
  406d56:	f47f afd5 	bne.w	406d04 <arm_bitreversal_32_0>
  406d5a:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
  406d5e:	4770      	bx	lr

00406d60 <arm_bitreversal_16>:
  406d60:	1c4b      	adds	r3, r1, #1
  406d62:	2b01      	cmp	r3, #1
  406d64:	bf98      	it	ls
  406d66:	4770      	bxls	lr
  406d68:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
  406d6c:	1c91      	adds	r1, r2, #2
  406d6e:	089b      	lsrs	r3, r3, #2

00406d70 <arm_bitreversal_16_0>:
  406d70:	f8b1 8004 	ldrh.w	r8, [r1, #4]
  406d74:	f8b1 9002 	ldrh.w	r9, [r1, #2]
  406d78:	880a      	ldrh	r2, [r1, #0]
  406d7a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
  406d7e:	eb00 0858 	add.w	r8, r0, r8, lsr #1
  406d82:	eb00 0959 	add.w	r9, r0, r9, lsr #1
  406d86:	eb00 0252 	add.w	r2, r0, r2, lsr #1
  406d8a:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
  406d8e:	f8d9 7000 	ldr.w	r7, [r9]
  406d92:	f8d8 6000 	ldr.w	r6, [r8]
  406d96:	6815      	ldr	r5, [r2, #0]
  406d98:	f8dc 4000 	ldr.w	r4, [ip]
  406d9c:	f8c9 6000 	str.w	r6, [r9]
  406da0:	f8c8 7000 	str.w	r7, [r8]
  406da4:	f8cc 5000 	str.w	r5, [ip]
  406da8:	6014      	str	r4, [r2, #0]
  406daa:	3108      	adds	r1, #8
  406dac:	3b01      	subs	r3, #1
  406dae:	f47f afdf 	bne.w	406d70 <arm_bitreversal_16_0>
  406db2:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
  406db6:	4770      	bx	lr

00406db8 <arm_radix8_butterfly_f32>:
  406db8:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  406dbc:	ed2d 8b10 	vpush	{d8-d15}
  406dc0:	eddf aab7 	vldr	s21, [pc, #732]	; 4070a0 <arm_radix8_butterfly_f32+0x2e8>
  406dc4:	b0a6      	sub	sp, #152	; 0x98
  406dc6:	9023      	str	r0, [sp, #140]	; 0x8c
  406dc8:	3004      	adds	r0, #4
  406dca:	468b      	mov	fp, r1
  406dcc:	9224      	str	r2, [sp, #144]	; 0x90
  406dce:	9306      	str	r3, [sp, #24]
  406dd0:	468a      	mov	sl, r1
  406dd2:	9025      	str	r0, [sp, #148]	; 0x94
  406dd4:	ea4f 01da 	mov.w	r1, sl, lsr #3
  406dd8:	00cc      	lsls	r4, r1, #3
  406dda:	004a      	lsls	r2, r1, #1
  406ddc:	9407      	str	r4, [sp, #28]
  406dde:	9e23      	ldr	r6, [sp, #140]	; 0x8c
  406de0:	4613      	mov	r3, r2
  406de2:	9f07      	ldr	r7, [sp, #28]
  406de4:	440b      	add	r3, r1
  406de6:	9208      	str	r2, [sp, #32]
  406de8:	4632      	mov	r2, r6
  406dea:	eb06 04c3 	add.w	r4, r6, r3, lsl #3
  406dee:	ea4f 1901 	mov.w	r9, r1, lsl #4
  406df2:	011b      	lsls	r3, r3, #4
  406df4:	911b      	str	r1, [sp, #108]	; 0x6c
  406df6:	443a      	add	r2, r7
  406df8:	4638      	mov	r0, r7
  406dfa:	014d      	lsls	r5, r1, #5
  406dfc:	f04f 0800 	mov.w	r8, #0
  406e00:	9925      	ldr	r1, [sp, #148]	; 0x94
  406e02:	9303      	str	r3, [sp, #12]
  406e04:	3404      	adds	r4, #4
  406e06:	4410      	add	r0, r2
  406e08:	ea4f 03ca 	mov.w	r3, sl, lsl #3
  406e0c:	f8cd 8004 	str.w	r8, [sp, #4]
  406e10:	f8cd a010 	str.w	sl, [sp, #16]
  406e14:	f8cd 9008 	str.w	r9, [sp, #8]
  406e18:	f8cd b014 	str.w	fp, [sp, #20]
  406e1c:	9e02      	ldr	r6, [sp, #8]
  406e1e:	9f03      	ldr	r7, [sp, #12]
  406e20:	4406      	add	r6, r0
  406e22:	eb02 0c05 	add.w	ip, r2, r5
  406e26:	4417      	add	r7, r2
  406e28:	eb00 0a05 	add.w	sl, r0, r5
  406e2c:	edd6 9a00 	vldr	s19, [r6]
  406e30:	eddc 6a00 	vldr	s13, [ip]
  406e34:	ed97 7a00 	vldr	s14, [r7]
  406e38:	ed9a 9a00 	vldr	s18, [sl]
  406e3c:	ed92 aa00 	vldr	s20, [r2]
  406e40:	ed54 0a01 	vldr	s1, [r4, #-4]
  406e44:	ed11 5a01 	vldr	s10, [r1, #-4]
  406e48:	edd0 7a00 	vldr	s15, [r0]
  406e4c:	ee35 0a29 	vadd.f32	s0, s10, s19
  406e50:	ee7a 1a26 	vadd.f32	s3, s20, s13
  406e54:	ee37 2a89 	vadd.f32	s4, s15, s18
  406e58:	ee70 3a87 	vadd.f32	s7, s1, s14
  406e5c:	ee70 5a02 	vadd.f32	s11, s0, s4
  406e60:	ee31 6aa3 	vadd.f32	s12, s3, s7
  406e64:	ee75 4a86 	vadd.f32	s9, s11, s12
  406e68:	ee35 6ac6 	vsub.f32	s12, s11, s12
  406e6c:	ed41 4a01 	vstr	s9, [r1, #-4]
  406e70:	ed86 6a00 	vstr	s12, [r6]
  406e74:	9e02      	ldr	r6, [sp, #8]
  406e76:	9709      	str	r7, [sp, #36]	; 0x24
  406e78:	4426      	add	r6, r4
  406e7a:	1967      	adds	r7, r4, r5
  406e7c:	edd2 8a01 	vldr	s17, [r2, #4]
  406e80:	ed97 3a00 	vldr	s6, [r7]
  406e84:	edd6 2a00 	vldr	s5, [r6]
  406e88:	ed94 1a00 	vldr	s2, [r4]
  406e8c:	ee38 6ae2 	vsub.f32	s12, s17, s5
  406e90:	ee3a aa66 	vsub.f32	s20, s20, s13
  406e94:	ee70 0ac7 	vsub.f32	s1, s1, s14
  406e98:	ee71 6a43 	vsub.f32	s13, s2, s6
  406e9c:	f8dd 900c 	ldr.w	r9, [sp, #12]
  406ea0:	eb01 0b05 	add.w	fp, r1, r5
  406ea4:	4489      	add	r9, r1
  406ea6:	ed91 7a00 	vldr	s14, [r1]
  406eaa:	eddb 4a00 	vldr	s9, [fp]
  406eae:	ed99 8a00 	vldr	s16, [r9]
  406eb2:	edd0 5a01 	vldr	s11, [r0, #4]
  406eb6:	ee36 4a26 	vadd.f32	s8, s12, s13
  406eba:	ee76 6a66 	vsub.f32	s13, s12, s13
  406ebe:	ee3a 6a60 	vsub.f32	s12, s20, s1
  406ec2:	ee7a 0a20 	vadd.f32	s1, s20, s1
  406ec6:	ee31 1a03 	vadd.f32	s2, s2, s6
  406eca:	ee35 5a69 	vsub.f32	s10, s10, s19
  406ece:	ee37 3a24 	vadd.f32	s6, s14, s9
  406ed2:	ee78 2aa2 	vadd.f32	s5, s17, s5
  406ed6:	ee37 7a64 	vsub.f32	s14, s14, s9
  406eda:	ee24 4a2a 	vmul.f32	s8, s8, s21
  406ede:	ee75 4a88 	vadd.f32	s9, s11, s16
  406ee2:	ee26 6a2a 	vmul.f32	s12, s12, s21
  406ee6:	ee75 5ac8 	vsub.f32	s11, s11, s16
  406eea:	ee77 7ac9 	vsub.f32	s15, s15, s18
  406eee:	ee66 6aaa 	vmul.f32	s13, s13, s21
  406ef2:	ee60 0aaa 	vmul.f32	s1, s1, s21
  406ef6:	ee30 2a42 	vsub.f32	s4, s0, s4
  406efa:	ee71 3ae3 	vsub.f32	s7, s3, s7
  406efe:	ee72 1a81 	vadd.f32	s3, s5, s2
  406f02:	ee72 2ac1 	vsub.f32	s5, s5, s2
  406f06:	ee33 1a24 	vadd.f32	s2, s6, s9
  406f0a:	ee33 3a64 	vsub.f32	s6, s6, s9
  406f0e:	ee75 4a84 	vadd.f32	s9, s11, s8
  406f12:	ee75 5ac4 	vsub.f32	s11, s11, s8
  406f16:	ee35 4a06 	vadd.f32	s8, s10, s12
  406f1a:	ee35 5a46 	vsub.f32	s10, s10, s12
  406f1e:	ee37 6a26 	vadd.f32	s12, s14, s13
  406f22:	ee37 7a66 	vsub.f32	s14, s14, s13
  406f26:	ee77 6aa0 	vadd.f32	s13, s15, s1
  406f2a:	ee77 7ae0 	vsub.f32	s15, s15, s1
  406f2e:	ee31 aa21 	vadd.f32	s20, s2, s3
  406f32:	ee72 9a22 	vadd.f32	s19, s4, s5
  406f36:	ee33 9a63 	vsub.f32	s18, s6, s7
  406f3a:	ee74 8a24 	vadd.f32	s17, s8, s9
  406f3e:	ee71 1a61 	vsub.f32	s3, s2, s3
  406f42:	ee72 2a62 	vsub.f32	s5, s4, s5
  406f46:	ee73 3a23 	vadd.f32	s7, s6, s7
  406f4a:	ee35 8a25 	vadd.f32	s16, s10, s11
  406f4e:	ee36 0a66 	vsub.f32	s0, s12, s13
  406f52:	ee77 0a67 	vsub.f32	s1, s14, s15
  406f56:	ee74 4a64 	vsub.f32	s9, s8, s9
  406f5a:	ee75 5a65 	vsub.f32	s11, s10, s11
  406f5e:	ee76 6a26 	vadd.f32	s13, s12, s13
  406f62:	ee77 7a27 	vadd.f32	s15, s14, s15
  406f66:	f8dd 8004 	ldr.w	r8, [sp, #4]
  406f6a:	f8cd c028 	str.w	ip, [sp, #40]	; 0x28
  406f6e:	f8dd c010 	ldr.w	ip, [sp, #16]
  406f72:	ed81 aa00 	vstr	s20, [r1]
  406f76:	44e0      	add	r8, ip
  406f78:	edcb 1a00 	vstr	s3, [fp]
  406f7c:	f8cd 8004 	str.w	r8, [sp, #4]
  406f80:	edc0 9a00 	vstr	s19, [r0]
  406f84:	edca 2a00 	vstr	s5, [sl]
  406f88:	ed80 9a01 	vstr	s18, [r0, #4]
  406f8c:	edc9 3a00 	vstr	s7, [r9]
  406f90:	edc2 8a00 	vstr	s17, [r2]
  406f94:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
  406f98:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
  406f9c:	edc8 4a00 	vstr	s9, [r8]
  406fa0:	ed8c 8a00 	vstr	s16, [ip]
  406fa4:	ed44 5a01 	vstr	s11, [r4, #-4]
  406fa8:	ed82 0a01 	vstr	s0, [r2, #4]
  406fac:	edc7 6a00 	vstr	s13, [r7]
  406fb0:	edc6 0a00 	vstr	s1, [r6]
  406fb4:	9f01      	ldr	r7, [sp, #4]
  406fb6:	9e05      	ldr	r6, [sp, #20]
  406fb8:	edc4 7a00 	vstr	s15, [r4]
  406fbc:	42be      	cmp	r6, r7
  406fbe:	4419      	add	r1, r3
  406fc0:	4418      	add	r0, r3
  406fc2:	441a      	add	r2, r3
  406fc4:	441c      	add	r4, r3
  406fc6:	f63f af29 	bhi.w	406e1c <arm_radix8_butterfly_f32+0x64>
  406fca:	981b      	ldr	r0, [sp, #108]	; 0x6c
  406fcc:	f8dd a010 	ldr.w	sl, [sp, #16]
  406fd0:	2807      	cmp	r0, #7
  406fd2:	f8dd 9008 	ldr.w	r9, [sp, #8]
  406fd6:	46b3      	mov	fp, r6
  406fd8:	f240 8225 	bls.w	407426 <arm_radix8_butterfly_f32+0x66e>
  406fdc:	9906      	ldr	r1, [sp, #24]
  406fde:	9a08      	ldr	r2, [sp, #32]
  406fe0:	9d06      	ldr	r5, [sp, #24]
  406fe2:	eb01 0641 	add.w	r6, r1, r1, lsl #1
  406fe6:	9c06      	ldr	r4, [sp, #24]
  406fe8:	1c51      	adds	r1, r2, #1
  406fea:	4435      	add	r5, r6
  406fec:	eb01 0140 	add.w	r1, r1, r0, lsl #1
  406ff0:	4684      	mov	ip, r0
  406ff2:	9806      	ldr	r0, [sp, #24]
  406ff4:	442c      	add	r4, r5
  406ff6:	f8dd 8018 	ldr.w	r8, [sp, #24]
  406ffa:	4420      	add	r0, r4
  406ffc:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  406ffe:	4480      	add	r8, r0
  407000:	9f07      	ldr	r7, [sp, #28]
  407002:	ea4f 08c8 	mov.w	r8, r8, lsl #3
  407006:	440a      	add	r2, r1
  407008:	f8cd 8080 	str.w	r8, [sp, #128]	; 0x80
  40700c:	f8dd 808c 	ldr.w	r8, [sp, #140]	; 0x8c
  407010:	4494      	add	ip, r2
  407012:	370c      	adds	r7, #12
  407014:	00f6      	lsls	r6, r6, #3
  407016:	00e4      	lsls	r4, r4, #3
  407018:	00c0      	lsls	r0, r0, #3
  40701a:	961f      	str	r6, [sp, #124]	; 0x7c
  40701c:	9422      	str	r4, [sp, #136]	; 0x88
  40701e:	9021      	str	r0, [sp, #132]	; 0x84
  407020:	eb08 01c1 	add.w	r1, r8, r1, lsl #3
  407024:	eb08 0ccc 	add.w	ip, r8, ip, lsl #3
  407028:	eb08 02c2 	add.w	r2, r8, r2, lsl #3
  40702c:	9806      	ldr	r0, [sp, #24]
  40702e:	44b8      	add	r8, r7
  407030:	9c06      	ldr	r4, [sp, #24]
  407032:	9f20      	ldr	r7, [sp, #128]	; 0x80
  407034:	9e24      	ldr	r6, [sp, #144]	; 0x90
  407036:	00c0      	lsls	r0, r0, #3
  407038:	443e      	add	r6, r7
  40703a:	0124      	lsls	r4, r4, #4
  40703c:	3104      	adds	r1, #4
  40703e:	3204      	adds	r2, #4
  407040:	901c      	str	r0, [sp, #112]	; 0x70
  407042:	941d      	str	r4, [sp, #116]	; 0x74
  407044:	9821      	ldr	r0, [sp, #132]	; 0x84
  407046:	f8cd 8060 	str.w	r8, [sp, #96]	; 0x60
  40704a:	9613      	str	r6, [sp, #76]	; 0x4c
  40704c:	f8dd 8090 	ldr.w	r8, [sp, #144]	; 0x90
  407050:	9119      	str	r1, [sp, #100]	; 0x64
  407052:	9217      	str	r2, [sp, #92]	; 0x5c
  407054:	9924      	ldr	r1, [sp, #144]	; 0x90
  407056:	9a22      	ldr	r2, [sp, #136]	; 0x88
  407058:	9c24      	ldr	r4, [sp, #144]	; 0x90
  40705a:	9e24      	ldr	r6, [sp, #144]	; 0x90
  40705c:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
  40705e:	00ed      	lsls	r5, r5, #3
  407060:	4480      	add	r8, r0
  407062:	4411      	add	r1, r2
  407064:	f10c 0c04 	add.w	ip, ip, #4
  407068:	442c      	add	r4, r5
  40706a:	443e      	add	r6, r7
  40706c:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  407070:	f8cd c058 	str.w	ip, [sp, #88]	; 0x58
  407074:	9115      	str	r1, [sp, #84]	; 0x54
  407076:	9412      	str	r4, [sp, #72]	; 0x48
  407078:	951e      	str	r5, [sp, #120]	; 0x78
  40707a:	9610      	str	r6, [sp, #64]	; 0x40
  40707c:	f8dd 8090 	ldr.w	r8, [sp, #144]	; 0x90
  407080:	f8dd c070 	ldr.w	ip, [sp, #112]	; 0x70
  407084:	9824      	ldr	r0, [sp, #144]	; 0x90
  407086:	991d      	ldr	r1, [sp, #116]	; 0x74
  407088:	9a23      	ldr	r2, [sp, #140]	; 0x8c
  40708a:	44e0      	add	r8, ip
  40708c:	4408      	add	r0, r1
  40708e:	320c      	adds	r2, #12
  407090:	2401      	movs	r4, #1
  407092:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
  407096:	9011      	str	r0, [sp, #68]	; 0x44
  407098:	921a      	str	r2, [sp, #104]	; 0x68
  40709a:	940e      	str	r4, [sp, #56]	; 0x38
  40709c:	e002      	b.n	4070a4 <arm_radix8_butterfly_f32+0x2ec>
  40709e:	bf00      	nop
  4070a0:	3f3504f3 	.word	0x3f3504f3
  4070a4:	9f11      	ldr	r7, [sp, #68]	; 0x44
  4070a6:	9810      	ldr	r0, [sp, #64]	; 0x40
  4070a8:	edd7 5a00 	vldr	s11, [r7]
  4070ac:	edcd 5a01 	vstr	s11, [sp, #4]
  4070b0:	edd0 5a00 	vldr	s11, [r0]
  4070b4:	9812      	ldr	r0, [sp, #72]	; 0x48
  4070b6:	edcd 5a02 	vstr	s11, [sp, #8]
  4070ba:	edd0 5a00 	vldr	s11, [r0]
  4070be:	9815      	ldr	r0, [sp, #84]	; 0x54
  4070c0:	edcd 5a03 	vstr	s11, [sp, #12]
  4070c4:	edd0 5a00 	vldr	s11, [r0]
  4070c8:	9814      	ldr	r0, [sp, #80]	; 0x50
  4070ca:	edcd 5a04 	vstr	s11, [sp, #16]
  4070ce:	edd0 5a00 	vldr	s11, [r0]
  4070d2:	9813      	ldr	r0, [sp, #76]	; 0x4c
  4070d4:	edcd 5a05 	vstr	s11, [sp, #20]
  4070d8:	edd0 5a00 	vldr	s11, [r0]
  4070dc:	9810      	ldr	r0, [sp, #64]	; 0x40
  4070de:	edcd 5a06 	vstr	s11, [sp, #24]
  4070e2:	edd0 5a01 	vldr	s11, [r0, #4]
  4070e6:	9812      	ldr	r0, [sp, #72]	; 0x48
  4070e8:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
  4070ec:	edd0 5a01 	vldr	s11, [r0, #4]
  4070f0:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
  4070f2:	9815      	ldr	r0, [sp, #84]	; 0x54
  4070f4:	ed96 6a00 	vldr	s12, [r6]
  4070f8:	ed96 7a01 	vldr	s14, [r6, #4]
  4070fc:	edd7 7a01 	vldr	s15, [r7, #4]
  407100:	edcd 5a0a 	vstr	s11, [sp, #40]	; 0x28
  407104:	edd0 5a01 	vldr	s11, [r0, #4]
  407108:	ed8d 7a07 	vstr	s14, [sp, #28]
  40710c:	edcd 7a08 	vstr	s15, [sp, #32]
  407110:	edcd 5a0b 	vstr	s11, [sp, #44]	; 0x2c
  407114:	eeb0 da46 	vmov.f32	s26, s12
  407118:	9814      	ldr	r0, [sp, #80]	; 0x50
  40711a:	9913      	ldr	r1, [sp, #76]	; 0x4c
  40711c:	9d16      	ldr	r5, [sp, #88]	; 0x58
  40711e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  407120:	f8dd 8038 	ldr.w	r8, [sp, #56]	; 0x38
  407124:	edd0 fa01 	vldr	s31, [r0, #4]
  407128:	a817      	add	r0, sp, #92	; 0x5c
  40712a:	edd1 da01 	vldr	s27, [r1, #4]
  40712e:	c813      	ldmia	r0, {r0, r1, r4}
  407130:	eb02 0c09 	add.w	ip, r2, r9
  407134:	eb01 0609 	add.w	r6, r1, r9
  407138:	eb00 0709 	add.w	r7, r0, r9
  40713c:	ed54 9a01 	vldr	s19, [r4, #-4]
  407140:	ed50 5a01 	vldr	s11, [r0, #-4]
  407144:	ed1c aa01 	vldr	s20, [ip, #-4]
  407148:	ed55 6a01 	vldr	s13, [r5, #-4]
  40714c:	ed12 6a01 	vldr	s12, [r2, #-4]
  407150:	ed17 5a01 	vldr	s10, [r7, #-4]
  407154:	ed11 1a01 	vldr	s2, [r1, #-4]
  407158:	ed16 ba01 	vldr	s22, [r6, #-4]
  40715c:	ee7a 0a26 	vadd.f32	s1, s20, s13
  407160:	ee7b 7a05 	vadd.f32	s15, s22, s10
  407164:	ee36 9a29 	vadd.f32	s18, s12, s19
  407168:	ee71 3a25 	vadd.f32	s7, s2, s11
  40716c:	ee39 ea20 	vadd.f32	s28, s18, s1
  407170:	ee73 1aa7 	vadd.f32	s3, s7, s15
  407174:	ee3e 7a21 	vadd.f32	s14, s28, s3
  407178:	ed02 7a01 	vstr	s14, [r2, #-4]
  40717c:	ed97 7a00 	vldr	s14, [r7]
  407180:	edd1 8a00 	vldr	s17, [r1]
  407184:	ed90 3a00 	vldr	s6, [r0]
  407188:	ed96 8a00 	vldr	s16, [r6]
  40718c:	ee3b ba45 	vsub.f32	s22, s22, s10
  407190:	ee78 4a47 	vsub.f32	s9, s16, s14
  407194:	ee78 2ac3 	vsub.f32	s5, s17, s6
  407198:	ee31 1a65 	vsub.f32	s2, s2, s11
  40719c:	ed94 2a00 	vldr	s4, [r4]
  4071a0:	ed95 0a00 	vldr	s0, [r5]
  4071a4:	edd2 5a00 	vldr	s11, [r2]
  4071a8:	ed9c 5a00 	vldr	s10, [ip]
  4071ac:	ee32 4ae4 	vsub.f32	s8, s5, s9
  4071b0:	ee72 2aa4 	vadd.f32	s5, s5, s9
  4071b4:	ee71 4a0b 	vadd.f32	s9, s2, s22
  4071b8:	ee38 7a07 	vadd.f32	s14, s16, s14
  4071bc:	ee7a 6a66 	vsub.f32	s13, s20, s13
  4071c0:	ee36 6a69 	vsub.f32	s12, s12, s19
  4071c4:	ee38 3a83 	vadd.f32	s6, s17, s6
  4071c8:	ee75 9a82 	vadd.f32	s19, s11, s4
  4071cc:	ee24 4a2a 	vmul.f32	s8, s8, s21
  4071d0:	ee64 4aaa 	vmul.f32	s9, s9, s21
  4071d4:	ee75 5ac2 	vsub.f32	s11, s11, s4
  4071d8:	ee35 2a00 	vadd.f32	s4, s10, s0
  4071dc:	ee73 3ae7 	vsub.f32	s7, s7, s15
  4071e0:	ee73 7a07 	vadd.f32	s15, s6, s14
  4071e4:	ee33 3a47 	vsub.f32	s6, s6, s14
  4071e8:	ee39 7a82 	vadd.f32	s14, s19, s4
  4071ec:	ee79 9ac2 	vsub.f32	s19, s19, s4
  4071f0:	ee35 2a84 	vadd.f32	s4, s11, s8
  4071f4:	ee75 5ac4 	vsub.f32	s11, s11, s8
  4071f8:	ee36 4aa4 	vadd.f32	s8, s13, s9
  4071fc:	ee76 6ae4 	vsub.f32	s13, s13, s9
  407200:	ee77 ea67 	vsub.f32	s29, s14, s15
  407204:	ee35 5a40 	vsub.f32	s10, s10, s0
  407208:	ee32 0a44 	vsub.f32	s0, s4, s8
  40720c:	ee32 2a04 	vadd.f32	s4, s4, s8
  407210:	ee35 4ae6 	vsub.f32	s8, s11, s13
  407214:	ee75 6aa6 	vadd.f32	s13, s11, s13
  407218:	eddd 5a0a 	vldr	s11, [sp, #40]	; 0x28
  40721c:	ee25 faae 	vmul.f32	s30, s11, s29
  407220:	eddd 5a03 	vldr	s11, [sp, #12]
  407224:	ee3e ea61 	vsub.f32	s28, s28, s3
  407228:	ee65 eaae 	vmul.f32	s29, s11, s29
  40722c:	ee39 9a60 	vsub.f32	s18, s18, s1
  407230:	edcd ea00 	vstr	s29, [sp]
  407234:	ee65 ea8e 	vmul.f32	s29, s11, s28
  407238:	ee79 ba03 	vadd.f32	s23, s18, s6
  40723c:	edcd ea0c 	vstr	s29, [sp, #48]	; 0x30
  407240:	eddd 5a0a 	vldr	s11, [sp, #40]	; 0x28
  407244:	ee31 1a4b 	vsub.f32	s2, s2, s22
  407248:	eddd ea01 	vldr	s29, [sp, #4]
  40724c:	ee39 cae3 	vsub.f32	s24, s19, s7
  407250:	ee62 2aaa 	vmul.f32	s5, s5, s21
  407254:	ee21 1a2a 	vmul.f32	s2, s2, s21
  407258:	ee6e eaab 	vmul.f32	s29, s29, s23
  40725c:	ee25 ea8e 	vmul.f32	s28, s11, s28
  407260:	eddd 5a08 	vldr	s11, [sp, #32]
  407264:	ee75 4a22 	vadd.f32	s9, s10, s5
  407268:	ee39 9a43 	vsub.f32	s18, s18, s6
  40726c:	ee35 5a62 	vsub.f32	s10, s10, s5
  407270:	ee79 9aa3 	vadd.f32	s19, s19, s7
  407274:	ee76 2a01 	vadd.f32	s5, s12, s2
  407278:	edcd ea0d 	vstr	s29, [sp, #52]	; 0x34
  40727c:	ee65 ca8c 	vmul.f32	s25, s11, s24
  407280:	eddd ea01 	vldr	s29, [sp, #4]
  407284:	ee65 baab 	vmul.f32	s23, s11, s23
  407288:	eddd 5a05 	vldr	s11, [sp, #20]
  40728c:	ee72 0aa4 	vadd.f32	s1, s5, s9
  407290:	ee36 6a41 	vsub.f32	s12, s12, s2
  407294:	ee72 2ae4 	vsub.f32	s5, s5, s9
  407298:	ee25 ba89 	vmul.f32	s22, s11, s18
  40729c:	ee2e ca8c 	vmul.f32	s24, s29, s24
  4072a0:	ee2f aaa9 	vmul.f32	s20, s31, s19
  4072a4:	eddd ea07 	vldr	s29, [sp, #28]
  4072a8:	ee65 9aa9 	vmul.f32	s19, s11, s19
  4072ac:	eddd 5a06 	vldr	s11, [sp, #24]
  4072b0:	ee76 4a05 	vadd.f32	s9, s12, s10
  4072b4:	ee2e 8a80 	vmul.f32	s16, s29, s0
  4072b8:	ee25 1aa2 	vmul.f32	s2, s11, s5
  4072bc:	ee6d 8a20 	vmul.f32	s17, s26, s1
  4072c0:	ee6d 1a82 	vmul.f32	s3, s27, s4
  4072c4:	ee6e 0aa0 	vmul.f32	s1, s29, s1
  4072c8:	ee25 2a82 	vmul.f32	s4, s11, s4
  4072cc:	eddd ea04 	vldr	s29, [sp, #16]
  4072d0:	eddd 5a0b 	vldr	s11, [sp, #44]	; 0x2c
  4072d4:	ee2e 3aa4 	vmul.f32	s6, s29, s9
  4072d8:	ee65 3a84 	vmul.f32	s7, s11, s8
  4072dc:	ee36 6a45 	vsub.f32	s12, s12, s10
  4072e0:	ee65 4aa4 	vmul.f32	s9, s11, s9
  4072e4:	ee2e 4a84 	vmul.f32	s8, s29, s8
  4072e8:	eddd 5a09 	vldr	s11, [sp, #36]	; 0x24
  4072ec:	eddd ea02 	vldr	s29, [sp, #8]
  4072f0:	ee77 7a27 	vadd.f32	s15, s14, s15
  4072f4:	ed9d 7a0c 	vldr	s14, [sp, #48]	; 0x30
  4072f8:	ee2e 5a86 	vmul.f32	s10, s29, s12
  4072fc:	ee37 fa0f 	vadd.f32	s30, s14, s30
  407300:	ee25 6a86 	vmul.f32	s12, s11, s12
  407304:	ed9d 7a0d 	vldr	s14, [sp, #52]	; 0x34
  407308:	ee65 5aa6 	vmul.f32	s11, s11, s13
  40730c:	ee2f 9a89 	vmul.f32	s18, s31, s18
  407310:	ee6e 6aa6 	vmul.f32	s13, s29, s13
  407314:	ee2d 0a00 	vmul.f32	s0, s26, s0
  407318:	eddd ea00 	vldr	s29, [sp]
  40731c:	ee6d 2aa2 	vmul.f32	s5, s27, s5
  407320:	ee3e eace 	vsub.f32	s28, s29, s28
  407324:	ee77 ca2c 	vadd.f32	s25, s14, s25
  407328:	ee7c ba6b 	vsub.f32	s23, s24, s23
  40732c:	ee3b aa0a 	vadd.f32	s20, s22, s20
  407330:	ee39 9ac9 	vsub.f32	s18, s19, s18
  407334:	ee38 8a88 	vadd.f32	s16, s17, s16
  407338:	ee70 0a60 	vsub.f32	s1, s0, s1
  40733c:	ee71 1a21 	vadd.f32	s3, s2, s3
  407340:	ee72 2a62 	vsub.f32	s5, s4, s5
  407344:	ee73 3a23 	vadd.f32	s7, s6, s7
  407348:	ee74 4a64 	vsub.f32	s9, s8, s9
  40734c:	ee75 5a25 	vadd.f32	s11, s10, s11
  407350:	ee76 6ac6 	vsub.f32	s13, s13, s12
  407354:	44d0      	add	r8, sl
  407356:	45c3      	cmp	fp, r8
  407358:	edc2 7a00 	vstr	s15, [r2]
  40735c:	ed04 fa01 	vstr	s30, [r4, #-4]
  407360:	ed84 ea00 	vstr	s28, [r4]
  407364:	441a      	add	r2, r3
  407366:	ed4c ca01 	vstr	s25, [ip, #-4]
  40736a:	edcc ba00 	vstr	s23, [ip]
  40736e:	441c      	add	r4, r3
  407370:	ed05 aa01 	vstr	s20, [r5, #-4]
  407374:	ed85 9a00 	vstr	s18, [r5]
  407378:	ed01 8a01 	vstr	s16, [r1, #-4]
  40737c:	edc1 0a00 	vstr	s1, [r1]
  407380:	441d      	add	r5, r3
  407382:	ed47 1a01 	vstr	s3, [r7, #-4]
  407386:	edc7 2a00 	vstr	s5, [r7]
  40738a:	4419      	add	r1, r3
  40738c:	ed40 3a01 	vstr	s7, [r0, #-4]
  407390:	edc0 4a00 	vstr	s9, [r0]
  407394:	4418      	add	r0, r3
  407396:	ed46 5a01 	vstr	s11, [r6, #-4]
  40739a:	edc6 6a00 	vstr	s13, [r6]
  40739e:	f63f aec7 	bhi.w	407130 <arm_radix8_butterfly_f32+0x378>
  4073a2:	980e      	ldr	r0, [sp, #56]	; 0x38
  4073a4:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4073a6:	9a1c      	ldr	r2, [sp, #112]	; 0x70
  4073a8:	9c11      	ldr	r4, [sp, #68]	; 0x44
  4073aa:	9e1d      	ldr	r6, [sp, #116]	; 0x74
  4073ac:	9f10      	ldr	r7, [sp, #64]	; 0x40
  4073ae:	f8dd 807c 	ldr.w	r8, [sp, #124]	; 0x7c
  4073b2:	4411      	add	r1, r2
  4073b4:	4434      	add	r4, r6
  4073b6:	4447      	add	r7, r8
  4073b8:	3001      	adds	r0, #1
  4073ba:	900e      	str	r0, [sp, #56]	; 0x38
  4073bc:	f8dd c048 	ldr.w	ip, [sp, #72]	; 0x48
  4073c0:	981e      	ldr	r0, [sp, #120]	; 0x78
  4073c2:	9a22      	ldr	r2, [sp, #136]	; 0x88
  4073c4:	9e21      	ldr	r6, [sp, #132]	; 0x84
  4073c6:	910f      	str	r1, [sp, #60]	; 0x3c
  4073c8:	9411      	str	r4, [sp, #68]	; 0x44
  4073ca:	9915      	ldr	r1, [sp, #84]	; 0x54
  4073cc:	9c14      	ldr	r4, [sp, #80]	; 0x50
  4073ce:	9710      	str	r7, [sp, #64]	; 0x40
  4073d0:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
  4073d4:	9f13      	ldr	r7, [sp, #76]	; 0x4c
  4073d6:	4484      	add	ip, r0
  4073d8:	4411      	add	r1, r2
  4073da:	4434      	add	r4, r6
  4073dc:	4447      	add	r7, r8
  4073de:	9819      	ldr	r0, [sp, #100]	; 0x64
  4073e0:	9a17      	ldr	r2, [sp, #92]	; 0x5c
  4073e2:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
  4073e6:	9115      	str	r1, [sp, #84]	; 0x54
  4073e8:	f8dd c068 	ldr.w	ip, [sp, #104]	; 0x68
  4073ec:	9918      	ldr	r1, [sp, #96]	; 0x60
  4073ee:	9414      	str	r4, [sp, #80]	; 0x50
  4073f0:	9713      	str	r7, [sp, #76]	; 0x4c
  4073f2:	9c16      	ldr	r4, [sp, #88]	; 0x58
  4073f4:	9e0e      	ldr	r6, [sp, #56]	; 0x38
  4073f6:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
  4073f8:	f10c 0c08 	add.w	ip, ip, #8
  4073fc:	3008      	adds	r0, #8
  4073fe:	3108      	adds	r1, #8
  407400:	3208      	adds	r2, #8
  407402:	3408      	adds	r4, #8
  407404:	42be      	cmp	r6, r7
  407406:	f8cd c068 	str.w	ip, [sp, #104]	; 0x68
  40740a:	9019      	str	r0, [sp, #100]	; 0x64
  40740c:	9118      	str	r1, [sp, #96]	; 0x60
  40740e:	9217      	str	r2, [sp, #92]	; 0x5c
  407410:	9416      	str	r4, [sp, #88]	; 0x58
  407412:	f47f ae47 	bne.w	4070a4 <arm_radix8_butterfly_f32+0x2ec>
  407416:	f8dd 8070 	ldr.w	r8, [sp, #112]	; 0x70
  40741a:	46b2      	mov	sl, r6
  40741c:	fa1f f888 	uxth.w	r8, r8
  407420:	f8cd 8018 	str.w	r8, [sp, #24]
  407424:	e4d6      	b.n	406dd4 <arm_radix8_butterfly_f32+0x1c>
  407426:	b026      	add	sp, #152	; 0x98
  407428:	ecbd 8b10 	vpop	{d8-d15}
  40742c:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  407430:	4770      	bx	lr
  407432:	bf00      	nop

00407434 <round>:
  407434:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  407436:	f3c1 560a 	ubfx	r6, r1, #20, #11
  40743a:	f2a6 35ff 	subw	r5, r6, #1023	; 0x3ff
  40743e:	2d13      	cmp	r5, #19
  407440:	4602      	mov	r2, r0
  407442:	460b      	mov	r3, r1
  407444:	460c      	mov	r4, r1
  407446:	dc10      	bgt.n	40746a <round+0x36>
  407448:	2d00      	cmp	r5, #0
  40744a:	db2e      	blt.n	4074aa <round+0x76>
  40744c:	468e      	mov	lr, r1
  40744e:	491e      	ldr	r1, [pc, #120]	; (4074c8 <round+0x94>)
  407450:	4129      	asrs	r1, r5
  407452:	420b      	tst	r3, r1
  407454:	d026      	beq.n	4074a4 <round+0x70>
  407456:	f44f 2400 	mov.w	r4, #524288	; 0x80000
  40745a:	412c      	asrs	r4, r5
  40745c:	4474      	add	r4, lr
  40745e:	ea24 0401 	bic.w	r4, r4, r1
  407462:	2600      	movs	r6, #0
  407464:	4621      	mov	r1, r4
  407466:	4630      	mov	r0, r6
  407468:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40746a:	2d33      	cmp	r5, #51	; 0x33
  40746c:	dd05      	ble.n	40747a <round+0x46>
  40746e:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
  407472:	d020      	beq.n	4074b6 <round+0x82>
  407474:	4610      	mov	r0, r2
  407476:	4619      	mov	r1, r3
  407478:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40747a:	f2a6 4613 	subw	r6, r6, #1043	; 0x413
  40747e:	f04f 31ff 	mov.w	r1, #4294967295
  407482:	fa21 f606 	lsr.w	r6, r1, r6
  407486:	4230      	tst	r0, r6
  407488:	d0f4      	beq.n	407474 <round+0x40>
  40748a:	2301      	movs	r3, #1
  40748c:	f1c5 0533 	rsb	r5, r5, #51	; 0x33
  407490:	fa03 f505 	lsl.w	r5, r3, r5
  407494:	182d      	adds	r5, r5, r0
  407496:	bf28      	it	cs
  407498:	18e4      	addcs	r4, r4, r3
  40749a:	ea25 0606 	bic.w	r6, r5, r6
  40749e:	4621      	mov	r1, r4
  4074a0:	4630      	mov	r0, r6
  4074a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4074a4:	2800      	cmp	r0, #0
  4074a6:	d1d6      	bne.n	407456 <round+0x22>
  4074a8:	e7e4      	b.n	407474 <round+0x40>
  4074aa:	3501      	adds	r5, #1
  4074ac:	f001 4400 	and.w	r4, r1, #2147483648	; 0x80000000
  4074b0:	d004      	beq.n	4074bc <round+0x88>
  4074b2:	2600      	movs	r6, #0
  4074b4:	e7d6      	b.n	407464 <round+0x30>
  4074b6:	f000 f86d 	bl	407594 <__adddf3>
  4074ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4074bc:	f044 547f 	orr.w	r4, r4, #1069547520	; 0x3fc00000
  4074c0:	f444 1440 	orr.w	r4, r4, #3145728	; 0x300000
  4074c4:	2600      	movs	r6, #0
  4074c6:	e7cd      	b.n	407464 <round+0x30>
  4074c8:	000fffff 	.word	0x000fffff

004074cc <sqrtf>:
  4074cc:	b510      	push	{r4, lr}
  4074ce:	ed2d 8b02 	vpush	{d8}
  4074d2:	b08a      	sub	sp, #40	; 0x28
  4074d4:	ee08 0a10 	vmov	s16, r0
  4074d8:	f000 f84c 	bl	407574 <__ieee754_sqrtf>
  4074dc:	4b23      	ldr	r3, [pc, #140]	; (40756c <sqrtf+0xa0>)
  4074de:	f993 4000 	ldrsb.w	r4, [r3]
  4074e2:	1c63      	adds	r3, r4, #1
  4074e4:	d009      	beq.n	4074fa <sqrtf+0x2e>
  4074e6:	eeb4 8a48 	vcmp.f32	s16, s16
  4074ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4074ee:	d604      	bvs.n	4074fa <sqrtf+0x2e>
  4074f0:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
  4074f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4074f8:	d403      	bmi.n	407502 <sqrtf+0x36>
  4074fa:	b00a      	add	sp, #40	; 0x28
  4074fc:	ecbd 8b02 	vpop	{d8}
  407500:	bd10      	pop	{r4, pc}
  407502:	2301      	movs	r3, #1
  407504:	4a1a      	ldr	r2, [pc, #104]	; (407570 <sqrtf+0xa4>)
  407506:	9300      	str	r3, [sp, #0]
  407508:	ee18 0a10 	vmov	r0, s16
  40750c:	2300      	movs	r3, #0
  40750e:	9201      	str	r2, [sp, #4]
  407510:	9308      	str	r3, [sp, #32]
  407512:	f000 f99d 	bl	407850 <__aeabi_f2d>
  407516:	2200      	movs	r2, #0
  407518:	e9cd 0104 	strd	r0, r1, [sp, #16]
  40751c:	e9cd 0102 	strd	r0, r1, [sp, #8]
  407520:	2300      	movs	r3, #0
  407522:	b1ac      	cbz	r4, 407550 <sqrtf+0x84>
  407524:	4610      	mov	r0, r2
  407526:	4619      	mov	r1, r3
  407528:	f000 fb10 	bl	407b4c <__aeabi_ddiv>
  40752c:	2c02      	cmp	r4, #2
  40752e:	e9cd 0106 	strd	r0, r1, [sp, #24]
  407532:	d10f      	bne.n	407554 <sqrtf+0x88>
  407534:	f000 fc7a 	bl	407e2c <__errno>
  407538:	2321      	movs	r3, #33	; 0x21
  40753a:	6003      	str	r3, [r0, #0]
  40753c:	9b08      	ldr	r3, [sp, #32]
  40753e:	b97b      	cbnz	r3, 407560 <sqrtf+0x94>
  407540:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
  407544:	f000 fbea 	bl	407d1c <__aeabi_d2f>
  407548:	b00a      	add	sp, #40	; 0x28
  40754a:	ecbd 8b02 	vpop	{d8}
  40754e:	bd10      	pop	{r4, pc}
  407550:	e9cd 2306 	strd	r2, r3, [sp, #24]
  407554:	4668      	mov	r0, sp
  407556:	f000 f815 	bl	407584 <matherr>
  40755a:	2800      	cmp	r0, #0
  40755c:	d1ee      	bne.n	40753c <sqrtf+0x70>
  40755e:	e7e9      	b.n	407534 <sqrtf+0x68>
  407560:	f000 fc64 	bl	407e2c <__errno>
  407564:	9b08      	ldr	r3, [sp, #32]
  407566:	6003      	str	r3, [r0, #0]
  407568:	e7ea      	b.n	407540 <sqrtf+0x74>
  40756a:	bf00      	nop
  40756c:	20400080 	.word	0x20400080
  407570:	0041fe78 	.word	0x0041fe78

00407574 <__ieee754_sqrtf>:
  407574:	ee07 0a90 	vmov	s15, r0
  407578:	eef1 7ae7 	vsqrt.f32	s15, s15
  40757c:	ee17 0a90 	vmov	r0, s15
  407580:	4770      	bx	lr
  407582:	bf00      	nop

00407584 <matherr>:
  407584:	2000      	movs	r0, #0
  407586:	4770      	bx	lr

00407588 <__aeabi_drsub>:
  407588:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  40758c:	e002      	b.n	407594 <__adddf3>
  40758e:	bf00      	nop

00407590 <__aeabi_dsub>:
  407590:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00407594 <__adddf3>:
  407594:	b530      	push	{r4, r5, lr}
  407596:	ea4f 0441 	mov.w	r4, r1, lsl #1
  40759a:	ea4f 0543 	mov.w	r5, r3, lsl #1
  40759e:	ea94 0f05 	teq	r4, r5
  4075a2:	bf08      	it	eq
  4075a4:	ea90 0f02 	teqeq	r0, r2
  4075a8:	bf1f      	itttt	ne
  4075aa:	ea54 0c00 	orrsne.w	ip, r4, r0
  4075ae:	ea55 0c02 	orrsne.w	ip, r5, r2
  4075b2:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  4075b6:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4075ba:	f000 80e2 	beq.w	407782 <__adddf3+0x1ee>
  4075be:	ea4f 5454 	mov.w	r4, r4, lsr #21
  4075c2:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  4075c6:	bfb8      	it	lt
  4075c8:	426d      	neglt	r5, r5
  4075ca:	dd0c      	ble.n	4075e6 <__adddf3+0x52>
  4075cc:	442c      	add	r4, r5
  4075ce:	ea80 0202 	eor.w	r2, r0, r2
  4075d2:	ea81 0303 	eor.w	r3, r1, r3
  4075d6:	ea82 0000 	eor.w	r0, r2, r0
  4075da:	ea83 0101 	eor.w	r1, r3, r1
  4075de:	ea80 0202 	eor.w	r2, r0, r2
  4075e2:	ea81 0303 	eor.w	r3, r1, r3
  4075e6:	2d36      	cmp	r5, #54	; 0x36
  4075e8:	bf88      	it	hi
  4075ea:	bd30      	pophi	{r4, r5, pc}
  4075ec:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4075f0:	ea4f 3101 	mov.w	r1, r1, lsl #12
  4075f4:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  4075f8:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  4075fc:	d002      	beq.n	407604 <__adddf3+0x70>
  4075fe:	4240      	negs	r0, r0
  407600:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  407604:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  407608:	ea4f 3303 	mov.w	r3, r3, lsl #12
  40760c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  407610:	d002      	beq.n	407618 <__adddf3+0x84>
  407612:	4252      	negs	r2, r2
  407614:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  407618:	ea94 0f05 	teq	r4, r5
  40761c:	f000 80a7 	beq.w	40776e <__adddf3+0x1da>
  407620:	f1a4 0401 	sub.w	r4, r4, #1
  407624:	f1d5 0e20 	rsbs	lr, r5, #32
  407628:	db0d      	blt.n	407646 <__adddf3+0xb2>
  40762a:	fa02 fc0e 	lsl.w	ip, r2, lr
  40762e:	fa22 f205 	lsr.w	r2, r2, r5
  407632:	1880      	adds	r0, r0, r2
  407634:	f141 0100 	adc.w	r1, r1, #0
  407638:	fa03 f20e 	lsl.w	r2, r3, lr
  40763c:	1880      	adds	r0, r0, r2
  40763e:	fa43 f305 	asr.w	r3, r3, r5
  407642:	4159      	adcs	r1, r3
  407644:	e00e      	b.n	407664 <__adddf3+0xd0>
  407646:	f1a5 0520 	sub.w	r5, r5, #32
  40764a:	f10e 0e20 	add.w	lr, lr, #32
  40764e:	2a01      	cmp	r2, #1
  407650:	fa03 fc0e 	lsl.w	ip, r3, lr
  407654:	bf28      	it	cs
  407656:	f04c 0c02 	orrcs.w	ip, ip, #2
  40765a:	fa43 f305 	asr.w	r3, r3, r5
  40765e:	18c0      	adds	r0, r0, r3
  407660:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  407664:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  407668:	d507      	bpl.n	40767a <__adddf3+0xe6>
  40766a:	f04f 0e00 	mov.w	lr, #0
  40766e:	f1dc 0c00 	rsbs	ip, ip, #0
  407672:	eb7e 0000 	sbcs.w	r0, lr, r0
  407676:	eb6e 0101 	sbc.w	r1, lr, r1
  40767a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  40767e:	d31b      	bcc.n	4076b8 <__adddf3+0x124>
  407680:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  407684:	d30c      	bcc.n	4076a0 <__adddf3+0x10c>
  407686:	0849      	lsrs	r1, r1, #1
  407688:	ea5f 0030 	movs.w	r0, r0, rrx
  40768c:	ea4f 0c3c 	mov.w	ip, ip, rrx
  407690:	f104 0401 	add.w	r4, r4, #1
  407694:	ea4f 5244 	mov.w	r2, r4, lsl #21
  407698:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  40769c:	f080 809a 	bcs.w	4077d4 <__adddf3+0x240>
  4076a0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  4076a4:	bf08      	it	eq
  4076a6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4076aa:	f150 0000 	adcs.w	r0, r0, #0
  4076ae:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4076b2:	ea41 0105 	orr.w	r1, r1, r5
  4076b6:	bd30      	pop	{r4, r5, pc}
  4076b8:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  4076bc:	4140      	adcs	r0, r0
  4076be:	eb41 0101 	adc.w	r1, r1, r1
  4076c2:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4076c6:	f1a4 0401 	sub.w	r4, r4, #1
  4076ca:	d1e9      	bne.n	4076a0 <__adddf3+0x10c>
  4076cc:	f091 0f00 	teq	r1, #0
  4076d0:	bf04      	itt	eq
  4076d2:	4601      	moveq	r1, r0
  4076d4:	2000      	moveq	r0, #0
  4076d6:	fab1 f381 	clz	r3, r1
  4076da:	bf08      	it	eq
  4076dc:	3320      	addeq	r3, #32
  4076de:	f1a3 030b 	sub.w	r3, r3, #11
  4076e2:	f1b3 0220 	subs.w	r2, r3, #32
  4076e6:	da0c      	bge.n	407702 <__adddf3+0x16e>
  4076e8:	320c      	adds	r2, #12
  4076ea:	dd08      	ble.n	4076fe <__adddf3+0x16a>
  4076ec:	f102 0c14 	add.w	ip, r2, #20
  4076f0:	f1c2 020c 	rsb	r2, r2, #12
  4076f4:	fa01 f00c 	lsl.w	r0, r1, ip
  4076f8:	fa21 f102 	lsr.w	r1, r1, r2
  4076fc:	e00c      	b.n	407718 <__adddf3+0x184>
  4076fe:	f102 0214 	add.w	r2, r2, #20
  407702:	bfd8      	it	le
  407704:	f1c2 0c20 	rsble	ip, r2, #32
  407708:	fa01 f102 	lsl.w	r1, r1, r2
  40770c:	fa20 fc0c 	lsr.w	ip, r0, ip
  407710:	bfdc      	itt	le
  407712:	ea41 010c 	orrle.w	r1, r1, ip
  407716:	4090      	lslle	r0, r2
  407718:	1ae4      	subs	r4, r4, r3
  40771a:	bfa2      	ittt	ge
  40771c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  407720:	4329      	orrge	r1, r5
  407722:	bd30      	popge	{r4, r5, pc}
  407724:	ea6f 0404 	mvn.w	r4, r4
  407728:	3c1f      	subs	r4, #31
  40772a:	da1c      	bge.n	407766 <__adddf3+0x1d2>
  40772c:	340c      	adds	r4, #12
  40772e:	dc0e      	bgt.n	40774e <__adddf3+0x1ba>
  407730:	f104 0414 	add.w	r4, r4, #20
  407734:	f1c4 0220 	rsb	r2, r4, #32
  407738:	fa20 f004 	lsr.w	r0, r0, r4
  40773c:	fa01 f302 	lsl.w	r3, r1, r2
  407740:	ea40 0003 	orr.w	r0, r0, r3
  407744:	fa21 f304 	lsr.w	r3, r1, r4
  407748:	ea45 0103 	orr.w	r1, r5, r3
  40774c:	bd30      	pop	{r4, r5, pc}
  40774e:	f1c4 040c 	rsb	r4, r4, #12
  407752:	f1c4 0220 	rsb	r2, r4, #32
  407756:	fa20 f002 	lsr.w	r0, r0, r2
  40775a:	fa01 f304 	lsl.w	r3, r1, r4
  40775e:	ea40 0003 	orr.w	r0, r0, r3
  407762:	4629      	mov	r1, r5
  407764:	bd30      	pop	{r4, r5, pc}
  407766:	fa21 f004 	lsr.w	r0, r1, r4
  40776a:	4629      	mov	r1, r5
  40776c:	bd30      	pop	{r4, r5, pc}
  40776e:	f094 0f00 	teq	r4, #0
  407772:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  407776:	bf06      	itte	eq
  407778:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  40777c:	3401      	addeq	r4, #1
  40777e:	3d01      	subne	r5, #1
  407780:	e74e      	b.n	407620 <__adddf3+0x8c>
  407782:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  407786:	bf18      	it	ne
  407788:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  40778c:	d029      	beq.n	4077e2 <__adddf3+0x24e>
  40778e:	ea94 0f05 	teq	r4, r5
  407792:	bf08      	it	eq
  407794:	ea90 0f02 	teqeq	r0, r2
  407798:	d005      	beq.n	4077a6 <__adddf3+0x212>
  40779a:	ea54 0c00 	orrs.w	ip, r4, r0
  40779e:	bf04      	itt	eq
  4077a0:	4619      	moveq	r1, r3
  4077a2:	4610      	moveq	r0, r2
  4077a4:	bd30      	pop	{r4, r5, pc}
  4077a6:	ea91 0f03 	teq	r1, r3
  4077aa:	bf1e      	ittt	ne
  4077ac:	2100      	movne	r1, #0
  4077ae:	2000      	movne	r0, #0
  4077b0:	bd30      	popne	{r4, r5, pc}
  4077b2:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  4077b6:	d105      	bne.n	4077c4 <__adddf3+0x230>
  4077b8:	0040      	lsls	r0, r0, #1
  4077ba:	4149      	adcs	r1, r1
  4077bc:	bf28      	it	cs
  4077be:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  4077c2:	bd30      	pop	{r4, r5, pc}
  4077c4:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  4077c8:	bf3c      	itt	cc
  4077ca:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  4077ce:	bd30      	popcc	{r4, r5, pc}
  4077d0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4077d4:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  4077d8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  4077dc:	f04f 0000 	mov.w	r0, #0
  4077e0:	bd30      	pop	{r4, r5, pc}
  4077e2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  4077e6:	bf1a      	itte	ne
  4077e8:	4619      	movne	r1, r3
  4077ea:	4610      	movne	r0, r2
  4077ec:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  4077f0:	bf1c      	itt	ne
  4077f2:	460b      	movne	r3, r1
  4077f4:	4602      	movne	r2, r0
  4077f6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  4077fa:	bf06      	itte	eq
  4077fc:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  407800:	ea91 0f03 	teqeq	r1, r3
  407804:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  407808:	bd30      	pop	{r4, r5, pc}
  40780a:	bf00      	nop

0040780c <__aeabi_ui2d>:
  40780c:	f090 0f00 	teq	r0, #0
  407810:	bf04      	itt	eq
  407812:	2100      	moveq	r1, #0
  407814:	4770      	bxeq	lr
  407816:	b530      	push	{r4, r5, lr}
  407818:	f44f 6480 	mov.w	r4, #1024	; 0x400
  40781c:	f104 0432 	add.w	r4, r4, #50	; 0x32
  407820:	f04f 0500 	mov.w	r5, #0
  407824:	f04f 0100 	mov.w	r1, #0
  407828:	e750      	b.n	4076cc <__adddf3+0x138>
  40782a:	bf00      	nop

0040782c <__aeabi_i2d>:
  40782c:	f090 0f00 	teq	r0, #0
  407830:	bf04      	itt	eq
  407832:	2100      	moveq	r1, #0
  407834:	4770      	bxeq	lr
  407836:	b530      	push	{r4, r5, lr}
  407838:	f44f 6480 	mov.w	r4, #1024	; 0x400
  40783c:	f104 0432 	add.w	r4, r4, #50	; 0x32
  407840:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  407844:	bf48      	it	mi
  407846:	4240      	negmi	r0, r0
  407848:	f04f 0100 	mov.w	r1, #0
  40784c:	e73e      	b.n	4076cc <__adddf3+0x138>
  40784e:	bf00      	nop

00407850 <__aeabi_f2d>:
  407850:	0042      	lsls	r2, r0, #1
  407852:	ea4f 01e2 	mov.w	r1, r2, asr #3
  407856:	ea4f 0131 	mov.w	r1, r1, rrx
  40785a:	ea4f 7002 	mov.w	r0, r2, lsl #28
  40785e:	bf1f      	itttt	ne
  407860:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  407864:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  407868:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  40786c:	4770      	bxne	lr
  40786e:	f092 0f00 	teq	r2, #0
  407872:	bf14      	ite	ne
  407874:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  407878:	4770      	bxeq	lr
  40787a:	b530      	push	{r4, r5, lr}
  40787c:	f44f 7460 	mov.w	r4, #896	; 0x380
  407880:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  407884:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  407888:	e720      	b.n	4076cc <__adddf3+0x138>
  40788a:	bf00      	nop

0040788c <__aeabi_ul2d>:
  40788c:	ea50 0201 	orrs.w	r2, r0, r1
  407890:	bf08      	it	eq
  407892:	4770      	bxeq	lr
  407894:	b530      	push	{r4, r5, lr}
  407896:	f04f 0500 	mov.w	r5, #0
  40789a:	e00a      	b.n	4078b2 <__aeabi_l2d+0x16>

0040789c <__aeabi_l2d>:
  40789c:	ea50 0201 	orrs.w	r2, r0, r1
  4078a0:	bf08      	it	eq
  4078a2:	4770      	bxeq	lr
  4078a4:	b530      	push	{r4, r5, lr}
  4078a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  4078aa:	d502      	bpl.n	4078b2 <__aeabi_l2d+0x16>
  4078ac:	4240      	negs	r0, r0
  4078ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  4078b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
  4078b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4078ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  4078be:	f43f aedc 	beq.w	40767a <__adddf3+0xe6>
  4078c2:	f04f 0203 	mov.w	r2, #3
  4078c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  4078ca:	bf18      	it	ne
  4078cc:	3203      	addne	r2, #3
  4078ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  4078d2:	bf18      	it	ne
  4078d4:	3203      	addne	r2, #3
  4078d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  4078da:	f1c2 0320 	rsb	r3, r2, #32
  4078de:	fa00 fc03 	lsl.w	ip, r0, r3
  4078e2:	fa20 f002 	lsr.w	r0, r0, r2
  4078e6:	fa01 fe03 	lsl.w	lr, r1, r3
  4078ea:	ea40 000e 	orr.w	r0, r0, lr
  4078ee:	fa21 f102 	lsr.w	r1, r1, r2
  4078f2:	4414      	add	r4, r2
  4078f4:	e6c1      	b.n	40767a <__adddf3+0xe6>
  4078f6:	bf00      	nop

004078f8 <__aeabi_dmul>:
  4078f8:	b570      	push	{r4, r5, r6, lr}
  4078fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
  4078fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  407902:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  407906:	bf1d      	ittte	ne
  407908:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  40790c:	ea94 0f0c 	teqne	r4, ip
  407910:	ea95 0f0c 	teqne	r5, ip
  407914:	f000 f8de 	bleq	407ad4 <__aeabi_dmul+0x1dc>
  407918:	442c      	add	r4, r5
  40791a:	ea81 0603 	eor.w	r6, r1, r3
  40791e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  407922:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  407926:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  40792a:	bf18      	it	ne
  40792c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  407930:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  407934:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  407938:	d038      	beq.n	4079ac <__aeabi_dmul+0xb4>
  40793a:	fba0 ce02 	umull	ip, lr, r0, r2
  40793e:	f04f 0500 	mov.w	r5, #0
  407942:	fbe1 e502 	umlal	lr, r5, r1, r2
  407946:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  40794a:	fbe0 e503 	umlal	lr, r5, r0, r3
  40794e:	f04f 0600 	mov.w	r6, #0
  407952:	fbe1 5603 	umlal	r5, r6, r1, r3
  407956:	f09c 0f00 	teq	ip, #0
  40795a:	bf18      	it	ne
  40795c:	f04e 0e01 	orrne.w	lr, lr, #1
  407960:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  407964:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  407968:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  40796c:	d204      	bcs.n	407978 <__aeabi_dmul+0x80>
  40796e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  407972:	416d      	adcs	r5, r5
  407974:	eb46 0606 	adc.w	r6, r6, r6
  407978:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  40797c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  407980:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  407984:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  407988:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  40798c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  407990:	bf88      	it	hi
  407992:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  407996:	d81e      	bhi.n	4079d6 <__aeabi_dmul+0xde>
  407998:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  40799c:	bf08      	it	eq
  40799e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  4079a2:	f150 0000 	adcs.w	r0, r0, #0
  4079a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4079aa:	bd70      	pop	{r4, r5, r6, pc}
  4079ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  4079b0:	ea46 0101 	orr.w	r1, r6, r1
  4079b4:	ea40 0002 	orr.w	r0, r0, r2
  4079b8:	ea81 0103 	eor.w	r1, r1, r3
  4079bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  4079c0:	bfc2      	ittt	gt
  4079c2:	ebd4 050c 	rsbsgt	r5, r4, ip
  4079c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  4079ca:	bd70      	popgt	{r4, r5, r6, pc}
  4079cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4079d0:	f04f 0e00 	mov.w	lr, #0
  4079d4:	3c01      	subs	r4, #1
  4079d6:	f300 80ab 	bgt.w	407b30 <__aeabi_dmul+0x238>
  4079da:	f114 0f36 	cmn.w	r4, #54	; 0x36
  4079de:	bfde      	ittt	le
  4079e0:	2000      	movle	r0, #0
  4079e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  4079e6:	bd70      	pople	{r4, r5, r6, pc}
  4079e8:	f1c4 0400 	rsb	r4, r4, #0
  4079ec:	3c20      	subs	r4, #32
  4079ee:	da35      	bge.n	407a5c <__aeabi_dmul+0x164>
  4079f0:	340c      	adds	r4, #12
  4079f2:	dc1b      	bgt.n	407a2c <__aeabi_dmul+0x134>
  4079f4:	f104 0414 	add.w	r4, r4, #20
  4079f8:	f1c4 0520 	rsb	r5, r4, #32
  4079fc:	fa00 f305 	lsl.w	r3, r0, r5
  407a00:	fa20 f004 	lsr.w	r0, r0, r4
  407a04:	fa01 f205 	lsl.w	r2, r1, r5
  407a08:	ea40 0002 	orr.w	r0, r0, r2
  407a0c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  407a10:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  407a14:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  407a18:	fa21 f604 	lsr.w	r6, r1, r4
  407a1c:	eb42 0106 	adc.w	r1, r2, r6
  407a20:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  407a24:	bf08      	it	eq
  407a26:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  407a2a:	bd70      	pop	{r4, r5, r6, pc}
  407a2c:	f1c4 040c 	rsb	r4, r4, #12
  407a30:	f1c4 0520 	rsb	r5, r4, #32
  407a34:	fa00 f304 	lsl.w	r3, r0, r4
  407a38:	fa20 f005 	lsr.w	r0, r0, r5
  407a3c:	fa01 f204 	lsl.w	r2, r1, r4
  407a40:	ea40 0002 	orr.w	r0, r0, r2
  407a44:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  407a48:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  407a4c:	f141 0100 	adc.w	r1, r1, #0
  407a50:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  407a54:	bf08      	it	eq
  407a56:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  407a5a:	bd70      	pop	{r4, r5, r6, pc}
  407a5c:	f1c4 0520 	rsb	r5, r4, #32
  407a60:	fa00 f205 	lsl.w	r2, r0, r5
  407a64:	ea4e 0e02 	orr.w	lr, lr, r2
  407a68:	fa20 f304 	lsr.w	r3, r0, r4
  407a6c:	fa01 f205 	lsl.w	r2, r1, r5
  407a70:	ea43 0302 	orr.w	r3, r3, r2
  407a74:	fa21 f004 	lsr.w	r0, r1, r4
  407a78:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  407a7c:	fa21 f204 	lsr.w	r2, r1, r4
  407a80:	ea20 0002 	bic.w	r0, r0, r2
  407a84:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  407a88:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  407a8c:	bf08      	it	eq
  407a8e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  407a92:	bd70      	pop	{r4, r5, r6, pc}
  407a94:	f094 0f00 	teq	r4, #0
  407a98:	d10f      	bne.n	407aba <__aeabi_dmul+0x1c2>
  407a9a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  407a9e:	0040      	lsls	r0, r0, #1
  407aa0:	eb41 0101 	adc.w	r1, r1, r1
  407aa4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  407aa8:	bf08      	it	eq
  407aaa:	3c01      	subeq	r4, #1
  407aac:	d0f7      	beq.n	407a9e <__aeabi_dmul+0x1a6>
  407aae:	ea41 0106 	orr.w	r1, r1, r6
  407ab2:	f095 0f00 	teq	r5, #0
  407ab6:	bf18      	it	ne
  407ab8:	4770      	bxne	lr
  407aba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  407abe:	0052      	lsls	r2, r2, #1
  407ac0:	eb43 0303 	adc.w	r3, r3, r3
  407ac4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  407ac8:	bf08      	it	eq
  407aca:	3d01      	subeq	r5, #1
  407acc:	d0f7      	beq.n	407abe <__aeabi_dmul+0x1c6>
  407ace:	ea43 0306 	orr.w	r3, r3, r6
  407ad2:	4770      	bx	lr
  407ad4:	ea94 0f0c 	teq	r4, ip
  407ad8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  407adc:	bf18      	it	ne
  407ade:	ea95 0f0c 	teqne	r5, ip
  407ae2:	d00c      	beq.n	407afe <__aeabi_dmul+0x206>
  407ae4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  407ae8:	bf18      	it	ne
  407aea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  407aee:	d1d1      	bne.n	407a94 <__aeabi_dmul+0x19c>
  407af0:	ea81 0103 	eor.w	r1, r1, r3
  407af4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  407af8:	f04f 0000 	mov.w	r0, #0
  407afc:	bd70      	pop	{r4, r5, r6, pc}
  407afe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  407b02:	bf06      	itte	eq
  407b04:	4610      	moveq	r0, r2
  407b06:	4619      	moveq	r1, r3
  407b08:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  407b0c:	d019      	beq.n	407b42 <__aeabi_dmul+0x24a>
  407b0e:	ea94 0f0c 	teq	r4, ip
  407b12:	d102      	bne.n	407b1a <__aeabi_dmul+0x222>
  407b14:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  407b18:	d113      	bne.n	407b42 <__aeabi_dmul+0x24a>
  407b1a:	ea95 0f0c 	teq	r5, ip
  407b1e:	d105      	bne.n	407b2c <__aeabi_dmul+0x234>
  407b20:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  407b24:	bf1c      	itt	ne
  407b26:	4610      	movne	r0, r2
  407b28:	4619      	movne	r1, r3
  407b2a:	d10a      	bne.n	407b42 <__aeabi_dmul+0x24a>
  407b2c:	ea81 0103 	eor.w	r1, r1, r3
  407b30:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  407b34:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  407b38:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  407b3c:	f04f 0000 	mov.w	r0, #0
  407b40:	bd70      	pop	{r4, r5, r6, pc}
  407b42:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  407b46:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  407b4a:	bd70      	pop	{r4, r5, r6, pc}

00407b4c <__aeabi_ddiv>:
  407b4c:	b570      	push	{r4, r5, r6, lr}
  407b4e:	f04f 0cff 	mov.w	ip, #255	; 0xff
  407b52:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  407b56:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  407b5a:	bf1d      	ittte	ne
  407b5c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  407b60:	ea94 0f0c 	teqne	r4, ip
  407b64:	ea95 0f0c 	teqne	r5, ip
  407b68:	f000 f8a7 	bleq	407cba <__aeabi_ddiv+0x16e>
  407b6c:	eba4 0405 	sub.w	r4, r4, r5
  407b70:	ea81 0e03 	eor.w	lr, r1, r3
  407b74:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  407b78:	ea4f 3101 	mov.w	r1, r1, lsl #12
  407b7c:	f000 8088 	beq.w	407c90 <__aeabi_ddiv+0x144>
  407b80:	ea4f 3303 	mov.w	r3, r3, lsl #12
  407b84:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  407b88:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  407b8c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  407b90:	ea4f 2202 	mov.w	r2, r2, lsl #8
  407b94:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  407b98:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  407b9c:	ea4f 2600 	mov.w	r6, r0, lsl #8
  407ba0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  407ba4:	429d      	cmp	r5, r3
  407ba6:	bf08      	it	eq
  407ba8:	4296      	cmpeq	r6, r2
  407baa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  407bae:	f504 7440 	add.w	r4, r4, #768	; 0x300
  407bb2:	d202      	bcs.n	407bba <__aeabi_ddiv+0x6e>
  407bb4:	085b      	lsrs	r3, r3, #1
  407bb6:	ea4f 0232 	mov.w	r2, r2, rrx
  407bba:	1ab6      	subs	r6, r6, r2
  407bbc:	eb65 0503 	sbc.w	r5, r5, r3
  407bc0:	085b      	lsrs	r3, r3, #1
  407bc2:	ea4f 0232 	mov.w	r2, r2, rrx
  407bc6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  407bca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  407bce:	ebb6 0e02 	subs.w	lr, r6, r2
  407bd2:	eb75 0e03 	sbcs.w	lr, r5, r3
  407bd6:	bf22      	ittt	cs
  407bd8:	1ab6      	subcs	r6, r6, r2
  407bda:	4675      	movcs	r5, lr
  407bdc:	ea40 000c 	orrcs.w	r0, r0, ip
  407be0:	085b      	lsrs	r3, r3, #1
  407be2:	ea4f 0232 	mov.w	r2, r2, rrx
  407be6:	ebb6 0e02 	subs.w	lr, r6, r2
  407bea:	eb75 0e03 	sbcs.w	lr, r5, r3
  407bee:	bf22      	ittt	cs
  407bf0:	1ab6      	subcs	r6, r6, r2
  407bf2:	4675      	movcs	r5, lr
  407bf4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  407bf8:	085b      	lsrs	r3, r3, #1
  407bfa:	ea4f 0232 	mov.w	r2, r2, rrx
  407bfe:	ebb6 0e02 	subs.w	lr, r6, r2
  407c02:	eb75 0e03 	sbcs.w	lr, r5, r3
  407c06:	bf22      	ittt	cs
  407c08:	1ab6      	subcs	r6, r6, r2
  407c0a:	4675      	movcs	r5, lr
  407c0c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  407c10:	085b      	lsrs	r3, r3, #1
  407c12:	ea4f 0232 	mov.w	r2, r2, rrx
  407c16:	ebb6 0e02 	subs.w	lr, r6, r2
  407c1a:	eb75 0e03 	sbcs.w	lr, r5, r3
  407c1e:	bf22      	ittt	cs
  407c20:	1ab6      	subcs	r6, r6, r2
  407c22:	4675      	movcs	r5, lr
  407c24:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  407c28:	ea55 0e06 	orrs.w	lr, r5, r6
  407c2c:	d018      	beq.n	407c60 <__aeabi_ddiv+0x114>
  407c2e:	ea4f 1505 	mov.w	r5, r5, lsl #4
  407c32:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  407c36:	ea4f 1606 	mov.w	r6, r6, lsl #4
  407c3a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  407c3e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  407c42:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  407c46:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  407c4a:	d1c0      	bne.n	407bce <__aeabi_ddiv+0x82>
  407c4c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  407c50:	d10b      	bne.n	407c6a <__aeabi_ddiv+0x11e>
  407c52:	ea41 0100 	orr.w	r1, r1, r0
  407c56:	f04f 0000 	mov.w	r0, #0
  407c5a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  407c5e:	e7b6      	b.n	407bce <__aeabi_ddiv+0x82>
  407c60:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  407c64:	bf04      	itt	eq
  407c66:	4301      	orreq	r1, r0
  407c68:	2000      	moveq	r0, #0
  407c6a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  407c6e:	bf88      	it	hi
  407c70:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  407c74:	f63f aeaf 	bhi.w	4079d6 <__aeabi_dmul+0xde>
  407c78:	ebb5 0c03 	subs.w	ip, r5, r3
  407c7c:	bf04      	itt	eq
  407c7e:	ebb6 0c02 	subseq.w	ip, r6, r2
  407c82:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  407c86:	f150 0000 	adcs.w	r0, r0, #0
  407c8a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  407c8e:	bd70      	pop	{r4, r5, r6, pc}
  407c90:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  407c94:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  407c98:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  407c9c:	bfc2      	ittt	gt
  407c9e:	ebd4 050c 	rsbsgt	r5, r4, ip
  407ca2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  407ca6:	bd70      	popgt	{r4, r5, r6, pc}
  407ca8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  407cac:	f04f 0e00 	mov.w	lr, #0
  407cb0:	3c01      	subs	r4, #1
  407cb2:	e690      	b.n	4079d6 <__aeabi_dmul+0xde>
  407cb4:	ea45 0e06 	orr.w	lr, r5, r6
  407cb8:	e68d      	b.n	4079d6 <__aeabi_dmul+0xde>
  407cba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  407cbe:	ea94 0f0c 	teq	r4, ip
  407cc2:	bf08      	it	eq
  407cc4:	ea95 0f0c 	teqeq	r5, ip
  407cc8:	f43f af3b 	beq.w	407b42 <__aeabi_dmul+0x24a>
  407ccc:	ea94 0f0c 	teq	r4, ip
  407cd0:	d10a      	bne.n	407ce8 <__aeabi_ddiv+0x19c>
  407cd2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  407cd6:	f47f af34 	bne.w	407b42 <__aeabi_dmul+0x24a>
  407cda:	ea95 0f0c 	teq	r5, ip
  407cde:	f47f af25 	bne.w	407b2c <__aeabi_dmul+0x234>
  407ce2:	4610      	mov	r0, r2
  407ce4:	4619      	mov	r1, r3
  407ce6:	e72c      	b.n	407b42 <__aeabi_dmul+0x24a>
  407ce8:	ea95 0f0c 	teq	r5, ip
  407cec:	d106      	bne.n	407cfc <__aeabi_ddiv+0x1b0>
  407cee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  407cf2:	f43f aefd 	beq.w	407af0 <__aeabi_dmul+0x1f8>
  407cf6:	4610      	mov	r0, r2
  407cf8:	4619      	mov	r1, r3
  407cfa:	e722      	b.n	407b42 <__aeabi_dmul+0x24a>
  407cfc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  407d00:	bf18      	it	ne
  407d02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  407d06:	f47f aec5 	bne.w	407a94 <__aeabi_dmul+0x19c>
  407d0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  407d0e:	f47f af0d 	bne.w	407b2c <__aeabi_dmul+0x234>
  407d12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  407d16:	f47f aeeb 	bne.w	407af0 <__aeabi_dmul+0x1f8>
  407d1a:	e712      	b.n	407b42 <__aeabi_dmul+0x24a>

00407d1c <__aeabi_d2f>:
  407d1c:	ea4f 0241 	mov.w	r2, r1, lsl #1
  407d20:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
  407d24:	bf24      	itt	cs
  407d26:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
  407d2a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
  407d2e:	d90d      	bls.n	407d4c <__aeabi_d2f+0x30>
  407d30:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  407d34:	ea4f 02c0 	mov.w	r2, r0, lsl #3
  407d38:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
  407d3c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
  407d40:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
  407d44:	bf08      	it	eq
  407d46:	f020 0001 	biceq.w	r0, r0, #1
  407d4a:	4770      	bx	lr
  407d4c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
  407d50:	d121      	bne.n	407d96 <__aeabi_d2f+0x7a>
  407d52:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
  407d56:	bfbc      	itt	lt
  407d58:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
  407d5c:	4770      	bxlt	lr
  407d5e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  407d62:	ea4f 5252 	mov.w	r2, r2, lsr #21
  407d66:	f1c2 0218 	rsb	r2, r2, #24
  407d6a:	f1c2 0c20 	rsb	ip, r2, #32
  407d6e:	fa10 f30c 	lsls.w	r3, r0, ip
  407d72:	fa20 f002 	lsr.w	r0, r0, r2
  407d76:	bf18      	it	ne
  407d78:	f040 0001 	orrne.w	r0, r0, #1
  407d7c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  407d80:	ea4f 23d3 	mov.w	r3, r3, lsr #11
  407d84:	fa03 fc0c 	lsl.w	ip, r3, ip
  407d88:	ea40 000c 	orr.w	r0, r0, ip
  407d8c:	fa23 f302 	lsr.w	r3, r3, r2
  407d90:	ea4f 0343 	mov.w	r3, r3, lsl #1
  407d94:	e7cc      	b.n	407d30 <__aeabi_d2f+0x14>
  407d96:	ea7f 5362 	mvns.w	r3, r2, asr #21
  407d9a:	d107      	bne.n	407dac <__aeabi_d2f+0x90>
  407d9c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
  407da0:	bf1e      	ittt	ne
  407da2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
  407da6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
  407daa:	4770      	bxne	lr
  407dac:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
  407db0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  407db4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  407db8:	4770      	bx	lr
  407dba:	bf00      	nop

00407dbc <calloc>:
  407dbc:	4b02      	ldr	r3, [pc, #8]	; (407dc8 <calloc+0xc>)
  407dbe:	460a      	mov	r2, r1
  407dc0:	4601      	mov	r1, r0
  407dc2:	6818      	ldr	r0, [r3, #0]
  407dc4:	f000 b802 	b.w	407dcc <_calloc_r>
  407dc8:	20400084 	.word	0x20400084

00407dcc <_calloc_r>:
  407dcc:	b510      	push	{r4, lr}
  407dce:	fb02 f101 	mul.w	r1, r2, r1
  407dd2:	f000 f875 	bl	407ec0 <_malloc_r>
  407dd6:	4604      	mov	r4, r0
  407dd8:	b1d8      	cbz	r0, 407e12 <_calloc_r+0x46>
  407dda:	f850 2c04 	ldr.w	r2, [r0, #-4]
  407dde:	f022 0203 	bic.w	r2, r2, #3
  407de2:	3a04      	subs	r2, #4
  407de4:	2a24      	cmp	r2, #36	; 0x24
  407de6:	d818      	bhi.n	407e1a <_calloc_r+0x4e>
  407de8:	2a13      	cmp	r2, #19
  407dea:	d914      	bls.n	407e16 <_calloc_r+0x4a>
  407dec:	2300      	movs	r3, #0
  407dee:	2a1b      	cmp	r2, #27
  407df0:	6003      	str	r3, [r0, #0]
  407df2:	6043      	str	r3, [r0, #4]
  407df4:	d916      	bls.n	407e24 <_calloc_r+0x58>
  407df6:	2a24      	cmp	r2, #36	; 0x24
  407df8:	6083      	str	r3, [r0, #8]
  407dfa:	60c3      	str	r3, [r0, #12]
  407dfc:	bf11      	iteee	ne
  407dfe:	f100 0210 	addne.w	r2, r0, #16
  407e02:	6103      	streq	r3, [r0, #16]
  407e04:	6143      	streq	r3, [r0, #20]
  407e06:	f100 0218 	addeq.w	r2, r0, #24
  407e0a:	2300      	movs	r3, #0
  407e0c:	6013      	str	r3, [r2, #0]
  407e0e:	6053      	str	r3, [r2, #4]
  407e10:	6093      	str	r3, [r2, #8]
  407e12:	4620      	mov	r0, r4
  407e14:	bd10      	pop	{r4, pc}
  407e16:	4602      	mov	r2, r0
  407e18:	e7f7      	b.n	407e0a <_calloc_r+0x3e>
  407e1a:	2100      	movs	r1, #0
  407e1c:	f000 fb9a 	bl	408554 <memset>
  407e20:	4620      	mov	r0, r4
  407e22:	bd10      	pop	{r4, pc}
  407e24:	f100 0208 	add.w	r2, r0, #8
  407e28:	e7ef      	b.n	407e0a <_calloc_r+0x3e>
  407e2a:	bf00      	nop

00407e2c <__errno>:
  407e2c:	4b01      	ldr	r3, [pc, #4]	; (407e34 <__errno+0x8>)
  407e2e:	6818      	ldr	r0, [r3, #0]
  407e30:	4770      	bx	lr
  407e32:	bf00      	nop
  407e34:	20400084 	.word	0x20400084

00407e38 <__libc_init_array>:
  407e38:	b570      	push	{r4, r5, r6, lr}
  407e3a:	4e0f      	ldr	r6, [pc, #60]	; (407e78 <__libc_init_array+0x40>)
  407e3c:	4d0f      	ldr	r5, [pc, #60]	; (407e7c <__libc_init_array+0x44>)
  407e3e:	1b76      	subs	r6, r6, r5
  407e40:	10b6      	asrs	r6, r6, #2
  407e42:	bf18      	it	ne
  407e44:	2400      	movne	r4, #0
  407e46:	d005      	beq.n	407e54 <__libc_init_array+0x1c>
  407e48:	3401      	adds	r4, #1
  407e4a:	f855 3b04 	ldr.w	r3, [r5], #4
  407e4e:	4798      	blx	r3
  407e50:	42a6      	cmp	r6, r4
  407e52:	d1f9      	bne.n	407e48 <__libc_init_array+0x10>
  407e54:	4e0a      	ldr	r6, [pc, #40]	; (407e80 <__libc_init_array+0x48>)
  407e56:	4d0b      	ldr	r5, [pc, #44]	; (407e84 <__libc_init_array+0x4c>)
  407e58:	1b76      	subs	r6, r6, r5
  407e5a:	f018 f8c5 	bl	41ffe8 <_init>
  407e5e:	10b6      	asrs	r6, r6, #2
  407e60:	bf18      	it	ne
  407e62:	2400      	movne	r4, #0
  407e64:	d006      	beq.n	407e74 <__libc_init_array+0x3c>
  407e66:	3401      	adds	r4, #1
  407e68:	f855 3b04 	ldr.w	r3, [r5], #4
  407e6c:	4798      	blx	r3
  407e6e:	42a6      	cmp	r6, r4
  407e70:	d1f9      	bne.n	407e66 <__libc_init_array+0x2e>
  407e72:	bd70      	pop	{r4, r5, r6, pc}
  407e74:	bd70      	pop	{r4, r5, r6, pc}
  407e76:	bf00      	nop
  407e78:	0041fff4 	.word	0x0041fff4
  407e7c:	0041fff4 	.word	0x0041fff4
  407e80:	0041fffc 	.word	0x0041fffc
  407e84:	0041fff4 	.word	0x0041fff4

00407e88 <iprintf>:
  407e88:	b40f      	push	{r0, r1, r2, r3}
  407e8a:	b500      	push	{lr}
  407e8c:	4907      	ldr	r1, [pc, #28]	; (407eac <iprintf+0x24>)
  407e8e:	b083      	sub	sp, #12
  407e90:	ab04      	add	r3, sp, #16
  407e92:	6808      	ldr	r0, [r1, #0]
  407e94:	f853 2b04 	ldr.w	r2, [r3], #4
  407e98:	6881      	ldr	r1, [r0, #8]
  407e9a:	9301      	str	r3, [sp, #4]
  407e9c:	f000 fc7e 	bl	40879c <_vfiprintf_r>
  407ea0:	b003      	add	sp, #12
  407ea2:	f85d eb04 	ldr.w	lr, [sp], #4
  407ea6:	b004      	add	sp, #16
  407ea8:	4770      	bx	lr
  407eaa:	bf00      	nop
  407eac:	20400084 	.word	0x20400084

00407eb0 <malloc>:
  407eb0:	4b02      	ldr	r3, [pc, #8]	; (407ebc <malloc+0xc>)
  407eb2:	4601      	mov	r1, r0
  407eb4:	6818      	ldr	r0, [r3, #0]
  407eb6:	f000 b803 	b.w	407ec0 <_malloc_r>
  407eba:	bf00      	nop
  407ebc:	20400084 	.word	0x20400084

00407ec0 <_malloc_r>:
  407ec0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  407ec4:	f101 060b 	add.w	r6, r1, #11
  407ec8:	2e16      	cmp	r6, #22
  407eca:	b083      	sub	sp, #12
  407ecc:	4605      	mov	r5, r0
  407ece:	f240 809e 	bls.w	40800e <_malloc_r+0x14e>
  407ed2:	f036 0607 	bics.w	r6, r6, #7
  407ed6:	f100 80bd 	bmi.w	408054 <_malloc_r+0x194>
  407eda:	42b1      	cmp	r1, r6
  407edc:	f200 80ba 	bhi.w	408054 <_malloc_r+0x194>
  407ee0:	f000 fb86 	bl	4085f0 <__malloc_lock>
  407ee4:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  407ee8:	f0c0 8293 	bcc.w	408412 <_malloc_r+0x552>
  407eec:	0a73      	lsrs	r3, r6, #9
  407eee:	f000 80b8 	beq.w	408062 <_malloc_r+0x1a2>
  407ef2:	2b04      	cmp	r3, #4
  407ef4:	f200 8179 	bhi.w	4081ea <_malloc_r+0x32a>
  407ef8:	09b3      	lsrs	r3, r6, #6
  407efa:	f103 0039 	add.w	r0, r3, #57	; 0x39
  407efe:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  407f02:	00c3      	lsls	r3, r0, #3
  407f04:	4fbf      	ldr	r7, [pc, #764]	; (408204 <_malloc_r+0x344>)
  407f06:	443b      	add	r3, r7
  407f08:	f1a3 0108 	sub.w	r1, r3, #8
  407f0c:	685c      	ldr	r4, [r3, #4]
  407f0e:	42a1      	cmp	r1, r4
  407f10:	d106      	bne.n	407f20 <_malloc_r+0x60>
  407f12:	e00c      	b.n	407f2e <_malloc_r+0x6e>
  407f14:	2a00      	cmp	r2, #0
  407f16:	f280 80aa 	bge.w	40806e <_malloc_r+0x1ae>
  407f1a:	68e4      	ldr	r4, [r4, #12]
  407f1c:	42a1      	cmp	r1, r4
  407f1e:	d006      	beq.n	407f2e <_malloc_r+0x6e>
  407f20:	6863      	ldr	r3, [r4, #4]
  407f22:	f023 0303 	bic.w	r3, r3, #3
  407f26:	1b9a      	subs	r2, r3, r6
  407f28:	2a0f      	cmp	r2, #15
  407f2a:	ddf3      	ble.n	407f14 <_malloc_r+0x54>
  407f2c:	4670      	mov	r0, lr
  407f2e:	693c      	ldr	r4, [r7, #16]
  407f30:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 408218 <_malloc_r+0x358>
  407f34:	4574      	cmp	r4, lr
  407f36:	f000 81ab 	beq.w	408290 <_malloc_r+0x3d0>
  407f3a:	6863      	ldr	r3, [r4, #4]
  407f3c:	f023 0303 	bic.w	r3, r3, #3
  407f40:	1b9a      	subs	r2, r3, r6
  407f42:	2a0f      	cmp	r2, #15
  407f44:	f300 8190 	bgt.w	408268 <_malloc_r+0x3a8>
  407f48:	2a00      	cmp	r2, #0
  407f4a:	f8c7 e014 	str.w	lr, [r7, #20]
  407f4e:	f8c7 e010 	str.w	lr, [r7, #16]
  407f52:	f280 809d 	bge.w	408090 <_malloc_r+0x1d0>
  407f56:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  407f5a:	f080 8161 	bcs.w	408220 <_malloc_r+0x360>
  407f5e:	08db      	lsrs	r3, r3, #3
  407f60:	f103 0c01 	add.w	ip, r3, #1
  407f64:	1099      	asrs	r1, r3, #2
  407f66:	687a      	ldr	r2, [r7, #4]
  407f68:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  407f6c:	f8c4 8008 	str.w	r8, [r4, #8]
  407f70:	2301      	movs	r3, #1
  407f72:	408b      	lsls	r3, r1
  407f74:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  407f78:	4313      	orrs	r3, r2
  407f7a:	3908      	subs	r1, #8
  407f7c:	60e1      	str	r1, [r4, #12]
  407f7e:	607b      	str	r3, [r7, #4]
  407f80:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  407f84:	f8c8 400c 	str.w	r4, [r8, #12]
  407f88:	1082      	asrs	r2, r0, #2
  407f8a:	2401      	movs	r4, #1
  407f8c:	4094      	lsls	r4, r2
  407f8e:	429c      	cmp	r4, r3
  407f90:	f200 808b 	bhi.w	4080aa <_malloc_r+0x1ea>
  407f94:	421c      	tst	r4, r3
  407f96:	d106      	bne.n	407fa6 <_malloc_r+0xe6>
  407f98:	f020 0003 	bic.w	r0, r0, #3
  407f9c:	0064      	lsls	r4, r4, #1
  407f9e:	421c      	tst	r4, r3
  407fa0:	f100 0004 	add.w	r0, r0, #4
  407fa4:	d0fa      	beq.n	407f9c <_malloc_r+0xdc>
  407fa6:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  407faa:	46cc      	mov	ip, r9
  407fac:	4680      	mov	r8, r0
  407fae:	f8dc 300c 	ldr.w	r3, [ip, #12]
  407fb2:	459c      	cmp	ip, r3
  407fb4:	d107      	bne.n	407fc6 <_malloc_r+0x106>
  407fb6:	e16d      	b.n	408294 <_malloc_r+0x3d4>
  407fb8:	2a00      	cmp	r2, #0
  407fba:	f280 817b 	bge.w	4082b4 <_malloc_r+0x3f4>
  407fbe:	68db      	ldr	r3, [r3, #12]
  407fc0:	459c      	cmp	ip, r3
  407fc2:	f000 8167 	beq.w	408294 <_malloc_r+0x3d4>
  407fc6:	6859      	ldr	r1, [r3, #4]
  407fc8:	f021 0103 	bic.w	r1, r1, #3
  407fcc:	1b8a      	subs	r2, r1, r6
  407fce:	2a0f      	cmp	r2, #15
  407fd0:	ddf2      	ble.n	407fb8 <_malloc_r+0xf8>
  407fd2:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  407fd6:	f8d3 8008 	ldr.w	r8, [r3, #8]
  407fda:	9300      	str	r3, [sp, #0]
  407fdc:	199c      	adds	r4, r3, r6
  407fde:	4628      	mov	r0, r5
  407fe0:	f046 0601 	orr.w	r6, r6, #1
  407fe4:	f042 0501 	orr.w	r5, r2, #1
  407fe8:	605e      	str	r6, [r3, #4]
  407fea:	f8c8 c00c 	str.w	ip, [r8, #12]
  407fee:	f8cc 8008 	str.w	r8, [ip, #8]
  407ff2:	617c      	str	r4, [r7, #20]
  407ff4:	613c      	str	r4, [r7, #16]
  407ff6:	f8c4 e00c 	str.w	lr, [r4, #12]
  407ffa:	f8c4 e008 	str.w	lr, [r4, #8]
  407ffe:	6065      	str	r5, [r4, #4]
  408000:	505a      	str	r2, [r3, r1]
  408002:	f000 fafb 	bl	4085fc <__malloc_unlock>
  408006:	9b00      	ldr	r3, [sp, #0]
  408008:	f103 0408 	add.w	r4, r3, #8
  40800c:	e01e      	b.n	40804c <_malloc_r+0x18c>
  40800e:	2910      	cmp	r1, #16
  408010:	d820      	bhi.n	408054 <_malloc_r+0x194>
  408012:	f000 faed 	bl	4085f0 <__malloc_lock>
  408016:	2610      	movs	r6, #16
  408018:	2318      	movs	r3, #24
  40801a:	2002      	movs	r0, #2
  40801c:	4f79      	ldr	r7, [pc, #484]	; (408204 <_malloc_r+0x344>)
  40801e:	443b      	add	r3, r7
  408020:	f1a3 0208 	sub.w	r2, r3, #8
  408024:	685c      	ldr	r4, [r3, #4]
  408026:	4294      	cmp	r4, r2
  408028:	f000 813d 	beq.w	4082a6 <_malloc_r+0x3e6>
  40802c:	6863      	ldr	r3, [r4, #4]
  40802e:	68e1      	ldr	r1, [r4, #12]
  408030:	68a6      	ldr	r6, [r4, #8]
  408032:	f023 0303 	bic.w	r3, r3, #3
  408036:	4423      	add	r3, r4
  408038:	4628      	mov	r0, r5
  40803a:	685a      	ldr	r2, [r3, #4]
  40803c:	60f1      	str	r1, [r6, #12]
  40803e:	f042 0201 	orr.w	r2, r2, #1
  408042:	608e      	str	r6, [r1, #8]
  408044:	605a      	str	r2, [r3, #4]
  408046:	f000 fad9 	bl	4085fc <__malloc_unlock>
  40804a:	3408      	adds	r4, #8
  40804c:	4620      	mov	r0, r4
  40804e:	b003      	add	sp, #12
  408050:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  408054:	2400      	movs	r4, #0
  408056:	230c      	movs	r3, #12
  408058:	4620      	mov	r0, r4
  40805a:	602b      	str	r3, [r5, #0]
  40805c:	b003      	add	sp, #12
  40805e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  408062:	2040      	movs	r0, #64	; 0x40
  408064:	f44f 7300 	mov.w	r3, #512	; 0x200
  408068:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  40806c:	e74a      	b.n	407f04 <_malloc_r+0x44>
  40806e:	4423      	add	r3, r4
  408070:	68e1      	ldr	r1, [r4, #12]
  408072:	685a      	ldr	r2, [r3, #4]
  408074:	68a6      	ldr	r6, [r4, #8]
  408076:	f042 0201 	orr.w	r2, r2, #1
  40807a:	60f1      	str	r1, [r6, #12]
  40807c:	4628      	mov	r0, r5
  40807e:	608e      	str	r6, [r1, #8]
  408080:	605a      	str	r2, [r3, #4]
  408082:	f000 fabb 	bl	4085fc <__malloc_unlock>
  408086:	3408      	adds	r4, #8
  408088:	4620      	mov	r0, r4
  40808a:	b003      	add	sp, #12
  40808c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  408090:	4423      	add	r3, r4
  408092:	4628      	mov	r0, r5
  408094:	685a      	ldr	r2, [r3, #4]
  408096:	f042 0201 	orr.w	r2, r2, #1
  40809a:	605a      	str	r2, [r3, #4]
  40809c:	f000 faae 	bl	4085fc <__malloc_unlock>
  4080a0:	3408      	adds	r4, #8
  4080a2:	4620      	mov	r0, r4
  4080a4:	b003      	add	sp, #12
  4080a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4080aa:	68bc      	ldr	r4, [r7, #8]
  4080ac:	6863      	ldr	r3, [r4, #4]
  4080ae:	f023 0803 	bic.w	r8, r3, #3
  4080b2:	45b0      	cmp	r8, r6
  4080b4:	d304      	bcc.n	4080c0 <_malloc_r+0x200>
  4080b6:	eba8 0306 	sub.w	r3, r8, r6
  4080ba:	2b0f      	cmp	r3, #15
  4080bc:	f300 8085 	bgt.w	4081ca <_malloc_r+0x30a>
  4080c0:	f8df 9158 	ldr.w	r9, [pc, #344]	; 40821c <_malloc_r+0x35c>
  4080c4:	4b50      	ldr	r3, [pc, #320]	; (408208 <_malloc_r+0x348>)
  4080c6:	f8d9 2000 	ldr.w	r2, [r9]
  4080ca:	681b      	ldr	r3, [r3, #0]
  4080cc:	3201      	adds	r2, #1
  4080ce:	4433      	add	r3, r6
  4080d0:	eb04 0a08 	add.w	sl, r4, r8
  4080d4:	f000 8155 	beq.w	408382 <_malloc_r+0x4c2>
  4080d8:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  4080dc:	330f      	adds	r3, #15
  4080de:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  4080e2:	f02b 0b0f 	bic.w	fp, fp, #15
  4080e6:	4659      	mov	r1, fp
  4080e8:	4628      	mov	r0, r5
  4080ea:	f000 fa8d 	bl	408608 <_sbrk_r>
  4080ee:	1c41      	adds	r1, r0, #1
  4080f0:	4602      	mov	r2, r0
  4080f2:	f000 80fc 	beq.w	4082ee <_malloc_r+0x42e>
  4080f6:	4582      	cmp	sl, r0
  4080f8:	f200 80f7 	bhi.w	4082ea <_malloc_r+0x42a>
  4080fc:	4b43      	ldr	r3, [pc, #268]	; (40820c <_malloc_r+0x34c>)
  4080fe:	6819      	ldr	r1, [r3, #0]
  408100:	4459      	add	r1, fp
  408102:	6019      	str	r1, [r3, #0]
  408104:	f000 814d 	beq.w	4083a2 <_malloc_r+0x4e2>
  408108:	f8d9 0000 	ldr.w	r0, [r9]
  40810c:	3001      	adds	r0, #1
  40810e:	bf1b      	ittet	ne
  408110:	eba2 0a0a 	subne.w	sl, r2, sl
  408114:	4451      	addne	r1, sl
  408116:	f8c9 2000 	streq.w	r2, [r9]
  40811a:	6019      	strne	r1, [r3, #0]
  40811c:	f012 0107 	ands.w	r1, r2, #7
  408120:	f000 8115 	beq.w	40834e <_malloc_r+0x48e>
  408124:	f1c1 0008 	rsb	r0, r1, #8
  408128:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  40812c:	4402      	add	r2, r0
  40812e:	3108      	adds	r1, #8
  408130:	eb02 090b 	add.w	r9, r2, fp
  408134:	f3c9 090b 	ubfx	r9, r9, #0, #12
  408138:	eba1 0909 	sub.w	r9, r1, r9
  40813c:	4649      	mov	r1, r9
  40813e:	4628      	mov	r0, r5
  408140:	9301      	str	r3, [sp, #4]
  408142:	9200      	str	r2, [sp, #0]
  408144:	f000 fa60 	bl	408608 <_sbrk_r>
  408148:	1c43      	adds	r3, r0, #1
  40814a:	e89d 000c 	ldmia.w	sp, {r2, r3}
  40814e:	f000 8143 	beq.w	4083d8 <_malloc_r+0x518>
  408152:	1a80      	subs	r0, r0, r2
  408154:	4448      	add	r0, r9
  408156:	f040 0001 	orr.w	r0, r0, #1
  40815a:	6819      	ldr	r1, [r3, #0]
  40815c:	60ba      	str	r2, [r7, #8]
  40815e:	4449      	add	r1, r9
  408160:	42bc      	cmp	r4, r7
  408162:	6050      	str	r0, [r2, #4]
  408164:	6019      	str	r1, [r3, #0]
  408166:	d017      	beq.n	408198 <_malloc_r+0x2d8>
  408168:	f1b8 0f0f 	cmp.w	r8, #15
  40816c:	f240 80fb 	bls.w	408366 <_malloc_r+0x4a6>
  408170:	6860      	ldr	r0, [r4, #4]
  408172:	f1a8 020c 	sub.w	r2, r8, #12
  408176:	f022 0207 	bic.w	r2, r2, #7
  40817a:	eb04 0e02 	add.w	lr, r4, r2
  40817e:	f000 0001 	and.w	r0, r0, #1
  408182:	f04f 0c05 	mov.w	ip, #5
  408186:	4310      	orrs	r0, r2
  408188:	2a0f      	cmp	r2, #15
  40818a:	6060      	str	r0, [r4, #4]
  40818c:	f8ce c004 	str.w	ip, [lr, #4]
  408190:	f8ce c008 	str.w	ip, [lr, #8]
  408194:	f200 8117 	bhi.w	4083c6 <_malloc_r+0x506>
  408198:	4b1d      	ldr	r3, [pc, #116]	; (408210 <_malloc_r+0x350>)
  40819a:	68bc      	ldr	r4, [r7, #8]
  40819c:	681a      	ldr	r2, [r3, #0]
  40819e:	4291      	cmp	r1, r2
  4081a0:	bf88      	it	hi
  4081a2:	6019      	strhi	r1, [r3, #0]
  4081a4:	4b1b      	ldr	r3, [pc, #108]	; (408214 <_malloc_r+0x354>)
  4081a6:	681a      	ldr	r2, [r3, #0]
  4081a8:	4291      	cmp	r1, r2
  4081aa:	6862      	ldr	r2, [r4, #4]
  4081ac:	bf88      	it	hi
  4081ae:	6019      	strhi	r1, [r3, #0]
  4081b0:	f022 0203 	bic.w	r2, r2, #3
  4081b4:	4296      	cmp	r6, r2
  4081b6:	eba2 0306 	sub.w	r3, r2, r6
  4081ba:	d801      	bhi.n	4081c0 <_malloc_r+0x300>
  4081bc:	2b0f      	cmp	r3, #15
  4081be:	dc04      	bgt.n	4081ca <_malloc_r+0x30a>
  4081c0:	4628      	mov	r0, r5
  4081c2:	f000 fa1b 	bl	4085fc <__malloc_unlock>
  4081c6:	2400      	movs	r4, #0
  4081c8:	e740      	b.n	40804c <_malloc_r+0x18c>
  4081ca:	19a2      	adds	r2, r4, r6
  4081cc:	f043 0301 	orr.w	r3, r3, #1
  4081d0:	f046 0601 	orr.w	r6, r6, #1
  4081d4:	6066      	str	r6, [r4, #4]
  4081d6:	4628      	mov	r0, r5
  4081d8:	60ba      	str	r2, [r7, #8]
  4081da:	6053      	str	r3, [r2, #4]
  4081dc:	f000 fa0e 	bl	4085fc <__malloc_unlock>
  4081e0:	3408      	adds	r4, #8
  4081e2:	4620      	mov	r0, r4
  4081e4:	b003      	add	sp, #12
  4081e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4081ea:	2b14      	cmp	r3, #20
  4081ec:	d971      	bls.n	4082d2 <_malloc_r+0x412>
  4081ee:	2b54      	cmp	r3, #84	; 0x54
  4081f0:	f200 80a3 	bhi.w	40833a <_malloc_r+0x47a>
  4081f4:	0b33      	lsrs	r3, r6, #12
  4081f6:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  4081fa:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  4081fe:	00c3      	lsls	r3, r0, #3
  408200:	e680      	b.n	407f04 <_malloc_r+0x44>
  408202:	bf00      	nop
  408204:	204004b0 	.word	0x204004b0
  408208:	20416830 	.word	0x20416830
  40820c:	20416800 	.word	0x20416800
  408210:	20416828 	.word	0x20416828
  408214:	2041682c 	.word	0x2041682c
  408218:	204004b8 	.word	0x204004b8
  40821c:	204008b8 	.word	0x204008b8
  408220:	0a5a      	lsrs	r2, r3, #9
  408222:	2a04      	cmp	r2, #4
  408224:	d95b      	bls.n	4082de <_malloc_r+0x41e>
  408226:	2a14      	cmp	r2, #20
  408228:	f200 80ae 	bhi.w	408388 <_malloc_r+0x4c8>
  40822c:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  408230:	00c9      	lsls	r1, r1, #3
  408232:	325b      	adds	r2, #91	; 0x5b
  408234:	eb07 0c01 	add.w	ip, r7, r1
  408238:	5879      	ldr	r1, [r7, r1]
  40823a:	f1ac 0c08 	sub.w	ip, ip, #8
  40823e:	458c      	cmp	ip, r1
  408240:	f000 8088 	beq.w	408354 <_malloc_r+0x494>
  408244:	684a      	ldr	r2, [r1, #4]
  408246:	f022 0203 	bic.w	r2, r2, #3
  40824a:	4293      	cmp	r3, r2
  40824c:	d273      	bcs.n	408336 <_malloc_r+0x476>
  40824e:	6889      	ldr	r1, [r1, #8]
  408250:	458c      	cmp	ip, r1
  408252:	d1f7      	bne.n	408244 <_malloc_r+0x384>
  408254:	f8dc 200c 	ldr.w	r2, [ip, #12]
  408258:	687b      	ldr	r3, [r7, #4]
  40825a:	60e2      	str	r2, [r4, #12]
  40825c:	f8c4 c008 	str.w	ip, [r4, #8]
  408260:	6094      	str	r4, [r2, #8]
  408262:	f8cc 400c 	str.w	r4, [ip, #12]
  408266:	e68f      	b.n	407f88 <_malloc_r+0xc8>
  408268:	19a1      	adds	r1, r4, r6
  40826a:	f046 0c01 	orr.w	ip, r6, #1
  40826e:	f042 0601 	orr.w	r6, r2, #1
  408272:	f8c4 c004 	str.w	ip, [r4, #4]
  408276:	4628      	mov	r0, r5
  408278:	6179      	str	r1, [r7, #20]
  40827a:	6139      	str	r1, [r7, #16]
  40827c:	f8c1 e00c 	str.w	lr, [r1, #12]
  408280:	f8c1 e008 	str.w	lr, [r1, #8]
  408284:	604e      	str	r6, [r1, #4]
  408286:	50e2      	str	r2, [r4, r3]
  408288:	f000 f9b8 	bl	4085fc <__malloc_unlock>
  40828c:	3408      	adds	r4, #8
  40828e:	e6dd      	b.n	40804c <_malloc_r+0x18c>
  408290:	687b      	ldr	r3, [r7, #4]
  408292:	e679      	b.n	407f88 <_malloc_r+0xc8>
  408294:	f108 0801 	add.w	r8, r8, #1
  408298:	f018 0f03 	tst.w	r8, #3
  40829c:	f10c 0c08 	add.w	ip, ip, #8
  4082a0:	f47f ae85 	bne.w	407fae <_malloc_r+0xee>
  4082a4:	e02d      	b.n	408302 <_malloc_r+0x442>
  4082a6:	68dc      	ldr	r4, [r3, #12]
  4082a8:	42a3      	cmp	r3, r4
  4082aa:	bf08      	it	eq
  4082ac:	3002      	addeq	r0, #2
  4082ae:	f43f ae3e 	beq.w	407f2e <_malloc_r+0x6e>
  4082b2:	e6bb      	b.n	40802c <_malloc_r+0x16c>
  4082b4:	4419      	add	r1, r3
  4082b6:	461c      	mov	r4, r3
  4082b8:	684a      	ldr	r2, [r1, #4]
  4082ba:	68db      	ldr	r3, [r3, #12]
  4082bc:	f854 6f08 	ldr.w	r6, [r4, #8]!
  4082c0:	f042 0201 	orr.w	r2, r2, #1
  4082c4:	604a      	str	r2, [r1, #4]
  4082c6:	4628      	mov	r0, r5
  4082c8:	60f3      	str	r3, [r6, #12]
  4082ca:	609e      	str	r6, [r3, #8]
  4082cc:	f000 f996 	bl	4085fc <__malloc_unlock>
  4082d0:	e6bc      	b.n	40804c <_malloc_r+0x18c>
  4082d2:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  4082d6:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  4082da:	00c3      	lsls	r3, r0, #3
  4082dc:	e612      	b.n	407f04 <_malloc_r+0x44>
  4082de:	099a      	lsrs	r2, r3, #6
  4082e0:	f102 0139 	add.w	r1, r2, #57	; 0x39
  4082e4:	00c9      	lsls	r1, r1, #3
  4082e6:	3238      	adds	r2, #56	; 0x38
  4082e8:	e7a4      	b.n	408234 <_malloc_r+0x374>
  4082ea:	42bc      	cmp	r4, r7
  4082ec:	d054      	beq.n	408398 <_malloc_r+0x4d8>
  4082ee:	68bc      	ldr	r4, [r7, #8]
  4082f0:	6862      	ldr	r2, [r4, #4]
  4082f2:	f022 0203 	bic.w	r2, r2, #3
  4082f6:	e75d      	b.n	4081b4 <_malloc_r+0x2f4>
  4082f8:	f859 3908 	ldr.w	r3, [r9], #-8
  4082fc:	4599      	cmp	r9, r3
  4082fe:	f040 8086 	bne.w	40840e <_malloc_r+0x54e>
  408302:	f010 0f03 	tst.w	r0, #3
  408306:	f100 30ff 	add.w	r0, r0, #4294967295
  40830a:	d1f5      	bne.n	4082f8 <_malloc_r+0x438>
  40830c:	687b      	ldr	r3, [r7, #4]
  40830e:	ea23 0304 	bic.w	r3, r3, r4
  408312:	607b      	str	r3, [r7, #4]
  408314:	0064      	lsls	r4, r4, #1
  408316:	429c      	cmp	r4, r3
  408318:	f63f aec7 	bhi.w	4080aa <_malloc_r+0x1ea>
  40831c:	2c00      	cmp	r4, #0
  40831e:	f43f aec4 	beq.w	4080aa <_malloc_r+0x1ea>
  408322:	421c      	tst	r4, r3
  408324:	4640      	mov	r0, r8
  408326:	f47f ae3e 	bne.w	407fa6 <_malloc_r+0xe6>
  40832a:	0064      	lsls	r4, r4, #1
  40832c:	421c      	tst	r4, r3
  40832e:	f100 0004 	add.w	r0, r0, #4
  408332:	d0fa      	beq.n	40832a <_malloc_r+0x46a>
  408334:	e637      	b.n	407fa6 <_malloc_r+0xe6>
  408336:	468c      	mov	ip, r1
  408338:	e78c      	b.n	408254 <_malloc_r+0x394>
  40833a:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  40833e:	d815      	bhi.n	40836c <_malloc_r+0x4ac>
  408340:	0bf3      	lsrs	r3, r6, #15
  408342:	f103 0078 	add.w	r0, r3, #120	; 0x78
  408346:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  40834a:	00c3      	lsls	r3, r0, #3
  40834c:	e5da      	b.n	407f04 <_malloc_r+0x44>
  40834e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  408352:	e6ed      	b.n	408130 <_malloc_r+0x270>
  408354:	687b      	ldr	r3, [r7, #4]
  408356:	1092      	asrs	r2, r2, #2
  408358:	2101      	movs	r1, #1
  40835a:	fa01 f202 	lsl.w	r2, r1, r2
  40835e:	4313      	orrs	r3, r2
  408360:	607b      	str	r3, [r7, #4]
  408362:	4662      	mov	r2, ip
  408364:	e779      	b.n	40825a <_malloc_r+0x39a>
  408366:	2301      	movs	r3, #1
  408368:	6053      	str	r3, [r2, #4]
  40836a:	e729      	b.n	4081c0 <_malloc_r+0x300>
  40836c:	f240 5254 	movw	r2, #1364	; 0x554
  408370:	4293      	cmp	r3, r2
  408372:	d822      	bhi.n	4083ba <_malloc_r+0x4fa>
  408374:	0cb3      	lsrs	r3, r6, #18
  408376:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  40837a:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  40837e:	00c3      	lsls	r3, r0, #3
  408380:	e5c0      	b.n	407f04 <_malloc_r+0x44>
  408382:	f103 0b10 	add.w	fp, r3, #16
  408386:	e6ae      	b.n	4080e6 <_malloc_r+0x226>
  408388:	2a54      	cmp	r2, #84	; 0x54
  40838a:	d829      	bhi.n	4083e0 <_malloc_r+0x520>
  40838c:	0b1a      	lsrs	r2, r3, #12
  40838e:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  408392:	00c9      	lsls	r1, r1, #3
  408394:	326e      	adds	r2, #110	; 0x6e
  408396:	e74d      	b.n	408234 <_malloc_r+0x374>
  408398:	4b20      	ldr	r3, [pc, #128]	; (40841c <_malloc_r+0x55c>)
  40839a:	6819      	ldr	r1, [r3, #0]
  40839c:	4459      	add	r1, fp
  40839e:	6019      	str	r1, [r3, #0]
  4083a0:	e6b2      	b.n	408108 <_malloc_r+0x248>
  4083a2:	f3ca 000b 	ubfx	r0, sl, #0, #12
  4083a6:	2800      	cmp	r0, #0
  4083a8:	f47f aeae 	bne.w	408108 <_malloc_r+0x248>
  4083ac:	eb08 030b 	add.w	r3, r8, fp
  4083b0:	68ba      	ldr	r2, [r7, #8]
  4083b2:	f043 0301 	orr.w	r3, r3, #1
  4083b6:	6053      	str	r3, [r2, #4]
  4083b8:	e6ee      	b.n	408198 <_malloc_r+0x2d8>
  4083ba:	207f      	movs	r0, #127	; 0x7f
  4083bc:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  4083c0:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  4083c4:	e59e      	b.n	407f04 <_malloc_r+0x44>
  4083c6:	f104 0108 	add.w	r1, r4, #8
  4083ca:	4628      	mov	r0, r5
  4083cc:	9300      	str	r3, [sp, #0]
  4083ce:	f001 fb01 	bl	4099d4 <_free_r>
  4083d2:	9b00      	ldr	r3, [sp, #0]
  4083d4:	6819      	ldr	r1, [r3, #0]
  4083d6:	e6df      	b.n	408198 <_malloc_r+0x2d8>
  4083d8:	2001      	movs	r0, #1
  4083da:	f04f 0900 	mov.w	r9, #0
  4083de:	e6bc      	b.n	40815a <_malloc_r+0x29a>
  4083e0:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4083e4:	d805      	bhi.n	4083f2 <_malloc_r+0x532>
  4083e6:	0bda      	lsrs	r2, r3, #15
  4083e8:	f102 0178 	add.w	r1, r2, #120	; 0x78
  4083ec:	00c9      	lsls	r1, r1, #3
  4083ee:	3277      	adds	r2, #119	; 0x77
  4083f0:	e720      	b.n	408234 <_malloc_r+0x374>
  4083f2:	f240 5154 	movw	r1, #1364	; 0x554
  4083f6:	428a      	cmp	r2, r1
  4083f8:	d805      	bhi.n	408406 <_malloc_r+0x546>
  4083fa:	0c9a      	lsrs	r2, r3, #18
  4083fc:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  408400:	00c9      	lsls	r1, r1, #3
  408402:	327c      	adds	r2, #124	; 0x7c
  408404:	e716      	b.n	408234 <_malloc_r+0x374>
  408406:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  40840a:	227e      	movs	r2, #126	; 0x7e
  40840c:	e712      	b.n	408234 <_malloc_r+0x374>
  40840e:	687b      	ldr	r3, [r7, #4]
  408410:	e780      	b.n	408314 <_malloc_r+0x454>
  408412:	08f0      	lsrs	r0, r6, #3
  408414:	f106 0308 	add.w	r3, r6, #8
  408418:	e600      	b.n	40801c <_malloc_r+0x15c>
  40841a:	bf00      	nop
  40841c:	20416800 	.word	0x20416800

00408420 <memcpy>:
  408420:	4684      	mov	ip, r0
  408422:	ea41 0300 	orr.w	r3, r1, r0
  408426:	f013 0303 	ands.w	r3, r3, #3
  40842a:	d16d      	bne.n	408508 <memcpy+0xe8>
  40842c:	3a40      	subs	r2, #64	; 0x40
  40842e:	d341      	bcc.n	4084b4 <memcpy+0x94>
  408430:	f851 3b04 	ldr.w	r3, [r1], #4
  408434:	f840 3b04 	str.w	r3, [r0], #4
  408438:	f851 3b04 	ldr.w	r3, [r1], #4
  40843c:	f840 3b04 	str.w	r3, [r0], #4
  408440:	f851 3b04 	ldr.w	r3, [r1], #4
  408444:	f840 3b04 	str.w	r3, [r0], #4
  408448:	f851 3b04 	ldr.w	r3, [r1], #4
  40844c:	f840 3b04 	str.w	r3, [r0], #4
  408450:	f851 3b04 	ldr.w	r3, [r1], #4
  408454:	f840 3b04 	str.w	r3, [r0], #4
  408458:	f851 3b04 	ldr.w	r3, [r1], #4
  40845c:	f840 3b04 	str.w	r3, [r0], #4
  408460:	f851 3b04 	ldr.w	r3, [r1], #4
  408464:	f840 3b04 	str.w	r3, [r0], #4
  408468:	f851 3b04 	ldr.w	r3, [r1], #4
  40846c:	f840 3b04 	str.w	r3, [r0], #4
  408470:	f851 3b04 	ldr.w	r3, [r1], #4
  408474:	f840 3b04 	str.w	r3, [r0], #4
  408478:	f851 3b04 	ldr.w	r3, [r1], #4
  40847c:	f840 3b04 	str.w	r3, [r0], #4
  408480:	f851 3b04 	ldr.w	r3, [r1], #4
  408484:	f840 3b04 	str.w	r3, [r0], #4
  408488:	f851 3b04 	ldr.w	r3, [r1], #4
  40848c:	f840 3b04 	str.w	r3, [r0], #4
  408490:	f851 3b04 	ldr.w	r3, [r1], #4
  408494:	f840 3b04 	str.w	r3, [r0], #4
  408498:	f851 3b04 	ldr.w	r3, [r1], #4
  40849c:	f840 3b04 	str.w	r3, [r0], #4
  4084a0:	f851 3b04 	ldr.w	r3, [r1], #4
  4084a4:	f840 3b04 	str.w	r3, [r0], #4
  4084a8:	f851 3b04 	ldr.w	r3, [r1], #4
  4084ac:	f840 3b04 	str.w	r3, [r0], #4
  4084b0:	3a40      	subs	r2, #64	; 0x40
  4084b2:	d2bd      	bcs.n	408430 <memcpy+0x10>
  4084b4:	3230      	adds	r2, #48	; 0x30
  4084b6:	d311      	bcc.n	4084dc <memcpy+0xbc>
  4084b8:	f851 3b04 	ldr.w	r3, [r1], #4
  4084bc:	f840 3b04 	str.w	r3, [r0], #4
  4084c0:	f851 3b04 	ldr.w	r3, [r1], #4
  4084c4:	f840 3b04 	str.w	r3, [r0], #4
  4084c8:	f851 3b04 	ldr.w	r3, [r1], #4
  4084cc:	f840 3b04 	str.w	r3, [r0], #4
  4084d0:	f851 3b04 	ldr.w	r3, [r1], #4
  4084d4:	f840 3b04 	str.w	r3, [r0], #4
  4084d8:	3a10      	subs	r2, #16
  4084da:	d2ed      	bcs.n	4084b8 <memcpy+0x98>
  4084dc:	320c      	adds	r2, #12
  4084de:	d305      	bcc.n	4084ec <memcpy+0xcc>
  4084e0:	f851 3b04 	ldr.w	r3, [r1], #4
  4084e4:	f840 3b04 	str.w	r3, [r0], #4
  4084e8:	3a04      	subs	r2, #4
  4084ea:	d2f9      	bcs.n	4084e0 <memcpy+0xc0>
  4084ec:	3204      	adds	r2, #4
  4084ee:	d008      	beq.n	408502 <memcpy+0xe2>
  4084f0:	07d2      	lsls	r2, r2, #31
  4084f2:	bf1c      	itt	ne
  4084f4:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4084f8:	f800 3b01 	strbne.w	r3, [r0], #1
  4084fc:	d301      	bcc.n	408502 <memcpy+0xe2>
  4084fe:	880b      	ldrh	r3, [r1, #0]
  408500:	8003      	strh	r3, [r0, #0]
  408502:	4660      	mov	r0, ip
  408504:	4770      	bx	lr
  408506:	bf00      	nop
  408508:	2a08      	cmp	r2, #8
  40850a:	d313      	bcc.n	408534 <memcpy+0x114>
  40850c:	078b      	lsls	r3, r1, #30
  40850e:	d08d      	beq.n	40842c <memcpy+0xc>
  408510:	f010 0303 	ands.w	r3, r0, #3
  408514:	d08a      	beq.n	40842c <memcpy+0xc>
  408516:	f1c3 0304 	rsb	r3, r3, #4
  40851a:	1ad2      	subs	r2, r2, r3
  40851c:	07db      	lsls	r3, r3, #31
  40851e:	bf1c      	itt	ne
  408520:	f811 3b01 	ldrbne.w	r3, [r1], #1
  408524:	f800 3b01 	strbne.w	r3, [r0], #1
  408528:	d380      	bcc.n	40842c <memcpy+0xc>
  40852a:	f831 3b02 	ldrh.w	r3, [r1], #2
  40852e:	f820 3b02 	strh.w	r3, [r0], #2
  408532:	e77b      	b.n	40842c <memcpy+0xc>
  408534:	3a04      	subs	r2, #4
  408536:	d3d9      	bcc.n	4084ec <memcpy+0xcc>
  408538:	3a01      	subs	r2, #1
  40853a:	f811 3b01 	ldrb.w	r3, [r1], #1
  40853e:	f800 3b01 	strb.w	r3, [r0], #1
  408542:	d2f9      	bcs.n	408538 <memcpy+0x118>
  408544:	780b      	ldrb	r3, [r1, #0]
  408546:	7003      	strb	r3, [r0, #0]
  408548:	784b      	ldrb	r3, [r1, #1]
  40854a:	7043      	strb	r3, [r0, #1]
  40854c:	788b      	ldrb	r3, [r1, #2]
  40854e:	7083      	strb	r3, [r0, #2]
  408550:	4660      	mov	r0, ip
  408552:	4770      	bx	lr

00408554 <memset>:
  408554:	b470      	push	{r4, r5, r6}
  408556:	0786      	lsls	r6, r0, #30
  408558:	d046      	beq.n	4085e8 <memset+0x94>
  40855a:	1e54      	subs	r4, r2, #1
  40855c:	2a00      	cmp	r2, #0
  40855e:	d041      	beq.n	4085e4 <memset+0x90>
  408560:	b2ca      	uxtb	r2, r1
  408562:	4603      	mov	r3, r0
  408564:	e002      	b.n	40856c <memset+0x18>
  408566:	f114 34ff 	adds.w	r4, r4, #4294967295
  40856a:	d33b      	bcc.n	4085e4 <memset+0x90>
  40856c:	f803 2b01 	strb.w	r2, [r3], #1
  408570:	079d      	lsls	r5, r3, #30
  408572:	d1f8      	bne.n	408566 <memset+0x12>
  408574:	2c03      	cmp	r4, #3
  408576:	d92e      	bls.n	4085d6 <memset+0x82>
  408578:	b2cd      	uxtb	r5, r1
  40857a:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  40857e:	2c0f      	cmp	r4, #15
  408580:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  408584:	d919      	bls.n	4085ba <memset+0x66>
  408586:	f103 0210 	add.w	r2, r3, #16
  40858a:	4626      	mov	r6, r4
  40858c:	3e10      	subs	r6, #16
  40858e:	2e0f      	cmp	r6, #15
  408590:	f842 5c10 	str.w	r5, [r2, #-16]
  408594:	f842 5c0c 	str.w	r5, [r2, #-12]
  408598:	f842 5c08 	str.w	r5, [r2, #-8]
  40859c:	f842 5c04 	str.w	r5, [r2, #-4]
  4085a0:	f102 0210 	add.w	r2, r2, #16
  4085a4:	d8f2      	bhi.n	40858c <memset+0x38>
  4085a6:	f1a4 0210 	sub.w	r2, r4, #16
  4085aa:	f022 020f 	bic.w	r2, r2, #15
  4085ae:	f004 040f 	and.w	r4, r4, #15
  4085b2:	3210      	adds	r2, #16
  4085b4:	2c03      	cmp	r4, #3
  4085b6:	4413      	add	r3, r2
  4085b8:	d90d      	bls.n	4085d6 <memset+0x82>
  4085ba:	461e      	mov	r6, r3
  4085bc:	4622      	mov	r2, r4
  4085be:	3a04      	subs	r2, #4
  4085c0:	2a03      	cmp	r2, #3
  4085c2:	f846 5b04 	str.w	r5, [r6], #4
  4085c6:	d8fa      	bhi.n	4085be <memset+0x6a>
  4085c8:	1f22      	subs	r2, r4, #4
  4085ca:	f022 0203 	bic.w	r2, r2, #3
  4085ce:	3204      	adds	r2, #4
  4085d0:	4413      	add	r3, r2
  4085d2:	f004 0403 	and.w	r4, r4, #3
  4085d6:	b12c      	cbz	r4, 4085e4 <memset+0x90>
  4085d8:	b2c9      	uxtb	r1, r1
  4085da:	441c      	add	r4, r3
  4085dc:	f803 1b01 	strb.w	r1, [r3], #1
  4085e0:	429c      	cmp	r4, r3
  4085e2:	d1fb      	bne.n	4085dc <memset+0x88>
  4085e4:	bc70      	pop	{r4, r5, r6}
  4085e6:	4770      	bx	lr
  4085e8:	4614      	mov	r4, r2
  4085ea:	4603      	mov	r3, r0
  4085ec:	e7c2      	b.n	408574 <memset+0x20>
  4085ee:	bf00      	nop

004085f0 <__malloc_lock>:
  4085f0:	4801      	ldr	r0, [pc, #4]	; (4085f8 <__malloc_lock+0x8>)
  4085f2:	f001 bc89 	b.w	409f08 <__retarget_lock_acquire_recursive>
  4085f6:	bf00      	nop
  4085f8:	2041b874 	.word	0x2041b874

004085fc <__malloc_unlock>:
  4085fc:	4801      	ldr	r0, [pc, #4]	; (408604 <__malloc_unlock+0x8>)
  4085fe:	f001 bc85 	b.w	409f0c <__retarget_lock_release_recursive>
  408602:	bf00      	nop
  408604:	2041b874 	.word	0x2041b874

00408608 <_sbrk_r>:
  408608:	b538      	push	{r3, r4, r5, lr}
  40860a:	4c07      	ldr	r4, [pc, #28]	; (408628 <_sbrk_r+0x20>)
  40860c:	2300      	movs	r3, #0
  40860e:	4605      	mov	r5, r0
  408610:	4608      	mov	r0, r1
  408612:	6023      	str	r3, [r4, #0]
  408614:	f7fa fe0c 	bl	403230 <_sbrk>
  408618:	1c43      	adds	r3, r0, #1
  40861a:	d000      	beq.n	40861e <_sbrk_r+0x16>
  40861c:	bd38      	pop	{r3, r4, r5, pc}
  40861e:	6823      	ldr	r3, [r4, #0]
  408620:	2b00      	cmp	r3, #0
  408622:	d0fb      	beq.n	40861c <_sbrk_r+0x14>
  408624:	602b      	str	r3, [r5, #0]
  408626:	bd38      	pop	{r3, r4, r5, pc}
  408628:	2041b888 	.word	0x2041b888
	...

00408640 <strlen>:
  408640:	f890 f000 	pld	[r0]
  408644:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  408648:	f020 0107 	bic.w	r1, r0, #7
  40864c:	f06f 0c00 	mvn.w	ip, #0
  408650:	f010 0407 	ands.w	r4, r0, #7
  408654:	f891 f020 	pld	[r1, #32]
  408658:	f040 8049 	bne.w	4086ee <strlen+0xae>
  40865c:	f04f 0400 	mov.w	r4, #0
  408660:	f06f 0007 	mvn.w	r0, #7
  408664:	e9d1 2300 	ldrd	r2, r3, [r1]
  408668:	f891 f040 	pld	[r1, #64]	; 0x40
  40866c:	f100 0008 	add.w	r0, r0, #8
  408670:	fa82 f24c 	uadd8	r2, r2, ip
  408674:	faa4 f28c 	sel	r2, r4, ip
  408678:	fa83 f34c 	uadd8	r3, r3, ip
  40867c:	faa2 f38c 	sel	r3, r2, ip
  408680:	bb4b      	cbnz	r3, 4086d6 <strlen+0x96>
  408682:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  408686:	fa82 f24c 	uadd8	r2, r2, ip
  40868a:	f100 0008 	add.w	r0, r0, #8
  40868e:	faa4 f28c 	sel	r2, r4, ip
  408692:	fa83 f34c 	uadd8	r3, r3, ip
  408696:	faa2 f38c 	sel	r3, r2, ip
  40869a:	b9e3      	cbnz	r3, 4086d6 <strlen+0x96>
  40869c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  4086a0:	fa82 f24c 	uadd8	r2, r2, ip
  4086a4:	f100 0008 	add.w	r0, r0, #8
  4086a8:	faa4 f28c 	sel	r2, r4, ip
  4086ac:	fa83 f34c 	uadd8	r3, r3, ip
  4086b0:	faa2 f38c 	sel	r3, r2, ip
  4086b4:	b97b      	cbnz	r3, 4086d6 <strlen+0x96>
  4086b6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  4086ba:	f101 0120 	add.w	r1, r1, #32
  4086be:	fa82 f24c 	uadd8	r2, r2, ip
  4086c2:	f100 0008 	add.w	r0, r0, #8
  4086c6:	faa4 f28c 	sel	r2, r4, ip
  4086ca:	fa83 f34c 	uadd8	r3, r3, ip
  4086ce:	faa2 f38c 	sel	r3, r2, ip
  4086d2:	2b00      	cmp	r3, #0
  4086d4:	d0c6      	beq.n	408664 <strlen+0x24>
  4086d6:	2a00      	cmp	r2, #0
  4086d8:	bf04      	itt	eq
  4086da:	3004      	addeq	r0, #4
  4086dc:	461a      	moveq	r2, r3
  4086de:	ba12      	rev	r2, r2
  4086e0:	fab2 f282 	clz	r2, r2
  4086e4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  4086e8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  4086ec:	4770      	bx	lr
  4086ee:	e9d1 2300 	ldrd	r2, r3, [r1]
  4086f2:	f004 0503 	and.w	r5, r4, #3
  4086f6:	f1c4 0000 	rsb	r0, r4, #0
  4086fa:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  4086fe:	f014 0f04 	tst.w	r4, #4
  408702:	f891 f040 	pld	[r1, #64]	; 0x40
  408706:	fa0c f505 	lsl.w	r5, ip, r5
  40870a:	ea62 0205 	orn	r2, r2, r5
  40870e:	bf1c      	itt	ne
  408710:	ea63 0305 	ornne	r3, r3, r5
  408714:	4662      	movne	r2, ip
  408716:	f04f 0400 	mov.w	r4, #0
  40871a:	e7a9      	b.n	408670 <strlen+0x30>

0040871c <__sprint_r.part.0>:
  40871c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  408720:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  408722:	049c      	lsls	r4, r3, #18
  408724:	4693      	mov	fp, r2
  408726:	d52f      	bpl.n	408788 <__sprint_r.part.0+0x6c>
  408728:	6893      	ldr	r3, [r2, #8]
  40872a:	6812      	ldr	r2, [r2, #0]
  40872c:	b353      	cbz	r3, 408784 <__sprint_r.part.0+0x68>
  40872e:	460e      	mov	r6, r1
  408730:	4607      	mov	r7, r0
  408732:	f102 0908 	add.w	r9, r2, #8
  408736:	e919 0420 	ldmdb	r9, {r5, sl}
  40873a:	ea5f 089a 	movs.w	r8, sl, lsr #2
  40873e:	d017      	beq.n	408770 <__sprint_r.part.0+0x54>
  408740:	3d04      	subs	r5, #4
  408742:	2400      	movs	r4, #0
  408744:	e001      	b.n	40874a <__sprint_r.part.0+0x2e>
  408746:	45a0      	cmp	r8, r4
  408748:	d010      	beq.n	40876c <__sprint_r.part.0+0x50>
  40874a:	4632      	mov	r2, r6
  40874c:	f855 1f04 	ldr.w	r1, [r5, #4]!
  408750:	4638      	mov	r0, r7
  408752:	f001 f8bb 	bl	4098cc <_fputwc_r>
  408756:	1c43      	adds	r3, r0, #1
  408758:	f104 0401 	add.w	r4, r4, #1
  40875c:	d1f3      	bne.n	408746 <__sprint_r.part.0+0x2a>
  40875e:	2300      	movs	r3, #0
  408760:	f8cb 3008 	str.w	r3, [fp, #8]
  408764:	f8cb 3004 	str.w	r3, [fp, #4]
  408768:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40876c:	f8db 3008 	ldr.w	r3, [fp, #8]
  408770:	f02a 0a03 	bic.w	sl, sl, #3
  408774:	eba3 030a 	sub.w	r3, r3, sl
  408778:	f8cb 3008 	str.w	r3, [fp, #8]
  40877c:	f109 0908 	add.w	r9, r9, #8
  408780:	2b00      	cmp	r3, #0
  408782:	d1d8      	bne.n	408736 <__sprint_r.part.0+0x1a>
  408784:	2000      	movs	r0, #0
  408786:	e7ea      	b.n	40875e <__sprint_r.part.0+0x42>
  408788:	f001 fa0a 	bl	409ba0 <__sfvwrite_r>
  40878c:	2300      	movs	r3, #0
  40878e:	f8cb 3008 	str.w	r3, [fp, #8]
  408792:	f8cb 3004 	str.w	r3, [fp, #4]
  408796:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40879a:	bf00      	nop

0040879c <_vfiprintf_r>:
  40879c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4087a0:	b0ad      	sub	sp, #180	; 0xb4
  4087a2:	461d      	mov	r5, r3
  4087a4:	468b      	mov	fp, r1
  4087a6:	4690      	mov	r8, r2
  4087a8:	9307      	str	r3, [sp, #28]
  4087aa:	9006      	str	r0, [sp, #24]
  4087ac:	b118      	cbz	r0, 4087b6 <_vfiprintf_r+0x1a>
  4087ae:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4087b0:	2b00      	cmp	r3, #0
  4087b2:	f000 80f3 	beq.w	40899c <_vfiprintf_r+0x200>
  4087b6:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  4087ba:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
  4087be:	07df      	lsls	r7, r3, #31
  4087c0:	b281      	uxth	r1, r0
  4087c2:	d402      	bmi.n	4087ca <_vfiprintf_r+0x2e>
  4087c4:	058e      	lsls	r6, r1, #22
  4087c6:	f140 80fc 	bpl.w	4089c2 <_vfiprintf_r+0x226>
  4087ca:	048c      	lsls	r4, r1, #18
  4087cc:	d40a      	bmi.n	4087e4 <_vfiprintf_r+0x48>
  4087ce:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  4087d2:	f440 5100 	orr.w	r1, r0, #8192	; 0x2000
  4087d6:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  4087da:	f8ab 100c 	strh.w	r1, [fp, #12]
  4087de:	f8cb 3064 	str.w	r3, [fp, #100]	; 0x64
  4087e2:	b289      	uxth	r1, r1
  4087e4:	0708      	lsls	r0, r1, #28
  4087e6:	f140 80b3 	bpl.w	408950 <_vfiprintf_r+0x1b4>
  4087ea:	f8db 3010 	ldr.w	r3, [fp, #16]
  4087ee:	2b00      	cmp	r3, #0
  4087f0:	f000 80ae 	beq.w	408950 <_vfiprintf_r+0x1b4>
  4087f4:	f001 031a 	and.w	r3, r1, #26
  4087f8:	2b0a      	cmp	r3, #10
  4087fa:	f000 80b5 	beq.w	408968 <_vfiprintf_r+0x1cc>
  4087fe:	2300      	movs	r3, #0
  408800:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  408804:	930b      	str	r3, [sp, #44]	; 0x2c
  408806:	9311      	str	r3, [sp, #68]	; 0x44
  408808:	9310      	str	r3, [sp, #64]	; 0x40
  40880a:	9303      	str	r3, [sp, #12]
  40880c:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  408810:	46ca      	mov	sl, r9
  408812:	f8cd b010 	str.w	fp, [sp, #16]
  408816:	f898 3000 	ldrb.w	r3, [r8]
  40881a:	4644      	mov	r4, r8
  40881c:	b1fb      	cbz	r3, 40885e <_vfiprintf_r+0xc2>
  40881e:	2b25      	cmp	r3, #37	; 0x25
  408820:	d102      	bne.n	408828 <_vfiprintf_r+0x8c>
  408822:	e01c      	b.n	40885e <_vfiprintf_r+0xc2>
  408824:	2b25      	cmp	r3, #37	; 0x25
  408826:	d003      	beq.n	408830 <_vfiprintf_r+0x94>
  408828:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  40882c:	2b00      	cmp	r3, #0
  40882e:	d1f9      	bne.n	408824 <_vfiprintf_r+0x88>
  408830:	eba4 0508 	sub.w	r5, r4, r8
  408834:	b19d      	cbz	r5, 40885e <_vfiprintf_r+0xc2>
  408836:	9b10      	ldr	r3, [sp, #64]	; 0x40
  408838:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40883a:	f8ca 8000 	str.w	r8, [sl]
  40883e:	3301      	adds	r3, #1
  408840:	442a      	add	r2, r5
  408842:	2b07      	cmp	r3, #7
  408844:	f8ca 5004 	str.w	r5, [sl, #4]
  408848:	9211      	str	r2, [sp, #68]	; 0x44
  40884a:	9310      	str	r3, [sp, #64]	; 0x40
  40884c:	dd7a      	ble.n	408944 <_vfiprintf_r+0x1a8>
  40884e:	2a00      	cmp	r2, #0
  408850:	f040 84b0 	bne.w	4091b4 <_vfiprintf_r+0xa18>
  408854:	9b03      	ldr	r3, [sp, #12]
  408856:	9210      	str	r2, [sp, #64]	; 0x40
  408858:	442b      	add	r3, r5
  40885a:	46ca      	mov	sl, r9
  40885c:	9303      	str	r3, [sp, #12]
  40885e:	7823      	ldrb	r3, [r4, #0]
  408860:	2b00      	cmp	r3, #0
  408862:	f000 83e0 	beq.w	409026 <_vfiprintf_r+0x88a>
  408866:	2000      	movs	r0, #0
  408868:	f04f 0300 	mov.w	r3, #0
  40886c:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
  408870:	f104 0801 	add.w	r8, r4, #1
  408874:	7862      	ldrb	r2, [r4, #1]
  408876:	4605      	mov	r5, r0
  408878:	4606      	mov	r6, r0
  40887a:	4603      	mov	r3, r0
  40887c:	f04f 34ff 	mov.w	r4, #4294967295
  408880:	f108 0801 	add.w	r8, r8, #1
  408884:	f1a2 0120 	sub.w	r1, r2, #32
  408888:	2958      	cmp	r1, #88	; 0x58
  40888a:	f200 82de 	bhi.w	408e4a <_vfiprintf_r+0x6ae>
  40888e:	e8df f011 	tbh	[pc, r1, lsl #1]
  408892:	0221      	.short	0x0221
  408894:	02dc02dc 	.word	0x02dc02dc
  408898:	02dc0229 	.word	0x02dc0229
  40889c:	02dc02dc 	.word	0x02dc02dc
  4088a0:	02dc02dc 	.word	0x02dc02dc
  4088a4:	028902dc 	.word	0x028902dc
  4088a8:	02dc0295 	.word	0x02dc0295
  4088ac:	02bd00a2 	.word	0x02bd00a2
  4088b0:	019f02dc 	.word	0x019f02dc
  4088b4:	01a401a4 	.word	0x01a401a4
  4088b8:	01a401a4 	.word	0x01a401a4
  4088bc:	01a401a4 	.word	0x01a401a4
  4088c0:	01a401a4 	.word	0x01a401a4
  4088c4:	02dc01a4 	.word	0x02dc01a4
  4088c8:	02dc02dc 	.word	0x02dc02dc
  4088cc:	02dc02dc 	.word	0x02dc02dc
  4088d0:	02dc02dc 	.word	0x02dc02dc
  4088d4:	02dc02dc 	.word	0x02dc02dc
  4088d8:	01b202dc 	.word	0x01b202dc
  4088dc:	02dc02dc 	.word	0x02dc02dc
  4088e0:	02dc02dc 	.word	0x02dc02dc
  4088e4:	02dc02dc 	.word	0x02dc02dc
  4088e8:	02dc02dc 	.word	0x02dc02dc
  4088ec:	02dc02dc 	.word	0x02dc02dc
  4088f0:	02dc0197 	.word	0x02dc0197
  4088f4:	02dc02dc 	.word	0x02dc02dc
  4088f8:	02dc02dc 	.word	0x02dc02dc
  4088fc:	02dc019b 	.word	0x02dc019b
  408900:	025302dc 	.word	0x025302dc
  408904:	02dc02dc 	.word	0x02dc02dc
  408908:	02dc02dc 	.word	0x02dc02dc
  40890c:	02dc02dc 	.word	0x02dc02dc
  408910:	02dc02dc 	.word	0x02dc02dc
  408914:	02dc02dc 	.word	0x02dc02dc
  408918:	021b025a 	.word	0x021b025a
  40891c:	02dc02dc 	.word	0x02dc02dc
  408920:	026e02dc 	.word	0x026e02dc
  408924:	02dc021b 	.word	0x02dc021b
  408928:	027302dc 	.word	0x027302dc
  40892c:	01f502dc 	.word	0x01f502dc
  408930:	02090182 	.word	0x02090182
  408934:	02dc02d7 	.word	0x02dc02d7
  408938:	02dc029a 	.word	0x02dc029a
  40893c:	02dc00a7 	.word	0x02dc00a7
  408940:	022e02dc 	.word	0x022e02dc
  408944:	f10a 0a08 	add.w	sl, sl, #8
  408948:	9b03      	ldr	r3, [sp, #12]
  40894a:	442b      	add	r3, r5
  40894c:	9303      	str	r3, [sp, #12]
  40894e:	e786      	b.n	40885e <_vfiprintf_r+0xc2>
  408950:	4659      	mov	r1, fp
  408952:	9806      	ldr	r0, [sp, #24]
  408954:	f000 fdac 	bl	4094b0 <__swsetup_r>
  408958:	bb18      	cbnz	r0, 4089a2 <_vfiprintf_r+0x206>
  40895a:	f8bb 100c 	ldrh.w	r1, [fp, #12]
  40895e:	f001 031a 	and.w	r3, r1, #26
  408962:	2b0a      	cmp	r3, #10
  408964:	f47f af4b 	bne.w	4087fe <_vfiprintf_r+0x62>
  408968:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
  40896c:	2b00      	cmp	r3, #0
  40896e:	f6ff af46 	blt.w	4087fe <_vfiprintf_r+0x62>
  408972:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  408976:	07db      	lsls	r3, r3, #31
  408978:	d405      	bmi.n	408986 <_vfiprintf_r+0x1ea>
  40897a:	058f      	lsls	r7, r1, #22
  40897c:	d403      	bmi.n	408986 <_vfiprintf_r+0x1ea>
  40897e:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  408982:	f001 fac3 	bl	409f0c <__retarget_lock_release_recursive>
  408986:	462b      	mov	r3, r5
  408988:	4642      	mov	r2, r8
  40898a:	4659      	mov	r1, fp
  40898c:	9806      	ldr	r0, [sp, #24]
  40898e:	f000 fd4d 	bl	40942c <__sbprintf>
  408992:	9003      	str	r0, [sp, #12]
  408994:	9803      	ldr	r0, [sp, #12]
  408996:	b02d      	add	sp, #180	; 0xb4
  408998:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40899c:	f000 fef4 	bl	409788 <__sinit>
  4089a0:	e709      	b.n	4087b6 <_vfiprintf_r+0x1a>
  4089a2:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  4089a6:	07d9      	lsls	r1, r3, #31
  4089a8:	d404      	bmi.n	4089b4 <_vfiprintf_r+0x218>
  4089aa:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  4089ae:	059a      	lsls	r2, r3, #22
  4089b0:	f140 84aa 	bpl.w	409308 <_vfiprintf_r+0xb6c>
  4089b4:	f04f 33ff 	mov.w	r3, #4294967295
  4089b8:	9303      	str	r3, [sp, #12]
  4089ba:	9803      	ldr	r0, [sp, #12]
  4089bc:	b02d      	add	sp, #180	; 0xb4
  4089be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4089c2:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  4089c6:	f001 fa9f 	bl	409f08 <__retarget_lock_acquire_recursive>
  4089ca:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
  4089ce:	b281      	uxth	r1, r0
  4089d0:	e6fb      	b.n	4087ca <_vfiprintf_r+0x2e>
  4089d2:	4276      	negs	r6, r6
  4089d4:	9207      	str	r2, [sp, #28]
  4089d6:	f043 0304 	orr.w	r3, r3, #4
  4089da:	f898 2000 	ldrb.w	r2, [r8]
  4089de:	e74f      	b.n	408880 <_vfiprintf_r+0xe4>
  4089e0:	9608      	str	r6, [sp, #32]
  4089e2:	069e      	lsls	r6, r3, #26
  4089e4:	f100 8450 	bmi.w	409288 <_vfiprintf_r+0xaec>
  4089e8:	9907      	ldr	r1, [sp, #28]
  4089ea:	06dd      	lsls	r5, r3, #27
  4089ec:	460a      	mov	r2, r1
  4089ee:	f100 83ef 	bmi.w	4091d0 <_vfiprintf_r+0xa34>
  4089f2:	0658      	lsls	r0, r3, #25
  4089f4:	f140 83ec 	bpl.w	4091d0 <_vfiprintf_r+0xa34>
  4089f8:	880e      	ldrh	r6, [r1, #0]
  4089fa:	3104      	adds	r1, #4
  4089fc:	2700      	movs	r7, #0
  4089fe:	2201      	movs	r2, #1
  408a00:	9107      	str	r1, [sp, #28]
  408a02:	f04f 0100 	mov.w	r1, #0
  408a06:	f88d 1037 	strb.w	r1, [sp, #55]	; 0x37
  408a0a:	2500      	movs	r5, #0
  408a0c:	1c61      	adds	r1, r4, #1
  408a0e:	f000 8116 	beq.w	408c3e <_vfiprintf_r+0x4a2>
  408a12:	f023 0180 	bic.w	r1, r3, #128	; 0x80
  408a16:	9102      	str	r1, [sp, #8]
  408a18:	ea56 0107 	orrs.w	r1, r6, r7
  408a1c:	f040 8114 	bne.w	408c48 <_vfiprintf_r+0x4ac>
  408a20:	2c00      	cmp	r4, #0
  408a22:	f040 835c 	bne.w	4090de <_vfiprintf_r+0x942>
  408a26:	2a00      	cmp	r2, #0
  408a28:	f040 83b7 	bne.w	40919a <_vfiprintf_r+0x9fe>
  408a2c:	f013 0301 	ands.w	r3, r3, #1
  408a30:	9305      	str	r3, [sp, #20]
  408a32:	f000 8457 	beq.w	4092e4 <_vfiprintf_r+0xb48>
  408a36:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
  408a3a:	2330      	movs	r3, #48	; 0x30
  408a3c:	f80b 3d41 	strb.w	r3, [fp, #-65]!
  408a40:	9b05      	ldr	r3, [sp, #20]
  408a42:	42a3      	cmp	r3, r4
  408a44:	bfb8      	it	lt
  408a46:	4623      	movlt	r3, r4
  408a48:	9301      	str	r3, [sp, #4]
  408a4a:	b10d      	cbz	r5, 408a50 <_vfiprintf_r+0x2b4>
  408a4c:	3301      	adds	r3, #1
  408a4e:	9301      	str	r3, [sp, #4]
  408a50:	9b02      	ldr	r3, [sp, #8]
  408a52:	f013 0302 	ands.w	r3, r3, #2
  408a56:	9309      	str	r3, [sp, #36]	; 0x24
  408a58:	d002      	beq.n	408a60 <_vfiprintf_r+0x2c4>
  408a5a:	9b01      	ldr	r3, [sp, #4]
  408a5c:	3302      	adds	r3, #2
  408a5e:	9301      	str	r3, [sp, #4]
  408a60:	9b02      	ldr	r3, [sp, #8]
  408a62:	f013 0384 	ands.w	r3, r3, #132	; 0x84
  408a66:	930a      	str	r3, [sp, #40]	; 0x28
  408a68:	f040 8217 	bne.w	408e9a <_vfiprintf_r+0x6fe>
  408a6c:	9b08      	ldr	r3, [sp, #32]
  408a6e:	9a01      	ldr	r2, [sp, #4]
  408a70:	1a9d      	subs	r5, r3, r2
  408a72:	2d00      	cmp	r5, #0
  408a74:	f340 8211 	ble.w	408e9a <_vfiprintf_r+0x6fe>
  408a78:	2d10      	cmp	r5, #16
  408a7a:	f340 8490 	ble.w	40939e <_vfiprintf_r+0xc02>
  408a7e:	9b10      	ldr	r3, [sp, #64]	; 0x40
  408a80:	9a11      	ldr	r2, [sp, #68]	; 0x44
  408a82:	4ec4      	ldr	r6, [pc, #784]	; (408d94 <_vfiprintf_r+0x5f8>)
  408a84:	46d6      	mov	lr, sl
  408a86:	2710      	movs	r7, #16
  408a88:	46a2      	mov	sl, r4
  408a8a:	4619      	mov	r1, r3
  408a8c:	9c06      	ldr	r4, [sp, #24]
  408a8e:	e007      	b.n	408aa0 <_vfiprintf_r+0x304>
  408a90:	f101 0c02 	add.w	ip, r1, #2
  408a94:	f10e 0e08 	add.w	lr, lr, #8
  408a98:	4601      	mov	r1, r0
  408a9a:	3d10      	subs	r5, #16
  408a9c:	2d10      	cmp	r5, #16
  408a9e:	dd11      	ble.n	408ac4 <_vfiprintf_r+0x328>
  408aa0:	1c48      	adds	r0, r1, #1
  408aa2:	3210      	adds	r2, #16
  408aa4:	2807      	cmp	r0, #7
  408aa6:	9211      	str	r2, [sp, #68]	; 0x44
  408aa8:	e88e 00c0 	stmia.w	lr, {r6, r7}
  408aac:	9010      	str	r0, [sp, #64]	; 0x40
  408aae:	ddef      	ble.n	408a90 <_vfiprintf_r+0x2f4>
  408ab0:	2a00      	cmp	r2, #0
  408ab2:	f040 81e4 	bne.w	408e7e <_vfiprintf_r+0x6e2>
  408ab6:	3d10      	subs	r5, #16
  408ab8:	2d10      	cmp	r5, #16
  408aba:	4611      	mov	r1, r2
  408abc:	f04f 0c01 	mov.w	ip, #1
  408ac0:	46ce      	mov	lr, r9
  408ac2:	dced      	bgt.n	408aa0 <_vfiprintf_r+0x304>
  408ac4:	4654      	mov	r4, sl
  408ac6:	4661      	mov	r1, ip
  408ac8:	46f2      	mov	sl, lr
  408aca:	442a      	add	r2, r5
  408acc:	2907      	cmp	r1, #7
  408ace:	9211      	str	r2, [sp, #68]	; 0x44
  408ad0:	f8ca 6000 	str.w	r6, [sl]
  408ad4:	f8ca 5004 	str.w	r5, [sl, #4]
  408ad8:	9110      	str	r1, [sp, #64]	; 0x40
  408ada:	f300 82ec 	bgt.w	4090b6 <_vfiprintf_r+0x91a>
  408ade:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  408ae2:	f10a 0a08 	add.w	sl, sl, #8
  408ae6:	1c48      	adds	r0, r1, #1
  408ae8:	2d00      	cmp	r5, #0
  408aea:	f040 81de 	bne.w	408eaa <_vfiprintf_r+0x70e>
  408aee:	9b09      	ldr	r3, [sp, #36]	; 0x24
  408af0:	2b00      	cmp	r3, #0
  408af2:	f000 81f8 	beq.w	408ee6 <_vfiprintf_r+0x74a>
  408af6:	3202      	adds	r2, #2
  408af8:	a90e      	add	r1, sp, #56	; 0x38
  408afa:	2302      	movs	r3, #2
  408afc:	2807      	cmp	r0, #7
  408afe:	9211      	str	r2, [sp, #68]	; 0x44
  408b00:	9010      	str	r0, [sp, #64]	; 0x40
  408b02:	e88a 000a 	stmia.w	sl, {r1, r3}
  408b06:	f340 81ea 	ble.w	408ede <_vfiprintf_r+0x742>
  408b0a:	2a00      	cmp	r2, #0
  408b0c:	f040 838c 	bne.w	409228 <_vfiprintf_r+0xa8c>
  408b10:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  408b12:	2b80      	cmp	r3, #128	; 0x80
  408b14:	f04f 0001 	mov.w	r0, #1
  408b18:	4611      	mov	r1, r2
  408b1a:	46ca      	mov	sl, r9
  408b1c:	f040 81e7 	bne.w	408eee <_vfiprintf_r+0x752>
  408b20:	9b08      	ldr	r3, [sp, #32]
  408b22:	9d01      	ldr	r5, [sp, #4]
  408b24:	1b5e      	subs	r6, r3, r5
  408b26:	2e00      	cmp	r6, #0
  408b28:	f340 81e1 	ble.w	408eee <_vfiprintf_r+0x752>
  408b2c:	2e10      	cmp	r6, #16
  408b2e:	4d9a      	ldr	r5, [pc, #616]	; (408d98 <_vfiprintf_r+0x5fc>)
  408b30:	f340 8450 	ble.w	4093d4 <_vfiprintf_r+0xc38>
  408b34:	46d4      	mov	ip, sl
  408b36:	2710      	movs	r7, #16
  408b38:	46a2      	mov	sl, r4
  408b3a:	9c06      	ldr	r4, [sp, #24]
  408b3c:	e007      	b.n	408b4e <_vfiprintf_r+0x3b2>
  408b3e:	f101 0e02 	add.w	lr, r1, #2
  408b42:	f10c 0c08 	add.w	ip, ip, #8
  408b46:	4601      	mov	r1, r0
  408b48:	3e10      	subs	r6, #16
  408b4a:	2e10      	cmp	r6, #16
  408b4c:	dd11      	ble.n	408b72 <_vfiprintf_r+0x3d6>
  408b4e:	1c48      	adds	r0, r1, #1
  408b50:	3210      	adds	r2, #16
  408b52:	2807      	cmp	r0, #7
  408b54:	9211      	str	r2, [sp, #68]	; 0x44
  408b56:	e88c 00a0 	stmia.w	ip, {r5, r7}
  408b5a:	9010      	str	r0, [sp, #64]	; 0x40
  408b5c:	ddef      	ble.n	408b3e <_vfiprintf_r+0x3a2>
  408b5e:	2a00      	cmp	r2, #0
  408b60:	f040 829d 	bne.w	40909e <_vfiprintf_r+0x902>
  408b64:	3e10      	subs	r6, #16
  408b66:	2e10      	cmp	r6, #16
  408b68:	f04f 0e01 	mov.w	lr, #1
  408b6c:	4611      	mov	r1, r2
  408b6e:	46cc      	mov	ip, r9
  408b70:	dced      	bgt.n	408b4e <_vfiprintf_r+0x3b2>
  408b72:	4654      	mov	r4, sl
  408b74:	46e2      	mov	sl, ip
  408b76:	4432      	add	r2, r6
  408b78:	f1be 0f07 	cmp.w	lr, #7
  408b7c:	9211      	str	r2, [sp, #68]	; 0x44
  408b7e:	e88a 0060 	stmia.w	sl, {r5, r6}
  408b82:	f8cd e040 	str.w	lr, [sp, #64]	; 0x40
  408b86:	f300 8369 	bgt.w	40925c <_vfiprintf_r+0xac0>
  408b8a:	f10a 0a08 	add.w	sl, sl, #8
  408b8e:	f10e 0001 	add.w	r0, lr, #1
  408b92:	4671      	mov	r1, lr
  408b94:	e1ab      	b.n	408eee <_vfiprintf_r+0x752>
  408b96:	9608      	str	r6, [sp, #32]
  408b98:	f013 0220 	ands.w	r2, r3, #32
  408b9c:	f040 838c 	bne.w	4092b8 <_vfiprintf_r+0xb1c>
  408ba0:	f013 0110 	ands.w	r1, r3, #16
  408ba4:	f040 831a 	bne.w	4091dc <_vfiprintf_r+0xa40>
  408ba8:	f013 0240 	ands.w	r2, r3, #64	; 0x40
  408bac:	f000 8316 	beq.w	4091dc <_vfiprintf_r+0xa40>
  408bb0:	9807      	ldr	r0, [sp, #28]
  408bb2:	460a      	mov	r2, r1
  408bb4:	4601      	mov	r1, r0
  408bb6:	3104      	adds	r1, #4
  408bb8:	8806      	ldrh	r6, [r0, #0]
  408bba:	9107      	str	r1, [sp, #28]
  408bbc:	2700      	movs	r7, #0
  408bbe:	e720      	b.n	408a02 <_vfiprintf_r+0x266>
  408bc0:	9608      	str	r6, [sp, #32]
  408bc2:	f043 0310 	orr.w	r3, r3, #16
  408bc6:	e7e7      	b.n	408b98 <_vfiprintf_r+0x3fc>
  408bc8:	9608      	str	r6, [sp, #32]
  408bca:	f043 0310 	orr.w	r3, r3, #16
  408bce:	e708      	b.n	4089e2 <_vfiprintf_r+0x246>
  408bd0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  408bd4:	f898 2000 	ldrb.w	r2, [r8]
  408bd8:	e652      	b.n	408880 <_vfiprintf_r+0xe4>
  408bda:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  408bde:	2600      	movs	r6, #0
  408be0:	f818 2b01 	ldrb.w	r2, [r8], #1
  408be4:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  408be8:	eb01 0646 	add.w	r6, r1, r6, lsl #1
  408bec:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  408bf0:	2909      	cmp	r1, #9
  408bf2:	d9f5      	bls.n	408be0 <_vfiprintf_r+0x444>
  408bf4:	e646      	b.n	408884 <_vfiprintf_r+0xe8>
  408bf6:	9608      	str	r6, [sp, #32]
  408bf8:	2800      	cmp	r0, #0
  408bfa:	f040 8408 	bne.w	40940e <_vfiprintf_r+0xc72>
  408bfe:	f043 0310 	orr.w	r3, r3, #16
  408c02:	069e      	lsls	r6, r3, #26
  408c04:	f100 834c 	bmi.w	4092a0 <_vfiprintf_r+0xb04>
  408c08:	06dd      	lsls	r5, r3, #27
  408c0a:	f100 82f3 	bmi.w	4091f4 <_vfiprintf_r+0xa58>
  408c0e:	0658      	lsls	r0, r3, #25
  408c10:	f140 82f0 	bpl.w	4091f4 <_vfiprintf_r+0xa58>
  408c14:	9d07      	ldr	r5, [sp, #28]
  408c16:	f9b5 6000 	ldrsh.w	r6, [r5]
  408c1a:	462a      	mov	r2, r5
  408c1c:	17f7      	asrs	r7, r6, #31
  408c1e:	3204      	adds	r2, #4
  408c20:	4630      	mov	r0, r6
  408c22:	4639      	mov	r1, r7
  408c24:	9207      	str	r2, [sp, #28]
  408c26:	2800      	cmp	r0, #0
  408c28:	f171 0200 	sbcs.w	r2, r1, #0
  408c2c:	f2c0 835d 	blt.w	4092ea <_vfiprintf_r+0xb4e>
  408c30:	1c61      	adds	r1, r4, #1
  408c32:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  408c36:	f04f 0201 	mov.w	r2, #1
  408c3a:	f47f aeea 	bne.w	408a12 <_vfiprintf_r+0x276>
  408c3e:	ea56 0107 	orrs.w	r1, r6, r7
  408c42:	f000 824d 	beq.w	4090e0 <_vfiprintf_r+0x944>
  408c46:	9302      	str	r3, [sp, #8]
  408c48:	2a01      	cmp	r2, #1
  408c4a:	f000 828c 	beq.w	409166 <_vfiprintf_r+0x9ca>
  408c4e:	2a02      	cmp	r2, #2
  408c50:	f040 825c 	bne.w	40910c <_vfiprintf_r+0x970>
  408c54:	980b      	ldr	r0, [sp, #44]	; 0x2c
  408c56:	46cb      	mov	fp, r9
  408c58:	0933      	lsrs	r3, r6, #4
  408c5a:	f006 010f 	and.w	r1, r6, #15
  408c5e:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
  408c62:	093a      	lsrs	r2, r7, #4
  408c64:	461e      	mov	r6, r3
  408c66:	4617      	mov	r7, r2
  408c68:	5c43      	ldrb	r3, [r0, r1]
  408c6a:	f80b 3d01 	strb.w	r3, [fp, #-1]!
  408c6e:	ea56 0307 	orrs.w	r3, r6, r7
  408c72:	d1f1      	bne.n	408c58 <_vfiprintf_r+0x4bc>
  408c74:	eba9 030b 	sub.w	r3, r9, fp
  408c78:	9305      	str	r3, [sp, #20]
  408c7a:	e6e1      	b.n	408a40 <_vfiprintf_r+0x2a4>
  408c7c:	2800      	cmp	r0, #0
  408c7e:	f040 83c0 	bne.w	409402 <_vfiprintf_r+0xc66>
  408c82:	0699      	lsls	r1, r3, #26
  408c84:	f100 8367 	bmi.w	409356 <_vfiprintf_r+0xbba>
  408c88:	06da      	lsls	r2, r3, #27
  408c8a:	f100 80f1 	bmi.w	408e70 <_vfiprintf_r+0x6d4>
  408c8e:	065b      	lsls	r3, r3, #25
  408c90:	f140 80ee 	bpl.w	408e70 <_vfiprintf_r+0x6d4>
  408c94:	9a07      	ldr	r2, [sp, #28]
  408c96:	6813      	ldr	r3, [r2, #0]
  408c98:	3204      	adds	r2, #4
  408c9a:	9207      	str	r2, [sp, #28]
  408c9c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
  408ca0:	801a      	strh	r2, [r3, #0]
  408ca2:	e5b8      	b.n	408816 <_vfiprintf_r+0x7a>
  408ca4:	9807      	ldr	r0, [sp, #28]
  408ca6:	4a3d      	ldr	r2, [pc, #244]	; (408d9c <_vfiprintf_r+0x600>)
  408ca8:	9608      	str	r6, [sp, #32]
  408caa:	920b      	str	r2, [sp, #44]	; 0x2c
  408cac:	6806      	ldr	r6, [r0, #0]
  408cae:	2278      	movs	r2, #120	; 0x78
  408cb0:	2130      	movs	r1, #48	; 0x30
  408cb2:	3004      	adds	r0, #4
  408cb4:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  408cb8:	f043 0302 	orr.w	r3, r3, #2
  408cbc:	9007      	str	r0, [sp, #28]
  408cbe:	2700      	movs	r7, #0
  408cc0:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  408cc4:	2202      	movs	r2, #2
  408cc6:	e69c      	b.n	408a02 <_vfiprintf_r+0x266>
  408cc8:	9608      	str	r6, [sp, #32]
  408cca:	2800      	cmp	r0, #0
  408ccc:	d099      	beq.n	408c02 <_vfiprintf_r+0x466>
  408cce:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  408cd2:	e796      	b.n	408c02 <_vfiprintf_r+0x466>
  408cd4:	f898 2000 	ldrb.w	r2, [r8]
  408cd8:	2d00      	cmp	r5, #0
  408cda:	f47f add1 	bne.w	408880 <_vfiprintf_r+0xe4>
  408cde:	2001      	movs	r0, #1
  408ce0:	2520      	movs	r5, #32
  408ce2:	e5cd      	b.n	408880 <_vfiprintf_r+0xe4>
  408ce4:	f043 0301 	orr.w	r3, r3, #1
  408ce8:	f898 2000 	ldrb.w	r2, [r8]
  408cec:	e5c8      	b.n	408880 <_vfiprintf_r+0xe4>
  408cee:	9608      	str	r6, [sp, #32]
  408cf0:	2800      	cmp	r0, #0
  408cf2:	f040 8393 	bne.w	40941c <_vfiprintf_r+0xc80>
  408cf6:	4929      	ldr	r1, [pc, #164]	; (408d9c <_vfiprintf_r+0x600>)
  408cf8:	910b      	str	r1, [sp, #44]	; 0x2c
  408cfa:	069f      	lsls	r7, r3, #26
  408cfc:	f100 82e8 	bmi.w	4092d0 <_vfiprintf_r+0xb34>
  408d00:	9807      	ldr	r0, [sp, #28]
  408d02:	06de      	lsls	r6, r3, #27
  408d04:	4601      	mov	r1, r0
  408d06:	f100 8270 	bmi.w	4091ea <_vfiprintf_r+0xa4e>
  408d0a:	065d      	lsls	r5, r3, #25
  408d0c:	f140 826d 	bpl.w	4091ea <_vfiprintf_r+0xa4e>
  408d10:	3104      	adds	r1, #4
  408d12:	8806      	ldrh	r6, [r0, #0]
  408d14:	9107      	str	r1, [sp, #28]
  408d16:	2700      	movs	r7, #0
  408d18:	07d8      	lsls	r0, r3, #31
  408d1a:	f140 8222 	bpl.w	409162 <_vfiprintf_r+0x9c6>
  408d1e:	ea56 0107 	orrs.w	r1, r6, r7
  408d22:	f000 821e 	beq.w	409162 <_vfiprintf_r+0x9c6>
  408d26:	2130      	movs	r1, #48	; 0x30
  408d28:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  408d2c:	f043 0302 	orr.w	r3, r3, #2
  408d30:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  408d34:	2202      	movs	r2, #2
  408d36:	e664      	b.n	408a02 <_vfiprintf_r+0x266>
  408d38:	9608      	str	r6, [sp, #32]
  408d3a:	2800      	cmp	r0, #0
  408d3c:	f040 836b 	bne.w	409416 <_vfiprintf_r+0xc7a>
  408d40:	4917      	ldr	r1, [pc, #92]	; (408da0 <_vfiprintf_r+0x604>)
  408d42:	910b      	str	r1, [sp, #44]	; 0x2c
  408d44:	e7d9      	b.n	408cfa <_vfiprintf_r+0x55e>
  408d46:	9907      	ldr	r1, [sp, #28]
  408d48:	9608      	str	r6, [sp, #32]
  408d4a:	680a      	ldr	r2, [r1, #0]
  408d4c:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  408d50:	f04f 0000 	mov.w	r0, #0
  408d54:	460a      	mov	r2, r1
  408d56:	f88d 0037 	strb.w	r0, [sp, #55]	; 0x37
  408d5a:	3204      	adds	r2, #4
  408d5c:	2001      	movs	r0, #1
  408d5e:	9001      	str	r0, [sp, #4]
  408d60:	9207      	str	r2, [sp, #28]
  408d62:	9005      	str	r0, [sp, #20]
  408d64:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
  408d68:	9302      	str	r3, [sp, #8]
  408d6a:	2400      	movs	r4, #0
  408d6c:	e670      	b.n	408a50 <_vfiprintf_r+0x2b4>
  408d6e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  408d72:	f898 2000 	ldrb.w	r2, [r8]
  408d76:	e583      	b.n	408880 <_vfiprintf_r+0xe4>
  408d78:	f898 2000 	ldrb.w	r2, [r8]
  408d7c:	2a6c      	cmp	r2, #108	; 0x6c
  408d7e:	bf03      	ittte	eq
  408d80:	f898 2001 	ldrbeq.w	r2, [r8, #1]
  408d84:	f043 0320 	orreq.w	r3, r3, #32
  408d88:	f108 0801 	addeq.w	r8, r8, #1
  408d8c:	f043 0310 	orrne.w	r3, r3, #16
  408d90:	e576      	b.n	408880 <_vfiprintf_r+0xe4>
  408d92:	bf00      	nop
  408d94:	0041feb4 	.word	0x0041feb4
  408d98:	0041fec4 	.word	0x0041fec4
  408d9c:	0041fe98 	.word	0x0041fe98
  408da0:	0041fe84 	.word	0x0041fe84
  408da4:	9907      	ldr	r1, [sp, #28]
  408da6:	680e      	ldr	r6, [r1, #0]
  408da8:	460a      	mov	r2, r1
  408daa:	2e00      	cmp	r6, #0
  408dac:	f102 0204 	add.w	r2, r2, #4
  408db0:	f6ff ae0f 	blt.w	4089d2 <_vfiprintf_r+0x236>
  408db4:	9207      	str	r2, [sp, #28]
  408db6:	f898 2000 	ldrb.w	r2, [r8]
  408dba:	e561      	b.n	408880 <_vfiprintf_r+0xe4>
  408dbc:	f898 2000 	ldrb.w	r2, [r8]
  408dc0:	2001      	movs	r0, #1
  408dc2:	252b      	movs	r5, #43	; 0x2b
  408dc4:	e55c      	b.n	408880 <_vfiprintf_r+0xe4>
  408dc6:	9907      	ldr	r1, [sp, #28]
  408dc8:	9608      	str	r6, [sp, #32]
  408dca:	f8d1 b000 	ldr.w	fp, [r1]
  408dce:	f04f 0200 	mov.w	r2, #0
  408dd2:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  408dd6:	1d0e      	adds	r6, r1, #4
  408dd8:	f1bb 0f00 	cmp.w	fp, #0
  408ddc:	f000 82e5 	beq.w	4093aa <_vfiprintf_r+0xc0e>
  408de0:	1c67      	adds	r7, r4, #1
  408de2:	f000 82c4 	beq.w	40936e <_vfiprintf_r+0xbd2>
  408de6:	4622      	mov	r2, r4
  408de8:	2100      	movs	r1, #0
  408dea:	4658      	mov	r0, fp
  408dec:	9301      	str	r3, [sp, #4]
  408dee:	f001 f91f 	bl	40a030 <memchr>
  408df2:	9b01      	ldr	r3, [sp, #4]
  408df4:	2800      	cmp	r0, #0
  408df6:	f000 82e5 	beq.w	4093c4 <_vfiprintf_r+0xc28>
  408dfa:	eba0 020b 	sub.w	r2, r0, fp
  408dfe:	9205      	str	r2, [sp, #20]
  408e00:	9607      	str	r6, [sp, #28]
  408e02:	9302      	str	r3, [sp, #8]
  408e04:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  408e08:	2400      	movs	r4, #0
  408e0a:	e619      	b.n	408a40 <_vfiprintf_r+0x2a4>
  408e0c:	f898 2000 	ldrb.w	r2, [r8]
  408e10:	2a2a      	cmp	r2, #42	; 0x2a
  408e12:	f108 0701 	add.w	r7, r8, #1
  408e16:	f000 82e9 	beq.w	4093ec <_vfiprintf_r+0xc50>
  408e1a:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  408e1e:	2909      	cmp	r1, #9
  408e20:	46b8      	mov	r8, r7
  408e22:	f04f 0400 	mov.w	r4, #0
  408e26:	f63f ad2d 	bhi.w	408884 <_vfiprintf_r+0xe8>
  408e2a:	f818 2b01 	ldrb.w	r2, [r8], #1
  408e2e:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  408e32:	eb01 0444 	add.w	r4, r1, r4, lsl #1
  408e36:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  408e3a:	2909      	cmp	r1, #9
  408e3c:	d9f5      	bls.n	408e2a <_vfiprintf_r+0x68e>
  408e3e:	e521      	b.n	408884 <_vfiprintf_r+0xe8>
  408e40:	f043 0320 	orr.w	r3, r3, #32
  408e44:	f898 2000 	ldrb.w	r2, [r8]
  408e48:	e51a      	b.n	408880 <_vfiprintf_r+0xe4>
  408e4a:	9608      	str	r6, [sp, #32]
  408e4c:	2800      	cmp	r0, #0
  408e4e:	f040 82db 	bne.w	409408 <_vfiprintf_r+0xc6c>
  408e52:	2a00      	cmp	r2, #0
  408e54:	f000 80e7 	beq.w	409026 <_vfiprintf_r+0x88a>
  408e58:	2101      	movs	r1, #1
  408e5a:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  408e5e:	f04f 0200 	mov.w	r2, #0
  408e62:	9101      	str	r1, [sp, #4]
  408e64:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  408e68:	9105      	str	r1, [sp, #20]
  408e6a:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
  408e6e:	e77b      	b.n	408d68 <_vfiprintf_r+0x5cc>
  408e70:	9a07      	ldr	r2, [sp, #28]
  408e72:	6813      	ldr	r3, [r2, #0]
  408e74:	3204      	adds	r2, #4
  408e76:	9207      	str	r2, [sp, #28]
  408e78:	9a03      	ldr	r2, [sp, #12]
  408e7a:	601a      	str	r2, [r3, #0]
  408e7c:	e4cb      	b.n	408816 <_vfiprintf_r+0x7a>
  408e7e:	aa0f      	add	r2, sp, #60	; 0x3c
  408e80:	9904      	ldr	r1, [sp, #16]
  408e82:	4620      	mov	r0, r4
  408e84:	f7ff fc4a 	bl	40871c <__sprint_r.part.0>
  408e88:	2800      	cmp	r0, #0
  408e8a:	f040 8139 	bne.w	409100 <_vfiprintf_r+0x964>
  408e8e:	9910      	ldr	r1, [sp, #64]	; 0x40
  408e90:	9a11      	ldr	r2, [sp, #68]	; 0x44
  408e92:	f101 0c01 	add.w	ip, r1, #1
  408e96:	46ce      	mov	lr, r9
  408e98:	e5ff      	b.n	408a9a <_vfiprintf_r+0x2fe>
  408e9a:	9910      	ldr	r1, [sp, #64]	; 0x40
  408e9c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  408e9e:	1c48      	adds	r0, r1, #1
  408ea0:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  408ea4:	2d00      	cmp	r5, #0
  408ea6:	f43f ae22 	beq.w	408aee <_vfiprintf_r+0x352>
  408eaa:	3201      	adds	r2, #1
  408eac:	f10d 0537 	add.w	r5, sp, #55	; 0x37
  408eb0:	2101      	movs	r1, #1
  408eb2:	2807      	cmp	r0, #7
  408eb4:	9211      	str	r2, [sp, #68]	; 0x44
  408eb6:	9010      	str	r0, [sp, #64]	; 0x40
  408eb8:	f8ca 5000 	str.w	r5, [sl]
  408ebc:	f8ca 1004 	str.w	r1, [sl, #4]
  408ec0:	f340 8108 	ble.w	4090d4 <_vfiprintf_r+0x938>
  408ec4:	2a00      	cmp	r2, #0
  408ec6:	f040 81bc 	bne.w	409242 <_vfiprintf_r+0xaa6>
  408eca:	9b09      	ldr	r3, [sp, #36]	; 0x24
  408ecc:	2b00      	cmp	r3, #0
  408ece:	f43f ae1f 	beq.w	408b10 <_vfiprintf_r+0x374>
  408ed2:	ab0e      	add	r3, sp, #56	; 0x38
  408ed4:	2202      	movs	r2, #2
  408ed6:	4608      	mov	r0, r1
  408ed8:	931c      	str	r3, [sp, #112]	; 0x70
  408eda:	921d      	str	r2, [sp, #116]	; 0x74
  408edc:	46ca      	mov	sl, r9
  408ede:	4601      	mov	r1, r0
  408ee0:	f10a 0a08 	add.w	sl, sl, #8
  408ee4:	3001      	adds	r0, #1
  408ee6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  408ee8:	2b80      	cmp	r3, #128	; 0x80
  408eea:	f43f ae19 	beq.w	408b20 <_vfiprintf_r+0x384>
  408eee:	9b05      	ldr	r3, [sp, #20]
  408ef0:	1ae4      	subs	r4, r4, r3
  408ef2:	2c00      	cmp	r4, #0
  408ef4:	dd2e      	ble.n	408f54 <_vfiprintf_r+0x7b8>
  408ef6:	2c10      	cmp	r4, #16
  408ef8:	4db3      	ldr	r5, [pc, #716]	; (4091c8 <_vfiprintf_r+0xa2c>)
  408efa:	dd1e      	ble.n	408f3a <_vfiprintf_r+0x79e>
  408efc:	46d6      	mov	lr, sl
  408efe:	2610      	movs	r6, #16
  408f00:	9f06      	ldr	r7, [sp, #24]
  408f02:	f8dd a010 	ldr.w	sl, [sp, #16]
  408f06:	e006      	b.n	408f16 <_vfiprintf_r+0x77a>
  408f08:	1c88      	adds	r0, r1, #2
  408f0a:	f10e 0e08 	add.w	lr, lr, #8
  408f0e:	4619      	mov	r1, r3
  408f10:	3c10      	subs	r4, #16
  408f12:	2c10      	cmp	r4, #16
  408f14:	dd10      	ble.n	408f38 <_vfiprintf_r+0x79c>
  408f16:	1c4b      	adds	r3, r1, #1
  408f18:	3210      	adds	r2, #16
  408f1a:	2b07      	cmp	r3, #7
  408f1c:	9211      	str	r2, [sp, #68]	; 0x44
  408f1e:	e88e 0060 	stmia.w	lr, {r5, r6}
  408f22:	9310      	str	r3, [sp, #64]	; 0x40
  408f24:	ddf0      	ble.n	408f08 <_vfiprintf_r+0x76c>
  408f26:	2a00      	cmp	r2, #0
  408f28:	d165      	bne.n	408ff6 <_vfiprintf_r+0x85a>
  408f2a:	3c10      	subs	r4, #16
  408f2c:	2c10      	cmp	r4, #16
  408f2e:	f04f 0001 	mov.w	r0, #1
  408f32:	4611      	mov	r1, r2
  408f34:	46ce      	mov	lr, r9
  408f36:	dcee      	bgt.n	408f16 <_vfiprintf_r+0x77a>
  408f38:	46f2      	mov	sl, lr
  408f3a:	4422      	add	r2, r4
  408f3c:	2807      	cmp	r0, #7
  408f3e:	9211      	str	r2, [sp, #68]	; 0x44
  408f40:	f8ca 5000 	str.w	r5, [sl]
  408f44:	f8ca 4004 	str.w	r4, [sl, #4]
  408f48:	9010      	str	r0, [sp, #64]	; 0x40
  408f4a:	f300 8085 	bgt.w	409058 <_vfiprintf_r+0x8bc>
  408f4e:	f10a 0a08 	add.w	sl, sl, #8
  408f52:	3001      	adds	r0, #1
  408f54:	9905      	ldr	r1, [sp, #20]
  408f56:	f8ca b000 	str.w	fp, [sl]
  408f5a:	440a      	add	r2, r1
  408f5c:	2807      	cmp	r0, #7
  408f5e:	9211      	str	r2, [sp, #68]	; 0x44
  408f60:	f8ca 1004 	str.w	r1, [sl, #4]
  408f64:	9010      	str	r0, [sp, #64]	; 0x40
  408f66:	f340 8082 	ble.w	40906e <_vfiprintf_r+0x8d2>
  408f6a:	2a00      	cmp	r2, #0
  408f6c:	f040 8118 	bne.w	4091a0 <_vfiprintf_r+0xa04>
  408f70:	9b02      	ldr	r3, [sp, #8]
  408f72:	9210      	str	r2, [sp, #64]	; 0x40
  408f74:	0758      	lsls	r0, r3, #29
  408f76:	d535      	bpl.n	408fe4 <_vfiprintf_r+0x848>
  408f78:	9b08      	ldr	r3, [sp, #32]
  408f7a:	9901      	ldr	r1, [sp, #4]
  408f7c:	1a5c      	subs	r4, r3, r1
  408f7e:	2c00      	cmp	r4, #0
  408f80:	f340 80e7 	ble.w	409152 <_vfiprintf_r+0x9b6>
  408f84:	46ca      	mov	sl, r9
  408f86:	2c10      	cmp	r4, #16
  408f88:	f340 8218 	ble.w	4093bc <_vfiprintf_r+0xc20>
  408f8c:	9910      	ldr	r1, [sp, #64]	; 0x40
  408f8e:	4e8f      	ldr	r6, [pc, #572]	; (4091cc <_vfiprintf_r+0xa30>)
  408f90:	9f06      	ldr	r7, [sp, #24]
  408f92:	f8dd b010 	ldr.w	fp, [sp, #16]
  408f96:	2510      	movs	r5, #16
  408f98:	e006      	b.n	408fa8 <_vfiprintf_r+0x80c>
  408f9a:	1c88      	adds	r0, r1, #2
  408f9c:	f10a 0a08 	add.w	sl, sl, #8
  408fa0:	4619      	mov	r1, r3
  408fa2:	3c10      	subs	r4, #16
  408fa4:	2c10      	cmp	r4, #16
  408fa6:	dd11      	ble.n	408fcc <_vfiprintf_r+0x830>
  408fa8:	1c4b      	adds	r3, r1, #1
  408faa:	3210      	adds	r2, #16
  408fac:	2b07      	cmp	r3, #7
  408fae:	9211      	str	r2, [sp, #68]	; 0x44
  408fb0:	f8ca 6000 	str.w	r6, [sl]
  408fb4:	f8ca 5004 	str.w	r5, [sl, #4]
  408fb8:	9310      	str	r3, [sp, #64]	; 0x40
  408fba:	ddee      	ble.n	408f9a <_vfiprintf_r+0x7fe>
  408fbc:	bb42      	cbnz	r2, 409010 <_vfiprintf_r+0x874>
  408fbe:	3c10      	subs	r4, #16
  408fc0:	2c10      	cmp	r4, #16
  408fc2:	f04f 0001 	mov.w	r0, #1
  408fc6:	4611      	mov	r1, r2
  408fc8:	46ca      	mov	sl, r9
  408fca:	dced      	bgt.n	408fa8 <_vfiprintf_r+0x80c>
  408fcc:	4422      	add	r2, r4
  408fce:	2807      	cmp	r0, #7
  408fd0:	9211      	str	r2, [sp, #68]	; 0x44
  408fd2:	f8ca 6000 	str.w	r6, [sl]
  408fd6:	f8ca 4004 	str.w	r4, [sl, #4]
  408fda:	9010      	str	r0, [sp, #64]	; 0x40
  408fdc:	dd51      	ble.n	409082 <_vfiprintf_r+0x8e6>
  408fde:	2a00      	cmp	r2, #0
  408fe0:	f040 819b 	bne.w	40931a <_vfiprintf_r+0xb7e>
  408fe4:	9b03      	ldr	r3, [sp, #12]
  408fe6:	9a08      	ldr	r2, [sp, #32]
  408fe8:	9901      	ldr	r1, [sp, #4]
  408fea:	428a      	cmp	r2, r1
  408fec:	bfac      	ite	ge
  408fee:	189b      	addge	r3, r3, r2
  408ff0:	185b      	addlt	r3, r3, r1
  408ff2:	9303      	str	r3, [sp, #12]
  408ff4:	e04e      	b.n	409094 <_vfiprintf_r+0x8f8>
  408ff6:	aa0f      	add	r2, sp, #60	; 0x3c
  408ff8:	4651      	mov	r1, sl
  408ffa:	4638      	mov	r0, r7
  408ffc:	f7ff fb8e 	bl	40871c <__sprint_r.part.0>
  409000:	2800      	cmp	r0, #0
  409002:	f040 813f 	bne.w	409284 <_vfiprintf_r+0xae8>
  409006:	9910      	ldr	r1, [sp, #64]	; 0x40
  409008:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40900a:	1c48      	adds	r0, r1, #1
  40900c:	46ce      	mov	lr, r9
  40900e:	e77f      	b.n	408f10 <_vfiprintf_r+0x774>
  409010:	aa0f      	add	r2, sp, #60	; 0x3c
  409012:	4659      	mov	r1, fp
  409014:	4638      	mov	r0, r7
  409016:	f7ff fb81 	bl	40871c <__sprint_r.part.0>
  40901a:	b960      	cbnz	r0, 409036 <_vfiprintf_r+0x89a>
  40901c:	9910      	ldr	r1, [sp, #64]	; 0x40
  40901e:	9a11      	ldr	r2, [sp, #68]	; 0x44
  409020:	1c48      	adds	r0, r1, #1
  409022:	46ca      	mov	sl, r9
  409024:	e7bd      	b.n	408fa2 <_vfiprintf_r+0x806>
  409026:	9b11      	ldr	r3, [sp, #68]	; 0x44
  409028:	f8dd b010 	ldr.w	fp, [sp, #16]
  40902c:	2b00      	cmp	r3, #0
  40902e:	f040 81d4 	bne.w	4093da <_vfiprintf_r+0xc3e>
  409032:	2300      	movs	r3, #0
  409034:	9310      	str	r3, [sp, #64]	; 0x40
  409036:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  40903a:	f013 0f01 	tst.w	r3, #1
  40903e:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  409042:	d102      	bne.n	40904a <_vfiprintf_r+0x8ae>
  409044:	059a      	lsls	r2, r3, #22
  409046:	f140 80de 	bpl.w	409206 <_vfiprintf_r+0xa6a>
  40904a:	065b      	lsls	r3, r3, #25
  40904c:	f53f acb2 	bmi.w	4089b4 <_vfiprintf_r+0x218>
  409050:	9803      	ldr	r0, [sp, #12]
  409052:	b02d      	add	sp, #180	; 0xb4
  409054:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  409058:	2a00      	cmp	r2, #0
  40905a:	f040 8106 	bne.w	40926a <_vfiprintf_r+0xace>
  40905e:	9a05      	ldr	r2, [sp, #20]
  409060:	921d      	str	r2, [sp, #116]	; 0x74
  409062:	2301      	movs	r3, #1
  409064:	9211      	str	r2, [sp, #68]	; 0x44
  409066:	f8cd b070 	str.w	fp, [sp, #112]	; 0x70
  40906a:	9310      	str	r3, [sp, #64]	; 0x40
  40906c:	46ca      	mov	sl, r9
  40906e:	f10a 0a08 	add.w	sl, sl, #8
  409072:	9b02      	ldr	r3, [sp, #8]
  409074:	0759      	lsls	r1, r3, #29
  409076:	d504      	bpl.n	409082 <_vfiprintf_r+0x8e6>
  409078:	9b08      	ldr	r3, [sp, #32]
  40907a:	9901      	ldr	r1, [sp, #4]
  40907c:	1a5c      	subs	r4, r3, r1
  40907e:	2c00      	cmp	r4, #0
  409080:	dc81      	bgt.n	408f86 <_vfiprintf_r+0x7ea>
  409082:	9b03      	ldr	r3, [sp, #12]
  409084:	9908      	ldr	r1, [sp, #32]
  409086:	9801      	ldr	r0, [sp, #4]
  409088:	4281      	cmp	r1, r0
  40908a:	bfac      	ite	ge
  40908c:	185b      	addge	r3, r3, r1
  40908e:	181b      	addlt	r3, r3, r0
  409090:	9303      	str	r3, [sp, #12]
  409092:	bb72      	cbnz	r2, 4090f2 <_vfiprintf_r+0x956>
  409094:	2300      	movs	r3, #0
  409096:	9310      	str	r3, [sp, #64]	; 0x40
  409098:	46ca      	mov	sl, r9
  40909a:	f7ff bbbc 	b.w	408816 <_vfiprintf_r+0x7a>
  40909e:	aa0f      	add	r2, sp, #60	; 0x3c
  4090a0:	9904      	ldr	r1, [sp, #16]
  4090a2:	4620      	mov	r0, r4
  4090a4:	f7ff fb3a 	bl	40871c <__sprint_r.part.0>
  4090a8:	bb50      	cbnz	r0, 409100 <_vfiprintf_r+0x964>
  4090aa:	9910      	ldr	r1, [sp, #64]	; 0x40
  4090ac:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4090ae:	f101 0e01 	add.w	lr, r1, #1
  4090b2:	46cc      	mov	ip, r9
  4090b4:	e548      	b.n	408b48 <_vfiprintf_r+0x3ac>
  4090b6:	2a00      	cmp	r2, #0
  4090b8:	f040 8140 	bne.w	40933c <_vfiprintf_r+0xba0>
  4090bc:	f89d 1037 	ldrb.w	r1, [sp, #55]	; 0x37
  4090c0:	2900      	cmp	r1, #0
  4090c2:	f000 811b 	beq.w	4092fc <_vfiprintf_r+0xb60>
  4090c6:	2201      	movs	r2, #1
  4090c8:	f10d 0137 	add.w	r1, sp, #55	; 0x37
  4090cc:	4610      	mov	r0, r2
  4090ce:	921d      	str	r2, [sp, #116]	; 0x74
  4090d0:	911c      	str	r1, [sp, #112]	; 0x70
  4090d2:	46ca      	mov	sl, r9
  4090d4:	4601      	mov	r1, r0
  4090d6:	f10a 0a08 	add.w	sl, sl, #8
  4090da:	3001      	adds	r0, #1
  4090dc:	e507      	b.n	408aee <_vfiprintf_r+0x352>
  4090de:	9b02      	ldr	r3, [sp, #8]
  4090e0:	2a01      	cmp	r2, #1
  4090e2:	f000 8098 	beq.w	409216 <_vfiprintf_r+0xa7a>
  4090e6:	2a02      	cmp	r2, #2
  4090e8:	d10d      	bne.n	409106 <_vfiprintf_r+0x96a>
  4090ea:	9302      	str	r3, [sp, #8]
  4090ec:	2600      	movs	r6, #0
  4090ee:	2700      	movs	r7, #0
  4090f0:	e5b0      	b.n	408c54 <_vfiprintf_r+0x4b8>
  4090f2:	aa0f      	add	r2, sp, #60	; 0x3c
  4090f4:	9904      	ldr	r1, [sp, #16]
  4090f6:	9806      	ldr	r0, [sp, #24]
  4090f8:	f7ff fb10 	bl	40871c <__sprint_r.part.0>
  4090fc:	2800      	cmp	r0, #0
  4090fe:	d0c9      	beq.n	409094 <_vfiprintf_r+0x8f8>
  409100:	f8dd b010 	ldr.w	fp, [sp, #16]
  409104:	e797      	b.n	409036 <_vfiprintf_r+0x89a>
  409106:	9302      	str	r3, [sp, #8]
  409108:	2600      	movs	r6, #0
  40910a:	2700      	movs	r7, #0
  40910c:	4649      	mov	r1, r9
  40910e:	e000      	b.n	409112 <_vfiprintf_r+0x976>
  409110:	4659      	mov	r1, fp
  409112:	08f2      	lsrs	r2, r6, #3
  409114:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
  409118:	08f8      	lsrs	r0, r7, #3
  40911a:	f006 0307 	and.w	r3, r6, #7
  40911e:	4607      	mov	r7, r0
  409120:	4616      	mov	r6, r2
  409122:	3330      	adds	r3, #48	; 0x30
  409124:	ea56 0207 	orrs.w	r2, r6, r7
  409128:	f801 3c01 	strb.w	r3, [r1, #-1]
  40912c:	f101 3bff 	add.w	fp, r1, #4294967295
  409130:	d1ee      	bne.n	409110 <_vfiprintf_r+0x974>
  409132:	9a02      	ldr	r2, [sp, #8]
  409134:	07d6      	lsls	r6, r2, #31
  409136:	f57f ad9d 	bpl.w	408c74 <_vfiprintf_r+0x4d8>
  40913a:	2b30      	cmp	r3, #48	; 0x30
  40913c:	f43f ad9a 	beq.w	408c74 <_vfiprintf_r+0x4d8>
  409140:	3902      	subs	r1, #2
  409142:	2330      	movs	r3, #48	; 0x30
  409144:	f80b 3c01 	strb.w	r3, [fp, #-1]
  409148:	eba9 0301 	sub.w	r3, r9, r1
  40914c:	9305      	str	r3, [sp, #20]
  40914e:	468b      	mov	fp, r1
  409150:	e476      	b.n	408a40 <_vfiprintf_r+0x2a4>
  409152:	9b03      	ldr	r3, [sp, #12]
  409154:	9a08      	ldr	r2, [sp, #32]
  409156:	428a      	cmp	r2, r1
  409158:	bfac      	ite	ge
  40915a:	189b      	addge	r3, r3, r2
  40915c:	185b      	addlt	r3, r3, r1
  40915e:	9303      	str	r3, [sp, #12]
  409160:	e798      	b.n	409094 <_vfiprintf_r+0x8f8>
  409162:	2202      	movs	r2, #2
  409164:	e44d      	b.n	408a02 <_vfiprintf_r+0x266>
  409166:	2f00      	cmp	r7, #0
  409168:	bf08      	it	eq
  40916a:	2e0a      	cmpeq	r6, #10
  40916c:	d352      	bcc.n	409214 <_vfiprintf_r+0xa78>
  40916e:	46cb      	mov	fp, r9
  409170:	4630      	mov	r0, r6
  409172:	4639      	mov	r1, r7
  409174:	220a      	movs	r2, #10
  409176:	2300      	movs	r3, #0
  409178:	f001 fbc6 	bl	40a908 <__aeabi_uldivmod>
  40917c:	3230      	adds	r2, #48	; 0x30
  40917e:	f80b 2d01 	strb.w	r2, [fp, #-1]!
  409182:	4630      	mov	r0, r6
  409184:	4639      	mov	r1, r7
  409186:	2300      	movs	r3, #0
  409188:	220a      	movs	r2, #10
  40918a:	f001 fbbd 	bl	40a908 <__aeabi_uldivmod>
  40918e:	4606      	mov	r6, r0
  409190:	460f      	mov	r7, r1
  409192:	ea56 0307 	orrs.w	r3, r6, r7
  409196:	d1eb      	bne.n	409170 <_vfiprintf_r+0x9d4>
  409198:	e56c      	b.n	408c74 <_vfiprintf_r+0x4d8>
  40919a:	9405      	str	r4, [sp, #20]
  40919c:	46cb      	mov	fp, r9
  40919e:	e44f      	b.n	408a40 <_vfiprintf_r+0x2a4>
  4091a0:	aa0f      	add	r2, sp, #60	; 0x3c
  4091a2:	9904      	ldr	r1, [sp, #16]
  4091a4:	9806      	ldr	r0, [sp, #24]
  4091a6:	f7ff fab9 	bl	40871c <__sprint_r.part.0>
  4091aa:	2800      	cmp	r0, #0
  4091ac:	d1a8      	bne.n	409100 <_vfiprintf_r+0x964>
  4091ae:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4091b0:	46ca      	mov	sl, r9
  4091b2:	e75e      	b.n	409072 <_vfiprintf_r+0x8d6>
  4091b4:	aa0f      	add	r2, sp, #60	; 0x3c
  4091b6:	9904      	ldr	r1, [sp, #16]
  4091b8:	9806      	ldr	r0, [sp, #24]
  4091ba:	f7ff faaf 	bl	40871c <__sprint_r.part.0>
  4091be:	2800      	cmp	r0, #0
  4091c0:	d19e      	bne.n	409100 <_vfiprintf_r+0x964>
  4091c2:	46ca      	mov	sl, r9
  4091c4:	f7ff bbc0 	b.w	408948 <_vfiprintf_r+0x1ac>
  4091c8:	0041fec4 	.word	0x0041fec4
  4091cc:	0041feb4 	.word	0x0041feb4
  4091d0:	3104      	adds	r1, #4
  4091d2:	6816      	ldr	r6, [r2, #0]
  4091d4:	9107      	str	r1, [sp, #28]
  4091d6:	2201      	movs	r2, #1
  4091d8:	2700      	movs	r7, #0
  4091da:	e412      	b.n	408a02 <_vfiprintf_r+0x266>
  4091dc:	9807      	ldr	r0, [sp, #28]
  4091de:	4601      	mov	r1, r0
  4091e0:	3104      	adds	r1, #4
  4091e2:	6806      	ldr	r6, [r0, #0]
  4091e4:	9107      	str	r1, [sp, #28]
  4091e6:	2700      	movs	r7, #0
  4091e8:	e40b      	b.n	408a02 <_vfiprintf_r+0x266>
  4091ea:	680e      	ldr	r6, [r1, #0]
  4091ec:	3104      	adds	r1, #4
  4091ee:	9107      	str	r1, [sp, #28]
  4091f0:	2700      	movs	r7, #0
  4091f2:	e591      	b.n	408d18 <_vfiprintf_r+0x57c>
  4091f4:	9907      	ldr	r1, [sp, #28]
  4091f6:	680e      	ldr	r6, [r1, #0]
  4091f8:	460a      	mov	r2, r1
  4091fa:	17f7      	asrs	r7, r6, #31
  4091fc:	3204      	adds	r2, #4
  4091fe:	9207      	str	r2, [sp, #28]
  409200:	4630      	mov	r0, r6
  409202:	4639      	mov	r1, r7
  409204:	e50f      	b.n	408c26 <_vfiprintf_r+0x48a>
  409206:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  40920a:	f000 fe7f 	bl	409f0c <__retarget_lock_release_recursive>
  40920e:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  409212:	e71a      	b.n	40904a <_vfiprintf_r+0x8ae>
  409214:	9b02      	ldr	r3, [sp, #8]
  409216:	9302      	str	r3, [sp, #8]
  409218:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
  40921c:	3630      	adds	r6, #48	; 0x30
  40921e:	2301      	movs	r3, #1
  409220:	f80b 6d41 	strb.w	r6, [fp, #-65]!
  409224:	9305      	str	r3, [sp, #20]
  409226:	e40b      	b.n	408a40 <_vfiprintf_r+0x2a4>
  409228:	aa0f      	add	r2, sp, #60	; 0x3c
  40922a:	9904      	ldr	r1, [sp, #16]
  40922c:	9806      	ldr	r0, [sp, #24]
  40922e:	f7ff fa75 	bl	40871c <__sprint_r.part.0>
  409232:	2800      	cmp	r0, #0
  409234:	f47f af64 	bne.w	409100 <_vfiprintf_r+0x964>
  409238:	9910      	ldr	r1, [sp, #64]	; 0x40
  40923a:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40923c:	1c48      	adds	r0, r1, #1
  40923e:	46ca      	mov	sl, r9
  409240:	e651      	b.n	408ee6 <_vfiprintf_r+0x74a>
  409242:	aa0f      	add	r2, sp, #60	; 0x3c
  409244:	9904      	ldr	r1, [sp, #16]
  409246:	9806      	ldr	r0, [sp, #24]
  409248:	f7ff fa68 	bl	40871c <__sprint_r.part.0>
  40924c:	2800      	cmp	r0, #0
  40924e:	f47f af57 	bne.w	409100 <_vfiprintf_r+0x964>
  409252:	9910      	ldr	r1, [sp, #64]	; 0x40
  409254:	9a11      	ldr	r2, [sp, #68]	; 0x44
  409256:	1c48      	adds	r0, r1, #1
  409258:	46ca      	mov	sl, r9
  40925a:	e448      	b.n	408aee <_vfiprintf_r+0x352>
  40925c:	2a00      	cmp	r2, #0
  40925e:	f040 8091 	bne.w	409384 <_vfiprintf_r+0xbe8>
  409262:	2001      	movs	r0, #1
  409264:	4611      	mov	r1, r2
  409266:	46ca      	mov	sl, r9
  409268:	e641      	b.n	408eee <_vfiprintf_r+0x752>
  40926a:	aa0f      	add	r2, sp, #60	; 0x3c
  40926c:	9904      	ldr	r1, [sp, #16]
  40926e:	9806      	ldr	r0, [sp, #24]
  409270:	f7ff fa54 	bl	40871c <__sprint_r.part.0>
  409274:	2800      	cmp	r0, #0
  409276:	f47f af43 	bne.w	409100 <_vfiprintf_r+0x964>
  40927a:	9810      	ldr	r0, [sp, #64]	; 0x40
  40927c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40927e:	3001      	adds	r0, #1
  409280:	46ca      	mov	sl, r9
  409282:	e667      	b.n	408f54 <_vfiprintf_r+0x7b8>
  409284:	46d3      	mov	fp, sl
  409286:	e6d6      	b.n	409036 <_vfiprintf_r+0x89a>
  409288:	9e07      	ldr	r6, [sp, #28]
  40928a:	3607      	adds	r6, #7
  40928c:	f026 0207 	bic.w	r2, r6, #7
  409290:	f102 0108 	add.w	r1, r2, #8
  409294:	e9d2 6700 	ldrd	r6, r7, [r2]
  409298:	9107      	str	r1, [sp, #28]
  40929a:	2201      	movs	r2, #1
  40929c:	f7ff bbb1 	b.w	408a02 <_vfiprintf_r+0x266>
  4092a0:	9e07      	ldr	r6, [sp, #28]
  4092a2:	3607      	adds	r6, #7
  4092a4:	f026 0607 	bic.w	r6, r6, #7
  4092a8:	e9d6 0100 	ldrd	r0, r1, [r6]
  4092ac:	f106 0208 	add.w	r2, r6, #8
  4092b0:	9207      	str	r2, [sp, #28]
  4092b2:	4606      	mov	r6, r0
  4092b4:	460f      	mov	r7, r1
  4092b6:	e4b6      	b.n	408c26 <_vfiprintf_r+0x48a>
  4092b8:	9e07      	ldr	r6, [sp, #28]
  4092ba:	3607      	adds	r6, #7
  4092bc:	f026 0207 	bic.w	r2, r6, #7
  4092c0:	f102 0108 	add.w	r1, r2, #8
  4092c4:	e9d2 6700 	ldrd	r6, r7, [r2]
  4092c8:	9107      	str	r1, [sp, #28]
  4092ca:	2200      	movs	r2, #0
  4092cc:	f7ff bb99 	b.w	408a02 <_vfiprintf_r+0x266>
  4092d0:	9e07      	ldr	r6, [sp, #28]
  4092d2:	3607      	adds	r6, #7
  4092d4:	f026 0107 	bic.w	r1, r6, #7
  4092d8:	f101 0008 	add.w	r0, r1, #8
  4092dc:	9007      	str	r0, [sp, #28]
  4092de:	e9d1 6700 	ldrd	r6, r7, [r1]
  4092e2:	e519      	b.n	408d18 <_vfiprintf_r+0x57c>
  4092e4:	46cb      	mov	fp, r9
  4092e6:	f7ff bbab 	b.w	408a40 <_vfiprintf_r+0x2a4>
  4092ea:	252d      	movs	r5, #45	; 0x2d
  4092ec:	4276      	negs	r6, r6
  4092ee:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
  4092f2:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  4092f6:	2201      	movs	r2, #1
  4092f8:	f7ff bb88 	b.w	408a0c <_vfiprintf_r+0x270>
  4092fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4092fe:	b9b3      	cbnz	r3, 40932e <_vfiprintf_r+0xb92>
  409300:	4611      	mov	r1, r2
  409302:	2001      	movs	r0, #1
  409304:	46ca      	mov	sl, r9
  409306:	e5f2      	b.n	408eee <_vfiprintf_r+0x752>
  409308:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  40930c:	f000 fdfe 	bl	409f0c <__retarget_lock_release_recursive>
  409310:	f04f 33ff 	mov.w	r3, #4294967295
  409314:	9303      	str	r3, [sp, #12]
  409316:	f7ff bb50 	b.w	4089ba <_vfiprintf_r+0x21e>
  40931a:	aa0f      	add	r2, sp, #60	; 0x3c
  40931c:	9904      	ldr	r1, [sp, #16]
  40931e:	9806      	ldr	r0, [sp, #24]
  409320:	f7ff f9fc 	bl	40871c <__sprint_r.part.0>
  409324:	2800      	cmp	r0, #0
  409326:	f47f aeeb 	bne.w	409100 <_vfiprintf_r+0x964>
  40932a:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40932c:	e6a9      	b.n	409082 <_vfiprintf_r+0x8e6>
  40932e:	ab0e      	add	r3, sp, #56	; 0x38
  409330:	2202      	movs	r2, #2
  409332:	931c      	str	r3, [sp, #112]	; 0x70
  409334:	921d      	str	r2, [sp, #116]	; 0x74
  409336:	2001      	movs	r0, #1
  409338:	46ca      	mov	sl, r9
  40933a:	e5d0      	b.n	408ede <_vfiprintf_r+0x742>
  40933c:	aa0f      	add	r2, sp, #60	; 0x3c
  40933e:	9904      	ldr	r1, [sp, #16]
  409340:	9806      	ldr	r0, [sp, #24]
  409342:	f7ff f9eb 	bl	40871c <__sprint_r.part.0>
  409346:	2800      	cmp	r0, #0
  409348:	f47f aeda 	bne.w	409100 <_vfiprintf_r+0x964>
  40934c:	9910      	ldr	r1, [sp, #64]	; 0x40
  40934e:	9a11      	ldr	r2, [sp, #68]	; 0x44
  409350:	1c48      	adds	r0, r1, #1
  409352:	46ca      	mov	sl, r9
  409354:	e5a4      	b.n	408ea0 <_vfiprintf_r+0x704>
  409356:	9a07      	ldr	r2, [sp, #28]
  409358:	9903      	ldr	r1, [sp, #12]
  40935a:	6813      	ldr	r3, [r2, #0]
  40935c:	17cd      	asrs	r5, r1, #31
  40935e:	4608      	mov	r0, r1
  409360:	3204      	adds	r2, #4
  409362:	4629      	mov	r1, r5
  409364:	9207      	str	r2, [sp, #28]
  409366:	e9c3 0100 	strd	r0, r1, [r3]
  40936a:	f7ff ba54 	b.w	408816 <_vfiprintf_r+0x7a>
  40936e:	4658      	mov	r0, fp
  409370:	9607      	str	r6, [sp, #28]
  409372:	9302      	str	r3, [sp, #8]
  409374:	f7ff f964 	bl	408640 <strlen>
  409378:	2400      	movs	r4, #0
  40937a:	9005      	str	r0, [sp, #20]
  40937c:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  409380:	f7ff bb5e 	b.w	408a40 <_vfiprintf_r+0x2a4>
  409384:	aa0f      	add	r2, sp, #60	; 0x3c
  409386:	9904      	ldr	r1, [sp, #16]
  409388:	9806      	ldr	r0, [sp, #24]
  40938a:	f7ff f9c7 	bl	40871c <__sprint_r.part.0>
  40938e:	2800      	cmp	r0, #0
  409390:	f47f aeb6 	bne.w	409100 <_vfiprintf_r+0x964>
  409394:	9910      	ldr	r1, [sp, #64]	; 0x40
  409396:	9a11      	ldr	r2, [sp, #68]	; 0x44
  409398:	1c48      	adds	r0, r1, #1
  40939a:	46ca      	mov	sl, r9
  40939c:	e5a7      	b.n	408eee <_vfiprintf_r+0x752>
  40939e:	9910      	ldr	r1, [sp, #64]	; 0x40
  4093a0:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4093a2:	4e20      	ldr	r6, [pc, #128]	; (409424 <_vfiprintf_r+0xc88>)
  4093a4:	3101      	adds	r1, #1
  4093a6:	f7ff bb90 	b.w	408aca <_vfiprintf_r+0x32e>
  4093aa:	2c06      	cmp	r4, #6
  4093ac:	bf28      	it	cs
  4093ae:	2406      	movcs	r4, #6
  4093b0:	9405      	str	r4, [sp, #20]
  4093b2:	9607      	str	r6, [sp, #28]
  4093b4:	9401      	str	r4, [sp, #4]
  4093b6:	f8df b070 	ldr.w	fp, [pc, #112]	; 409428 <_vfiprintf_r+0xc8c>
  4093ba:	e4d5      	b.n	408d68 <_vfiprintf_r+0x5cc>
  4093bc:	9810      	ldr	r0, [sp, #64]	; 0x40
  4093be:	4e19      	ldr	r6, [pc, #100]	; (409424 <_vfiprintf_r+0xc88>)
  4093c0:	3001      	adds	r0, #1
  4093c2:	e603      	b.n	408fcc <_vfiprintf_r+0x830>
  4093c4:	9405      	str	r4, [sp, #20]
  4093c6:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  4093ca:	9607      	str	r6, [sp, #28]
  4093cc:	9302      	str	r3, [sp, #8]
  4093ce:	4604      	mov	r4, r0
  4093d0:	f7ff bb36 	b.w	408a40 <_vfiprintf_r+0x2a4>
  4093d4:	4686      	mov	lr, r0
  4093d6:	f7ff bbce 	b.w	408b76 <_vfiprintf_r+0x3da>
  4093da:	9806      	ldr	r0, [sp, #24]
  4093dc:	aa0f      	add	r2, sp, #60	; 0x3c
  4093de:	4659      	mov	r1, fp
  4093e0:	f7ff f99c 	bl	40871c <__sprint_r.part.0>
  4093e4:	2800      	cmp	r0, #0
  4093e6:	f43f ae24 	beq.w	409032 <_vfiprintf_r+0x896>
  4093ea:	e624      	b.n	409036 <_vfiprintf_r+0x89a>
  4093ec:	9907      	ldr	r1, [sp, #28]
  4093ee:	f898 2001 	ldrb.w	r2, [r8, #1]
  4093f2:	680c      	ldr	r4, [r1, #0]
  4093f4:	3104      	adds	r1, #4
  4093f6:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
  4093fa:	46b8      	mov	r8, r7
  4093fc:	9107      	str	r1, [sp, #28]
  4093fe:	f7ff ba3f 	b.w	408880 <_vfiprintf_r+0xe4>
  409402:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  409406:	e43c      	b.n	408c82 <_vfiprintf_r+0x4e6>
  409408:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  40940c:	e521      	b.n	408e52 <_vfiprintf_r+0x6b6>
  40940e:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  409412:	f7ff bbf4 	b.w	408bfe <_vfiprintf_r+0x462>
  409416:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  40941a:	e491      	b.n	408d40 <_vfiprintf_r+0x5a4>
  40941c:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  409420:	e469      	b.n	408cf6 <_vfiprintf_r+0x55a>
  409422:	bf00      	nop
  409424:	0041feb4 	.word	0x0041feb4
  409428:	0041feac 	.word	0x0041feac

0040942c <__sbprintf>:
  40942c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  409430:	460c      	mov	r4, r1
  409432:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
  409436:	8989      	ldrh	r1, [r1, #12]
  409438:	6e66      	ldr	r6, [r4, #100]	; 0x64
  40943a:	89e5      	ldrh	r5, [r4, #14]
  40943c:	9619      	str	r6, [sp, #100]	; 0x64
  40943e:	f021 0102 	bic.w	r1, r1, #2
  409442:	4606      	mov	r6, r0
  409444:	69e0      	ldr	r0, [r4, #28]
  409446:	f8ad 100c 	strh.w	r1, [sp, #12]
  40944a:	4617      	mov	r7, r2
  40944c:	f44f 6180 	mov.w	r1, #1024	; 0x400
  409450:	6a62      	ldr	r2, [r4, #36]	; 0x24
  409452:	f8ad 500e 	strh.w	r5, [sp, #14]
  409456:	4698      	mov	r8, r3
  409458:	ad1a      	add	r5, sp, #104	; 0x68
  40945a:	2300      	movs	r3, #0
  40945c:	9007      	str	r0, [sp, #28]
  40945e:	a816      	add	r0, sp, #88	; 0x58
  409460:	9209      	str	r2, [sp, #36]	; 0x24
  409462:	9306      	str	r3, [sp, #24]
  409464:	9500      	str	r5, [sp, #0]
  409466:	9504      	str	r5, [sp, #16]
  409468:	9102      	str	r1, [sp, #8]
  40946a:	9105      	str	r1, [sp, #20]
  40946c:	f000 fd48 	bl	409f00 <__retarget_lock_init_recursive>
  409470:	4643      	mov	r3, r8
  409472:	463a      	mov	r2, r7
  409474:	4669      	mov	r1, sp
  409476:	4630      	mov	r0, r6
  409478:	f7ff f990 	bl	40879c <_vfiprintf_r>
  40947c:	1e05      	subs	r5, r0, #0
  40947e:	db07      	blt.n	409490 <__sbprintf+0x64>
  409480:	4630      	mov	r0, r6
  409482:	4669      	mov	r1, sp
  409484:	f000 f928 	bl	4096d8 <_fflush_r>
  409488:	2800      	cmp	r0, #0
  40948a:	bf18      	it	ne
  40948c:	f04f 35ff 	movne.w	r5, #4294967295
  409490:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  409494:	065b      	lsls	r3, r3, #25
  409496:	d503      	bpl.n	4094a0 <__sbprintf+0x74>
  409498:	89a3      	ldrh	r3, [r4, #12]
  40949a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40949e:	81a3      	strh	r3, [r4, #12]
  4094a0:	9816      	ldr	r0, [sp, #88]	; 0x58
  4094a2:	f000 fd2f 	bl	409f04 <__retarget_lock_close_recursive>
  4094a6:	4628      	mov	r0, r5
  4094a8:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
  4094ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

004094b0 <__swsetup_r>:
  4094b0:	b538      	push	{r3, r4, r5, lr}
  4094b2:	4b30      	ldr	r3, [pc, #192]	; (409574 <__swsetup_r+0xc4>)
  4094b4:	681b      	ldr	r3, [r3, #0]
  4094b6:	4605      	mov	r5, r0
  4094b8:	460c      	mov	r4, r1
  4094ba:	b113      	cbz	r3, 4094c2 <__swsetup_r+0x12>
  4094bc:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  4094be:	2a00      	cmp	r2, #0
  4094c0:	d038      	beq.n	409534 <__swsetup_r+0x84>
  4094c2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4094c6:	b293      	uxth	r3, r2
  4094c8:	0718      	lsls	r0, r3, #28
  4094ca:	d50c      	bpl.n	4094e6 <__swsetup_r+0x36>
  4094cc:	6920      	ldr	r0, [r4, #16]
  4094ce:	b1a8      	cbz	r0, 4094fc <__swsetup_r+0x4c>
  4094d0:	f013 0201 	ands.w	r2, r3, #1
  4094d4:	d01e      	beq.n	409514 <__swsetup_r+0x64>
  4094d6:	6963      	ldr	r3, [r4, #20]
  4094d8:	2200      	movs	r2, #0
  4094da:	425b      	negs	r3, r3
  4094dc:	61a3      	str	r3, [r4, #24]
  4094de:	60a2      	str	r2, [r4, #8]
  4094e0:	b1f0      	cbz	r0, 409520 <__swsetup_r+0x70>
  4094e2:	2000      	movs	r0, #0
  4094e4:	bd38      	pop	{r3, r4, r5, pc}
  4094e6:	06d9      	lsls	r1, r3, #27
  4094e8:	d53c      	bpl.n	409564 <__swsetup_r+0xb4>
  4094ea:	0758      	lsls	r0, r3, #29
  4094ec:	d426      	bmi.n	40953c <__swsetup_r+0x8c>
  4094ee:	6920      	ldr	r0, [r4, #16]
  4094f0:	f042 0308 	orr.w	r3, r2, #8
  4094f4:	81a3      	strh	r3, [r4, #12]
  4094f6:	b29b      	uxth	r3, r3
  4094f8:	2800      	cmp	r0, #0
  4094fa:	d1e9      	bne.n	4094d0 <__swsetup_r+0x20>
  4094fc:	f403 7220 	and.w	r2, r3, #640	; 0x280
  409500:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  409504:	d0e4      	beq.n	4094d0 <__swsetup_r+0x20>
  409506:	4628      	mov	r0, r5
  409508:	4621      	mov	r1, r4
  40950a:	f000 fd2f 	bl	409f6c <__smakebuf_r>
  40950e:	89a3      	ldrh	r3, [r4, #12]
  409510:	6920      	ldr	r0, [r4, #16]
  409512:	e7dd      	b.n	4094d0 <__swsetup_r+0x20>
  409514:	0799      	lsls	r1, r3, #30
  409516:	bf58      	it	pl
  409518:	6962      	ldrpl	r2, [r4, #20]
  40951a:	60a2      	str	r2, [r4, #8]
  40951c:	2800      	cmp	r0, #0
  40951e:	d1e0      	bne.n	4094e2 <__swsetup_r+0x32>
  409520:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  409524:	061a      	lsls	r2, r3, #24
  409526:	d5dd      	bpl.n	4094e4 <__swsetup_r+0x34>
  409528:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40952c:	81a3      	strh	r3, [r4, #12]
  40952e:	f04f 30ff 	mov.w	r0, #4294967295
  409532:	bd38      	pop	{r3, r4, r5, pc}
  409534:	4618      	mov	r0, r3
  409536:	f000 f927 	bl	409788 <__sinit>
  40953a:	e7c2      	b.n	4094c2 <__swsetup_r+0x12>
  40953c:	6b21      	ldr	r1, [r4, #48]	; 0x30
  40953e:	b151      	cbz	r1, 409556 <__swsetup_r+0xa6>
  409540:	f104 0340 	add.w	r3, r4, #64	; 0x40
  409544:	4299      	cmp	r1, r3
  409546:	d004      	beq.n	409552 <__swsetup_r+0xa2>
  409548:	4628      	mov	r0, r5
  40954a:	f000 fa43 	bl	4099d4 <_free_r>
  40954e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  409552:	2300      	movs	r3, #0
  409554:	6323      	str	r3, [r4, #48]	; 0x30
  409556:	2300      	movs	r3, #0
  409558:	6920      	ldr	r0, [r4, #16]
  40955a:	6063      	str	r3, [r4, #4]
  40955c:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  409560:	6020      	str	r0, [r4, #0]
  409562:	e7c5      	b.n	4094f0 <__swsetup_r+0x40>
  409564:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  409568:	2309      	movs	r3, #9
  40956a:	602b      	str	r3, [r5, #0]
  40956c:	f04f 30ff 	mov.w	r0, #4294967295
  409570:	81a2      	strh	r2, [r4, #12]
  409572:	bd38      	pop	{r3, r4, r5, pc}
  409574:	20400084 	.word	0x20400084

00409578 <register_fini>:
  409578:	4b02      	ldr	r3, [pc, #8]	; (409584 <register_fini+0xc>)
  40957a:	b113      	cbz	r3, 409582 <register_fini+0xa>
  40957c:	4802      	ldr	r0, [pc, #8]	; (409588 <register_fini+0x10>)
  40957e:	f000 b805 	b.w	40958c <atexit>
  409582:	4770      	bx	lr
  409584:	00000000 	.word	0x00000000
  409588:	004097f9 	.word	0x004097f9

0040958c <atexit>:
  40958c:	2300      	movs	r3, #0
  40958e:	4601      	mov	r1, r0
  409590:	461a      	mov	r2, r3
  409592:	4618      	mov	r0, r3
  409594:	f001 b890 	b.w	40a6b8 <__register_exitproc>

00409598 <__sflush_r>:
  409598:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  40959c:	b29a      	uxth	r2, r3
  40959e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4095a2:	460d      	mov	r5, r1
  4095a4:	0711      	lsls	r1, r2, #28
  4095a6:	4680      	mov	r8, r0
  4095a8:	d43a      	bmi.n	409620 <__sflush_r+0x88>
  4095aa:	686a      	ldr	r2, [r5, #4]
  4095ac:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  4095b0:	2a00      	cmp	r2, #0
  4095b2:	81ab      	strh	r3, [r5, #12]
  4095b4:	dd6f      	ble.n	409696 <__sflush_r+0xfe>
  4095b6:	6aac      	ldr	r4, [r5, #40]	; 0x28
  4095b8:	2c00      	cmp	r4, #0
  4095ba:	d049      	beq.n	409650 <__sflush_r+0xb8>
  4095bc:	2200      	movs	r2, #0
  4095be:	b29b      	uxth	r3, r3
  4095c0:	f8d8 6000 	ldr.w	r6, [r8]
  4095c4:	f8c8 2000 	str.w	r2, [r8]
  4095c8:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
  4095cc:	d067      	beq.n	40969e <__sflush_r+0x106>
  4095ce:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  4095d0:	075f      	lsls	r7, r3, #29
  4095d2:	d505      	bpl.n	4095e0 <__sflush_r+0x48>
  4095d4:	6869      	ldr	r1, [r5, #4]
  4095d6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  4095d8:	1a52      	subs	r2, r2, r1
  4095da:	b10b      	cbz	r3, 4095e0 <__sflush_r+0x48>
  4095dc:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  4095de:	1ad2      	subs	r2, r2, r3
  4095e0:	2300      	movs	r3, #0
  4095e2:	69e9      	ldr	r1, [r5, #28]
  4095e4:	4640      	mov	r0, r8
  4095e6:	47a0      	blx	r4
  4095e8:	1c44      	adds	r4, r0, #1
  4095ea:	d03c      	beq.n	409666 <__sflush_r+0xce>
  4095ec:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  4095f0:	692a      	ldr	r2, [r5, #16]
  4095f2:	602a      	str	r2, [r5, #0]
  4095f4:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  4095f8:	2200      	movs	r2, #0
  4095fa:	81ab      	strh	r3, [r5, #12]
  4095fc:	04db      	lsls	r3, r3, #19
  4095fe:	606a      	str	r2, [r5, #4]
  409600:	d447      	bmi.n	409692 <__sflush_r+0xfa>
  409602:	6b29      	ldr	r1, [r5, #48]	; 0x30
  409604:	f8c8 6000 	str.w	r6, [r8]
  409608:	b311      	cbz	r1, 409650 <__sflush_r+0xb8>
  40960a:	f105 0340 	add.w	r3, r5, #64	; 0x40
  40960e:	4299      	cmp	r1, r3
  409610:	d002      	beq.n	409618 <__sflush_r+0x80>
  409612:	4640      	mov	r0, r8
  409614:	f000 f9de 	bl	4099d4 <_free_r>
  409618:	2000      	movs	r0, #0
  40961a:	6328      	str	r0, [r5, #48]	; 0x30
  40961c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  409620:	692e      	ldr	r6, [r5, #16]
  409622:	b1ae      	cbz	r6, 409650 <__sflush_r+0xb8>
  409624:	682c      	ldr	r4, [r5, #0]
  409626:	602e      	str	r6, [r5, #0]
  409628:	0791      	lsls	r1, r2, #30
  40962a:	bf0c      	ite	eq
  40962c:	696b      	ldreq	r3, [r5, #20]
  40962e:	2300      	movne	r3, #0
  409630:	1ba4      	subs	r4, r4, r6
  409632:	60ab      	str	r3, [r5, #8]
  409634:	e00a      	b.n	40964c <__sflush_r+0xb4>
  409636:	4623      	mov	r3, r4
  409638:	4632      	mov	r2, r6
  40963a:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  40963c:	69e9      	ldr	r1, [r5, #28]
  40963e:	4640      	mov	r0, r8
  409640:	47b8      	blx	r7
  409642:	2800      	cmp	r0, #0
  409644:	eba4 0400 	sub.w	r4, r4, r0
  409648:	4406      	add	r6, r0
  40964a:	dd04      	ble.n	409656 <__sflush_r+0xbe>
  40964c:	2c00      	cmp	r4, #0
  40964e:	dcf2      	bgt.n	409636 <__sflush_r+0x9e>
  409650:	2000      	movs	r0, #0
  409652:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  409656:	89ab      	ldrh	r3, [r5, #12]
  409658:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40965c:	81ab      	strh	r3, [r5, #12]
  40965e:	f04f 30ff 	mov.w	r0, #4294967295
  409662:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  409666:	f8d8 4000 	ldr.w	r4, [r8]
  40966a:	2c1d      	cmp	r4, #29
  40966c:	d8f3      	bhi.n	409656 <__sflush_r+0xbe>
  40966e:	4b19      	ldr	r3, [pc, #100]	; (4096d4 <__sflush_r+0x13c>)
  409670:	40e3      	lsrs	r3, r4
  409672:	43db      	mvns	r3, r3
  409674:	f013 0301 	ands.w	r3, r3, #1
  409678:	d1ed      	bne.n	409656 <__sflush_r+0xbe>
  40967a:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
  40967e:	606b      	str	r3, [r5, #4]
  409680:	f422 6300 	bic.w	r3, r2, #2048	; 0x800
  409684:	6929      	ldr	r1, [r5, #16]
  409686:	81ab      	strh	r3, [r5, #12]
  409688:	04da      	lsls	r2, r3, #19
  40968a:	6029      	str	r1, [r5, #0]
  40968c:	d5b9      	bpl.n	409602 <__sflush_r+0x6a>
  40968e:	2c00      	cmp	r4, #0
  409690:	d1b7      	bne.n	409602 <__sflush_r+0x6a>
  409692:	6528      	str	r0, [r5, #80]	; 0x50
  409694:	e7b5      	b.n	409602 <__sflush_r+0x6a>
  409696:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  409698:	2a00      	cmp	r2, #0
  40969a:	dc8c      	bgt.n	4095b6 <__sflush_r+0x1e>
  40969c:	e7d8      	b.n	409650 <__sflush_r+0xb8>
  40969e:	2301      	movs	r3, #1
  4096a0:	69e9      	ldr	r1, [r5, #28]
  4096a2:	4640      	mov	r0, r8
  4096a4:	47a0      	blx	r4
  4096a6:	1c43      	adds	r3, r0, #1
  4096a8:	4602      	mov	r2, r0
  4096aa:	d002      	beq.n	4096b2 <__sflush_r+0x11a>
  4096ac:	89ab      	ldrh	r3, [r5, #12]
  4096ae:	6aac      	ldr	r4, [r5, #40]	; 0x28
  4096b0:	e78e      	b.n	4095d0 <__sflush_r+0x38>
  4096b2:	f8d8 3000 	ldr.w	r3, [r8]
  4096b6:	2b00      	cmp	r3, #0
  4096b8:	d0f8      	beq.n	4096ac <__sflush_r+0x114>
  4096ba:	2b1d      	cmp	r3, #29
  4096bc:	d001      	beq.n	4096c2 <__sflush_r+0x12a>
  4096be:	2b16      	cmp	r3, #22
  4096c0:	d102      	bne.n	4096c8 <__sflush_r+0x130>
  4096c2:	f8c8 6000 	str.w	r6, [r8]
  4096c6:	e7c3      	b.n	409650 <__sflush_r+0xb8>
  4096c8:	89ab      	ldrh	r3, [r5, #12]
  4096ca:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4096ce:	81ab      	strh	r3, [r5, #12]
  4096d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4096d4:	20400001 	.word	0x20400001

004096d8 <_fflush_r>:
  4096d8:	b538      	push	{r3, r4, r5, lr}
  4096da:	460d      	mov	r5, r1
  4096dc:	4604      	mov	r4, r0
  4096de:	b108      	cbz	r0, 4096e4 <_fflush_r+0xc>
  4096e0:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4096e2:	b1bb      	cbz	r3, 409714 <_fflush_r+0x3c>
  4096e4:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
  4096e8:	b188      	cbz	r0, 40970e <_fflush_r+0x36>
  4096ea:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  4096ec:	07db      	lsls	r3, r3, #31
  4096ee:	d401      	bmi.n	4096f4 <_fflush_r+0x1c>
  4096f0:	0581      	lsls	r1, r0, #22
  4096f2:	d517      	bpl.n	409724 <_fflush_r+0x4c>
  4096f4:	4620      	mov	r0, r4
  4096f6:	4629      	mov	r1, r5
  4096f8:	f7ff ff4e 	bl	409598 <__sflush_r>
  4096fc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  4096fe:	07da      	lsls	r2, r3, #31
  409700:	4604      	mov	r4, r0
  409702:	d402      	bmi.n	40970a <_fflush_r+0x32>
  409704:	89ab      	ldrh	r3, [r5, #12]
  409706:	059b      	lsls	r3, r3, #22
  409708:	d507      	bpl.n	40971a <_fflush_r+0x42>
  40970a:	4620      	mov	r0, r4
  40970c:	bd38      	pop	{r3, r4, r5, pc}
  40970e:	4604      	mov	r4, r0
  409710:	4620      	mov	r0, r4
  409712:	bd38      	pop	{r3, r4, r5, pc}
  409714:	f000 f838 	bl	409788 <__sinit>
  409718:	e7e4      	b.n	4096e4 <_fflush_r+0xc>
  40971a:	6da8      	ldr	r0, [r5, #88]	; 0x58
  40971c:	f000 fbf6 	bl	409f0c <__retarget_lock_release_recursive>
  409720:	4620      	mov	r0, r4
  409722:	bd38      	pop	{r3, r4, r5, pc}
  409724:	6da8      	ldr	r0, [r5, #88]	; 0x58
  409726:	f000 fbef 	bl	409f08 <__retarget_lock_acquire_recursive>
  40972a:	e7e3      	b.n	4096f4 <_fflush_r+0x1c>

0040972c <_cleanup_r>:
  40972c:	4901      	ldr	r1, [pc, #4]	; (409734 <_cleanup_r+0x8>)
  40972e:	f000 bbaf 	b.w	409e90 <_fwalk_reent>
  409732:	bf00      	nop
  409734:	0040a7a1 	.word	0x0040a7a1

00409738 <std.isra.0>:
  409738:	b510      	push	{r4, lr}
  40973a:	2300      	movs	r3, #0
  40973c:	4604      	mov	r4, r0
  40973e:	8181      	strh	r1, [r0, #12]
  409740:	81c2      	strh	r2, [r0, #14]
  409742:	6003      	str	r3, [r0, #0]
  409744:	6043      	str	r3, [r0, #4]
  409746:	6083      	str	r3, [r0, #8]
  409748:	6643      	str	r3, [r0, #100]	; 0x64
  40974a:	6103      	str	r3, [r0, #16]
  40974c:	6143      	str	r3, [r0, #20]
  40974e:	6183      	str	r3, [r0, #24]
  409750:	4619      	mov	r1, r3
  409752:	2208      	movs	r2, #8
  409754:	305c      	adds	r0, #92	; 0x5c
  409756:	f7fe fefd 	bl	408554 <memset>
  40975a:	4807      	ldr	r0, [pc, #28]	; (409778 <std.isra.0+0x40>)
  40975c:	4907      	ldr	r1, [pc, #28]	; (40977c <std.isra.0+0x44>)
  40975e:	4a08      	ldr	r2, [pc, #32]	; (409780 <std.isra.0+0x48>)
  409760:	4b08      	ldr	r3, [pc, #32]	; (409784 <std.isra.0+0x4c>)
  409762:	6220      	str	r0, [r4, #32]
  409764:	61e4      	str	r4, [r4, #28]
  409766:	6261      	str	r1, [r4, #36]	; 0x24
  409768:	62a2      	str	r2, [r4, #40]	; 0x28
  40976a:	62e3      	str	r3, [r4, #44]	; 0x2c
  40976c:	f104 0058 	add.w	r0, r4, #88	; 0x58
  409770:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  409774:	f000 bbc4 	b.w	409f00 <__retarget_lock_init_recursive>
  409778:	0040a4e5 	.word	0x0040a4e5
  40977c:	0040a509 	.word	0x0040a509
  409780:	0040a545 	.word	0x0040a545
  409784:	0040a565 	.word	0x0040a565

00409788 <__sinit>:
  409788:	b510      	push	{r4, lr}
  40978a:	4604      	mov	r4, r0
  40978c:	4812      	ldr	r0, [pc, #72]	; (4097d8 <__sinit+0x50>)
  40978e:	f000 fbbb 	bl	409f08 <__retarget_lock_acquire_recursive>
  409792:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  409794:	b9d2      	cbnz	r2, 4097cc <__sinit+0x44>
  409796:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
  40979a:	4810      	ldr	r0, [pc, #64]	; (4097dc <__sinit+0x54>)
  40979c:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
  4097a0:	2103      	movs	r1, #3
  4097a2:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
  4097a6:	63e0      	str	r0, [r4, #60]	; 0x3c
  4097a8:	f8c4 12e4 	str.w	r1, [r4, #740]	; 0x2e4
  4097ac:	6860      	ldr	r0, [r4, #4]
  4097ae:	2104      	movs	r1, #4
  4097b0:	f7ff ffc2 	bl	409738 <std.isra.0>
  4097b4:	2201      	movs	r2, #1
  4097b6:	2109      	movs	r1, #9
  4097b8:	68a0      	ldr	r0, [r4, #8]
  4097ba:	f7ff ffbd 	bl	409738 <std.isra.0>
  4097be:	2202      	movs	r2, #2
  4097c0:	2112      	movs	r1, #18
  4097c2:	68e0      	ldr	r0, [r4, #12]
  4097c4:	f7ff ffb8 	bl	409738 <std.isra.0>
  4097c8:	2301      	movs	r3, #1
  4097ca:	63a3      	str	r3, [r4, #56]	; 0x38
  4097cc:	4802      	ldr	r0, [pc, #8]	; (4097d8 <__sinit+0x50>)
  4097ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  4097d2:	f000 bb9b 	b.w	409f0c <__retarget_lock_release_recursive>
  4097d6:	bf00      	nop
  4097d8:	2041b870 	.word	0x2041b870
  4097dc:	0040972d 	.word	0x0040972d

004097e0 <__sfp_lock_acquire>:
  4097e0:	4801      	ldr	r0, [pc, #4]	; (4097e8 <__sfp_lock_acquire+0x8>)
  4097e2:	f000 bb91 	b.w	409f08 <__retarget_lock_acquire_recursive>
  4097e6:	bf00      	nop
  4097e8:	2041b884 	.word	0x2041b884

004097ec <__sfp_lock_release>:
  4097ec:	4801      	ldr	r0, [pc, #4]	; (4097f4 <__sfp_lock_release+0x8>)
  4097ee:	f000 bb8d 	b.w	409f0c <__retarget_lock_release_recursive>
  4097f2:	bf00      	nop
  4097f4:	2041b884 	.word	0x2041b884

004097f8 <__libc_fini_array>:
  4097f8:	b538      	push	{r3, r4, r5, lr}
  4097fa:	4c0a      	ldr	r4, [pc, #40]	; (409824 <__libc_fini_array+0x2c>)
  4097fc:	4d0a      	ldr	r5, [pc, #40]	; (409828 <__libc_fini_array+0x30>)
  4097fe:	1b64      	subs	r4, r4, r5
  409800:	10a4      	asrs	r4, r4, #2
  409802:	d00a      	beq.n	40981a <__libc_fini_array+0x22>
  409804:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  409808:	3b01      	subs	r3, #1
  40980a:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  40980e:	3c01      	subs	r4, #1
  409810:	f855 3904 	ldr.w	r3, [r5], #-4
  409814:	4798      	blx	r3
  409816:	2c00      	cmp	r4, #0
  409818:	d1f9      	bne.n	40980e <__libc_fini_array+0x16>
  40981a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  40981e:	f016 bbed 	b.w	41fffc <_fini>
  409822:	bf00      	nop
  409824:	0042000c 	.word	0x0042000c
  409828:	00420008 	.word	0x00420008

0040982c <__fputwc>:
  40982c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  409830:	b082      	sub	sp, #8
  409832:	4680      	mov	r8, r0
  409834:	4689      	mov	r9, r1
  409836:	4614      	mov	r4, r2
  409838:	f000 fb54 	bl	409ee4 <__locale_mb_cur_max>
  40983c:	2801      	cmp	r0, #1
  40983e:	d036      	beq.n	4098ae <__fputwc+0x82>
  409840:	464a      	mov	r2, r9
  409842:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  409846:	a901      	add	r1, sp, #4
  409848:	4640      	mov	r0, r8
  40984a:	f000 fee7 	bl	40a61c <_wcrtomb_r>
  40984e:	1c42      	adds	r2, r0, #1
  409850:	4606      	mov	r6, r0
  409852:	d025      	beq.n	4098a0 <__fputwc+0x74>
  409854:	b3a8      	cbz	r0, 4098c2 <__fputwc+0x96>
  409856:	f89d e004 	ldrb.w	lr, [sp, #4]
  40985a:	2500      	movs	r5, #0
  40985c:	f10d 0a04 	add.w	sl, sp, #4
  409860:	e009      	b.n	409876 <__fputwc+0x4a>
  409862:	6823      	ldr	r3, [r4, #0]
  409864:	1c5a      	adds	r2, r3, #1
  409866:	6022      	str	r2, [r4, #0]
  409868:	f883 e000 	strb.w	lr, [r3]
  40986c:	3501      	adds	r5, #1
  40986e:	42b5      	cmp	r5, r6
  409870:	d227      	bcs.n	4098c2 <__fputwc+0x96>
  409872:	f815 e00a 	ldrb.w	lr, [r5, sl]
  409876:	68a3      	ldr	r3, [r4, #8]
  409878:	3b01      	subs	r3, #1
  40987a:	2b00      	cmp	r3, #0
  40987c:	60a3      	str	r3, [r4, #8]
  40987e:	daf0      	bge.n	409862 <__fputwc+0x36>
  409880:	69a7      	ldr	r7, [r4, #24]
  409882:	42bb      	cmp	r3, r7
  409884:	4671      	mov	r1, lr
  409886:	4622      	mov	r2, r4
  409888:	4640      	mov	r0, r8
  40988a:	db02      	blt.n	409892 <__fputwc+0x66>
  40988c:	f1be 0f0a 	cmp.w	lr, #10
  409890:	d1e7      	bne.n	409862 <__fputwc+0x36>
  409892:	f000 fe6b 	bl	40a56c <__swbuf_r>
  409896:	1c43      	adds	r3, r0, #1
  409898:	d1e8      	bne.n	40986c <__fputwc+0x40>
  40989a:	b002      	add	sp, #8
  40989c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4098a0:	89a3      	ldrh	r3, [r4, #12]
  4098a2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4098a6:	81a3      	strh	r3, [r4, #12]
  4098a8:	b002      	add	sp, #8
  4098aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4098ae:	f109 33ff 	add.w	r3, r9, #4294967295
  4098b2:	2bfe      	cmp	r3, #254	; 0xfe
  4098b4:	d8c4      	bhi.n	409840 <__fputwc+0x14>
  4098b6:	fa5f fe89 	uxtb.w	lr, r9
  4098ba:	4606      	mov	r6, r0
  4098bc:	f88d e004 	strb.w	lr, [sp, #4]
  4098c0:	e7cb      	b.n	40985a <__fputwc+0x2e>
  4098c2:	4648      	mov	r0, r9
  4098c4:	b002      	add	sp, #8
  4098c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4098ca:	bf00      	nop

004098cc <_fputwc_r>:
  4098cc:	b530      	push	{r4, r5, lr}
  4098ce:	6e53      	ldr	r3, [r2, #100]	; 0x64
  4098d0:	f013 0f01 	tst.w	r3, #1
  4098d4:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
  4098d8:	4614      	mov	r4, r2
  4098da:	b083      	sub	sp, #12
  4098dc:	4605      	mov	r5, r0
  4098de:	b29a      	uxth	r2, r3
  4098e0:	d101      	bne.n	4098e6 <_fputwc_r+0x1a>
  4098e2:	0590      	lsls	r0, r2, #22
  4098e4:	d51c      	bpl.n	409920 <_fputwc_r+0x54>
  4098e6:	0490      	lsls	r0, r2, #18
  4098e8:	d406      	bmi.n	4098f8 <_fputwc_r+0x2c>
  4098ea:	6e62      	ldr	r2, [r4, #100]	; 0x64
  4098ec:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  4098f0:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  4098f4:	81a3      	strh	r3, [r4, #12]
  4098f6:	6662      	str	r2, [r4, #100]	; 0x64
  4098f8:	4628      	mov	r0, r5
  4098fa:	4622      	mov	r2, r4
  4098fc:	f7ff ff96 	bl	40982c <__fputwc>
  409900:	6e63      	ldr	r3, [r4, #100]	; 0x64
  409902:	07da      	lsls	r2, r3, #31
  409904:	4605      	mov	r5, r0
  409906:	d402      	bmi.n	40990e <_fputwc_r+0x42>
  409908:	89a3      	ldrh	r3, [r4, #12]
  40990a:	059b      	lsls	r3, r3, #22
  40990c:	d502      	bpl.n	409914 <_fputwc_r+0x48>
  40990e:	4628      	mov	r0, r5
  409910:	b003      	add	sp, #12
  409912:	bd30      	pop	{r4, r5, pc}
  409914:	6da0      	ldr	r0, [r4, #88]	; 0x58
  409916:	f000 faf9 	bl	409f0c <__retarget_lock_release_recursive>
  40991a:	4628      	mov	r0, r5
  40991c:	b003      	add	sp, #12
  40991e:	bd30      	pop	{r4, r5, pc}
  409920:	6da0      	ldr	r0, [r4, #88]	; 0x58
  409922:	9101      	str	r1, [sp, #4]
  409924:	f000 faf0 	bl	409f08 <__retarget_lock_acquire_recursive>
  409928:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40992c:	9901      	ldr	r1, [sp, #4]
  40992e:	b29a      	uxth	r2, r3
  409930:	e7d9      	b.n	4098e6 <_fputwc_r+0x1a>
  409932:	bf00      	nop

00409934 <_malloc_trim_r>:
  409934:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  409936:	4f24      	ldr	r7, [pc, #144]	; (4099c8 <_malloc_trim_r+0x94>)
  409938:	460c      	mov	r4, r1
  40993a:	4606      	mov	r6, r0
  40993c:	f7fe fe58 	bl	4085f0 <__malloc_lock>
  409940:	68bb      	ldr	r3, [r7, #8]
  409942:	685d      	ldr	r5, [r3, #4]
  409944:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  409948:	310f      	adds	r1, #15
  40994a:	f025 0503 	bic.w	r5, r5, #3
  40994e:	4429      	add	r1, r5
  409950:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  409954:	f021 010f 	bic.w	r1, r1, #15
  409958:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  40995c:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  409960:	db07      	blt.n	409972 <_malloc_trim_r+0x3e>
  409962:	2100      	movs	r1, #0
  409964:	4630      	mov	r0, r6
  409966:	f7fe fe4f 	bl	408608 <_sbrk_r>
  40996a:	68bb      	ldr	r3, [r7, #8]
  40996c:	442b      	add	r3, r5
  40996e:	4298      	cmp	r0, r3
  409970:	d004      	beq.n	40997c <_malloc_trim_r+0x48>
  409972:	4630      	mov	r0, r6
  409974:	f7fe fe42 	bl	4085fc <__malloc_unlock>
  409978:	2000      	movs	r0, #0
  40997a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40997c:	4261      	negs	r1, r4
  40997e:	4630      	mov	r0, r6
  409980:	f7fe fe42 	bl	408608 <_sbrk_r>
  409984:	3001      	adds	r0, #1
  409986:	d00d      	beq.n	4099a4 <_malloc_trim_r+0x70>
  409988:	4b10      	ldr	r3, [pc, #64]	; (4099cc <_malloc_trim_r+0x98>)
  40998a:	68ba      	ldr	r2, [r7, #8]
  40998c:	6819      	ldr	r1, [r3, #0]
  40998e:	1b2d      	subs	r5, r5, r4
  409990:	f045 0501 	orr.w	r5, r5, #1
  409994:	4630      	mov	r0, r6
  409996:	1b09      	subs	r1, r1, r4
  409998:	6055      	str	r5, [r2, #4]
  40999a:	6019      	str	r1, [r3, #0]
  40999c:	f7fe fe2e 	bl	4085fc <__malloc_unlock>
  4099a0:	2001      	movs	r0, #1
  4099a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4099a4:	2100      	movs	r1, #0
  4099a6:	4630      	mov	r0, r6
  4099a8:	f7fe fe2e 	bl	408608 <_sbrk_r>
  4099ac:	68ba      	ldr	r2, [r7, #8]
  4099ae:	1a83      	subs	r3, r0, r2
  4099b0:	2b0f      	cmp	r3, #15
  4099b2:	ddde      	ble.n	409972 <_malloc_trim_r+0x3e>
  4099b4:	4c06      	ldr	r4, [pc, #24]	; (4099d0 <_malloc_trim_r+0x9c>)
  4099b6:	4905      	ldr	r1, [pc, #20]	; (4099cc <_malloc_trim_r+0x98>)
  4099b8:	6824      	ldr	r4, [r4, #0]
  4099ba:	f043 0301 	orr.w	r3, r3, #1
  4099be:	1b00      	subs	r0, r0, r4
  4099c0:	6053      	str	r3, [r2, #4]
  4099c2:	6008      	str	r0, [r1, #0]
  4099c4:	e7d5      	b.n	409972 <_malloc_trim_r+0x3e>
  4099c6:	bf00      	nop
  4099c8:	204004b0 	.word	0x204004b0
  4099cc:	20416800 	.word	0x20416800
  4099d0:	204008b8 	.word	0x204008b8

004099d4 <_free_r>:
  4099d4:	2900      	cmp	r1, #0
  4099d6:	d044      	beq.n	409a62 <_free_r+0x8e>
  4099d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4099dc:	460d      	mov	r5, r1
  4099de:	4680      	mov	r8, r0
  4099e0:	f7fe fe06 	bl	4085f0 <__malloc_lock>
  4099e4:	f855 7c04 	ldr.w	r7, [r5, #-4]
  4099e8:	4969      	ldr	r1, [pc, #420]	; (409b90 <_free_r+0x1bc>)
  4099ea:	f027 0301 	bic.w	r3, r7, #1
  4099ee:	f1a5 0408 	sub.w	r4, r5, #8
  4099f2:	18e2      	adds	r2, r4, r3
  4099f4:	688e      	ldr	r6, [r1, #8]
  4099f6:	6850      	ldr	r0, [r2, #4]
  4099f8:	42b2      	cmp	r2, r6
  4099fa:	f020 0003 	bic.w	r0, r0, #3
  4099fe:	d05e      	beq.n	409abe <_free_r+0xea>
  409a00:	07fe      	lsls	r6, r7, #31
  409a02:	6050      	str	r0, [r2, #4]
  409a04:	d40b      	bmi.n	409a1e <_free_r+0x4a>
  409a06:	f855 7c08 	ldr.w	r7, [r5, #-8]
  409a0a:	1be4      	subs	r4, r4, r7
  409a0c:	f101 0e08 	add.w	lr, r1, #8
  409a10:	68a5      	ldr	r5, [r4, #8]
  409a12:	4575      	cmp	r5, lr
  409a14:	443b      	add	r3, r7
  409a16:	d06d      	beq.n	409af4 <_free_r+0x120>
  409a18:	68e7      	ldr	r7, [r4, #12]
  409a1a:	60ef      	str	r7, [r5, #12]
  409a1c:	60bd      	str	r5, [r7, #8]
  409a1e:	1815      	adds	r5, r2, r0
  409a20:	686d      	ldr	r5, [r5, #4]
  409a22:	07ed      	lsls	r5, r5, #31
  409a24:	d53e      	bpl.n	409aa4 <_free_r+0xd0>
  409a26:	f043 0201 	orr.w	r2, r3, #1
  409a2a:	6062      	str	r2, [r4, #4]
  409a2c:	50e3      	str	r3, [r4, r3]
  409a2e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  409a32:	d217      	bcs.n	409a64 <_free_r+0x90>
  409a34:	08db      	lsrs	r3, r3, #3
  409a36:	1c58      	adds	r0, r3, #1
  409a38:	109a      	asrs	r2, r3, #2
  409a3a:	684d      	ldr	r5, [r1, #4]
  409a3c:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  409a40:	60a7      	str	r7, [r4, #8]
  409a42:	2301      	movs	r3, #1
  409a44:	4093      	lsls	r3, r2
  409a46:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  409a4a:	432b      	orrs	r3, r5
  409a4c:	3a08      	subs	r2, #8
  409a4e:	60e2      	str	r2, [r4, #12]
  409a50:	604b      	str	r3, [r1, #4]
  409a52:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  409a56:	60fc      	str	r4, [r7, #12]
  409a58:	4640      	mov	r0, r8
  409a5a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  409a5e:	f7fe bdcd 	b.w	4085fc <__malloc_unlock>
  409a62:	4770      	bx	lr
  409a64:	0a5a      	lsrs	r2, r3, #9
  409a66:	2a04      	cmp	r2, #4
  409a68:	d852      	bhi.n	409b10 <_free_r+0x13c>
  409a6a:	099a      	lsrs	r2, r3, #6
  409a6c:	f102 0739 	add.w	r7, r2, #57	; 0x39
  409a70:	00ff      	lsls	r7, r7, #3
  409a72:	f102 0538 	add.w	r5, r2, #56	; 0x38
  409a76:	19c8      	adds	r0, r1, r7
  409a78:	59ca      	ldr	r2, [r1, r7]
  409a7a:	3808      	subs	r0, #8
  409a7c:	4290      	cmp	r0, r2
  409a7e:	d04f      	beq.n	409b20 <_free_r+0x14c>
  409a80:	6851      	ldr	r1, [r2, #4]
  409a82:	f021 0103 	bic.w	r1, r1, #3
  409a86:	428b      	cmp	r3, r1
  409a88:	d232      	bcs.n	409af0 <_free_r+0x11c>
  409a8a:	6892      	ldr	r2, [r2, #8]
  409a8c:	4290      	cmp	r0, r2
  409a8e:	d1f7      	bne.n	409a80 <_free_r+0xac>
  409a90:	68c3      	ldr	r3, [r0, #12]
  409a92:	60a0      	str	r0, [r4, #8]
  409a94:	60e3      	str	r3, [r4, #12]
  409a96:	609c      	str	r4, [r3, #8]
  409a98:	60c4      	str	r4, [r0, #12]
  409a9a:	4640      	mov	r0, r8
  409a9c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  409aa0:	f7fe bdac 	b.w	4085fc <__malloc_unlock>
  409aa4:	6895      	ldr	r5, [r2, #8]
  409aa6:	4f3b      	ldr	r7, [pc, #236]	; (409b94 <_free_r+0x1c0>)
  409aa8:	42bd      	cmp	r5, r7
  409aaa:	4403      	add	r3, r0
  409aac:	d040      	beq.n	409b30 <_free_r+0x15c>
  409aae:	68d0      	ldr	r0, [r2, #12]
  409ab0:	60e8      	str	r0, [r5, #12]
  409ab2:	f043 0201 	orr.w	r2, r3, #1
  409ab6:	6085      	str	r5, [r0, #8]
  409ab8:	6062      	str	r2, [r4, #4]
  409aba:	50e3      	str	r3, [r4, r3]
  409abc:	e7b7      	b.n	409a2e <_free_r+0x5a>
  409abe:	07ff      	lsls	r7, r7, #31
  409ac0:	4403      	add	r3, r0
  409ac2:	d407      	bmi.n	409ad4 <_free_r+0x100>
  409ac4:	f855 2c08 	ldr.w	r2, [r5, #-8]
  409ac8:	1aa4      	subs	r4, r4, r2
  409aca:	4413      	add	r3, r2
  409acc:	68a0      	ldr	r0, [r4, #8]
  409ace:	68e2      	ldr	r2, [r4, #12]
  409ad0:	60c2      	str	r2, [r0, #12]
  409ad2:	6090      	str	r0, [r2, #8]
  409ad4:	4a30      	ldr	r2, [pc, #192]	; (409b98 <_free_r+0x1c4>)
  409ad6:	6812      	ldr	r2, [r2, #0]
  409ad8:	f043 0001 	orr.w	r0, r3, #1
  409adc:	4293      	cmp	r3, r2
  409ade:	6060      	str	r0, [r4, #4]
  409ae0:	608c      	str	r4, [r1, #8]
  409ae2:	d3b9      	bcc.n	409a58 <_free_r+0x84>
  409ae4:	4b2d      	ldr	r3, [pc, #180]	; (409b9c <_free_r+0x1c8>)
  409ae6:	4640      	mov	r0, r8
  409ae8:	6819      	ldr	r1, [r3, #0]
  409aea:	f7ff ff23 	bl	409934 <_malloc_trim_r>
  409aee:	e7b3      	b.n	409a58 <_free_r+0x84>
  409af0:	4610      	mov	r0, r2
  409af2:	e7cd      	b.n	409a90 <_free_r+0xbc>
  409af4:	1811      	adds	r1, r2, r0
  409af6:	6849      	ldr	r1, [r1, #4]
  409af8:	07c9      	lsls	r1, r1, #31
  409afa:	d444      	bmi.n	409b86 <_free_r+0x1b2>
  409afc:	6891      	ldr	r1, [r2, #8]
  409afe:	68d2      	ldr	r2, [r2, #12]
  409b00:	60ca      	str	r2, [r1, #12]
  409b02:	4403      	add	r3, r0
  409b04:	f043 0001 	orr.w	r0, r3, #1
  409b08:	6091      	str	r1, [r2, #8]
  409b0a:	6060      	str	r0, [r4, #4]
  409b0c:	50e3      	str	r3, [r4, r3]
  409b0e:	e7a3      	b.n	409a58 <_free_r+0x84>
  409b10:	2a14      	cmp	r2, #20
  409b12:	d816      	bhi.n	409b42 <_free_r+0x16e>
  409b14:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  409b18:	00ff      	lsls	r7, r7, #3
  409b1a:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  409b1e:	e7aa      	b.n	409a76 <_free_r+0xa2>
  409b20:	10aa      	asrs	r2, r5, #2
  409b22:	2301      	movs	r3, #1
  409b24:	684d      	ldr	r5, [r1, #4]
  409b26:	4093      	lsls	r3, r2
  409b28:	432b      	orrs	r3, r5
  409b2a:	604b      	str	r3, [r1, #4]
  409b2c:	4603      	mov	r3, r0
  409b2e:	e7b0      	b.n	409a92 <_free_r+0xbe>
  409b30:	f043 0201 	orr.w	r2, r3, #1
  409b34:	614c      	str	r4, [r1, #20]
  409b36:	610c      	str	r4, [r1, #16]
  409b38:	60e5      	str	r5, [r4, #12]
  409b3a:	60a5      	str	r5, [r4, #8]
  409b3c:	6062      	str	r2, [r4, #4]
  409b3e:	50e3      	str	r3, [r4, r3]
  409b40:	e78a      	b.n	409a58 <_free_r+0x84>
  409b42:	2a54      	cmp	r2, #84	; 0x54
  409b44:	d806      	bhi.n	409b54 <_free_r+0x180>
  409b46:	0b1a      	lsrs	r2, r3, #12
  409b48:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  409b4c:	00ff      	lsls	r7, r7, #3
  409b4e:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  409b52:	e790      	b.n	409a76 <_free_r+0xa2>
  409b54:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  409b58:	d806      	bhi.n	409b68 <_free_r+0x194>
  409b5a:	0bda      	lsrs	r2, r3, #15
  409b5c:	f102 0778 	add.w	r7, r2, #120	; 0x78
  409b60:	00ff      	lsls	r7, r7, #3
  409b62:	f102 0577 	add.w	r5, r2, #119	; 0x77
  409b66:	e786      	b.n	409a76 <_free_r+0xa2>
  409b68:	f240 5054 	movw	r0, #1364	; 0x554
  409b6c:	4282      	cmp	r2, r0
  409b6e:	d806      	bhi.n	409b7e <_free_r+0x1aa>
  409b70:	0c9a      	lsrs	r2, r3, #18
  409b72:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  409b76:	00ff      	lsls	r7, r7, #3
  409b78:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  409b7c:	e77b      	b.n	409a76 <_free_r+0xa2>
  409b7e:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  409b82:	257e      	movs	r5, #126	; 0x7e
  409b84:	e777      	b.n	409a76 <_free_r+0xa2>
  409b86:	f043 0101 	orr.w	r1, r3, #1
  409b8a:	6061      	str	r1, [r4, #4]
  409b8c:	6013      	str	r3, [r2, #0]
  409b8e:	e763      	b.n	409a58 <_free_r+0x84>
  409b90:	204004b0 	.word	0x204004b0
  409b94:	204004b8 	.word	0x204004b8
  409b98:	204008bc 	.word	0x204008bc
  409b9c:	20416830 	.word	0x20416830

00409ba0 <__sfvwrite_r>:
  409ba0:	6893      	ldr	r3, [r2, #8]
  409ba2:	2b00      	cmp	r3, #0
  409ba4:	d073      	beq.n	409c8e <__sfvwrite_r+0xee>
  409ba6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  409baa:	898b      	ldrh	r3, [r1, #12]
  409bac:	b083      	sub	sp, #12
  409bae:	460c      	mov	r4, r1
  409bb0:	0719      	lsls	r1, r3, #28
  409bb2:	9000      	str	r0, [sp, #0]
  409bb4:	4616      	mov	r6, r2
  409bb6:	d526      	bpl.n	409c06 <__sfvwrite_r+0x66>
  409bb8:	6922      	ldr	r2, [r4, #16]
  409bba:	b322      	cbz	r2, 409c06 <__sfvwrite_r+0x66>
  409bbc:	f013 0002 	ands.w	r0, r3, #2
  409bc0:	6835      	ldr	r5, [r6, #0]
  409bc2:	d02c      	beq.n	409c1e <__sfvwrite_r+0x7e>
  409bc4:	f04f 0900 	mov.w	r9, #0
  409bc8:	4fb0      	ldr	r7, [pc, #704]	; (409e8c <__sfvwrite_r+0x2ec>)
  409bca:	46c8      	mov	r8, r9
  409bcc:	46b2      	mov	sl, r6
  409bce:	45b8      	cmp	r8, r7
  409bd0:	4643      	mov	r3, r8
  409bd2:	464a      	mov	r2, r9
  409bd4:	bf28      	it	cs
  409bd6:	463b      	movcs	r3, r7
  409bd8:	9800      	ldr	r0, [sp, #0]
  409bda:	f1b8 0f00 	cmp.w	r8, #0
  409bde:	d050      	beq.n	409c82 <__sfvwrite_r+0xe2>
  409be0:	69e1      	ldr	r1, [r4, #28]
  409be2:	6a66      	ldr	r6, [r4, #36]	; 0x24
  409be4:	47b0      	blx	r6
  409be6:	2800      	cmp	r0, #0
  409be8:	dd58      	ble.n	409c9c <__sfvwrite_r+0xfc>
  409bea:	f8da 3008 	ldr.w	r3, [sl, #8]
  409bee:	1a1b      	subs	r3, r3, r0
  409bf0:	4481      	add	r9, r0
  409bf2:	eba8 0800 	sub.w	r8, r8, r0
  409bf6:	f8ca 3008 	str.w	r3, [sl, #8]
  409bfa:	2b00      	cmp	r3, #0
  409bfc:	d1e7      	bne.n	409bce <__sfvwrite_r+0x2e>
  409bfe:	2000      	movs	r0, #0
  409c00:	b003      	add	sp, #12
  409c02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  409c06:	4621      	mov	r1, r4
  409c08:	9800      	ldr	r0, [sp, #0]
  409c0a:	f7ff fc51 	bl	4094b0 <__swsetup_r>
  409c0e:	2800      	cmp	r0, #0
  409c10:	f040 8133 	bne.w	409e7a <__sfvwrite_r+0x2da>
  409c14:	89a3      	ldrh	r3, [r4, #12]
  409c16:	6835      	ldr	r5, [r6, #0]
  409c18:	f013 0002 	ands.w	r0, r3, #2
  409c1c:	d1d2      	bne.n	409bc4 <__sfvwrite_r+0x24>
  409c1e:	f013 0901 	ands.w	r9, r3, #1
  409c22:	d145      	bne.n	409cb0 <__sfvwrite_r+0x110>
  409c24:	464f      	mov	r7, r9
  409c26:	9601      	str	r6, [sp, #4]
  409c28:	b337      	cbz	r7, 409c78 <__sfvwrite_r+0xd8>
  409c2a:	059a      	lsls	r2, r3, #22
  409c2c:	f8d4 8008 	ldr.w	r8, [r4, #8]
  409c30:	f140 8083 	bpl.w	409d3a <__sfvwrite_r+0x19a>
  409c34:	4547      	cmp	r7, r8
  409c36:	46c3      	mov	fp, r8
  409c38:	f0c0 80ab 	bcc.w	409d92 <__sfvwrite_r+0x1f2>
  409c3c:	f413 6f90 	tst.w	r3, #1152	; 0x480
  409c40:	f040 80ac 	bne.w	409d9c <__sfvwrite_r+0x1fc>
  409c44:	6820      	ldr	r0, [r4, #0]
  409c46:	46ba      	mov	sl, r7
  409c48:	465a      	mov	r2, fp
  409c4a:	4649      	mov	r1, r9
  409c4c:	f000 fa40 	bl	40a0d0 <memmove>
  409c50:	68a2      	ldr	r2, [r4, #8]
  409c52:	6823      	ldr	r3, [r4, #0]
  409c54:	eba2 0208 	sub.w	r2, r2, r8
  409c58:	445b      	add	r3, fp
  409c5a:	60a2      	str	r2, [r4, #8]
  409c5c:	6023      	str	r3, [r4, #0]
  409c5e:	9a01      	ldr	r2, [sp, #4]
  409c60:	6893      	ldr	r3, [r2, #8]
  409c62:	eba3 030a 	sub.w	r3, r3, sl
  409c66:	44d1      	add	r9, sl
  409c68:	eba7 070a 	sub.w	r7, r7, sl
  409c6c:	6093      	str	r3, [r2, #8]
  409c6e:	2b00      	cmp	r3, #0
  409c70:	d0c5      	beq.n	409bfe <__sfvwrite_r+0x5e>
  409c72:	89a3      	ldrh	r3, [r4, #12]
  409c74:	2f00      	cmp	r7, #0
  409c76:	d1d8      	bne.n	409c2a <__sfvwrite_r+0x8a>
  409c78:	f8d5 9000 	ldr.w	r9, [r5]
  409c7c:	686f      	ldr	r7, [r5, #4]
  409c7e:	3508      	adds	r5, #8
  409c80:	e7d2      	b.n	409c28 <__sfvwrite_r+0x88>
  409c82:	f8d5 9000 	ldr.w	r9, [r5]
  409c86:	f8d5 8004 	ldr.w	r8, [r5, #4]
  409c8a:	3508      	adds	r5, #8
  409c8c:	e79f      	b.n	409bce <__sfvwrite_r+0x2e>
  409c8e:	2000      	movs	r0, #0
  409c90:	4770      	bx	lr
  409c92:	4621      	mov	r1, r4
  409c94:	9800      	ldr	r0, [sp, #0]
  409c96:	f7ff fd1f 	bl	4096d8 <_fflush_r>
  409c9a:	b370      	cbz	r0, 409cfa <__sfvwrite_r+0x15a>
  409c9c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  409ca0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  409ca4:	f04f 30ff 	mov.w	r0, #4294967295
  409ca8:	81a3      	strh	r3, [r4, #12]
  409caa:	b003      	add	sp, #12
  409cac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  409cb0:	4681      	mov	r9, r0
  409cb2:	4633      	mov	r3, r6
  409cb4:	464e      	mov	r6, r9
  409cb6:	46a8      	mov	r8, r5
  409cb8:	469a      	mov	sl, r3
  409cba:	464d      	mov	r5, r9
  409cbc:	b34e      	cbz	r6, 409d12 <__sfvwrite_r+0x172>
  409cbe:	b380      	cbz	r0, 409d22 <__sfvwrite_r+0x182>
  409cc0:	6820      	ldr	r0, [r4, #0]
  409cc2:	6923      	ldr	r3, [r4, #16]
  409cc4:	6962      	ldr	r2, [r4, #20]
  409cc6:	45b1      	cmp	r9, r6
  409cc8:	46cb      	mov	fp, r9
  409cca:	bf28      	it	cs
  409ccc:	46b3      	movcs	fp, r6
  409cce:	4298      	cmp	r0, r3
  409cd0:	465f      	mov	r7, fp
  409cd2:	d904      	bls.n	409cde <__sfvwrite_r+0x13e>
  409cd4:	68a3      	ldr	r3, [r4, #8]
  409cd6:	4413      	add	r3, r2
  409cd8:	459b      	cmp	fp, r3
  409cda:	f300 80a6 	bgt.w	409e2a <__sfvwrite_r+0x28a>
  409cde:	4593      	cmp	fp, r2
  409ce0:	db4b      	blt.n	409d7a <__sfvwrite_r+0x1da>
  409ce2:	4613      	mov	r3, r2
  409ce4:	6a67      	ldr	r7, [r4, #36]	; 0x24
  409ce6:	69e1      	ldr	r1, [r4, #28]
  409ce8:	9800      	ldr	r0, [sp, #0]
  409cea:	462a      	mov	r2, r5
  409cec:	47b8      	blx	r7
  409cee:	1e07      	subs	r7, r0, #0
  409cf0:	ddd4      	ble.n	409c9c <__sfvwrite_r+0xfc>
  409cf2:	ebb9 0907 	subs.w	r9, r9, r7
  409cf6:	d0cc      	beq.n	409c92 <__sfvwrite_r+0xf2>
  409cf8:	2001      	movs	r0, #1
  409cfa:	f8da 3008 	ldr.w	r3, [sl, #8]
  409cfe:	1bdb      	subs	r3, r3, r7
  409d00:	443d      	add	r5, r7
  409d02:	1bf6      	subs	r6, r6, r7
  409d04:	f8ca 3008 	str.w	r3, [sl, #8]
  409d08:	2b00      	cmp	r3, #0
  409d0a:	f43f af78 	beq.w	409bfe <__sfvwrite_r+0x5e>
  409d0e:	2e00      	cmp	r6, #0
  409d10:	d1d5      	bne.n	409cbe <__sfvwrite_r+0x11e>
  409d12:	f108 0308 	add.w	r3, r8, #8
  409d16:	e913 0060 	ldmdb	r3, {r5, r6}
  409d1a:	4698      	mov	r8, r3
  409d1c:	3308      	adds	r3, #8
  409d1e:	2e00      	cmp	r6, #0
  409d20:	d0f9      	beq.n	409d16 <__sfvwrite_r+0x176>
  409d22:	4632      	mov	r2, r6
  409d24:	210a      	movs	r1, #10
  409d26:	4628      	mov	r0, r5
  409d28:	f000 f982 	bl	40a030 <memchr>
  409d2c:	2800      	cmp	r0, #0
  409d2e:	f000 80a1 	beq.w	409e74 <__sfvwrite_r+0x2d4>
  409d32:	3001      	adds	r0, #1
  409d34:	eba0 0905 	sub.w	r9, r0, r5
  409d38:	e7c2      	b.n	409cc0 <__sfvwrite_r+0x120>
  409d3a:	6820      	ldr	r0, [r4, #0]
  409d3c:	6923      	ldr	r3, [r4, #16]
  409d3e:	4298      	cmp	r0, r3
  409d40:	d802      	bhi.n	409d48 <__sfvwrite_r+0x1a8>
  409d42:	6963      	ldr	r3, [r4, #20]
  409d44:	429f      	cmp	r7, r3
  409d46:	d25d      	bcs.n	409e04 <__sfvwrite_r+0x264>
  409d48:	45b8      	cmp	r8, r7
  409d4a:	bf28      	it	cs
  409d4c:	46b8      	movcs	r8, r7
  409d4e:	4642      	mov	r2, r8
  409d50:	4649      	mov	r1, r9
  409d52:	f000 f9bd 	bl	40a0d0 <memmove>
  409d56:	68a3      	ldr	r3, [r4, #8]
  409d58:	6822      	ldr	r2, [r4, #0]
  409d5a:	eba3 0308 	sub.w	r3, r3, r8
  409d5e:	4442      	add	r2, r8
  409d60:	60a3      	str	r3, [r4, #8]
  409d62:	6022      	str	r2, [r4, #0]
  409d64:	b10b      	cbz	r3, 409d6a <__sfvwrite_r+0x1ca>
  409d66:	46c2      	mov	sl, r8
  409d68:	e779      	b.n	409c5e <__sfvwrite_r+0xbe>
  409d6a:	4621      	mov	r1, r4
  409d6c:	9800      	ldr	r0, [sp, #0]
  409d6e:	f7ff fcb3 	bl	4096d8 <_fflush_r>
  409d72:	2800      	cmp	r0, #0
  409d74:	d192      	bne.n	409c9c <__sfvwrite_r+0xfc>
  409d76:	46c2      	mov	sl, r8
  409d78:	e771      	b.n	409c5e <__sfvwrite_r+0xbe>
  409d7a:	465a      	mov	r2, fp
  409d7c:	4629      	mov	r1, r5
  409d7e:	f000 f9a7 	bl	40a0d0 <memmove>
  409d82:	68a2      	ldr	r2, [r4, #8]
  409d84:	6823      	ldr	r3, [r4, #0]
  409d86:	eba2 020b 	sub.w	r2, r2, fp
  409d8a:	445b      	add	r3, fp
  409d8c:	60a2      	str	r2, [r4, #8]
  409d8e:	6023      	str	r3, [r4, #0]
  409d90:	e7af      	b.n	409cf2 <__sfvwrite_r+0x152>
  409d92:	6820      	ldr	r0, [r4, #0]
  409d94:	46b8      	mov	r8, r7
  409d96:	46ba      	mov	sl, r7
  409d98:	46bb      	mov	fp, r7
  409d9a:	e755      	b.n	409c48 <__sfvwrite_r+0xa8>
  409d9c:	6962      	ldr	r2, [r4, #20]
  409d9e:	6820      	ldr	r0, [r4, #0]
  409da0:	6921      	ldr	r1, [r4, #16]
  409da2:	eb02 0842 	add.w	r8, r2, r2, lsl #1
  409da6:	eba0 0a01 	sub.w	sl, r0, r1
  409daa:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
  409dae:	f10a 0001 	add.w	r0, sl, #1
  409db2:	ea4f 0868 	mov.w	r8, r8, asr #1
  409db6:	4438      	add	r0, r7
  409db8:	4540      	cmp	r0, r8
  409dba:	4642      	mov	r2, r8
  409dbc:	bf84      	itt	hi
  409dbe:	4680      	movhi	r8, r0
  409dc0:	4642      	movhi	r2, r8
  409dc2:	055b      	lsls	r3, r3, #21
  409dc4:	d544      	bpl.n	409e50 <__sfvwrite_r+0x2b0>
  409dc6:	4611      	mov	r1, r2
  409dc8:	9800      	ldr	r0, [sp, #0]
  409dca:	f7fe f879 	bl	407ec0 <_malloc_r>
  409dce:	4683      	mov	fp, r0
  409dd0:	2800      	cmp	r0, #0
  409dd2:	d055      	beq.n	409e80 <__sfvwrite_r+0x2e0>
  409dd4:	4652      	mov	r2, sl
  409dd6:	6921      	ldr	r1, [r4, #16]
  409dd8:	f7fe fb22 	bl	408420 <memcpy>
  409ddc:	89a3      	ldrh	r3, [r4, #12]
  409dde:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
  409de2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  409de6:	81a3      	strh	r3, [r4, #12]
  409de8:	eb0b 000a 	add.w	r0, fp, sl
  409dec:	eba8 030a 	sub.w	r3, r8, sl
  409df0:	f8c4 b010 	str.w	fp, [r4, #16]
  409df4:	f8c4 8014 	str.w	r8, [r4, #20]
  409df8:	6020      	str	r0, [r4, #0]
  409dfa:	60a3      	str	r3, [r4, #8]
  409dfc:	46b8      	mov	r8, r7
  409dfe:	46ba      	mov	sl, r7
  409e00:	46bb      	mov	fp, r7
  409e02:	e721      	b.n	409c48 <__sfvwrite_r+0xa8>
  409e04:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
  409e08:	42b9      	cmp	r1, r7
  409e0a:	bf28      	it	cs
  409e0c:	4639      	movcs	r1, r7
  409e0e:	464a      	mov	r2, r9
  409e10:	fb91 f1f3 	sdiv	r1, r1, r3
  409e14:	9800      	ldr	r0, [sp, #0]
  409e16:	6a66      	ldr	r6, [r4, #36]	; 0x24
  409e18:	fb03 f301 	mul.w	r3, r3, r1
  409e1c:	69e1      	ldr	r1, [r4, #28]
  409e1e:	47b0      	blx	r6
  409e20:	f1b0 0a00 	subs.w	sl, r0, #0
  409e24:	f73f af1b 	bgt.w	409c5e <__sfvwrite_r+0xbe>
  409e28:	e738      	b.n	409c9c <__sfvwrite_r+0xfc>
  409e2a:	461a      	mov	r2, r3
  409e2c:	4629      	mov	r1, r5
  409e2e:	9301      	str	r3, [sp, #4]
  409e30:	f000 f94e 	bl	40a0d0 <memmove>
  409e34:	6822      	ldr	r2, [r4, #0]
  409e36:	9b01      	ldr	r3, [sp, #4]
  409e38:	9800      	ldr	r0, [sp, #0]
  409e3a:	441a      	add	r2, r3
  409e3c:	6022      	str	r2, [r4, #0]
  409e3e:	4621      	mov	r1, r4
  409e40:	f7ff fc4a 	bl	4096d8 <_fflush_r>
  409e44:	9b01      	ldr	r3, [sp, #4]
  409e46:	2800      	cmp	r0, #0
  409e48:	f47f af28 	bne.w	409c9c <__sfvwrite_r+0xfc>
  409e4c:	461f      	mov	r7, r3
  409e4e:	e750      	b.n	409cf2 <__sfvwrite_r+0x152>
  409e50:	9800      	ldr	r0, [sp, #0]
  409e52:	f000 f9a1 	bl	40a198 <_realloc_r>
  409e56:	4683      	mov	fp, r0
  409e58:	2800      	cmp	r0, #0
  409e5a:	d1c5      	bne.n	409de8 <__sfvwrite_r+0x248>
  409e5c:	9d00      	ldr	r5, [sp, #0]
  409e5e:	6921      	ldr	r1, [r4, #16]
  409e60:	4628      	mov	r0, r5
  409e62:	f7ff fdb7 	bl	4099d4 <_free_r>
  409e66:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  409e6a:	220c      	movs	r2, #12
  409e6c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  409e70:	602a      	str	r2, [r5, #0]
  409e72:	e715      	b.n	409ca0 <__sfvwrite_r+0x100>
  409e74:	f106 0901 	add.w	r9, r6, #1
  409e78:	e722      	b.n	409cc0 <__sfvwrite_r+0x120>
  409e7a:	f04f 30ff 	mov.w	r0, #4294967295
  409e7e:	e6bf      	b.n	409c00 <__sfvwrite_r+0x60>
  409e80:	9a00      	ldr	r2, [sp, #0]
  409e82:	230c      	movs	r3, #12
  409e84:	6013      	str	r3, [r2, #0]
  409e86:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  409e8a:	e709      	b.n	409ca0 <__sfvwrite_r+0x100>
  409e8c:	7ffffc00 	.word	0x7ffffc00

00409e90 <_fwalk_reent>:
  409e90:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  409e94:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  409e98:	d01f      	beq.n	409eda <_fwalk_reent+0x4a>
  409e9a:	4688      	mov	r8, r1
  409e9c:	4606      	mov	r6, r0
  409e9e:	f04f 0900 	mov.w	r9, #0
  409ea2:	687d      	ldr	r5, [r7, #4]
  409ea4:	68bc      	ldr	r4, [r7, #8]
  409ea6:	3d01      	subs	r5, #1
  409ea8:	d411      	bmi.n	409ece <_fwalk_reent+0x3e>
  409eaa:	89a3      	ldrh	r3, [r4, #12]
  409eac:	2b01      	cmp	r3, #1
  409eae:	f105 35ff 	add.w	r5, r5, #4294967295
  409eb2:	d908      	bls.n	409ec6 <_fwalk_reent+0x36>
  409eb4:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  409eb8:	3301      	adds	r3, #1
  409eba:	4621      	mov	r1, r4
  409ebc:	4630      	mov	r0, r6
  409ebe:	d002      	beq.n	409ec6 <_fwalk_reent+0x36>
  409ec0:	47c0      	blx	r8
  409ec2:	ea49 0900 	orr.w	r9, r9, r0
  409ec6:	1c6b      	adds	r3, r5, #1
  409ec8:	f104 0468 	add.w	r4, r4, #104	; 0x68
  409ecc:	d1ed      	bne.n	409eaa <_fwalk_reent+0x1a>
  409ece:	683f      	ldr	r7, [r7, #0]
  409ed0:	2f00      	cmp	r7, #0
  409ed2:	d1e6      	bne.n	409ea2 <_fwalk_reent+0x12>
  409ed4:	4648      	mov	r0, r9
  409ed6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  409eda:	46b9      	mov	r9, r7
  409edc:	4648      	mov	r0, r9
  409ede:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  409ee2:	bf00      	nop

00409ee4 <__locale_mb_cur_max>:
  409ee4:	4b04      	ldr	r3, [pc, #16]	; (409ef8 <__locale_mb_cur_max+0x14>)
  409ee6:	4a05      	ldr	r2, [pc, #20]	; (409efc <__locale_mb_cur_max+0x18>)
  409ee8:	681b      	ldr	r3, [r3, #0]
  409eea:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  409eec:	2b00      	cmp	r3, #0
  409eee:	bf08      	it	eq
  409ef0:	4613      	moveq	r3, r2
  409ef2:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
  409ef6:	4770      	bx	lr
  409ef8:	20400084 	.word	0x20400084
  409efc:	204008c4 	.word	0x204008c4

00409f00 <__retarget_lock_init_recursive>:
  409f00:	4770      	bx	lr
  409f02:	bf00      	nop

00409f04 <__retarget_lock_close_recursive>:
  409f04:	4770      	bx	lr
  409f06:	bf00      	nop

00409f08 <__retarget_lock_acquire_recursive>:
  409f08:	4770      	bx	lr
  409f0a:	bf00      	nop

00409f0c <__retarget_lock_release_recursive>:
  409f0c:	4770      	bx	lr
  409f0e:	bf00      	nop

00409f10 <__swhatbuf_r>:
  409f10:	b570      	push	{r4, r5, r6, lr}
  409f12:	460c      	mov	r4, r1
  409f14:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  409f18:	2900      	cmp	r1, #0
  409f1a:	b090      	sub	sp, #64	; 0x40
  409f1c:	4615      	mov	r5, r2
  409f1e:	461e      	mov	r6, r3
  409f20:	db14      	blt.n	409f4c <__swhatbuf_r+0x3c>
  409f22:	aa01      	add	r2, sp, #4
  409f24:	f000 fc9e 	bl	40a864 <_fstat_r>
  409f28:	2800      	cmp	r0, #0
  409f2a:	db0f      	blt.n	409f4c <__swhatbuf_r+0x3c>
  409f2c:	9a02      	ldr	r2, [sp, #8]
  409f2e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  409f32:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  409f36:	fab2 f282 	clz	r2, r2
  409f3a:	0952      	lsrs	r2, r2, #5
  409f3c:	f44f 6380 	mov.w	r3, #1024	; 0x400
  409f40:	f44f 6000 	mov.w	r0, #2048	; 0x800
  409f44:	6032      	str	r2, [r6, #0]
  409f46:	602b      	str	r3, [r5, #0]
  409f48:	b010      	add	sp, #64	; 0x40
  409f4a:	bd70      	pop	{r4, r5, r6, pc}
  409f4c:	89a2      	ldrh	r2, [r4, #12]
  409f4e:	2300      	movs	r3, #0
  409f50:	f012 0080 	ands.w	r0, r2, #128	; 0x80
  409f54:	6033      	str	r3, [r6, #0]
  409f56:	d004      	beq.n	409f62 <__swhatbuf_r+0x52>
  409f58:	2240      	movs	r2, #64	; 0x40
  409f5a:	4618      	mov	r0, r3
  409f5c:	602a      	str	r2, [r5, #0]
  409f5e:	b010      	add	sp, #64	; 0x40
  409f60:	bd70      	pop	{r4, r5, r6, pc}
  409f62:	f44f 6380 	mov.w	r3, #1024	; 0x400
  409f66:	602b      	str	r3, [r5, #0]
  409f68:	b010      	add	sp, #64	; 0x40
  409f6a:	bd70      	pop	{r4, r5, r6, pc}

00409f6c <__smakebuf_r>:
  409f6c:	898a      	ldrh	r2, [r1, #12]
  409f6e:	0792      	lsls	r2, r2, #30
  409f70:	460b      	mov	r3, r1
  409f72:	d506      	bpl.n	409f82 <__smakebuf_r+0x16>
  409f74:	f101 0243 	add.w	r2, r1, #67	; 0x43
  409f78:	2101      	movs	r1, #1
  409f7a:	601a      	str	r2, [r3, #0]
  409f7c:	611a      	str	r2, [r3, #16]
  409f7e:	6159      	str	r1, [r3, #20]
  409f80:	4770      	bx	lr
  409f82:	b5f0      	push	{r4, r5, r6, r7, lr}
  409f84:	b083      	sub	sp, #12
  409f86:	ab01      	add	r3, sp, #4
  409f88:	466a      	mov	r2, sp
  409f8a:	460c      	mov	r4, r1
  409f8c:	4606      	mov	r6, r0
  409f8e:	f7ff ffbf 	bl	409f10 <__swhatbuf_r>
  409f92:	9900      	ldr	r1, [sp, #0]
  409f94:	4605      	mov	r5, r0
  409f96:	4630      	mov	r0, r6
  409f98:	f7fd ff92 	bl	407ec0 <_malloc_r>
  409f9c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  409fa0:	b1d8      	cbz	r0, 409fda <__smakebuf_r+0x6e>
  409fa2:	9a01      	ldr	r2, [sp, #4]
  409fa4:	4f15      	ldr	r7, [pc, #84]	; (409ffc <__smakebuf_r+0x90>)
  409fa6:	9900      	ldr	r1, [sp, #0]
  409fa8:	63f7      	str	r7, [r6, #60]	; 0x3c
  409faa:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  409fae:	81a3      	strh	r3, [r4, #12]
  409fb0:	6020      	str	r0, [r4, #0]
  409fb2:	6120      	str	r0, [r4, #16]
  409fb4:	6161      	str	r1, [r4, #20]
  409fb6:	b91a      	cbnz	r2, 409fc0 <__smakebuf_r+0x54>
  409fb8:	432b      	orrs	r3, r5
  409fba:	81a3      	strh	r3, [r4, #12]
  409fbc:	b003      	add	sp, #12
  409fbe:	bdf0      	pop	{r4, r5, r6, r7, pc}
  409fc0:	4630      	mov	r0, r6
  409fc2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  409fc6:	f000 fc61 	bl	40a88c <_isatty_r>
  409fca:	b1a0      	cbz	r0, 409ff6 <__smakebuf_r+0x8a>
  409fcc:	89a3      	ldrh	r3, [r4, #12]
  409fce:	f023 0303 	bic.w	r3, r3, #3
  409fd2:	f043 0301 	orr.w	r3, r3, #1
  409fd6:	b21b      	sxth	r3, r3
  409fd8:	e7ee      	b.n	409fb8 <__smakebuf_r+0x4c>
  409fda:	059a      	lsls	r2, r3, #22
  409fdc:	d4ee      	bmi.n	409fbc <__smakebuf_r+0x50>
  409fde:	f023 0303 	bic.w	r3, r3, #3
  409fe2:	f104 0243 	add.w	r2, r4, #67	; 0x43
  409fe6:	f043 0302 	orr.w	r3, r3, #2
  409fea:	2101      	movs	r1, #1
  409fec:	81a3      	strh	r3, [r4, #12]
  409fee:	6022      	str	r2, [r4, #0]
  409ff0:	6122      	str	r2, [r4, #16]
  409ff2:	6161      	str	r1, [r4, #20]
  409ff4:	e7e2      	b.n	409fbc <__smakebuf_r+0x50>
  409ff6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  409ffa:	e7dd      	b.n	409fb8 <__smakebuf_r+0x4c>
  409ffc:	0040972d 	.word	0x0040972d

0040a000 <__ascii_mbtowc>:
  40a000:	b082      	sub	sp, #8
  40a002:	b149      	cbz	r1, 40a018 <__ascii_mbtowc+0x18>
  40a004:	b15a      	cbz	r2, 40a01e <__ascii_mbtowc+0x1e>
  40a006:	b16b      	cbz	r3, 40a024 <__ascii_mbtowc+0x24>
  40a008:	7813      	ldrb	r3, [r2, #0]
  40a00a:	600b      	str	r3, [r1, #0]
  40a00c:	7812      	ldrb	r2, [r2, #0]
  40a00e:	1c10      	adds	r0, r2, #0
  40a010:	bf18      	it	ne
  40a012:	2001      	movne	r0, #1
  40a014:	b002      	add	sp, #8
  40a016:	4770      	bx	lr
  40a018:	a901      	add	r1, sp, #4
  40a01a:	2a00      	cmp	r2, #0
  40a01c:	d1f3      	bne.n	40a006 <__ascii_mbtowc+0x6>
  40a01e:	4610      	mov	r0, r2
  40a020:	b002      	add	sp, #8
  40a022:	4770      	bx	lr
  40a024:	f06f 0001 	mvn.w	r0, #1
  40a028:	e7f4      	b.n	40a014 <__ascii_mbtowc+0x14>
  40a02a:	bf00      	nop
  40a02c:	0000      	movs	r0, r0
	...

0040a030 <memchr>:
  40a030:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  40a034:	2a10      	cmp	r2, #16
  40a036:	db2b      	blt.n	40a090 <memchr+0x60>
  40a038:	f010 0f07 	tst.w	r0, #7
  40a03c:	d008      	beq.n	40a050 <memchr+0x20>
  40a03e:	f810 3b01 	ldrb.w	r3, [r0], #1
  40a042:	3a01      	subs	r2, #1
  40a044:	428b      	cmp	r3, r1
  40a046:	d02d      	beq.n	40a0a4 <memchr+0x74>
  40a048:	f010 0f07 	tst.w	r0, #7
  40a04c:	b342      	cbz	r2, 40a0a0 <memchr+0x70>
  40a04e:	d1f6      	bne.n	40a03e <memchr+0xe>
  40a050:	b4f0      	push	{r4, r5, r6, r7}
  40a052:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  40a056:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40a05a:	f022 0407 	bic.w	r4, r2, #7
  40a05e:	f07f 0700 	mvns.w	r7, #0
  40a062:	2300      	movs	r3, #0
  40a064:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  40a068:	3c08      	subs	r4, #8
  40a06a:	ea85 0501 	eor.w	r5, r5, r1
  40a06e:	ea86 0601 	eor.w	r6, r6, r1
  40a072:	fa85 f547 	uadd8	r5, r5, r7
  40a076:	faa3 f587 	sel	r5, r3, r7
  40a07a:	fa86 f647 	uadd8	r6, r6, r7
  40a07e:	faa5 f687 	sel	r6, r5, r7
  40a082:	b98e      	cbnz	r6, 40a0a8 <memchr+0x78>
  40a084:	d1ee      	bne.n	40a064 <memchr+0x34>
  40a086:	bcf0      	pop	{r4, r5, r6, r7}
  40a088:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  40a08c:	f002 0207 	and.w	r2, r2, #7
  40a090:	b132      	cbz	r2, 40a0a0 <memchr+0x70>
  40a092:	f810 3b01 	ldrb.w	r3, [r0], #1
  40a096:	3a01      	subs	r2, #1
  40a098:	ea83 0301 	eor.w	r3, r3, r1
  40a09c:	b113      	cbz	r3, 40a0a4 <memchr+0x74>
  40a09e:	d1f8      	bne.n	40a092 <memchr+0x62>
  40a0a0:	2000      	movs	r0, #0
  40a0a2:	4770      	bx	lr
  40a0a4:	3801      	subs	r0, #1
  40a0a6:	4770      	bx	lr
  40a0a8:	2d00      	cmp	r5, #0
  40a0aa:	bf06      	itte	eq
  40a0ac:	4635      	moveq	r5, r6
  40a0ae:	3803      	subeq	r0, #3
  40a0b0:	3807      	subne	r0, #7
  40a0b2:	f015 0f01 	tst.w	r5, #1
  40a0b6:	d107      	bne.n	40a0c8 <memchr+0x98>
  40a0b8:	3001      	adds	r0, #1
  40a0ba:	f415 7f80 	tst.w	r5, #256	; 0x100
  40a0be:	bf02      	ittt	eq
  40a0c0:	3001      	addeq	r0, #1
  40a0c2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  40a0c6:	3001      	addeq	r0, #1
  40a0c8:	bcf0      	pop	{r4, r5, r6, r7}
  40a0ca:	3801      	subs	r0, #1
  40a0cc:	4770      	bx	lr
  40a0ce:	bf00      	nop

0040a0d0 <memmove>:
  40a0d0:	4288      	cmp	r0, r1
  40a0d2:	b5f0      	push	{r4, r5, r6, r7, lr}
  40a0d4:	d90d      	bls.n	40a0f2 <memmove+0x22>
  40a0d6:	188b      	adds	r3, r1, r2
  40a0d8:	4298      	cmp	r0, r3
  40a0da:	d20a      	bcs.n	40a0f2 <memmove+0x22>
  40a0dc:	1884      	adds	r4, r0, r2
  40a0de:	2a00      	cmp	r2, #0
  40a0e0:	d051      	beq.n	40a186 <memmove+0xb6>
  40a0e2:	4622      	mov	r2, r4
  40a0e4:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  40a0e8:	f802 4d01 	strb.w	r4, [r2, #-1]!
  40a0ec:	4299      	cmp	r1, r3
  40a0ee:	d1f9      	bne.n	40a0e4 <memmove+0x14>
  40a0f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40a0f2:	2a0f      	cmp	r2, #15
  40a0f4:	d948      	bls.n	40a188 <memmove+0xb8>
  40a0f6:	ea41 0300 	orr.w	r3, r1, r0
  40a0fa:	079b      	lsls	r3, r3, #30
  40a0fc:	d146      	bne.n	40a18c <memmove+0xbc>
  40a0fe:	f100 0410 	add.w	r4, r0, #16
  40a102:	f101 0310 	add.w	r3, r1, #16
  40a106:	4615      	mov	r5, r2
  40a108:	f853 6c10 	ldr.w	r6, [r3, #-16]
  40a10c:	f844 6c10 	str.w	r6, [r4, #-16]
  40a110:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  40a114:	f844 6c0c 	str.w	r6, [r4, #-12]
  40a118:	f853 6c08 	ldr.w	r6, [r3, #-8]
  40a11c:	f844 6c08 	str.w	r6, [r4, #-8]
  40a120:	3d10      	subs	r5, #16
  40a122:	f853 6c04 	ldr.w	r6, [r3, #-4]
  40a126:	f844 6c04 	str.w	r6, [r4, #-4]
  40a12a:	2d0f      	cmp	r5, #15
  40a12c:	f103 0310 	add.w	r3, r3, #16
  40a130:	f104 0410 	add.w	r4, r4, #16
  40a134:	d8e8      	bhi.n	40a108 <memmove+0x38>
  40a136:	f1a2 0310 	sub.w	r3, r2, #16
  40a13a:	f023 030f 	bic.w	r3, r3, #15
  40a13e:	f002 0e0f 	and.w	lr, r2, #15
  40a142:	3310      	adds	r3, #16
  40a144:	f1be 0f03 	cmp.w	lr, #3
  40a148:	4419      	add	r1, r3
  40a14a:	4403      	add	r3, r0
  40a14c:	d921      	bls.n	40a192 <memmove+0xc2>
  40a14e:	1f1e      	subs	r6, r3, #4
  40a150:	460d      	mov	r5, r1
  40a152:	4674      	mov	r4, lr
  40a154:	3c04      	subs	r4, #4
  40a156:	f855 7b04 	ldr.w	r7, [r5], #4
  40a15a:	f846 7f04 	str.w	r7, [r6, #4]!
  40a15e:	2c03      	cmp	r4, #3
  40a160:	d8f8      	bhi.n	40a154 <memmove+0x84>
  40a162:	f1ae 0404 	sub.w	r4, lr, #4
  40a166:	f024 0403 	bic.w	r4, r4, #3
  40a16a:	3404      	adds	r4, #4
  40a16c:	4421      	add	r1, r4
  40a16e:	4423      	add	r3, r4
  40a170:	f002 0203 	and.w	r2, r2, #3
  40a174:	b162      	cbz	r2, 40a190 <memmove+0xc0>
  40a176:	3b01      	subs	r3, #1
  40a178:	440a      	add	r2, r1
  40a17a:	f811 4b01 	ldrb.w	r4, [r1], #1
  40a17e:	f803 4f01 	strb.w	r4, [r3, #1]!
  40a182:	428a      	cmp	r2, r1
  40a184:	d1f9      	bne.n	40a17a <memmove+0xaa>
  40a186:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40a188:	4603      	mov	r3, r0
  40a18a:	e7f3      	b.n	40a174 <memmove+0xa4>
  40a18c:	4603      	mov	r3, r0
  40a18e:	e7f2      	b.n	40a176 <memmove+0xa6>
  40a190:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40a192:	4672      	mov	r2, lr
  40a194:	e7ee      	b.n	40a174 <memmove+0xa4>
  40a196:	bf00      	nop

0040a198 <_realloc_r>:
  40a198:	2900      	cmp	r1, #0
  40a19a:	f000 8095 	beq.w	40a2c8 <_realloc_r+0x130>
  40a19e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40a1a2:	460d      	mov	r5, r1
  40a1a4:	4616      	mov	r6, r2
  40a1a6:	b083      	sub	sp, #12
  40a1a8:	4680      	mov	r8, r0
  40a1aa:	f106 070b 	add.w	r7, r6, #11
  40a1ae:	f7fe fa1f 	bl	4085f0 <__malloc_lock>
  40a1b2:	f855 ec04 	ldr.w	lr, [r5, #-4]
  40a1b6:	2f16      	cmp	r7, #22
  40a1b8:	f02e 0403 	bic.w	r4, lr, #3
  40a1bc:	f1a5 0908 	sub.w	r9, r5, #8
  40a1c0:	d83c      	bhi.n	40a23c <_realloc_r+0xa4>
  40a1c2:	2210      	movs	r2, #16
  40a1c4:	4617      	mov	r7, r2
  40a1c6:	42be      	cmp	r6, r7
  40a1c8:	d83d      	bhi.n	40a246 <_realloc_r+0xae>
  40a1ca:	4294      	cmp	r4, r2
  40a1cc:	da43      	bge.n	40a256 <_realloc_r+0xbe>
  40a1ce:	4bc4      	ldr	r3, [pc, #784]	; (40a4e0 <_realloc_r+0x348>)
  40a1d0:	6899      	ldr	r1, [r3, #8]
  40a1d2:	eb09 0004 	add.w	r0, r9, r4
  40a1d6:	4288      	cmp	r0, r1
  40a1d8:	f000 80b4 	beq.w	40a344 <_realloc_r+0x1ac>
  40a1dc:	6843      	ldr	r3, [r0, #4]
  40a1de:	f023 0101 	bic.w	r1, r3, #1
  40a1e2:	4401      	add	r1, r0
  40a1e4:	6849      	ldr	r1, [r1, #4]
  40a1e6:	07c9      	lsls	r1, r1, #31
  40a1e8:	d54c      	bpl.n	40a284 <_realloc_r+0xec>
  40a1ea:	f01e 0f01 	tst.w	lr, #1
  40a1ee:	f000 809b 	beq.w	40a328 <_realloc_r+0x190>
  40a1f2:	4631      	mov	r1, r6
  40a1f4:	4640      	mov	r0, r8
  40a1f6:	f7fd fe63 	bl	407ec0 <_malloc_r>
  40a1fa:	4606      	mov	r6, r0
  40a1fc:	2800      	cmp	r0, #0
  40a1fe:	d03a      	beq.n	40a276 <_realloc_r+0xde>
  40a200:	f855 3c04 	ldr.w	r3, [r5, #-4]
  40a204:	f023 0301 	bic.w	r3, r3, #1
  40a208:	444b      	add	r3, r9
  40a20a:	f1a0 0208 	sub.w	r2, r0, #8
  40a20e:	429a      	cmp	r2, r3
  40a210:	f000 8121 	beq.w	40a456 <_realloc_r+0x2be>
  40a214:	1f22      	subs	r2, r4, #4
  40a216:	2a24      	cmp	r2, #36	; 0x24
  40a218:	f200 8107 	bhi.w	40a42a <_realloc_r+0x292>
  40a21c:	2a13      	cmp	r2, #19
  40a21e:	f200 80db 	bhi.w	40a3d8 <_realloc_r+0x240>
  40a222:	4603      	mov	r3, r0
  40a224:	462a      	mov	r2, r5
  40a226:	6811      	ldr	r1, [r2, #0]
  40a228:	6019      	str	r1, [r3, #0]
  40a22a:	6851      	ldr	r1, [r2, #4]
  40a22c:	6059      	str	r1, [r3, #4]
  40a22e:	6892      	ldr	r2, [r2, #8]
  40a230:	609a      	str	r2, [r3, #8]
  40a232:	4629      	mov	r1, r5
  40a234:	4640      	mov	r0, r8
  40a236:	f7ff fbcd 	bl	4099d4 <_free_r>
  40a23a:	e01c      	b.n	40a276 <_realloc_r+0xde>
  40a23c:	f027 0707 	bic.w	r7, r7, #7
  40a240:	2f00      	cmp	r7, #0
  40a242:	463a      	mov	r2, r7
  40a244:	dabf      	bge.n	40a1c6 <_realloc_r+0x2e>
  40a246:	2600      	movs	r6, #0
  40a248:	230c      	movs	r3, #12
  40a24a:	4630      	mov	r0, r6
  40a24c:	f8c8 3000 	str.w	r3, [r8]
  40a250:	b003      	add	sp, #12
  40a252:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40a256:	462e      	mov	r6, r5
  40a258:	1be3      	subs	r3, r4, r7
  40a25a:	2b0f      	cmp	r3, #15
  40a25c:	d81e      	bhi.n	40a29c <_realloc_r+0x104>
  40a25e:	f8d9 3004 	ldr.w	r3, [r9, #4]
  40a262:	f003 0301 	and.w	r3, r3, #1
  40a266:	4323      	orrs	r3, r4
  40a268:	444c      	add	r4, r9
  40a26a:	f8c9 3004 	str.w	r3, [r9, #4]
  40a26e:	6863      	ldr	r3, [r4, #4]
  40a270:	f043 0301 	orr.w	r3, r3, #1
  40a274:	6063      	str	r3, [r4, #4]
  40a276:	4640      	mov	r0, r8
  40a278:	f7fe f9c0 	bl	4085fc <__malloc_unlock>
  40a27c:	4630      	mov	r0, r6
  40a27e:	b003      	add	sp, #12
  40a280:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40a284:	f023 0303 	bic.w	r3, r3, #3
  40a288:	18e1      	adds	r1, r4, r3
  40a28a:	4291      	cmp	r1, r2
  40a28c:	db1f      	blt.n	40a2ce <_realloc_r+0x136>
  40a28e:	68c3      	ldr	r3, [r0, #12]
  40a290:	6882      	ldr	r2, [r0, #8]
  40a292:	462e      	mov	r6, r5
  40a294:	60d3      	str	r3, [r2, #12]
  40a296:	460c      	mov	r4, r1
  40a298:	609a      	str	r2, [r3, #8]
  40a29a:	e7dd      	b.n	40a258 <_realloc_r+0xc0>
  40a29c:	f8d9 2004 	ldr.w	r2, [r9, #4]
  40a2a0:	eb09 0107 	add.w	r1, r9, r7
  40a2a4:	f002 0201 	and.w	r2, r2, #1
  40a2a8:	444c      	add	r4, r9
  40a2aa:	f043 0301 	orr.w	r3, r3, #1
  40a2ae:	4317      	orrs	r7, r2
  40a2b0:	f8c9 7004 	str.w	r7, [r9, #4]
  40a2b4:	604b      	str	r3, [r1, #4]
  40a2b6:	6863      	ldr	r3, [r4, #4]
  40a2b8:	f043 0301 	orr.w	r3, r3, #1
  40a2bc:	3108      	adds	r1, #8
  40a2be:	6063      	str	r3, [r4, #4]
  40a2c0:	4640      	mov	r0, r8
  40a2c2:	f7ff fb87 	bl	4099d4 <_free_r>
  40a2c6:	e7d6      	b.n	40a276 <_realloc_r+0xde>
  40a2c8:	4611      	mov	r1, r2
  40a2ca:	f7fd bdf9 	b.w	407ec0 <_malloc_r>
  40a2ce:	f01e 0f01 	tst.w	lr, #1
  40a2d2:	d18e      	bne.n	40a1f2 <_realloc_r+0x5a>
  40a2d4:	f855 1c08 	ldr.w	r1, [r5, #-8]
  40a2d8:	eba9 0a01 	sub.w	sl, r9, r1
  40a2dc:	f8da 1004 	ldr.w	r1, [sl, #4]
  40a2e0:	f021 0103 	bic.w	r1, r1, #3
  40a2e4:	440b      	add	r3, r1
  40a2e6:	4423      	add	r3, r4
  40a2e8:	4293      	cmp	r3, r2
  40a2ea:	db25      	blt.n	40a338 <_realloc_r+0x1a0>
  40a2ec:	68c2      	ldr	r2, [r0, #12]
  40a2ee:	6881      	ldr	r1, [r0, #8]
  40a2f0:	4656      	mov	r6, sl
  40a2f2:	60ca      	str	r2, [r1, #12]
  40a2f4:	6091      	str	r1, [r2, #8]
  40a2f6:	f8da 100c 	ldr.w	r1, [sl, #12]
  40a2fa:	f856 0f08 	ldr.w	r0, [r6, #8]!
  40a2fe:	1f22      	subs	r2, r4, #4
  40a300:	2a24      	cmp	r2, #36	; 0x24
  40a302:	60c1      	str	r1, [r0, #12]
  40a304:	6088      	str	r0, [r1, #8]
  40a306:	f200 8094 	bhi.w	40a432 <_realloc_r+0x29a>
  40a30a:	2a13      	cmp	r2, #19
  40a30c:	d96f      	bls.n	40a3ee <_realloc_r+0x256>
  40a30e:	6829      	ldr	r1, [r5, #0]
  40a310:	f8ca 1008 	str.w	r1, [sl, #8]
  40a314:	6869      	ldr	r1, [r5, #4]
  40a316:	f8ca 100c 	str.w	r1, [sl, #12]
  40a31a:	2a1b      	cmp	r2, #27
  40a31c:	f200 80a2 	bhi.w	40a464 <_realloc_r+0x2cc>
  40a320:	3508      	adds	r5, #8
  40a322:	f10a 0210 	add.w	r2, sl, #16
  40a326:	e063      	b.n	40a3f0 <_realloc_r+0x258>
  40a328:	f855 3c08 	ldr.w	r3, [r5, #-8]
  40a32c:	eba9 0a03 	sub.w	sl, r9, r3
  40a330:	f8da 1004 	ldr.w	r1, [sl, #4]
  40a334:	f021 0103 	bic.w	r1, r1, #3
  40a338:	1863      	adds	r3, r4, r1
  40a33a:	4293      	cmp	r3, r2
  40a33c:	f6ff af59 	blt.w	40a1f2 <_realloc_r+0x5a>
  40a340:	4656      	mov	r6, sl
  40a342:	e7d8      	b.n	40a2f6 <_realloc_r+0x15e>
  40a344:	6841      	ldr	r1, [r0, #4]
  40a346:	f021 0b03 	bic.w	fp, r1, #3
  40a34a:	44a3      	add	fp, r4
  40a34c:	f107 0010 	add.w	r0, r7, #16
  40a350:	4583      	cmp	fp, r0
  40a352:	da56      	bge.n	40a402 <_realloc_r+0x26a>
  40a354:	f01e 0f01 	tst.w	lr, #1
  40a358:	f47f af4b 	bne.w	40a1f2 <_realloc_r+0x5a>
  40a35c:	f855 1c08 	ldr.w	r1, [r5, #-8]
  40a360:	eba9 0a01 	sub.w	sl, r9, r1
  40a364:	f8da 1004 	ldr.w	r1, [sl, #4]
  40a368:	f021 0103 	bic.w	r1, r1, #3
  40a36c:	448b      	add	fp, r1
  40a36e:	4558      	cmp	r0, fp
  40a370:	dce2      	bgt.n	40a338 <_realloc_r+0x1a0>
  40a372:	4656      	mov	r6, sl
  40a374:	f8da 100c 	ldr.w	r1, [sl, #12]
  40a378:	f856 0f08 	ldr.w	r0, [r6, #8]!
  40a37c:	1f22      	subs	r2, r4, #4
  40a37e:	2a24      	cmp	r2, #36	; 0x24
  40a380:	60c1      	str	r1, [r0, #12]
  40a382:	6088      	str	r0, [r1, #8]
  40a384:	f200 808f 	bhi.w	40a4a6 <_realloc_r+0x30e>
  40a388:	2a13      	cmp	r2, #19
  40a38a:	f240 808a 	bls.w	40a4a2 <_realloc_r+0x30a>
  40a38e:	6829      	ldr	r1, [r5, #0]
  40a390:	f8ca 1008 	str.w	r1, [sl, #8]
  40a394:	6869      	ldr	r1, [r5, #4]
  40a396:	f8ca 100c 	str.w	r1, [sl, #12]
  40a39a:	2a1b      	cmp	r2, #27
  40a39c:	f200 808a 	bhi.w	40a4b4 <_realloc_r+0x31c>
  40a3a0:	3508      	adds	r5, #8
  40a3a2:	f10a 0210 	add.w	r2, sl, #16
  40a3a6:	6829      	ldr	r1, [r5, #0]
  40a3a8:	6011      	str	r1, [r2, #0]
  40a3aa:	6869      	ldr	r1, [r5, #4]
  40a3ac:	6051      	str	r1, [r2, #4]
  40a3ae:	68a9      	ldr	r1, [r5, #8]
  40a3b0:	6091      	str	r1, [r2, #8]
  40a3b2:	eb0a 0107 	add.w	r1, sl, r7
  40a3b6:	ebab 0207 	sub.w	r2, fp, r7
  40a3ba:	f042 0201 	orr.w	r2, r2, #1
  40a3be:	6099      	str	r1, [r3, #8]
  40a3c0:	604a      	str	r2, [r1, #4]
  40a3c2:	f8da 3004 	ldr.w	r3, [sl, #4]
  40a3c6:	f003 0301 	and.w	r3, r3, #1
  40a3ca:	431f      	orrs	r7, r3
  40a3cc:	4640      	mov	r0, r8
  40a3ce:	f8ca 7004 	str.w	r7, [sl, #4]
  40a3d2:	f7fe f913 	bl	4085fc <__malloc_unlock>
  40a3d6:	e751      	b.n	40a27c <_realloc_r+0xe4>
  40a3d8:	682b      	ldr	r3, [r5, #0]
  40a3da:	6003      	str	r3, [r0, #0]
  40a3dc:	686b      	ldr	r3, [r5, #4]
  40a3de:	6043      	str	r3, [r0, #4]
  40a3e0:	2a1b      	cmp	r2, #27
  40a3e2:	d82d      	bhi.n	40a440 <_realloc_r+0x2a8>
  40a3e4:	f100 0308 	add.w	r3, r0, #8
  40a3e8:	f105 0208 	add.w	r2, r5, #8
  40a3ec:	e71b      	b.n	40a226 <_realloc_r+0x8e>
  40a3ee:	4632      	mov	r2, r6
  40a3f0:	6829      	ldr	r1, [r5, #0]
  40a3f2:	6011      	str	r1, [r2, #0]
  40a3f4:	6869      	ldr	r1, [r5, #4]
  40a3f6:	6051      	str	r1, [r2, #4]
  40a3f8:	68a9      	ldr	r1, [r5, #8]
  40a3fa:	6091      	str	r1, [r2, #8]
  40a3fc:	461c      	mov	r4, r3
  40a3fe:	46d1      	mov	r9, sl
  40a400:	e72a      	b.n	40a258 <_realloc_r+0xc0>
  40a402:	eb09 0107 	add.w	r1, r9, r7
  40a406:	ebab 0b07 	sub.w	fp, fp, r7
  40a40a:	f04b 0201 	orr.w	r2, fp, #1
  40a40e:	6099      	str	r1, [r3, #8]
  40a410:	604a      	str	r2, [r1, #4]
  40a412:	f855 3c04 	ldr.w	r3, [r5, #-4]
  40a416:	f003 0301 	and.w	r3, r3, #1
  40a41a:	431f      	orrs	r7, r3
  40a41c:	4640      	mov	r0, r8
  40a41e:	f845 7c04 	str.w	r7, [r5, #-4]
  40a422:	f7fe f8eb 	bl	4085fc <__malloc_unlock>
  40a426:	462e      	mov	r6, r5
  40a428:	e728      	b.n	40a27c <_realloc_r+0xe4>
  40a42a:	4629      	mov	r1, r5
  40a42c:	f7ff fe50 	bl	40a0d0 <memmove>
  40a430:	e6ff      	b.n	40a232 <_realloc_r+0x9a>
  40a432:	4629      	mov	r1, r5
  40a434:	4630      	mov	r0, r6
  40a436:	461c      	mov	r4, r3
  40a438:	46d1      	mov	r9, sl
  40a43a:	f7ff fe49 	bl	40a0d0 <memmove>
  40a43e:	e70b      	b.n	40a258 <_realloc_r+0xc0>
  40a440:	68ab      	ldr	r3, [r5, #8]
  40a442:	6083      	str	r3, [r0, #8]
  40a444:	68eb      	ldr	r3, [r5, #12]
  40a446:	60c3      	str	r3, [r0, #12]
  40a448:	2a24      	cmp	r2, #36	; 0x24
  40a44a:	d017      	beq.n	40a47c <_realloc_r+0x2e4>
  40a44c:	f100 0310 	add.w	r3, r0, #16
  40a450:	f105 0210 	add.w	r2, r5, #16
  40a454:	e6e7      	b.n	40a226 <_realloc_r+0x8e>
  40a456:	f850 3c04 	ldr.w	r3, [r0, #-4]
  40a45a:	f023 0303 	bic.w	r3, r3, #3
  40a45e:	441c      	add	r4, r3
  40a460:	462e      	mov	r6, r5
  40a462:	e6f9      	b.n	40a258 <_realloc_r+0xc0>
  40a464:	68a9      	ldr	r1, [r5, #8]
  40a466:	f8ca 1010 	str.w	r1, [sl, #16]
  40a46a:	68e9      	ldr	r1, [r5, #12]
  40a46c:	f8ca 1014 	str.w	r1, [sl, #20]
  40a470:	2a24      	cmp	r2, #36	; 0x24
  40a472:	d00c      	beq.n	40a48e <_realloc_r+0x2f6>
  40a474:	3510      	adds	r5, #16
  40a476:	f10a 0218 	add.w	r2, sl, #24
  40a47a:	e7b9      	b.n	40a3f0 <_realloc_r+0x258>
  40a47c:	692b      	ldr	r3, [r5, #16]
  40a47e:	6103      	str	r3, [r0, #16]
  40a480:	696b      	ldr	r3, [r5, #20]
  40a482:	6143      	str	r3, [r0, #20]
  40a484:	f105 0218 	add.w	r2, r5, #24
  40a488:	f100 0318 	add.w	r3, r0, #24
  40a48c:	e6cb      	b.n	40a226 <_realloc_r+0x8e>
  40a48e:	692a      	ldr	r2, [r5, #16]
  40a490:	f8ca 2018 	str.w	r2, [sl, #24]
  40a494:	696a      	ldr	r2, [r5, #20]
  40a496:	f8ca 201c 	str.w	r2, [sl, #28]
  40a49a:	3518      	adds	r5, #24
  40a49c:	f10a 0220 	add.w	r2, sl, #32
  40a4a0:	e7a6      	b.n	40a3f0 <_realloc_r+0x258>
  40a4a2:	4632      	mov	r2, r6
  40a4a4:	e77f      	b.n	40a3a6 <_realloc_r+0x20e>
  40a4a6:	4629      	mov	r1, r5
  40a4a8:	4630      	mov	r0, r6
  40a4aa:	9301      	str	r3, [sp, #4]
  40a4ac:	f7ff fe10 	bl	40a0d0 <memmove>
  40a4b0:	9b01      	ldr	r3, [sp, #4]
  40a4b2:	e77e      	b.n	40a3b2 <_realloc_r+0x21a>
  40a4b4:	68a9      	ldr	r1, [r5, #8]
  40a4b6:	f8ca 1010 	str.w	r1, [sl, #16]
  40a4ba:	68e9      	ldr	r1, [r5, #12]
  40a4bc:	f8ca 1014 	str.w	r1, [sl, #20]
  40a4c0:	2a24      	cmp	r2, #36	; 0x24
  40a4c2:	d003      	beq.n	40a4cc <_realloc_r+0x334>
  40a4c4:	3510      	adds	r5, #16
  40a4c6:	f10a 0218 	add.w	r2, sl, #24
  40a4ca:	e76c      	b.n	40a3a6 <_realloc_r+0x20e>
  40a4cc:	692a      	ldr	r2, [r5, #16]
  40a4ce:	f8ca 2018 	str.w	r2, [sl, #24]
  40a4d2:	696a      	ldr	r2, [r5, #20]
  40a4d4:	f8ca 201c 	str.w	r2, [sl, #28]
  40a4d8:	3518      	adds	r5, #24
  40a4da:	f10a 0220 	add.w	r2, sl, #32
  40a4de:	e762      	b.n	40a3a6 <_realloc_r+0x20e>
  40a4e0:	204004b0 	.word	0x204004b0

0040a4e4 <__sread>:
  40a4e4:	b510      	push	{r4, lr}
  40a4e6:	460c      	mov	r4, r1
  40a4e8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40a4ec:	f000 f9f6 	bl	40a8dc <_read_r>
  40a4f0:	2800      	cmp	r0, #0
  40a4f2:	db03      	blt.n	40a4fc <__sread+0x18>
  40a4f4:	6d23      	ldr	r3, [r4, #80]	; 0x50
  40a4f6:	4403      	add	r3, r0
  40a4f8:	6523      	str	r3, [r4, #80]	; 0x50
  40a4fa:	bd10      	pop	{r4, pc}
  40a4fc:	89a3      	ldrh	r3, [r4, #12]
  40a4fe:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  40a502:	81a3      	strh	r3, [r4, #12]
  40a504:	bd10      	pop	{r4, pc}
  40a506:	bf00      	nop

0040a508 <__swrite>:
  40a508:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40a50c:	4616      	mov	r6, r2
  40a50e:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
  40a512:	461f      	mov	r7, r3
  40a514:	05d3      	lsls	r3, r2, #23
  40a516:	460c      	mov	r4, r1
  40a518:	4605      	mov	r5, r0
  40a51a:	d507      	bpl.n	40a52c <__swrite+0x24>
  40a51c:	2200      	movs	r2, #0
  40a51e:	2302      	movs	r3, #2
  40a520:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40a524:	f000 f9c4 	bl	40a8b0 <_lseek_r>
  40a528:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40a52c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  40a530:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  40a534:	81a2      	strh	r2, [r4, #12]
  40a536:	463b      	mov	r3, r7
  40a538:	4632      	mov	r2, r6
  40a53a:	4628      	mov	r0, r5
  40a53c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  40a540:	f000 b8a4 	b.w	40a68c <_write_r>

0040a544 <__sseek>:
  40a544:	b510      	push	{r4, lr}
  40a546:	460c      	mov	r4, r1
  40a548:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40a54c:	f000 f9b0 	bl	40a8b0 <_lseek_r>
  40a550:	89a3      	ldrh	r3, [r4, #12]
  40a552:	1c42      	adds	r2, r0, #1
  40a554:	bf0e      	itee	eq
  40a556:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  40a55a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  40a55e:	6520      	strne	r0, [r4, #80]	; 0x50
  40a560:	81a3      	strh	r3, [r4, #12]
  40a562:	bd10      	pop	{r4, pc}

0040a564 <__sclose>:
  40a564:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40a568:	f000 b908 	b.w	40a77c <_close_r>

0040a56c <__swbuf_r>:
  40a56c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40a56e:	460d      	mov	r5, r1
  40a570:	4614      	mov	r4, r2
  40a572:	4606      	mov	r6, r0
  40a574:	b110      	cbz	r0, 40a57c <__swbuf_r+0x10>
  40a576:	6b83      	ldr	r3, [r0, #56]	; 0x38
  40a578:	2b00      	cmp	r3, #0
  40a57a:	d04b      	beq.n	40a614 <__swbuf_r+0xa8>
  40a57c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40a580:	69a3      	ldr	r3, [r4, #24]
  40a582:	60a3      	str	r3, [r4, #8]
  40a584:	b291      	uxth	r1, r2
  40a586:	0708      	lsls	r0, r1, #28
  40a588:	d539      	bpl.n	40a5fe <__swbuf_r+0x92>
  40a58a:	6923      	ldr	r3, [r4, #16]
  40a58c:	2b00      	cmp	r3, #0
  40a58e:	d036      	beq.n	40a5fe <__swbuf_r+0x92>
  40a590:	b2ed      	uxtb	r5, r5
  40a592:	0489      	lsls	r1, r1, #18
  40a594:	462f      	mov	r7, r5
  40a596:	d515      	bpl.n	40a5c4 <__swbuf_r+0x58>
  40a598:	6822      	ldr	r2, [r4, #0]
  40a59a:	6961      	ldr	r1, [r4, #20]
  40a59c:	1ad3      	subs	r3, r2, r3
  40a59e:	428b      	cmp	r3, r1
  40a5a0:	da1c      	bge.n	40a5dc <__swbuf_r+0x70>
  40a5a2:	3301      	adds	r3, #1
  40a5a4:	68a1      	ldr	r1, [r4, #8]
  40a5a6:	1c50      	adds	r0, r2, #1
  40a5a8:	3901      	subs	r1, #1
  40a5aa:	60a1      	str	r1, [r4, #8]
  40a5ac:	6020      	str	r0, [r4, #0]
  40a5ae:	7015      	strb	r5, [r2, #0]
  40a5b0:	6962      	ldr	r2, [r4, #20]
  40a5b2:	429a      	cmp	r2, r3
  40a5b4:	d01a      	beq.n	40a5ec <__swbuf_r+0x80>
  40a5b6:	89a3      	ldrh	r3, [r4, #12]
  40a5b8:	07db      	lsls	r3, r3, #31
  40a5ba:	d501      	bpl.n	40a5c0 <__swbuf_r+0x54>
  40a5bc:	2d0a      	cmp	r5, #10
  40a5be:	d015      	beq.n	40a5ec <__swbuf_r+0x80>
  40a5c0:	4638      	mov	r0, r7
  40a5c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40a5c4:	6e61      	ldr	r1, [r4, #100]	; 0x64
  40a5c6:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  40a5ca:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  40a5ce:	81a2      	strh	r2, [r4, #12]
  40a5d0:	6822      	ldr	r2, [r4, #0]
  40a5d2:	6661      	str	r1, [r4, #100]	; 0x64
  40a5d4:	6961      	ldr	r1, [r4, #20]
  40a5d6:	1ad3      	subs	r3, r2, r3
  40a5d8:	428b      	cmp	r3, r1
  40a5da:	dbe2      	blt.n	40a5a2 <__swbuf_r+0x36>
  40a5dc:	4621      	mov	r1, r4
  40a5de:	4630      	mov	r0, r6
  40a5e0:	f7ff f87a 	bl	4096d8 <_fflush_r>
  40a5e4:	b940      	cbnz	r0, 40a5f8 <__swbuf_r+0x8c>
  40a5e6:	6822      	ldr	r2, [r4, #0]
  40a5e8:	2301      	movs	r3, #1
  40a5ea:	e7db      	b.n	40a5a4 <__swbuf_r+0x38>
  40a5ec:	4621      	mov	r1, r4
  40a5ee:	4630      	mov	r0, r6
  40a5f0:	f7ff f872 	bl	4096d8 <_fflush_r>
  40a5f4:	2800      	cmp	r0, #0
  40a5f6:	d0e3      	beq.n	40a5c0 <__swbuf_r+0x54>
  40a5f8:	f04f 37ff 	mov.w	r7, #4294967295
  40a5fc:	e7e0      	b.n	40a5c0 <__swbuf_r+0x54>
  40a5fe:	4621      	mov	r1, r4
  40a600:	4630      	mov	r0, r6
  40a602:	f7fe ff55 	bl	4094b0 <__swsetup_r>
  40a606:	2800      	cmp	r0, #0
  40a608:	d1f6      	bne.n	40a5f8 <__swbuf_r+0x8c>
  40a60a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40a60e:	6923      	ldr	r3, [r4, #16]
  40a610:	b291      	uxth	r1, r2
  40a612:	e7bd      	b.n	40a590 <__swbuf_r+0x24>
  40a614:	f7ff f8b8 	bl	409788 <__sinit>
  40a618:	e7b0      	b.n	40a57c <__swbuf_r+0x10>
  40a61a:	bf00      	nop

0040a61c <_wcrtomb_r>:
  40a61c:	b5f0      	push	{r4, r5, r6, r7, lr}
  40a61e:	4606      	mov	r6, r0
  40a620:	b085      	sub	sp, #20
  40a622:	461f      	mov	r7, r3
  40a624:	b189      	cbz	r1, 40a64a <_wcrtomb_r+0x2e>
  40a626:	4c10      	ldr	r4, [pc, #64]	; (40a668 <_wcrtomb_r+0x4c>)
  40a628:	4d10      	ldr	r5, [pc, #64]	; (40a66c <_wcrtomb_r+0x50>)
  40a62a:	6824      	ldr	r4, [r4, #0]
  40a62c:	6b64      	ldr	r4, [r4, #52]	; 0x34
  40a62e:	2c00      	cmp	r4, #0
  40a630:	bf08      	it	eq
  40a632:	462c      	moveq	r4, r5
  40a634:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
  40a638:	47a0      	blx	r4
  40a63a:	1c43      	adds	r3, r0, #1
  40a63c:	d103      	bne.n	40a646 <_wcrtomb_r+0x2a>
  40a63e:	2200      	movs	r2, #0
  40a640:	238a      	movs	r3, #138	; 0x8a
  40a642:	603a      	str	r2, [r7, #0]
  40a644:	6033      	str	r3, [r6, #0]
  40a646:	b005      	add	sp, #20
  40a648:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40a64a:	460c      	mov	r4, r1
  40a64c:	4906      	ldr	r1, [pc, #24]	; (40a668 <_wcrtomb_r+0x4c>)
  40a64e:	4a07      	ldr	r2, [pc, #28]	; (40a66c <_wcrtomb_r+0x50>)
  40a650:	6809      	ldr	r1, [r1, #0]
  40a652:	6b49      	ldr	r1, [r1, #52]	; 0x34
  40a654:	2900      	cmp	r1, #0
  40a656:	bf08      	it	eq
  40a658:	4611      	moveq	r1, r2
  40a65a:	4622      	mov	r2, r4
  40a65c:	f8d1 40e0 	ldr.w	r4, [r1, #224]	; 0xe0
  40a660:	a901      	add	r1, sp, #4
  40a662:	47a0      	blx	r4
  40a664:	e7e9      	b.n	40a63a <_wcrtomb_r+0x1e>
  40a666:	bf00      	nop
  40a668:	20400084 	.word	0x20400084
  40a66c:	204008c4 	.word	0x204008c4

0040a670 <__ascii_wctomb>:
  40a670:	b121      	cbz	r1, 40a67c <__ascii_wctomb+0xc>
  40a672:	2aff      	cmp	r2, #255	; 0xff
  40a674:	d804      	bhi.n	40a680 <__ascii_wctomb+0x10>
  40a676:	700a      	strb	r2, [r1, #0]
  40a678:	2001      	movs	r0, #1
  40a67a:	4770      	bx	lr
  40a67c:	4608      	mov	r0, r1
  40a67e:	4770      	bx	lr
  40a680:	238a      	movs	r3, #138	; 0x8a
  40a682:	6003      	str	r3, [r0, #0]
  40a684:	f04f 30ff 	mov.w	r0, #4294967295
  40a688:	4770      	bx	lr
  40a68a:	bf00      	nop

0040a68c <_write_r>:
  40a68c:	b570      	push	{r4, r5, r6, lr}
  40a68e:	460d      	mov	r5, r1
  40a690:	4c08      	ldr	r4, [pc, #32]	; (40a6b4 <_write_r+0x28>)
  40a692:	4611      	mov	r1, r2
  40a694:	4606      	mov	r6, r0
  40a696:	461a      	mov	r2, r3
  40a698:	4628      	mov	r0, r5
  40a69a:	2300      	movs	r3, #0
  40a69c:	6023      	str	r3, [r4, #0]
  40a69e:	f7f7 f9db 	bl	401a58 <_write>
  40a6a2:	1c43      	adds	r3, r0, #1
  40a6a4:	d000      	beq.n	40a6a8 <_write_r+0x1c>
  40a6a6:	bd70      	pop	{r4, r5, r6, pc}
  40a6a8:	6823      	ldr	r3, [r4, #0]
  40a6aa:	2b00      	cmp	r3, #0
  40a6ac:	d0fb      	beq.n	40a6a6 <_write_r+0x1a>
  40a6ae:	6033      	str	r3, [r6, #0]
  40a6b0:	bd70      	pop	{r4, r5, r6, pc}
  40a6b2:	bf00      	nop
  40a6b4:	2041b888 	.word	0x2041b888

0040a6b8 <__register_exitproc>:
  40a6b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40a6bc:	4d2c      	ldr	r5, [pc, #176]	; (40a770 <__register_exitproc+0xb8>)
  40a6be:	4606      	mov	r6, r0
  40a6c0:	6828      	ldr	r0, [r5, #0]
  40a6c2:	4698      	mov	r8, r3
  40a6c4:	460f      	mov	r7, r1
  40a6c6:	4691      	mov	r9, r2
  40a6c8:	f7ff fc1e 	bl	409f08 <__retarget_lock_acquire_recursive>
  40a6cc:	4b29      	ldr	r3, [pc, #164]	; (40a774 <__register_exitproc+0xbc>)
  40a6ce:	681c      	ldr	r4, [r3, #0]
  40a6d0:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  40a6d4:	2b00      	cmp	r3, #0
  40a6d6:	d03e      	beq.n	40a756 <__register_exitproc+0x9e>
  40a6d8:	685a      	ldr	r2, [r3, #4]
  40a6da:	2a1f      	cmp	r2, #31
  40a6dc:	dc1c      	bgt.n	40a718 <__register_exitproc+0x60>
  40a6de:	f102 0e01 	add.w	lr, r2, #1
  40a6e2:	b176      	cbz	r6, 40a702 <__register_exitproc+0x4a>
  40a6e4:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  40a6e8:	2401      	movs	r4, #1
  40a6ea:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  40a6ee:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  40a6f2:	4094      	lsls	r4, r2
  40a6f4:	4320      	orrs	r0, r4
  40a6f6:	2e02      	cmp	r6, #2
  40a6f8:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  40a6fc:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  40a700:	d023      	beq.n	40a74a <__register_exitproc+0x92>
  40a702:	3202      	adds	r2, #2
  40a704:	f8c3 e004 	str.w	lr, [r3, #4]
  40a708:	6828      	ldr	r0, [r5, #0]
  40a70a:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  40a70e:	f7ff fbfd 	bl	409f0c <__retarget_lock_release_recursive>
  40a712:	2000      	movs	r0, #0
  40a714:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40a718:	4b17      	ldr	r3, [pc, #92]	; (40a778 <__register_exitproc+0xc0>)
  40a71a:	b30b      	cbz	r3, 40a760 <__register_exitproc+0xa8>
  40a71c:	f44f 70c8 	mov.w	r0, #400	; 0x190
  40a720:	f7fd fbc6 	bl	407eb0 <malloc>
  40a724:	4603      	mov	r3, r0
  40a726:	b1d8      	cbz	r0, 40a760 <__register_exitproc+0xa8>
  40a728:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  40a72c:	6002      	str	r2, [r0, #0]
  40a72e:	2100      	movs	r1, #0
  40a730:	6041      	str	r1, [r0, #4]
  40a732:	460a      	mov	r2, r1
  40a734:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  40a738:	f04f 0e01 	mov.w	lr, #1
  40a73c:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  40a740:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  40a744:	2e00      	cmp	r6, #0
  40a746:	d0dc      	beq.n	40a702 <__register_exitproc+0x4a>
  40a748:	e7cc      	b.n	40a6e4 <__register_exitproc+0x2c>
  40a74a:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  40a74e:	430c      	orrs	r4, r1
  40a750:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  40a754:	e7d5      	b.n	40a702 <__register_exitproc+0x4a>
  40a756:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  40a75a:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  40a75e:	e7bb      	b.n	40a6d8 <__register_exitproc+0x20>
  40a760:	6828      	ldr	r0, [r5, #0]
  40a762:	f7ff fbd3 	bl	409f0c <__retarget_lock_release_recursive>
  40a766:	f04f 30ff 	mov.w	r0, #4294967295
  40a76a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40a76e:	bf00      	nop
  40a770:	204008c0 	.word	0x204008c0
  40a774:	0041fe80 	.word	0x0041fe80
  40a778:	00407eb1 	.word	0x00407eb1

0040a77c <_close_r>:
  40a77c:	b538      	push	{r3, r4, r5, lr}
  40a77e:	4c07      	ldr	r4, [pc, #28]	; (40a79c <_close_r+0x20>)
  40a780:	2300      	movs	r3, #0
  40a782:	4605      	mov	r5, r0
  40a784:	4608      	mov	r0, r1
  40a786:	6023      	str	r3, [r4, #0]
  40a788:	f7f8 fd74 	bl	403274 <_close>
  40a78c:	1c43      	adds	r3, r0, #1
  40a78e:	d000      	beq.n	40a792 <_close_r+0x16>
  40a790:	bd38      	pop	{r3, r4, r5, pc}
  40a792:	6823      	ldr	r3, [r4, #0]
  40a794:	2b00      	cmp	r3, #0
  40a796:	d0fb      	beq.n	40a790 <_close_r+0x14>
  40a798:	602b      	str	r3, [r5, #0]
  40a79a:	bd38      	pop	{r3, r4, r5, pc}
  40a79c:	2041b888 	.word	0x2041b888

0040a7a0 <_fclose_r>:
  40a7a0:	b570      	push	{r4, r5, r6, lr}
  40a7a2:	b159      	cbz	r1, 40a7bc <_fclose_r+0x1c>
  40a7a4:	4605      	mov	r5, r0
  40a7a6:	460c      	mov	r4, r1
  40a7a8:	b110      	cbz	r0, 40a7b0 <_fclose_r+0x10>
  40a7aa:	6b83      	ldr	r3, [r0, #56]	; 0x38
  40a7ac:	2b00      	cmp	r3, #0
  40a7ae:	d03c      	beq.n	40a82a <_fclose_r+0x8a>
  40a7b0:	6e63      	ldr	r3, [r4, #100]	; 0x64
  40a7b2:	07d8      	lsls	r0, r3, #31
  40a7b4:	d505      	bpl.n	40a7c2 <_fclose_r+0x22>
  40a7b6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40a7ba:	b92b      	cbnz	r3, 40a7c8 <_fclose_r+0x28>
  40a7bc:	2600      	movs	r6, #0
  40a7be:	4630      	mov	r0, r6
  40a7c0:	bd70      	pop	{r4, r5, r6, pc}
  40a7c2:	89a3      	ldrh	r3, [r4, #12]
  40a7c4:	0599      	lsls	r1, r3, #22
  40a7c6:	d53c      	bpl.n	40a842 <_fclose_r+0xa2>
  40a7c8:	4621      	mov	r1, r4
  40a7ca:	4628      	mov	r0, r5
  40a7cc:	f7fe fee4 	bl	409598 <__sflush_r>
  40a7d0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  40a7d2:	4606      	mov	r6, r0
  40a7d4:	b133      	cbz	r3, 40a7e4 <_fclose_r+0x44>
  40a7d6:	69e1      	ldr	r1, [r4, #28]
  40a7d8:	4628      	mov	r0, r5
  40a7da:	4798      	blx	r3
  40a7dc:	2800      	cmp	r0, #0
  40a7de:	bfb8      	it	lt
  40a7e0:	f04f 36ff 	movlt.w	r6, #4294967295
  40a7e4:	89a3      	ldrh	r3, [r4, #12]
  40a7e6:	061a      	lsls	r2, r3, #24
  40a7e8:	d422      	bmi.n	40a830 <_fclose_r+0x90>
  40a7ea:	6b21      	ldr	r1, [r4, #48]	; 0x30
  40a7ec:	b141      	cbz	r1, 40a800 <_fclose_r+0x60>
  40a7ee:	f104 0340 	add.w	r3, r4, #64	; 0x40
  40a7f2:	4299      	cmp	r1, r3
  40a7f4:	d002      	beq.n	40a7fc <_fclose_r+0x5c>
  40a7f6:	4628      	mov	r0, r5
  40a7f8:	f7ff f8ec 	bl	4099d4 <_free_r>
  40a7fc:	2300      	movs	r3, #0
  40a7fe:	6323      	str	r3, [r4, #48]	; 0x30
  40a800:	6c61      	ldr	r1, [r4, #68]	; 0x44
  40a802:	b121      	cbz	r1, 40a80e <_fclose_r+0x6e>
  40a804:	4628      	mov	r0, r5
  40a806:	f7ff f8e5 	bl	4099d4 <_free_r>
  40a80a:	2300      	movs	r3, #0
  40a80c:	6463      	str	r3, [r4, #68]	; 0x44
  40a80e:	f7fe ffe7 	bl	4097e0 <__sfp_lock_acquire>
  40a812:	6e63      	ldr	r3, [r4, #100]	; 0x64
  40a814:	2200      	movs	r2, #0
  40a816:	07db      	lsls	r3, r3, #31
  40a818:	81a2      	strh	r2, [r4, #12]
  40a81a:	d50e      	bpl.n	40a83a <_fclose_r+0x9a>
  40a81c:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40a81e:	f7ff fb71 	bl	409f04 <__retarget_lock_close_recursive>
  40a822:	f7fe ffe3 	bl	4097ec <__sfp_lock_release>
  40a826:	4630      	mov	r0, r6
  40a828:	bd70      	pop	{r4, r5, r6, pc}
  40a82a:	f7fe ffad 	bl	409788 <__sinit>
  40a82e:	e7bf      	b.n	40a7b0 <_fclose_r+0x10>
  40a830:	6921      	ldr	r1, [r4, #16]
  40a832:	4628      	mov	r0, r5
  40a834:	f7ff f8ce 	bl	4099d4 <_free_r>
  40a838:	e7d7      	b.n	40a7ea <_fclose_r+0x4a>
  40a83a:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40a83c:	f7ff fb66 	bl	409f0c <__retarget_lock_release_recursive>
  40a840:	e7ec      	b.n	40a81c <_fclose_r+0x7c>
  40a842:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40a844:	f7ff fb60 	bl	409f08 <__retarget_lock_acquire_recursive>
  40a848:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40a84c:	2b00      	cmp	r3, #0
  40a84e:	d1bb      	bne.n	40a7c8 <_fclose_r+0x28>
  40a850:	6e66      	ldr	r6, [r4, #100]	; 0x64
  40a852:	f016 0601 	ands.w	r6, r6, #1
  40a856:	d1b1      	bne.n	40a7bc <_fclose_r+0x1c>
  40a858:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40a85a:	f7ff fb57 	bl	409f0c <__retarget_lock_release_recursive>
  40a85e:	4630      	mov	r0, r6
  40a860:	bd70      	pop	{r4, r5, r6, pc}
  40a862:	bf00      	nop

0040a864 <_fstat_r>:
  40a864:	b538      	push	{r3, r4, r5, lr}
  40a866:	460b      	mov	r3, r1
  40a868:	4c07      	ldr	r4, [pc, #28]	; (40a888 <_fstat_r+0x24>)
  40a86a:	4605      	mov	r5, r0
  40a86c:	4611      	mov	r1, r2
  40a86e:	4618      	mov	r0, r3
  40a870:	2300      	movs	r3, #0
  40a872:	6023      	str	r3, [r4, #0]
  40a874:	f7f8 fd02 	bl	40327c <_fstat>
  40a878:	1c43      	adds	r3, r0, #1
  40a87a:	d000      	beq.n	40a87e <_fstat_r+0x1a>
  40a87c:	bd38      	pop	{r3, r4, r5, pc}
  40a87e:	6823      	ldr	r3, [r4, #0]
  40a880:	2b00      	cmp	r3, #0
  40a882:	d0fb      	beq.n	40a87c <_fstat_r+0x18>
  40a884:	602b      	str	r3, [r5, #0]
  40a886:	bd38      	pop	{r3, r4, r5, pc}
  40a888:	2041b888 	.word	0x2041b888

0040a88c <_isatty_r>:
  40a88c:	b538      	push	{r3, r4, r5, lr}
  40a88e:	4c07      	ldr	r4, [pc, #28]	; (40a8ac <_isatty_r+0x20>)
  40a890:	2300      	movs	r3, #0
  40a892:	4605      	mov	r5, r0
  40a894:	4608      	mov	r0, r1
  40a896:	6023      	str	r3, [r4, #0]
  40a898:	f7f8 fcf6 	bl	403288 <_isatty>
  40a89c:	1c43      	adds	r3, r0, #1
  40a89e:	d000      	beq.n	40a8a2 <_isatty_r+0x16>
  40a8a0:	bd38      	pop	{r3, r4, r5, pc}
  40a8a2:	6823      	ldr	r3, [r4, #0]
  40a8a4:	2b00      	cmp	r3, #0
  40a8a6:	d0fb      	beq.n	40a8a0 <_isatty_r+0x14>
  40a8a8:	602b      	str	r3, [r5, #0]
  40a8aa:	bd38      	pop	{r3, r4, r5, pc}
  40a8ac:	2041b888 	.word	0x2041b888

0040a8b0 <_lseek_r>:
  40a8b0:	b570      	push	{r4, r5, r6, lr}
  40a8b2:	460d      	mov	r5, r1
  40a8b4:	4c08      	ldr	r4, [pc, #32]	; (40a8d8 <_lseek_r+0x28>)
  40a8b6:	4611      	mov	r1, r2
  40a8b8:	4606      	mov	r6, r0
  40a8ba:	461a      	mov	r2, r3
  40a8bc:	4628      	mov	r0, r5
  40a8be:	2300      	movs	r3, #0
  40a8c0:	6023      	str	r3, [r4, #0]
  40a8c2:	f7f8 fce3 	bl	40328c <_lseek>
  40a8c6:	1c43      	adds	r3, r0, #1
  40a8c8:	d000      	beq.n	40a8cc <_lseek_r+0x1c>
  40a8ca:	bd70      	pop	{r4, r5, r6, pc}
  40a8cc:	6823      	ldr	r3, [r4, #0]
  40a8ce:	2b00      	cmp	r3, #0
  40a8d0:	d0fb      	beq.n	40a8ca <_lseek_r+0x1a>
  40a8d2:	6033      	str	r3, [r6, #0]
  40a8d4:	bd70      	pop	{r4, r5, r6, pc}
  40a8d6:	bf00      	nop
  40a8d8:	2041b888 	.word	0x2041b888

0040a8dc <_read_r>:
  40a8dc:	b570      	push	{r4, r5, r6, lr}
  40a8de:	460d      	mov	r5, r1
  40a8e0:	4c08      	ldr	r4, [pc, #32]	; (40a904 <_read_r+0x28>)
  40a8e2:	4611      	mov	r1, r2
  40a8e4:	4606      	mov	r6, r0
  40a8e6:	461a      	mov	r2, r3
  40a8e8:	4628      	mov	r0, r5
  40a8ea:	2300      	movs	r3, #0
  40a8ec:	6023      	str	r3, [r4, #0]
  40a8ee:	f7f7 f895 	bl	401a1c <_read>
  40a8f2:	1c43      	adds	r3, r0, #1
  40a8f4:	d000      	beq.n	40a8f8 <_read_r+0x1c>
  40a8f6:	bd70      	pop	{r4, r5, r6, pc}
  40a8f8:	6823      	ldr	r3, [r4, #0]
  40a8fa:	2b00      	cmp	r3, #0
  40a8fc:	d0fb      	beq.n	40a8f6 <_read_r+0x1a>
  40a8fe:	6033      	str	r3, [r6, #0]
  40a900:	bd70      	pop	{r4, r5, r6, pc}
  40a902:	bf00      	nop
  40a904:	2041b888 	.word	0x2041b888

0040a908 <__aeabi_uldivmod>:
  40a908:	b953      	cbnz	r3, 40a920 <__aeabi_uldivmod+0x18>
  40a90a:	b94a      	cbnz	r2, 40a920 <__aeabi_uldivmod+0x18>
  40a90c:	2900      	cmp	r1, #0
  40a90e:	bf08      	it	eq
  40a910:	2800      	cmpeq	r0, #0
  40a912:	bf1c      	itt	ne
  40a914:	f04f 31ff 	movne.w	r1, #4294967295
  40a918:	f04f 30ff 	movne.w	r0, #4294967295
  40a91c:	f000 b97a 	b.w	40ac14 <__aeabi_idiv0>
  40a920:	f1ad 0c08 	sub.w	ip, sp, #8
  40a924:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  40a928:	f000 f806 	bl	40a938 <__udivmoddi4>
  40a92c:	f8dd e004 	ldr.w	lr, [sp, #4]
  40a930:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  40a934:	b004      	add	sp, #16
  40a936:	4770      	bx	lr

0040a938 <__udivmoddi4>:
  40a938:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  40a93c:	468c      	mov	ip, r1
  40a93e:	460d      	mov	r5, r1
  40a940:	4604      	mov	r4, r0
  40a942:	9e08      	ldr	r6, [sp, #32]
  40a944:	2b00      	cmp	r3, #0
  40a946:	d151      	bne.n	40a9ec <__udivmoddi4+0xb4>
  40a948:	428a      	cmp	r2, r1
  40a94a:	4617      	mov	r7, r2
  40a94c:	d96d      	bls.n	40aa2a <__udivmoddi4+0xf2>
  40a94e:	fab2 fe82 	clz	lr, r2
  40a952:	f1be 0f00 	cmp.w	lr, #0
  40a956:	d00b      	beq.n	40a970 <__udivmoddi4+0x38>
  40a958:	f1ce 0c20 	rsb	ip, lr, #32
  40a95c:	fa01 f50e 	lsl.w	r5, r1, lr
  40a960:	fa20 fc0c 	lsr.w	ip, r0, ip
  40a964:	fa02 f70e 	lsl.w	r7, r2, lr
  40a968:	ea4c 0c05 	orr.w	ip, ip, r5
  40a96c:	fa00 f40e 	lsl.w	r4, r0, lr
  40a970:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  40a974:	0c25      	lsrs	r5, r4, #16
  40a976:	fbbc f8fa 	udiv	r8, ip, sl
  40a97a:	fa1f f987 	uxth.w	r9, r7
  40a97e:	fb0a cc18 	mls	ip, sl, r8, ip
  40a982:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  40a986:	fb08 f309 	mul.w	r3, r8, r9
  40a98a:	42ab      	cmp	r3, r5
  40a98c:	d90a      	bls.n	40a9a4 <__udivmoddi4+0x6c>
  40a98e:	19ed      	adds	r5, r5, r7
  40a990:	f108 32ff 	add.w	r2, r8, #4294967295
  40a994:	f080 8123 	bcs.w	40abde <__udivmoddi4+0x2a6>
  40a998:	42ab      	cmp	r3, r5
  40a99a:	f240 8120 	bls.w	40abde <__udivmoddi4+0x2a6>
  40a99e:	f1a8 0802 	sub.w	r8, r8, #2
  40a9a2:	443d      	add	r5, r7
  40a9a4:	1aed      	subs	r5, r5, r3
  40a9a6:	b2a4      	uxth	r4, r4
  40a9a8:	fbb5 f0fa 	udiv	r0, r5, sl
  40a9ac:	fb0a 5510 	mls	r5, sl, r0, r5
  40a9b0:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  40a9b4:	fb00 f909 	mul.w	r9, r0, r9
  40a9b8:	45a1      	cmp	r9, r4
  40a9ba:	d909      	bls.n	40a9d0 <__udivmoddi4+0x98>
  40a9bc:	19e4      	adds	r4, r4, r7
  40a9be:	f100 33ff 	add.w	r3, r0, #4294967295
  40a9c2:	f080 810a 	bcs.w	40abda <__udivmoddi4+0x2a2>
  40a9c6:	45a1      	cmp	r9, r4
  40a9c8:	f240 8107 	bls.w	40abda <__udivmoddi4+0x2a2>
  40a9cc:	3802      	subs	r0, #2
  40a9ce:	443c      	add	r4, r7
  40a9d0:	eba4 0409 	sub.w	r4, r4, r9
  40a9d4:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  40a9d8:	2100      	movs	r1, #0
  40a9da:	2e00      	cmp	r6, #0
  40a9dc:	d061      	beq.n	40aaa2 <__udivmoddi4+0x16a>
  40a9de:	fa24 f40e 	lsr.w	r4, r4, lr
  40a9e2:	2300      	movs	r3, #0
  40a9e4:	6034      	str	r4, [r6, #0]
  40a9e6:	6073      	str	r3, [r6, #4]
  40a9e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40a9ec:	428b      	cmp	r3, r1
  40a9ee:	d907      	bls.n	40aa00 <__udivmoddi4+0xc8>
  40a9f0:	2e00      	cmp	r6, #0
  40a9f2:	d054      	beq.n	40aa9e <__udivmoddi4+0x166>
  40a9f4:	2100      	movs	r1, #0
  40a9f6:	e886 0021 	stmia.w	r6, {r0, r5}
  40a9fa:	4608      	mov	r0, r1
  40a9fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40aa00:	fab3 f183 	clz	r1, r3
  40aa04:	2900      	cmp	r1, #0
  40aa06:	f040 808e 	bne.w	40ab26 <__udivmoddi4+0x1ee>
  40aa0a:	42ab      	cmp	r3, r5
  40aa0c:	d302      	bcc.n	40aa14 <__udivmoddi4+0xdc>
  40aa0e:	4282      	cmp	r2, r0
  40aa10:	f200 80fa 	bhi.w	40ac08 <__udivmoddi4+0x2d0>
  40aa14:	1a84      	subs	r4, r0, r2
  40aa16:	eb65 0503 	sbc.w	r5, r5, r3
  40aa1a:	2001      	movs	r0, #1
  40aa1c:	46ac      	mov	ip, r5
  40aa1e:	2e00      	cmp	r6, #0
  40aa20:	d03f      	beq.n	40aaa2 <__udivmoddi4+0x16a>
  40aa22:	e886 1010 	stmia.w	r6, {r4, ip}
  40aa26:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40aa2a:	b912      	cbnz	r2, 40aa32 <__udivmoddi4+0xfa>
  40aa2c:	2701      	movs	r7, #1
  40aa2e:	fbb7 f7f2 	udiv	r7, r7, r2
  40aa32:	fab7 fe87 	clz	lr, r7
  40aa36:	f1be 0f00 	cmp.w	lr, #0
  40aa3a:	d134      	bne.n	40aaa6 <__udivmoddi4+0x16e>
  40aa3c:	1beb      	subs	r3, r5, r7
  40aa3e:	0c3a      	lsrs	r2, r7, #16
  40aa40:	fa1f fc87 	uxth.w	ip, r7
  40aa44:	2101      	movs	r1, #1
  40aa46:	fbb3 f8f2 	udiv	r8, r3, r2
  40aa4a:	0c25      	lsrs	r5, r4, #16
  40aa4c:	fb02 3318 	mls	r3, r2, r8, r3
  40aa50:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  40aa54:	fb0c f308 	mul.w	r3, ip, r8
  40aa58:	42ab      	cmp	r3, r5
  40aa5a:	d907      	bls.n	40aa6c <__udivmoddi4+0x134>
  40aa5c:	19ed      	adds	r5, r5, r7
  40aa5e:	f108 30ff 	add.w	r0, r8, #4294967295
  40aa62:	d202      	bcs.n	40aa6a <__udivmoddi4+0x132>
  40aa64:	42ab      	cmp	r3, r5
  40aa66:	f200 80d1 	bhi.w	40ac0c <__udivmoddi4+0x2d4>
  40aa6a:	4680      	mov	r8, r0
  40aa6c:	1aed      	subs	r5, r5, r3
  40aa6e:	b2a3      	uxth	r3, r4
  40aa70:	fbb5 f0f2 	udiv	r0, r5, r2
  40aa74:	fb02 5510 	mls	r5, r2, r0, r5
  40aa78:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  40aa7c:	fb0c fc00 	mul.w	ip, ip, r0
  40aa80:	45a4      	cmp	ip, r4
  40aa82:	d907      	bls.n	40aa94 <__udivmoddi4+0x15c>
  40aa84:	19e4      	adds	r4, r4, r7
  40aa86:	f100 33ff 	add.w	r3, r0, #4294967295
  40aa8a:	d202      	bcs.n	40aa92 <__udivmoddi4+0x15a>
  40aa8c:	45a4      	cmp	ip, r4
  40aa8e:	f200 80b8 	bhi.w	40ac02 <__udivmoddi4+0x2ca>
  40aa92:	4618      	mov	r0, r3
  40aa94:	eba4 040c 	sub.w	r4, r4, ip
  40aa98:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  40aa9c:	e79d      	b.n	40a9da <__udivmoddi4+0xa2>
  40aa9e:	4631      	mov	r1, r6
  40aaa0:	4630      	mov	r0, r6
  40aaa2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40aaa6:	f1ce 0420 	rsb	r4, lr, #32
  40aaaa:	fa05 f30e 	lsl.w	r3, r5, lr
  40aaae:	fa07 f70e 	lsl.w	r7, r7, lr
  40aab2:	fa20 f804 	lsr.w	r8, r0, r4
  40aab6:	0c3a      	lsrs	r2, r7, #16
  40aab8:	fa25 f404 	lsr.w	r4, r5, r4
  40aabc:	ea48 0803 	orr.w	r8, r8, r3
  40aac0:	fbb4 f1f2 	udiv	r1, r4, r2
  40aac4:	ea4f 4518 	mov.w	r5, r8, lsr #16
  40aac8:	fb02 4411 	mls	r4, r2, r1, r4
  40aacc:	fa1f fc87 	uxth.w	ip, r7
  40aad0:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  40aad4:	fb01 f30c 	mul.w	r3, r1, ip
  40aad8:	42ab      	cmp	r3, r5
  40aada:	fa00 f40e 	lsl.w	r4, r0, lr
  40aade:	d909      	bls.n	40aaf4 <__udivmoddi4+0x1bc>
  40aae0:	19ed      	adds	r5, r5, r7
  40aae2:	f101 30ff 	add.w	r0, r1, #4294967295
  40aae6:	f080 808a 	bcs.w	40abfe <__udivmoddi4+0x2c6>
  40aaea:	42ab      	cmp	r3, r5
  40aaec:	f240 8087 	bls.w	40abfe <__udivmoddi4+0x2c6>
  40aaf0:	3902      	subs	r1, #2
  40aaf2:	443d      	add	r5, r7
  40aaf4:	1aeb      	subs	r3, r5, r3
  40aaf6:	fa1f f588 	uxth.w	r5, r8
  40aafa:	fbb3 f0f2 	udiv	r0, r3, r2
  40aafe:	fb02 3310 	mls	r3, r2, r0, r3
  40ab02:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  40ab06:	fb00 f30c 	mul.w	r3, r0, ip
  40ab0a:	42ab      	cmp	r3, r5
  40ab0c:	d907      	bls.n	40ab1e <__udivmoddi4+0x1e6>
  40ab0e:	19ed      	adds	r5, r5, r7
  40ab10:	f100 38ff 	add.w	r8, r0, #4294967295
  40ab14:	d26f      	bcs.n	40abf6 <__udivmoddi4+0x2be>
  40ab16:	42ab      	cmp	r3, r5
  40ab18:	d96d      	bls.n	40abf6 <__udivmoddi4+0x2be>
  40ab1a:	3802      	subs	r0, #2
  40ab1c:	443d      	add	r5, r7
  40ab1e:	1aeb      	subs	r3, r5, r3
  40ab20:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  40ab24:	e78f      	b.n	40aa46 <__udivmoddi4+0x10e>
  40ab26:	f1c1 0720 	rsb	r7, r1, #32
  40ab2a:	fa22 f807 	lsr.w	r8, r2, r7
  40ab2e:	408b      	lsls	r3, r1
  40ab30:	fa05 f401 	lsl.w	r4, r5, r1
  40ab34:	ea48 0303 	orr.w	r3, r8, r3
  40ab38:	fa20 fe07 	lsr.w	lr, r0, r7
  40ab3c:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  40ab40:	40fd      	lsrs	r5, r7
  40ab42:	ea4e 0e04 	orr.w	lr, lr, r4
  40ab46:	fbb5 f9fc 	udiv	r9, r5, ip
  40ab4a:	ea4f 441e 	mov.w	r4, lr, lsr #16
  40ab4e:	fb0c 5519 	mls	r5, ip, r9, r5
  40ab52:	fa1f f883 	uxth.w	r8, r3
  40ab56:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  40ab5a:	fb09 f408 	mul.w	r4, r9, r8
  40ab5e:	42ac      	cmp	r4, r5
  40ab60:	fa02 f201 	lsl.w	r2, r2, r1
  40ab64:	fa00 fa01 	lsl.w	sl, r0, r1
  40ab68:	d908      	bls.n	40ab7c <__udivmoddi4+0x244>
  40ab6a:	18ed      	adds	r5, r5, r3
  40ab6c:	f109 30ff 	add.w	r0, r9, #4294967295
  40ab70:	d243      	bcs.n	40abfa <__udivmoddi4+0x2c2>
  40ab72:	42ac      	cmp	r4, r5
  40ab74:	d941      	bls.n	40abfa <__udivmoddi4+0x2c2>
  40ab76:	f1a9 0902 	sub.w	r9, r9, #2
  40ab7a:	441d      	add	r5, r3
  40ab7c:	1b2d      	subs	r5, r5, r4
  40ab7e:	fa1f fe8e 	uxth.w	lr, lr
  40ab82:	fbb5 f0fc 	udiv	r0, r5, ip
  40ab86:	fb0c 5510 	mls	r5, ip, r0, r5
  40ab8a:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  40ab8e:	fb00 f808 	mul.w	r8, r0, r8
  40ab92:	45a0      	cmp	r8, r4
  40ab94:	d907      	bls.n	40aba6 <__udivmoddi4+0x26e>
  40ab96:	18e4      	adds	r4, r4, r3
  40ab98:	f100 35ff 	add.w	r5, r0, #4294967295
  40ab9c:	d229      	bcs.n	40abf2 <__udivmoddi4+0x2ba>
  40ab9e:	45a0      	cmp	r8, r4
  40aba0:	d927      	bls.n	40abf2 <__udivmoddi4+0x2ba>
  40aba2:	3802      	subs	r0, #2
  40aba4:	441c      	add	r4, r3
  40aba6:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  40abaa:	eba4 0408 	sub.w	r4, r4, r8
  40abae:	fba0 8902 	umull	r8, r9, r0, r2
  40abb2:	454c      	cmp	r4, r9
  40abb4:	46c6      	mov	lr, r8
  40abb6:	464d      	mov	r5, r9
  40abb8:	d315      	bcc.n	40abe6 <__udivmoddi4+0x2ae>
  40abba:	d012      	beq.n	40abe2 <__udivmoddi4+0x2aa>
  40abbc:	b156      	cbz	r6, 40abd4 <__udivmoddi4+0x29c>
  40abbe:	ebba 030e 	subs.w	r3, sl, lr
  40abc2:	eb64 0405 	sbc.w	r4, r4, r5
  40abc6:	fa04 f707 	lsl.w	r7, r4, r7
  40abca:	40cb      	lsrs	r3, r1
  40abcc:	431f      	orrs	r7, r3
  40abce:	40cc      	lsrs	r4, r1
  40abd0:	6037      	str	r7, [r6, #0]
  40abd2:	6074      	str	r4, [r6, #4]
  40abd4:	2100      	movs	r1, #0
  40abd6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40abda:	4618      	mov	r0, r3
  40abdc:	e6f8      	b.n	40a9d0 <__udivmoddi4+0x98>
  40abde:	4690      	mov	r8, r2
  40abe0:	e6e0      	b.n	40a9a4 <__udivmoddi4+0x6c>
  40abe2:	45c2      	cmp	sl, r8
  40abe4:	d2ea      	bcs.n	40abbc <__udivmoddi4+0x284>
  40abe6:	ebb8 0e02 	subs.w	lr, r8, r2
  40abea:	eb69 0503 	sbc.w	r5, r9, r3
  40abee:	3801      	subs	r0, #1
  40abf0:	e7e4      	b.n	40abbc <__udivmoddi4+0x284>
  40abf2:	4628      	mov	r0, r5
  40abf4:	e7d7      	b.n	40aba6 <__udivmoddi4+0x26e>
  40abf6:	4640      	mov	r0, r8
  40abf8:	e791      	b.n	40ab1e <__udivmoddi4+0x1e6>
  40abfa:	4681      	mov	r9, r0
  40abfc:	e7be      	b.n	40ab7c <__udivmoddi4+0x244>
  40abfe:	4601      	mov	r1, r0
  40ac00:	e778      	b.n	40aaf4 <__udivmoddi4+0x1bc>
  40ac02:	3802      	subs	r0, #2
  40ac04:	443c      	add	r4, r7
  40ac06:	e745      	b.n	40aa94 <__udivmoddi4+0x15c>
  40ac08:	4608      	mov	r0, r1
  40ac0a:	e708      	b.n	40aa1e <__udivmoddi4+0xe6>
  40ac0c:	f1a8 0802 	sub.w	r8, r8, #2
  40ac10:	443d      	add	r5, r7
  40ac12:	e72b      	b.n	40aa6c <__udivmoddi4+0x134>

0040ac14 <__aeabi_idiv0>:
  40ac14:	4770      	bx	lr
  40ac16:	bf00      	nop
  40ac18:	092d452d 	.word	0x092d452d
  40ac1c:	39384d57 	.word	0x39384d57
  40ac20:	69203430 	.word	0x69203430
  40ac24:	6974696e 	.word	0x6974696e
  40ac28:	7a696c61 	.word	0x7a696c61
  40ac2c:	6f697461 	.word	0x6f697461
  40ac30:	6166206e 	.word	0x6166206e
  40ac34:	64656c69 	.word	0x64656c69
  40ac38:	00000d2e 	.word	0x00000d2e
  40ac3c:	39384d57 	.word	0x39384d57
  40ac40:	6e203430 	.word	0x6e203430
  40ac44:	6620746f 	.word	0x6620746f
  40ac48:	646e756f 	.word	0x646e756f
  40ac4c:	000d0a21 	.word	0x000d0a21
  40ac50:	0a05000d 	.word	0x0a05000d
  40ac54:	0000004b 	.word	0x0000004b
  40ac58:	00001932 	.word	0x00001932
  40ac5c:	0e00008b 	.word	0x0e00008b
  40ac60:	32800008 	.word	0x32800008
  40ac64:	030a0205 	.word	0x030a0205
  40ac68:	0f022003 	.word	0x0f022003
  40ac6c:	00000a0f 	.word	0x00000a0f
  40ac70:	18180000 	.word	0x18180000
  40ac74:	00002020 	.word	0x00002020
  40ac78:	0a000000 	.word	0x0a000000
  40ac7c:	02020000 	.word	0x02020000
  40ac80:	18180000 	.word	0x18180000
  40ac84:	00030000 	.word	0x00030000
  40ac88:	00000000 	.word	0x00000000
  40ac8c:	18010002 	.word	0x18010002
  40ac90:	1e1e1e1e 	.word	0x1e1e1e1e
  40ac94:	1e1e1e1e 	.word	0x1e1e1e1e
  40ac98:	1e1e1e1e 	.word	0x1e1e1e1e
  40ac9c:	00001e1e 	.word	0x00001e1e
	...

0040b000 <hanning>:
  40b000:	00000000 371e38d8 381e3877 38b1fece     .....8.7w8.8...8
  40b010:	391e36ef 3977340c 39b1faf0 39f23daf     .6.9.4w9...9.=.9
  40b020:	3a1e30d3 3a48330e 3a772520 3a95834b     .0.:.3H: %w:K..:
  40b030:	3ab1eb78 3ad0cad1 3af22108 3b0af6e6     x..:...:.!.:...;
  40b040:	3b1e1863 3b3274ca 3b480bea 3b5edd8d     c..;.t2;..H;..^;
  40b050:	3b76e97a 3b8817bb 3b9557a2 3ba33451     z.v;...;.W.;Q4.;
  40b060:	3bb1ada5 3bc0c37a 3bd075ac 3be0c413     ...;z..;.u.;...;
  40b070:	3bf1ae87 3c019a6f 3c0aab77 3c140a45     ...;o..<w..<E..<
  40b080:	3c1db6c1 3c27b0d3 3c31f863 3c3c8d58     ...<..'<c.1<X.<<
  40b090:	3c476f97 3c529f05 3c5e1b88 3c69e501     .oG<..R<..^<..i<
  40b0a0:	3c75fb56 3c812f32 3c878709 3c8e051f     V.u<2/.<...<...<
  40b0b0:	3c94a964 3c9b73c8 3ca26439 3ca97aa8     d..<.s.<9d.<.z.<
  40b0c0:	3cb0b701 3cb81934 3cbfa12e 3cc74edd     ...<4..<...<.N.<
  40b0d0:	3ccf222d 3cd71b0b 3cdf3963 3ce77d22     -".<...<c9.<"}.<
  40b0e0:	3cefe633 3cf87481 3d0093fb 3d050040     3..<.t.<...=@..=
  40b0f0:	3d097f02 3d0e1038 3d12b3d5 3d1769cf     ...=8..=...=.i.=
  40b100:	3d1c321a 3d210caa 3d25f972 3d2af868     .2.=..!=r.%=h.*=
  40b110:	3d30097e 3d352ca8 3d3a61d8 3d3fa904     ~.0=.,5=.a:=..?=
  40b120:	3d45021c 3d4a6d15 3d4fe9e0 3d557871     ..E=.mJ=..O=qxU=
  40b130:	3d5b18b9 3d60caaa 3d668e36 3d6c6350     ..[=..`=6.f=Pcl=
  40b140:	3d7249e8 3d7841f1 3d7e4b5b 3d82330c     .Ir=.Ax=[K~=.3.=
  40b150:	3d85490b 3d8867a5 3d8b8ed2 3d8ebe88     .I.=.g.=...=...=
  40b160:	3d91f6c2 3d953776 3d98809d 3d9bd22e     ...=v7.=...=...=
  40b170:	3d9f2c21 3da28e6f 3da5f90e 3da96bf7     !,.=o..=...=.k.=
  40b180:	3dace720 3db06a82 3db3f612 3db789ca      ..=.j.=...=...=
  40b190:	3dbb259f 3dbec989 3dc2757f 3dc62978     .%.=...=.u.=x).=
  40b1a0:	3dc9e56b 3dcda94d 3dd17517 3dd548bf     k..=M..=.u.=.H.=
  40b1b0:	3dd9243c 3ddd0783 3de0f28a 3de4e549     <$.=...=...=I..=
  40b1c0:	3de8dfb5 3dece1c7 3df0eb71 3df4fcac     ...=...=q..=...=
  40b1d0:	3df9156d 3dfd35a8 3e00aeab 3e02c636     m..=.5.=...>6..>
  40b1e0:	3e04e16f 3e070051 3e0922d8 3e0b48fd     o..>Q..>.".>.H.>
  40b1f0:	3e0d72bb 3e0fa00e 3e11d0ef 3e14055a     .r.>...>...>Z..>
  40b200:	3e163d48 3e1878b5 3e1ab79b 3e1cf9f4     H=.>.x.>...>...>
  40b210:	3e1f3fba 3e2188e9 3e23d57a 3e262568     .?.>..!>z.#>h%&>
  40b220:	3e2878ad 3e2acf43 3e2d2925 3e2f864c     .x(>C.*>%)->L./>
  40b230:	3e31e6b3 3e344a54 3e36b12a 3e391b2d     ..1>TJ4>*.6>-.9>
  40b240:	3e3b8858 3e3df8a6 3e406c10 3e42e290     X.;>..=>.l@>..B>
  40b250:	3e455c1f 3e47d8b9 3e4a5856 3e4cdaf1     .\E>..G>VXJ>..L>
  40b260:	3e4f6084 3e51e907 3e547475 3e5702c8     .`O>..Q>utT>..W>
  40b270:	3e5993f9 3e5c2802 3e5ebedc 3e615881     ..Y>.(\>..^>.Xa>
  40b280:	3e63f4eb 3e669414 3e6935f4 3e6bda85     ..c>..f>.5i>..k>
  40b290:	3e6e81c1 3e712ba1 3e73d81f 3e768733     ..n>.+q>..s>3.v>
  40b2a0:	3e7938d8 3e7bed07 3e7ea3b8 3e80ae73     .8y>..{>..~>s..>
  40b2b0:	3e820c45 3e836b4e 3e84cb8b 3e862cf8     E..>Nk.>...>.,.>
  40b2c0:	3e878f93 3e88f358 3e8a5842 3e8bbe50     ...>X..>BX.>P..>
  40b2d0:	3e8d257d 3e8e8dc6 3e8ff728 3e91619e     }%.>...>(..>.a.>
  40b2e0:	3e92cd26 3e9439bc 3e95a75d 3e971604     &..>.9.>]..>...>
  40b2f0:	3e9885af 3e99f659 3e9b6800 3e9cda9f     ...>Y..>.h.>...>
  40b300:	3e9e4e34 3e9fc2ba 3ea1382e 3ea2ae8c     4N.>...>.8.>...>
  40b310:	3ea425d1 3ea59df9 3ea71701 3ea890e4     .%.>...>...>...>
  40b320:	3eaa0ba0 3eab8730 3ead0390 3eae80be     ...>0..>...>...>
  40b330:	3eaffeb6 3eb17d73 3eb2fcf2 3eb47d30     ...>s}.>...>0}.>
  40b340:	3eb5fe29 3eb77fd8 3eb9023b 3eba854d     )..>...>;..>M..>
  40b350:	3ebc090b 3ebd8d71 3ebf127b 3ec09826     ...>q..>{..>&..>
  40b360:	3ec21e6d 3ec3a54d 3ec52cc3 3ec6b4ca     m..>M..>.,.>...>
  40b370:	3ec83d5f 3ec9c67d 3ecb5022 3eccda49     _=.>}..>"P.>I..>
  40b380:	3ece64ee 3ecff00e 3ed17ba5 3ed307af     .d.>...>.{.>...>
  40b390:	3ed49428 3ed6210c 3ed7ae58 3ed93c07     (..>.!.>X..>.<.>
  40b3a0:	3edaca17 3edc5882 3edde746 3edf765d     ...>.X.>F..>]v.>
  40b3b0:	3ee105c6 3ee2957a 3ee42578 3ee5b5ba     ...>z..>x%.>...>
  40b3c0:	3ee7463e 3ee8d6fe 3eea67f8 3eebf927     >F.>...>.g.>'..>
  40b3d0:	3eed8a88 3eef1c16 3ef0adce 3ef23fac     ...>...>...>.?.>
  40b3e0:	3ef3d1ac 3ef563ca 3ef6f602 3ef88851     ...>.c.>...>Q..>
  40b3f0:	3efa1ab2 3efbad22 3efd3f9c 3efed21d     ...>"..>.?.>...>
  40b400:	3f003251 3f00fb92 3f01c4d1 3f028e0c     Q2.?...?...?...?
  40b410:	3f035740 3f04206d 3f04e98e 3f05b2a4     @W.?m .?...?...?
  40b420:	3f067bac 3f0744a4 3f080d89 3f08d65b     .{.?.D.?...?[..?
  40b430:	3f099f17 3f0a67bb 3f0b3046 3f0bf8b5     ...?.g.?F0.?...?
  40b440:	3f0cc106 3f0d8938 3f0e5148 3f0f1935     ...?8..?HQ.?5..?
  40b450:	3f0fe0fc 3f10a89c 3f117013 3f12375f     ...?...?.p.?_7.?
  40b460:	3f12fe7e 3f13c56e 3f148c2d 3f1552ba     ~..?n..?-..?.R.?
  40b470:	3f161911 3f16df32 3f17a51a 3f186ac8     ...?2..?...?.j.?
  40b480:	3f19303a 3f19f56d 3f1aba60 3f1b7f11     :0.?m..?`..?...?
  40b490:	3f1c437e 3f1d07a6 3f1dcb85 3f1e8f1b     ~C.?...?...?...?
  40b4a0:	3f1f5265 3f201562 3f20d80f 3f219a6c     eR.?b. ?.. ?l.!?
  40b4b0:	3f225c75 3f231e29 3f23df86 3f24a08b     u\"?).#?..#?..$?
  40b4c0:	3f256135 3f262183 3f26e173 3f27a102     5a%?.!&?s.&?..'?
  40b4d0:	3f28602f 3f291ef9 3f29dd5d 3f2a9b59     /`(?..)?].)?Y.*?
  40b4e0:	3f2b58ec 3f2c1614 3f2cd2cf 3f2d8f1b     .X+?..,?..,?..-?
  40b4f0:	3f2e4af7 3f2f0660 3f2fc155 3f307bd4     .J.?`./?U./?.{0?
  40b500:	3f3135da 3f31ef68 3f32a879 3f33610e     .51?h.1?y.2?.a3?
  40b510:	3f341923 3f34d0b8 3f3587ca 3f363e58     #.4?..4?..5?X>6?
  40b520:	3f36f460 3f37a9e0 3f385ed6 3f391341     `.6?..7?.^8?A.9?
  40b530:	3f39c71f 3f3a7a6d 3f3b2d2c 3f3bdf58     ..9?mz:?,-;?X.;?
  40b540:	3f3c90f0 3f3d41f2 3f3df25d 3f3ea22f     ..<?.A=?].=?/.>?
  40b550:	3f3f5166 3f400000 3f40adfc 3f415b58     fQ??..@?..@?X[A?
  40b560:	3f420813 3f42b42a 3f435f9d 3f440a69     ..B?*.B?._C?i.D?
  40b570:	3f44b48c 3f455e06 3f4606d5 3f46aef6     ..D?.^E?..F?..F?
  40b580:	3f475668 3f47fd2b 3f48a33b 3f494897     hVG?+.G?;.H?.HI?
  40b590:	3f49ed3f 3f4a912f 3f4b3468 3f4bd6e6     ?.I?/.J?h4K?..K?
  40b5a0:	3f4c78a9 3f4d19af 3f4db9f6 3f4e597d     .xL?..M?..M?}YN?
  40b5b0:	3f4ef843 3f4f9645 3f503382 3f50cff9     C.N?E.O?.3P?..P?
  40b5c0:	3f516ba8 3f52068f 3f52a0aa 3f5339f9     .kQ?..R?..R?.9S?
  40b5d0:	3f53d27a 3f546a2c 3f55010d 3f55971c     z.S?,jT?..U?..U?
  40b5e0:	3f562c58 3f56c0bf 3f57544f 3f57e707     X,V?..V?OTW?..W?
  40b5f0:	3f5878e6 3f5909ea 3f599a12 3f5a295c     .xX?..Y?..Y?\)Z?
  40b600:	3f5ab7c8 3f5b4553 3f5bd1fd 3f5c5dc3     ..Z?SE[?..[?.]\?
  40b610:	3f5ce8a6 3f5d72a2 3f5dfbb8 3f5e83e5     ..\?.r]?..]?..^?
  40b620:	3f5f0b29 3f5f9181 3f6016ee 3f609b6c     )._?.._?..`?l.`?
  40b630:	3f611efc 3f61a19c 3f62234b 3f62a407     ..a?..a?K#b?..b?
  40b640:	3f6323cf 3f63a2a2 3f64207e 3f649d63     .#c?..c?~ d?c.d?
  40b650:	3f651950 3f659442 3f660e39 3f668734     P.e?B.e?9.f?4.f?
  40b660:	3f66ff32 3f677631 3f67ec30 3f68612e     2.f?1vg?0.g?.ah?
  40b670:	3f68d52a 3f694823 3f69ba17 3f6a2b07     *.h?#Hi?..i?.+j?
  40b680:	3f6a9aef 3f6b09d1 3f6b77a9 3f6be478     ..j?..k?.wk?x.k?
  40b690:	3f6c503d 3f6cbaf5 3f6d24a1 3f6d8d3e     =Pl?..l?.$m?>.m?
  40b6a0:	3f6df4cd 3f6e5b4c 3f6ec0bb 3f6f2517     ..m?L[n?..n?.%o?
  40b6b0:	3f6f8861 3f6fea97 3f704bb8 3f70abc4     a.o?..o?.Kp?..p?
  40b6c0:	3f710ab9 3f716897 3f71c55c 3f722108     ..q?.hq?\.q?.!r?
  40b6d0:	3f727b9a 3f72d511 3f732d6c 3f7384aa     .{r?..r?l-s?..s?
  40b6e0:	3f73dacb 3f742fcd 3f7483b0 3f74d673     ..s?./t?..t?s.t?
  40b6f0:	3f752815 3f757895 3f75c7f4 3f76162e     .(u?.xu?..u?..v?
  40b700:	3f766345 3f76af38 3f76fa04 3f7743ab     Ecv?8.v?..v?.Cw?
  40b710:	3f778c2b 3f77d383 3f7819b3 3f785eba     +.w?..w?..x?.^x?
  40b720:	3f78a298 3f78e54b 3f7926d4 3f796731     ..x?K.x?.&y?1gy?
  40b730:	3f79a661 3f79e465 3f7a213c 3f7a5ce5     a.y?e.y?<!z?.\z?
  40b740:	3f7a975f 3f7ad0aa 3f7b08c6 3f7b3fb1     _.z?..z?..{?.?{?
  40b750:	3f7b756c 3f7ba9f6 3f7bdd4d 3f7c0f73     lu{?..{?M.{?s.|?
  40b760:	3f7c4066 3f7c7025 3f7c9eb1 3f7ccc09     f@|?%p|?..|?..|?
  40b770:	3f7cf82d 3f7d231b 3f7d4cd4 3f7d7558     -.|?.#}?.L}?Xu}?
  40b780:	3f7d9ca5 3f7dc2bb 3f7de79b 3f7e0b44     ..}?..}?..}?D.~?
  40b790:	3f7e2db4 3f7e4eed 3f7e6eee 3f7e8db6     .-~?.N~?.n~?..~?
  40b7a0:	3f7eab45 3f7ec79b 3f7ee2b8 3f7efc9b     E.~?..~?..~?..~?
  40b7b0:	3f7f1544 3f7f2cb3 3f7f42e7 3f7f57e1     D..?.,.?.B.?.W.?
  40b7c0:	3f7f6ba0 3f7f7e24 3f7f8f6c 3f7f9f7a     .k.?$~.?l..?z..?
  40b7d0:	3f7fae4c 3f7fbbe2 3f7fc83c 3f7fd35b     L..?...?<..?[..?
  40b7e0:	3f7fdd3e 3f7fe5e4 3f7fed4e 3f7ff37c     >..?...?N..?|..?
  40b7f0:	3f7ff86e 3f7ffc23 3f7ffe9c 3f7fffd8     n..?#..?...?...?
  40b800:	3f7fffd8 3f7ffe9c 3f7ffc23 3f7ff86e     ...?...?#..?n..?
  40b810:	3f7ff37c 3f7fed4e 3f7fe5e4 3f7fdd3e     |..?N..?...?>..?
  40b820:	3f7fd35b 3f7fc83c 3f7fbbe2 3f7fae4c     [..?<..?...?L..?
  40b830:	3f7f9f7a 3f7f8f6c 3f7f7e24 3f7f6ba0     z..?l..?$~.?.k.?
  40b840:	3f7f57e1 3f7f42e7 3f7f2cb3 3f7f1544     .W.?.B.?.,.?D..?
  40b850:	3f7efc9b 3f7ee2b8 3f7ec79b 3f7eab45     ..~?..~?..~?E.~?
  40b860:	3f7e8db6 3f7e6eee 3f7e4eed 3f7e2db4     ..~?.n~?.N~?.-~?
  40b870:	3f7e0b44 3f7de79b 3f7dc2bb 3f7d9ca5     D.~?..}?..}?..}?
  40b880:	3f7d7558 3f7d4cd4 3f7d231b 3f7cf82d     Xu}?.L}?.#}?-.|?
  40b890:	3f7ccc09 3f7c9eb1 3f7c7025 3f7c4066     ..|?..|?%p|?f@|?
  40b8a0:	3f7c0f73 3f7bdd4d 3f7ba9f6 3f7b756c     s.|?M.{?..{?lu{?
  40b8b0:	3f7b3fb1 3f7b08c6 3f7ad0aa 3f7a975f     .?{?..{?..z?_.z?
  40b8c0:	3f7a5ce5 3f7a213c 3f79e465 3f79a661     .\z?<!z?e.y?a.y?
  40b8d0:	3f796731 3f7926d4 3f78e54b 3f78a298     1gy?.&y?K.x?..x?
  40b8e0:	3f785eba 3f7819b3 3f77d383 3f778c2b     .^x?..x?..w?+.w?
  40b8f0:	3f7743ab 3f76fa04 3f76af38 3f766345     .Cw?..v?8.v?Ecv?
  40b900:	3f76162e 3f75c7f4 3f757895 3f752815     ..v?..u?.xu?.(u?
  40b910:	3f74d673 3f7483b0 3f742fcd 3f73dacb     s.t?..t?./t?..s?
  40b920:	3f7384aa 3f732d6c 3f72d511 3f727b9a     ..s?l-s?..r?.{r?
  40b930:	3f722108 3f71c55c 3f716897 3f710ab9     .!r?\.q?.hq?..q?
  40b940:	3f70abc4 3f704bb8 3f6fea97 3f6f8861     ..p?.Kp?..o?a.o?
  40b950:	3f6f2517 3f6ec0bb 3f6e5b4c 3f6df4cd     .%o?..n?L[n?..m?
  40b960:	3f6d8d3e 3f6d24a1 3f6cbaf5 3f6c503d     >.m?.$m?..l?=Pl?
  40b970:	3f6be478 3f6b77a9 3f6b09d1 3f6a9aef     x.k?.wk?..k?..j?
  40b980:	3f6a2b07 3f69ba17 3f694823 3f68d52a     .+j?..i?#Hi?*.h?
  40b990:	3f68612e 3f67ec30 3f677631 3f66ff32     .ah?0.g?1vg?2.f?
  40b9a0:	3f668734 3f660e39 3f659442 3f651950     4.f?9.f?B.e?P.e?
  40b9b0:	3f649d63 3f64207e 3f63a2a2 3f6323cf     c.d?~ d?..c?.#c?
  40b9c0:	3f62a407 3f62234b 3f61a19c 3f611efc     ..b?K#b?..a?..a?
  40b9d0:	3f609b6c 3f6016ee 3f5f9181 3f5f0b29     l.`?..`?.._?)._?
  40b9e0:	3f5e83e5 3f5dfbb8 3f5d72a2 3f5ce8a6     ..^?..]?.r]?..\?
  40b9f0:	3f5c5dc3 3f5bd1fd 3f5b4553 3f5ab7c8     .]\?..[?SE[?..Z?
  40ba00:	3f5a295c 3f599a12 3f5909ea 3f5878e6     \)Z?..Y?..Y?.xX?
  40ba10:	3f57e707 3f57544f 3f56c0bf 3f562c58     ..W?OTW?..V?X,V?
  40ba20:	3f55971c 3f55010d 3f546a2c 3f53d27a     ..U?..U?,jT?z.S?
  40ba30:	3f5339f9 3f52a0aa 3f52068f 3f516ba8     .9S?..R?..R?.kQ?
  40ba40:	3f50cff9 3f503382 3f4f9645 3f4ef843     ..P?.3P?E.O?C.N?
  40ba50:	3f4e597d 3f4db9f6 3f4d19af 3f4c78a9     }YN?..M?..M?.xL?
  40ba60:	3f4bd6e6 3f4b3468 3f4a912f 3f49ed3f     ..K?h4K?/.J??.I?
  40ba70:	3f494897 3f48a33b 3f47fd2b 3f475668     .HI?;.H?+.G?hVG?
  40ba80:	3f46aef6 3f4606d5 3f455e06 3f44b48c     ..F?..F?.^E?..D?
  40ba90:	3f440a69 3f435f9d 3f42b42a 3f420813     i.D?._C?*.B?..B?
  40baa0:	3f415b58 3f40adfc 3f400000 3f3f5166     X[A?..@?..@?fQ??
  40bab0:	3f3ea22f 3f3df25d 3f3d41f2 3f3c90f0     /.>?].=?.A=?..<?
  40bac0:	3f3bdf58 3f3b2d2c 3f3a7a6d 3f39c71f     X.;?,-;?mz:?..9?
  40bad0:	3f391341 3f385ed6 3f37a9e0 3f36f460     A.9?.^8?..7?`.6?
  40bae0:	3f363e58 3f3587ca 3f34d0b8 3f341923     X>6?..5?..4?#.4?
  40baf0:	3f33610e 3f32a879 3f31ef68 3f3135da     .a3?y.2?h.1?.51?
  40bb00:	3f307bd4 3f2fc155 3f2f0660 3f2e4af7     .{0?U./?`./?.J.?
  40bb10:	3f2d8f1b 3f2cd2cf 3f2c1614 3f2b58ec     ..-?..,?..,?.X+?
  40bb20:	3f2a9b59 3f29dd5d 3f291ef9 3f28602f     Y.*?].)?..)?/`(?
  40bb30:	3f27a102 3f26e173 3f262183 3f256135     ..'?s.&?.!&?5a%?
  40bb40:	3f24a08b 3f23df86 3f231e29 3f225c75     ..$?..#?).#?u\"?
  40bb50:	3f219a6c 3f20d80f 3f201562 3f1f5265     l.!?.. ?b. ?eR.?
  40bb60:	3f1e8f1b 3f1dcb85 3f1d07a6 3f1c437e     ...?...?...?~C.?
  40bb70:	3f1b7f11 3f1aba60 3f19f56d 3f19303a     ...?`..?m..?:0.?
  40bb80:	3f186ac8 3f17a51a 3f16df32 3f161911     .j.?...?2..?...?
  40bb90:	3f1552ba 3f148c2d 3f13c56e 3f12fe7e     .R.?-..?n..?~..?
  40bba0:	3f12375f 3f117013 3f10a89c 3f0fe0fc     _7.?.p.?...?...?
  40bbb0:	3f0f1935 3f0e5148 3f0d8938 3f0cc106     5..?HQ.?8..?...?
  40bbc0:	3f0bf8b5 3f0b3046 3f0a67bb 3f099f17     ...?F0.?.g.?...?
  40bbd0:	3f08d65b 3f080d89 3f0744a4 3f067bac     [..?...?.D.?.{.?
  40bbe0:	3f05b2a4 3f04e98e 3f04206d 3f035740     ...?...?m .?@W.?
  40bbf0:	3f028e0c 3f01c4d1 3f00fb92 3f003251     ...?...?...?Q2.?
  40bc00:	3efed21d 3efd3f9c 3efbad22 3efa1ab2     ...>.?.>"..>...>
  40bc10:	3ef88851 3ef6f602 3ef563ca 3ef3d1ac     Q..>...>.c.>...>
  40bc20:	3ef23fac 3ef0adce 3eef1c16 3eed8a88     .?.>...>...>...>
  40bc30:	3eebf927 3eea67f8 3ee8d6fe 3ee7463e     '..>.g.>...>>F.>
  40bc40:	3ee5b5ba 3ee42578 3ee2957a 3ee105c6     ...>x%.>z..>...>
  40bc50:	3edf765d 3edde746 3edc5882 3edaca17     ]v.>F..>.X.>...>
  40bc60:	3ed93c07 3ed7ae58 3ed6210c 3ed49428     .<.>X..>.!.>(..>
  40bc70:	3ed307af 3ed17ba5 3ecff00e 3ece64ee     ...>.{.>...>.d.>
  40bc80:	3eccda49 3ecb5022 3ec9c67d 3ec83d5f     I..>"P.>}..>_=.>
  40bc90:	3ec6b4ca 3ec52cc3 3ec3a54d 3ec21e6d     ...>.,.>M..>m..>
  40bca0:	3ec09826 3ebf127b 3ebd8d71 3ebc090b     &..>{..>q..>...>
  40bcb0:	3eba854d 3eb9023b 3eb77fd8 3eb5fe29     M..>;..>...>)..>
  40bcc0:	3eb47d30 3eb2fcf2 3eb17d73 3eaffeb6     0}.>...>s}.>...>
  40bcd0:	3eae80be 3ead0390 3eab8730 3eaa0ba0     ...>...>0..>...>
  40bce0:	3ea890e4 3ea71701 3ea59df9 3ea425d1     ...>...>...>.%.>
  40bcf0:	3ea2ae8c 3ea1382e 3e9fc2ba 3e9e4e34     ...>.8.>...>4N.>
  40bd00:	3e9cda9f 3e9b6800 3e99f659 3e9885af     ...>.h.>Y..>...>
  40bd10:	3e971604 3e95a75d 3e9439bc 3e92cd26     ...>]..>.9.>&..>
  40bd20:	3e91619e 3e8ff728 3e8e8dc6 3e8d257d     .a.>(..>...>}%.>
  40bd30:	3e8bbe50 3e8a5842 3e88f358 3e878f93     P..>BX.>X..>...>
  40bd40:	3e862cf8 3e84cb8b 3e836b4e 3e820c45     .,.>...>Nk.>E..>
  40bd50:	3e80ae73 3e7ea3b8 3e7bed07 3e7938d8     s..>..~>..{>.8y>
  40bd60:	3e768733 3e73d81f 3e712ba1 3e6e81c1     3.v>..s>.+q>..n>
  40bd70:	3e6bda85 3e6935f4 3e669414 3e63f4eb     ..k>.5i>..f>..c>
  40bd80:	3e615881 3e5ebedc 3e5c2802 3e5993f9     .Xa>..^>.(\>..Y>
  40bd90:	3e5702c8 3e547475 3e51e907 3e4f6084     ..W>utT>..Q>.`O>
  40bda0:	3e4cdaf1 3e4a5856 3e47d8b9 3e455c1f     ..L>VXJ>..G>.\E>
  40bdb0:	3e42e290 3e406c10 3e3df8a6 3e3b8858     ..B>.l@>..=>X.;>
  40bdc0:	3e391b2d 3e36b12a 3e344a54 3e31e6b3     -.9>*.6>TJ4>..1>
  40bdd0:	3e2f864c 3e2d2925 3e2acf43 3e2878ad     L./>%)->C.*>.x(>
  40bde0:	3e262568 3e23d57a 3e2188e9 3e1f3fba     h%&>z.#>..!>.?.>
  40bdf0:	3e1cf9f4 3e1ab79b 3e1878b5 3e163d48     ...>...>.x.>H=.>
  40be00:	3e14055a 3e11d0ef 3e0fa00e 3e0d72bb     Z..>...>...>.r.>
  40be10:	3e0b48fd 3e0922d8 3e070051 3e04e16f     .H.>.".>Q..>o..>
  40be20:	3e02c636 3e00aeab 3dfd35a8 3df9156d     6..>...>.5.=m..=
  40be30:	3df4fcac 3df0eb71 3dece1c7 3de8dfb5     ...=q..=...=...=
  40be40:	3de4e549 3de0f28a 3ddd0783 3dd9243c     I..=...=...=<$.=
  40be50:	3dd548bf 3dd17517 3dcda94d 3dc9e56b     .H.=.u.=M..=k..=
  40be60:	3dc62978 3dc2757f 3dbec989 3dbb259f     x).=.u.=...=.%.=
  40be70:	3db789ca 3db3f612 3db06a82 3dace720     ...=...=.j.= ..=
  40be80:	3da96bf7 3da5f90e 3da28e6f 3d9f2c21     .k.=...=o..=!,.=
  40be90:	3d9bd22e 3d98809d 3d953776 3d91f6c2     ...=...=v7.=...=
  40bea0:	3d8ebe88 3d8b8ed2 3d8867a5 3d85490b     ...=...=.g.=.I.=
  40beb0:	3d82330c 3d7e4b5b 3d7841f1 3d7249e8     .3.=[K~=.Ax=.Ir=
  40bec0:	3d6c6350 3d668e36 3d60caaa 3d5b18b9     Pcl=6.f=..`=..[=
  40bed0:	3d557871 3d4fe9e0 3d4a6d15 3d45021c     qxU=..O=.mJ=..E=
  40bee0:	3d3fa904 3d3a61d8 3d352ca8 3d30097e     ..?=.a:=.,5=~.0=
  40bef0:	3d2af868 3d25f972 3d210caa 3d1c321a     h.*=r.%=..!=.2.=
  40bf00:	3d1769cf 3d12b3d5 3d0e1038 3d097f02     .i.=...=8..=...=
  40bf10:	3d050040 3d0093fb 3cf87481 3cefe633     @..=...=.t.<3..<
  40bf20:	3ce77d22 3cdf3963 3cd71b0b 3ccf222d     "}.<c9.<...<-".<
  40bf30:	3cc74edd 3cbfa12e 3cb81934 3cb0b701     .N.<...<4..<...<
  40bf40:	3ca97aa8 3ca26439 3c9b73c8 3c94a964     .z.<9d.<.s.<d..<
  40bf50:	3c8e051f 3c878709 3c812f32 3c75fb56     ...<...<2/.<V.u<
  40bf60:	3c69e501 3c5e1b88 3c529f05 3c476f97     ..i<..^<..R<.oG<
  40bf70:	3c3c8d58 3c31f863 3c27b0d3 3c1db6c1     X.<<c.1<..'<...<
  40bf80:	3c140a45 3c0aab77 3c019a6f 3bf1ae87     E..<w..<o..<...;
  40bf90:	3be0c413 3bd075ac 3bc0c37a 3bb1ada5     ...;.u.;z..;...;
  40bfa0:	3ba33451 3b9557a2 3b8817bb 3b76e97a     Q4.;.W.;...;z.v;
  40bfb0:	3b5edd8d 3b480bea 3b3274ca 3b1e1863     ..^;..H;.t2;c..;
  40bfc0:	3b0af6e6 3af22108 3ad0cad1 3ab1eb78     ...;.!.:...:x..:
  40bfd0:	3a95834b 3a772520 3a48330e 3a1e30d3     K..: %w:.3H:.0.:
  40bfe0:	39f23daf 39b1faf0 3977340c 391e36ef     .=.9...9.4w9.6.9
  40bff0:	38b1fece 381e3877 371e38d8 00000000     ...8w8.8.8.7....

0040c000 <CSWTCH.7>:
  40c000:	00000100 00000300 00000200              ............

0040c00c <lp_filter_11k>:
  40c00c:	3dec8b44 3eae6320 3eae6320 3dec8b44     D..= c.> c.>D..=

0040c01c <midi_note_frequencies>:
  40c01c:	4102d0e5 410a978d 4112d4fe 411b9168     ...A...A...Ah..A
  40c02c:	4124d0e5 412e9ba6 4138fdf4 41440000     ..$A...A..8A..DA
  40c03c:	414fa5e3 415c0000 41691687 4176f1aa     ..OA..\A..iA..vA
  40c04c:	4182d0e5 418a978d 4192d4fe 419b8f5c     ...A...A...A\..A
  40c05c:	41a4d0e5 41ae9db2 41b90000 41c40000     ...A...A...A...A
  40c06c:	41cfa7f0 41dc0000 41e9147b 41f6f1aa     ...A...A{..A...A
  40c07c:	4202cfdf 420a978d 4212d4fe 421b9062     ...B...B...Bb..B
  40c08c:	4224cfdf 422e9db2 4238fefa 4243fefa     ..$B...B..8B..CB
  40c09c:	424fa6e9 425c0000 4269147b 4276f0a4     ..OB..\B{.iB..vB
  40c0ac:	4282cfdf 428a978d 4292d4fe 429b9062     ...B...B...Bb..B
  40c0bc:	42a4d062 42ae9d2f 42b8ff7d 42c3ff7d     b..B/..B}..B}..B
  40c0cc:	42cfa6e9 42dc0000 42e914fe 42f6f127     ...B...B...B'..B
  40c0dc:	4302d021 430a974c 4312d4fe 431b9021     !..CL..C...C!..C
  40c0ec:	4324d062 432e9d2f 4338ff3b 4343ff7d     b.$C/..C;.8C}.CC
  40c0fc:	434fa6e9 435c0000 436914fe 4376f127     ..OC..\C..iC'.vC
  40c10c:	4382d021 438a976d 4392d51f 439b9042     !..Cm..C...CB..C
  40c11c:	43a4d062 43ae9d2f 43b8ff3b 43c3ff5c     b..C/..C;..C\..C
  40c12c:	43cfa70a 43dc0000 43e914fe 43f6f106     ...C...C...C...C
  40c13c:	4402d010 440a975c 4412d51f 441b9042     ...D\..D...DB..D
  40c14c:	4424d052 442e9d2f 4438ff4c 4443ff6d     R.$D/..DL.8Dm.CD
  40c15c:	444fa6fa 445c0000 446914fe 4476f117     ..OD..\D..iD..vD
  40c16c:	4482d010 448a9764 4492d517 449b9042     ...Dd..D...DB..D
  40c17c:	44a4d052 44ae9d37 44b8ff4c 44c3ff6d     R..D7..DL..Dm..D
  40c18c:	44cfa702 44dc0000 44e914f6 44f6f10e     ...D...D...D...D
  40c19c:	4502d014 450a9760 4512d517 451b9042     ...E`..E...EB..E
  40c1ac:	4524d052 452e9d37 4538ff48 4543ff68     R.$E7..EH.8Eh.CE
  40c1bc:	454fa702 455c0000 456914f6 4576f10e     ..OE..\E..iE..vE
  40c1cc:	4582d012 458a9760 4592d517 459b9042     ...E`..E...EB..E
  40c1dc:	45a4d054 45ae9d37 45b8ff4a 45c3ff6a     T..E7..EJ..Ej..E
  40c1ec:	45cfa700 45dc0000 45e914f6 45f6f110     ...E...E...E...E
  40c1fc:	4602d012 460a9760 4612d518 461b9041     ...F`..F...FA..F
  40c20c:	4624d052 462e9d33 4638ff48 4643ff66     R.$F3..FH.8Ff.CF

0040c21c <twiddleCoef_2048>:
  40c21c:	3f800000 00000000 3f7fffb1 3b490fc7     ...?.......?..I;
  40c22c:	3f7ffec4 3bc90f89 3f7ffd39 3c16cb59     ...?...;9..?Y..<
  40c23c:	3f7ffb11 3c490e90 3f7ff84a 3c7b514b     ...?..I<J..?KQ{<
  40c24c:	3f7ff4e6 3c96c9b6 3f7ff0e3 3cafea69     ...?...<...?i..<
  40c25c:	3f7fec43 3cc90ab0 3f7fe705 3ce22a7b     C..?...<...?{*.<
  40c26c:	3f7fe129 3cfb49b9 3f7fdaaf 3d0a342f     )..?.I.<...?/4.=
  40c27c:	3f7fd398 3d16c32c 3f7fcbe2 3d2351cc     ...?,..=...?.Q#=
  40c28c:	3f7fc38f 3d2fe007 3f7fba9e 3d3c6dd5     ...?../=...?.m<=
  40c29c:	3f7fb10f 3d48fb2f 3f7fa6e3 3d55880e     ...?/.H=...?..U=
  40c2ac:	3f7f9c18 3d621468 3f7f90b1 3d6ea038     ...?h.b=...?8.n=
  40c2bc:	3f7f84ab 3d7b2b74 3f7f7808 3d83db0a     ...?t+{=.x.?...=
  40c2cc:	3f7f6ac7 3d8a200a 3f7f5ce9 3d9064b4     .j.?. .=.\.?.d.=
  40c2dc:	3f7f4e6d 3d96a905 3f7f3f54 3d9cecf9     mN.?...=T?.?...=
  40c2ec:	3f7f2f9d 3da3308c 3f7f1f49 3da973ba     ./.?.0.=I..?.s.=
  40c2fc:	3f7f0e58 3dafb680 3f7efcc9 3db5f8da     X..?...=..~?...=
  40c30c:	3f7eea9d 3dbc3ac3 3f7ed7d4 3dc27c39     ..~?.:.=..~?9|.=
  40c31c:	3f7ec46d 3dc8bd36 3f7eb069 3dcefdb7     m.~?6..=i.~?...=
  40c32c:	3f7e9bc9 3dd53db9 3f7e868b 3ddb7d37     ..~?.=.=..~?7}.=
  40c33c:	3f7e70b0 3de1bc2e 3f7e5a38 3de7fa9a     .p~?...=8Z~?...=
  40c34c:	3f7e4323 3dee3876 3f7e2b72 3df475c0     #C~?v8.=r+~?.u.=
  40c35c:	3f7e1324 3dfab273 3f7dfa38 3e007745     $.~?s..=8.}?Ew.>
  40c36c:	3f7de0b1 3e039502 3f7dc68c 3e06b26e     ..}?...>..}?n..>
  40c37c:	3f7dabcc 3e09cf86 3f7d906e 3e0cec4a     ..}?...>n.}?J..>
  40c38c:	3f7d7474 3e1008b7 3f7d57de 3e1324ca     tt}?...>.W}?.$.>
  40c39c:	3f7d3aac 3e164083 3f7d1cdd 3e195be0     .:}?.@.>..}?.[.>
  40c3ac:	3f7cfe73 3e1c76de 3f7cdf6c 3e1f917b     s.|?.v.>l.|?{..>
  40c3bc:	3f7cbfc9 3e22abb6 3f7c9f8a 3e25c58c     ..|?..">..|?..%>
  40c3cc:	3f7c7eb0 3e28defc 3f7c5d3a 3e2bf804     .~|?..(>:]|?..+>
  40c3dc:	3f7c3b28 3e2f10a2 3f7c187a 3e3228d4     (;|?../>z.|?.(2>
  40c3ec:	3f7bf531 3e354098 3f7bd14d 3e3857ec     1.{?.@5>M.{?.W8>
  40c3fc:	3f7baccd 3e3b6ecf 3f7b87b2 3e3e853e     ..{?.n;>..{?>.>>
  40c40c:	3f7b61fc 3e419b37 3f7b3bab 3e44b0b9     .a{?7.A>.;{?..D>
  40c41c:	3f7b14be 3e47c5c2 3f7aed37 3e4ada4f     ..{?..G>7.z?O.J>
  40c42c:	3f7ac516 3e4dee60 3f7a9c59 3e5101f1     ..z?`.M>Y.z?..Q>
  40c43c:	3f7a7302 3e541501 3f7a4910 3e57278f     .sz?..T>.Iz?.'W>
  40c44c:	3f7a1e84 3e5a3997 3f79f35e 3e5d4b1a     ..z?.9Z>^.y?.K]>
  40c45c:	3f79c79d 3e605c13 3f799b43 3e636c83     ..y?.\`>C.y?.lc>
  40c46c:	3f796e4e 3e667c66 3f7940c0 3e698bba     Nny?f|f>.@y?..i>
  40c47c:	3f791298 3e6c9a7f 3f78e3d6 3e6fa8b2     ..y?..l>..x?..o>
  40c48c:	3f78b47b 3e72b651 3f788486 3e75c35a     {.x?Q.r>..x?Z.u>
  40c49c:	3f7853f8 3e78cfcc 3f7822d1 3e7bdba4     .Sx?..x>."x?..{>
  40c4ac:	3f77f110 3e7ee6e1 3f77beb7 3e80f8c0     ..w?..~>..w?...>
  40c4bc:	3f778bc5 3e827dc0 3f77583a 3e840270     ..w?.}.>:Xw?p..>
  40c4cc:	3f772417 3e8586ce 3f76ef5b 3e870ada     .$w?...>[.v?...>
  40c4dc:	3f76ba07 3e888e93 3f76841b 3e8a11f8     ..v?...>..v?...>
  40c4ec:	3f764d97 3e8b9507 3f76167a 3e8d17c0     .Mv?...>z.v?...>
  40c4fc:	3f75dec6 3e8e9a22 3f75a67b 3e901c2c     ..u?"..>{.u?,..>
  40c50c:	3f756d97 3e919ddd 3f75341d 3e931f35     .mu?...>.4u?5..>
  40c51c:	3f74fa0b 3e94a031 3f74bf62 3e9620d2     ..t?1..>b.t?. .>
  40c52c:	3f748422 3e97a117 3f74484b 3e9920fe     ".t?...>KHt?. .>
  40c53c:	3f740bdd 3e9aa086 3f73ced9 3e9c1faf     ..t?...>..s?...>
  40c54c:	3f73913f 3e9d9e78 3f73530e 3e9f1cdf     ?.s?x..>.Ss?...>
  40c55c:	3f731447 3ea09ae5 3f72d4eb 3ea21887     G.s?...>..r?...>
  40c56c:	3f7294f8 3ea395c5 3f725470 3ea5129f     ..r?...>pTr?...>
  40c57c:	3f721352 3ea68f12 3f71d19f 3ea80b1f     R.r?...>..q?...>
  40c58c:	3f718f57 3ea986c4 3f714c7a 3eab0201     W.q?...>zLq?...>
  40c59c:	3f710908 3eac7cd4 3f70c502 3eadf73c     ..q?.|.>..p?<..>
  40c5ac:	3f708066 3eaf713a 3f703b37 3eb0eacb     f.p?:q.>7;p?...>
  40c5bc:	3f6ff573 3eb263ef 3f6faf1b 3eb3dca5     s.o?.c.>..o?...>
  40c5cc:	3f6f6830 3eb554ec 3f6f20b0 3eb6ccc3     0ho?.T.>. o?...>
  40c5dc:	3f6ed89e 3eb8442a 3f6e8ff8 3eb9bb1e     ..n?*D.>..n?...>
  40c5ec:	3f6e46be 3ebb31a0 3f6dfcf2 3ebca7af     .Fn?.1.>..m?...>
  40c5fc:	3f6db293 3ebe1d4a 3f6d67a1 3ebf926f     ..m?J..>.gm?o..>
  40c60c:	3f6d1c1d 3ec1071e 3f6cd007 3ec27b55     ..m?...>..l?U{.>
  40c61c:	3f6c835e 3ec3ef15 3f6c3624 3ec5625c     ^.l?...>$6l?\b.>
  40c62c:	3f6be858 3ec6d529 3f6b99fb 3ec8477c     X.k?)..>..k?|G.>
  40c63c:	3f6b4b0c 3ec9b953 3f6afb8c 3ecb2aae     .Kk?S..>..j?.*.>
  40c64c:	3f6aab7b 3ecc9b8b 3f6a5ad9 3ece0bea     {.j?...>.Zj?...>
  40c65c:	3f6a09a7 3ecf7bca 3f69b7e4 3ed0eb2a     ..j?.{.>..i?*..>
  40c66c:	3f696591 3ed25a09 3f6912ae 3ed3c867     .ei?.Z.>..i?g..>
  40c67c:	3f68bf3c 3ed53641 3f686b39 3ed6a399     <.h?A6.>9kh?...>
  40c68c:	3f6816a8 3ed8106b 3f67c187 3ed97cb9     ..h?k..>..g?.|.>
  40c69c:	3f676bd8 3edae880 3f671599 3edc53c1     .kg?...>..g?.S.>
  40c6ac:	3f66becc 3eddbe79 3f666771 3edf28a9     ..f?y..>qgf?.(.>
  40c6bc:	3f660f88 3ee0924f 3f65b710 3ee1fb6a     ..f?O..>..e?j..>
  40c6cc:	3f655e0b 3ee363fa 3f650479 3ee4cbfe     .^e?.c.>y.e?...>
  40c6dc:	3f64aa59 3ee63375 3f644fac 3ee79a5d     Y.d?u3.>.Od?]..>
  40c6ec:	3f63f473 3ee900b7 3f6398ac 3eea6681     s.c?...>..c?.f.>
  40c6fc:	3f633c5a 3eebcbbb 3f62df7b 3eed3063     Z<c?...>{.b?c0.>
  40c70c:	3f628210 3eee9479 3f62241a 3eeff7fb     ..b?y..>.$b?...>
  40c71c:	3f61c598 3ef15aea 3f61668a 3ef2bd43     ..a?.Z.>.fa?C..>
  40c72c:	3f6106f2 3ef41f07 3f60a6cf 3ef58035     ..a?...>..`?5..>
  40c73c:	3f604621 3ef6e0cb 3f5fe4e9 3ef840c8     !F`?...>.._?.@.>
  40c74c:	3f5f8327 3ef9a02d 3f5f20db 3efafef7     '._?-..>. _?...>
  40c75c:	3f5ebe05 3efc5d27 3f5e5aa6 3efdbabb     ..^?'].>.Z^?...>
  40c76c:	3f5df6be 3eff17b2 3f5d924d 3f003a06     ..]?...>M.]?.:.?
  40c77c:	3f5d2d53 3f00e7e4 3f5cc7d1 3f019573     S-]?...?..\?s..?
  40c78c:	3f5c61c7 3f0242b1 3f5bfb34 3f02ef9f     .a\?.B.?4.[?...?
  40c79c:	3f5b941a 3f039c3d 3f5b2c79 3f044889     ..[?=..?y,[?.H.?
  40c7ac:	3f5ac450 3f04f484 3f5a5ba0 3f05a02c     P.Z?...?.[Z?,..?
  40c7bc:	3f59f26a 3f064b82 3f5988ad 3f06f686     j.Y?.K.?..Y?...?
  40c7cc:	3f591e6a 3f07a136 3f58b3a1 3f084b92     j.Y?6..?..X?.K.?
  40c7dc:	3f584853 3f08f59b 3f57dc7f 3f099f4e     SHX?...?..W?N..?
  40c7ec:	3f577026 3f0a48ad 3f570348 3f0af1b7     &pW?.H.?H.W?...?
  40c7fc:	3f5695e5 3f0b9a6b 3f5627fe 3f0c42c9     ..V?k..?.'V?.B.?
  40c80c:	3f55b993 3f0cead0 3f554aa4 3f0d9281     ..U?...?.JU?...?
  40c81c:	3f54db31 3f0e39da 3f546b3b 3f0ee0db     1.T?.9.?;kT?...?
  40c82c:	3f53fac3 3f0f8784 3f5389c7 3f102dd5     ..S?...?..S?.-.?
  40c83c:	3f531849 3f10d3cd 3f52a649 3f11796b     I.S?...?I.R?ky.?
  40c84c:	3f5233c6 3f121eb0 3f51c0c2 3f12c39a     .3R?...?..Q?...?
  40c85c:	3f514d3d 3f13682a 3f50d937 3f140c5f     =MQ?*h.?7.P?_..?
  40c86c:	3f5064af 3f14b039 3f4fefa8 3f1553b7     .dP?9..?..O?.S.?
  40c87c:	3f4f7a1f 3f15f6d9 3f4f0417 3f16999f     .zO?...?..O?...?
  40c88c:	3f4e8d90 3f173c07 3f4e1689 3f17de12     ..N?.<.?..N?...?
  40c89c:	3f4d9f02 3f187fc0 3f4d26fd 3f19210f     ..M?...?.&M?.!.?
  40c8ac:	3f4cae79 3f19c200 3f4c3578 3f1a6293     y.L?...?x5L?.b.?
  40c8bc:	3f4bbbf8 3f1b02c6 3f4b41fa 3f1ba299     ..K?...?.AK?...?
  40c8cc:	3f4ac77f 3f1c420c 3f4a4c87 3f1ce11f     ..J?.B.?.LJ?...?
  40c8dc:	3f49d112 3f1d7fd1 3f495521 3f1e1e22     ..I?...?!UI?"..?
  40c8ec:	3f48d8b3 3f1ebc12 3f485bca 3f1f599f     ..H?...?.[H?.Y.?
  40c8fc:	3f47de65 3f1ff6cb 3f476085 3f209393     e.G?...?.`G?.. ?
  40c90c:	3f46e22a 3f212ff9 3f466354 3f21cbfb     *.F?./!?TcF?..!?
  40c91c:	3f45e403 3f226799 3f456439 3f2302d3     ..E?.g"?9dE?..#?
  40c92c:	3f44e3f5 3f239da9 3f446337 3f24381a     ..D?..#?7cD?.8$?
  40c93c:	3f43e200 3f24d225 3f436051 3f256bcb     ..C?%.$?Q`C?.k%?
  40c94c:	3f42de29 3f26050a 3f425b89 3f269de3     ).B?..&?.[B?..&?
  40c95c:	3f41d870 3f273656 3f4154e1 3f27ce61     p.A?V6'?.TA?a.'?
  40c96c:	3f40d0da 3f286605 3f404c5c 3f28fd41     ..@?.f(?\L@?A.(?
  40c97c:	3f3fc767 3f299415 3f3f41fc 3f2a2a80     g.??..)?.A??.**?
  40c98c:	3f3ebc1b 3f2ac082 3f3e35c5 3f2b561b     ..>?..*?.5>?.V+?
  40c99c:	3f3daef9 3f2beb4a 3f3d27b8 3f2c800f     ..=?J.+?.'=?..,?
  40c9ac:	3f3ca003 3f2d1469 3f3c17d9 3f2da859     ..<?i.-?..<?Y.-?
  40c9bc:	3f3b8f3b 3f2e3bde 3f3b0629 3f2ecef7     ;.;?.;.?).;?...?
  40c9cc:	3f3a7ca4 3f2f61a5 3f39f2ac 3f2ff3e6     .|:?.a/?..9?../?
  40c9dc:	3f396842 3f3085bb 3f38dd65 3f311722     Bh9?..0?e.8?".1?
  40c9ec:	3f385216 3f31a81d 3f37c655 3f3238aa     .R8?..1?U.7?.82?
  40c9fc:	3f373a23 3f32c8c9 3f36ad7f 3f33587a     #:7?..2?..6?zX3?
  40ca0c:	3f36206c 3f33e7bc 3f3592e7 3f34768f     l 6?..3?..5?.v4?
  40ca1c:	3f3504f3 3f3504f3 3f34768f 3f3592e7     ..5?..5?.v4?..5?
  40ca2c:	3f33e7bc 3f36206c 3f33587a 3f36ad7f     ..3?l 6?zX3?..6?
  40ca3c:	3f32c8c9 3f373a23 3f3238aa 3f37c655     ..2?#:7?.82?U.7?
  40ca4c:	3f31a81d 3f385216 3f311722 3f38dd65     ..1?.R8?".1?e.8?
  40ca5c:	3f3085bb 3f396842 3f2ff3e6 3f39f2ac     ..0?Bh9?../?..9?
  40ca6c:	3f2f61a5 3f3a7ca4 3f2ecef7 3f3b0629     .a/?.|:?...?).;?
  40ca7c:	3f2e3bde 3f3b8f3b 3f2da859 3f3c17d9     .;.?;.;?Y.-?..<?
  40ca8c:	3f2d1469 3f3ca003 3f2c800f 3f3d27b8     i.-?..<?..,?.'=?
  40ca9c:	3f2beb4a 3f3daef9 3f2b561b 3f3e35c5     J.+?..=?.V+?.5>?
  40caac:	3f2ac082 3f3ebc1b 3f2a2a80 3f3f41fc     ..*?..>?.**?.A??
  40cabc:	3f299415 3f3fc767 3f28fd41 3f404c5c     ..)?g.??A.(?\L@?
  40cacc:	3f286605 3f40d0da 3f27ce61 3f4154e1     .f(?..@?a.'?.TA?
  40cadc:	3f273656 3f41d870 3f269de3 3f425b89     V6'?p.A?..&?.[B?
  40caec:	3f26050a 3f42de29 3f256bcb 3f436051     ..&?).B?.k%?Q`C?
  40cafc:	3f24d225 3f43e200 3f24381a 3f446337     %.$?..C?.8$?7cD?
  40cb0c:	3f239da9 3f44e3f5 3f2302d3 3f456439     ..#?..D?..#?9dE?
  40cb1c:	3f226799 3f45e403 3f21cbfb 3f466354     .g"?..E?..!?TcF?
  40cb2c:	3f212ff9 3f46e22a 3f209393 3f476085     ./!?*.F?.. ?.`G?
  40cb3c:	3f1ff6cb 3f47de65 3f1f599f 3f485bca     ...?e.G?.Y.?.[H?
  40cb4c:	3f1ebc12 3f48d8b3 3f1e1e22 3f495521     ...?..H?"..?!UI?
  40cb5c:	3f1d7fd1 3f49d112 3f1ce11f 3f4a4c87     ...?..I?...?.LJ?
  40cb6c:	3f1c420c 3f4ac77f 3f1ba299 3f4b41fa     .B.?..J?...?.AK?
  40cb7c:	3f1b02c6 3f4bbbf8 3f1a6293 3f4c3578     ...?..K?.b.?x5L?
  40cb8c:	3f19c200 3f4cae79 3f19210f 3f4d26fd     ...?y.L?.!.?.&M?
  40cb9c:	3f187fc0 3f4d9f02 3f17de12 3f4e1689     ...?..M?...?..N?
  40cbac:	3f173c07 3f4e8d90 3f16999f 3f4f0417     .<.?..N?...?..O?
  40cbbc:	3f15f6d9 3f4f7a1f 3f1553b7 3f4fefa8     ...?.zO?.S.?..O?
  40cbcc:	3f14b039 3f5064af 3f140c5f 3f50d937     9..?.dP?_..?7.P?
  40cbdc:	3f13682a 3f514d3d 3f12c39a 3f51c0c2     *h.?=MQ?...?..Q?
  40cbec:	3f121eb0 3f5233c6 3f11796b 3f52a649     ...?.3R?ky.?I.R?
  40cbfc:	3f10d3cd 3f531849 3f102dd5 3f5389c7     ...?I.S?.-.?..S?
  40cc0c:	3f0f8784 3f53fac3 3f0ee0db 3f546b3b     ...?..S?...?;kT?
  40cc1c:	3f0e39da 3f54db31 3f0d9281 3f554aa4     .9.?1.T?...?.JU?
  40cc2c:	3f0cead0 3f55b993 3f0c42c9 3f5627fe     ...?..U?.B.?.'V?
  40cc3c:	3f0b9a6b 3f5695e5 3f0af1b7 3f570348     k..?..V?...?H.W?
  40cc4c:	3f0a48ad 3f577026 3f099f4e 3f57dc7f     .H.?&pW?N..?..W?
  40cc5c:	3f08f59b 3f584853 3f084b92 3f58b3a1     ...?SHX?.K.?..X?
  40cc6c:	3f07a136 3f591e6a 3f06f686 3f5988ad     6..?j.Y?...?..Y?
  40cc7c:	3f064b82 3f59f26a 3f05a02c 3f5a5ba0     .K.?j.Y?,..?.[Z?
  40cc8c:	3f04f484 3f5ac450 3f044889 3f5b2c79     ...?P.Z?.H.?y,[?
  40cc9c:	3f039c3d 3f5b941a 3f02ef9f 3f5bfb34     =..?..[?...?4.[?
  40ccac:	3f0242b1 3f5c61c7 3f019573 3f5cc7d1     .B.?.a\?s..?..\?
  40ccbc:	3f00e7e4 3f5d2d53 3f003a06 3f5d924d     ...?S-]?.:.?M.]?
  40cccc:	3eff17b2 3f5df6be 3efdbabb 3f5e5aa6     ...>..]?...>.Z^?
  40ccdc:	3efc5d27 3f5ebe05 3efafef7 3f5f20db     '].>..^?...>. _?
  40ccec:	3ef9a02d 3f5f8327 3ef840c8 3f5fe4e9     -..>'._?.@.>.._?
  40ccfc:	3ef6e0cb 3f604621 3ef58035 3f60a6cf     ...>!F`?5..>..`?
  40cd0c:	3ef41f07 3f6106f2 3ef2bd43 3f61668a     ...>..a?C..>.fa?
  40cd1c:	3ef15aea 3f61c598 3eeff7fb 3f62241a     .Z.>..a?...>.$b?
  40cd2c:	3eee9479 3f628210 3eed3063 3f62df7b     y..>..b?c0.>{.b?
  40cd3c:	3eebcbbb 3f633c5a 3eea6681 3f6398ac     ...>Z<c?.f.>..c?
  40cd4c:	3ee900b7 3f63f473 3ee79a5d 3f644fac     ...>s.c?]..>.Od?
  40cd5c:	3ee63375 3f64aa59 3ee4cbfe 3f650479     u3.>Y.d?...>y.e?
  40cd6c:	3ee363fa 3f655e0b 3ee1fb6a 3f65b710     .c.>.^e?j..>..e?
  40cd7c:	3ee0924f 3f660f88 3edf28a9 3f666771     O..>..f?.(.>qgf?
  40cd8c:	3eddbe79 3f66becc 3edc53c1 3f671599     y..>..f?.S.>..g?
  40cd9c:	3edae880 3f676bd8 3ed97cb9 3f67c187     ...>.kg?.|.>..g?
  40cdac:	3ed8106b 3f6816a8 3ed6a399 3f686b39     k..>..h?...>9kh?
  40cdbc:	3ed53641 3f68bf3c 3ed3c867 3f6912ae     A6.><.h?g..>..i?
  40cdcc:	3ed25a09 3f696591 3ed0eb2a 3f69b7e4     .Z.>.ei?*..>..i?
  40cddc:	3ecf7bca 3f6a09a7 3ece0bea 3f6a5ad9     .{.>..j?...>.Zj?
  40cdec:	3ecc9b8b 3f6aab7b 3ecb2aae 3f6afb8c     ...>{.j?.*.>..j?
  40cdfc:	3ec9b953 3f6b4b0c 3ec8477c 3f6b99fb     S..>.Kk?|G.>..k?
  40ce0c:	3ec6d529 3f6be858 3ec5625c 3f6c3624     )..>X.k?\b.>$6l?
  40ce1c:	3ec3ef15 3f6c835e 3ec27b55 3f6cd007     ...>^.l?U{.>..l?
  40ce2c:	3ec1071e 3f6d1c1d 3ebf926f 3f6d67a1     ...>..m?o..>.gm?
  40ce3c:	3ebe1d4a 3f6db293 3ebca7af 3f6dfcf2     J..>..m?...>..m?
  40ce4c:	3ebb31a0 3f6e46be 3eb9bb1e 3f6e8ff8     .1.>.Fn?...>..n?
  40ce5c:	3eb8442a 3f6ed89e 3eb6ccc3 3f6f20b0     *D.>..n?...>. o?
  40ce6c:	3eb554ec 3f6f6830 3eb3dca5 3f6faf1b     .T.>0ho?...>..o?
  40ce7c:	3eb263ef 3f6ff573 3eb0eacb 3f703b37     .c.>s.o?...>7;p?
  40ce8c:	3eaf713a 3f708066 3eadf73c 3f70c502     :q.>f.p?<..>..p?
  40ce9c:	3eac7cd4 3f710908 3eab0201 3f714c7a     .|.>..q?...>zLq?
  40ceac:	3ea986c4 3f718f57 3ea80b1f 3f71d19f     ...>W.q?...>..q?
  40cebc:	3ea68f12 3f721352 3ea5129f 3f725470     ...>R.r?...>pTr?
  40cecc:	3ea395c5 3f7294f8 3ea21887 3f72d4eb     ...>..r?...>..r?
  40cedc:	3ea09ae5 3f731447 3e9f1cdf 3f73530e     ...>G.s?...>.Ss?
  40ceec:	3e9d9e78 3f73913f 3e9c1faf 3f73ced9     x..>?.s?...>..s?
  40cefc:	3e9aa086 3f740bdd 3e9920fe 3f74484b     ...>..t?. .>KHt?
  40cf0c:	3e97a117 3f748422 3e9620d2 3f74bf62     ...>".t?. .>b.t?
  40cf1c:	3e94a031 3f74fa0b 3e931f35 3f75341d     1..>..t?5..>.4u?
  40cf2c:	3e919ddd 3f756d97 3e901c2c 3f75a67b     ...>.mu?,..>{.u?
  40cf3c:	3e8e9a22 3f75dec6 3e8d17c0 3f76167a     "..>..u?...>z.v?
  40cf4c:	3e8b9507 3f764d97 3e8a11f8 3f76841b     ...>.Mv?...>..v?
  40cf5c:	3e888e93 3f76ba07 3e870ada 3f76ef5b     ...>..v?...>[.v?
  40cf6c:	3e8586ce 3f772417 3e840270 3f77583a     ...>.$w?p..>:Xw?
  40cf7c:	3e827dc0 3f778bc5 3e80f8c0 3f77beb7     .}.>..w?...>..w?
  40cf8c:	3e7ee6e1 3f77f110 3e7bdba4 3f7822d1     ..~>..w?..{>."x?
  40cf9c:	3e78cfcc 3f7853f8 3e75c35a 3f788486     ..x>.Sx?Z.u>..x?
  40cfac:	3e72b651 3f78b47b 3e6fa8b2 3f78e3d6     Q.r>{.x?..o>..x?
  40cfbc:	3e6c9a7f 3f791298 3e698bba 3f7940c0     ..l>..y?..i>.@y?
  40cfcc:	3e667c66 3f796e4e 3e636c83 3f799b43     f|f>Nny?.lc>C.y?
  40cfdc:	3e605c13 3f79c79d 3e5d4b1a 3f79f35e     .\`>..y?.K]>^.y?
  40cfec:	3e5a3997 3f7a1e84 3e57278f 3f7a4910     .9Z>..z?.'W>.Iz?
  40cffc:	3e541501 3f7a7302 3e5101f1 3f7a9c59     ..T>.sz?..Q>Y.z?
  40d00c:	3e4dee60 3f7ac516 3e4ada4f 3f7aed37     `.M>..z?O.J>7.z?
  40d01c:	3e47c5c2 3f7b14be 3e44b0b9 3f7b3bab     ..G>..{?..D>.;{?
  40d02c:	3e419b37 3f7b61fc 3e3e853e 3f7b87b2     7.A>.a{?>.>>..{?
  40d03c:	3e3b6ecf 3f7baccd 3e3857ec 3f7bd14d     .n;>..{?.W8>M.{?
  40d04c:	3e354098 3f7bf531 3e3228d4 3f7c187a     .@5>1.{?.(2>z.|?
  40d05c:	3e2f10a2 3f7c3b28 3e2bf804 3f7c5d3a     ../>(;|?..+>:]|?
  40d06c:	3e28defc 3f7c7eb0 3e25c58c 3f7c9f8a     ..(>.~|?..%>..|?
  40d07c:	3e22abb6 3f7cbfc9 3e1f917b 3f7cdf6c     ..">..|?{..>l.|?
  40d08c:	3e1c76de 3f7cfe73 3e195be0 3f7d1cdd     .v.>s.|?.[.>..}?
  40d09c:	3e164083 3f7d3aac 3e1324ca 3f7d57de     .@.>.:}?.$.>.W}?
  40d0ac:	3e1008b7 3f7d7474 3e0cec4a 3f7d906e     ...>tt}?J..>n.}?
  40d0bc:	3e09cf86 3f7dabcc 3e06b26e 3f7dc68c     ...>..}?n..>..}?
  40d0cc:	3e039502 3f7de0b1 3e007745 3f7dfa38     ...>..}?Ew.>8.}?
  40d0dc:	3dfab273 3f7e1324 3df475c0 3f7e2b72     s..=$.~?.u.=r+~?
  40d0ec:	3dee3876 3f7e4323 3de7fa9a 3f7e5a38     v8.=#C~?...=8Z~?
  40d0fc:	3de1bc2e 3f7e70b0 3ddb7d37 3f7e868b     ...=.p~?7}.=..~?
  40d10c:	3dd53db9 3f7e9bc9 3dcefdb7 3f7eb069     .=.=..~?...=i.~?
  40d11c:	3dc8bd36 3f7ec46d 3dc27c39 3f7ed7d4     6..=m.~?9|.=..~?
  40d12c:	3dbc3ac3 3f7eea9d 3db5f8da 3f7efcc9     .:.=..~?...=..~?
  40d13c:	3dafb680 3f7f0e58 3da973ba 3f7f1f49     ...=X..?.s.=I..?
  40d14c:	3da3308c 3f7f2f9d 3d9cecf9 3f7f3f54     .0.=./.?...=T?.?
  40d15c:	3d96a905 3f7f4e6d 3d9064b4 3f7f5ce9     ...=mN.?.d.=.\.?
  40d16c:	3d8a200a 3f7f6ac7 3d83db0a 3f7f7808     . .=.j.?...=.x.?
  40d17c:	3d7b2b74 3f7f84ab 3d6ea038 3f7f90b1     t+{=...?8.n=...?
  40d18c:	3d621468 3f7f9c18 3d55880e 3f7fa6e3     h.b=...?..U=...?
  40d19c:	3d48fb2f 3f7fb10f 3d3c6dd5 3f7fba9e     /.H=...?.m<=...?
  40d1ac:	3d2fe007 3f7fc38f 3d2351cc 3f7fcbe2     ../=...?.Q#=...?
  40d1bc:	3d16c32c 3f7fd398 3d0a342f 3f7fdaaf     ,..=...?/4.=...?
  40d1cc:	3cfb49b9 3f7fe129 3ce22a7b 3f7fe705     .I.<)..?{*.<...?
  40d1dc:	3cc90ab0 3f7fec43 3cafea69 3f7ff0e3     ...<C..?i..<...?
  40d1ec:	3c96c9b6 3f7ff4e6 3c7b514b 3f7ff84a     ...<...?KQ{<J..?
  40d1fc:	3c490e90 3f7ffb11 3c16cb59 3f7ffd39     ..I<...?Y..<9..?
  40d20c:	3bc90f89 3f7ffec4 3b490fc7 3f7fffb1     ...;...?..I;...?
  40d21c:	00000000 3f800000 bb490fc7 3f7fffb1     .......?..I....?
  40d22c:	bbc90f89 3f7ffec4 bc16cb59 3f7ffd39     .......?Y...9..?
  40d23c:	bc490e90 3f7ffb11 bc7b514b 3f7ff84a     ..I....?KQ{.J..?
  40d24c:	bc96c9b6 3f7ff4e6 bcafea69 3f7ff0e3     .......?i......?
  40d25c:	bcc90ab0 3f7fec43 bce22a7b 3f7fe705     ....C..?{*.....?
  40d26c:	bcfb49b9 3f7fe129 bd0a342f 3f7fdaaf     .I..)..?/4.....?
  40d27c:	bd16c32c 3f7fd398 bd2351cc 3f7fcbe2     ,......?.Q#....?
  40d28c:	bd2fe007 3f7fc38f bd3c6dd5 3f7fba9e     ../....?.m<....?
  40d29c:	bd48fb2f 3f7fb10f bd55880e 3f7fa6e3     /.H....?..U....?
  40d2ac:	bd621468 3f7f9c18 bd6ea038 3f7f90b1     h.b....?8.n....?
  40d2bc:	bd7b2b74 3f7f84ab bd83db0a 3f7f7808     t+{....?.....x.?
  40d2cc:	bd8a200a 3f7f6ac7 bd9064b4 3f7f5ce9     . ...j.?.d...\.?
  40d2dc:	bd96a905 3f7f4e6d bd9cecf9 3f7f3f54     ....mN.?....T?.?
  40d2ec:	bda3308c 3f7f2f9d bda973ba 3f7f1f49     .0.../.?.s..I..?
  40d2fc:	bdafb680 3f7f0e58 bdb5f8da 3f7efcc9     ....X..?......~?
  40d30c:	bdbc3ac3 3f7eea9d bdc27c39 3f7ed7d4     .:....~?9|....~?
  40d31c:	bdc8bd36 3f7ec46d bdcefdb7 3f7eb069     6...m.~?....i.~?
  40d32c:	bdd53db9 3f7e9bc9 bddb7d37 3f7e868b     .=....~?7}....~?
  40d33c:	bde1bc2e 3f7e70b0 bde7fa9a 3f7e5a38     .....p~?....8Z~?
  40d34c:	bdee3876 3f7e4323 bdf475c0 3f7e2b72     v8..#C~?.u..r+~?
  40d35c:	bdfab273 3f7e1324 be007745 3f7dfa38     s...$.~?Ew..8.}?
  40d36c:	be039502 3f7de0b1 be06b26e 3f7dc68c     ......}?n.....}?
  40d37c:	be09cf86 3f7dabcc be0cec4a 3f7d906e     ......}?J...n.}?
  40d38c:	be1008b7 3f7d7474 be1324ca 3f7d57de     ....tt}?.$...W}?
  40d39c:	be164083 3f7d3aac be195be0 3f7d1cdd     .@...:}?.[....}?
  40d3ac:	be1c76de 3f7cfe73 be1f917b 3f7cdf6c     .v..s.|?{...l.|?
  40d3bc:	be22abb6 3f7cbfc9 be25c58c 3f7c9f8a     .."...|?..%...|?
  40d3cc:	be28defc 3f7c7eb0 be2bf804 3f7c5d3a     ..(..~|?..+.:]|?
  40d3dc:	be2f10a2 3f7c3b28 be3228d4 3f7c187a     ../.(;|?.(2.z.|?
  40d3ec:	be354098 3f7bf531 be3857ec 3f7bd14d     .@5.1.{?.W8.M.{?
  40d3fc:	be3b6ecf 3f7baccd be3e853e 3f7b87b2     .n;...{?>.>...{?
  40d40c:	be419b37 3f7b61fc be44b0b9 3f7b3bab     7.A..a{?..D..;{?
  40d41c:	be47c5c2 3f7b14be be4ada4f 3f7aed37     ..G...{?O.J.7.z?
  40d42c:	be4dee60 3f7ac516 be5101f1 3f7a9c59     `.M...z?..Q.Y.z?
  40d43c:	be541501 3f7a7302 be57278f 3f7a4910     ..T..sz?.'W..Iz?
  40d44c:	be5a3997 3f7a1e84 be5d4b1a 3f79f35e     .9Z...z?.K].^.y?
  40d45c:	be605c13 3f79c79d be636c83 3f799b43     .\`...y?.lc.C.y?
  40d46c:	be667c66 3f796e4e be698bba 3f7940c0     f|f.Nny?..i..@y?
  40d47c:	be6c9a7f 3f791298 be6fa8b2 3f78e3d6     ..l...y?..o...x?
  40d48c:	be72b651 3f78b47b be75c35a 3f788486     Q.r.{.x?Z.u...x?
  40d49c:	be78cfcc 3f7853f8 be7bdba4 3f7822d1     ..x..Sx?..{.."x?
  40d4ac:	be7ee6e1 3f77f110 be80f8c0 3f77beb7     ..~...w?......w?
  40d4bc:	be827dc0 3f778bc5 be840270 3f77583a     .}....w?p...:Xw?
  40d4cc:	be8586ce 3f772417 be870ada 3f76ef5b     .....$w?....[.v?
  40d4dc:	be888e93 3f76ba07 be8a11f8 3f76841b     ......v?......v?
  40d4ec:	be8b9507 3f764d97 be8d17c0 3f76167a     .....Mv?....z.v?
  40d4fc:	be8e9a22 3f75dec6 be901c2c 3f75a67b     ".....u?,...{.u?
  40d50c:	be919ddd 3f756d97 be931f35 3f75341d     .....mu?5....4u?
  40d51c:	be94a031 3f74fa0b be9620d2 3f74bf62     1.....t?. ..b.t?
  40d52c:	be97a117 3f748422 be9920fe 3f74484b     ....".t?. ..KHt?
  40d53c:	be9aa086 3f740bdd be9c1faf 3f73ced9     ......t?......s?
  40d54c:	be9d9e78 3f73913f be9f1cdf 3f73530e     x...?.s?.....Ss?
  40d55c:	bea09ae5 3f731447 bea21887 3f72d4eb     ....G.s?......r?
  40d56c:	bea395c5 3f7294f8 bea5129f 3f725470     ......r?....pTr?
  40d57c:	bea68f12 3f721352 bea80b1f 3f71d19f     ....R.r?......q?
  40d58c:	bea986c4 3f718f57 beab0201 3f714c7a     ....W.q?....zLq?
  40d59c:	beac7cd4 3f710908 beadf73c 3f70c502     .|....q?<.....p?
  40d5ac:	beaf713a 3f708066 beb0eacb 3f703b37     :q..f.p?....7;p?
  40d5bc:	beb263ef 3f6ff573 beb3dca5 3f6faf1b     .c..s.o?......o?
  40d5cc:	beb554ec 3f6f6830 beb6ccc3 3f6f20b0     .T..0ho?..... o?
  40d5dc:	beb8442a 3f6ed89e beb9bb1e 3f6e8ff8     *D....n?......n?
  40d5ec:	bebb31a0 3f6e46be bebca7af 3f6dfcf2     .1...Fn?......m?
  40d5fc:	bebe1d4a 3f6db293 bebf926f 3f6d67a1     J.....m?o....gm?
  40d60c:	bec1071e 3f6d1c1d bec27b55 3f6cd007     ......m?U{....l?
  40d61c:	bec3ef15 3f6c835e bec5625c 3f6c3624     ....^.l?\b..$6l?
  40d62c:	bec6d529 3f6be858 bec8477c 3f6b99fb     )...X.k?|G....k?
  40d63c:	bec9b953 3f6b4b0c becb2aae 3f6afb8c     S....Kk?.*....j?
  40d64c:	becc9b8b 3f6aab7b bece0bea 3f6a5ad9     ....{.j?.....Zj?
  40d65c:	becf7bca 3f6a09a7 bed0eb2a 3f69b7e4     .{....j?*.....i?
  40d66c:	bed25a09 3f696591 bed3c867 3f6912ae     .Z...ei?g.....i?
  40d67c:	bed53641 3f68bf3c bed6a399 3f686b39     A6..<.h?....9kh?
  40d68c:	bed8106b 3f6816a8 bed97cb9 3f67c187     k.....h?.|....g?
  40d69c:	bedae880 3f676bd8 bedc53c1 3f671599     .....kg?.S....g?
  40d6ac:	beddbe79 3f66becc bedf28a9 3f666771     y.....f?.(..qgf?
  40d6bc:	bee0924f 3f660f88 bee1fb6a 3f65b710     O.....f?j.....e?
  40d6cc:	bee363fa 3f655e0b bee4cbfe 3f650479     .c...^e?....y.e?
  40d6dc:	bee63375 3f64aa59 bee79a5d 3f644fac     u3..Y.d?]....Od?
  40d6ec:	bee900b7 3f63f473 beea6681 3f6398ac     ....s.c?.f....c?
  40d6fc:	beebcbbb 3f633c5a beed3063 3f62df7b     ....Z<c?c0..{.b?
  40d70c:	beee9479 3f628210 beeff7fb 3f62241a     y.....b?.....$b?
  40d71c:	bef15aea 3f61c598 bef2bd43 3f61668a     .Z....a?C....fa?
  40d72c:	bef41f07 3f6106f2 bef58035 3f60a6cf     ......a?5.....`?
  40d73c:	bef6e0cb 3f604621 bef840c8 3f5fe4e9     ....!F`?.@...._?
  40d74c:	bef9a02d 3f5f8327 befafef7 3f5f20db     -...'._?..... _?
  40d75c:	befc5d27 3f5ebe05 befdbabb 3f5e5aa6     ']....^?.....Z^?
  40d76c:	beff17b2 3f5df6be bf003a06 3f5d924d     ......]?.:..M.]?
  40d77c:	bf00e7e4 3f5d2d53 bf019573 3f5cc7d1     ....S-]?s.....\?
  40d78c:	bf0242b1 3f5c61c7 bf02ef9f 3f5bfb34     .B...a\?....4.[?
  40d79c:	bf039c3d 3f5b941a bf044889 3f5b2c79     =.....[?.H..y,[?
  40d7ac:	bf04f484 3f5ac450 bf05a02c 3f5a5ba0     ....P.Z?,....[Z?
  40d7bc:	bf064b82 3f59f26a bf06f686 3f5988ad     .K..j.Y?......Y?
  40d7cc:	bf07a136 3f591e6a bf084b92 3f58b3a1     6...j.Y?.K....X?
  40d7dc:	bf08f59b 3f584853 bf099f4e 3f57dc7f     ....SHX?N.....W?
  40d7ec:	bf0a48ad 3f577026 bf0af1b7 3f570348     .H..&pW?....H.W?
  40d7fc:	bf0b9a6b 3f5695e5 bf0c42c9 3f5627fe     k.....V?.B...'V?
  40d80c:	bf0cead0 3f55b993 bf0d9281 3f554aa4     ......U?.....JU?
  40d81c:	bf0e39da 3f54db31 bf0ee0db 3f546b3b     .9..1.T?....;kT?
  40d82c:	bf0f8784 3f53fac3 bf102dd5 3f5389c7     ......S?.-....S?
  40d83c:	bf10d3cd 3f531849 bf11796b 3f52a649     ....I.S?ky..I.R?
  40d84c:	bf121eb0 3f5233c6 bf12c39a 3f51c0c2     .....3R?......Q?
  40d85c:	bf13682a 3f514d3d bf140c5f 3f50d937     *h..=MQ?_...7.P?
  40d86c:	bf14b039 3f5064af bf1553b7 3f4fefa8     9....dP?.S....O?
  40d87c:	bf15f6d9 3f4f7a1f bf16999f 3f4f0417     .....zO?......O?
  40d88c:	bf173c07 3f4e8d90 bf17de12 3f4e1689     .<....N?......N?
  40d89c:	bf187fc0 3f4d9f02 bf19210f 3f4d26fd     ......M?.!...&M?
  40d8ac:	bf19c200 3f4cae79 bf1a6293 3f4c3578     ....y.L?.b..x5L?
  40d8bc:	bf1b02c6 3f4bbbf8 bf1ba299 3f4b41fa     ......K?.....AK?
  40d8cc:	bf1c420c 3f4ac77f bf1ce11f 3f4a4c87     .B....J?.....LJ?
  40d8dc:	bf1d7fd1 3f49d112 bf1e1e22 3f495521     ......I?"...!UI?
  40d8ec:	bf1ebc12 3f48d8b3 bf1f599f 3f485bca     ......H?.Y...[H?
  40d8fc:	bf1ff6cb 3f47de65 bf209393 3f476085     ....e.G?.. ..`G?
  40d90c:	bf212ff9 3f46e22a bf21cbfb 3f466354     ./!.*.F?..!.TcF?
  40d91c:	bf226799 3f45e403 bf2302d3 3f456439     .g"...E?..#.9dE?
  40d92c:	bf239da9 3f44e3f5 bf24381a 3f446337     ..#...D?.8$.7cD?
  40d93c:	bf24d225 3f43e200 bf256bcb 3f436051     %.$...C?.k%.Q`C?
  40d94c:	bf26050a 3f42de29 bf269de3 3f425b89     ..&.).B?..&..[B?
  40d95c:	bf273656 3f41d870 bf27ce61 3f4154e1     V6'.p.A?a.'..TA?
  40d96c:	bf286605 3f40d0da bf28fd41 3f404c5c     .f(...@?A.(.\L@?
  40d97c:	bf299415 3f3fc767 bf2a2a80 3f3f41fc     ..).g.??.**..A??
  40d98c:	bf2ac082 3f3ebc1b bf2b561b 3f3e35c5     ..*...>?.V+..5>?
  40d99c:	bf2beb4a 3f3daef9 bf2c800f 3f3d27b8     J.+...=?..,..'=?
  40d9ac:	bf2d1469 3f3ca003 bf2da859 3f3c17d9     i.-...<?Y.-...<?
  40d9bc:	bf2e3bde 3f3b8f3b bf2ecef7 3f3b0629     .;..;.;?....).;?
  40d9cc:	bf2f61a5 3f3a7ca4 bf2ff3e6 3f39f2ac     .a/..|:?../...9?
  40d9dc:	bf3085bb 3f396842 bf311722 3f38dd65     ..0.Bh9?".1.e.8?
  40d9ec:	bf31a81d 3f385216 bf3238aa 3f37c655     ..1..R8?.82.U.7?
  40d9fc:	bf32c8c9 3f373a23 bf33587a 3f36ad7f     ..2.#:7?zX3...6?
  40da0c:	bf33e7bc 3f36206c bf34768f 3f3592e7     ..3.l 6?.v4...5?
  40da1c:	bf3504f3 3f3504f3 bf3592e7 3f34768f     ..5...5?..5..v4?
  40da2c:	bf36206c 3f33e7bc bf36ad7f 3f33587a     l 6...3?..6.zX3?
  40da3c:	bf373a23 3f32c8c9 bf37c655 3f3238aa     #:7...2?U.7..82?
  40da4c:	bf385216 3f31a81d bf38dd65 3f311722     .R8...1?e.8.".1?
  40da5c:	bf396842 3f3085bb bf39f2ac 3f2ff3e6     Bh9...0?..9.../?
  40da6c:	bf3a7ca4 3f2f61a5 bf3b0629 3f2ecef7     .|:..a/?).;....?
  40da7c:	bf3b8f3b 3f2e3bde bf3c17d9 3f2da859     ;.;..;.?..<.Y.-?
  40da8c:	bf3ca003 3f2d1469 bf3d27b8 3f2c800f     ..<.i.-?.'=...,?
  40da9c:	bf3daef9 3f2beb4a bf3e35c5 3f2b561b     ..=.J.+?.5>..V+?
  40daac:	bf3ebc1b 3f2ac082 bf3f41fc 3f2a2a80     ..>...*?.A?..**?
  40dabc:	bf3fc767 3f299415 bf404c5c 3f28fd41     g.?...)?\L@.A.(?
  40dacc:	bf40d0da 3f286605 bf4154e1 3f27ce61     ..@..f(?.TA.a.'?
  40dadc:	bf41d870 3f273656 bf425b89 3f269de3     p.A.V6'?.[B...&?
  40daec:	bf42de29 3f26050a bf436051 3f256bcb     ).B...&?Q`C..k%?
  40dafc:	bf43e200 3f24d225 bf446337 3f24381a     ..C.%.$?7cD..8$?
  40db0c:	bf44e3f5 3f239da9 bf456439 3f2302d3     ..D...#?9dE...#?
  40db1c:	bf45e403 3f226799 bf466354 3f21cbfb     ..E..g"?TcF...!?
  40db2c:	bf46e22a 3f212ff9 bf476085 3f209393     *.F../!?.`G... ?
  40db3c:	bf47de65 3f1ff6cb bf485bca 3f1f599f     e.G....?.[H..Y.?
  40db4c:	bf48d8b3 3f1ebc12 bf495521 3f1e1e22     ..H....?!UI."..?
  40db5c:	bf49d112 3f1d7fd1 bf4a4c87 3f1ce11f     ..I....?.LJ....?
  40db6c:	bf4ac77f 3f1c420c bf4b41fa 3f1ba299     ..J..B.?.AK....?
  40db7c:	bf4bbbf8 3f1b02c6 bf4c3578 3f1a6293     ..K....?x5L..b.?
  40db8c:	bf4cae79 3f19c200 bf4d26fd 3f19210f     y.L....?.&M..!.?
  40db9c:	bf4d9f02 3f187fc0 bf4e1689 3f17de12     ..M....?..N....?
  40dbac:	bf4e8d90 3f173c07 bf4f0417 3f16999f     ..N..<.?..O....?
  40dbbc:	bf4f7a1f 3f15f6d9 bf4fefa8 3f1553b7     .zO....?..O..S.?
  40dbcc:	bf5064af 3f14b039 bf50d937 3f140c5f     .dP.9..?7.P._..?
  40dbdc:	bf514d3d 3f13682a bf51c0c2 3f12c39a     =MQ.*h.?..Q....?
  40dbec:	bf5233c6 3f121eb0 bf52a649 3f11796b     .3R....?I.R.ky.?
  40dbfc:	bf531849 3f10d3cd bf5389c7 3f102dd5     I.S....?..S..-.?
  40dc0c:	bf53fac3 3f0f8784 bf546b3b 3f0ee0db     ..S....?;kT....?
  40dc1c:	bf54db31 3f0e39da bf554aa4 3f0d9281     1.T..9.?.JU....?
  40dc2c:	bf55b993 3f0cead0 bf5627fe 3f0c42c9     ..U....?.'V..B.?
  40dc3c:	bf5695e5 3f0b9a6b bf570348 3f0af1b7     ..V.k..?H.W....?
  40dc4c:	bf577026 3f0a48ad bf57dc7f 3f099f4e     &pW..H.?..W.N..?
  40dc5c:	bf584853 3f08f59b bf58b3a1 3f084b92     SHX....?..X..K.?
  40dc6c:	bf591e6a 3f07a136 bf5988ad 3f06f686     j.Y.6..?..Y....?
  40dc7c:	bf59f26a 3f064b82 bf5a5ba0 3f05a02c     j.Y..K.?.[Z.,..?
  40dc8c:	bf5ac450 3f04f484 bf5b2c79 3f044889     P.Z....?y,[..H.?
  40dc9c:	bf5b941a 3f039c3d bf5bfb34 3f02ef9f     ..[.=..?4.[....?
  40dcac:	bf5c61c7 3f0242b1 bf5cc7d1 3f019573     .a\..B.?..\.s..?
  40dcbc:	bf5d2d53 3f00e7e4 bf5d924d 3f003a06     S-]....?M.]..:.?
  40dccc:	bf5df6be 3eff17b2 bf5e5aa6 3efdbabb     ..]....>.Z^....>
  40dcdc:	bf5ebe05 3efc5d27 bf5f20db 3efafef7     ..^.'].>. _....>
  40dcec:	bf5f8327 3ef9a02d bf5fe4e9 3ef840c8     '._.-..>.._..@.>
  40dcfc:	bf604621 3ef6e0cb bf60a6cf 3ef58035     !F`....>..`.5..>
  40dd0c:	bf6106f2 3ef41f07 bf61668a 3ef2bd43     ..a....>.fa.C..>
  40dd1c:	bf61c598 3ef15aea bf62241a 3eeff7fb     ..a..Z.>.$b....>
  40dd2c:	bf628210 3eee9479 bf62df7b 3eed3063     ..b.y..>{.b.c0.>
  40dd3c:	bf633c5a 3eebcbbb bf6398ac 3eea6681     Z<c....>..c..f.>
  40dd4c:	bf63f473 3ee900b7 bf644fac 3ee79a5d     s.c....>.Od.]..>
  40dd5c:	bf64aa59 3ee63375 bf650479 3ee4cbfe     Y.d.u3.>y.e....>
  40dd6c:	bf655e0b 3ee363fa bf65b710 3ee1fb6a     .^e..c.>..e.j..>
  40dd7c:	bf660f88 3ee0924f bf666771 3edf28a9     ..f.O..>qgf..(.>
  40dd8c:	bf66becc 3eddbe79 bf671599 3edc53c1     ..f.y..>..g..S.>
  40dd9c:	bf676bd8 3edae880 bf67c187 3ed97cb9     .kg....>..g..|.>
  40ddac:	bf6816a8 3ed8106b bf686b39 3ed6a399     ..h.k..>9kh....>
  40ddbc:	bf68bf3c 3ed53641 bf6912ae 3ed3c867     <.h.A6.>..i.g..>
  40ddcc:	bf696591 3ed25a09 bf69b7e4 3ed0eb2a     .ei..Z.>..i.*..>
  40dddc:	bf6a09a7 3ecf7bca bf6a5ad9 3ece0bea     ..j..{.>.Zj....>
  40ddec:	bf6aab7b 3ecc9b8b bf6afb8c 3ecb2aae     {.j....>..j..*.>
  40ddfc:	bf6b4b0c 3ec9b953 bf6b99fb 3ec8477c     .Kk.S..>..k.|G.>
  40de0c:	bf6be858 3ec6d529 bf6c3624 3ec5625c     X.k.)..>$6l.\b.>
  40de1c:	bf6c835e 3ec3ef15 bf6cd007 3ec27b55     ^.l....>..l.U{.>
  40de2c:	bf6d1c1d 3ec1071e bf6d67a1 3ebf926f     ..m....>.gm.o..>
  40de3c:	bf6db293 3ebe1d4a bf6dfcf2 3ebca7af     ..m.J..>..m....>
  40de4c:	bf6e46be 3ebb31a0 bf6e8ff8 3eb9bb1e     .Fn..1.>..n....>
  40de5c:	bf6ed89e 3eb8442a bf6f20b0 3eb6ccc3     ..n.*D.>. o....>
  40de6c:	bf6f6830 3eb554ec bf6faf1b 3eb3dca5     0ho..T.>..o....>
  40de7c:	bf6ff573 3eb263ef bf703b37 3eb0eacb     s.o..c.>7;p....>
  40de8c:	bf708066 3eaf713a bf70c502 3eadf73c     f.p.:q.>..p.<..>
  40de9c:	bf710908 3eac7cd4 bf714c7a 3eab0201     ..q..|.>zLq....>
  40deac:	bf718f57 3ea986c4 bf71d19f 3ea80b1f     W.q....>..q....>
  40debc:	bf721352 3ea68f12 bf725470 3ea5129f     R.r....>pTr....>
  40decc:	bf7294f8 3ea395c5 bf72d4eb 3ea21887     ..r....>..r....>
  40dedc:	bf731447 3ea09ae5 bf73530e 3e9f1cdf     G.s....>.Ss....>
  40deec:	bf73913f 3e9d9e78 bf73ced9 3e9c1faf     ?.s.x..>..s....>
  40defc:	bf740bdd 3e9aa086 bf74484b 3e9920fe     ..t....>KHt.. .>
  40df0c:	bf748422 3e97a117 bf74bf62 3e9620d2     ".t....>b.t.. .>
  40df1c:	bf74fa0b 3e94a031 bf75341d 3e931f35     ..t.1..>.4u.5..>
  40df2c:	bf756d97 3e919ddd bf75a67b 3e901c2c     .mu....>{.u.,..>
  40df3c:	bf75dec6 3e8e9a22 bf76167a 3e8d17c0     ..u."..>z.v....>
  40df4c:	bf764d97 3e8b9507 bf76841b 3e8a11f8     .Mv....>..v....>
  40df5c:	bf76ba07 3e888e93 bf76ef5b 3e870ada     ..v....>[.v....>
  40df6c:	bf772417 3e8586ce bf77583a 3e840270     .$w....>:Xw.p..>
  40df7c:	bf778bc5 3e827dc0 bf77beb7 3e80f8c0     ..w..}.>..w....>
  40df8c:	bf77f110 3e7ee6e1 bf7822d1 3e7bdba4     ..w...~>."x...{>
  40df9c:	bf7853f8 3e78cfcc bf788486 3e75c35a     .Sx...x>..x.Z.u>
  40dfac:	bf78b47b 3e72b651 bf78e3d6 3e6fa8b2     {.x.Q.r>..x...o>
  40dfbc:	bf791298 3e6c9a7f bf7940c0 3e698bba     ..y...l>.@y...i>
  40dfcc:	bf796e4e 3e667c66 bf799b43 3e636c83     Nny.f|f>C.y..lc>
  40dfdc:	bf79c79d 3e605c13 bf79f35e 3e5d4b1a     ..y..\`>^.y..K]>
  40dfec:	bf7a1e84 3e5a3997 bf7a4910 3e57278f     ..z..9Z>.Iz..'W>
  40dffc:	bf7a7302 3e541501 bf7a9c59 3e5101f1     .sz...T>Y.z...Q>
  40e00c:	bf7ac516 3e4dee60 bf7aed37 3e4ada4f     ..z.`.M>7.z.O.J>
  40e01c:	bf7b14be 3e47c5c2 bf7b3bab 3e44b0b9     ..{...G>.;{...D>
  40e02c:	bf7b61fc 3e419b37 bf7b87b2 3e3e853e     .a{.7.A>..{.>.>>
  40e03c:	bf7baccd 3e3b6ecf bf7bd14d 3e3857ec     ..{..n;>M.{..W8>
  40e04c:	bf7bf531 3e354098 bf7c187a 3e3228d4     1.{..@5>z.|..(2>
  40e05c:	bf7c3b28 3e2f10a2 bf7c5d3a 3e2bf804     (;|.../>:]|...+>
  40e06c:	bf7c7eb0 3e28defc bf7c9f8a 3e25c58c     .~|...(>..|...%>
  40e07c:	bf7cbfc9 3e22abb6 bf7cdf6c 3e1f917b     ..|...">l.|.{..>
  40e08c:	bf7cfe73 3e1c76de bf7d1cdd 3e195be0     s.|..v.>..}..[.>
  40e09c:	bf7d3aac 3e164083 bf7d57de 3e1324ca     .:}..@.>.W}..$.>
  40e0ac:	bf7d7474 3e1008b7 bf7d906e 3e0cec4a     tt}....>n.}.J..>
  40e0bc:	bf7dabcc 3e09cf86 bf7dc68c 3e06b26e     ..}....>..}.n..>
  40e0cc:	bf7de0b1 3e039502 bf7dfa38 3e007745     ..}....>8.}.Ew.>
  40e0dc:	bf7e1324 3dfab273 bf7e2b72 3df475c0     $.~.s..=r+~..u.=
  40e0ec:	bf7e4323 3dee3876 bf7e5a38 3de7fa9a     #C~.v8.=8Z~....=
  40e0fc:	bf7e70b0 3de1bc2e bf7e868b 3ddb7d37     .p~....=..~.7}.=
  40e10c:	bf7e9bc9 3dd53db9 bf7eb069 3dcefdb7     ..~..=.=i.~....=
  40e11c:	bf7ec46d 3dc8bd36 bf7ed7d4 3dc27c39     m.~.6..=..~.9|.=
  40e12c:	bf7eea9d 3dbc3ac3 bf7efcc9 3db5f8da     ..~..:.=..~....=
  40e13c:	bf7f0e58 3dafb680 bf7f1f49 3da973ba     X......=I....s.=
  40e14c:	bf7f2f9d 3da3308c bf7f3f54 3d9cecf9     ./...0.=T?.....=
  40e15c:	bf7f4e6d 3d96a905 bf7f5ce9 3d9064b4     mN.....=.\...d.=
  40e16c:	bf7f6ac7 3d8a200a bf7f7808 3d83db0a     .j... .=.x.....=
  40e17c:	bf7f84ab 3d7b2b74 bf7f90b1 3d6ea038     ....t+{=....8.n=
  40e18c:	bf7f9c18 3d621468 bf7fa6e3 3d55880e     ....h.b=......U=
  40e19c:	bf7fb10f 3d48fb2f bf7fba9e 3d3c6dd5     ..../.H=.....m<=
  40e1ac:	bf7fc38f 3d2fe007 bf7fcbe2 3d2351cc     ....../=.....Q#=
  40e1bc:	bf7fd398 3d16c32c bf7fdaaf 3d0a342f     ....,..=..../4.=
  40e1cc:	bf7fe129 3cfb49b9 bf7fe705 3ce22a7b     )....I.<....{*.<
  40e1dc:	bf7fec43 3cc90ab0 bf7ff0e3 3cafea69     C......<....i..<
  40e1ec:	bf7ff4e6 3c96c9b6 bf7ff84a 3c7b514b     .......<J...KQ{<
  40e1fc:	bf7ffb11 3c490e90 bf7ffd39 3c16cb59     ......I<9...Y..<
  40e20c:	bf7ffec4 3bc90f89 bf7fffb1 3b490fc7     .......;......I;
  40e21c:	bf800000 00000000 bf7fffb1 bb490fc7     ..............I.
  40e22c:	bf7ffec4 bbc90f89 bf7ffd39 bc16cb59     ........9...Y...
  40e23c:	bf7ffb11 bc490e90 bf7ff84a bc7b514b     ......I.J...KQ{.
  40e24c:	bf7ff4e6 bc96c9b6 bf7ff0e3 bcafea69     ............i...
  40e25c:	bf7fec43 bcc90ab0 bf7fe705 bce22a7b     C...........{*..
  40e26c:	bf7fe129 bcfb49b9 bf7fdaaf bd0a342f     )....I....../4..
  40e27c:	bf7fd398 bd16c32c bf7fcbe2 bd2351cc     ....,........Q#.
  40e28c:	bf7fc38f bd2fe007 bf7fba9e bd3c6dd5     ....../......m<.
  40e29c:	bf7fb10f bd48fb2f bf7fa6e3 bd55880e     ..../.H.......U.
  40e2ac:	bf7f9c18 bd621468 bf7f90b1 bd6ea038     ....h.b.....8.n.
  40e2bc:	bf7f84ab bd7b2b74 bf7f7808 bd83db0a     ....t+{..x......
  40e2cc:	bf7f6ac7 bd8a200a bf7f5ce9 bd9064b4     .j... ...\...d..
  40e2dc:	bf7f4e6d bd96a905 bf7f3f54 bd9cecf9     mN......T?......
  40e2ec:	bf7f2f9d bda3308c bf7f1f49 bda973ba     ./...0..I....s..
  40e2fc:	bf7f0e58 bdafb680 bf7efcc9 bdb5f8da     X.........~.....
  40e30c:	bf7eea9d bdbc3ac3 bf7ed7d4 bdc27c39     ..~..:....~.9|..
  40e31c:	bf7ec46d bdc8bd36 bf7eb069 bdcefdb7     m.~.6...i.~.....
  40e32c:	bf7e9bc9 bdd53db9 bf7e868b bddb7d37     ..~..=....~.7}..
  40e33c:	bf7e70b0 bde1bc2e bf7e5a38 bde7fa9a     .p~.....8Z~.....
  40e34c:	bf7e4323 bdee3876 bf7e2b72 bdf475c0     #C~.v8..r+~..u..
  40e35c:	bf7e1324 bdfab273 bf7dfa38 be007745     $.~.s...8.}.Ew..
  40e36c:	bf7de0b1 be039502 bf7dc68c be06b26e     ..}.......}.n...
  40e37c:	bf7dabcc be09cf86 bf7d906e be0cec4a     ..}.....n.}.J...
  40e38c:	bf7d7474 be1008b7 bf7d57de be1324ca     tt}......W}..$..
  40e39c:	bf7d3aac be164083 bf7d1cdd be195be0     .:}..@....}..[..
  40e3ac:	bf7cfe73 be1c76de bf7cdf6c be1f917b     s.|..v..l.|.{...
  40e3bc:	bf7cbfc9 be22abb6 bf7c9f8a be25c58c     ..|..."...|...%.
  40e3cc:	bf7c7eb0 be28defc bf7c5d3a be2bf804     .~|...(.:]|...+.
  40e3dc:	bf7c3b28 be2f10a2 bf7c187a be3228d4     (;|.../.z.|..(2.
  40e3ec:	bf7bf531 be354098 bf7bd14d be3857ec     1.{..@5.M.{..W8.
  40e3fc:	bf7baccd be3b6ecf bf7b87b2 be3e853e     ..{..n;...{.>.>.
  40e40c:	bf7b61fc be419b37 bf7b3bab be44b0b9     .a{.7.A..;{...D.
  40e41c:	bf7b14be be47c5c2 bf7aed37 be4ada4f     ..{...G.7.z.O.J.
  40e42c:	bf7ac516 be4dee60 bf7a9c59 be5101f1     ..z.`.M.Y.z...Q.
  40e43c:	bf7a7302 be541501 bf7a4910 be57278f     .sz...T..Iz..'W.
  40e44c:	bf7a1e84 be5a3997 bf79f35e be5d4b1a     ..z..9Z.^.y..K].
  40e45c:	bf79c79d be605c13 bf799b43 be636c83     ..y..\`.C.y..lc.
  40e46c:	bf796e4e be667c66 bf7940c0 be698bba     Nny.f|f..@y...i.
  40e47c:	bf791298 be6c9a7f bf78e3d6 be6fa8b2     ..y...l...x...o.
  40e48c:	bf78b47b be72b651 bf788486 be75c35a     {.x.Q.r...x.Z.u.
  40e49c:	bf7853f8 be78cfcc bf7822d1 be7bdba4     .Sx...x.."x...{.
  40e4ac:	bf77f110 be7ee6e1 bf77beb7 be80f8c0     ..w...~...w.....
  40e4bc:	bf778bc5 be827dc0 bf77583a be840270     ..w..}..:Xw.p...
  40e4cc:	bf772417 be8586ce bf76ef5b be870ada     .$w.....[.v.....
  40e4dc:	bf76ba07 be888e93 bf76841b be8a11f8     ..v.......v.....
  40e4ec:	bf764d97 be8b9507 bf76167a be8d17c0     .Mv.....z.v.....
  40e4fc:	bf75dec6 be8e9a22 bf75a67b be901c2c     ..u."...{.u.,...
  40e50c:	bf756d97 be919ddd bf75341d be931f35     .mu......4u.5...
  40e51c:	bf74fa0b be94a031 bf74bf62 be9620d2     ..t.1...b.t.. ..
  40e52c:	bf748422 be97a117 bf74484b be9920fe     ".t.....KHt.. ..
  40e53c:	bf740bdd be9aa086 bf73ced9 be9c1faf     ..t.......s.....
  40e54c:	bf73913f be9d9e78 bf73530e be9f1cdf     ?.s.x....Ss.....
  40e55c:	bf731447 bea09ae5 bf72d4eb bea21887     G.s.......r.....
  40e56c:	bf7294f8 bea395c5 bf725470 bea5129f     ..r.....pTr.....
  40e57c:	bf721352 bea68f12 bf71d19f bea80b1f     R.r.......q.....
  40e58c:	bf718f57 bea986c4 bf714c7a beab0201     W.q.....zLq.....
  40e59c:	bf710908 beac7cd4 bf70c502 beadf73c     ..q..|....p.<...
  40e5ac:	bf708066 beaf713a bf703b37 beb0eacb     f.p.:q..7;p.....
  40e5bc:	bf6ff573 beb263ef bf6faf1b beb3dca5     s.o..c....o.....
  40e5cc:	bf6f6830 beb554ec bf6f20b0 beb6ccc3     0ho..T... o.....
  40e5dc:	bf6ed89e beb8442a bf6e8ff8 beb9bb1e     ..n.*D....n.....
  40e5ec:	bf6e46be bebb31a0 bf6dfcf2 bebca7af     .Fn..1....m.....
  40e5fc:	bf6db293 bebe1d4a bf6d67a1 bebf926f     ..m.J....gm.o...
  40e60c:	bf6d1c1d bec1071e bf6cd007 bec27b55     ..m.......l.U{..
  40e61c:	bf6c835e bec3ef15 bf6c3624 bec5625c     ^.l.....$6l.\b..
  40e62c:	bf6be858 bec6d529 bf6b99fb bec8477c     X.k.).....k.|G..
  40e63c:	bf6b4b0c bec9b953 bf6afb8c becb2aae     .Kk.S.....j..*..
  40e64c:	bf6aab7b becc9b8b bf6a5ad9 bece0bea     {.j......Zj.....
  40e65c:	bf6a09a7 becf7bca bf69b7e4 bed0eb2a     ..j..{....i.*...
  40e66c:	bf696591 bed25a09 bf6912ae bed3c867     .ei..Z....i.g...
  40e67c:	bf68bf3c bed53641 bf686b39 bed6a399     <.h.A6..9kh.....
  40e68c:	bf6816a8 bed8106b bf67c187 bed97cb9     ..h.k.....g..|..
  40e69c:	bf676bd8 bedae880 bf671599 bedc53c1     .kg.......g..S..
  40e6ac:	bf66becc beddbe79 bf666771 bedf28a9     ..f.y...qgf..(..
  40e6bc:	bf660f88 bee0924f bf65b710 bee1fb6a     ..f.O.....e.j...
  40e6cc:	bf655e0b bee363fa bf650479 bee4cbfe     .^e..c..y.e.....
  40e6dc:	bf64aa59 bee63375 bf644fac bee79a5d     Y.d.u3...Od.]...
  40e6ec:	bf63f473 bee900b7 bf6398ac beea6681     s.c.......c..f..
  40e6fc:	bf633c5a beebcbbb bf62df7b beed3063     Z<c.....{.b.c0..
  40e70c:	bf628210 beee9479 bf62241a beeff7fb     ..b.y....$b.....
  40e71c:	bf61c598 bef15aea bf61668a bef2bd43     ..a..Z...fa.C...
  40e72c:	bf6106f2 bef41f07 bf60a6cf bef58035     ..a.......`.5...
  40e73c:	bf604621 bef6e0cb bf5fe4e9 bef840c8     !F`......._..@..
  40e74c:	bf5f8327 bef9a02d bf5f20db befafef7     '._.-.... _.....
  40e75c:	bf5ebe05 befc5d27 bf5e5aa6 befdbabb     ..^.']...Z^.....
  40e76c:	bf5df6be beff17b2 bf5d924d bf003a06     ..].....M.]..:..
  40e77c:	bf5d2d53 bf00e7e4 bf5cc7d1 bf019573     S-].......\.s...
  40e78c:	bf5c61c7 bf0242b1 bf5bfb34 bf02ef9f     .a\..B..4.[.....
  40e79c:	bf5b941a bf039c3d bf5b2c79 bf044889     ..[.=...y,[..H..
  40e7ac:	bf5ac450 bf04f484 bf5a5ba0 bf05a02c     P.Z......[Z.,...
  40e7bc:	bf59f26a bf064b82 bf5988ad bf06f686     j.Y..K....Y.....
  40e7cc:	bf591e6a bf07a136 bf58b3a1 bf084b92     j.Y.6.....X..K..
  40e7dc:	bf584853 bf08f59b bf57dc7f bf099f4e     SHX.......W.N...
  40e7ec:	bf577026 bf0a48ad bf570348 bf0af1b7     &pW..H..H.W.....
  40e7fc:	bf5695e5 bf0b9a6b bf5627fe bf0c42c9     ..V.k....'V..B..
  40e80c:	bf55b993 bf0cead0 bf554aa4 bf0d9281     ..U......JU.....
  40e81c:	bf54db31 bf0e39da bf546b3b bf0ee0db     1.T..9..;kT.....
  40e82c:	bf53fac3 bf0f8784 bf5389c7 bf102dd5     ..S.......S..-..
  40e83c:	bf531849 bf10d3cd bf52a649 bf11796b     I.S.....I.R.ky..
  40e84c:	bf5233c6 bf121eb0 bf51c0c2 bf12c39a     .3R.......Q.....
  40e85c:	bf514d3d bf13682a bf50d937 bf140c5f     =MQ.*h..7.P._...
  40e86c:	bf5064af bf14b039 bf4fefa8 bf1553b7     .dP.9.....O..S..
  40e87c:	bf4f7a1f bf15f6d9 bf4f0417 bf16999f     .zO.......O.....
  40e88c:	bf4e8d90 bf173c07 bf4e1689 bf17de12     ..N..<....N.....
  40e89c:	bf4d9f02 bf187fc0 bf4d26fd bf19210f     ..M......&M..!..
  40e8ac:	bf4cae79 bf19c200 bf4c3578 bf1a6293     y.L.....x5L..b..
  40e8bc:	bf4bbbf8 bf1b02c6 bf4b41fa bf1ba299     ..K......AK.....
  40e8cc:	bf4ac77f bf1c420c bf4a4c87 bf1ce11f     ..J..B...LJ.....
  40e8dc:	bf49d112 bf1d7fd1 bf495521 bf1e1e22     ..I.....!UI."...
  40e8ec:	bf48d8b3 bf1ebc12 bf485bca bf1f599f     ..H......[H..Y..
  40e8fc:	bf47de65 bf1ff6cb bf476085 bf209393     e.G......`G... .
  40e90c:	bf46e22a bf212ff9 bf466354 bf21cbfb     *.F../!.TcF...!.
  40e91c:	bf45e403 bf226799 bf456439 bf2302d3     ..E..g".9dE...#.
  40e92c:	bf44e3f5 bf239da9 bf446337 bf24381a     ..D...#.7cD..8$.
  40e93c:	bf43e200 bf24d225 bf436051 bf256bcb     ..C.%.$.Q`C..k%.
  40e94c:	bf42de29 bf26050a bf425b89 bf269de3     ).B...&..[B...&.
  40e95c:	bf41d870 bf273656 bf4154e1 bf27ce61     p.A.V6'..TA.a.'.
  40e96c:	bf40d0da bf286605 bf404c5c bf28fd41     ..@..f(.\L@.A.(.
  40e97c:	bf3fc767 bf299415 bf3f41fc bf2a2a80     g.?...)..A?..**.
  40e98c:	bf3ebc1b bf2ac082 bf3e35c5 bf2b561b     ..>...*..5>..V+.
  40e99c:	bf3daef9 bf2beb4a bf3d27b8 bf2c800f     ..=.J.+..'=...,.
  40e9ac:	bf3ca003 bf2d1469 bf3c17d9 bf2da859     ..<.i.-...<.Y.-.
  40e9bc:	bf3b8f3b bf2e3bde bf3b0629 bf2ecef7     ;.;..;..).;.....
  40e9cc:	bf3a7ca4 bf2f61a5 bf39f2ac bf2ff3e6     .|:..a/...9.../.
  40e9dc:	bf396842 bf3085bb bf38dd65 bf311722     Bh9...0.e.8.".1.
  40e9ec:	bf385216 bf31a81d bf37c655 bf3238aa     .R8...1.U.7..82.
  40e9fc:	bf373a23 bf32c8c9 bf36ad7f bf33587a     #:7...2...6.zX3.
  40ea0c:	bf36206c bf33e7bc bf3592e7 bf34768f     l 6...3...5..v4.
  40ea1c:	bf3504f3 bf3504f3 bf34768f bf3592e7     ..5...5..v4...5.
  40ea2c:	bf33e7bc bf36206c bf33587a bf36ad7f     ..3.l 6.zX3...6.
  40ea3c:	bf32c8c9 bf373a23 bf3238aa bf37c655     ..2.#:7..82.U.7.
  40ea4c:	bf31a81d bf385216 bf311722 bf38dd65     ..1..R8.".1.e.8.
  40ea5c:	bf3085bb bf396842 bf2ff3e6 bf39f2ac     ..0.Bh9.../...9.
  40ea6c:	bf2f61a5 bf3a7ca4 bf2ecef7 bf3b0629     .a/..|:.....).;.
  40ea7c:	bf2e3bde bf3b8f3b bf2da859 bf3c17d9     .;..;.;.Y.-...<.
  40ea8c:	bf2d1469 bf3ca003 bf2c800f bf3d27b8     i.-...<...,..'=.
  40ea9c:	bf2beb4a bf3daef9 bf2b561b bf3e35c5     J.+...=..V+..5>.
  40eaac:	bf2ac082 bf3ebc1b bf2a2a80 bf3f41fc     ..*...>..**..A?.
  40eabc:	bf299415 bf3fc767 bf28fd41 bf404c5c     ..).g.?.A.(.\L@.
  40eacc:	bf286605 bf40d0da bf27ce61 bf4154e1     .f(...@.a.'..TA.
  40eadc:	bf273656 bf41d870 bf269de3 bf425b89     V6'.p.A...&..[B.
  40eaec:	bf26050a bf42de29 bf256bcb bf436051     ..&.).B..k%.Q`C.
  40eafc:	bf24d225 bf43e200 bf24381a bf446337     %.$...C..8$.7cD.
  40eb0c:	bf239da9 bf44e3f5 bf2302d3 bf456439     ..#...D...#.9dE.
  40eb1c:	bf226799 bf45e403 bf21cbfb bf466354     .g"...E...!.TcF.
  40eb2c:	bf212ff9 bf46e22a bf209393 bf476085     ./!.*.F... ..`G.
  40eb3c:	bf1ff6cb bf47de65 bf1f599f bf485bca     ....e.G..Y...[H.
  40eb4c:	bf1ebc12 bf48d8b3 bf1e1e22 bf495521     ......H."...!UI.
  40eb5c:	bf1d7fd1 bf49d112 bf1ce11f bf4a4c87     ......I......LJ.
  40eb6c:	bf1c420c bf4ac77f bf1ba299 bf4b41fa     .B....J......AK.
  40eb7c:	bf1b02c6 bf4bbbf8 bf1a6293 bf4c3578     ......K..b..x5L.
  40eb8c:	bf19c200 bf4cae79 bf19210f bf4d26fd     ....y.L..!...&M.
  40eb9c:	bf187fc0 bf4d9f02 bf17de12 bf4e1689     ......M.......N.
  40ebac:	bf173c07 bf4e8d90 bf16999f bf4f0417     .<....N.......O.
  40ebbc:	bf15f6d9 bf4f7a1f bf1553b7 bf4fefa8     .....zO..S....O.
  40ebcc:	bf14b039 bf5064af bf140c5f bf50d937     9....dP._...7.P.
  40ebdc:	bf13682a bf514d3d bf12c39a bf51c0c2     *h..=MQ.......Q.
  40ebec:	bf121eb0 bf5233c6 bf11796b bf52a649     .....3R.ky..I.R.
  40ebfc:	bf10d3cd bf531849 bf102dd5 bf5389c7     ....I.S..-....S.
  40ec0c:	bf0f8784 bf53fac3 bf0ee0db bf546b3b     ......S.....;kT.
  40ec1c:	bf0e39da bf54db31 bf0d9281 bf554aa4     .9..1.T......JU.
  40ec2c:	bf0cead0 bf55b993 bf0c42c9 bf5627fe     ......U..B...'V.
  40ec3c:	bf0b9a6b bf5695e5 bf0af1b7 bf570348     k.....V.....H.W.
  40ec4c:	bf0a48ad bf577026 bf099f4e bf57dc7f     .H..&pW.N.....W.
  40ec5c:	bf08f59b bf584853 bf084b92 bf58b3a1     ....SHX..K....X.
  40ec6c:	bf07a136 bf591e6a bf06f686 bf5988ad     6...j.Y.......Y.
  40ec7c:	bf064b82 bf59f26a bf05a02c bf5a5ba0     .K..j.Y.,....[Z.
  40ec8c:	bf04f484 bf5ac450 bf044889 bf5b2c79     ....P.Z..H..y,[.
  40ec9c:	bf039c3d bf5b941a bf02ef9f bf5bfb34     =.....[.....4.[.
  40ecac:	bf0242b1 bf5c61c7 bf019573 bf5cc7d1     .B...a\.s.....\.
  40ecbc:	bf00e7e4 bf5d2d53 bf003a06 bf5d924d     ....S-]..:..M.].
  40eccc:	beff17b2 bf5df6be befdbabb bf5e5aa6     ......]......Z^.
  40ecdc:	befc5d27 bf5ebe05 befafef7 bf5f20db     ']....^...... _.
  40ecec:	bef9a02d bf5f8327 bef840c8 bf5fe4e9     -...'._..@...._.
  40ecfc:	bef6e0cb bf604621 bef58035 bf60a6cf     ....!F`.5.....`.
  40ed0c:	bef41f07 bf6106f2 bef2bd43 bf61668a     ......a.C....fa.
  40ed1c:	bef15aea bf61c598 beeff7fb bf62241a     .Z....a......$b.
  40ed2c:	beee9479 bf628210 beed3063 bf62df7b     y.....b.c0..{.b.
  40ed3c:	beebcbbb bf633c5a beea6681 bf6398ac     ....Z<c..f....c.
  40ed4c:	bee900b7 bf63f473 bee79a5d bf644fac     ....s.c.]....Od.
  40ed5c:	bee63375 bf64aa59 bee4cbfe bf650479     u3..Y.d.....y.e.
  40ed6c:	bee363fa bf655e0b bee1fb6a bf65b710     .c...^e.j.....e.
  40ed7c:	bee0924f bf660f88 bedf28a9 bf666771     O.....f..(..qgf.
  40ed8c:	beddbe79 bf66becc bedc53c1 bf671599     y.....f..S....g.
  40ed9c:	bedae880 bf676bd8 bed97cb9 bf67c187     .....kg..|....g.
  40edac:	bed8106b bf6816a8 bed6a399 bf686b39     k.....h.....9kh.
  40edbc:	bed53641 bf68bf3c bed3c867 bf6912ae     A6..<.h.g.....i.
  40edcc:	bed25a09 bf696591 bed0eb2a bf69b7e4     .Z...ei.*.....i.
  40eddc:	becf7bca bf6a09a7 bece0bea bf6a5ad9     .{....j......Zj.
  40edec:	becc9b8b bf6aab7b becb2aae bf6afb8c     ....{.j..*....j.
  40edfc:	bec9b953 bf6b4b0c bec8477c bf6b99fb     S....Kk.|G....k.
  40ee0c:	bec6d529 bf6be858 bec5625c bf6c3624     )...X.k.\b..$6l.
  40ee1c:	bec3ef15 bf6c835e bec27b55 bf6cd007     ....^.l.U{....l.
  40ee2c:	bec1071e bf6d1c1d bebf926f bf6d67a1     ......m.o....gm.
  40ee3c:	bebe1d4a bf6db293 bebca7af bf6dfcf2     J.....m.......m.
  40ee4c:	bebb31a0 bf6e46be beb9bb1e bf6e8ff8     .1...Fn.......n.
  40ee5c:	beb8442a bf6ed89e beb6ccc3 bf6f20b0     *D....n...... o.
  40ee6c:	beb554ec bf6f6830 beb3dca5 bf6faf1b     .T..0ho.......o.
  40ee7c:	beb263ef bf6ff573 beb0eacb bf703b37     .c..s.o.....7;p.
  40ee8c:	beaf713a bf708066 beadf73c bf70c502     :q..f.p.<.....p.
  40ee9c:	beac7cd4 bf710908 beab0201 bf714c7a     .|....q.....zLq.
  40eeac:	bea986c4 bf718f57 bea80b1f bf71d19f     ....W.q.......q.
  40eebc:	bea68f12 bf721352 bea5129f bf725470     ....R.r.....pTr.
  40eecc:	bea395c5 bf7294f8 bea21887 bf72d4eb     ......r.......r.
  40eedc:	bea09ae5 bf731447 be9f1cdf bf73530e     ....G.s......Ss.
  40eeec:	be9d9e78 bf73913f be9c1faf bf73ced9     x...?.s.......s.
  40eefc:	be9aa086 bf740bdd be9920fe bf74484b     ......t.. ..KHt.
  40ef0c:	be97a117 bf748422 be9620d2 bf74bf62     ....".t.. ..b.t.
  40ef1c:	be94a031 bf74fa0b be931f35 bf75341d     1.....t.5....4u.
  40ef2c:	be919ddd bf756d97 be901c2c bf75a67b     .....mu.,...{.u.
  40ef3c:	be8e9a22 bf75dec6 be8d17c0 bf76167a     ".....u.....z.v.
  40ef4c:	be8b9507 bf764d97 be8a11f8 bf76841b     .....Mv.......v.
  40ef5c:	be888e93 bf76ba07 be870ada bf76ef5b     ......v.....[.v.
  40ef6c:	be8586ce bf772417 be840270 bf77583a     .....$w.p...:Xw.
  40ef7c:	be827dc0 bf778bc5 be80f8c0 bf77beb7     .}....w.......w.
  40ef8c:	be7ee6e1 bf77f110 be7bdba4 bf7822d1     ..~...w...{.."x.
  40ef9c:	be78cfcc bf7853f8 be75c35a bf788486     ..x..Sx.Z.u...x.
  40efac:	be72b651 bf78b47b be6fa8b2 bf78e3d6     Q.r.{.x...o...x.
  40efbc:	be6c9a7f bf791298 be698bba bf7940c0     ..l...y...i..@y.
  40efcc:	be667c66 bf796e4e be636c83 bf799b43     f|f.Nny..lc.C.y.
  40efdc:	be605c13 bf79c79d be5d4b1a bf79f35e     .\`...y..K].^.y.
  40efec:	be5a3997 bf7a1e84 be57278f bf7a4910     .9Z...z..'W..Iz.
  40effc:	be541501 bf7a7302 be5101f1 bf7a9c59     ..T..sz...Q.Y.z.
  40f00c:	be4dee60 bf7ac516 be4ada4f bf7aed37     `.M...z.O.J.7.z.
  40f01c:	be47c5c2 bf7b14be be44b0b9 bf7b3bab     ..G...{...D..;{.
  40f02c:	be419b37 bf7b61fc be3e853e bf7b87b2     7.A..a{.>.>...{.
  40f03c:	be3b6ecf bf7baccd be3857ec bf7bd14d     .n;...{..W8.M.{.
  40f04c:	be354098 bf7bf531 be3228d4 bf7c187a     .@5.1.{..(2.z.|.
  40f05c:	be2f10a2 bf7c3b28 be2bf804 bf7c5d3a     ../.(;|...+.:]|.
  40f06c:	be28defc bf7c7eb0 be25c58c bf7c9f8a     ..(..~|...%...|.
  40f07c:	be22abb6 bf7cbfc9 be1f917b bf7cdf6c     .."...|.{...l.|.
  40f08c:	be1c76de bf7cfe73 be195be0 bf7d1cdd     .v..s.|..[....}.
  40f09c:	be164083 bf7d3aac be1324ca bf7d57de     .@...:}..$...W}.
  40f0ac:	be1008b7 bf7d7474 be0cec4a bf7d906e     ....tt}.J...n.}.
  40f0bc:	be09cf86 bf7dabcc be06b26e bf7dc68c     ......}.n.....}.
  40f0cc:	be039502 bf7de0b1 be007745 bf7dfa38     ......}.Ew..8.}.
  40f0dc:	bdfab273 bf7e1324 bdf475c0 bf7e2b72     s...$.~..u..r+~.
  40f0ec:	bdee3876 bf7e4323 bde7fa9a bf7e5a38     v8..#C~.....8Z~.
  40f0fc:	bde1bc2e bf7e70b0 bddb7d37 bf7e868b     .....p~.7}....~.
  40f10c:	bdd53db9 bf7e9bc9 bdcefdb7 bf7eb069     .=....~.....i.~.
  40f11c:	bdc8bd36 bf7ec46d bdc27c39 bf7ed7d4     6...m.~.9|....~.
  40f12c:	bdbc3ac3 bf7eea9d bdb5f8da bf7efcc9     .:....~.......~.
  40f13c:	bdafb680 bf7f0e58 bda973ba bf7f1f49     ....X....s..I...
  40f14c:	bda3308c bf7f2f9d bd9cecf9 bf7f3f54     .0.../......T?..
  40f15c:	bd96a905 bf7f4e6d bd9064b4 bf7f5ce9     ....mN...d...\..
  40f16c:	bd8a200a bf7f6ac7 bd83db0a bf7f7808     . ...j.......x..
  40f17c:	bd7b2b74 bf7f84ab bd6ea038 bf7f90b1     t+{.....8.n.....
  40f18c:	bd621468 bf7f9c18 bd55880e bf7fa6e3     h.b.......U.....
  40f19c:	bd48fb2f bf7fb10f bd3c6dd5 bf7fba9e     /.H......m<.....
  40f1ac:	bd2fe007 bf7fc38f bd2351cc bf7fcbe2     ../......Q#.....
  40f1bc:	bd16c32c bf7fd398 bd0a342f bf7fdaaf     ,......./4......
  40f1cc:	bcfb49b9 bf7fe129 bce22a7b bf7fe705     .I..)...{*......
  40f1dc:	bcc90ab0 bf7fec43 bcafea69 bf7ff0e3     ....C...i.......
  40f1ec:	bc96c9b6 bf7ff4e6 bc7b514b bf7ff84a     ........KQ{.J...
  40f1fc:	bc490e90 bf7ffb11 bc16cb59 bf7ffd39     ..I.....Y...9...
  40f20c:	bbc90f89 bf7ffec4 bb490fc7 bf7fffb1     ..........I.....
  40f21c:	80000000 bf800000 3b490fc7 bf7fffb1     ..........I;....
  40f22c:	3bc90f89 bf7ffec4 3c16cb59 bf7ffd39     ...;....Y..<9...
  40f23c:	3c490e90 bf7ffb11 3c7b514b bf7ff84a     ..I<....KQ{<J...
  40f24c:	3c96c9b6 bf7ff4e6 3cafea69 bf7ff0e3     ...<....i..<....
  40f25c:	3cc90ab0 bf7fec43 3ce22a7b bf7fe705     ...<C...{*.<....
  40f26c:	3cfb49b9 bf7fe129 3d0a342f bf7fdaaf     .I.<).../4.=....
  40f27c:	3d16c32c bf7fd398 3d2351cc bf7fcbe2     ,..=.....Q#=....
  40f28c:	3d2fe007 bf7fc38f 3d3c6dd5 bf7fba9e     ../=.....m<=....
  40f29c:	3d48fb2f bf7fb10f 3d55880e bf7fa6e3     /.H=......U=....
  40f2ac:	3d621468 bf7f9c18 3d6ea038 bf7f90b1     h.b=....8.n=....
  40f2bc:	3d7b2b74 bf7f84ab 3d83db0a bf7f7808     t+{=.......=.x..
  40f2cc:	3d8a200a bf7f6ac7 3d9064b4 bf7f5ce9     . .=.j...d.=.\..
  40f2dc:	3d96a905 bf7f4e6d 3d9cecf9 bf7f3f54     ...=mN.....=T?..
  40f2ec:	3da3308c bf7f2f9d 3da973ba bf7f1f49     .0.=./...s.=I...
  40f2fc:	3dafb680 bf7f0e58 3db5f8da bf7efcc9     ...=X......=..~.
  40f30c:	3dbc3ac3 bf7eea9d 3dc27c39 bf7ed7d4     .:.=..~.9|.=..~.
  40f31c:	3dc8bd36 bf7ec46d 3dcefdb7 bf7eb069     6..=m.~....=i.~.
  40f32c:	3dd53db9 bf7e9bc9 3ddb7d37 bf7e868b     .=.=..~.7}.=..~.
  40f33c:	3de1bc2e bf7e70b0 3de7fa9a bf7e5a38     ...=.p~....=8Z~.
  40f34c:	3dee3876 bf7e4323 3df475c0 bf7e2b72     v8.=#C~..u.=r+~.
  40f35c:	3dfab273 bf7e1324 3e007745 bf7dfa38     s..=$.~.Ew.>8.}.
  40f36c:	3e039502 bf7de0b1 3e06b26e bf7dc68c     ...>..}.n..>..}.
  40f37c:	3e09cf86 bf7dabcc 3e0cec4a bf7d906e     ...>..}.J..>n.}.
  40f38c:	3e1008b7 bf7d7474 3e1324ca bf7d57de     ...>tt}..$.>.W}.
  40f39c:	3e164083 bf7d3aac 3e195be0 bf7d1cdd     .@.>.:}..[.>..}.
  40f3ac:	3e1c76de bf7cfe73 3e1f917b bf7cdf6c     .v.>s.|.{..>l.|.
  40f3bc:	3e22abb6 bf7cbfc9 3e25c58c bf7c9f8a     ..">..|...%>..|.
  40f3cc:	3e28defc bf7c7eb0 3e2bf804 bf7c5d3a     ..(>.~|...+>:]|.
  40f3dc:	3e2f10a2 bf7c3b28 3e3228d4 bf7c187a     ../>(;|..(2>z.|.
  40f3ec:	3e354098 bf7bf531 3e3857ec bf7bd14d     .@5>1.{..W8>M.{.
  40f3fc:	3e3b6ecf bf7baccd 3e3e853e bf7b87b2     .n;>..{.>.>>..{.
  40f40c:	3e419b37 bf7b61fc 3e44b0b9 bf7b3bab     7.A>.a{...D>.;{.
  40f41c:	3e47c5c2 bf7b14be 3e4ada4f bf7aed37     ..G>..{.O.J>7.z.
  40f42c:	3e4dee60 bf7ac516 3e5101f1 bf7a9c59     `.M>..z...Q>Y.z.
  40f43c:	3e541501 bf7a7302 3e57278f bf7a4910     ..T>.sz..'W>.Iz.
  40f44c:	3e5a3997 bf7a1e84 3e5d4b1a bf79f35e     .9Z>..z..K]>^.y.
  40f45c:	3e605c13 bf79c79d 3e636c83 bf799b43     .\`>..y..lc>C.y.
  40f46c:	3e667c66 bf796e4e 3e698bba bf7940c0     f|f>Nny...i>.@y.
  40f47c:	3e6c9a7f bf791298 3e6fa8b2 bf78e3d6     ..l>..y...o>..x.
  40f48c:	3e72b651 bf78b47b 3e75c35a bf788486     Q.r>{.x.Z.u>..x.
  40f49c:	3e78cfcc bf7853f8 3e7bdba4 bf7822d1     ..x>.Sx...{>."x.
  40f4ac:	3e7ee6e1 bf77f110 3e80f8c0 bf77beb7     ..~>..w....>..w.
  40f4bc:	3e827dc0 bf778bc5 3e840270 bf77583a     .}.>..w.p..>:Xw.
  40f4cc:	3e8586ce bf772417 3e870ada bf76ef5b     ...>.$w....>[.v.
  40f4dc:	3e888e93 bf76ba07 3e8a11f8 bf76841b     ...>..v....>..v.
  40f4ec:	3e8b9507 bf764d97 3e8d17c0 bf76167a     ...>.Mv....>z.v.
  40f4fc:	3e8e9a22 bf75dec6 3e901c2c bf75a67b     "..>..u.,..>{.u.
  40f50c:	3e919ddd bf756d97 3e931f35 bf75341d     ...>.mu.5..>.4u.
  40f51c:	3e94a031 bf74fa0b 3e9620d2 bf74bf62     1..>..t.. .>b.t.
  40f52c:	3e97a117 bf748422 3e9920fe bf74484b     ...>".t.. .>KHt.
  40f53c:	3e9aa086 bf740bdd 3e9c1faf bf73ced9     ...>..t....>..s.
  40f54c:	3e9d9e78 bf73913f 3e9f1cdf bf73530e     x..>?.s....>.Ss.
  40f55c:	3ea09ae5 bf731447 3ea21887 bf72d4eb     ...>G.s....>..r.
  40f56c:	3ea395c5 bf7294f8 3ea5129f bf725470     ...>..r....>pTr.
  40f57c:	3ea68f12 bf721352 3ea80b1f bf71d19f     ...>R.r....>..q.
  40f58c:	3ea986c4 bf718f57 3eab0201 bf714c7a     ...>W.q....>zLq.
  40f59c:	3eac7cd4 bf710908 3eadf73c bf70c502     .|.>..q.<..>..p.
  40f5ac:	3eaf713a bf708066 3eb0eacb bf703b37     :q.>f.p....>7;p.
  40f5bc:	3eb263ef bf6ff573 3eb3dca5 bf6faf1b     .c.>s.o....>..o.
  40f5cc:	3eb554ec bf6f6830 3eb6ccc3 bf6f20b0     .T.>0ho....>. o.
  40f5dc:	3eb8442a bf6ed89e 3eb9bb1e bf6e8ff8     *D.>..n....>..n.
  40f5ec:	3ebb31a0 bf6e46be 3ebca7af bf6dfcf2     .1.>.Fn....>..m.
  40f5fc:	3ebe1d4a bf6db293 3ebf926f bf6d67a1     J..>..m.o..>.gm.
  40f60c:	3ec1071e bf6d1c1d 3ec27b55 bf6cd007     ...>..m.U{.>..l.
  40f61c:	3ec3ef15 bf6c835e 3ec5625c bf6c3624     ...>^.l.\b.>$6l.
  40f62c:	3ec6d529 bf6be858 3ec8477c bf6b99fb     )..>X.k.|G.>..k.
  40f63c:	3ec9b953 bf6b4b0c 3ecb2aae bf6afb8c     S..>.Kk..*.>..j.
  40f64c:	3ecc9b8b bf6aab7b 3ece0bea bf6a5ad9     ...>{.j....>.Zj.
  40f65c:	3ecf7bca bf6a09a7 3ed0eb2a bf69b7e4     .{.>..j.*..>..i.
  40f66c:	3ed25a09 bf696591 3ed3c867 bf6912ae     .Z.>.ei.g..>..i.
  40f67c:	3ed53641 bf68bf3c 3ed6a399 bf686b39     A6.><.h....>9kh.
  40f68c:	3ed8106b bf6816a8 3ed97cb9 bf67c187     k..>..h..|.>..g.
  40f69c:	3edae880 bf676bd8 3edc53c1 bf671599     ...>.kg..S.>..g.
  40f6ac:	3eddbe79 bf66becc 3edf28a9 bf666771     y..>..f..(.>qgf.
  40f6bc:	3ee0924f bf660f88 3ee1fb6a bf65b710     O..>..f.j..>..e.
  40f6cc:	3ee363fa bf655e0b 3ee4cbfe bf650479     .c.>.^e....>y.e.
  40f6dc:	3ee63375 bf64aa59 3ee79a5d bf644fac     u3.>Y.d.]..>.Od.
  40f6ec:	3ee900b7 bf63f473 3eea6681 bf6398ac     ...>s.c..f.>..c.
  40f6fc:	3eebcbbb bf633c5a 3eed3063 bf62df7b     ...>Z<c.c0.>{.b.
  40f70c:	3eee9479 bf628210 3eeff7fb bf62241a     y..>..b....>.$b.
  40f71c:	3ef15aea bf61c598 3ef2bd43 bf61668a     .Z.>..a.C..>.fa.
  40f72c:	3ef41f07 bf6106f2 3ef58035 bf60a6cf     ...>..a.5..>..`.
  40f73c:	3ef6e0cb bf604621 3ef840c8 bf5fe4e9     ...>!F`..@.>.._.
  40f74c:	3ef9a02d bf5f8327 3efafef7 bf5f20db     -..>'._....>. _.
  40f75c:	3efc5d27 bf5ebe05 3efdbabb bf5e5aa6     '].>..^....>.Z^.
  40f76c:	3eff17b2 bf5df6be 3f003a06 bf5d924d     ...>..]..:.?M.].
  40f77c:	3f00e7e4 bf5d2d53 3f019573 bf5cc7d1     ...?S-].s..?..\.
  40f78c:	3f0242b1 bf5c61c7 3f02ef9f bf5bfb34     .B.?.a\....?4.[.
  40f79c:	3f039c3d bf5b941a 3f044889 bf5b2c79     =..?..[..H.?y,[.
  40f7ac:	3f04f484 bf5ac450 3f05a02c bf5a5ba0     ...?P.Z.,..?.[Z.
  40f7bc:	3f064b82 bf59f26a 3f06f686 bf5988ad     .K.?j.Y....?..Y.
  40f7cc:	3f07a136 bf591e6a 3f084b92 bf58b3a1     6..?j.Y..K.?..X.
  40f7dc:	3f08f59b bf584853 3f099f4e bf57dc7f     ...?SHX.N..?..W.
  40f7ec:	3f0a48ad bf577026 3f0af1b7 bf570348     .H.?&pW....?H.W.
  40f7fc:	3f0b9a6b bf5695e5 3f0c42c9 bf5627fe     k..?..V..B.?.'V.
  40f80c:	3f0cead0 bf55b993 3f0d9281 bf554aa4     ...?..U....?.JU.
  40f81c:	3f0e39da bf54db31 3f0ee0db bf546b3b     .9.?1.T....?;kT.
  40f82c:	3f0f8784 bf53fac3 3f102dd5 bf5389c7     ...?..S..-.?..S.
  40f83c:	3f10d3cd bf531849 3f11796b bf52a649     ...?I.S.ky.?I.R.
  40f84c:	3f121eb0 bf5233c6 3f12c39a bf51c0c2     ...?.3R....?..Q.
  40f85c:	3f13682a bf514d3d 3f140c5f bf50d937     *h.?=MQ._..?7.P.
  40f86c:	3f14b039 bf5064af 3f1553b7 bf4fefa8     9..?.dP..S.?..O.
  40f87c:	3f15f6d9 bf4f7a1f 3f16999f bf4f0417     ...?.zO....?..O.
  40f88c:	3f173c07 bf4e8d90 3f17de12 bf4e1689     .<.?..N....?..N.
  40f89c:	3f187fc0 bf4d9f02 3f19210f bf4d26fd     ...?..M..!.?.&M.
  40f8ac:	3f19c200 bf4cae79 3f1a6293 bf4c3578     ...?y.L..b.?x5L.
  40f8bc:	3f1b02c6 bf4bbbf8 3f1ba299 bf4b41fa     ...?..K....?.AK.
  40f8cc:	3f1c420c bf4ac77f 3f1ce11f bf4a4c87     .B.?..J....?.LJ.
  40f8dc:	3f1d7fd1 bf49d112 3f1e1e22 bf495521     ...?..I."..?!UI.
  40f8ec:	3f1ebc12 bf48d8b3 3f1f599f bf485bca     ...?..H..Y.?.[H.
  40f8fc:	3f1ff6cb bf47de65 3f209393 bf476085     ...?e.G... ?.`G.
  40f90c:	3f212ff9 bf46e22a 3f21cbfb bf466354     ./!?*.F...!?TcF.
  40f91c:	3f226799 bf45e403 3f2302d3 bf456439     .g"?..E...#?9dE.
  40f92c:	3f239da9 bf44e3f5 3f24381a bf446337     ..#?..D..8$?7cD.
  40f93c:	3f24d225 bf43e200 3f256bcb bf436051     %.$?..C..k%?Q`C.
  40f94c:	3f26050a bf42de29 3f269de3 bf425b89     ..&?).B...&?.[B.
  40f95c:	3f273656 bf41d870 3f27ce61 bf4154e1     V6'?p.A.a.'?.TA.
  40f96c:	3f286605 bf40d0da 3f28fd41 bf404c5c     .f(?..@.A.(?\L@.
  40f97c:	3f299415 bf3fc767 3f2a2a80 bf3f41fc     ..)?g.?..**?.A?.
  40f98c:	3f2ac082 bf3ebc1b 3f2b561b bf3e35c5     ..*?..>..V+?.5>.
  40f99c:	3f2beb4a bf3daef9 3f2c800f bf3d27b8     J.+?..=...,?.'=.
  40f9ac:	3f2d1469 bf3ca003 3f2da859 bf3c17d9     i.-?..<.Y.-?..<.
  40f9bc:	3f2e3bde bf3b8f3b 3f2ecef7 bf3b0629     .;.?;.;....?).;.
  40f9cc:	3f2f61a5 bf3a7ca4 3f2ff3e6 bf39f2ac     .a/?.|:.../?..9.
  40f9dc:	3f3085bb bf396842 3f311722 bf38dd65     ..0?Bh9.".1?e.8.
  40f9ec:	3f31a81d bf385216 3f3238aa bf37c655     ..1?.R8..82?U.7.
  40f9fc:	3f32c8c9 bf373a23 3f33587a bf36ad7f     ..2?#:7.zX3?..6.
  40fa0c:	3f33e7bc bf36206c 3f34768f bf3592e7     ..3?l 6..v4?..5.
  40fa1c:	3f3504f3 bf3504f3 3f3592e7 bf34768f     ..5?..5...5?.v4.
  40fa2c:	3f36206c bf33e7bc 3f36ad7f bf33587a     l 6?..3...6?zX3.
  40fa3c:	3f373a23 bf32c8c9 3f37c655 bf3238aa     #:7?..2.U.7?.82.
  40fa4c:	3f385216 bf31a81d 3f38dd65 bf311722     .R8?..1.e.8?".1.
  40fa5c:	3f396842 bf3085bb 3f39f2ac bf2ff3e6     Bh9?..0...9?../.
  40fa6c:	3f3a7ca4 bf2f61a5 3f3b0629 bf2ecef7     .|:?.a/.).;?....
  40fa7c:	3f3b8f3b bf2e3bde 3f3c17d9 bf2da859     ;.;?.;....<?Y.-.
  40fa8c:	3f3ca003 bf2d1469 3f3d27b8 bf2c800f     ..<?i.-..'=?..,.
  40fa9c:	3f3daef9 bf2beb4a 3f3e35c5 bf2b561b     ..=?J.+..5>?.V+.
  40faac:	3f3ebc1b bf2ac082 3f3f41fc bf2a2a80     ..>?..*..A??.**.
  40fabc:	3f3fc767 bf299415 3f404c5c bf28fd41     g.??..).\L@?A.(.
  40facc:	3f40d0da bf286605 3f4154e1 bf27ce61     ..@?.f(..TA?a.'.
  40fadc:	3f41d870 bf273656 3f425b89 bf269de3     p.A?V6'..[B?..&.
  40faec:	3f42de29 bf26050a 3f436051 bf256bcb     ).B?..&.Q`C?.k%.
  40fafc:	3f43e200 bf24d225 3f446337 bf24381a     ..C?%.$.7cD?.8$.
  40fb0c:	3f44e3f5 bf239da9 3f456439 bf2302d3     ..D?..#.9dE?..#.
  40fb1c:	3f45e403 bf226799 3f466354 bf21cbfb     ..E?.g".TcF?..!.
  40fb2c:	3f46e22a bf212ff9 3f476085 bf209393     *.F?./!..`G?.. .
  40fb3c:	3f47de65 bf1ff6cb 3f485bca bf1f599f     e.G?.....[H?.Y..
  40fb4c:	3f48d8b3 bf1ebc12 3f495521 bf1e1e22     ..H?....!UI?"...
  40fb5c:	3f49d112 bf1d7fd1 3f4a4c87 bf1ce11f     ..I?.....LJ?....
  40fb6c:	3f4ac77f bf1c420c 3f4b41fa bf1ba299     ..J?.B...AK?....
  40fb7c:	3f4bbbf8 bf1b02c6 3f4c3578 bf1a6293     ..K?....x5L?.b..
  40fb8c:	3f4cae79 bf19c200 3f4d26fd bf19210f     y.L?.....&M?.!..
  40fb9c:	3f4d9f02 bf187fc0 3f4e1689 bf17de12     ..M?......N?....
  40fbac:	3f4e8d90 bf173c07 3f4f0417 bf16999f     ..N?.<....O?....
  40fbbc:	3f4f7a1f bf15f6d9 3f4fefa8 bf1553b7     .zO?......O?.S..
  40fbcc:	3f5064af bf14b039 3f50d937 bf140c5f     .dP?9...7.P?_...
  40fbdc:	3f514d3d bf13682a 3f51c0c2 bf12c39a     =MQ?*h....Q?....
  40fbec:	3f5233c6 bf121eb0 3f52a649 bf11796b     .3R?....I.R?ky..
  40fbfc:	3f531849 bf10d3cd 3f5389c7 bf102dd5     I.S?......S?.-..
  40fc0c:	3f53fac3 bf0f8784 3f546b3b bf0ee0db     ..S?....;kT?....
  40fc1c:	3f54db31 bf0e39da 3f554aa4 bf0d9281     1.T?.9...JU?....
  40fc2c:	3f55b993 bf0cead0 3f5627fe bf0c42c9     ..U?.....'V?.B..
  40fc3c:	3f5695e5 bf0b9a6b 3f570348 bf0af1b7     ..V?k...H.W?....
  40fc4c:	3f577026 bf0a48ad 3f57dc7f bf099f4e     &pW?.H....W?N...
  40fc5c:	3f584853 bf08f59b 3f58b3a1 bf084b92     SHX?......X?.K..
  40fc6c:	3f591e6a bf07a136 3f5988ad bf06f686     j.Y?6.....Y?....
  40fc7c:	3f59f26a bf064b82 3f5a5ba0 bf05a02c     j.Y?.K...[Z?,...
  40fc8c:	3f5ac450 bf04f484 3f5b2c79 bf044889     P.Z?....y,[?.H..
  40fc9c:	3f5b941a bf039c3d 3f5bfb34 bf02ef9f     ..[?=...4.[?....
  40fcac:	3f5c61c7 bf0242b1 3f5cc7d1 bf019573     .a\?.B....\?s...
  40fcbc:	3f5d2d53 bf00e7e4 3f5d924d bf003a06     S-]?....M.]?.:..
  40fccc:	3f5df6be beff17b2 3f5e5aa6 befdbabb     ..]?.....Z^?....
  40fcdc:	3f5ebe05 befc5d27 3f5f20db befafef7     ..^?']... _?....
  40fcec:	3f5f8327 bef9a02d 3f5fe4e9 bef840c8     '._?-....._?.@..
  40fcfc:	3f604621 bef6e0cb 3f60a6cf bef58035     !F`?......`?5...
  40fd0c:	3f6106f2 bef41f07 3f61668a bef2bd43     ..a?.....fa?C...
  40fd1c:	3f61c598 bef15aea 3f62241a beeff7fb     ..a?.Z...$b?....
  40fd2c:	3f628210 beee9479 3f62df7b beed3063     ..b?y...{.b?c0..
  40fd3c:	3f633c5a beebcbbb 3f6398ac beea6681     Z<c?......c?.f..
  40fd4c:	3f63f473 bee900b7 3f644fac bee79a5d     s.c?.....Od?]...
  40fd5c:	3f64aa59 bee63375 3f650479 bee4cbfe     Y.d?u3..y.e?....
  40fd6c:	3f655e0b bee363fa 3f65b710 bee1fb6a     .^e?.c....e?j...
  40fd7c:	3f660f88 bee0924f 3f666771 bedf28a9     ..f?O...qgf?.(..
  40fd8c:	3f66becc beddbe79 3f671599 bedc53c1     ..f?y.....g?.S..
  40fd9c:	3f676bd8 bedae880 3f67c187 bed97cb9     .kg?......g?.|..
  40fdac:	3f6816a8 bed8106b 3f686b39 bed6a399     ..h?k...9kh?....
  40fdbc:	3f68bf3c bed53641 3f6912ae bed3c867     <.h?A6....i?g...
  40fdcc:	3f696591 bed25a09 3f69b7e4 bed0eb2a     .ei?.Z....i?*...
  40fddc:	3f6a09a7 becf7bca 3f6a5ad9 bece0bea     ..j?.{...Zj?....
  40fdec:	3f6aab7b becc9b8b 3f6afb8c becb2aae     {.j?......j?.*..
  40fdfc:	3f6b4b0c bec9b953 3f6b99fb bec8477c     .Kk?S.....k?|G..
  40fe0c:	3f6be858 bec6d529 3f6c3624 bec5625c     X.k?)...$6l?\b..
  40fe1c:	3f6c835e bec3ef15 3f6cd007 bec27b55     ^.l?......l?U{..
  40fe2c:	3f6d1c1d bec1071e 3f6d67a1 bebf926f     ..m?.....gm?o...
  40fe3c:	3f6db293 bebe1d4a 3f6dfcf2 bebca7af     ..m?J.....m?....
  40fe4c:	3f6e46be bebb31a0 3f6e8ff8 beb9bb1e     .Fn?.1....n?....
  40fe5c:	3f6ed89e beb8442a 3f6f20b0 beb6ccc3     ..n?*D... o?....
  40fe6c:	3f6f6830 beb554ec 3f6faf1b beb3dca5     0ho?.T....o?....
  40fe7c:	3f6ff573 beb263ef 3f703b37 beb0eacb     s.o?.c..7;p?....
  40fe8c:	3f708066 beaf713a 3f70c502 beadf73c     f.p?:q....p?<...
  40fe9c:	3f710908 beac7cd4 3f714c7a beab0201     ..q?.|..zLq?....
  40feac:	3f718f57 bea986c4 3f71d19f bea80b1f     W.q?......q?....
  40febc:	3f721352 bea68f12 3f725470 bea5129f     R.r?....pTr?....
  40fecc:	3f7294f8 bea395c5 3f72d4eb bea21887     ..r?......r?....
  40fedc:	3f731447 bea09ae5 3f73530e be9f1cdf     G.s?.....Ss?....
  40feec:	3f73913f be9d9e78 3f73ced9 be9c1faf     ?.s?x.....s?....
  40fefc:	3f740bdd be9aa086 3f74484b be9920fe     ..t?....KHt?. ..
  40ff0c:	3f748422 be97a117 3f74bf62 be9620d2     ".t?....b.t?. ..
  40ff1c:	3f74fa0b be94a031 3f75341d be931f35     ..t?1....4u?5...
  40ff2c:	3f756d97 be919ddd 3f75a67b be901c2c     .mu?....{.u?,...
  40ff3c:	3f75dec6 be8e9a22 3f76167a be8d17c0     ..u?"...z.v?....
  40ff4c:	3f764d97 be8b9507 3f76841b be8a11f8     .Mv?......v?....
  40ff5c:	3f76ba07 be888e93 3f76ef5b be870ada     ..v?....[.v?....
  40ff6c:	3f772417 be8586ce 3f77583a be840270     .$w?....:Xw?p...
  40ff7c:	3f778bc5 be827dc0 3f77beb7 be80f8c0     ..w?.}....w?....
  40ff8c:	3f77f110 be7ee6e1 3f7822d1 be7bdba4     ..w?..~.."x?..{.
  40ff9c:	3f7853f8 be78cfcc 3f788486 be75c35a     .Sx?..x...x?Z.u.
  40ffac:	3f78b47b be72b651 3f78e3d6 be6fa8b2     {.x?Q.r...x?..o.
  40ffbc:	3f791298 be6c9a7f 3f7940c0 be698bba     ..y?..l..@y?..i.
  40ffcc:	3f796e4e be667c66 3f799b43 be636c83     Nny?f|f.C.y?.lc.
  40ffdc:	3f79c79d be605c13 3f79f35e be5d4b1a     ..y?.\`.^.y?.K].
  40ffec:	3f7a1e84 be5a3997 3f7a4910 be57278f     ..z?.9Z..Iz?.'W.
  40fffc:	3f7a7302 be541501 3f7a9c59 be5101f1     .sz?..T.Y.z?..Q.
  41000c:	3f7ac516 be4dee60 3f7aed37 be4ada4f     ..z?`.M.7.z?O.J.
  41001c:	3f7b14be be47c5c2 3f7b3bab be44b0b9     ..{?..G..;{?..D.
  41002c:	3f7b61fc be419b37 3f7b87b2 be3e853e     .a{?7.A...{?>.>.
  41003c:	3f7baccd be3b6ecf 3f7bd14d be3857ec     ..{?.n;.M.{?.W8.
  41004c:	3f7bf531 be354098 3f7c187a be3228d4     1.{?.@5.z.|?.(2.
  41005c:	3f7c3b28 be2f10a2 3f7c5d3a be2bf804     (;|?../.:]|?..+.
  41006c:	3f7c7eb0 be28defc 3f7c9f8a be25c58c     .~|?..(...|?..%.
  41007c:	3f7cbfc9 be22abb6 3f7cdf6c be1f917b     ..|?..".l.|?{...
  41008c:	3f7cfe73 be1c76de 3f7d1cdd be195be0     s.|?.v....}?.[..
  41009c:	3f7d3aac be164083 3f7d57de be1324ca     .:}?.@...W}?.$..
  4100ac:	3f7d7474 be1008b7 3f7d906e be0cec4a     tt}?....n.}?J...
  4100bc:	3f7dabcc be09cf86 3f7dc68c be06b26e     ..}?......}?n...
  4100cc:	3f7de0b1 be039502 3f7dfa38 be007745     ..}?....8.}?Ew..
  4100dc:	3f7e1324 bdfab273 3f7e2b72 bdf475c0     $.~?s...r+~?.u..
  4100ec:	3f7e4323 bdee3876 3f7e5a38 bde7fa9a     #C~?v8..8Z~?....
  4100fc:	3f7e70b0 bde1bc2e 3f7e868b bddb7d37     .p~?......~?7}..
  41010c:	3f7e9bc9 bdd53db9 3f7eb069 bdcefdb7     ..~?.=..i.~?....
  41011c:	3f7ec46d bdc8bd36 3f7ed7d4 bdc27c39     m.~?6.....~?9|..
  41012c:	3f7eea9d bdbc3ac3 3f7efcc9 bdb5f8da     ..~?.:....~?....
  41013c:	3f7f0e58 bdafb680 3f7f1f49 bda973ba     X..?....I..?.s..
  41014c:	3f7f2f9d bda3308c 3f7f3f54 bd9cecf9     ./.?.0..T?.?....
  41015c:	3f7f4e6d bd96a905 3f7f5ce9 bd9064b4     mN.?.....\.?.d..
  41016c:	3f7f6ac7 bd8a200a 3f7f7808 bd83db0a     .j.?. ...x.?....
  41017c:	3f7f84ab bd7b2b74 3f7f90b1 bd6ea038     ...?t+{....?8.n.
  41018c:	3f7f9c18 bd621468 3f7fa6e3 bd55880e     ...?h.b....?..U.
  41019c:	3f7fb10f bd48fb2f 3f7fba9e bd3c6dd5     ...?/.H....?.m<.
  4101ac:	3f7fc38f bd2fe007 3f7fcbe2 bd2351cc     ...?../....?.Q#.
  4101bc:	3f7fd398 bd16c32c 3f7fdaaf bd0a342f     ...?,......?/4..
  4101cc:	3f7fe129 bcfb49b9 3f7fe705 bce22a7b     )..?.I.....?{*..
  4101dc:	3f7fec43 bcc90ab0 3f7ff0e3 bcafea69     C..?.......?i...
  4101ec:	3f7ff4e6 bc96c9b6 3f7ff84a bc7b514b     ...?....J..?KQ{.
  4101fc:	3f7ffb11 bc490e90 3f7ffd39 bc16cb59     ...?..I.9..?Y...
  41020c:	3f7ffec4 bbc90f89 3f7fffb1 bb490fc7     ...?.......?..I.

0041021c <twiddleCoef_rfft_64>:
  41021c:	00000000 3f800000 3dc8bd36 3f7ec46d     .......?6..=m.~?
  41022c:	3e47c5c2 3f7b14be 3e94a031 3f74fa0b     ..G>..{?1..>..t?
  41023c:	3ec3ef15 3f6c835e 3ef15aea 3f61c598     ...>^.l?.Z.>..a?
  41024c:	3f0e39da 3f54db31 3f226799 3f45e403     .9.?1.T?.g"?..E?
  41025c:	3f3504f3 3f3504f3 3f45e403 3f226799     ..5?..5?..E?.g"?
  41026c:	3f54db31 3f0e39da 3f61c598 3ef15aea     1.T?.9.?..a?.Z.>
  41027c:	3f6c835e 3ec3ef15 3f74fa0b 3e94a031     ^.l?...>..t?1..>
  41028c:	3f7b14be 3e47c5c2 3f7ec46d 3dc8bd36     ..{?..G>m.~?6..=
  41029c:	3f800000 00000000 3f7ec46d bdc8bd36     ...?....m.~?6...
  4102ac:	3f7b14be be47c5c2 3f74fa0b be94a031     ..{?..G...t?1...
  4102bc:	3f6c835e bec3ef15 3f61c598 bef15aea     ^.l?......a?.Z..
  4102cc:	3f54db31 bf0e39da 3f45e403 bf226799     1.T?.9....E?.g".
  4102dc:	3f3504f3 bf3504f3 3f226799 bf45e403     ..5?..5..g"?..E.
  4102ec:	3f0e39da bf54db31 3ef15aea bf61c598     .9.?1.T..Z.>..a.
  4102fc:	3ec3ef15 bf6c835e 3e94a031 bf74fa0b     ...>^.l.1..>..t.
  41030c:	3e47c5c2 bf7b14be 3dc8bd36 bf7ec46d     ..G>..{.6..=m.~.

0041031c <armBitRevIndexTable64>:
  41031c:	00400008 00800010 00c00018 01000020     ..@......... ...
  41032c:	01400028 01800030 01c00038 00880050     (.@.0...8...P...
  41033c:	00c80058 01080060 01480068 01880070     X...`...h.H.p...
  41034c:	01c80078 00d00098 011000a0 015000a8     x.............P.
  41035c:	019000b0 01d000b8 011800e0 015800e8     ..............X.
  41036c:	019800f0 01d800f8 01600128 01a00130     ........(.`.0...
  41037c:	01e00138 01a80170 01e80178 01f001b8     8...p...x.......

0041038c <twiddleCoef_rfft_2048>:
  41038c:	00000000 3f800000 3b490fc7 3f7fffb1     .......?..I;...?
  41039c:	3bc90f89 3f7ffec4 3c16cb59 3f7ffd39     ...;...?Y..<9..?
  4103ac:	3c490e90 3f7ffb11 3c7b514b 3f7ff84a     ..I<...?KQ{<J..?
  4103bc:	3c96c9b6 3f7ff4e6 3cafea69 3f7ff0e3     ...<...?i..<...?
  4103cc:	3cc90ab0 3f7fec43 3ce22a7b 3f7fe705     ...<C..?{*.<...?
  4103dc:	3cfb49b9 3f7fe129 3d0a342f 3f7fdaaf     .I.<)..?/4.=...?
  4103ec:	3d16c32c 3f7fd398 3d2351cc 3f7fcbe2     ,..=...?.Q#=...?
  4103fc:	3d2fe007 3f7fc38f 3d3c6dd5 3f7fba9e     ../=...?.m<=...?
  41040c:	3d48fb2f 3f7fb10f 3d55880e 3f7fa6e3     /.H=...?..U=...?
  41041c:	3d621468 3f7f9c18 3d6ea038 3f7f90b1     h.b=...?8.n=...?
  41042c:	3d7b2b74 3f7f84ab 3d83db0a 3f7f7808     t+{=...?...=.x.?
  41043c:	3d8a200a 3f7f6ac7 3d9064b4 3f7f5ce9     . .=.j.?.d.=.\.?
  41044c:	3d96a905 3f7f4e6d 3d9cecf9 3f7f3f54     ...=mN.?...=T?.?
  41045c:	3da3308c 3f7f2f9d 3da973ba 3f7f1f49     .0.=./.?.s.=I..?
  41046c:	3dafb680 3f7f0e58 3db5f8da 3f7efcc9     ...=X..?...=..~?
  41047c:	3dbc3ac3 3f7eea9d 3dc27c39 3f7ed7d4     .:.=..~?9|.=..~?
  41048c:	3dc8bd36 3f7ec46d 3dcefdb7 3f7eb069     6..=m.~?...=i.~?
  41049c:	3dd53db9 3f7e9bc9 3ddb7d37 3f7e868b     .=.=..~?7}.=..~?
  4104ac:	3de1bc2e 3f7e70b0 3de7fa9a 3f7e5a38     ...=.p~?...=8Z~?
  4104bc:	3dee3876 3f7e4323 3df475c0 3f7e2b72     v8.=#C~?.u.=r+~?
  4104cc:	3dfab273 3f7e1324 3e007745 3f7dfa38     s..=$.~?Ew.>8.}?
  4104dc:	3e039502 3f7de0b1 3e06b26e 3f7dc68c     ...>..}?n..>..}?
  4104ec:	3e09cf86 3f7dabcc 3e0cec4a 3f7d906e     ...>..}?J..>n.}?
  4104fc:	3e1008b7 3f7d7474 3e1324ca 3f7d57de     ...>tt}?.$.>.W}?
  41050c:	3e164083 3f7d3aac 3e195be0 3f7d1cdd     .@.>.:}?.[.>..}?
  41051c:	3e1c76de 3f7cfe73 3e1f917b 3f7cdf6c     .v.>s.|?{..>l.|?
  41052c:	3e22abb6 3f7cbfc9 3e25c58c 3f7c9f8a     ..">..|?..%>..|?
  41053c:	3e28defc 3f7c7eb0 3e2bf804 3f7c5d3a     ..(>.~|?..+>:]|?
  41054c:	3e2f10a2 3f7c3b28 3e3228d4 3f7c187a     ../>(;|?.(2>z.|?
  41055c:	3e354098 3f7bf531 3e3857ec 3f7bd14d     .@5>1.{?.W8>M.{?
  41056c:	3e3b6ecf 3f7baccd 3e3e853e 3f7b87b2     .n;>..{?>.>>..{?
  41057c:	3e419b37 3f7b61fc 3e44b0b9 3f7b3bab     7.A>.a{?..D>.;{?
  41058c:	3e47c5c2 3f7b14be 3e4ada4f 3f7aed37     ..G>..{?O.J>7.z?
  41059c:	3e4dee60 3f7ac516 3e5101f1 3f7a9c59     `.M>..z?..Q>Y.z?
  4105ac:	3e541501 3f7a7302 3e57278f 3f7a4910     ..T>.sz?.'W>.Iz?
  4105bc:	3e5a3997 3f7a1e84 3e5d4b1a 3f79f35e     .9Z>..z?.K]>^.y?
  4105cc:	3e605c13 3f79c79d 3e636c83 3f799b43     .\`>..y?.lc>C.y?
  4105dc:	3e667c66 3f796e4e 3e698bba 3f7940c0     f|f>Nny?..i>.@y?
  4105ec:	3e6c9a7f 3f791298 3e6fa8b2 3f78e3d6     ..l>..y?..o>..x?
  4105fc:	3e72b651 3f78b47b 3e75c35a 3f788486     Q.r>{.x?Z.u>..x?
  41060c:	3e78cfcc 3f7853f8 3e7bdba4 3f7822d1     ..x>.Sx?..{>."x?
  41061c:	3e7ee6e1 3f77f110 3e80f8c0 3f77beb7     ..~>..w?...>..w?
  41062c:	3e827dc0 3f778bc5 3e840270 3f77583a     .}.>..w?p..>:Xw?
  41063c:	3e8586ce 3f772417 3e870ada 3f76ef5b     ...>.$w?...>[.v?
  41064c:	3e888e93 3f76ba07 3e8a11f8 3f76841b     ...>..v?...>..v?
  41065c:	3e8b9507 3f764d97 3e8d17c0 3f76167a     ...>.Mv?...>z.v?
  41066c:	3e8e9a22 3f75dec6 3e901c2c 3f75a67b     "..>..u?,..>{.u?
  41067c:	3e919ddd 3f756d97 3e931f35 3f75341d     ...>.mu?5..>.4u?
  41068c:	3e94a031 3f74fa0b 3e9620d2 3f74bf62     1..>..t?. .>b.t?
  41069c:	3e97a117 3f748422 3e9920fe 3f74484b     ...>".t?. .>KHt?
  4106ac:	3e9aa086 3f740bdd 3e9c1faf 3f73ced9     ...>..t?...>..s?
  4106bc:	3e9d9e78 3f73913f 3e9f1cdf 3f73530e     x..>?.s?...>.Ss?
  4106cc:	3ea09ae5 3f731447 3ea21887 3f72d4eb     ...>G.s?...>..r?
  4106dc:	3ea395c5 3f7294f8 3ea5129f 3f725470     ...>..r?...>pTr?
  4106ec:	3ea68f12 3f721352 3ea80b1f 3f71d19f     ...>R.r?...>..q?
  4106fc:	3ea986c4 3f718f57 3eab0201 3f714c7a     ...>W.q?...>zLq?
  41070c:	3eac7cd4 3f710908 3eadf73c 3f70c502     .|.>..q?<..>..p?
  41071c:	3eaf713a 3f708066 3eb0eacb 3f703b37     :q.>f.p?...>7;p?
  41072c:	3eb263ef 3f6ff573 3eb3dca5 3f6faf1b     .c.>s.o?...>..o?
  41073c:	3eb554ec 3f6f6830 3eb6ccc3 3f6f20b0     .T.>0ho?...>. o?
  41074c:	3eb8442a 3f6ed89e 3eb9bb1e 3f6e8ff8     *D.>..n?...>..n?
  41075c:	3ebb31a0 3f6e46be 3ebca7af 3f6dfcf2     .1.>.Fn?...>..m?
  41076c:	3ebe1d4a 3f6db293 3ebf926f 3f6d67a1     J..>..m?o..>.gm?
  41077c:	3ec1071e 3f6d1c1d 3ec27b55 3f6cd007     ...>..m?U{.>..l?
  41078c:	3ec3ef15 3f6c835e 3ec5625c 3f6c3624     ...>^.l?\b.>$6l?
  41079c:	3ec6d529 3f6be858 3ec8477c 3f6b99fb     )..>X.k?|G.>..k?
  4107ac:	3ec9b953 3f6b4b0c 3ecb2aae 3f6afb8c     S..>.Kk?.*.>..j?
  4107bc:	3ecc9b8b 3f6aab7b 3ece0bea 3f6a5ad9     ...>{.j?...>.Zj?
  4107cc:	3ecf7bca 3f6a09a7 3ed0eb2a 3f69b7e4     .{.>..j?*..>..i?
  4107dc:	3ed25a09 3f696591 3ed3c867 3f6912ae     .Z.>.ei?g..>..i?
  4107ec:	3ed53641 3f68bf3c 3ed6a399 3f686b39     A6.><.h?...>9kh?
  4107fc:	3ed8106b 3f6816a8 3ed97cb9 3f67c187     k..>..h?.|.>..g?
  41080c:	3edae880 3f676bd8 3edc53c1 3f671599     ...>.kg?.S.>..g?
  41081c:	3eddbe79 3f66becc 3edf28a9 3f666771     y..>..f?.(.>qgf?
  41082c:	3ee0924f 3f660f88 3ee1fb6a 3f65b710     O..>..f?j..>..e?
  41083c:	3ee363fa 3f655e0b 3ee4cbfe 3f650479     .c.>.^e?...>y.e?
  41084c:	3ee63375 3f64aa59 3ee79a5d 3f644fac     u3.>Y.d?]..>.Od?
  41085c:	3ee900b7 3f63f473 3eea6681 3f6398ac     ...>s.c?.f.>..c?
  41086c:	3eebcbbb 3f633c5a 3eed3063 3f62df7b     ...>Z<c?c0.>{.b?
  41087c:	3eee9479 3f628210 3eeff7fb 3f62241a     y..>..b?...>.$b?
  41088c:	3ef15aea 3f61c598 3ef2bd43 3f61668a     .Z.>..a?C..>.fa?
  41089c:	3ef41f07 3f6106f2 3ef58035 3f60a6cf     ...>..a?5..>..`?
  4108ac:	3ef6e0cb 3f604621 3ef840c8 3f5fe4e9     ...>!F`?.@.>.._?
  4108bc:	3ef9a02d 3f5f8327 3efafef7 3f5f20db     -..>'._?...>. _?
  4108cc:	3efc5d27 3f5ebe05 3efdbabb 3f5e5aa6     '].>..^?...>.Z^?
  4108dc:	3eff17b2 3f5df6be 3f003a06 3f5d924d     ...>..]?.:.?M.]?
  4108ec:	3f00e7e4 3f5d2d53 3f019573 3f5cc7d1     ...?S-]?s..?..\?
  4108fc:	3f0242b1 3f5c61c7 3f02ef9f 3f5bfb34     .B.?.a\?...?4.[?
  41090c:	3f039c3d 3f5b941a 3f044889 3f5b2c79     =..?..[?.H.?y,[?
  41091c:	3f04f484 3f5ac450 3f05a02c 3f5a5ba0     ...?P.Z?,..?.[Z?
  41092c:	3f064b82 3f59f26a 3f06f686 3f5988ad     .K.?j.Y?...?..Y?
  41093c:	3f07a136 3f591e6a 3f084b92 3f58b3a1     6..?j.Y?.K.?..X?
  41094c:	3f08f59b 3f584853 3f099f4e 3f57dc7f     ...?SHX?N..?..W?
  41095c:	3f0a48ad 3f577026 3f0af1b7 3f570348     .H.?&pW?...?H.W?
  41096c:	3f0b9a6b 3f5695e5 3f0c42c9 3f5627fe     k..?..V?.B.?.'V?
  41097c:	3f0cead0 3f55b993 3f0d9281 3f554aa4     ...?..U?...?.JU?
  41098c:	3f0e39da 3f54db31 3f0ee0db 3f546b3b     .9.?1.T?...?;kT?
  41099c:	3f0f8784 3f53fac3 3f102dd5 3f5389c7     ...?..S?.-.?..S?
  4109ac:	3f10d3cd 3f531849 3f11796b 3f52a649     ...?I.S?ky.?I.R?
  4109bc:	3f121eb0 3f5233c6 3f12c39a 3f51c0c2     ...?.3R?...?..Q?
  4109cc:	3f13682a 3f514d3d 3f140c5f 3f50d937     *h.?=MQ?_..?7.P?
  4109dc:	3f14b039 3f5064af 3f1553b7 3f4fefa8     9..?.dP?.S.?..O?
  4109ec:	3f15f6d9 3f4f7a1f 3f16999f 3f4f0417     ...?.zO?...?..O?
  4109fc:	3f173c07 3f4e8d90 3f17de12 3f4e1689     .<.?..N?...?..N?
  410a0c:	3f187fc0 3f4d9f02 3f19210f 3f4d26fd     ...?..M?.!.?.&M?
  410a1c:	3f19c200 3f4cae79 3f1a6293 3f4c3578     ...?y.L?.b.?x5L?
  410a2c:	3f1b02c6 3f4bbbf8 3f1ba299 3f4b41fa     ...?..K?...?.AK?
  410a3c:	3f1c420c 3f4ac77f 3f1ce11f 3f4a4c87     .B.?..J?...?.LJ?
  410a4c:	3f1d7fd1 3f49d112 3f1e1e22 3f495521     ...?..I?"..?!UI?
  410a5c:	3f1ebc12 3f48d8b3 3f1f599f 3f485bca     ...?..H?.Y.?.[H?
  410a6c:	3f1ff6cb 3f47de65 3f209393 3f476085     ...?e.G?.. ?.`G?
  410a7c:	3f212ff9 3f46e22a 3f21cbfb 3f466354     ./!?*.F?..!?TcF?
  410a8c:	3f226799 3f45e403 3f2302d3 3f456439     .g"?..E?..#?9dE?
  410a9c:	3f239da9 3f44e3f5 3f24381a 3f446337     ..#?..D?.8$?7cD?
  410aac:	3f24d225 3f43e200 3f256bcb 3f436051     %.$?..C?.k%?Q`C?
  410abc:	3f26050a 3f42de29 3f269de3 3f425b89     ..&?).B?..&?.[B?
  410acc:	3f273656 3f41d870 3f27ce61 3f4154e1     V6'?p.A?a.'?.TA?
  410adc:	3f286605 3f40d0da 3f28fd41 3f404c5c     .f(?..@?A.(?\L@?
  410aec:	3f299415 3f3fc767 3f2a2a80 3f3f41fc     ..)?g.??.**?.A??
  410afc:	3f2ac082 3f3ebc1b 3f2b561b 3f3e35c5     ..*?..>?.V+?.5>?
  410b0c:	3f2beb4a 3f3daef9 3f2c800f 3f3d27b8     J.+?..=?..,?.'=?
  410b1c:	3f2d1469 3f3ca003 3f2da859 3f3c17d9     i.-?..<?Y.-?..<?
  410b2c:	3f2e3bde 3f3b8f3b 3f2ecef7 3f3b0629     .;.?;.;?...?).;?
  410b3c:	3f2f61a5 3f3a7ca4 3f2ff3e6 3f39f2ac     .a/?.|:?../?..9?
  410b4c:	3f3085bb 3f396842 3f311722 3f38dd65     ..0?Bh9?".1?e.8?
  410b5c:	3f31a81d 3f385216 3f3238aa 3f37c655     ..1?.R8?.82?U.7?
  410b6c:	3f32c8c9 3f373a23 3f33587a 3f36ad7f     ..2?#:7?zX3?..6?
  410b7c:	3f33e7bc 3f36206c 3f34768f 3f3592e7     ..3?l 6?.v4?..5?
  410b8c:	3f3504f3 3f3504f3 3f3592e7 3f34768f     ..5?..5?..5?.v4?
  410b9c:	3f36206c 3f33e7bc 3f36ad7f 3f33587a     l 6?..3?..6?zX3?
  410bac:	3f373a23 3f32c8c9 3f37c655 3f3238aa     #:7?..2?U.7?.82?
  410bbc:	3f385216 3f31a81d 3f38dd65 3f311722     .R8?..1?e.8?".1?
  410bcc:	3f396842 3f3085bb 3f39f2ac 3f2ff3e6     Bh9?..0?..9?../?
  410bdc:	3f3a7ca4 3f2f61a5 3f3b0629 3f2ecef7     .|:?.a/?).;?...?
  410bec:	3f3b8f3b 3f2e3bde 3f3c17d9 3f2da859     ;.;?.;.?..<?Y.-?
  410bfc:	3f3ca003 3f2d1469 3f3d27b8 3f2c800f     ..<?i.-?.'=?..,?
  410c0c:	3f3daef9 3f2beb4a 3f3e35c5 3f2b561b     ..=?J.+?.5>?.V+?
  410c1c:	3f3ebc1b 3f2ac082 3f3f41fc 3f2a2a80     ..>?..*?.A??.**?
  410c2c:	3f3fc767 3f299415 3f404c5c 3f28fd41     g.??..)?\L@?A.(?
  410c3c:	3f40d0da 3f286605 3f4154e1 3f27ce61     ..@?.f(?.TA?a.'?
  410c4c:	3f41d870 3f273656 3f425b89 3f269de3     p.A?V6'?.[B?..&?
  410c5c:	3f42de29 3f26050a 3f436051 3f256bcb     ).B?..&?Q`C?.k%?
  410c6c:	3f43e200 3f24d225 3f446337 3f24381a     ..C?%.$?7cD?.8$?
  410c7c:	3f44e3f5 3f239da9 3f456439 3f2302d3     ..D?..#?9dE?..#?
  410c8c:	3f45e403 3f226799 3f466354 3f21cbfb     ..E?.g"?TcF?..!?
  410c9c:	3f46e22a 3f212ff9 3f476085 3f209393     *.F?./!?.`G?.. ?
  410cac:	3f47de65 3f1ff6cb 3f485bca 3f1f599f     e.G?...?.[H?.Y.?
  410cbc:	3f48d8b3 3f1ebc12 3f495521 3f1e1e22     ..H?...?!UI?"..?
  410ccc:	3f49d112 3f1d7fd1 3f4a4c87 3f1ce11f     ..I?...?.LJ?...?
  410cdc:	3f4ac77f 3f1c420c 3f4b41fa 3f1ba299     ..J?.B.?.AK?...?
  410cec:	3f4bbbf8 3f1b02c6 3f4c3578 3f1a6293     ..K?...?x5L?.b.?
  410cfc:	3f4cae79 3f19c200 3f4d26fd 3f19210f     y.L?...?.&M?.!.?
  410d0c:	3f4d9f02 3f187fc0 3f4e1689 3f17de12     ..M?...?..N?...?
  410d1c:	3f4e8d90 3f173c07 3f4f0417 3f16999f     ..N?.<.?..O?...?
  410d2c:	3f4f7a1f 3f15f6d9 3f4fefa8 3f1553b7     .zO?...?..O?.S.?
  410d3c:	3f5064af 3f14b039 3f50d937 3f140c5f     .dP?9..?7.P?_..?
  410d4c:	3f514d3d 3f13682a 3f51c0c2 3f12c39a     =MQ?*h.?..Q?...?
  410d5c:	3f5233c6 3f121eb0 3f52a649 3f11796b     .3R?...?I.R?ky.?
  410d6c:	3f531849 3f10d3cd 3f5389c7 3f102dd5     I.S?...?..S?.-.?
  410d7c:	3f53fac3 3f0f8784 3f546b3b 3f0ee0db     ..S?...?;kT?...?
  410d8c:	3f54db31 3f0e39da 3f554aa4 3f0d9281     1.T?.9.?.JU?...?
  410d9c:	3f55b993 3f0cead0 3f5627fe 3f0c42c9     ..U?...?.'V?.B.?
  410dac:	3f5695e5 3f0b9a6b 3f570348 3f0af1b7     ..V?k..?H.W?...?
  410dbc:	3f577026 3f0a48ad 3f57dc7f 3f099f4e     &pW?.H.?..W?N..?
  410dcc:	3f584853 3f08f59b 3f58b3a1 3f084b92     SHX?...?..X?.K.?
  410ddc:	3f591e6a 3f07a136 3f5988ad 3f06f686     j.Y?6..?..Y?...?
  410dec:	3f59f26a 3f064b82 3f5a5ba0 3f05a02c     j.Y?.K.?.[Z?,..?
  410dfc:	3f5ac450 3f04f484 3f5b2c79 3f044889     P.Z?...?y,[?.H.?
  410e0c:	3f5b941a 3f039c3d 3f5bfb34 3f02ef9f     ..[?=..?4.[?...?
  410e1c:	3f5c61c7 3f0242b1 3f5cc7d1 3f019573     .a\?.B.?..\?s..?
  410e2c:	3f5d2d53 3f00e7e4 3f5d924d 3f003a06     S-]?...?M.]?.:.?
  410e3c:	3f5df6be 3eff17b2 3f5e5aa6 3efdbabb     ..]?...>.Z^?...>
  410e4c:	3f5ebe05 3efc5d27 3f5f20db 3efafef7     ..^?'].>. _?...>
  410e5c:	3f5f8327 3ef9a02d 3f5fe4e9 3ef840c8     '._?-..>.._?.@.>
  410e6c:	3f604621 3ef6e0cb 3f60a6cf 3ef58035     !F`?...>..`?5..>
  410e7c:	3f6106f2 3ef41f07 3f61668a 3ef2bd43     ..a?...>.fa?C..>
  410e8c:	3f61c598 3ef15aea 3f62241a 3eeff7fb     ..a?.Z.>.$b?...>
  410e9c:	3f628210 3eee9479 3f62df7b 3eed3063     ..b?y..>{.b?c0.>
  410eac:	3f633c5a 3eebcbbb 3f6398ac 3eea6681     Z<c?...>..c?.f.>
  410ebc:	3f63f473 3ee900b7 3f644fac 3ee79a5d     s.c?...>.Od?]..>
  410ecc:	3f64aa59 3ee63375 3f650479 3ee4cbfe     Y.d?u3.>y.e?...>
  410edc:	3f655e0b 3ee363fa 3f65b710 3ee1fb6a     .^e?.c.>..e?j..>
  410eec:	3f660f88 3ee0924f 3f666771 3edf28a9     ..f?O..>qgf?.(.>
  410efc:	3f66becc 3eddbe79 3f671599 3edc53c1     ..f?y..>..g?.S.>
  410f0c:	3f676bd8 3edae880 3f67c187 3ed97cb9     .kg?...>..g?.|.>
  410f1c:	3f6816a8 3ed8106b 3f686b39 3ed6a399     ..h?k..>9kh?...>
  410f2c:	3f68bf3c 3ed53641 3f6912ae 3ed3c867     <.h?A6.>..i?g..>
  410f3c:	3f696591 3ed25a09 3f69b7e4 3ed0eb2a     .ei?.Z.>..i?*..>
  410f4c:	3f6a09a7 3ecf7bca 3f6a5ad9 3ece0bea     ..j?.{.>.Zj?...>
  410f5c:	3f6aab7b 3ecc9b8b 3f6afb8c 3ecb2aae     {.j?...>..j?.*.>
  410f6c:	3f6b4b0c 3ec9b953 3f6b99fb 3ec8477c     .Kk?S..>..k?|G.>
  410f7c:	3f6be858 3ec6d529 3f6c3624 3ec5625c     X.k?)..>$6l?\b.>
  410f8c:	3f6c835e 3ec3ef15 3f6cd007 3ec27b55     ^.l?...>..l?U{.>
  410f9c:	3f6d1c1d 3ec1071e 3f6d67a1 3ebf926f     ..m?...>.gm?o..>
  410fac:	3f6db293 3ebe1d4a 3f6dfcf2 3ebca7af     ..m?J..>..m?...>
  410fbc:	3f6e46be 3ebb31a0 3f6e8ff8 3eb9bb1e     .Fn?.1.>..n?...>
  410fcc:	3f6ed89e 3eb8442a 3f6f20b0 3eb6ccc3     ..n?*D.>. o?...>
  410fdc:	3f6f6830 3eb554ec 3f6faf1b 3eb3dca5     0ho?.T.>..o?...>
  410fec:	3f6ff573 3eb263ef 3f703b37 3eb0eacb     s.o?.c.>7;p?...>
  410ffc:	3f708066 3eaf713a 3f70c502 3eadf73c     f.p?:q.>..p?<..>
  41100c:	3f710908 3eac7cd4 3f714c7a 3eab0201     ..q?.|.>zLq?...>
  41101c:	3f718f57 3ea986c4 3f71d19f 3ea80b1f     W.q?...>..q?...>
  41102c:	3f721352 3ea68f12 3f725470 3ea5129f     R.r?...>pTr?...>
  41103c:	3f7294f8 3ea395c5 3f72d4eb 3ea21887     ..r?...>..r?...>
  41104c:	3f731447 3ea09ae5 3f73530e 3e9f1cdf     G.s?...>.Ss?...>
  41105c:	3f73913f 3e9d9e78 3f73ced9 3e9c1faf     ?.s?x..>..s?...>
  41106c:	3f740bdd 3e9aa086 3f74484b 3e9920fe     ..t?...>KHt?. .>
  41107c:	3f748422 3e97a117 3f74bf62 3e9620d2     ".t?...>b.t?. .>
  41108c:	3f74fa0b 3e94a031 3f75341d 3e931f35     ..t?1..>.4u?5..>
  41109c:	3f756d97 3e919ddd 3f75a67b 3e901c2c     .mu?...>{.u?,..>
  4110ac:	3f75dec6 3e8e9a22 3f76167a 3e8d17c0     ..u?"..>z.v?...>
  4110bc:	3f764d97 3e8b9507 3f76841b 3e8a11f8     .Mv?...>..v?...>
  4110cc:	3f76ba07 3e888e93 3f76ef5b 3e870ada     ..v?...>[.v?...>
  4110dc:	3f772417 3e8586ce 3f77583a 3e840270     .$w?...>:Xw?p..>
  4110ec:	3f778bc5 3e827dc0 3f77beb7 3e80f8c0     ..w?.}.>..w?...>
  4110fc:	3f77f110 3e7ee6e1 3f7822d1 3e7bdba4     ..w?..~>."x?..{>
  41110c:	3f7853f8 3e78cfcc 3f788486 3e75c35a     .Sx?..x>..x?Z.u>
  41111c:	3f78b47b 3e72b651 3f78e3d6 3e6fa8b2     {.x?Q.r>..x?..o>
  41112c:	3f791298 3e6c9a7f 3f7940c0 3e698bba     ..y?..l>.@y?..i>
  41113c:	3f796e4e 3e667c66 3f799b43 3e636c83     Nny?f|f>C.y?.lc>
  41114c:	3f79c79d 3e605c13 3f79f35e 3e5d4b1a     ..y?.\`>^.y?.K]>
  41115c:	3f7a1e84 3e5a3997 3f7a4910 3e57278f     ..z?.9Z>.Iz?.'W>
  41116c:	3f7a7302 3e541501 3f7a9c59 3e5101f1     .sz?..T>Y.z?..Q>
  41117c:	3f7ac516 3e4dee60 3f7aed37 3e4ada4f     ..z?`.M>7.z?O.J>
  41118c:	3f7b14be 3e47c5c2 3f7b3bab 3e44b0b9     ..{?..G>.;{?..D>
  41119c:	3f7b61fc 3e419b37 3f7b87b2 3e3e853e     .a{?7.A>..{?>.>>
  4111ac:	3f7baccd 3e3b6ecf 3f7bd14d 3e3857ec     ..{?.n;>M.{?.W8>
  4111bc:	3f7bf531 3e354098 3f7c187a 3e3228d4     1.{?.@5>z.|?.(2>
  4111cc:	3f7c3b28 3e2f10a2 3f7c5d3a 3e2bf804     (;|?../>:]|?..+>
  4111dc:	3f7c7eb0 3e28defc 3f7c9f8a 3e25c58c     .~|?..(>..|?..%>
  4111ec:	3f7cbfc9 3e22abb6 3f7cdf6c 3e1f917b     ..|?..">l.|?{..>
  4111fc:	3f7cfe73 3e1c76de 3f7d1cdd 3e195be0     s.|?.v.>..}?.[.>
  41120c:	3f7d3aac 3e164083 3f7d57de 3e1324ca     .:}?.@.>.W}?.$.>
  41121c:	3f7d7474 3e1008b7 3f7d906e 3e0cec4a     tt}?...>n.}?J..>
  41122c:	3f7dabcc 3e09cf86 3f7dc68c 3e06b26e     ..}?...>..}?n..>
  41123c:	3f7de0b1 3e039502 3f7dfa38 3e007745     ..}?...>8.}?Ew.>
  41124c:	3f7e1324 3dfab273 3f7e2b72 3df475c0     $.~?s..=r+~?.u.=
  41125c:	3f7e4323 3dee3876 3f7e5a38 3de7fa9a     #C~?v8.=8Z~?...=
  41126c:	3f7e70b0 3de1bc2e 3f7e868b 3ddb7d37     .p~?...=..~?7}.=
  41127c:	3f7e9bc9 3dd53db9 3f7eb069 3dcefdb7     ..~?.=.=i.~?...=
  41128c:	3f7ec46d 3dc8bd36 3f7ed7d4 3dc27c39     m.~?6..=..~?9|.=
  41129c:	3f7eea9d 3dbc3ac3 3f7efcc9 3db5f8da     ..~?.:.=..~?...=
  4112ac:	3f7f0e58 3dafb680 3f7f1f49 3da973ba     X..?...=I..?.s.=
  4112bc:	3f7f2f9d 3da3308c 3f7f3f54 3d9cecf9     ./.?.0.=T?.?...=
  4112cc:	3f7f4e6d 3d96a905 3f7f5ce9 3d9064b4     mN.?...=.\.?.d.=
  4112dc:	3f7f6ac7 3d8a200a 3f7f7808 3d83db0a     .j.?. .=.x.?...=
  4112ec:	3f7f84ab 3d7b2b74 3f7f90b1 3d6ea038     ...?t+{=...?8.n=
  4112fc:	3f7f9c18 3d621468 3f7fa6e3 3d55880e     ...?h.b=...?..U=
  41130c:	3f7fb10f 3d48fb2f 3f7fba9e 3d3c6dd5     ...?/.H=...?.m<=
  41131c:	3f7fc38f 3d2fe007 3f7fcbe2 3d2351cc     ...?../=...?.Q#=
  41132c:	3f7fd398 3d16c32c 3f7fdaaf 3d0a342f     ...?,..=...?/4.=
  41133c:	3f7fe129 3cfb49b9 3f7fe705 3ce22a7b     )..?.I.<...?{*.<
  41134c:	3f7fec43 3cc90ab0 3f7ff0e3 3cafea69     C..?...<...?i..<
  41135c:	3f7ff4e6 3c96c9b6 3f7ff84a 3c7b514b     ...?...<J..?KQ{<
  41136c:	3f7ffb11 3c490e90 3f7ffd39 3c16cb59     ...?..I<9..?Y..<
  41137c:	3f7ffec4 3bc90f89 3f7fffb1 3b490fc7     ...?...;...?..I;
  41138c:	3f800000 00000000 3f7fffb1 bb490fc7     ...?.......?..I.
  41139c:	3f7ffec4 bbc90f89 3f7ffd39 bc16cb59     ...?....9..?Y...
  4113ac:	3f7ffb11 bc490e90 3f7ff84a bc7b514b     ...?..I.J..?KQ{.
  4113bc:	3f7ff4e6 bc96c9b6 3f7ff0e3 bcafea69     ...?.......?i...
  4113cc:	3f7fec43 bcc90ab0 3f7fe705 bce22a7b     C..?.......?{*..
  4113dc:	3f7fe129 bcfb49b9 3f7fdaaf bd0a342f     )..?.I.....?/4..
  4113ec:	3f7fd398 bd16c32c 3f7fcbe2 bd2351cc     ...?,......?.Q#.
  4113fc:	3f7fc38f bd2fe007 3f7fba9e bd3c6dd5     ...?../....?.m<.
  41140c:	3f7fb10f bd48fb2f 3f7fa6e3 bd55880e     ...?/.H....?..U.
  41141c:	3f7f9c18 bd621468 3f7f90b1 bd6ea038     ...?h.b....?8.n.
  41142c:	3f7f84ab bd7b2b74 3f7f7808 bd83db0a     ...?t+{..x.?....
  41143c:	3f7f6ac7 bd8a200a 3f7f5ce9 bd9064b4     .j.?. ...\.?.d..
  41144c:	3f7f4e6d bd96a905 3f7f3f54 bd9cecf9     mN.?....T?.?....
  41145c:	3f7f2f9d bda3308c 3f7f1f49 bda973ba     ./.?.0..I..?.s..
  41146c:	3f7f0e58 bdafb680 3f7efcc9 bdb5f8da     X..?......~?....
  41147c:	3f7eea9d bdbc3ac3 3f7ed7d4 bdc27c39     ..~?.:....~?9|..
  41148c:	3f7ec46d bdc8bd36 3f7eb069 bdcefdb7     m.~?6...i.~?....
  41149c:	3f7e9bc9 bdd53db9 3f7e868b bddb7d37     ..~?.=....~?7}..
  4114ac:	3f7e70b0 bde1bc2e 3f7e5a38 bde7fa9a     .p~?....8Z~?....
  4114bc:	3f7e4323 bdee3876 3f7e2b72 bdf475c0     #C~?v8..r+~?.u..
  4114cc:	3f7e1324 bdfab273 3f7dfa38 be007745     $.~?s...8.}?Ew..
  4114dc:	3f7de0b1 be039502 3f7dc68c be06b26e     ..}?......}?n...
  4114ec:	3f7dabcc be09cf86 3f7d906e be0cec4a     ..}?....n.}?J...
  4114fc:	3f7d7474 be1008b7 3f7d57de be1324ca     tt}?.....W}?.$..
  41150c:	3f7d3aac be164083 3f7d1cdd be195be0     .:}?.@....}?.[..
  41151c:	3f7cfe73 be1c76de 3f7cdf6c be1f917b     s.|?.v..l.|?{...
  41152c:	3f7cbfc9 be22abb6 3f7c9f8a be25c58c     ..|?.."...|?..%.
  41153c:	3f7c7eb0 be28defc 3f7c5d3a be2bf804     .~|?..(.:]|?..+.
  41154c:	3f7c3b28 be2f10a2 3f7c187a be3228d4     (;|?../.z.|?.(2.
  41155c:	3f7bf531 be354098 3f7bd14d be3857ec     1.{?.@5.M.{?.W8.
  41156c:	3f7baccd be3b6ecf 3f7b87b2 be3e853e     ..{?.n;...{?>.>.
  41157c:	3f7b61fc be419b37 3f7b3bab be44b0b9     .a{?7.A..;{?..D.
  41158c:	3f7b14be be47c5c2 3f7aed37 be4ada4f     ..{?..G.7.z?O.J.
  41159c:	3f7ac516 be4dee60 3f7a9c59 be5101f1     ..z?`.M.Y.z?..Q.
  4115ac:	3f7a7302 be541501 3f7a4910 be57278f     .sz?..T..Iz?.'W.
  4115bc:	3f7a1e84 be5a3997 3f79f35e be5d4b1a     ..z?.9Z.^.y?.K].
  4115cc:	3f79c79d be605c13 3f799b43 be636c83     ..y?.\`.C.y?.lc.
  4115dc:	3f796e4e be667c66 3f7940c0 be698bba     Nny?f|f..@y?..i.
  4115ec:	3f791298 be6c9a7f 3f78e3d6 be6fa8b2     ..y?..l...x?..o.
  4115fc:	3f78b47b be72b651 3f788486 be75c35a     {.x?Q.r...x?Z.u.
  41160c:	3f7853f8 be78cfcc 3f7822d1 be7bdba4     .Sx?..x.."x?..{.
  41161c:	3f77f110 be7ee6e1 3f77beb7 be80f8c0     ..w?..~...w?....
  41162c:	3f778bc5 be827dc0 3f77583a be840270     ..w?.}..:Xw?p...
  41163c:	3f772417 be8586ce 3f76ef5b be870ada     .$w?....[.v?....
  41164c:	3f76ba07 be888e93 3f76841b be8a11f8     ..v?......v?....
  41165c:	3f764d97 be8b9507 3f76167a be8d17c0     .Mv?....z.v?....
  41166c:	3f75dec6 be8e9a22 3f75a67b be901c2c     ..u?"...{.u?,...
  41167c:	3f756d97 be919ddd 3f75341d be931f35     .mu?.....4u?5...
  41168c:	3f74fa0b be94a031 3f74bf62 be9620d2     ..t?1...b.t?. ..
  41169c:	3f748422 be97a117 3f74484b be9920fe     ".t?....KHt?. ..
  4116ac:	3f740bdd be9aa086 3f73ced9 be9c1faf     ..t?......s?....
  4116bc:	3f73913f be9d9e78 3f73530e be9f1cdf     ?.s?x....Ss?....
  4116cc:	3f731447 bea09ae5 3f72d4eb bea21887     G.s?......r?....
  4116dc:	3f7294f8 bea395c5 3f725470 bea5129f     ..r?....pTr?....
  4116ec:	3f721352 bea68f12 3f71d19f bea80b1f     R.r?......q?....
  4116fc:	3f718f57 bea986c4 3f714c7a beab0201     W.q?....zLq?....
  41170c:	3f710908 beac7cd4 3f70c502 beadf73c     ..q?.|....p?<...
  41171c:	3f708066 beaf713a 3f703b37 beb0eacb     f.p?:q..7;p?....
  41172c:	3f6ff573 beb263ef 3f6faf1b beb3dca5     s.o?.c....o?....
  41173c:	3f6f6830 beb554ec 3f6f20b0 beb6ccc3     0ho?.T... o?....
  41174c:	3f6ed89e beb8442a 3f6e8ff8 beb9bb1e     ..n?*D....n?....
  41175c:	3f6e46be bebb31a0 3f6dfcf2 bebca7af     .Fn?.1....m?....
  41176c:	3f6db293 bebe1d4a 3f6d67a1 bebf926f     ..m?J....gm?o...
  41177c:	3f6d1c1d bec1071e 3f6cd007 bec27b55     ..m?......l?U{..
  41178c:	3f6c835e bec3ef15 3f6c3624 bec5625c     ^.l?....$6l?\b..
  41179c:	3f6be858 bec6d529 3f6b99fb bec8477c     X.k?).....k?|G..
  4117ac:	3f6b4b0c bec9b953 3f6afb8c becb2aae     .Kk?S.....j?.*..
  4117bc:	3f6aab7b becc9b8b 3f6a5ad9 bece0bea     {.j?.....Zj?....
  4117cc:	3f6a09a7 becf7bca 3f69b7e4 bed0eb2a     ..j?.{....i?*...
  4117dc:	3f696591 bed25a09 3f6912ae bed3c867     .ei?.Z....i?g...
  4117ec:	3f68bf3c bed53641 3f686b39 bed6a399     <.h?A6..9kh?....
  4117fc:	3f6816a8 bed8106b 3f67c187 bed97cb9     ..h?k.....g?.|..
  41180c:	3f676bd8 bedae880 3f671599 bedc53c1     .kg?......g?.S..
  41181c:	3f66becc beddbe79 3f666771 bedf28a9     ..f?y...qgf?.(..
  41182c:	3f660f88 bee0924f 3f65b710 bee1fb6a     ..f?O.....e?j...
  41183c:	3f655e0b bee363fa 3f650479 bee4cbfe     .^e?.c..y.e?....
  41184c:	3f64aa59 bee63375 3f644fac bee79a5d     Y.d?u3...Od?]...
  41185c:	3f63f473 bee900b7 3f6398ac beea6681     s.c?......c?.f..
  41186c:	3f633c5a beebcbbb 3f62df7b beed3063     Z<c?....{.b?c0..
  41187c:	3f628210 beee9479 3f62241a beeff7fb     ..b?y....$b?....
  41188c:	3f61c598 bef15aea 3f61668a bef2bd43     ..a?.Z...fa?C...
  41189c:	3f6106f2 bef41f07 3f60a6cf bef58035     ..a?......`?5...
  4118ac:	3f604621 bef6e0cb 3f5fe4e9 bef840c8     !F`?......_?.@..
  4118bc:	3f5f8327 bef9a02d 3f5f20db befafef7     '._?-.... _?....
  4118cc:	3f5ebe05 befc5d27 3f5e5aa6 befdbabb     ..^?']...Z^?....
  4118dc:	3f5df6be beff17b2 3f5d924d bf003a06     ..]?....M.]?.:..
  4118ec:	3f5d2d53 bf00e7e4 3f5cc7d1 bf019573     S-]?......\?s...
  4118fc:	3f5c61c7 bf0242b1 3f5bfb34 bf02ef9f     .a\?.B..4.[?....
  41190c:	3f5b941a bf039c3d 3f5b2c79 bf044889     ..[?=...y,[?.H..
  41191c:	3f5ac450 bf04f484 3f5a5ba0 bf05a02c     P.Z?.....[Z?,...
  41192c:	3f59f26a bf064b82 3f5988ad bf06f686     j.Y?.K....Y?....
  41193c:	3f591e6a bf07a136 3f58b3a1 bf084b92     j.Y?6.....X?.K..
  41194c:	3f584853 bf08f59b 3f57dc7f bf099f4e     SHX?......W?N...
  41195c:	3f577026 bf0a48ad 3f570348 bf0af1b7     &pW?.H..H.W?....
  41196c:	3f5695e5 bf0b9a6b 3f5627fe bf0c42c9     ..V?k....'V?.B..
  41197c:	3f55b993 bf0cead0 3f554aa4 bf0d9281     ..U?.....JU?....
  41198c:	3f54db31 bf0e39da 3f546b3b bf0ee0db     1.T?.9..;kT?....
  41199c:	3f53fac3 bf0f8784 3f5389c7 bf102dd5     ..S?......S?.-..
  4119ac:	3f531849 bf10d3cd 3f52a649 bf11796b     I.S?....I.R?ky..
  4119bc:	3f5233c6 bf121eb0 3f51c0c2 bf12c39a     .3R?......Q?....
  4119cc:	3f514d3d bf13682a 3f50d937 bf140c5f     =MQ?*h..7.P?_...
  4119dc:	3f5064af bf14b039 3f4fefa8 bf1553b7     .dP?9.....O?.S..
  4119ec:	3f4f7a1f bf15f6d9 3f4f0417 bf16999f     .zO?......O?....
  4119fc:	3f4e8d90 bf173c07 3f4e1689 bf17de12     ..N?.<....N?....
  411a0c:	3f4d9f02 bf187fc0 3f4d26fd bf19210f     ..M?.....&M?.!..
  411a1c:	3f4cae79 bf19c200 3f4c3578 bf1a6293     y.L?....x5L?.b..
  411a2c:	3f4bbbf8 bf1b02c6 3f4b41fa bf1ba299     ..K?.....AK?....
  411a3c:	3f4ac77f bf1c420c 3f4a4c87 bf1ce11f     ..J?.B...LJ?....
  411a4c:	3f49d112 bf1d7fd1 3f495521 bf1e1e22     ..I?....!UI?"...
  411a5c:	3f48d8b3 bf1ebc12 3f485bca bf1f599f     ..H?.....[H?.Y..
  411a6c:	3f47de65 bf1ff6cb 3f476085 bf209393     e.G?.....`G?.. .
  411a7c:	3f46e22a bf212ff9 3f466354 bf21cbfb     *.F?./!.TcF?..!.
  411a8c:	3f45e403 bf226799 3f456439 bf2302d3     ..E?.g".9dE?..#.
  411a9c:	3f44e3f5 bf239da9 3f446337 bf24381a     ..D?..#.7cD?.8$.
  411aac:	3f43e200 bf24d225 3f436051 bf256bcb     ..C?%.$.Q`C?.k%.
  411abc:	3f42de29 bf26050a 3f425b89 bf269de3     ).B?..&..[B?..&.
  411acc:	3f41d870 bf273656 3f4154e1 bf27ce61     p.A?V6'..TA?a.'.
  411adc:	3f40d0da bf286605 3f404c5c bf28fd41     ..@?.f(.\L@?A.(.
  411aec:	3f3fc767 bf299415 3f3f41fc bf2a2a80     g.??..)..A??.**.
  411afc:	3f3ebc1b bf2ac082 3f3e35c5 bf2b561b     ..>?..*..5>?.V+.
  411b0c:	3f3daef9 bf2beb4a 3f3d27b8 bf2c800f     ..=?J.+..'=?..,.
  411b1c:	3f3ca003 bf2d1469 3f3c17d9 bf2da859     ..<?i.-...<?Y.-.
  411b2c:	3f3b8f3b bf2e3bde 3f3b0629 bf2ecef7     ;.;?.;..).;?....
  411b3c:	3f3a7ca4 bf2f61a5 3f39f2ac bf2ff3e6     .|:?.a/...9?../.
  411b4c:	3f396842 bf3085bb 3f38dd65 bf311722     Bh9?..0.e.8?".1.
  411b5c:	3f385216 bf31a81d 3f37c655 bf3238aa     .R8?..1.U.7?.82.
  411b6c:	3f373a23 bf32c8c9 3f36ad7f bf33587a     #:7?..2...6?zX3.
  411b7c:	3f36206c bf33e7bc 3f3592e7 bf34768f     l 6?..3...5?.v4.
  411b8c:	3f3504f3 bf3504f3 3f34768f bf3592e7     ..5?..5..v4?..5.
  411b9c:	3f33e7bc bf36206c 3f33587a bf36ad7f     ..3?l 6.zX3?..6.
  411bac:	3f32c8c9 bf373a23 3f3238aa bf37c655     ..2?#:7..82?U.7.
  411bbc:	3f31a81d bf385216 3f311722 bf38dd65     ..1?.R8.".1?e.8.
  411bcc:	3f3085bb bf396842 3f2ff3e6 bf39f2ac     ..0?Bh9.../?..9.
  411bdc:	3f2f61a5 bf3a7ca4 3f2ecef7 bf3b0629     .a/?.|:....?).;.
  411bec:	3f2e3bde bf3b8f3b 3f2da859 bf3c17d9     .;.?;.;.Y.-?..<.
  411bfc:	3f2d1469 bf3ca003 3f2c800f bf3d27b8     i.-?..<...,?.'=.
  411c0c:	3f2beb4a bf3daef9 3f2b561b bf3e35c5     J.+?..=..V+?.5>.
  411c1c:	3f2ac082 bf3ebc1b 3f2a2a80 bf3f41fc     ..*?..>..**?.A?.
  411c2c:	3f299415 bf3fc767 3f28fd41 bf404c5c     ..)?g.?.A.(?\L@.
  411c3c:	3f286605 bf40d0da 3f27ce61 bf4154e1     .f(?..@.a.'?.TA.
  411c4c:	3f273656 bf41d870 3f269de3 bf425b89     V6'?p.A...&?.[B.
  411c5c:	3f26050a bf42de29 3f256bcb bf436051     ..&?).B..k%?Q`C.
  411c6c:	3f24d225 bf43e200 3f24381a bf446337     %.$?..C..8$?7cD.
  411c7c:	3f239da9 bf44e3f5 3f2302d3 bf456439     ..#?..D...#?9dE.
  411c8c:	3f226799 bf45e403 3f21cbfb bf466354     .g"?..E...!?TcF.
  411c9c:	3f212ff9 bf46e22a 3f209393 bf476085     ./!?*.F... ?.`G.
  411cac:	3f1ff6cb bf47de65 3f1f599f bf485bca     ...?e.G..Y.?.[H.
  411cbc:	3f1ebc12 bf48d8b3 3f1e1e22 bf495521     ...?..H."..?!UI.
  411ccc:	3f1d7fd1 bf49d112 3f1ce11f bf4a4c87     ...?..I....?.LJ.
  411cdc:	3f1c420c bf4ac77f 3f1ba299 bf4b41fa     .B.?..J....?.AK.
  411cec:	3f1b02c6 bf4bbbf8 3f1a6293 bf4c3578     ...?..K..b.?x5L.
  411cfc:	3f19c200 bf4cae79 3f19210f bf4d26fd     ...?y.L..!.?.&M.
  411d0c:	3f187fc0 bf4d9f02 3f17de12 bf4e1689     ...?..M....?..N.
  411d1c:	3f173c07 bf4e8d90 3f16999f bf4f0417     .<.?..N....?..O.
  411d2c:	3f15f6d9 bf4f7a1f 3f1553b7 bf4fefa8     ...?.zO..S.?..O.
  411d3c:	3f14b039 bf5064af 3f140c5f bf50d937     9..?.dP._..?7.P.
  411d4c:	3f13682a bf514d3d 3f12c39a bf51c0c2     *h.?=MQ....?..Q.
  411d5c:	3f121eb0 bf5233c6 3f11796b bf52a649     ...?.3R.ky.?I.R.
  411d6c:	3f10d3cd bf531849 3f102dd5 bf5389c7     ...?I.S..-.?..S.
  411d7c:	3f0f8784 bf53fac3 3f0ee0db bf546b3b     ...?..S....?;kT.
  411d8c:	3f0e39da bf54db31 3f0d9281 bf554aa4     .9.?1.T....?.JU.
  411d9c:	3f0cead0 bf55b993 3f0c42c9 bf5627fe     ...?..U..B.?.'V.
  411dac:	3f0b9a6b bf5695e5 3f0af1b7 bf570348     k..?..V....?H.W.
  411dbc:	3f0a48ad bf577026 3f099f4e bf57dc7f     .H.?&pW.N..?..W.
  411dcc:	3f08f59b bf584853 3f084b92 bf58b3a1     ...?SHX..K.?..X.
  411ddc:	3f07a136 bf591e6a 3f06f686 bf5988ad     6..?j.Y....?..Y.
  411dec:	3f064b82 bf59f26a 3f05a02c bf5a5ba0     .K.?j.Y.,..?.[Z.
  411dfc:	3f04f484 bf5ac450 3f044889 bf5b2c79     ...?P.Z..H.?y,[.
  411e0c:	3f039c3d bf5b941a 3f02ef9f bf5bfb34     =..?..[....?4.[.
  411e1c:	3f0242b1 bf5c61c7 3f019573 bf5cc7d1     .B.?.a\.s..?..\.
  411e2c:	3f00e7e4 bf5d2d53 3f003a06 bf5d924d     ...?S-]..:.?M.].
  411e3c:	3eff17b2 bf5df6be 3efdbabb bf5e5aa6     ...>..]....>.Z^.
  411e4c:	3efc5d27 bf5ebe05 3efafef7 bf5f20db     '].>..^....>. _.
  411e5c:	3ef9a02d bf5f8327 3ef840c8 bf5fe4e9     -..>'._..@.>.._.
  411e6c:	3ef6e0cb bf604621 3ef58035 bf60a6cf     ...>!F`.5..>..`.
  411e7c:	3ef41f07 bf6106f2 3ef2bd43 bf61668a     ...>..a.C..>.fa.
  411e8c:	3ef15aea bf61c598 3eeff7fb bf62241a     .Z.>..a....>.$b.
  411e9c:	3eee9479 bf628210 3eed3063 bf62df7b     y..>..b.c0.>{.b.
  411eac:	3eebcbbb bf633c5a 3eea6681 bf6398ac     ...>Z<c..f.>..c.
  411ebc:	3ee900b7 bf63f473 3ee79a5d bf644fac     ...>s.c.]..>.Od.
  411ecc:	3ee63375 bf64aa59 3ee4cbfe bf650479     u3.>Y.d....>y.e.
  411edc:	3ee363fa bf655e0b 3ee1fb6a bf65b710     .c.>.^e.j..>..e.
  411eec:	3ee0924f bf660f88 3edf28a9 bf666771     O..>..f..(.>qgf.
  411efc:	3eddbe79 bf66becc 3edc53c1 bf671599     y..>..f..S.>..g.
  411f0c:	3edae880 bf676bd8 3ed97cb9 bf67c187     ...>.kg..|.>..g.
  411f1c:	3ed8106b bf6816a8 3ed6a399 bf686b39     k..>..h....>9kh.
  411f2c:	3ed53641 bf68bf3c 3ed3c867 bf6912ae     A6.><.h.g..>..i.
  411f3c:	3ed25a09 bf696591 3ed0eb2a bf69b7e4     .Z.>.ei.*..>..i.
  411f4c:	3ecf7bca bf6a09a7 3ece0bea bf6a5ad9     .{.>..j....>.Zj.
  411f5c:	3ecc9b8b bf6aab7b 3ecb2aae bf6afb8c     ...>{.j..*.>..j.
  411f6c:	3ec9b953 bf6b4b0c 3ec8477c bf6b99fb     S..>.Kk.|G.>..k.
  411f7c:	3ec6d529 bf6be858 3ec5625c bf6c3624     )..>X.k.\b.>$6l.
  411f8c:	3ec3ef15 bf6c835e 3ec27b55 bf6cd007     ...>^.l.U{.>..l.
  411f9c:	3ec1071e bf6d1c1d 3ebf926f bf6d67a1     ...>..m.o..>.gm.
  411fac:	3ebe1d4a bf6db293 3ebca7af bf6dfcf2     J..>..m....>..m.
  411fbc:	3ebb31a0 bf6e46be 3eb9bb1e bf6e8ff8     .1.>.Fn....>..n.
  411fcc:	3eb8442a bf6ed89e 3eb6ccc3 bf6f20b0     *D.>..n....>. o.
  411fdc:	3eb554ec bf6f6830 3eb3dca5 bf6faf1b     .T.>0ho....>..o.
  411fec:	3eb263ef bf6ff573 3eb0eacb bf703b37     .c.>s.o....>7;p.
  411ffc:	3eaf713a bf708066 3eadf73c bf70c502     :q.>f.p.<..>..p.
  41200c:	3eac7cd4 bf710908 3eab0201 bf714c7a     .|.>..q....>zLq.
  41201c:	3ea986c4 bf718f57 3ea80b1f bf71d19f     ...>W.q....>..q.
  41202c:	3ea68f12 bf721352 3ea5129f bf725470     ...>R.r....>pTr.
  41203c:	3ea395c5 bf7294f8 3ea21887 bf72d4eb     ...>..r....>..r.
  41204c:	3ea09ae5 bf731447 3e9f1cdf bf73530e     ...>G.s....>.Ss.
  41205c:	3e9d9e78 bf73913f 3e9c1faf bf73ced9     x..>?.s....>..s.
  41206c:	3e9aa086 bf740bdd 3e9920fe bf74484b     ...>..t.. .>KHt.
  41207c:	3e97a117 bf748422 3e9620d2 bf74bf62     ...>".t.. .>b.t.
  41208c:	3e94a031 bf74fa0b 3e931f35 bf75341d     1..>..t.5..>.4u.
  41209c:	3e919ddd bf756d97 3e901c2c bf75a67b     ...>.mu.,..>{.u.
  4120ac:	3e8e9a22 bf75dec6 3e8d17c0 bf76167a     "..>..u....>z.v.
  4120bc:	3e8b9507 bf764d97 3e8a11f8 bf76841b     ...>.Mv....>..v.
  4120cc:	3e888e93 bf76ba07 3e870ada bf76ef5b     ...>..v....>[.v.
  4120dc:	3e8586ce bf772417 3e840270 bf77583a     ...>.$w.p..>:Xw.
  4120ec:	3e827dc0 bf778bc5 3e80f8c0 bf77beb7     .}.>..w....>..w.
  4120fc:	3e7ee6e1 bf77f110 3e7bdba4 bf7822d1     ..~>..w...{>."x.
  41210c:	3e78cfcc bf7853f8 3e75c35a bf788486     ..x>.Sx.Z.u>..x.
  41211c:	3e72b651 bf78b47b 3e6fa8b2 bf78e3d6     Q.r>{.x...o>..x.
  41212c:	3e6c9a7f bf791298 3e698bba bf7940c0     ..l>..y...i>.@y.
  41213c:	3e667c66 bf796e4e 3e636c83 bf799b43     f|f>Nny..lc>C.y.
  41214c:	3e605c13 bf79c79d 3e5d4b1a bf79f35e     .\`>..y..K]>^.y.
  41215c:	3e5a3997 bf7a1e84 3e57278f bf7a4910     .9Z>..z..'W>.Iz.
  41216c:	3e541501 bf7a7302 3e5101f1 bf7a9c59     ..T>.sz...Q>Y.z.
  41217c:	3e4dee60 bf7ac516 3e4ada4f bf7aed37     `.M>..z.O.J>7.z.
  41218c:	3e47c5c2 bf7b14be 3e44b0b9 bf7b3bab     ..G>..{...D>.;{.
  41219c:	3e419b37 bf7b61fc 3e3e853e bf7b87b2     7.A>.a{.>.>>..{.
  4121ac:	3e3b6ecf bf7baccd 3e3857ec bf7bd14d     .n;>..{..W8>M.{.
  4121bc:	3e354098 bf7bf531 3e3228d4 bf7c187a     .@5>1.{..(2>z.|.
  4121cc:	3e2f10a2 bf7c3b28 3e2bf804 bf7c5d3a     ../>(;|...+>:]|.
  4121dc:	3e28defc bf7c7eb0 3e25c58c bf7c9f8a     ..(>.~|...%>..|.
  4121ec:	3e22abb6 bf7cbfc9 3e1f917b bf7cdf6c     ..">..|.{..>l.|.
  4121fc:	3e1c76de bf7cfe73 3e195be0 bf7d1cdd     .v.>s.|..[.>..}.
  41220c:	3e164083 bf7d3aac 3e1324ca bf7d57de     .@.>.:}..$.>.W}.
  41221c:	3e1008b7 bf7d7474 3e0cec4a bf7d906e     ...>tt}.J..>n.}.
  41222c:	3e09cf86 bf7dabcc 3e06b26e bf7dc68c     ...>..}.n..>..}.
  41223c:	3e039502 bf7de0b1 3e007745 bf7dfa38     ...>..}.Ew.>8.}.
  41224c:	3dfab273 bf7e1324 3df475c0 bf7e2b72     s..=$.~..u.=r+~.
  41225c:	3dee3876 bf7e4323 3de7fa9a bf7e5a38     v8.=#C~....=8Z~.
  41226c:	3de1bc2e bf7e70b0 3ddb7d37 bf7e868b     ...=.p~.7}.=..~.
  41227c:	3dd53db9 bf7e9bc9 3dcefdb7 bf7eb069     .=.=..~....=i.~.
  41228c:	3dc8bd36 bf7ec46d 3dc27c39 bf7ed7d4     6..=m.~.9|.=..~.
  41229c:	3dbc3ac3 bf7eea9d 3db5f8da bf7efcc9     .:.=..~....=..~.
  4122ac:	3dafb680 bf7f0e58 3da973ba bf7f1f49     ...=X....s.=I...
  4122bc:	3da3308c bf7f2f9d 3d9cecf9 bf7f3f54     .0.=./.....=T?..
  4122cc:	3d96a905 bf7f4e6d 3d9064b4 bf7f5ce9     ...=mN...d.=.\..
  4122dc:	3d8a200a bf7f6ac7 3d83db0a bf7f7808     . .=.j.....=.x..
  4122ec:	3d7b2b74 bf7f84ab 3d6ea038 bf7f90b1     t+{=....8.n=....
  4122fc:	3d621468 bf7f9c18 3d55880e bf7fa6e3     h.b=......U=....
  41230c:	3d48fb2f bf7fb10f 3d3c6dd5 bf7fba9e     /.H=.....m<=....
  41231c:	3d2fe007 bf7fc38f 3d2351cc bf7fcbe2     ../=.....Q#=....
  41232c:	3d16c32c bf7fd398 3d0a342f bf7fdaaf     ,..=..../4.=....
  41233c:	3cfb49b9 bf7fe129 3ce22a7b bf7fe705     .I.<)...{*.<....
  41234c:	3cc90ab0 bf7fec43 3cafea69 bf7ff0e3     ...<C...i..<....
  41235c:	3c96c9b6 bf7ff4e6 3c7b514b bf7ff84a     ...<....KQ{<J...
  41236c:	3c490e90 bf7ffb11 3c16cb59 bf7ffd39     ..I<....Y..<9...
  41237c:	3bc90f89 bf7ffec4 3b490fc7 bf7fffb1     ...;......I;....

0041238c <twiddleCoef_rfft_4096>:
  41238c:	00000000 3f800000 3ac90fd4 3f7fffec     .......?...:...?
  41239c:	3b490fc7 3f7fffb1 3b96cbc1 3f7fff4e     ..I;...?...;N..?
  4123ac:	3bc90f89 3f7ffec4 3bfb5330 3f7ffe13     ...;...?0S.;...?
  4123bc:	3c16cb59 3f7ffd39 3c2fed02 3f7ffc39     Y..<9..?../<9..?
  4123cc:	3c490e90 3f7ffb11 3c623000 3f7ff9c1     ..I<...?.0b<...?
  4123dc:	3c7b514b 3f7ff84a 3c8a3938 3f7ff6ac     KQ{<J..?89.<...?
  4123ec:	3c96c9b6 3f7ff4e6 3ca35a1c 3f7ff2f8     ...<...?.Z.<...?
  4123fc:	3cafea69 3f7ff0e3 3cbc7a9b 3f7feea7     i..<...?.z.<...?
  41240c:	3cc90ab0 3f7fec43 3cd59aa6 3f7fe9b8     ...<C..?...<...?
  41241c:	3ce22a7b 3f7fe705 3ceeba2d 3f7fe42b     {*.<...?-..<+..?
  41242c:	3cfb49b9 3f7fe129 3d03ec90 3f7fde00     .I.<)..?...=...?
  41243c:	3d0a342f 3f7fdaaf 3d107bb8 3f7fd737     /4.=...?.{.=7..?
  41244c:	3d16c32c 3f7fd398 3d1d0a88 3f7fcfd1     ,..=...?...=...?
  41245c:	3d2351cc 3f7fcbe2 3d2998f6 3f7fc7cc     .Q#=...?..)=...?
  41246c:	3d2fe007 3f7fc38f 3d3626fc 3f7fbf2a     ../=...?.&6=*..?
  41247c:	3d3c6dd5 3f7fba9e 3d42b491 3f7fb5ea     .m<=...?..B=...?
  41248c:	3d48fb2f 3f7fb10f 3d4f41af 3f7fac0d     /.H=...?.AO=...?
  41249c:	3d55880e 3f7fa6e3 3d5bce4c 3f7fa191     ..U=...?L.[=...?
  4124ac:	3d621468 3f7f9c18 3d685a62 3f7f9678     h.b=...?bZh=x..?
  4124bc:	3d6ea038 3f7f90b1 3d74e5e9 3f7f8ac2     8.n=...?..t=...?
  4124cc:	3d7b2b74 3f7f84ab 3d80b86c 3f7f7e6d     t+{=...?l..=m~.?
  4124dc:	3d83db0a 3f7f7808 3d86fd94 3f7f717b     ...=.x.?...={q.?
  4124ec:	3d8a200a 3f7f6ac7 3d8d426a 3f7f63ec     . .=.j.?jB.=.c.?
  4124fc:	3d9064b4 3f7f5ce9 3d9386e7 3f7f55bf     .d.=.\.?...=.U.?
  41250c:	3d96a905 3f7f4e6d 3d99cb0a 3f7f46f4     ...=mN.?...=.F.?
  41251c:	3d9cecf9 3f7f3f54 3da00ecf 3f7f378d     ...=T?.?...=.7.?
  41252c:	3da3308c 3f7f2f9d 3da65230 3f7f2787     .0.=./.?0R.=.'.?
  41253c:	3da973ba 3f7f1f49 3dac952b 3f7f16e4     .s.=I..?+..=...?
  41254c:	3dafb680 3f7f0e58 3db2d7bb 3f7f05a4     ...=X..?...=...?
  41255c:	3db5f8da 3f7efcc9 3db919dd 3f7ef3c7     ...=..~?...=..~?
  41256c:	3dbc3ac3 3f7eea9d 3dbf5b8d 3f7ee14c     .:.=..~?.[.=L.~?
  41257c:	3dc27c39 3f7ed7d4 3dc59cc6 3f7ece34     9|.=..~?...=4.~?
  41258c:	3dc8bd36 3f7ec46d 3dcbdd86 3f7eba7f     6..=m.~?...=..~?
  41259c:	3dcefdb7 3f7eb069 3dd21dc8 3f7ea62d     ...=i.~?...=-.~?
  4125ac:	3dd53db9 3f7e9bc9 3dd85d89 3f7e913d     .=.=..~?.].==.~?
  4125bc:	3ddb7d37 3f7e868b 3dde9cc4 3f7e7bb1     7}.=..~?...=.{~?
  4125cc:	3de1bc2e 3f7e70b0 3de4db76 3f7e6588     ...=.p~?v..=.e~?
  4125dc:	3de7fa9a 3f7e5a38 3deb199a 3f7e4ec1     ...=8Z~?...=.N~?
  4125ec:	3dee3876 3f7e4323 3df1572e 3f7e375e     v8.=#C~?.W.=^7~?
  4125fc:	3df475c0 3f7e2b72 3df7942c 3f7e1f5e     .u.=r+~?,..=^.~?
  41260c:	3dfab273 3f7e1324 3dfdd092 3f7e06c2     s..=$.~?...=..~?
  41261c:	3e007745 3f7dfa38 3e02062e 3f7ded88     Ew.>8.}?...>..}?
  41262c:	3e039502 3f7de0b1 3e0523c2 3f7dd3b2     ...>..}?.#.>..}?
  41263c:	3e06b26e 3f7dc68c 3e084105 3f7db940     n..>..}?.A.>@.}?
  41264c:	3e09cf86 3f7dabcc 3e0b5df3 3f7d9e30     ...>..}?.].>0.}?
  41265c:	3e0cec4a 3f7d906e 3e0e7a8b 3f7d8285     J..>n.}?.z.>..}?
  41266c:	3e1008b7 3f7d7474 3e1196cc 3f7d663d     ...>tt}?...>=f}?
  41267c:	3e1324ca 3f7d57de 3e14b2b2 3f7d4959     .$.>.W}?...>YI}?
  41268c:	3e164083 3f7d3aac 3e17ce3d 3f7d2bd8     .@.>.:}?=..>.+}?
  41269c:	3e195be0 3f7d1cdd 3e1ae96b 3f7d0dbc     .[.>..}?k..>..}?
  4126ac:	3e1c76de 3f7cfe73 3e1e0438 3f7cef03     .v.>s.|?8..>..|?
  4126bc:	3e1f917b 3f7cdf6c 3e211ea5 3f7ccfae     {..>l.|?..!>..|?
  4126cc:	3e22abb6 3f7cbfc9 3e2438ad 3f7cafbd     ..">..|?.8$>..|?
  4126dc:	3e25c58c 3f7c9f8a 3e275251 3f7c8f31     ..%>..|?QR'>1.|?
  4126ec:	3e28defc 3f7c7eb0 3e2a6b8d 3f7c6e08     ..(>.~|?.k*>.n|?
  4126fc:	3e2bf804 3f7c5d3a 3e2d8461 3f7c4c44     ..+>:]|?a.->DL|?
  41270c:	3e2f10a2 3f7c3b28 3e309cc9 3f7c29e5     ../>(;|?..0>.)|?
  41271c:	3e3228d4 3f7c187a 3e33b4c4 3f7c06e9     .(2>z.|?..3>..|?
  41272c:	3e354098 3f7bf531 3e36cc50 3f7be353     .@5>1.{?P.6>S.{?
  41273c:	3e3857ec 3f7bd14d 3e39e36c 3f7bbf20     .W8>M.{?l.9> .{?
  41274c:	3e3b6ecf 3f7baccd 3e3cfa15 3f7b9a53     .n;>..{?..<>S.{?
  41275c:	3e3e853e 3f7b87b2 3e401049 3f7b74ea     >.>>..{?I.@>.t{?
  41276c:	3e419b37 3f7b61fc 3e432607 3f7b4ee7     7.A>.a{?.&C>.N{?
  41277c:	3e44b0b9 3f7b3bab 3e463b4d 3f7b2848     ..D>.;{?M;F>H({?
  41278c:	3e47c5c2 3f7b14be 3e495018 3f7b010e     ..G>..{?.PI>..{?
  41279c:	3e4ada4f 3f7aed37 3e4c6467 3f7ad93a     O.J>7.z?gdL>:.z?
  4127ac:	3e4dee60 3f7ac516 3e4f7838 3f7ab0cb     `.M>..z?8xO>..z?
  4127bc:	3e5101f1 3f7a9c59 3e528b89 3f7a87c1     ..Q>Y.z?..R>..z?
  4127cc:	3e541501 3f7a7302 3e559e58 3f7a5e1c     ..T>.sz?X.U>.^z?
  4127dc:	3e57278f 3f7a4910 3e58b0a4 3f7a33dd     .'W>.Iz?..X>.3z?
  4127ec:	3e5a3997 3f7a1e84 3e5bc26a 3f7a0904     .9Z>..z?j.[>..z?
  4127fc:	3e5d4b1a 3f79f35e 3e5ed3a8 3f79dd91     .K]>^.y?..^>..y?
  41280c:	3e605c13 3f79c79d 3e61e45c 3f79b183     .\`>..y?\.a>..y?
  41281c:	3e636c83 3f799b43 3e64f486 3f7984dc     .lc>C.y?..d>..y?
  41282c:	3e667c66 3f796e4e 3e680422 3f79579a     f|f>Nny?".h>.Wy?
  41283c:	3e698bba 3f7940c0 3e6b132f 3f7929bf     ..i>.@y?/.k>.)y?
  41284c:	3e6c9a7f 3f791298 3e6e21ab 3f78fb4a     ..l>..y?.!n>J.x?
  41285c:	3e6fa8b2 3f78e3d6 3e712f94 3f78cc3b     ..o>..x?./q>;.x?
  41286c:	3e72b651 3f78b47b 3e743ce8 3f789c93     Q.r>{.x?.<t>..x?
  41287c:	3e75c35a 3f788486 3e7749a6 3f786c52     Z.u>..x?.Iw>Rlx?
  41288c:	3e78cfcc 3f7853f8 3e7a55cb 3f783b77     ..x>.Sx?.Uz>w;x?
  41289c:	3e7bdba4 3f7822d1 3e7d6156 3f780a04     ..{>."x?Va}>..x?
  4128ac:	3e7ee6e1 3f77f110 3e803622 3f77d7f7     ..~>..w?"6.>..w?
  4128bc:	3e80f8c0 3f77beb7 3e81bb4a 3f77a551     ...>..w?J..>Q.w?
  4128cc:	3e827dc0 3f778bc5 3e834022 3f777213     .}.>..w?"@.>.rw?
  4128dc:	3e840270 3f77583a 3e84c4aa 3f773e3c     p..>:Xw?...><>w?
  4128ec:	3e8586ce 3f772417 3e8648df 3f7709cc     ...>.$w?.H.>..w?
  4128fc:	3e870ada 3f76ef5b 3e87ccc1 3f76d4c4     ...>[.v?...>..v?
  41290c:	3e888e93 3f76ba07 3e895050 3f769f24     ...>..v?PP.>$.v?
  41291c:	3e8a11f8 3f76841b 3e8ad38a 3f7668ec     ...>..v?...>.hv?
  41292c:	3e8b9507 3f764d97 3e8c566e 3f76321b     ...>.Mv?nV.>.2v?
  41293c:	3e8d17c0 3f76167a 3e8dd8fc 3f75fab3     ...>z.v?...>..u?
  41294c:	3e8e9a22 3f75dec6 3e8f5b32 3f75c2b3     "..>..u?2[.>..u?
  41295c:	3e901c2c 3f75a67b 3e90dd10 3f758a1c     ,..>{.u?...>..u?
  41296c:	3e919ddd 3f756d97 3e925e94 3f7550ed     ...>.mu?.^.>.Pu?
  41297c:	3e931f35 3f75341d 3e93dfbf 3f751727     5..>.4u?...>'.u?
  41298c:	3e94a031 3f74fa0b 3e95608d 3f74dcc9     1..>..t?.`.>..t?
  41299c:	3e9620d2 3f74bf62 3e96e100 3f74a1d5     . .>b.t?...>..t?
  4129ac:	3e97a117 3f748422 3e986116 3f746649     ...>".t?.a.>Ift?
  4129bc:	3e9920fe 3f74484b 3e99e0ce 3f742a27     . .>KHt?...>'*t?
  4129cc:	3e9aa086 3f740bdd 3e9b6027 3f73ed6e     ...>..t?'`.>n.s?
  4129dc:	3e9c1faf 3f73ced9 3e9cdf20 3f73b01f     ...>..s? ..>..s?
  4129ec:	3e9d9e78 3f73913f 3e9e5db8 3f737239     x..>?.s?.].>9rs?
  4129fc:	3e9f1cdf 3f73530e 3e9fdbee 3f7333be     ...>.Ss?...>.3s?
  412a0c:	3ea09ae5 3f731447 3ea159c2 3f72f4ac     ...>G.s?.Y.>..r?
  412a1c:	3ea21887 3f72d4eb 3ea2d733 3f72b504     ...>..r?3..>..r?
  412a2c:	3ea395c5 3f7294f8 3ea4543f 3f7274c7     ...>..r??T.>.tr?
  412a3c:	3ea5129f 3f725470 3ea5d0e5 3f7233f4     ...>pTr?...>.3r?
  412a4c:	3ea68f12 3f721352 3ea74d25 3f71f28c     ...>R.r?%M.>..q?
  412a5c:	3ea80b1f 3f71d19f 3ea8c8fe 3f71b08e     ...>..q?...>..q?
  412a6c:	3ea986c4 3f718f57 3eaa446f 3f716dfb     ...>W.q?oD.>.mq?
  412a7c:	3eab0201 3f714c7a 3eabbf77 3f712ad4     ...>zLq?w..>.*q?
  412a8c:	3eac7cd4 3f710908 3ead3a15 3f70e717     .|.>..q?.:.>..p?
  412a9c:	3eadf73c 3f70c502 3eaeb449 3f70a2c6     <..>..p?I..>..p?
  412aac:	3eaf713a 3f708066 3eb02e10 3f705de1     :q.>f.p?...>.]p?
  412abc:	3eb0eacb 3f703b37 3eb1a76b 3f701867     ...>7;p?k..>g.p?
  412acc:	3eb263ef 3f6ff573 3eb32058 3f6fd25a     .c.>s.o?X .>Z.o?
  412adc:	3eb3dca5 3f6faf1b 3eb498d6 3f6f8bb8     ...>..o?...>..o?
  412aec:	3eb554ec 3f6f6830 3eb610e6 3f6f4483     .T.>0ho?...>.Do?
  412afc:	3eb6ccc3 3f6f20b0 3eb78884 3f6efcba     ...>. o?...>..n?
  412b0c:	3eb8442a 3f6ed89e 3eb8ffb2 3f6eb45d     *D.>..n?...>].n?
  412b1c:	3eb9bb1e 3f6e8ff8 3eba766e 3f6e6b6d     ...>..n?nv.>mkn?
  412b2c:	3ebb31a0 3f6e46be 3ebbecb6 3f6e21eb     .1.>.Fn?...>.!n?
  412b3c:	3ebca7af 3f6dfcf2 3ebd628b 3f6dd7d5     ...>..m?.b.>..m?
  412b4c:	3ebe1d4a 3f6db293 3ebed7eb 3f6d8d2d     J..>..m?...>-.m?
  412b5c:	3ebf926f 3f6d67a1 3ec04cd5 3f6d41f2     o..>.gm?.L.>.Am?
  412b6c:	3ec1071e 3f6d1c1d 3ec1c148 3f6cf624     ...>..m?H..>$.l?
  412b7c:	3ec27b55 3f6cd007 3ec33544 3f6ca9c5     U{.>..l?D5.>..l?
  412b8c:	3ec3ef15 3f6c835e 3ec4a8c8 3f6c5cd4     ...>^.l?...>.\l?
  412b9c:	3ec5625c 3f6c3624 3ec61bd2 3f6c0f50     \b.>$6l?...>P.l?
  412bac:	3ec6d529 3f6be858 3ec78e62 3f6bc13b     )..>X.k?b..>;.k?
  412bbc:	3ec8477c 3f6b99fb 3ec90077 3f6b7295     |G.>..k?w..>.rk?
  412bcc:	3ec9b953 3f6b4b0c 3eca7210 3f6b235e     S..>.Kk?.r.>^#k?
  412bdc:	3ecb2aae 3f6afb8c 3ecbe32c 3f6ad395     .*.>..j?,..>..j?
  412bec:	3ecc9b8b 3f6aab7b 3ecd53ca 3f6a833c     ...>{.j?.S.><.j?
  412bfc:	3ece0bea 3f6a5ad9 3ecec3ea 3f6a3252     ...>.Zj?...>R2j?
  412c0c:	3ecf7bca 3f6a09a7 3ed0338a 3f69e0d7     .{.>..j?.3.>..i?
  412c1c:	3ed0eb2a 3f69b7e4 3ed1a2aa 3f698ecc     *..>..i?...>..i?
  412c2c:	3ed25a09 3f696591 3ed31148 3f693c32     .Z.>.ei?H..>2<i?
  412c3c:	3ed3c867 3f6912ae 3ed47f64 3f68e907     g..>..i?d..>..h?
  412c4c:	3ed53641 3f68bf3c 3ed5ecfd 3f68954c     A6.><.h?...>L.h?
  412c5c:	3ed6a399 3f686b39 3ed75a13 3f684103     ...>9kh?.Z.>.Ah?
  412c6c:	3ed8106b 3f6816a8 3ed8c6a3 3f67ec2a     k..>..h?...>*.g?
  412c7c:	3ed97cb9 3f67c187 3eda32ad 3f6796c1     .|.>..g?.2.>..g?
  412c8c:	3edae880 3f676bd8 3edb9e31 3f6740ca     ...>.kg?1..>.@g?
  412c9c:	3edc53c1 3f671599 3edd092e 3f66ea45     .S.>..g?...>E.f?
  412cac:	3eddbe79 3f66becc 3ede73a2 3f669330     y..>..f?.s.>0.f?
  412cbc:	3edf28a9 3f666771 3edfdd8d 3f663b8e     .(.>qgf?...>.;f?
  412ccc:	3ee0924f 3f660f88 3ee146ee 3f65e35e     O..>..f?.F.>^.e?
  412cdc:	3ee1fb6a 3f65b710 3ee2afc4 3f658aa0     j..>..e?...>..e?
  412cec:	3ee363fa 3f655e0b 3ee4180e 3f653154     .c.>.^e?...>T1e?
  412cfc:	3ee4cbfe 3f650479 3ee57fcb 3f64d77b     ...>y.e?...>{.d?
  412d0c:	3ee63375 3f64aa59 3ee6e6fb 3f647d14     u3.>Y.d?...>.}d?
  412d1c:	3ee79a5d 3f644fac 3ee84d9c 3f642221     ]..>.Od?.M.>!"d?
  412d2c:	3ee900b7 3f63f473 3ee9b3ae 3f63c6a1     ...>s.c?...>..c?
  412d3c:	3eea6681 3f6398ac 3eeb1930 3f636a95     .f.>..c?0..>.jc?
  412d4c:	3eebcbbb 3f633c5a 3eec7e21 3f630dfc     ...>Z<c?!~.>..c?
  412d5c:	3eed3063 3f62df7b 3eede280 3f62b0d7     c0.>{.b?...>..b?
  412d6c:	3eee9479 3f628210 3eef464c 3f625326     y..>..b?LF.>&Sb?
  412d7c:	3eeff7fb 3f62241a 3ef0a985 3f61f4ea     ...>.$b?...>..a?
  412d8c:	3ef15aea 3f61c598 3ef20c29 3f619622     .Z.>..a?)..>".a?
  412d9c:	3ef2bd43 3f61668a 3ef36e38 3f6136d0     C..>.fa?8n.>.6a?
  412dac:	3ef41f07 3f6106f2 3ef4cfb1 3f60d6f2     ...>..a?...>..`?
  412dbc:	3ef58035 3f60a6cf 3ef63093 3f607689     5..>..`?.0.>.v`?
  412dcc:	3ef6e0cb 3f604621 3ef790dc 3f601596     ...>!F`?...>..`?
  412ddc:	3ef840c8 3f5fe4e9 3ef8f08e 3f5fb419     .@.>.._?...>.._?
  412dec:	3ef9a02d 3f5f8327 3efa4fa5 3f5f5212     -..>'._?.O.>.R_?
  412dfc:	3efafef7 3f5f20db 3efbae22 3f5eef81     ...>. _?"..>..^?
  412e0c:	3efc5d27 3f5ebe05 3efd0c04 3f5e8c67     '].>..^?...>g.^?
  412e1c:	3efdbabb 3f5e5aa6 3efe694a 3f5e28c3     ...>.Z^?Ji.>.(^?
  412e2c:	3eff17b2 3f5df6be 3effc5f3 3f5dc497     ...>..]?...>..]?
  412e3c:	3f003a06 3f5d924d 3f0090ff 3f5d5fe1     .:.?M.]?...?._]?
  412e4c:	3f00e7e4 3f5d2d53 3f013eb5 3f5cfaa3     ...?S-]?.>.?..\?
  412e5c:	3f019573 3f5cc7d1 3f01ec1c 3f5c94dd     s..?..\?...?..\?
  412e6c:	3f0242b1 3f5c61c7 3f029932 3f5c2e8e     .B.?.a\?2..?..\?
  412e7c:	3f02ef9f 3f5bfb34 3f0345f8 3f5bc7b8     ...?4.[?.E.?..[?
  412e8c:	3f039c3d 3f5b941a 3f03f26d 3f5b605a     =..?..[?m..?Z`[?
  412e9c:	3f044889 3f5b2c79 3f049e91 3f5af875     .H.?y,[?...?u.Z?
  412eac:	3f04f484 3f5ac450 3f054a62 3f5a9009     ...?P.Z?bJ.?..Z?
  412ebc:	3f05a02c 3f5a5ba0 3f05f5e2 3f5a2716     ,..?.[Z?...?.'Z?
  412ecc:	3f064b82 3f59f26a 3f06a10e 3f59bd9c     .K.?j.Y?...?..Y?
  412edc:	3f06f686 3f5988ad 3f074be8 3f59539c     ...?..Y?.K.?.SY?
  412eec:	3f07a136 3f591e6a 3f07f66f 3f58e917     6..?j.Y?o..?..X?
  412efc:	3f084b92 3f58b3a1 3f08a0a1 3f587e0b     .K.?..X?...?.~X?
  412f0c:	3f08f59b 3f584853 3f094a7f 3f581279     ...?SHX?.J.?y.X?
  412f1c:	3f099f4e 3f57dc7f 3f09f409 3f57a663     N..?..W?...?c.W?
  412f2c:	3f0a48ad 3f577026 3f0a9d3d 3f5739c7     .H.?&pW?=..?.9W?
  412f3c:	3f0af1b7 3f570348 3f0b461c 3f56cca7     ...?H.W?.F.?..V?
  412f4c:	3f0b9a6b 3f5695e5 3f0beea5 3f565f02     k..?..V?...?._V?
  412f5c:	3f0c42c9 3f5627fe 3f0c96d7 3f55f0d9     .B.?.'V?...?..U?
  412f6c:	3f0cead0 3f55b993 3f0d3eb3 3f55822c     ...?..U?.>.?,.U?
  412f7c:	3f0d9281 3f554aa4 3f0de638 3f5512fb     ...?.JU?8..?..U?
  412f8c:	3f0e39da 3f54db31 3f0e8d65 3f54a347     .9.?1.T?e..?G.T?
  412f9c:	3f0ee0db 3f546b3b 3f0f343b 3f54330f     ...?;kT?;4.?.3T?
  412fac:	3f0f8784 3f53fac3 3f0fdab8 3f53c255     ...?..S?...?U.S?
  412fbc:	3f102dd5 3f5389c7 3f1080dc 3f535118     .-.?..S?...?.QS?
  412fcc:	3f10d3cd 3f531849 3f1126a7 3f52df59     ...?I.S?.&.?Y.R?
  412fdc:	3f11796b 3f52a649 3f11cc19 3f526d18     ky.?I.R?...?.mR?
  412fec:	3f121eb0 3f5233c6 3f127130 3f51fa54     ...?.3R?0q.?T.Q?
  412ffc:	3f12c39a 3f51c0c2 3f1315ee 3f518710     ...?..Q?...?..Q?
  41300c:	3f13682a 3f514d3d 3f13ba50 3f51134a     *h.?=MQ?P..?J.Q?
  41301c:	3f140c5f 3f50d937 3f145e58 3f509f03     _..?7.P?X^.?..P?
  41302c:	3f14b039 3f5064af 3f150204 3f502a3b     9..?.dP?...?;*P?
  41303c:	3f1553b7 3f4fefa8 3f15a554 3f4fb4f4     .S.?..O?T..?..O?
  41304c:	3f15f6d9 3f4f7a1f 3f164847 3f4f3f2b     ...?.zO?GH.?+?O?
  41305c:	3f16999f 3f4f0417 3f16eadf 3f4ec8e4     ...?..O?...?..N?
  41306c:	3f173c07 3f4e8d90 3f178d18 3f4e521c     .<.?..N?...?.RN?
  41307c:	3f17de12 3f4e1689 3f182ef5 3f4ddad5     ...?..N?...?..M?
  41308c:	3f187fc0 3f4d9f02 3f18d073 3f4d6310     ...?..M?s..?.cM?
  41309c:	3f19210f 3f4d26fd 3f197194 3f4ceacb     .!.?.&M?.q.?..L?
  4130ac:	3f19c200 3f4cae79 3f1a1255 3f4c7208     ...?y.L?U..?.rL?
  4130bc:	3f1a6293 3f4c3578 3f1ab2b8 3f4bf8c7     .b.?x5L?...?..K?
  4130cc:	3f1b02c6 3f4bbbf8 3f1b52bb 3f4b7f09     ...?..K?.R.?..K?
  4130dc:	3f1ba299 3f4b41fa 3f1bf25f 3f4b04cc     ...?.AK?_..?..K?
  4130ec:	3f1c420c 3f4ac77f 3f1c91a2 3f4a8a13     .B.?..J?...?..J?
  4130fc:	3f1ce11f 3f4a4c87 3f1d3084 3f4a0edc     ...?.LJ?.0.?..J?
  41310c:	3f1d7fd1 3f49d112 3f1dcf06 3f499329     ...?..I?...?).I?
  41311c:	3f1e1e22 3f495521 3f1e6d26 3f4916fa     "..?!UI?&m.?..I?
  41312c:	3f1ebc12 3f48d8b3 3f1f0ae5 3f489a4e     ...?..H?...?N.H?
  41313c:	3f1f599f 3f485bca 3f1fa841 3f481d27     .Y.?.[H?A..?'.H?
  41314c:	3f1ff6cb 3f47de65 3f20453b 3f479f84     ...?e.G?;E ?..G?
  41315c:	3f209393 3f476085 3f20e1d2 3f472167     .. ?.`G?.. ?g!G?
  41316c:	3f212ff9 3f46e22a 3f217e06 3f46a2ce     ./!?*.F?.~!?..F?
  41317c:	3f21cbfb 3f466354 3f2219d7 3f4623bb     ..!?TcF?.."?.#F?
  41318c:	3f226799 3f45e403 3f22b543 3f45a42d     .g"?..E?C."?-.E?
  41319c:	3f2302d3 3f456439 3f23504b 3f452426     ..#?9dE?KP#?&$E?
  4131ac:	3f239da9 3f44e3f5 3f23eaee 3f44a3a5     ..#?..D?..#?..D?
  4131bc:	3f24381a 3f446337 3f24852c 3f4422ab     .8$?7cD?,.$?."D?
  4131cc:	3f24d225 3f43e200 3f251f04 3f43a138     %.$?..C?..%?8.C?
  4131dc:	3f256bcb 3f436051 3f25b877 3f431f4c     .k%?Q`C?w.%?L.C?
  4131ec:	3f26050a 3f42de29 3f265184 3f429ce8     ..&?).B?.Q&?..B?
  4131fc:	3f269de3 3f425b89 3f26ea2a 3f421a0b     ..&?.[B?*.&?..B?
  41320c:	3f273656 3f41d870 3f278268 3f4196b7     V6'?p.A?h.'?..A?
  41321c:	3f27ce61 3f4154e1 3f281a40 3f4112ec     a.'?.TA?@.(?..A?
  41322c:	3f286605 3f40d0da 3f28b1b0 3f408ea9     .f(?..@?..(?..@?
  41323c:	3f28fd41 3f404c5c 3f2948b8 3f4009f0     A.(?\L@?.H)?..@?
  41324c:	3f299415 3f3fc767 3f29df57 3f3f84c0     ..)?g.??W.)?..??
  41325c:	3f2a2a80 3f3f41fc 3f2a758e 3f3eff1b     .**?.A??.u*?..>?
  41326c:	3f2ac082 3f3ebc1b 3f2b0b5b 3f3e78ff     ..*?..>?[.+?.x>?
  41327c:	3f2b561b 3f3e35c5 3f2ba0bf 3f3df26e     .V+?.5>?..+?n.=?
  41328c:	3f2beb4a 3f3daef9 3f2c35b9 3f3d6b67     J.+?..=?.5,?gk=?
  41329c:	3f2c800f 3f3d27b8 3f2cca49 3f3ce3ec     ..,?.'=?I.,?..<?
  4132ac:	3f2d1469 3f3ca003 3f2d5e6f 3f3c5bfc     i.-?..<?o^-?.[<?
  4132bc:	3f2da859 3f3c17d9 3f2df229 3f3bd398     Y.-?..<?).-?..;?
  4132cc:	3f2e3bde 3f3b8f3b 3f2e8578 3f3b4ac1     .;.?;.;?x..?.J;?
  4132dc:	3f2ecef7 3f3b0629 3f2f185b 3f3ac175     ...?).;?[./?u.:?
  4132ec:	3f2f61a5 3f3a7ca4 3f2faad3 3f3a37b7     .a/?.|:?../?.7:?
  4132fc:	3f2ff3e6 3f39f2ac 3f303cde 3f39ad85     ../?..9?.<0?..9?
  41330c:	3f3085bb 3f396842 3f30ce7c 3f3922e1     ..0?Bh9?|.0?."9?
  41331c:	3f311722 3f38dd65 3f315fad 3f3897cb     ".1?e.8?._1?..8?
  41332c:	3f31a81d 3f385216 3f31f071 3f380c43     ..1?.R8?q.1?C.8?
  41333c:	3f3238aa 3f37c655 3f3280c7 3f37804a     .82?U.7?..2?J.7?
  41334c:	3f32c8c9 3f373a23 3f3310af 3f36f3df     ..2?#:7?..3?..6?
  41335c:	3f33587a 3f36ad7f 3f33a029 3f366704     zX3?..6?).3?.g6?
  41336c:	3f33e7bc 3f36206c 3f342f34 3f35d9b8     ..3?l 6?4/4?..5?
  41337c:	3f34768f 3f3592e7 3f34bdcf 3f354bfb     .v4?..5?..4?.K5?
  41338c:	3f3504f3 3f3504f3 3f354bfb 3f34bdcf     ..5?..5?.K5?..4?
  41339c:	3f3592e7 3f34768f 3f35d9b8 3f342f34     ..5?.v4?..5?4/4?
  4133ac:	3f36206c 3f33e7bc 3f366704 3f33a029     l 6?..3?.g6?).3?
  4133bc:	3f36ad7f 3f33587a 3f36f3df 3f3310af     ..6?zX3?..6?..3?
  4133cc:	3f373a23 3f32c8c9 3f37804a 3f3280c7     #:7?..2?J.7?..2?
  4133dc:	3f37c655 3f3238aa 3f380c43 3f31f071     U.7?.82?C.8?q.1?
  4133ec:	3f385216 3f31a81d 3f3897cb 3f315fad     .R8?..1?..8?._1?
  4133fc:	3f38dd65 3f311722 3f3922e1 3f30ce7c     e.8?".1?."9?|.0?
  41340c:	3f396842 3f3085bb 3f39ad85 3f303cde     Bh9?..0?..9?.<0?
  41341c:	3f39f2ac 3f2ff3e6 3f3a37b7 3f2faad3     ..9?../?.7:?../?
  41342c:	3f3a7ca4 3f2f61a5 3f3ac175 3f2f185b     .|:?.a/?u.:?[./?
  41343c:	3f3b0629 3f2ecef7 3f3b4ac1 3f2e8578     ).;?...?.J;?x..?
  41344c:	3f3b8f3b 3f2e3bde 3f3bd398 3f2df229     ;.;?.;.?..;?).-?
  41345c:	3f3c17d9 3f2da859 3f3c5bfc 3f2d5e6f     ..<?Y.-?.[<?o^-?
  41346c:	3f3ca003 3f2d1469 3f3ce3ec 3f2cca49     ..<?i.-?..<?I.,?
  41347c:	3f3d27b8 3f2c800f 3f3d6b67 3f2c35b9     .'=?..,?gk=?.5,?
  41348c:	3f3daef9 3f2beb4a 3f3df26e 3f2ba0bf     ..=?J.+?n.=?..+?
  41349c:	3f3e35c5 3f2b561b 3f3e78ff 3f2b0b5b     .5>?.V+?.x>?[.+?
  4134ac:	3f3ebc1b 3f2ac082 3f3eff1b 3f2a758e     ..>?..*?..>?.u*?
  4134bc:	3f3f41fc 3f2a2a80 3f3f84c0 3f29df57     .A??.**?..??W.)?
  4134cc:	3f3fc767 3f299415 3f4009f0 3f2948b8     g.??..)?..@?.H)?
  4134dc:	3f404c5c 3f28fd41 3f408ea9 3f28b1b0     \L@?A.(?..@?..(?
  4134ec:	3f40d0da 3f286605 3f4112ec 3f281a40     ..@?.f(?..A?@.(?
  4134fc:	3f4154e1 3f27ce61 3f4196b7 3f278268     .TA?a.'?..A?h.'?
  41350c:	3f41d870 3f273656 3f421a0b 3f26ea2a     p.A?V6'?..B?*.&?
  41351c:	3f425b89 3f269de3 3f429ce8 3f265184     .[B?..&?..B?.Q&?
  41352c:	3f42de29 3f26050a 3f431f4c 3f25b877     ).B?..&?L.C?w.%?
  41353c:	3f436051 3f256bcb 3f43a138 3f251f04     Q`C?.k%?8.C?..%?
  41354c:	3f43e200 3f24d225 3f4422ab 3f24852c     ..C?%.$?."D?,.$?
  41355c:	3f446337 3f24381a 3f44a3a5 3f23eaee     7cD?.8$?..D?..#?
  41356c:	3f44e3f5 3f239da9 3f452426 3f23504b     ..D?..#?&$E?KP#?
  41357c:	3f456439 3f2302d3 3f45a42d 3f22b543     9dE?..#?-.E?C."?
  41358c:	3f45e403 3f226799 3f4623bb 3f2219d7     ..E?.g"?.#F?.."?
  41359c:	3f466354 3f21cbfb 3f46a2ce 3f217e06     TcF?..!?..F?.~!?
  4135ac:	3f46e22a 3f212ff9 3f472167 3f20e1d2     *.F?./!?g!G?.. ?
  4135bc:	3f476085 3f209393 3f479f84 3f20453b     .`G?.. ?..G?;E ?
  4135cc:	3f47de65 3f1ff6cb 3f481d27 3f1fa841     e.G?...?'.H?A..?
  4135dc:	3f485bca 3f1f599f 3f489a4e 3f1f0ae5     .[H?.Y.?N.H?...?
  4135ec:	3f48d8b3 3f1ebc12 3f4916fa 3f1e6d26     ..H?...?..I?&m.?
  4135fc:	3f495521 3f1e1e22 3f499329 3f1dcf06     !UI?"..?).I?...?
  41360c:	3f49d112 3f1d7fd1 3f4a0edc 3f1d3084     ..I?...?..J?.0.?
  41361c:	3f4a4c87 3f1ce11f 3f4a8a13 3f1c91a2     .LJ?...?..J?...?
  41362c:	3f4ac77f 3f1c420c 3f4b04cc 3f1bf25f     ..J?.B.?..K?_..?
  41363c:	3f4b41fa 3f1ba299 3f4b7f09 3f1b52bb     .AK?...?..K?.R.?
  41364c:	3f4bbbf8 3f1b02c6 3f4bf8c7 3f1ab2b8     ..K?...?..K?...?
  41365c:	3f4c3578 3f1a6293 3f4c7208 3f1a1255     x5L?.b.?.rL?U..?
  41366c:	3f4cae79 3f19c200 3f4ceacb 3f197194     y.L?...?..L?.q.?
  41367c:	3f4d26fd 3f19210f 3f4d6310 3f18d073     .&M?.!.?.cM?s..?
  41368c:	3f4d9f02 3f187fc0 3f4ddad5 3f182ef5     ..M?...?..M?...?
  41369c:	3f4e1689 3f17de12 3f4e521c 3f178d18     ..N?...?.RN?...?
  4136ac:	3f4e8d90 3f173c07 3f4ec8e4 3f16eadf     ..N?.<.?..N?...?
  4136bc:	3f4f0417 3f16999f 3f4f3f2b 3f164847     ..O?...?+?O?GH.?
  4136cc:	3f4f7a1f 3f15f6d9 3f4fb4f4 3f15a554     .zO?...?..O?T..?
  4136dc:	3f4fefa8 3f1553b7 3f502a3b 3f150204     ..O?.S.?;*P?...?
  4136ec:	3f5064af 3f14b039 3f509f03 3f145e58     .dP?9..?..P?X^.?
  4136fc:	3f50d937 3f140c5f 3f51134a 3f13ba50     7.P?_..?J.Q?P..?
  41370c:	3f514d3d 3f13682a 3f518710 3f1315ee     =MQ?*h.?..Q?...?
  41371c:	3f51c0c2 3f12c39a 3f51fa54 3f127130     ..Q?...?T.Q?0q.?
  41372c:	3f5233c6 3f121eb0 3f526d18 3f11cc19     .3R?...?.mR?...?
  41373c:	3f52a649 3f11796b 3f52df59 3f1126a7     I.R?ky.?Y.R?.&.?
  41374c:	3f531849 3f10d3cd 3f535118 3f1080dc     I.S?...?.QS?...?
  41375c:	3f5389c7 3f102dd5 3f53c255 3f0fdab8     ..S?.-.?U.S?...?
  41376c:	3f53fac3 3f0f8784 3f54330f 3f0f343b     ..S?...?.3T?;4.?
  41377c:	3f546b3b 3f0ee0db 3f54a347 3f0e8d65     ;kT?...?G.T?e..?
  41378c:	3f54db31 3f0e39da 3f5512fb 3f0de638     1.T?.9.?..U?8..?
  41379c:	3f554aa4 3f0d9281 3f55822c 3f0d3eb3     .JU?...?,.U?.>.?
  4137ac:	3f55b993 3f0cead0 3f55f0d9 3f0c96d7     ..U?...?..U?...?
  4137bc:	3f5627fe 3f0c42c9 3f565f02 3f0beea5     .'V?.B.?._V?...?
  4137cc:	3f5695e5 3f0b9a6b 3f56cca7 3f0b461c     ..V?k..?..V?.F.?
  4137dc:	3f570348 3f0af1b7 3f5739c7 3f0a9d3d     H.W?...?.9W?=..?
  4137ec:	3f577026 3f0a48ad 3f57a663 3f09f409     &pW?.H.?c.W?...?
  4137fc:	3f57dc7f 3f099f4e 3f581279 3f094a7f     ..W?N..?y.X?.J.?
  41380c:	3f584853 3f08f59b 3f587e0b 3f08a0a1     SHX?...?.~X?...?
  41381c:	3f58b3a1 3f084b92 3f58e917 3f07f66f     ..X?.K.?..X?o..?
  41382c:	3f591e6a 3f07a136 3f59539c 3f074be8     j.Y?6..?.SY?.K.?
  41383c:	3f5988ad 3f06f686 3f59bd9c 3f06a10e     ..Y?...?..Y?...?
  41384c:	3f59f26a 3f064b82 3f5a2716 3f05f5e2     j.Y?.K.?.'Z?...?
  41385c:	3f5a5ba0 3f05a02c 3f5a9009 3f054a62     .[Z?,..?..Z?bJ.?
  41386c:	3f5ac450 3f04f484 3f5af875 3f049e91     P.Z?...?u.Z?...?
  41387c:	3f5b2c79 3f044889 3f5b605a 3f03f26d     y,[?.H.?Z`[?m..?
  41388c:	3f5b941a 3f039c3d 3f5bc7b8 3f0345f8     ..[?=..?..[?.E.?
  41389c:	3f5bfb34 3f02ef9f 3f5c2e8e 3f029932     4.[?...?..\?2..?
  4138ac:	3f5c61c7 3f0242b1 3f5c94dd 3f01ec1c     .a\?.B.?..\?...?
  4138bc:	3f5cc7d1 3f019573 3f5cfaa3 3f013eb5     ..\?s..?..\?.>.?
  4138cc:	3f5d2d53 3f00e7e4 3f5d5fe1 3f0090ff     S-]?...?._]?...?
  4138dc:	3f5d924d 3f003a06 3f5dc497 3effc5f3     M.]?.:.?..]?...>
  4138ec:	3f5df6be 3eff17b2 3f5e28c3 3efe694a     ..]?...>.(^?Ji.>
  4138fc:	3f5e5aa6 3efdbabb 3f5e8c67 3efd0c04     .Z^?...>g.^?...>
  41390c:	3f5ebe05 3efc5d27 3f5eef81 3efbae22     ..^?'].>..^?"..>
  41391c:	3f5f20db 3efafef7 3f5f5212 3efa4fa5     . _?...>.R_?.O.>
  41392c:	3f5f8327 3ef9a02d 3f5fb419 3ef8f08e     '._?-..>.._?...>
  41393c:	3f5fe4e9 3ef840c8 3f601596 3ef790dc     .._?.@.>..`?...>
  41394c:	3f604621 3ef6e0cb 3f607689 3ef63093     !F`?...>.v`?.0.>
  41395c:	3f60a6cf 3ef58035 3f60d6f2 3ef4cfb1     ..`?5..>..`?...>
  41396c:	3f6106f2 3ef41f07 3f6136d0 3ef36e38     ..a?...>.6a?8n.>
  41397c:	3f61668a 3ef2bd43 3f619622 3ef20c29     .fa?C..>".a?)..>
  41398c:	3f61c598 3ef15aea 3f61f4ea 3ef0a985     ..a?.Z.>..a?...>
  41399c:	3f62241a 3eeff7fb 3f625326 3eef464c     .$b?...>&Sb?LF.>
  4139ac:	3f628210 3eee9479 3f62b0d7 3eede280     ..b?y..>..b?...>
  4139bc:	3f62df7b 3eed3063 3f630dfc 3eec7e21     {.b?c0.>..c?!~.>
  4139cc:	3f633c5a 3eebcbbb 3f636a95 3eeb1930     Z<c?...>.jc?0..>
  4139dc:	3f6398ac 3eea6681 3f63c6a1 3ee9b3ae     ..c?.f.>..c?...>
  4139ec:	3f63f473 3ee900b7 3f642221 3ee84d9c     s.c?...>!"d?.M.>
  4139fc:	3f644fac 3ee79a5d 3f647d14 3ee6e6fb     .Od?]..>.}d?...>
  413a0c:	3f64aa59 3ee63375 3f64d77b 3ee57fcb     Y.d?u3.>{.d?...>
  413a1c:	3f650479 3ee4cbfe 3f653154 3ee4180e     y.e?...>T1e?...>
  413a2c:	3f655e0b 3ee363fa 3f658aa0 3ee2afc4     .^e?.c.>..e?...>
  413a3c:	3f65b710 3ee1fb6a 3f65e35e 3ee146ee     ..e?j..>^.e?.F.>
  413a4c:	3f660f88 3ee0924f 3f663b8e 3edfdd8d     ..f?O..>.;f?...>
  413a5c:	3f666771 3edf28a9 3f669330 3ede73a2     qgf?.(.>0.f?.s.>
  413a6c:	3f66becc 3eddbe79 3f66ea45 3edd092e     ..f?y..>E.f?...>
  413a7c:	3f671599 3edc53c1 3f6740ca 3edb9e31     ..g?.S.>.@g?1..>
  413a8c:	3f676bd8 3edae880 3f6796c1 3eda32ad     .kg?...>..g?.2.>
  413a9c:	3f67c187 3ed97cb9 3f67ec2a 3ed8c6a3     ..g?.|.>*.g?...>
  413aac:	3f6816a8 3ed8106b 3f684103 3ed75a13     ..h?k..>.Ah?.Z.>
  413abc:	3f686b39 3ed6a399 3f68954c 3ed5ecfd     9kh?...>L.h?...>
  413acc:	3f68bf3c 3ed53641 3f68e907 3ed47f64     <.h?A6.>..h?d..>
  413adc:	3f6912ae 3ed3c867 3f693c32 3ed31148     ..i?g..>2<i?H..>
  413aec:	3f696591 3ed25a09 3f698ecc 3ed1a2aa     .ei?.Z.>..i?...>
  413afc:	3f69b7e4 3ed0eb2a 3f69e0d7 3ed0338a     ..i?*..>..i?.3.>
  413b0c:	3f6a09a7 3ecf7bca 3f6a3252 3ecec3ea     ..j?.{.>R2j?...>
  413b1c:	3f6a5ad9 3ece0bea 3f6a833c 3ecd53ca     .Zj?...><.j?.S.>
  413b2c:	3f6aab7b 3ecc9b8b 3f6ad395 3ecbe32c     {.j?...>..j?,..>
  413b3c:	3f6afb8c 3ecb2aae 3f6b235e 3eca7210     ..j?.*.>^#k?.r.>
  413b4c:	3f6b4b0c 3ec9b953 3f6b7295 3ec90077     .Kk?S..>.rk?w..>
  413b5c:	3f6b99fb 3ec8477c 3f6bc13b 3ec78e62     ..k?|G.>;.k?b..>
  413b6c:	3f6be858 3ec6d529 3f6c0f50 3ec61bd2     X.k?)..>P.l?...>
  413b7c:	3f6c3624 3ec5625c 3f6c5cd4 3ec4a8c8     $6l?\b.>.\l?...>
  413b8c:	3f6c835e 3ec3ef15 3f6ca9c5 3ec33544     ^.l?...>..l?D5.>
  413b9c:	3f6cd007 3ec27b55 3f6cf624 3ec1c148     ..l?U{.>$.l?H..>
  413bac:	3f6d1c1d 3ec1071e 3f6d41f2 3ec04cd5     ..m?...>.Am?.L.>
  413bbc:	3f6d67a1 3ebf926f 3f6d8d2d 3ebed7eb     .gm?o..>-.m?...>
  413bcc:	3f6db293 3ebe1d4a 3f6dd7d5 3ebd628b     ..m?J..>..m?.b.>
  413bdc:	3f6dfcf2 3ebca7af 3f6e21eb 3ebbecb6     ..m?...>.!n?...>
  413bec:	3f6e46be 3ebb31a0 3f6e6b6d 3eba766e     .Fn?.1.>mkn?nv.>
  413bfc:	3f6e8ff8 3eb9bb1e 3f6eb45d 3eb8ffb2     ..n?...>].n?...>
  413c0c:	3f6ed89e 3eb8442a 3f6efcba 3eb78884     ..n?*D.>..n?...>
  413c1c:	3f6f20b0 3eb6ccc3 3f6f4483 3eb610e6     . o?...>.Do?...>
  413c2c:	3f6f6830 3eb554ec 3f6f8bb8 3eb498d6     0ho?.T.>..o?...>
  413c3c:	3f6faf1b 3eb3dca5 3f6fd25a 3eb32058     ..o?...>Z.o?X .>
  413c4c:	3f6ff573 3eb263ef 3f701867 3eb1a76b     s.o?.c.>g.p?k..>
  413c5c:	3f703b37 3eb0eacb 3f705de1 3eb02e10     7;p?...>.]p?...>
  413c6c:	3f708066 3eaf713a 3f70a2c6 3eaeb449     f.p?:q.>..p?I..>
  413c7c:	3f70c502 3eadf73c 3f70e717 3ead3a15     ..p?<..>..p?.:.>
  413c8c:	3f710908 3eac7cd4 3f712ad4 3eabbf77     ..q?.|.>.*q?w..>
  413c9c:	3f714c7a 3eab0201 3f716dfb 3eaa446f     zLq?...>.mq?oD.>
  413cac:	3f718f57 3ea986c4 3f71b08e 3ea8c8fe     W.q?...>..q?...>
  413cbc:	3f71d19f 3ea80b1f 3f71f28c 3ea74d25     ..q?...>..q?%M.>
  413ccc:	3f721352 3ea68f12 3f7233f4 3ea5d0e5     R.r?...>.3r?...>
  413cdc:	3f725470 3ea5129f 3f7274c7 3ea4543f     pTr?...>.tr??T.>
  413cec:	3f7294f8 3ea395c5 3f72b504 3ea2d733     ..r?...>..r?3..>
  413cfc:	3f72d4eb 3ea21887 3f72f4ac 3ea159c2     ..r?...>..r?.Y.>
  413d0c:	3f731447 3ea09ae5 3f7333be 3e9fdbee     G.s?...>.3s?...>
  413d1c:	3f73530e 3e9f1cdf 3f737239 3e9e5db8     .Ss?...>9rs?.].>
  413d2c:	3f73913f 3e9d9e78 3f73b01f 3e9cdf20     ?.s?x..>..s? ..>
  413d3c:	3f73ced9 3e9c1faf 3f73ed6e 3e9b6027     ..s?...>n.s?'`.>
  413d4c:	3f740bdd 3e9aa086 3f742a27 3e99e0ce     ..t?...>'*t?...>
  413d5c:	3f74484b 3e9920fe 3f746649 3e986116     KHt?. .>Ift?.a.>
  413d6c:	3f748422 3e97a117 3f74a1d5 3e96e100     ".t?...>..t?...>
  413d7c:	3f74bf62 3e9620d2 3f74dcc9 3e95608d     b.t?. .>..t?.`.>
  413d8c:	3f74fa0b 3e94a031 3f751727 3e93dfbf     ..t?1..>'.u?...>
  413d9c:	3f75341d 3e931f35 3f7550ed 3e925e94     .4u?5..>.Pu?.^.>
  413dac:	3f756d97 3e919ddd 3f758a1c 3e90dd10     .mu?...>..u?...>
  413dbc:	3f75a67b 3e901c2c 3f75c2b3 3e8f5b32     {.u?,..>..u?2[.>
  413dcc:	3f75dec6 3e8e9a22 3f75fab3 3e8dd8fc     ..u?"..>..u?...>
  413ddc:	3f76167a 3e8d17c0 3f76321b 3e8c566e     z.v?...>.2v?nV.>
  413dec:	3f764d97 3e8b9507 3f7668ec 3e8ad38a     .Mv?...>.hv?...>
  413dfc:	3f76841b 3e8a11f8 3f769f24 3e895050     ..v?...>$.v?PP.>
  413e0c:	3f76ba07 3e888e93 3f76d4c4 3e87ccc1     ..v?...>..v?...>
  413e1c:	3f76ef5b 3e870ada 3f7709cc 3e8648df     [.v?...>..w?.H.>
  413e2c:	3f772417 3e8586ce 3f773e3c 3e84c4aa     .$w?...><>w?...>
  413e3c:	3f77583a 3e840270 3f777213 3e834022     :Xw?p..>.rw?"@.>
  413e4c:	3f778bc5 3e827dc0 3f77a551 3e81bb4a     ..w?.}.>Q.w?J..>
  413e5c:	3f77beb7 3e80f8c0 3f77d7f7 3e803622     ..w?...>..w?"6.>
  413e6c:	3f77f110 3e7ee6e1 3f780a04 3e7d6156     ..w?..~>..x?Va}>
  413e7c:	3f7822d1 3e7bdba4 3f783b77 3e7a55cb     ."x?..{>w;x?.Uz>
  413e8c:	3f7853f8 3e78cfcc 3f786c52 3e7749a6     .Sx?..x>Rlx?.Iw>
  413e9c:	3f788486 3e75c35a 3f789c93 3e743ce8     ..x?Z.u>..x?.<t>
  413eac:	3f78b47b 3e72b651 3f78cc3b 3e712f94     {.x?Q.r>;.x?./q>
  413ebc:	3f78e3d6 3e6fa8b2 3f78fb4a 3e6e21ab     ..x?..o>J.x?.!n>
  413ecc:	3f791298 3e6c9a7f 3f7929bf 3e6b132f     ..y?..l>.)y?/.k>
  413edc:	3f7940c0 3e698bba 3f79579a 3e680422     .@y?..i>.Wy?".h>
  413eec:	3f796e4e 3e667c66 3f7984dc 3e64f486     Nny?f|f>..y?..d>
  413efc:	3f799b43 3e636c83 3f79b183 3e61e45c     C.y?.lc>..y?\.a>
  413f0c:	3f79c79d 3e605c13 3f79dd91 3e5ed3a8     ..y?.\`>..y?..^>
  413f1c:	3f79f35e 3e5d4b1a 3f7a0904 3e5bc26a     ^.y?.K]>..z?j.[>
  413f2c:	3f7a1e84 3e5a3997 3f7a33dd 3e58b0a4     ..z?.9Z>.3z?..X>
  413f3c:	3f7a4910 3e57278f 3f7a5e1c 3e559e58     .Iz?.'W>.^z?X.U>
  413f4c:	3f7a7302 3e541501 3f7a87c1 3e528b89     .sz?..T>..z?..R>
  413f5c:	3f7a9c59 3e5101f1 3f7ab0cb 3e4f7838     Y.z?..Q>..z?8xO>
  413f6c:	3f7ac516 3e4dee60 3f7ad93a 3e4c6467     ..z?`.M>:.z?gdL>
  413f7c:	3f7aed37 3e4ada4f 3f7b010e 3e495018     7.z?O.J>..{?.PI>
  413f8c:	3f7b14be 3e47c5c2 3f7b2848 3e463b4d     ..{?..G>H({?M;F>
  413f9c:	3f7b3bab 3e44b0b9 3f7b4ee7 3e432607     .;{?..D>.N{?.&C>
  413fac:	3f7b61fc 3e419b37 3f7b74ea 3e401049     .a{?7.A>.t{?I.@>
  413fbc:	3f7b87b2 3e3e853e 3f7b9a53 3e3cfa15     ..{?>.>>S.{?..<>
  413fcc:	3f7baccd 3e3b6ecf 3f7bbf20 3e39e36c     ..{?.n;> .{?l.9>
  413fdc:	3f7bd14d 3e3857ec 3f7be353 3e36cc50     M.{?.W8>S.{?P.6>
  413fec:	3f7bf531 3e354098 3f7c06e9 3e33b4c4     1.{?.@5>..|?..3>
  413ffc:	3f7c187a 3e3228d4 3f7c29e5 3e309cc9     z.|?.(2>.)|?..0>
  41400c:	3f7c3b28 3e2f10a2 3f7c4c44 3e2d8461     (;|?../>DL|?a.->
  41401c:	3f7c5d3a 3e2bf804 3f7c6e08 3e2a6b8d     :]|?..+>.n|?.k*>
  41402c:	3f7c7eb0 3e28defc 3f7c8f31 3e275251     .~|?..(>1.|?QR'>
  41403c:	3f7c9f8a 3e25c58c 3f7cafbd 3e2438ad     ..|?..%>..|?.8$>
  41404c:	3f7cbfc9 3e22abb6 3f7ccfae 3e211ea5     ..|?..">..|?..!>
  41405c:	3f7cdf6c 3e1f917b 3f7cef03 3e1e0438     l.|?{..>..|?8..>
  41406c:	3f7cfe73 3e1c76de 3f7d0dbc 3e1ae96b     s.|?.v.>..}?k..>
  41407c:	3f7d1cdd 3e195be0 3f7d2bd8 3e17ce3d     ..}?.[.>.+}?=..>
  41408c:	3f7d3aac 3e164083 3f7d4959 3e14b2b2     .:}?.@.>YI}?...>
  41409c:	3f7d57de 3e1324ca 3f7d663d 3e1196cc     .W}?.$.>=f}?...>
  4140ac:	3f7d7474 3e1008b7 3f7d8285 3e0e7a8b     tt}?...>..}?.z.>
  4140bc:	3f7d906e 3e0cec4a 3f7d9e30 3e0b5df3     n.}?J..>0.}?.].>
  4140cc:	3f7dabcc 3e09cf86 3f7db940 3e084105     ..}?...>@.}?.A.>
  4140dc:	3f7dc68c 3e06b26e 3f7dd3b2 3e0523c2     ..}?n..>..}?.#.>
  4140ec:	3f7de0b1 3e039502 3f7ded88 3e02062e     ..}?...>..}?...>
  4140fc:	3f7dfa38 3e007745 3f7e06c2 3dfdd092     8.}?Ew.>..~?...=
  41410c:	3f7e1324 3dfab273 3f7e1f5e 3df7942c     $.~?s..=^.~?,..=
  41411c:	3f7e2b72 3df475c0 3f7e375e 3df1572e     r+~?.u.=^7~?.W.=
  41412c:	3f7e4323 3dee3876 3f7e4ec1 3deb199a     #C~?v8.=.N~?...=
  41413c:	3f7e5a38 3de7fa9a 3f7e6588 3de4db76     8Z~?...=.e~?v..=
  41414c:	3f7e70b0 3de1bc2e 3f7e7bb1 3dde9cc4     .p~?...=.{~?...=
  41415c:	3f7e868b 3ddb7d37 3f7e913d 3dd85d89     ..~?7}.==.~?.].=
  41416c:	3f7e9bc9 3dd53db9 3f7ea62d 3dd21dc8     ..~?.=.=-.~?...=
  41417c:	3f7eb069 3dcefdb7 3f7eba7f 3dcbdd86     i.~?...=..~?...=
  41418c:	3f7ec46d 3dc8bd36 3f7ece34 3dc59cc6     m.~?6..=4.~?...=
  41419c:	3f7ed7d4 3dc27c39 3f7ee14c 3dbf5b8d     ..~?9|.=L.~?.[.=
  4141ac:	3f7eea9d 3dbc3ac3 3f7ef3c7 3db919dd     ..~?.:.=..~?...=
  4141bc:	3f7efcc9 3db5f8da 3f7f05a4 3db2d7bb     ..~?...=...?...=
  4141cc:	3f7f0e58 3dafb680 3f7f16e4 3dac952b     X..?...=...?+..=
  4141dc:	3f7f1f49 3da973ba 3f7f2787 3da65230     I..?.s.=.'.?0R.=
  4141ec:	3f7f2f9d 3da3308c 3f7f378d 3da00ecf     ./.?.0.=.7.?...=
  4141fc:	3f7f3f54 3d9cecf9 3f7f46f4 3d99cb0a     T?.?...=.F.?...=
  41420c:	3f7f4e6d 3d96a905 3f7f55bf 3d9386e7     mN.?...=.U.?...=
  41421c:	3f7f5ce9 3d9064b4 3f7f63ec 3d8d426a     .\.?.d.=.c.?jB.=
  41422c:	3f7f6ac7 3d8a200a 3f7f717b 3d86fd94     .j.?. .={q.?...=
  41423c:	3f7f7808 3d83db0a 3f7f7e6d 3d80b86c     .x.?...=m~.?l..=
  41424c:	3f7f84ab 3d7b2b74 3f7f8ac2 3d74e5e9     ...?t+{=...?..t=
  41425c:	3f7f90b1 3d6ea038 3f7f9678 3d685a62     ...?8.n=x..?bZh=
  41426c:	3f7f9c18 3d621468 3f7fa191 3d5bce4c     ...?h.b=...?L.[=
  41427c:	3f7fa6e3 3d55880e 3f7fac0d 3d4f41af     ...?..U=...?.AO=
  41428c:	3f7fb10f 3d48fb2f 3f7fb5ea 3d42b491     ...?/.H=...?..B=
  41429c:	3f7fba9e 3d3c6dd5 3f7fbf2a 3d3626fc     ...?.m<=*..?.&6=
  4142ac:	3f7fc38f 3d2fe007 3f7fc7cc 3d2998f6     ...?../=...?..)=
  4142bc:	3f7fcbe2 3d2351cc 3f7fcfd1 3d1d0a88     ...?.Q#=...?...=
  4142cc:	3f7fd398 3d16c32c 3f7fd737 3d107bb8     ...?,..=7..?.{.=
  4142dc:	3f7fdaaf 3d0a342f 3f7fde00 3d03ec90     ...?/4.=...?...=
  4142ec:	3f7fe129 3cfb49b9 3f7fe42b 3ceeba2d     )..?.I.<+..?-..<
  4142fc:	3f7fe705 3ce22a7b 3f7fe9b8 3cd59aa6     ...?{*.<...?...<
  41430c:	3f7fec43 3cc90ab0 3f7feea7 3cbc7a9b     C..?...<...?.z.<
  41431c:	3f7ff0e3 3cafea69 3f7ff2f8 3ca35a1c     ...?i..<...?.Z.<
  41432c:	3f7ff4e6 3c96c9b6 3f7ff6ac 3c8a3938     ...?...<...?89.<
  41433c:	3f7ff84a 3c7b514b 3f7ff9c1 3c623000     J..?KQ{<...?.0b<
  41434c:	3f7ffb11 3c490e90 3f7ffc39 3c2fed02     ...?..I<9..?../<
  41435c:	3f7ffd39 3c16cb59 3f7ffe13 3bfb5330     9..?Y..<...?0S.;
  41436c:	3f7ffec4 3bc90f89 3f7fff4e 3b96cbc1     ...?...;N..?...;
  41437c:	3f7fffb1 3b490fc7 3f7fffec 3ac90fd4     ...?..I;...?...:
  41438c:	3f800000 00000000 3f7fffec bac90fd4     ...?.......?....
  41439c:	3f7fffb1 bb490fc7 3f7fff4e bb96cbc1     ...?..I.N..?....
  4143ac:	3f7ffec4 bbc90f89 3f7ffe13 bbfb5330     ...?.......?0S..
  4143bc:	3f7ffd39 bc16cb59 3f7ffc39 bc2fed02     9..?Y...9..?../.
  4143cc:	3f7ffb11 bc490e90 3f7ff9c1 bc623000     ...?..I....?.0b.
  4143dc:	3f7ff84a bc7b514b 3f7ff6ac bc8a3938     J..?KQ{....?89..
  4143ec:	3f7ff4e6 bc96c9b6 3f7ff2f8 bca35a1c     ...?.......?.Z..
  4143fc:	3f7ff0e3 bcafea69 3f7feea7 bcbc7a9b     ...?i......?.z..
  41440c:	3f7fec43 bcc90ab0 3f7fe9b8 bcd59aa6     C..?.......?....
  41441c:	3f7fe705 bce22a7b 3f7fe42b bceeba2d     ...?{*..+..?-...
  41442c:	3f7fe129 bcfb49b9 3f7fde00 bd03ec90     )..?.I.....?....
  41443c:	3f7fdaaf bd0a342f 3f7fd737 bd107bb8     ...?/4..7..?.{..
  41444c:	3f7fd398 bd16c32c 3f7fcfd1 bd1d0a88     ...?,......?....
  41445c:	3f7fcbe2 bd2351cc 3f7fc7cc bd2998f6     ...?.Q#....?..).
  41446c:	3f7fc38f bd2fe007 3f7fbf2a bd3626fc     ...?../.*..?.&6.
  41447c:	3f7fba9e bd3c6dd5 3f7fb5ea bd42b491     ...?.m<....?..B.
  41448c:	3f7fb10f bd48fb2f 3f7fac0d bd4f41af     ...?/.H....?.AO.
  41449c:	3f7fa6e3 bd55880e 3f7fa191 bd5bce4c     ...?..U....?L.[.
  4144ac:	3f7f9c18 bd621468 3f7f9678 bd685a62     ...?h.b.x..?bZh.
  4144bc:	3f7f90b1 bd6ea038 3f7f8ac2 bd74e5e9     ...?8.n....?..t.
  4144cc:	3f7f84ab bd7b2b74 3f7f7e6d bd80b86c     ...?t+{.m~.?l...
  4144dc:	3f7f7808 bd83db0a 3f7f717b bd86fd94     .x.?....{q.?....
  4144ec:	3f7f6ac7 bd8a200a 3f7f63ec bd8d426a     .j.?. ...c.?jB..
  4144fc:	3f7f5ce9 bd9064b4 3f7f55bf bd9386e7     .\.?.d...U.?....
  41450c:	3f7f4e6d bd96a905 3f7f46f4 bd99cb0a     mN.?.....F.?....
  41451c:	3f7f3f54 bd9cecf9 3f7f378d bda00ecf     T?.?.....7.?....
  41452c:	3f7f2f9d bda3308c 3f7f2787 bda65230     ./.?.0...'.?0R..
  41453c:	3f7f1f49 bda973ba 3f7f16e4 bdac952b     I..?.s.....?+...
  41454c:	3f7f0e58 bdafb680 3f7f05a4 bdb2d7bb     X..?.......?....
  41455c:	3f7efcc9 bdb5f8da 3f7ef3c7 bdb919dd     ..~?......~?....
  41456c:	3f7eea9d bdbc3ac3 3f7ee14c bdbf5b8d     ..~?.:..L.~?.[..
  41457c:	3f7ed7d4 bdc27c39 3f7ece34 bdc59cc6     ..~?9|..4.~?....
  41458c:	3f7ec46d bdc8bd36 3f7eba7f bdcbdd86     m.~?6.....~?....
  41459c:	3f7eb069 bdcefdb7 3f7ea62d bdd21dc8     i.~?....-.~?....
  4145ac:	3f7e9bc9 bdd53db9 3f7e913d bdd85d89     ..~?.=..=.~?.]..
  4145bc:	3f7e868b bddb7d37 3f7e7bb1 bdde9cc4     ..~?7}...{~?....
  4145cc:	3f7e70b0 bde1bc2e 3f7e6588 bde4db76     .p~?.....e~?v...
  4145dc:	3f7e5a38 bde7fa9a 3f7e4ec1 bdeb199a     8Z~?.....N~?....
  4145ec:	3f7e4323 bdee3876 3f7e375e bdf1572e     #C~?v8..^7~?.W..
  4145fc:	3f7e2b72 bdf475c0 3f7e1f5e bdf7942c     r+~?.u..^.~?,...
  41460c:	3f7e1324 bdfab273 3f7e06c2 bdfdd092     $.~?s.....~?....
  41461c:	3f7dfa38 be007745 3f7ded88 be02062e     8.}?Ew....}?....
  41462c:	3f7de0b1 be039502 3f7dd3b2 be0523c2     ..}?......}?.#..
  41463c:	3f7dc68c be06b26e 3f7db940 be084105     ..}?n...@.}?.A..
  41464c:	3f7dabcc be09cf86 3f7d9e30 be0b5df3     ..}?....0.}?.]..
  41465c:	3f7d906e be0cec4a 3f7d8285 be0e7a8b     n.}?J.....}?.z..
  41466c:	3f7d7474 be1008b7 3f7d663d be1196cc     tt}?....=f}?....
  41467c:	3f7d57de be1324ca 3f7d4959 be14b2b2     .W}?.$..YI}?....
  41468c:	3f7d3aac be164083 3f7d2bd8 be17ce3d     .:}?.@...+}?=...
  41469c:	3f7d1cdd be195be0 3f7d0dbc be1ae96b     ..}?.[....}?k...
  4146ac:	3f7cfe73 be1c76de 3f7cef03 be1e0438     s.|?.v....|?8...
  4146bc:	3f7cdf6c be1f917b 3f7ccfae be211ea5     l.|?{.....|?..!.
  4146cc:	3f7cbfc9 be22abb6 3f7cafbd be2438ad     ..|?.."...|?.8$.
  4146dc:	3f7c9f8a be25c58c 3f7c8f31 be275251     ..|?..%.1.|?QR'.
  4146ec:	3f7c7eb0 be28defc 3f7c6e08 be2a6b8d     .~|?..(..n|?.k*.
  4146fc:	3f7c5d3a be2bf804 3f7c4c44 be2d8461     :]|?..+.DL|?a.-.
  41470c:	3f7c3b28 be2f10a2 3f7c29e5 be309cc9     (;|?../..)|?..0.
  41471c:	3f7c187a be3228d4 3f7c06e9 be33b4c4     z.|?.(2...|?..3.
  41472c:	3f7bf531 be354098 3f7be353 be36cc50     1.{?.@5.S.{?P.6.
  41473c:	3f7bd14d be3857ec 3f7bbf20 be39e36c     M.{?.W8. .{?l.9.
  41474c:	3f7baccd be3b6ecf 3f7b9a53 be3cfa15     ..{?.n;.S.{?..<.
  41475c:	3f7b87b2 be3e853e 3f7b74ea be401049     ..{?>.>..t{?I.@.
  41476c:	3f7b61fc be419b37 3f7b4ee7 be432607     .a{?7.A..N{?.&C.
  41477c:	3f7b3bab be44b0b9 3f7b2848 be463b4d     .;{?..D.H({?M;F.
  41478c:	3f7b14be be47c5c2 3f7b010e be495018     ..{?..G...{?.PI.
  41479c:	3f7aed37 be4ada4f 3f7ad93a be4c6467     7.z?O.J.:.z?gdL.
  4147ac:	3f7ac516 be4dee60 3f7ab0cb be4f7838     ..z?`.M...z?8xO.
  4147bc:	3f7a9c59 be5101f1 3f7a87c1 be528b89     Y.z?..Q...z?..R.
  4147cc:	3f7a7302 be541501 3f7a5e1c be559e58     .sz?..T..^z?X.U.
  4147dc:	3f7a4910 be57278f 3f7a33dd be58b0a4     .Iz?.'W..3z?..X.
  4147ec:	3f7a1e84 be5a3997 3f7a0904 be5bc26a     ..z?.9Z...z?j.[.
  4147fc:	3f79f35e be5d4b1a 3f79dd91 be5ed3a8     ^.y?.K]...y?..^.
  41480c:	3f79c79d be605c13 3f79b183 be61e45c     ..y?.\`...y?\.a.
  41481c:	3f799b43 be636c83 3f7984dc be64f486     C.y?.lc...y?..d.
  41482c:	3f796e4e be667c66 3f79579a be680422     Nny?f|f..Wy?".h.
  41483c:	3f7940c0 be698bba 3f7929bf be6b132f     .@y?..i..)y?/.k.
  41484c:	3f791298 be6c9a7f 3f78fb4a be6e21ab     ..y?..l.J.x?.!n.
  41485c:	3f78e3d6 be6fa8b2 3f78cc3b be712f94     ..x?..o.;.x?./q.
  41486c:	3f78b47b be72b651 3f789c93 be743ce8     {.x?Q.r...x?.<t.
  41487c:	3f788486 be75c35a 3f786c52 be7749a6     ..x?Z.u.Rlx?.Iw.
  41488c:	3f7853f8 be78cfcc 3f783b77 be7a55cb     .Sx?..x.w;x?.Uz.
  41489c:	3f7822d1 be7bdba4 3f780a04 be7d6156     ."x?..{...x?Va}.
  4148ac:	3f77f110 be7ee6e1 3f77d7f7 be803622     ..w?..~...w?"6..
  4148bc:	3f77beb7 be80f8c0 3f77a551 be81bb4a     ..w?....Q.w?J...
  4148cc:	3f778bc5 be827dc0 3f777213 be834022     ..w?.}...rw?"@..
  4148dc:	3f77583a be840270 3f773e3c be84c4aa     :Xw?p...<>w?....
  4148ec:	3f772417 be8586ce 3f7709cc be8648df     .$w?......w?.H..
  4148fc:	3f76ef5b be870ada 3f76d4c4 be87ccc1     [.v?......v?....
  41490c:	3f76ba07 be888e93 3f769f24 be895050     ..v?....$.v?PP..
  41491c:	3f76841b be8a11f8 3f7668ec be8ad38a     ..v?.....hv?....
  41492c:	3f764d97 be8b9507 3f76321b be8c566e     .Mv?.....2v?nV..
  41493c:	3f76167a be8d17c0 3f75fab3 be8dd8fc     z.v?......u?....
  41494c:	3f75dec6 be8e9a22 3f75c2b3 be8f5b32     ..u?".....u?2[..
  41495c:	3f75a67b be901c2c 3f758a1c be90dd10     {.u?,.....u?....
  41496c:	3f756d97 be919ddd 3f7550ed be925e94     .mu?.....Pu?.^..
  41497c:	3f75341d be931f35 3f751727 be93dfbf     .4u?5...'.u?....
  41498c:	3f74fa0b be94a031 3f74dcc9 be95608d     ..t?1.....t?.`..
  41499c:	3f74bf62 be9620d2 3f74a1d5 be96e100     b.t?. ....t?....
  4149ac:	3f748422 be97a117 3f746649 be986116     ".t?....Ift?.a..
  4149bc:	3f74484b be9920fe 3f742a27 be99e0ce     KHt?. ..'*t?....
  4149cc:	3f740bdd be9aa086 3f73ed6e be9b6027     ..t?....n.s?'`..
  4149dc:	3f73ced9 be9c1faf 3f73b01f be9cdf20     ..s?......s? ...
  4149ec:	3f73913f be9d9e78 3f737239 be9e5db8     ?.s?x...9rs?.]..
  4149fc:	3f73530e be9f1cdf 3f7333be be9fdbee     .Ss?.....3s?....
  414a0c:	3f731447 bea09ae5 3f72f4ac bea159c2     G.s?......r?.Y..
  414a1c:	3f72d4eb bea21887 3f72b504 bea2d733     ..r?......r?3...
  414a2c:	3f7294f8 bea395c5 3f7274c7 bea4543f     ..r?.....tr??T..
  414a3c:	3f725470 bea5129f 3f7233f4 bea5d0e5     pTr?.....3r?....
  414a4c:	3f721352 bea68f12 3f71f28c bea74d25     R.r?......q?%M..
  414a5c:	3f71d19f bea80b1f 3f71b08e bea8c8fe     ..q?......q?....
  414a6c:	3f718f57 bea986c4 3f716dfb beaa446f     W.q?.....mq?oD..
  414a7c:	3f714c7a beab0201 3f712ad4 beabbf77     zLq?.....*q?w...
  414a8c:	3f710908 beac7cd4 3f70e717 bead3a15     ..q?.|....p?.:..
  414a9c:	3f70c502 beadf73c 3f70a2c6 beaeb449     ..p?<.....p?I...
  414aac:	3f708066 beaf713a 3f705de1 beb02e10     f.p?:q...]p?....
  414abc:	3f703b37 beb0eacb 3f701867 beb1a76b     7;p?....g.p?k...
  414acc:	3f6ff573 beb263ef 3f6fd25a beb32058     s.o?.c..Z.o?X ..
  414adc:	3f6faf1b beb3dca5 3f6f8bb8 beb498d6     ..o?......o?....
  414aec:	3f6f6830 beb554ec 3f6f4483 beb610e6     0ho?.T...Do?....
  414afc:	3f6f20b0 beb6ccc3 3f6efcba beb78884     . o?......n?....
  414b0c:	3f6ed89e beb8442a 3f6eb45d beb8ffb2     ..n?*D..].n?....
  414b1c:	3f6e8ff8 beb9bb1e 3f6e6b6d beba766e     ..n?....mkn?nv..
  414b2c:	3f6e46be bebb31a0 3f6e21eb bebbecb6     .Fn?.1...!n?....
  414b3c:	3f6dfcf2 bebca7af 3f6dd7d5 bebd628b     ..m?......m?.b..
  414b4c:	3f6db293 bebe1d4a 3f6d8d2d bebed7eb     ..m?J...-.m?....
  414b5c:	3f6d67a1 bebf926f 3f6d41f2 bec04cd5     .gm?o....Am?.L..
  414b6c:	3f6d1c1d bec1071e 3f6cf624 bec1c148     ..m?....$.l?H...
  414b7c:	3f6cd007 bec27b55 3f6ca9c5 bec33544     ..l?U{....l?D5..
  414b8c:	3f6c835e bec3ef15 3f6c5cd4 bec4a8c8     ^.l?.....\l?....
  414b9c:	3f6c3624 bec5625c 3f6c0f50 bec61bd2     $6l?\b..P.l?....
  414bac:	3f6be858 bec6d529 3f6bc13b bec78e62     X.k?)...;.k?b...
  414bbc:	3f6b99fb bec8477c 3f6b7295 bec90077     ..k?|G...rk?w...
  414bcc:	3f6b4b0c bec9b953 3f6b235e beca7210     .Kk?S...^#k?.r..
  414bdc:	3f6afb8c becb2aae 3f6ad395 becbe32c     ..j?.*....j?,...
  414bec:	3f6aab7b becc9b8b 3f6a833c becd53ca     {.j?....<.j?.S..
  414bfc:	3f6a5ad9 bece0bea 3f6a3252 becec3ea     .Zj?....R2j?....
  414c0c:	3f6a09a7 becf7bca 3f69e0d7 bed0338a     ..j?.{....i?.3..
  414c1c:	3f69b7e4 bed0eb2a 3f698ecc bed1a2aa     ..i?*.....i?....
  414c2c:	3f696591 bed25a09 3f693c32 bed31148     .ei?.Z..2<i?H...
  414c3c:	3f6912ae bed3c867 3f68e907 bed47f64     ..i?g.....h?d...
  414c4c:	3f68bf3c bed53641 3f68954c bed5ecfd     <.h?A6..L.h?....
  414c5c:	3f686b39 bed6a399 3f684103 bed75a13     9kh?.....Ah?.Z..
  414c6c:	3f6816a8 bed8106b 3f67ec2a bed8c6a3     ..h?k...*.g?....
  414c7c:	3f67c187 bed97cb9 3f6796c1 beda32ad     ..g?.|....g?.2..
  414c8c:	3f676bd8 bedae880 3f6740ca bedb9e31     .kg?.....@g?1...
  414c9c:	3f671599 bedc53c1 3f66ea45 bedd092e     ..g?.S..E.f?....
  414cac:	3f66becc beddbe79 3f669330 bede73a2     ..f?y...0.f?.s..
  414cbc:	3f666771 bedf28a9 3f663b8e bedfdd8d     qgf?.(...;f?....
  414ccc:	3f660f88 bee0924f 3f65e35e bee146ee     ..f?O...^.e?.F..
  414cdc:	3f65b710 bee1fb6a 3f658aa0 bee2afc4     ..e?j.....e?....
  414cec:	3f655e0b bee363fa 3f653154 bee4180e     .^e?.c..T1e?....
  414cfc:	3f650479 bee4cbfe 3f64d77b bee57fcb     y.e?....{.d?....
  414d0c:	3f64aa59 bee63375 3f647d14 bee6e6fb     Y.d?u3...}d?....
  414d1c:	3f644fac bee79a5d 3f642221 bee84d9c     .Od?]...!"d?.M..
  414d2c:	3f63f473 bee900b7 3f63c6a1 bee9b3ae     s.c?......c?....
  414d3c:	3f6398ac beea6681 3f636a95 beeb1930     ..c?.f...jc?0...
  414d4c:	3f633c5a beebcbbb 3f630dfc beec7e21     Z<c?......c?!~..
  414d5c:	3f62df7b beed3063 3f62b0d7 beede280     {.b?c0....b?....
  414d6c:	3f628210 beee9479 3f625326 beef464c     ..b?y...&Sb?LF..
  414d7c:	3f62241a beeff7fb 3f61f4ea bef0a985     .$b?......a?....
  414d8c:	3f61c598 bef15aea 3f619622 bef20c29     ..a?.Z..".a?)...
  414d9c:	3f61668a bef2bd43 3f6136d0 bef36e38     .fa?C....6a?8n..
  414dac:	3f6106f2 bef41f07 3f60d6f2 bef4cfb1     ..a?......`?....
  414dbc:	3f60a6cf bef58035 3f607689 bef63093     ..`?5....v`?.0..
  414dcc:	3f604621 bef6e0cb 3f601596 bef790dc     !F`?......`?....
  414ddc:	3f5fe4e9 bef840c8 3f5fb419 bef8f08e     .._?.@...._?....
  414dec:	3f5f8327 bef9a02d 3f5f5212 befa4fa5     '._?-....R_?.O..
  414dfc:	3f5f20db befafef7 3f5eef81 befbae22     . _?......^?"...
  414e0c:	3f5ebe05 befc5d27 3f5e8c67 befd0c04     ..^?']..g.^?....
  414e1c:	3f5e5aa6 befdbabb 3f5e28c3 befe694a     .Z^?.....(^?Ji..
  414e2c:	3f5df6be beff17b2 3f5dc497 beffc5f3     ..]?......]?....
  414e3c:	3f5d924d bf003a06 3f5d5fe1 bf0090ff     M.]?.:..._]?....
  414e4c:	3f5d2d53 bf00e7e4 3f5cfaa3 bf013eb5     S-]?......\?.>..
  414e5c:	3f5cc7d1 bf019573 3f5c94dd bf01ec1c     ..\?s.....\?....
  414e6c:	3f5c61c7 bf0242b1 3f5c2e8e bf029932     .a\?.B....\?2...
  414e7c:	3f5bfb34 bf02ef9f 3f5bc7b8 bf0345f8     4.[?......[?.E..
  414e8c:	3f5b941a bf039c3d 3f5b605a bf03f26d     ..[?=...Z`[?m...
  414e9c:	3f5b2c79 bf044889 3f5af875 bf049e91     y,[?.H..u.Z?....
  414eac:	3f5ac450 bf04f484 3f5a9009 bf054a62     P.Z?......Z?bJ..
  414ebc:	3f5a5ba0 bf05a02c 3f5a2716 bf05f5e2     .[Z?,....'Z?....
  414ecc:	3f59f26a bf064b82 3f59bd9c bf06a10e     j.Y?.K....Y?....
  414edc:	3f5988ad bf06f686 3f59539c bf074be8     ..Y?.....SY?.K..
  414eec:	3f591e6a bf07a136 3f58e917 bf07f66f     j.Y?6.....X?o...
  414efc:	3f58b3a1 bf084b92 3f587e0b bf08a0a1     ..X?.K...~X?....
  414f0c:	3f584853 bf08f59b 3f581279 bf094a7f     SHX?....y.X?.J..
  414f1c:	3f57dc7f bf099f4e 3f57a663 bf09f409     ..W?N...c.W?....
  414f2c:	3f577026 bf0a48ad 3f5739c7 bf0a9d3d     &pW?.H...9W?=...
  414f3c:	3f570348 bf0af1b7 3f56cca7 bf0b461c     H.W?......V?.F..
  414f4c:	3f5695e5 bf0b9a6b 3f565f02 bf0beea5     ..V?k...._V?....
  414f5c:	3f5627fe bf0c42c9 3f55f0d9 bf0c96d7     .'V?.B....U?....
  414f6c:	3f55b993 bf0cead0 3f55822c bf0d3eb3     ..U?....,.U?.>..
  414f7c:	3f554aa4 bf0d9281 3f5512fb bf0de638     .JU?......U?8...
  414f8c:	3f54db31 bf0e39da 3f54a347 bf0e8d65     1.T?.9..G.T?e...
  414f9c:	3f546b3b bf0ee0db 3f54330f bf0f343b     ;kT?.....3T?;4..
  414fac:	3f53fac3 bf0f8784 3f53c255 bf0fdab8     ..S?....U.S?....
  414fbc:	3f5389c7 bf102dd5 3f535118 bf1080dc     ..S?.-...QS?....
  414fcc:	3f531849 bf10d3cd 3f52df59 bf1126a7     I.S?....Y.R?.&..
  414fdc:	3f52a649 bf11796b 3f526d18 bf11cc19     I.R?ky...mR?....
  414fec:	3f5233c6 bf121eb0 3f51fa54 bf127130     .3R?....T.Q?0q..
  414ffc:	3f51c0c2 bf12c39a 3f518710 bf1315ee     ..Q?......Q?....
  41500c:	3f514d3d bf13682a 3f51134a bf13ba50     =MQ?*h..J.Q?P...
  41501c:	3f50d937 bf140c5f 3f509f03 bf145e58     7.P?_.....P?X^..
  41502c:	3f5064af bf14b039 3f502a3b bf150204     .dP?9...;*P?....
  41503c:	3f4fefa8 bf1553b7 3f4fb4f4 bf15a554     ..O?.S....O?T...
  41504c:	3f4f7a1f bf15f6d9 3f4f3f2b bf164847     .zO?....+?O?GH..
  41505c:	3f4f0417 bf16999f 3f4ec8e4 bf16eadf     ..O?......N?....
  41506c:	3f4e8d90 bf173c07 3f4e521c bf178d18     ..N?.<...RN?....
  41507c:	3f4e1689 bf17de12 3f4ddad5 bf182ef5     ..N?......M?....
  41508c:	3f4d9f02 bf187fc0 3f4d6310 bf18d073     ..M?.....cM?s...
  41509c:	3f4d26fd bf19210f 3f4ceacb bf197194     .&M?.!....L?.q..
  4150ac:	3f4cae79 bf19c200 3f4c7208 bf1a1255     y.L?.....rL?U...
  4150bc:	3f4c3578 bf1a6293 3f4bf8c7 bf1ab2b8     x5L?.b....K?....
  4150cc:	3f4bbbf8 bf1b02c6 3f4b7f09 bf1b52bb     ..K?......K?.R..
  4150dc:	3f4b41fa bf1ba299 3f4b04cc bf1bf25f     .AK?......K?_...
  4150ec:	3f4ac77f bf1c420c 3f4a8a13 bf1c91a2     ..J?.B....J?....
  4150fc:	3f4a4c87 bf1ce11f 3f4a0edc bf1d3084     .LJ?......J?.0..
  41510c:	3f49d112 bf1d7fd1 3f499329 bf1dcf06     ..I?....).I?....
  41511c:	3f495521 bf1e1e22 3f4916fa bf1e6d26     !UI?".....I?&m..
  41512c:	3f48d8b3 bf1ebc12 3f489a4e bf1f0ae5     ..H?....N.H?....
  41513c:	3f485bca bf1f599f 3f481d27 bf1fa841     .[H?.Y..'.H?A...
  41514c:	3f47de65 bf1ff6cb 3f479f84 bf20453b     e.G?......G?;E .
  41515c:	3f476085 bf209393 3f472167 bf20e1d2     .`G?.. .g!G?.. .
  41516c:	3f46e22a bf212ff9 3f46a2ce bf217e06     *.F?./!...F?.~!.
  41517c:	3f466354 bf21cbfb 3f4623bb bf2219d7     TcF?..!..#F?..".
  41518c:	3f45e403 bf226799 3f45a42d bf22b543     ..E?.g".-.E?C.".
  41519c:	3f456439 bf2302d3 3f452426 bf23504b     9dE?..#.&$E?KP#.
  4151ac:	3f44e3f5 bf239da9 3f44a3a5 bf23eaee     ..D?..#...D?..#.
  4151bc:	3f446337 bf24381a 3f4422ab bf24852c     7cD?.8$.."D?,.$.
  4151cc:	3f43e200 bf24d225 3f43a138 bf251f04     ..C?%.$.8.C?..%.
  4151dc:	3f436051 bf256bcb 3f431f4c bf25b877     Q`C?.k%.L.C?w.%.
  4151ec:	3f42de29 bf26050a 3f429ce8 bf265184     ).B?..&...B?.Q&.
  4151fc:	3f425b89 bf269de3 3f421a0b bf26ea2a     .[B?..&...B?*.&.
  41520c:	3f41d870 bf273656 3f4196b7 bf278268     p.A?V6'...A?h.'.
  41521c:	3f4154e1 bf27ce61 3f4112ec bf281a40     .TA?a.'...A?@.(.
  41522c:	3f40d0da bf286605 3f408ea9 bf28b1b0     ..@?.f(...@?..(.
  41523c:	3f404c5c bf28fd41 3f4009f0 bf2948b8     \L@?A.(...@?.H).
  41524c:	3f3fc767 bf299415 3f3f84c0 bf29df57     g.??..)...??W.).
  41525c:	3f3f41fc bf2a2a80 3f3eff1b bf2a758e     .A??.**...>?.u*.
  41526c:	3f3ebc1b bf2ac082 3f3e78ff bf2b0b5b     ..>?..*..x>?[.+.
  41527c:	3f3e35c5 bf2b561b 3f3df26e bf2ba0bf     .5>?.V+.n.=?..+.
  41528c:	3f3daef9 bf2beb4a 3f3d6b67 bf2c35b9     ..=?J.+.gk=?.5,.
  41529c:	3f3d27b8 bf2c800f 3f3ce3ec bf2cca49     .'=?..,...<?I.,.
  4152ac:	3f3ca003 bf2d1469 3f3c5bfc bf2d5e6f     ..<?i.-..[<?o^-.
  4152bc:	3f3c17d9 bf2da859 3f3bd398 bf2df229     ..<?Y.-...;?).-.
  4152cc:	3f3b8f3b bf2e3bde 3f3b4ac1 bf2e8578     ;.;?.;...J;?x...
  4152dc:	3f3b0629 bf2ecef7 3f3ac175 bf2f185b     ).;?....u.:?[./.
  4152ec:	3f3a7ca4 bf2f61a5 3f3a37b7 bf2faad3     .|:?.a/..7:?../.
  4152fc:	3f39f2ac bf2ff3e6 3f39ad85 bf303cde     ..9?../...9?.<0.
  41530c:	3f396842 bf3085bb 3f3922e1 bf30ce7c     Bh9?..0.."9?|.0.
  41531c:	3f38dd65 bf311722 3f3897cb bf315fad     e.8?".1...8?._1.
  41532c:	3f385216 bf31a81d 3f380c43 bf31f071     .R8?..1.C.8?q.1.
  41533c:	3f37c655 bf3238aa 3f37804a bf3280c7     U.7?.82.J.7?..2.
  41534c:	3f373a23 bf32c8c9 3f36f3df bf3310af     #:7?..2...6?..3.
  41535c:	3f36ad7f bf33587a 3f366704 bf33a029     ..6?zX3..g6?).3.
  41536c:	3f36206c bf33e7bc 3f35d9b8 bf342f34     l 6?..3...5?4/4.
  41537c:	3f3592e7 bf34768f 3f354bfb bf34bdcf     ..5?.v4..K5?..4.
  41538c:	3f3504f3 bf3504f3 3f34bdcf bf354bfb     ..5?..5...4?.K5.
  41539c:	3f34768f bf3592e7 3f342f34 bf35d9b8     .v4?..5.4/4?..5.
  4153ac:	3f33e7bc bf36206c 3f33a029 bf366704     ..3?l 6.).3?.g6.
  4153bc:	3f33587a bf36ad7f 3f3310af bf36f3df     zX3?..6...3?..6.
  4153cc:	3f32c8c9 bf373a23 3f3280c7 bf37804a     ..2?#:7...2?J.7.
  4153dc:	3f3238aa bf37c655 3f31f071 bf380c43     .82?U.7.q.1?C.8.
  4153ec:	3f31a81d bf385216 3f315fad bf3897cb     ..1?.R8.._1?..8.
  4153fc:	3f311722 bf38dd65 3f30ce7c bf3922e1     ".1?e.8.|.0?."9.
  41540c:	3f3085bb bf396842 3f303cde bf39ad85     ..0?Bh9..<0?..9.
  41541c:	3f2ff3e6 bf39f2ac 3f2faad3 bf3a37b7     ../?..9.../?.7:.
  41542c:	3f2f61a5 bf3a7ca4 3f2f185b bf3ac175     .a/?.|:.[./?u.:.
  41543c:	3f2ecef7 bf3b0629 3f2e8578 bf3b4ac1     ...?).;.x..?.J;.
  41544c:	3f2e3bde bf3b8f3b 3f2df229 bf3bd398     .;.?;.;.).-?..;.
  41545c:	3f2da859 bf3c17d9 3f2d5e6f bf3c5bfc     Y.-?..<.o^-?.[<.
  41546c:	3f2d1469 bf3ca003 3f2cca49 bf3ce3ec     i.-?..<.I.,?..<.
  41547c:	3f2c800f bf3d27b8 3f2c35b9 bf3d6b67     ..,?.'=..5,?gk=.
  41548c:	3f2beb4a bf3daef9 3f2ba0bf bf3df26e     J.+?..=...+?n.=.
  41549c:	3f2b561b bf3e35c5 3f2b0b5b bf3e78ff     .V+?.5>.[.+?.x>.
  4154ac:	3f2ac082 bf3ebc1b 3f2a758e bf3eff1b     ..*?..>..u*?..>.
  4154bc:	3f2a2a80 bf3f41fc 3f29df57 bf3f84c0     .**?.A?.W.)?..?.
  4154cc:	3f299415 bf3fc767 3f2948b8 bf4009f0     ..)?g.?..H)?..@.
  4154dc:	3f28fd41 bf404c5c 3f28b1b0 bf408ea9     A.(?\L@...(?..@.
  4154ec:	3f286605 bf40d0da 3f281a40 bf4112ec     .f(?..@.@.(?..A.
  4154fc:	3f27ce61 bf4154e1 3f278268 bf4196b7     a.'?.TA.h.'?..A.
  41550c:	3f273656 bf41d870 3f26ea2a bf421a0b     V6'?p.A.*.&?..B.
  41551c:	3f269de3 bf425b89 3f265184 bf429ce8     ..&?.[B..Q&?..B.
  41552c:	3f26050a bf42de29 3f25b877 bf431f4c     ..&?).B.w.%?L.C.
  41553c:	3f256bcb bf436051 3f251f04 bf43a138     .k%?Q`C...%?8.C.
  41554c:	3f24d225 bf43e200 3f24852c bf4422ab     %.$?..C.,.$?."D.
  41555c:	3f24381a bf446337 3f23eaee bf44a3a5     .8$?7cD...#?..D.
  41556c:	3f239da9 bf44e3f5 3f23504b bf452426     ..#?..D.KP#?&$E.
  41557c:	3f2302d3 bf456439 3f22b543 bf45a42d     ..#?9dE.C."?-.E.
  41558c:	3f226799 bf45e403 3f2219d7 bf4623bb     .g"?..E..."?.#F.
  41559c:	3f21cbfb bf466354 3f217e06 bf46a2ce     ..!?TcF..~!?..F.
  4155ac:	3f212ff9 bf46e22a 3f20e1d2 bf472167     ./!?*.F... ?g!G.
  4155bc:	3f209393 bf476085 3f20453b bf479f84     .. ?.`G.;E ?..G.
  4155cc:	3f1ff6cb bf47de65 3f1fa841 bf481d27     ...?e.G.A..?'.H.
  4155dc:	3f1f599f bf485bca 3f1f0ae5 bf489a4e     .Y.?.[H....?N.H.
  4155ec:	3f1ebc12 bf48d8b3 3f1e6d26 bf4916fa     ...?..H.&m.?..I.
  4155fc:	3f1e1e22 bf495521 3f1dcf06 bf499329     "..?!UI....?).I.
  41560c:	3f1d7fd1 bf49d112 3f1d3084 bf4a0edc     ...?..I..0.?..J.
  41561c:	3f1ce11f bf4a4c87 3f1c91a2 bf4a8a13     ...?.LJ....?..J.
  41562c:	3f1c420c bf4ac77f 3f1bf25f bf4b04cc     .B.?..J._..?..K.
  41563c:	3f1ba299 bf4b41fa 3f1b52bb bf4b7f09     ...?.AK..R.?..K.
  41564c:	3f1b02c6 bf4bbbf8 3f1ab2b8 bf4bf8c7     ...?..K....?..K.
  41565c:	3f1a6293 bf4c3578 3f1a1255 bf4c7208     .b.?x5L.U..?.rL.
  41566c:	3f19c200 bf4cae79 3f197194 bf4ceacb     ...?y.L..q.?..L.
  41567c:	3f19210f bf4d26fd 3f18d073 bf4d6310     .!.?.&M.s..?.cM.
  41568c:	3f187fc0 bf4d9f02 3f182ef5 bf4ddad5     ...?..M....?..M.
  41569c:	3f17de12 bf4e1689 3f178d18 bf4e521c     ...?..N....?.RN.
  4156ac:	3f173c07 bf4e8d90 3f16eadf bf4ec8e4     .<.?..N....?..N.
  4156bc:	3f16999f bf4f0417 3f164847 bf4f3f2b     ...?..O.GH.?+?O.
  4156cc:	3f15f6d9 bf4f7a1f 3f15a554 bf4fb4f4     ...?.zO.T..?..O.
  4156dc:	3f1553b7 bf4fefa8 3f150204 bf502a3b     .S.?..O....?;*P.
  4156ec:	3f14b039 bf5064af 3f145e58 bf509f03     9..?.dP.X^.?..P.
  4156fc:	3f140c5f bf50d937 3f13ba50 bf51134a     _..?7.P.P..?J.Q.
  41570c:	3f13682a bf514d3d 3f1315ee bf518710     *h.?=MQ....?..Q.
  41571c:	3f12c39a bf51c0c2 3f127130 bf51fa54     ...?..Q.0q.?T.Q.
  41572c:	3f121eb0 bf5233c6 3f11cc19 bf526d18     ...?.3R....?.mR.
  41573c:	3f11796b bf52a649 3f1126a7 bf52df59     ky.?I.R..&.?Y.R.
  41574c:	3f10d3cd bf531849 3f1080dc bf535118     ...?I.S....?.QS.
  41575c:	3f102dd5 bf5389c7 3f0fdab8 bf53c255     .-.?..S....?U.S.
  41576c:	3f0f8784 bf53fac3 3f0f343b bf54330f     ...?..S.;4.?.3T.
  41577c:	3f0ee0db bf546b3b 3f0e8d65 bf54a347     ...?;kT.e..?G.T.
  41578c:	3f0e39da bf54db31 3f0de638 bf5512fb     .9.?1.T.8..?..U.
  41579c:	3f0d9281 bf554aa4 3f0d3eb3 bf55822c     ...?.JU..>.?,.U.
  4157ac:	3f0cead0 bf55b993 3f0c96d7 bf55f0d9     ...?..U....?..U.
  4157bc:	3f0c42c9 bf5627fe 3f0beea5 bf565f02     .B.?.'V....?._V.
  4157cc:	3f0b9a6b bf5695e5 3f0b461c bf56cca7     k..?..V..F.?..V.
  4157dc:	3f0af1b7 bf570348 3f0a9d3d bf5739c7     ...?H.W.=..?.9W.
  4157ec:	3f0a48ad bf577026 3f09f409 bf57a663     .H.?&pW....?c.W.
  4157fc:	3f099f4e bf57dc7f 3f094a7f bf581279     N..?..W..J.?y.X.
  41580c:	3f08f59b bf584853 3f08a0a1 bf587e0b     ...?SHX....?.~X.
  41581c:	3f084b92 bf58b3a1 3f07f66f bf58e917     .K.?..X.o..?..X.
  41582c:	3f07a136 bf591e6a 3f074be8 bf59539c     6..?j.Y..K.?.SY.
  41583c:	3f06f686 bf5988ad 3f06a10e bf59bd9c     ...?..Y....?..Y.
  41584c:	3f064b82 bf59f26a 3f05f5e2 bf5a2716     .K.?j.Y....?.'Z.
  41585c:	3f05a02c bf5a5ba0 3f054a62 bf5a9009     ,..?.[Z.bJ.?..Z.
  41586c:	3f04f484 bf5ac450 3f049e91 bf5af875     ...?P.Z....?u.Z.
  41587c:	3f044889 bf5b2c79 3f03f26d bf5b605a     .H.?y,[.m..?Z`[.
  41588c:	3f039c3d bf5b941a 3f0345f8 bf5bc7b8     =..?..[..E.?..[.
  41589c:	3f02ef9f bf5bfb34 3f029932 bf5c2e8e     ...?4.[.2..?..\.
  4158ac:	3f0242b1 bf5c61c7 3f01ec1c bf5c94dd     .B.?.a\....?..\.
  4158bc:	3f019573 bf5cc7d1 3f013eb5 bf5cfaa3     s..?..\..>.?..\.
  4158cc:	3f00e7e4 bf5d2d53 3f0090ff bf5d5fe1     ...?S-]....?._].
  4158dc:	3f003a06 bf5d924d 3effc5f3 bf5dc497     .:.?M.]....>..].
  4158ec:	3eff17b2 bf5df6be 3efe694a bf5e28c3     ...>..].Ji.>.(^.
  4158fc:	3efdbabb bf5e5aa6 3efd0c04 bf5e8c67     ...>.Z^....>g.^.
  41590c:	3efc5d27 bf5ebe05 3efbae22 bf5eef81     '].>..^."..>..^.
  41591c:	3efafef7 bf5f20db 3efa4fa5 bf5f5212     ...>. _..O.>.R_.
  41592c:	3ef9a02d bf5f8327 3ef8f08e bf5fb419     -..>'._....>.._.
  41593c:	3ef840c8 bf5fe4e9 3ef790dc bf601596     .@.>.._....>..`.
  41594c:	3ef6e0cb bf604621 3ef63093 bf607689     ...>!F`..0.>.v`.
  41595c:	3ef58035 bf60a6cf 3ef4cfb1 bf60d6f2     5..>..`....>..`.
  41596c:	3ef41f07 bf6106f2 3ef36e38 bf6136d0     ...>..a.8n.>.6a.
  41597c:	3ef2bd43 bf61668a 3ef20c29 bf619622     C..>.fa.)..>".a.
  41598c:	3ef15aea bf61c598 3ef0a985 bf61f4ea     .Z.>..a....>..a.
  41599c:	3eeff7fb bf62241a 3eef464c bf625326     ...>.$b.LF.>&Sb.
  4159ac:	3eee9479 bf628210 3eede280 bf62b0d7     y..>..b....>..b.
  4159bc:	3eed3063 bf62df7b 3eec7e21 bf630dfc     c0.>{.b.!~.>..c.
  4159cc:	3eebcbbb bf633c5a 3eeb1930 bf636a95     ...>Z<c.0..>.jc.
  4159dc:	3eea6681 bf6398ac 3ee9b3ae bf63c6a1     .f.>..c....>..c.
  4159ec:	3ee900b7 bf63f473 3ee84d9c bf642221     ...>s.c..M.>!"d.
  4159fc:	3ee79a5d bf644fac 3ee6e6fb bf647d14     ]..>.Od....>.}d.
  415a0c:	3ee63375 bf64aa59 3ee57fcb bf64d77b     u3.>Y.d....>{.d.
  415a1c:	3ee4cbfe bf650479 3ee4180e bf653154     ...>y.e....>T1e.
  415a2c:	3ee363fa bf655e0b 3ee2afc4 bf658aa0     .c.>.^e....>..e.
  415a3c:	3ee1fb6a bf65b710 3ee146ee bf65e35e     j..>..e..F.>^.e.
  415a4c:	3ee0924f bf660f88 3edfdd8d bf663b8e     O..>..f....>.;f.
  415a5c:	3edf28a9 bf666771 3ede73a2 bf669330     .(.>qgf..s.>0.f.
  415a6c:	3eddbe79 bf66becc 3edd092e bf66ea45     y..>..f....>E.f.
  415a7c:	3edc53c1 bf671599 3edb9e31 bf6740ca     .S.>..g.1..>.@g.
  415a8c:	3edae880 bf676bd8 3eda32ad bf6796c1     ...>.kg..2.>..g.
  415a9c:	3ed97cb9 bf67c187 3ed8c6a3 bf67ec2a     .|.>..g....>*.g.
  415aac:	3ed8106b bf6816a8 3ed75a13 bf684103     k..>..h..Z.>.Ah.
  415abc:	3ed6a399 bf686b39 3ed5ecfd bf68954c     ...>9kh....>L.h.
  415acc:	3ed53641 bf68bf3c 3ed47f64 bf68e907     A6.><.h.d..>..h.
  415adc:	3ed3c867 bf6912ae 3ed31148 bf693c32     g..>..i.H..>2<i.
  415aec:	3ed25a09 bf696591 3ed1a2aa bf698ecc     .Z.>.ei....>..i.
  415afc:	3ed0eb2a bf69b7e4 3ed0338a bf69e0d7     *..>..i..3.>..i.
  415b0c:	3ecf7bca bf6a09a7 3ecec3ea bf6a3252     .{.>..j....>R2j.
  415b1c:	3ece0bea bf6a5ad9 3ecd53ca bf6a833c     ...>.Zj..S.><.j.
  415b2c:	3ecc9b8b bf6aab7b 3ecbe32c bf6ad395     ...>{.j.,..>..j.
  415b3c:	3ecb2aae bf6afb8c 3eca7210 bf6b235e     .*.>..j..r.>^#k.
  415b4c:	3ec9b953 bf6b4b0c 3ec90077 bf6b7295     S..>.Kk.w..>.rk.
  415b5c:	3ec8477c bf6b99fb 3ec78e62 bf6bc13b     |G.>..k.b..>;.k.
  415b6c:	3ec6d529 bf6be858 3ec61bd2 bf6c0f50     )..>X.k....>P.l.
  415b7c:	3ec5625c bf6c3624 3ec4a8c8 bf6c5cd4     \b.>$6l....>.\l.
  415b8c:	3ec3ef15 bf6c835e 3ec33544 bf6ca9c5     ...>^.l.D5.>..l.
  415b9c:	3ec27b55 bf6cd007 3ec1c148 bf6cf624     U{.>..l.H..>$.l.
  415bac:	3ec1071e bf6d1c1d 3ec04cd5 bf6d41f2     ...>..m..L.>.Am.
  415bbc:	3ebf926f bf6d67a1 3ebed7eb bf6d8d2d     o..>.gm....>-.m.
  415bcc:	3ebe1d4a bf6db293 3ebd628b bf6dd7d5     J..>..m..b.>..m.
  415bdc:	3ebca7af bf6dfcf2 3ebbecb6 bf6e21eb     ...>..m....>.!n.
  415bec:	3ebb31a0 bf6e46be 3eba766e bf6e6b6d     .1.>.Fn.nv.>mkn.
  415bfc:	3eb9bb1e bf6e8ff8 3eb8ffb2 bf6eb45d     ...>..n....>].n.
  415c0c:	3eb8442a bf6ed89e 3eb78884 bf6efcba     *D.>..n....>..n.
  415c1c:	3eb6ccc3 bf6f20b0 3eb610e6 bf6f4483     ...>. o....>.Do.
  415c2c:	3eb554ec bf6f6830 3eb498d6 bf6f8bb8     .T.>0ho....>..o.
  415c3c:	3eb3dca5 bf6faf1b 3eb32058 bf6fd25a     ...>..o.X .>Z.o.
  415c4c:	3eb263ef bf6ff573 3eb1a76b bf701867     .c.>s.o.k..>g.p.
  415c5c:	3eb0eacb bf703b37 3eb02e10 bf705de1     ...>7;p....>.]p.
  415c6c:	3eaf713a bf708066 3eaeb449 bf70a2c6     :q.>f.p.I..>..p.
  415c7c:	3eadf73c bf70c502 3ead3a15 bf70e717     <..>..p..:.>..p.
  415c8c:	3eac7cd4 bf710908 3eabbf77 bf712ad4     .|.>..q.w..>.*q.
  415c9c:	3eab0201 bf714c7a 3eaa446f bf716dfb     ...>zLq.oD.>.mq.
  415cac:	3ea986c4 bf718f57 3ea8c8fe bf71b08e     ...>W.q....>..q.
  415cbc:	3ea80b1f bf71d19f 3ea74d25 bf71f28c     ...>..q.%M.>..q.
  415ccc:	3ea68f12 bf721352 3ea5d0e5 bf7233f4     ...>R.r....>.3r.
  415cdc:	3ea5129f bf725470 3ea4543f bf7274c7     ...>pTr.?T.>.tr.
  415cec:	3ea395c5 bf7294f8 3ea2d733 bf72b504     ...>..r.3..>..r.
  415cfc:	3ea21887 bf72d4eb 3ea159c2 bf72f4ac     ...>..r..Y.>..r.
  415d0c:	3ea09ae5 bf731447 3e9fdbee bf7333be     ...>G.s....>.3s.
  415d1c:	3e9f1cdf bf73530e 3e9e5db8 bf737239     ...>.Ss..].>9rs.
  415d2c:	3e9d9e78 bf73913f 3e9cdf20 bf73b01f     x..>?.s. ..>..s.
  415d3c:	3e9c1faf bf73ced9 3e9b6027 bf73ed6e     ...>..s.'`.>n.s.
  415d4c:	3e9aa086 bf740bdd 3e99e0ce bf742a27     ...>..t....>'*t.
  415d5c:	3e9920fe bf74484b 3e986116 bf746649     . .>KHt..a.>Ift.
  415d6c:	3e97a117 bf748422 3e96e100 bf74a1d5     ...>".t....>..t.
  415d7c:	3e9620d2 bf74bf62 3e95608d bf74dcc9     . .>b.t..`.>..t.
  415d8c:	3e94a031 bf74fa0b 3e93dfbf bf751727     1..>..t....>'.u.
  415d9c:	3e931f35 bf75341d 3e925e94 bf7550ed     5..>.4u..^.>.Pu.
  415dac:	3e919ddd bf756d97 3e90dd10 bf758a1c     ...>.mu....>..u.
  415dbc:	3e901c2c bf75a67b 3e8f5b32 bf75c2b3     ,..>{.u.2[.>..u.
  415dcc:	3e8e9a22 bf75dec6 3e8dd8fc bf75fab3     "..>..u....>..u.
  415ddc:	3e8d17c0 bf76167a 3e8c566e bf76321b     ...>z.v.nV.>.2v.
  415dec:	3e8b9507 bf764d97 3e8ad38a bf7668ec     ...>.Mv....>.hv.
  415dfc:	3e8a11f8 bf76841b 3e895050 bf769f24     ...>..v.PP.>$.v.
  415e0c:	3e888e93 bf76ba07 3e87ccc1 bf76d4c4     ...>..v....>..v.
  415e1c:	3e870ada bf76ef5b 3e8648df bf7709cc     ...>[.v..H.>..w.
  415e2c:	3e8586ce bf772417 3e84c4aa bf773e3c     ...>.$w....><>w.
  415e3c:	3e840270 bf77583a 3e834022 bf777213     p..>:Xw."@.>.rw.
  415e4c:	3e827dc0 bf778bc5 3e81bb4a bf77a551     .}.>..w.J..>Q.w.
  415e5c:	3e80f8c0 bf77beb7 3e803622 bf77d7f7     ...>..w."6.>..w.
  415e6c:	3e7ee6e1 bf77f110 3e7d6156 bf780a04     ..~>..w.Va}>..x.
  415e7c:	3e7bdba4 bf7822d1 3e7a55cb bf783b77     ..{>."x..Uz>w;x.
  415e8c:	3e78cfcc bf7853f8 3e7749a6 bf786c52     ..x>.Sx..Iw>Rlx.
  415e9c:	3e75c35a bf788486 3e743ce8 bf789c93     Z.u>..x..<t>..x.
  415eac:	3e72b651 bf78b47b 3e712f94 bf78cc3b     Q.r>{.x../q>;.x.
  415ebc:	3e6fa8b2 bf78e3d6 3e6e21ab bf78fb4a     ..o>..x..!n>J.x.
  415ecc:	3e6c9a7f bf791298 3e6b132f bf7929bf     ..l>..y./.k>.)y.
  415edc:	3e698bba bf7940c0 3e680422 bf79579a     ..i>.@y.".h>.Wy.
  415eec:	3e667c66 bf796e4e 3e64f486 bf7984dc     f|f>Nny...d>..y.
  415efc:	3e636c83 bf799b43 3e61e45c bf79b183     .lc>C.y.\.a>..y.
  415f0c:	3e605c13 bf79c79d 3e5ed3a8 bf79dd91     .\`>..y...^>..y.
  415f1c:	3e5d4b1a bf79f35e 3e5bc26a bf7a0904     .K]>^.y.j.[>..z.
  415f2c:	3e5a3997 bf7a1e84 3e58b0a4 bf7a33dd     .9Z>..z...X>.3z.
  415f3c:	3e57278f bf7a4910 3e559e58 bf7a5e1c     .'W>.Iz.X.U>.^z.
  415f4c:	3e541501 bf7a7302 3e528b89 bf7a87c1     ..T>.sz...R>..z.
  415f5c:	3e5101f1 bf7a9c59 3e4f7838 bf7ab0cb     ..Q>Y.z.8xO>..z.
  415f6c:	3e4dee60 bf7ac516 3e4c6467 bf7ad93a     `.M>..z.gdL>:.z.
  415f7c:	3e4ada4f bf7aed37 3e495018 bf7b010e     O.J>7.z..PI>..{.
  415f8c:	3e47c5c2 bf7b14be 3e463b4d bf7b2848     ..G>..{.M;F>H({.
  415f9c:	3e44b0b9 bf7b3bab 3e432607 bf7b4ee7     ..D>.;{..&C>.N{.
  415fac:	3e419b37 bf7b61fc 3e401049 bf7b74ea     7.A>.a{.I.@>.t{.
  415fbc:	3e3e853e bf7b87b2 3e3cfa15 bf7b9a53     >.>>..{...<>S.{.
  415fcc:	3e3b6ecf bf7baccd 3e39e36c bf7bbf20     .n;>..{.l.9> .{.
  415fdc:	3e3857ec bf7bd14d 3e36cc50 bf7be353     .W8>M.{.P.6>S.{.
  415fec:	3e354098 bf7bf531 3e33b4c4 bf7c06e9     .@5>1.{...3>..|.
  415ffc:	3e3228d4 bf7c187a 3e309cc9 bf7c29e5     .(2>z.|...0>.)|.
  41600c:	3e2f10a2 bf7c3b28 3e2d8461 bf7c4c44     ../>(;|.a.->DL|.
  41601c:	3e2bf804 bf7c5d3a 3e2a6b8d bf7c6e08     ..+>:]|..k*>.n|.
  41602c:	3e28defc bf7c7eb0 3e275251 bf7c8f31     ..(>.~|.QR'>1.|.
  41603c:	3e25c58c bf7c9f8a 3e2438ad bf7cafbd     ..%>..|..8$>..|.
  41604c:	3e22abb6 bf7cbfc9 3e211ea5 bf7ccfae     ..">..|...!>..|.
  41605c:	3e1f917b bf7cdf6c 3e1e0438 bf7cef03     {..>l.|.8..>..|.
  41606c:	3e1c76de bf7cfe73 3e1ae96b bf7d0dbc     .v.>s.|.k..>..}.
  41607c:	3e195be0 bf7d1cdd 3e17ce3d bf7d2bd8     .[.>..}.=..>.+}.
  41608c:	3e164083 bf7d3aac 3e14b2b2 bf7d4959     .@.>.:}....>YI}.
  41609c:	3e1324ca bf7d57de 3e1196cc bf7d663d     .$.>.W}....>=f}.
  4160ac:	3e1008b7 bf7d7474 3e0e7a8b bf7d8285     ...>tt}..z.>..}.
  4160bc:	3e0cec4a bf7d906e 3e0b5df3 bf7d9e30     J..>n.}..].>0.}.
  4160cc:	3e09cf86 bf7dabcc 3e084105 bf7db940     ...>..}..A.>@.}.
  4160dc:	3e06b26e bf7dc68c 3e0523c2 bf7dd3b2     n..>..}..#.>..}.
  4160ec:	3e039502 bf7de0b1 3e02062e bf7ded88     ...>..}....>..}.
  4160fc:	3e007745 bf7dfa38 3dfdd092 bf7e06c2     Ew.>8.}....=..~.
  41610c:	3dfab273 bf7e1324 3df7942c bf7e1f5e     s..=$.~.,..=^.~.
  41611c:	3df475c0 bf7e2b72 3df1572e bf7e375e     .u.=r+~..W.=^7~.
  41612c:	3dee3876 bf7e4323 3deb199a bf7e4ec1     v8.=#C~....=.N~.
  41613c:	3de7fa9a bf7e5a38 3de4db76 bf7e6588     ...=8Z~.v..=.e~.
  41614c:	3de1bc2e bf7e70b0 3dde9cc4 bf7e7bb1     ...=.p~....=.{~.
  41615c:	3ddb7d37 bf7e868b 3dd85d89 bf7e913d     7}.=..~..].==.~.
  41616c:	3dd53db9 bf7e9bc9 3dd21dc8 bf7ea62d     .=.=..~....=-.~.
  41617c:	3dcefdb7 bf7eb069 3dcbdd86 bf7eba7f     ...=i.~....=..~.
  41618c:	3dc8bd36 bf7ec46d 3dc59cc6 bf7ece34     6..=m.~....=4.~.
  41619c:	3dc27c39 bf7ed7d4 3dbf5b8d bf7ee14c     9|.=..~..[.=L.~.
  4161ac:	3dbc3ac3 bf7eea9d 3db919dd bf7ef3c7     .:.=..~....=..~.
  4161bc:	3db5f8da bf7efcc9 3db2d7bb bf7f05a4     ...=..~....=....
  4161cc:	3dafb680 bf7f0e58 3dac952b bf7f16e4     ...=X...+..=....
  4161dc:	3da973ba bf7f1f49 3da65230 bf7f2787     .s.=I...0R.=.'..
  4161ec:	3da3308c bf7f2f9d 3da00ecf bf7f378d     .0.=./.....=.7..
  4161fc:	3d9cecf9 bf7f3f54 3d99cb0a bf7f46f4     ...=T?.....=.F..
  41620c:	3d96a905 bf7f4e6d 3d9386e7 bf7f55bf     ...=mN.....=.U..
  41621c:	3d9064b4 bf7f5ce9 3d8d426a bf7f63ec     .d.=.\..jB.=.c..
  41622c:	3d8a200a bf7f6ac7 3d86fd94 bf7f717b     . .=.j.....={q..
  41623c:	3d83db0a bf7f7808 3d80b86c bf7f7e6d     ...=.x..l..=m~..
  41624c:	3d7b2b74 bf7f84ab 3d74e5e9 bf7f8ac2     t+{=......t=....
  41625c:	3d6ea038 bf7f90b1 3d685a62 bf7f9678     8.n=....bZh=x...
  41626c:	3d621468 bf7f9c18 3d5bce4c bf7fa191     h.b=....L.[=....
  41627c:	3d55880e bf7fa6e3 3d4f41af bf7fac0d     ..U=.....AO=....
  41628c:	3d48fb2f bf7fb10f 3d42b491 bf7fb5ea     /.H=......B=....
  41629c:	3d3c6dd5 bf7fba9e 3d3626fc bf7fbf2a     .m<=.....&6=*...
  4162ac:	3d2fe007 bf7fc38f 3d2998f6 bf7fc7cc     ../=......)=....
  4162bc:	3d2351cc bf7fcbe2 3d1d0a88 bf7fcfd1     .Q#=.......=....
  4162cc:	3d16c32c bf7fd398 3d107bb8 bf7fd737     ,..=.....{.=7...
  4162dc:	3d0a342f bf7fdaaf 3d03ec90 bf7fde00     /4.=.......=....
  4162ec:	3cfb49b9 bf7fe129 3ceeba2d bf7fe42b     .I.<)...-..<+...
  4162fc:	3ce22a7b bf7fe705 3cd59aa6 bf7fe9b8     {*.<.......<....
  41630c:	3cc90ab0 bf7fec43 3cbc7a9b bf7feea7     ...<C....z.<....
  41631c:	3cafea69 bf7ff0e3 3ca35a1c bf7ff2f8     i..<.....Z.<....
  41632c:	3c96c9b6 bf7ff4e6 3c8a3938 bf7ff6ac     ...<....89.<....
  41633c:	3c7b514b bf7ff84a 3c623000 bf7ff9c1     KQ{<J....0b<....
  41634c:	3c490e90 bf7ffb11 3c2fed02 bf7ffc39     ..I<....../<9...
  41635c:	3c16cb59 bf7ffd39 3bfb5330 bf7ffe13     Y..<9...0S.;....
  41636c:	3bc90f89 bf7ffec4 3b96cbc1 bf7fff4e     ...;.......;N...
  41637c:	3b490fc7 bf7fffb1 3ac90fd4 bf7fffec     ..I;.......:....

0041638c <twiddleCoef_256>:
  41638c:	3f800000 00000000 3f7fec43 3cc90ab0     ...?....C..?...<
  41639c:	3f7fb10f 3d48fb2f 3f7f4e6d 3d96a905     ...?/.H=mN.?...=
  4163ac:	3f7ec46d 3dc8bd36 3f7e1324 3dfab273     m.~?6..=$.~?s..=
  4163bc:	3f7d3aac 3e164083 3f7c3b28 3e2f10a2     .:}?.@.>(;|?../>
  4163cc:	3f7b14be 3e47c5c2 3f79c79d 3e605c13     ..{?..G>..y?.\`>
  4163dc:	3f7853f8 3e78cfcc 3f76ba07 3e888e93     .Sx?..x>..v?...>
  4163ec:	3f74fa0b 3e94a031 3f731447 3ea09ae5     ..t?1..>G.s?...>
  4163fc:	3f710908 3eac7cd4 3f6ed89e 3eb8442a     ..q?.|.>..n?*D.>
  41640c:	3f6c835e 3ec3ef15 3f6a09a7 3ecf7bca     ^.l?...>..j?.{.>
  41641c:	3f676bd8 3edae880 3f64aa59 3ee63375     .kg?...>Y.d?u3.>
  41642c:	3f61c598 3ef15aea 3f5ebe05 3efc5d27     ..a?.Z.>..^?'].>
  41643c:	3f5b941a 3f039c3d 3f584853 3f08f59b     ..[?=..?SHX?...?
  41644c:	3f54db31 3f0e39da 3f514d3d 3f13682a     1.T?.9.?=MQ?*h.?
  41645c:	3f4d9f02 3f187fc0 3f49d112 3f1d7fd1     ..M?...?..I?...?
  41646c:	3f45e403 3f226799 3f41d870 3f273656     ..E?.g"?p.A?V6'?
  41647c:	3f3daef9 3f2beb4a 3f396842 3f3085bb     ..=?J.+?Bh9?..0?
  41648c:	3f3504f3 3f3504f3 3f3085bb 3f396842     ..5?..5?..0?Bh9?
  41649c:	3f2beb4a 3f3daef9 3f273656 3f41d870     J.+?..=?V6'?p.A?
  4164ac:	3f226799 3f45e403 3f1d7fd1 3f49d112     .g"?..E?...?..I?
  4164bc:	3f187fc0 3f4d9f02 3f13682a 3f514d3d     ...?..M?*h.?=MQ?
  4164cc:	3f0e39da 3f54db31 3f08f59b 3f584853     .9.?1.T?...?SHX?
  4164dc:	3f039c3d 3f5b941a 3efc5d27 3f5ebe05     =..?..[?'].>..^?
  4164ec:	3ef15aea 3f61c598 3ee63375 3f64aa59     .Z.>..a?u3.>Y.d?
  4164fc:	3edae880 3f676bd8 3ecf7bca 3f6a09a7     ...>.kg?.{.>..j?
  41650c:	3ec3ef15 3f6c835e 3eb8442a 3f6ed89e     ...>^.l?*D.>..n?
  41651c:	3eac7cd4 3f710908 3ea09ae5 3f731447     .|.>..q?...>G.s?
  41652c:	3e94a031 3f74fa0b 3e888e93 3f76ba07     1..>..t?...>..v?
  41653c:	3e78cfcc 3f7853f8 3e605c13 3f79c79d     ..x>.Sx?.\`>..y?
  41654c:	3e47c5c2 3f7b14be 3e2f10a2 3f7c3b28     ..G>..{?../>(;|?
  41655c:	3e164083 3f7d3aac 3dfab273 3f7e1324     .@.>.:}?s..=$.~?
  41656c:	3dc8bd36 3f7ec46d 3d96a905 3f7f4e6d     6..=m.~?...=mN.?
  41657c:	3d48fb2f 3f7fb10f 3cc90ab0 3f7fec43     /.H=...?...<C..?
  41658c:	00000000 3f800000 bcc90ab0 3f7fec43     .......?....C..?
  41659c:	bd48fb2f 3f7fb10f bd96a905 3f7f4e6d     /.H....?....mN.?
  4165ac:	bdc8bd36 3f7ec46d bdfab273 3f7e1324     6...m.~?s...$.~?
  4165bc:	be164083 3f7d3aac be2f10a2 3f7c3b28     .@...:}?../.(;|?
  4165cc:	be47c5c2 3f7b14be be605c13 3f79c79d     ..G...{?.\`...y?
  4165dc:	be78cfcc 3f7853f8 be888e93 3f76ba07     ..x..Sx?......v?
  4165ec:	be94a031 3f74fa0b bea09ae5 3f731447     1.....t?....G.s?
  4165fc:	beac7cd4 3f710908 beb8442a 3f6ed89e     .|....q?*D....n?
  41660c:	bec3ef15 3f6c835e becf7bca 3f6a09a7     ....^.l?.{....j?
  41661c:	bedae880 3f676bd8 bee63375 3f64aa59     .....kg?u3..Y.d?
  41662c:	bef15aea 3f61c598 befc5d27 3f5ebe05     .Z....a?']....^?
  41663c:	bf039c3d 3f5b941a bf08f59b 3f584853     =.....[?....SHX?
  41664c:	bf0e39da 3f54db31 bf13682a 3f514d3d     .9..1.T?*h..=MQ?
  41665c:	bf187fc0 3f4d9f02 bf1d7fd1 3f49d112     ......M?......I?
  41666c:	bf226799 3f45e403 bf273656 3f41d870     .g"...E?V6'.p.A?
  41667c:	bf2beb4a 3f3daef9 bf3085bb 3f396842     J.+...=?..0.Bh9?
  41668c:	bf3504f3 3f3504f3 bf396842 3f3085bb     ..5...5?Bh9...0?
  41669c:	bf3daef9 3f2beb4a bf41d870 3f273656     ..=.J.+?p.A.V6'?
  4166ac:	bf45e403 3f226799 bf49d112 3f1d7fd1     ..E..g"?..I....?
  4166bc:	bf4d9f02 3f187fc0 bf514d3d 3f13682a     ..M....?=MQ.*h.?
  4166cc:	bf54db31 3f0e39da bf584853 3f08f59b     1.T..9.?SHX....?
  4166dc:	bf5b941a 3f039c3d bf5ebe05 3efc5d27     ..[.=..?..^.'].>
  4166ec:	bf61c598 3ef15aea bf64aa59 3ee63375     ..a..Z.>Y.d.u3.>
  4166fc:	bf676bd8 3edae880 bf6a09a7 3ecf7bca     .kg....>..j..{.>
  41670c:	bf6c835e 3ec3ef15 bf6ed89e 3eb8442a     ^.l....>..n.*D.>
  41671c:	bf710908 3eac7cd4 bf731447 3ea09ae5     ..q..|.>G.s....>
  41672c:	bf74fa0b 3e94a031 bf76ba07 3e888e93     ..t.1..>..v....>
  41673c:	bf7853f8 3e78cfcc bf79c79d 3e605c13     .Sx...x>..y..\`>
  41674c:	bf7b14be 3e47c5c2 bf7c3b28 3e2f10a2     ..{...G>(;|.../>
  41675c:	bf7d3aac 3e164083 bf7e1324 3dfab273     .:}..@.>$.~.s..=
  41676c:	bf7ec46d 3dc8bd36 bf7f4e6d 3d96a905     m.~.6..=mN.....=
  41677c:	bf7fb10f 3d48fb2f bf7fec43 3cc90ab0     ..../.H=C......<
  41678c:	bf800000 00000000 bf7fec43 bcc90ab0     ........C.......
  41679c:	bf7fb10f bd48fb2f bf7f4e6d bd96a905     ..../.H.mN......
  4167ac:	bf7ec46d bdc8bd36 bf7e1324 bdfab273     m.~.6...$.~.s...
  4167bc:	bf7d3aac be164083 bf7c3b28 be2f10a2     .:}..@..(;|.../.
  4167cc:	bf7b14be be47c5c2 bf79c79d be605c13     ..{...G...y..\`.
  4167dc:	bf7853f8 be78cfcc bf76ba07 be888e93     .Sx...x...v.....
  4167ec:	bf74fa0b be94a031 bf731447 bea09ae5     ..t.1...G.s.....
  4167fc:	bf710908 beac7cd4 bf6ed89e beb8442a     ..q..|....n.*D..
  41680c:	bf6c835e bec3ef15 bf6a09a7 becf7bca     ^.l.......j..{..
  41681c:	bf676bd8 bedae880 bf64aa59 bee63375     .kg.....Y.d.u3..
  41682c:	bf61c598 bef15aea bf5ebe05 befc5d27     ..a..Z....^.']..
  41683c:	bf5b941a bf039c3d bf584853 bf08f59b     ..[.=...SHX.....
  41684c:	bf54db31 bf0e39da bf514d3d bf13682a     1.T..9..=MQ.*h..
  41685c:	bf4d9f02 bf187fc0 bf49d112 bf1d7fd1     ..M.......I.....
  41686c:	bf45e403 bf226799 bf41d870 bf273656     ..E..g".p.A.V6'.
  41687c:	bf3daef9 bf2beb4a bf396842 bf3085bb     ..=.J.+.Bh9...0.
  41688c:	bf3504f3 bf3504f3 bf3085bb bf396842     ..5...5...0.Bh9.
  41689c:	bf2beb4a bf3daef9 bf273656 bf41d870     J.+...=.V6'.p.A.
  4168ac:	bf226799 bf45e403 bf1d7fd1 bf49d112     .g"...E.......I.
  4168bc:	bf187fc0 bf4d9f02 bf13682a bf514d3d     ......M.*h..=MQ.
  4168cc:	bf0e39da bf54db31 bf08f59b bf584853     .9..1.T.....SHX.
  4168dc:	bf039c3d bf5b941a befc5d27 bf5ebe05     =.....[.']....^.
  4168ec:	bef15aea bf61c598 bee63375 bf64aa59     .Z....a.u3..Y.d.
  4168fc:	bedae880 bf676bd8 becf7bca bf6a09a7     .....kg..{....j.
  41690c:	bec3ef15 bf6c835e beb8442a bf6ed89e     ....^.l.*D....n.
  41691c:	beac7cd4 bf710908 bea09ae5 bf731447     .|....q.....G.s.
  41692c:	be94a031 bf74fa0b be888e93 bf76ba07     1.....t.......v.
  41693c:	be78cfcc bf7853f8 be605c13 bf79c79d     ..x..Sx..\`...y.
  41694c:	be47c5c2 bf7b14be be2f10a2 bf7c3b28     ..G...{.../.(;|.
  41695c:	be164083 bf7d3aac bdfab273 bf7e1324     .@...:}.s...$.~.
  41696c:	bdc8bd36 bf7ec46d bd96a905 bf7f4e6d     6...m.~.....mN..
  41697c:	bd48fb2f bf7fb10f bcc90ab0 bf7fec43     /.H.........C...
  41698c:	80000000 bf800000 3cc90ab0 bf7fec43     ...........<C...
  41699c:	3d48fb2f bf7fb10f 3d96a905 bf7f4e6d     /.H=.......=mN..
  4169ac:	3dc8bd36 bf7ec46d 3dfab273 bf7e1324     6..=m.~.s..=$.~.
  4169bc:	3e164083 bf7d3aac 3e2f10a2 bf7c3b28     .@.>.:}.../>(;|.
  4169cc:	3e47c5c2 bf7b14be 3e605c13 bf79c79d     ..G>..{..\`>..y.
  4169dc:	3e78cfcc bf7853f8 3e888e93 bf76ba07     ..x>.Sx....>..v.
  4169ec:	3e94a031 bf74fa0b 3ea09ae5 bf731447     1..>..t....>G.s.
  4169fc:	3eac7cd4 bf710908 3eb8442a bf6ed89e     .|.>..q.*D.>..n.
  416a0c:	3ec3ef15 bf6c835e 3ecf7bca bf6a09a7     ...>^.l..{.>..j.
  416a1c:	3edae880 bf676bd8 3ee63375 bf64aa59     ...>.kg.u3.>Y.d.
  416a2c:	3ef15aea bf61c598 3efc5d27 bf5ebe05     .Z.>..a.'].>..^.
  416a3c:	3f039c3d bf5b941a 3f08f59b bf584853     =..?..[....?SHX.
  416a4c:	3f0e39da bf54db31 3f13682a bf514d3d     .9.?1.T.*h.?=MQ.
  416a5c:	3f187fc0 bf4d9f02 3f1d7fd1 bf49d112     ...?..M....?..I.
  416a6c:	3f226799 bf45e403 3f273656 bf41d870     .g"?..E.V6'?p.A.
  416a7c:	3f2beb4a bf3daef9 3f3085bb bf396842     J.+?..=...0?Bh9.
  416a8c:	3f3504f3 bf3504f3 3f396842 bf3085bb     ..5?..5.Bh9?..0.
  416a9c:	3f3daef9 bf2beb4a 3f41d870 bf273656     ..=?J.+.p.A?V6'.
  416aac:	3f45e403 bf226799 3f49d112 bf1d7fd1     ..E?.g"...I?....
  416abc:	3f4d9f02 bf187fc0 3f514d3d bf13682a     ..M?....=MQ?*h..
  416acc:	3f54db31 bf0e39da 3f584853 bf08f59b     1.T?.9..SHX?....
  416adc:	3f5b941a bf039c3d 3f5ebe05 befc5d27     ..[?=.....^?']..
  416aec:	3f61c598 bef15aea 3f64aa59 bee63375     ..a?.Z..Y.d?u3..
  416afc:	3f676bd8 bedae880 3f6a09a7 becf7bca     .kg?......j?.{..
  416b0c:	3f6c835e bec3ef15 3f6ed89e beb8442a     ^.l?......n?*D..
  416b1c:	3f710908 beac7cd4 3f731447 bea09ae5     ..q?.|..G.s?....
  416b2c:	3f74fa0b be94a031 3f76ba07 be888e93     ..t?1.....v?....
  416b3c:	3f7853f8 be78cfcc 3f79c79d be605c13     .Sx?..x...y?.\`.
  416b4c:	3f7b14be be47c5c2 3f7c3b28 be2f10a2     ..{?..G.(;|?../.
  416b5c:	3f7d3aac be164083 3f7e1324 bdfab273     .:}?.@..$.~?s...
  416b6c:	3f7ec46d bdc8bd36 3f7f4e6d bd96a905     m.~?6...mN.?....
  416b7c:	3f7fb10f bd48fb2f 3f7fec43 bcc90ab0     ...?/.H.C..?....

00416b8c <twiddleCoef_16>:
  416b8c:	3f800000 00000000 3f6c835e 3ec3ef15     ...?....^.l?...>
  416b9c:	3f3504f3 3f3504f3 3ec3ef15 3f6c835e     ..5?..5?...>^.l?
  416bac:	00000000 3f800000 bec3ef15 3f6c835e     .......?....^.l?
  416bbc:	bf3504f3 3f3504f3 bf6c835e 3ec3ef15     ..5...5?^.l....>
  416bcc:	bf800000 00000000 bf6c835e bec3ef15     ........^.l.....
  416bdc:	bf3504f3 bf3504f3 bec3ef15 bf6c835e     ..5...5.....^.l.
  416bec:	80000000 bf800000 3ec3ef15 bf6c835e     ...........>^.l.
  416bfc:	3f3504f3 bf3504f3 3f6c835e bec3ef15     ..5?..5.^.l?....

00416c0c <twiddleCoef_1024>:
  416c0c:	3f800000 00000000 3f7ffec4 3bc90f89     ...?.......?...;
  416c1c:	3f7ffb11 3c490e90 3f7ff4e6 3c96c9b6     ...?..I<...?...<
  416c2c:	3f7fec43 3cc90ab0 3f7fe129 3cfb49b9     C..?...<)..?.I.<
  416c3c:	3f7fd398 3d16c32c 3f7fc38f 3d2fe007     ...?,..=...?../=
  416c4c:	3f7fb10f 3d48fb2f 3f7f9c18 3d621468     ...?/.H=...?h.b=
  416c5c:	3f7f84ab 3d7b2b74 3f7f6ac7 3d8a200a     ...?t+{=.j.?. .=
  416c6c:	3f7f4e6d 3d96a905 3f7f2f9d 3da3308c     mN.?...=./.?.0.=
  416c7c:	3f7f0e58 3dafb680 3f7eea9d 3dbc3ac3     X..?...=..~?.:.=
  416c8c:	3f7ec46d 3dc8bd36 3f7e9bc9 3dd53db9     m.~?6..=..~?.=.=
  416c9c:	3f7e70b0 3de1bc2e 3f7e4323 3dee3876     .p~?...=#C~?v8.=
  416cac:	3f7e1324 3dfab273 3f7de0b1 3e039502     $.~?s..=..}?...>
  416cbc:	3f7dabcc 3e09cf86 3f7d7474 3e1008b7     ..}?...>tt}?...>
  416ccc:	3f7d3aac 3e164083 3f7cfe73 3e1c76de     .:}?.@.>s.|?.v.>
  416cdc:	3f7cbfc9 3e22abb6 3f7c7eb0 3e28defc     ..|?..">.~|?..(>
  416cec:	3f7c3b28 3e2f10a2 3f7bf531 3e354098     (;|?../>1.{?.@5>
  416cfc:	3f7baccd 3e3b6ecf 3f7b61fc 3e419b37     ..{?.n;>.a{?7.A>
  416d0c:	3f7b14be 3e47c5c2 3f7ac516 3e4dee60     ..{?..G>..z?`.M>
  416d1c:	3f7a7302 3e541501 3f7a1e84 3e5a3997     .sz?..T>..z?.9Z>
  416d2c:	3f79c79d 3e605c13 3f796e4e 3e667c66     ..y?.\`>Nny?f|f>
  416d3c:	3f791298 3e6c9a7f 3f78b47b 3e72b651     ..y?..l>{.x?Q.r>
  416d4c:	3f7853f8 3e78cfcc 3f77f110 3e7ee6e1     .Sx?..x>..w?..~>
  416d5c:	3f778bc5 3e827dc0 3f772417 3e8586ce     ..w?.}.>.$w?...>
  416d6c:	3f76ba07 3e888e93 3f764d97 3e8b9507     ..v?...>.Mv?...>
  416d7c:	3f75dec6 3e8e9a22 3f756d97 3e919ddd     ..u?"..>.mu?...>
  416d8c:	3f74fa0b 3e94a031 3f748422 3e97a117     ..t?1..>".t?...>
  416d9c:	3f740bdd 3e9aa086 3f73913f 3e9d9e78     ..t?...>?.s?x..>
  416dac:	3f731447 3ea09ae5 3f7294f8 3ea395c5     G.s?...>..r?...>
  416dbc:	3f721352 3ea68f12 3f718f57 3ea986c4     R.r?...>W.q?...>
  416dcc:	3f710908 3eac7cd4 3f708066 3eaf713a     ..q?.|.>f.p?:q.>
  416ddc:	3f6ff573 3eb263ef 3f6f6830 3eb554ec     s.o?.c.>0ho?.T.>
  416dec:	3f6ed89e 3eb8442a 3f6e46be 3ebb31a0     ..n?*D.>.Fn?.1.>
  416dfc:	3f6db293 3ebe1d4a 3f6d1c1d 3ec1071e     ..m?J..>..m?...>
  416e0c:	3f6c835e 3ec3ef15 3f6be858 3ec6d529     ^.l?...>X.k?)..>
  416e1c:	3f6b4b0c 3ec9b953 3f6aab7b 3ecc9b8b     .Kk?S..>{.j?...>
  416e2c:	3f6a09a7 3ecf7bca 3f696591 3ed25a09     ..j?.{.>.ei?.Z.>
  416e3c:	3f68bf3c 3ed53641 3f6816a8 3ed8106b     <.h?A6.>..h?k..>
  416e4c:	3f676bd8 3edae880 3f66becc 3eddbe79     .kg?...>..f?y..>
  416e5c:	3f660f88 3ee0924f 3f655e0b 3ee363fa     ..f?O..>.^e?.c.>
  416e6c:	3f64aa59 3ee63375 3f63f473 3ee900b7     Y.d?u3.>s.c?...>
  416e7c:	3f633c5a 3eebcbbb 3f628210 3eee9479     Z<c?...>..b?y..>
  416e8c:	3f61c598 3ef15aea 3f6106f2 3ef41f07     ..a?.Z.>..a?...>
  416e9c:	3f604621 3ef6e0cb 3f5f8327 3ef9a02d     !F`?...>'._?-..>
  416eac:	3f5ebe05 3efc5d27 3f5df6be 3eff17b2     ..^?'].>..]?...>
  416ebc:	3f5d2d53 3f00e7e4 3f5c61c7 3f0242b1     S-]?...?.a\?.B.?
  416ecc:	3f5b941a 3f039c3d 3f5ac450 3f04f484     ..[?=..?P.Z?...?
  416edc:	3f59f26a 3f064b82 3f591e6a 3f07a136     j.Y?.K.?j.Y?6..?
  416eec:	3f584853 3f08f59b 3f577026 3f0a48ad     SHX?...?&pW?.H.?
  416efc:	3f5695e5 3f0b9a6b 3f55b993 3f0cead0     ..V?k..?..U?...?
  416f0c:	3f54db31 3f0e39da 3f53fac3 3f0f8784     1.T?.9.?..S?...?
  416f1c:	3f531849 3f10d3cd 3f5233c6 3f121eb0     I.S?...?.3R?...?
  416f2c:	3f514d3d 3f13682a 3f5064af 3f14b039     =MQ?*h.?.dP?9..?
  416f3c:	3f4f7a1f 3f15f6d9 3f4e8d90 3f173c07     .zO?...?..N?.<.?
  416f4c:	3f4d9f02 3f187fc0 3f4cae79 3f19c200     ..M?...?y.L?...?
  416f5c:	3f4bbbf8 3f1b02c6 3f4ac77f 3f1c420c     ..K?...?..J?.B.?
  416f6c:	3f49d112 3f1d7fd1 3f48d8b3 3f1ebc12     ..I?...?..H?...?
  416f7c:	3f47de65 3f1ff6cb 3f46e22a 3f212ff9     e.G?...?*.F?./!?
  416f8c:	3f45e403 3f226799 3f44e3f5 3f239da9     ..E?.g"?..D?..#?
  416f9c:	3f43e200 3f24d225 3f42de29 3f26050a     ..C?%.$?).B?..&?
  416fac:	3f41d870 3f273656 3f40d0da 3f286605     p.A?V6'?..@?.f(?
  416fbc:	3f3fc767 3f299415 3f3ebc1b 3f2ac082     g.??..)?..>?..*?
  416fcc:	3f3daef9 3f2beb4a 3f3ca003 3f2d1469     ..=?J.+?..<?i.-?
  416fdc:	3f3b8f3b 3f2e3bde 3f3a7ca4 3f2f61a5     ;.;?.;.?.|:?.a/?
  416fec:	3f396842 3f3085bb 3f385216 3f31a81d     Bh9?..0?.R8?..1?
  416ffc:	3f373a23 3f32c8c9 3f36206c 3f33e7bc     #:7?..2?l 6?..3?
  41700c:	3f3504f3 3f3504f3 3f33e7bc 3f36206c     ..5?..5?..3?l 6?
  41701c:	3f32c8c9 3f373a23 3f31a81d 3f385216     ..2?#:7?..1?.R8?
  41702c:	3f3085bb 3f396842 3f2f61a5 3f3a7ca4     ..0?Bh9?.a/?.|:?
  41703c:	3f2e3bde 3f3b8f3b 3f2d1469 3f3ca003     .;.?;.;?i.-?..<?
  41704c:	3f2beb4a 3f3daef9 3f2ac082 3f3ebc1b     J.+?..=?..*?..>?
  41705c:	3f299415 3f3fc767 3f286605 3f40d0da     ..)?g.??.f(?..@?
  41706c:	3f273656 3f41d870 3f26050a 3f42de29     V6'?p.A?..&?).B?
  41707c:	3f24d225 3f43e200 3f239da9 3f44e3f5     %.$?..C?..#?..D?
  41708c:	3f226799 3f45e403 3f212ff9 3f46e22a     .g"?..E?./!?*.F?
  41709c:	3f1ff6cb 3f47de65 3f1ebc12 3f48d8b3     ...?e.G?...?..H?
  4170ac:	3f1d7fd1 3f49d112 3f1c420c 3f4ac77f     ...?..I?.B.?..J?
  4170bc:	3f1b02c6 3f4bbbf8 3f19c200 3f4cae79     ...?..K?...?y.L?
  4170cc:	3f187fc0 3f4d9f02 3f173c07 3f4e8d90     ...?..M?.<.?..N?
  4170dc:	3f15f6d9 3f4f7a1f 3f14b039 3f5064af     ...?.zO?9..?.dP?
  4170ec:	3f13682a 3f514d3d 3f121eb0 3f5233c6     *h.?=MQ?...?.3R?
  4170fc:	3f10d3cd 3f531849 3f0f8784 3f53fac3     ...?I.S?...?..S?
  41710c:	3f0e39da 3f54db31 3f0cead0 3f55b993     .9.?1.T?...?..U?
  41711c:	3f0b9a6b 3f5695e5 3f0a48ad 3f577026     k..?..V?.H.?&pW?
  41712c:	3f08f59b 3f584853 3f07a136 3f591e6a     ...?SHX?6..?j.Y?
  41713c:	3f064b82 3f59f26a 3f04f484 3f5ac450     .K.?j.Y?...?P.Z?
  41714c:	3f039c3d 3f5b941a 3f0242b1 3f5c61c7     =..?..[?.B.?.a\?
  41715c:	3f00e7e4 3f5d2d53 3eff17b2 3f5df6be     ...?S-]?...>..]?
  41716c:	3efc5d27 3f5ebe05 3ef9a02d 3f5f8327     '].>..^?-..>'._?
  41717c:	3ef6e0cb 3f604621 3ef41f07 3f6106f2     ...>!F`?...>..a?
  41718c:	3ef15aea 3f61c598 3eee9479 3f628210     .Z.>..a?y..>..b?
  41719c:	3eebcbbb 3f633c5a 3ee900b7 3f63f473     ...>Z<c?...>s.c?
  4171ac:	3ee63375 3f64aa59 3ee363fa 3f655e0b     u3.>Y.d?.c.>.^e?
  4171bc:	3ee0924f 3f660f88 3eddbe79 3f66becc     O..>..f?y..>..f?
  4171cc:	3edae880 3f676bd8 3ed8106b 3f6816a8     ...>.kg?k..>..h?
  4171dc:	3ed53641 3f68bf3c 3ed25a09 3f696591     A6.><.h?.Z.>.ei?
  4171ec:	3ecf7bca 3f6a09a7 3ecc9b8b 3f6aab7b     .{.>..j?...>{.j?
  4171fc:	3ec9b953 3f6b4b0c 3ec6d529 3f6be858     S..>.Kk?)..>X.k?
  41720c:	3ec3ef15 3f6c835e 3ec1071e 3f6d1c1d     ...>^.l?...>..m?
  41721c:	3ebe1d4a 3f6db293 3ebb31a0 3f6e46be     J..>..m?.1.>.Fn?
  41722c:	3eb8442a 3f6ed89e 3eb554ec 3f6f6830     *D.>..n?.T.>0ho?
  41723c:	3eb263ef 3f6ff573 3eaf713a 3f708066     .c.>s.o?:q.>f.p?
  41724c:	3eac7cd4 3f710908 3ea986c4 3f718f57     .|.>..q?...>W.q?
  41725c:	3ea68f12 3f721352 3ea395c5 3f7294f8     ...>R.r?...>..r?
  41726c:	3ea09ae5 3f731447 3e9d9e78 3f73913f     ...>G.s?x..>?.s?
  41727c:	3e9aa086 3f740bdd 3e97a117 3f748422     ...>..t?...>".t?
  41728c:	3e94a031 3f74fa0b 3e919ddd 3f756d97     1..>..t?...>.mu?
  41729c:	3e8e9a22 3f75dec6 3e8b9507 3f764d97     "..>..u?...>.Mv?
  4172ac:	3e888e93 3f76ba07 3e8586ce 3f772417     ...>..v?...>.$w?
  4172bc:	3e827dc0 3f778bc5 3e7ee6e1 3f77f110     .}.>..w?..~>..w?
  4172cc:	3e78cfcc 3f7853f8 3e72b651 3f78b47b     ..x>.Sx?Q.r>{.x?
  4172dc:	3e6c9a7f 3f791298 3e667c66 3f796e4e     ..l>..y?f|f>Nny?
  4172ec:	3e605c13 3f79c79d 3e5a3997 3f7a1e84     .\`>..y?.9Z>..z?
  4172fc:	3e541501 3f7a7302 3e4dee60 3f7ac516     ..T>.sz?`.M>..z?
  41730c:	3e47c5c2 3f7b14be 3e419b37 3f7b61fc     ..G>..{?7.A>.a{?
  41731c:	3e3b6ecf 3f7baccd 3e354098 3f7bf531     .n;>..{?.@5>1.{?
  41732c:	3e2f10a2 3f7c3b28 3e28defc 3f7c7eb0     ../>(;|?..(>.~|?
  41733c:	3e22abb6 3f7cbfc9 3e1c76de 3f7cfe73     ..">..|?.v.>s.|?
  41734c:	3e164083 3f7d3aac 3e1008b7 3f7d7474     .@.>.:}?...>tt}?
  41735c:	3e09cf86 3f7dabcc 3e039502 3f7de0b1     ...>..}?...>..}?
  41736c:	3dfab273 3f7e1324 3dee3876 3f7e4323     s..=$.~?v8.=#C~?
  41737c:	3de1bc2e 3f7e70b0 3dd53db9 3f7e9bc9     ...=.p~?.=.=..~?
  41738c:	3dc8bd36 3f7ec46d 3dbc3ac3 3f7eea9d     6..=m.~?.:.=..~?
  41739c:	3dafb680 3f7f0e58 3da3308c 3f7f2f9d     ...=X..?.0.=./.?
  4173ac:	3d96a905 3f7f4e6d 3d8a200a 3f7f6ac7     ...=mN.?. .=.j.?
  4173bc:	3d7b2b74 3f7f84ab 3d621468 3f7f9c18     t+{=...?h.b=...?
  4173cc:	3d48fb2f 3f7fb10f 3d2fe007 3f7fc38f     /.H=...?../=...?
  4173dc:	3d16c32c 3f7fd398 3cfb49b9 3f7fe129     ,..=...?.I.<)..?
  4173ec:	3cc90ab0 3f7fec43 3c96c9b6 3f7ff4e6     ...<C..?...<...?
  4173fc:	3c490e90 3f7ffb11 3bc90f89 3f7ffec4     ..I<...?...;...?
  41740c:	00000000 3f800000 bbc90f89 3f7ffec4     .......?.......?
  41741c:	bc490e90 3f7ffb11 bc96c9b6 3f7ff4e6     ..I....?.......?
  41742c:	bcc90ab0 3f7fec43 bcfb49b9 3f7fe129     ....C..?.I..)..?
  41743c:	bd16c32c 3f7fd398 bd2fe007 3f7fc38f     ,......?../....?
  41744c:	bd48fb2f 3f7fb10f bd621468 3f7f9c18     /.H....?h.b....?
  41745c:	bd7b2b74 3f7f84ab bd8a200a 3f7f6ac7     t+{....?. ...j.?
  41746c:	bd96a905 3f7f4e6d bda3308c 3f7f2f9d     ....mN.?.0.../.?
  41747c:	bdafb680 3f7f0e58 bdbc3ac3 3f7eea9d     ....X..?.:....~?
  41748c:	bdc8bd36 3f7ec46d bdd53db9 3f7e9bc9     6...m.~?.=....~?
  41749c:	bde1bc2e 3f7e70b0 bdee3876 3f7e4323     .....p~?v8..#C~?
  4174ac:	bdfab273 3f7e1324 be039502 3f7de0b1     s...$.~?......}?
  4174bc:	be09cf86 3f7dabcc be1008b7 3f7d7474     ......}?....tt}?
  4174cc:	be164083 3f7d3aac be1c76de 3f7cfe73     .@...:}?.v..s.|?
  4174dc:	be22abb6 3f7cbfc9 be28defc 3f7c7eb0     .."...|?..(..~|?
  4174ec:	be2f10a2 3f7c3b28 be354098 3f7bf531     ../.(;|?.@5.1.{?
  4174fc:	be3b6ecf 3f7baccd be419b37 3f7b61fc     .n;...{?7.A..a{?
  41750c:	be47c5c2 3f7b14be be4dee60 3f7ac516     ..G...{?`.M...z?
  41751c:	be541501 3f7a7302 be5a3997 3f7a1e84     ..T..sz?.9Z...z?
  41752c:	be605c13 3f79c79d be667c66 3f796e4e     .\`...y?f|f.Nny?
  41753c:	be6c9a7f 3f791298 be72b651 3f78b47b     ..l...y?Q.r.{.x?
  41754c:	be78cfcc 3f7853f8 be7ee6e1 3f77f110     ..x..Sx?..~...w?
  41755c:	be827dc0 3f778bc5 be8586ce 3f772417     .}....w?.....$w?
  41756c:	be888e93 3f76ba07 be8b9507 3f764d97     ......v?.....Mv?
  41757c:	be8e9a22 3f75dec6 be919ddd 3f756d97     ".....u?.....mu?
  41758c:	be94a031 3f74fa0b be97a117 3f748422     1.....t?....".t?
  41759c:	be9aa086 3f740bdd be9d9e78 3f73913f     ......t?x...?.s?
  4175ac:	bea09ae5 3f731447 bea395c5 3f7294f8     ....G.s?......r?
  4175bc:	bea68f12 3f721352 bea986c4 3f718f57     ....R.r?....W.q?
  4175cc:	beac7cd4 3f710908 beaf713a 3f708066     .|....q?:q..f.p?
  4175dc:	beb263ef 3f6ff573 beb554ec 3f6f6830     .c..s.o?.T..0ho?
  4175ec:	beb8442a 3f6ed89e bebb31a0 3f6e46be     *D....n?.1...Fn?
  4175fc:	bebe1d4a 3f6db293 bec1071e 3f6d1c1d     J.....m?......m?
  41760c:	bec3ef15 3f6c835e bec6d529 3f6be858     ....^.l?)...X.k?
  41761c:	bec9b953 3f6b4b0c becc9b8b 3f6aab7b     S....Kk?....{.j?
  41762c:	becf7bca 3f6a09a7 bed25a09 3f696591     .{....j?.Z...ei?
  41763c:	bed53641 3f68bf3c bed8106b 3f6816a8     A6..<.h?k.....h?
  41764c:	bedae880 3f676bd8 beddbe79 3f66becc     .....kg?y.....f?
  41765c:	bee0924f 3f660f88 bee363fa 3f655e0b     O.....f?.c...^e?
  41766c:	bee63375 3f64aa59 bee900b7 3f63f473     u3..Y.d?....s.c?
  41767c:	beebcbbb 3f633c5a beee9479 3f628210     ....Z<c?y.....b?
  41768c:	bef15aea 3f61c598 bef41f07 3f6106f2     .Z....a?......a?
  41769c:	bef6e0cb 3f604621 bef9a02d 3f5f8327     ....!F`?-...'._?
  4176ac:	befc5d27 3f5ebe05 beff17b2 3f5df6be     ']....^?......]?
  4176bc:	bf00e7e4 3f5d2d53 bf0242b1 3f5c61c7     ....S-]?.B...a\?
  4176cc:	bf039c3d 3f5b941a bf04f484 3f5ac450     =.....[?....P.Z?
  4176dc:	bf064b82 3f59f26a bf07a136 3f591e6a     .K..j.Y?6...j.Y?
  4176ec:	bf08f59b 3f584853 bf0a48ad 3f577026     ....SHX?.H..&pW?
  4176fc:	bf0b9a6b 3f5695e5 bf0cead0 3f55b993     k.....V?......U?
  41770c:	bf0e39da 3f54db31 bf0f8784 3f53fac3     .9..1.T?......S?
  41771c:	bf10d3cd 3f531849 bf121eb0 3f5233c6     ....I.S?.....3R?
  41772c:	bf13682a 3f514d3d bf14b039 3f5064af     *h..=MQ?9....dP?
  41773c:	bf15f6d9 3f4f7a1f bf173c07 3f4e8d90     .....zO?.<....N?
  41774c:	bf187fc0 3f4d9f02 bf19c200 3f4cae79     ......M?....y.L?
  41775c:	bf1b02c6 3f4bbbf8 bf1c420c 3f4ac77f     ......K?.B....J?
  41776c:	bf1d7fd1 3f49d112 bf1ebc12 3f48d8b3     ......I?......H?
  41777c:	bf1ff6cb 3f47de65 bf212ff9 3f46e22a     ....e.G?./!.*.F?
  41778c:	bf226799 3f45e403 bf239da9 3f44e3f5     .g"...E?..#...D?
  41779c:	bf24d225 3f43e200 bf26050a 3f42de29     %.$...C?..&.).B?
  4177ac:	bf273656 3f41d870 bf286605 3f40d0da     V6'.p.A?.f(...@?
  4177bc:	bf299415 3f3fc767 bf2ac082 3f3ebc1b     ..).g.??..*...>?
  4177cc:	bf2beb4a 3f3daef9 bf2d1469 3f3ca003     J.+...=?i.-...<?
  4177dc:	bf2e3bde 3f3b8f3b bf2f61a5 3f3a7ca4     .;..;.;?.a/..|:?
  4177ec:	bf3085bb 3f396842 bf31a81d 3f385216     ..0.Bh9?..1..R8?
  4177fc:	bf32c8c9 3f373a23 bf33e7bc 3f36206c     ..2.#:7?..3.l 6?
  41780c:	bf3504f3 3f3504f3 bf36206c 3f33e7bc     ..5...5?l 6...3?
  41781c:	bf373a23 3f32c8c9 bf385216 3f31a81d     #:7...2?.R8...1?
  41782c:	bf396842 3f3085bb bf3a7ca4 3f2f61a5     Bh9...0?.|:..a/?
  41783c:	bf3b8f3b 3f2e3bde bf3ca003 3f2d1469     ;.;..;.?..<.i.-?
  41784c:	bf3daef9 3f2beb4a bf3ebc1b 3f2ac082     ..=.J.+?..>...*?
  41785c:	bf3fc767 3f299415 bf40d0da 3f286605     g.?...)?..@..f(?
  41786c:	bf41d870 3f273656 bf42de29 3f26050a     p.A.V6'?).B...&?
  41787c:	bf43e200 3f24d225 bf44e3f5 3f239da9     ..C.%.$?..D...#?
  41788c:	bf45e403 3f226799 bf46e22a 3f212ff9     ..E..g"?*.F../!?
  41789c:	bf47de65 3f1ff6cb bf48d8b3 3f1ebc12     e.G....?..H....?
  4178ac:	bf49d112 3f1d7fd1 bf4ac77f 3f1c420c     ..I....?..J..B.?
  4178bc:	bf4bbbf8 3f1b02c6 bf4cae79 3f19c200     ..K....?y.L....?
  4178cc:	bf4d9f02 3f187fc0 bf4e8d90 3f173c07     ..M....?..N..<.?
  4178dc:	bf4f7a1f 3f15f6d9 bf5064af 3f14b039     .zO....?.dP.9..?
  4178ec:	bf514d3d 3f13682a bf5233c6 3f121eb0     =MQ.*h.?.3R....?
  4178fc:	bf531849 3f10d3cd bf53fac3 3f0f8784     I.S....?..S....?
  41790c:	bf54db31 3f0e39da bf55b993 3f0cead0     1.T..9.?..U....?
  41791c:	bf5695e5 3f0b9a6b bf577026 3f0a48ad     ..V.k..?&pW..H.?
  41792c:	bf584853 3f08f59b bf591e6a 3f07a136     SHX....?j.Y.6..?
  41793c:	bf59f26a 3f064b82 bf5ac450 3f04f484     j.Y..K.?P.Z....?
  41794c:	bf5b941a 3f039c3d bf5c61c7 3f0242b1     ..[.=..?.a\..B.?
  41795c:	bf5d2d53 3f00e7e4 bf5df6be 3eff17b2     S-]....?..]....>
  41796c:	bf5ebe05 3efc5d27 bf5f8327 3ef9a02d     ..^.'].>'._.-..>
  41797c:	bf604621 3ef6e0cb bf6106f2 3ef41f07     !F`....>..a....>
  41798c:	bf61c598 3ef15aea bf628210 3eee9479     ..a..Z.>..b.y..>
  41799c:	bf633c5a 3eebcbbb bf63f473 3ee900b7     Z<c....>s.c....>
  4179ac:	bf64aa59 3ee63375 bf655e0b 3ee363fa     Y.d.u3.>.^e..c.>
  4179bc:	bf660f88 3ee0924f bf66becc 3eddbe79     ..f.O..>..f.y..>
  4179cc:	bf676bd8 3edae880 bf6816a8 3ed8106b     .kg....>..h.k..>
  4179dc:	bf68bf3c 3ed53641 bf696591 3ed25a09     <.h.A6.>.ei..Z.>
  4179ec:	bf6a09a7 3ecf7bca bf6aab7b 3ecc9b8b     ..j..{.>{.j....>
  4179fc:	bf6b4b0c 3ec9b953 bf6be858 3ec6d529     .Kk.S..>X.k.)..>
  417a0c:	bf6c835e 3ec3ef15 bf6d1c1d 3ec1071e     ^.l....>..m....>
  417a1c:	bf6db293 3ebe1d4a bf6e46be 3ebb31a0     ..m.J..>.Fn..1.>
  417a2c:	bf6ed89e 3eb8442a bf6f6830 3eb554ec     ..n.*D.>0ho..T.>
  417a3c:	bf6ff573 3eb263ef bf708066 3eaf713a     s.o..c.>f.p.:q.>
  417a4c:	bf710908 3eac7cd4 bf718f57 3ea986c4     ..q..|.>W.q....>
  417a5c:	bf721352 3ea68f12 bf7294f8 3ea395c5     R.r....>..r....>
  417a6c:	bf731447 3ea09ae5 bf73913f 3e9d9e78     G.s....>?.s.x..>
  417a7c:	bf740bdd 3e9aa086 bf748422 3e97a117     ..t....>".t....>
  417a8c:	bf74fa0b 3e94a031 bf756d97 3e919ddd     ..t.1..>.mu....>
  417a9c:	bf75dec6 3e8e9a22 bf764d97 3e8b9507     ..u."..>.Mv....>
  417aac:	bf76ba07 3e888e93 bf772417 3e8586ce     ..v....>.$w....>
  417abc:	bf778bc5 3e827dc0 bf77f110 3e7ee6e1     ..w..}.>..w...~>
  417acc:	bf7853f8 3e78cfcc bf78b47b 3e72b651     .Sx...x>{.x.Q.r>
  417adc:	bf791298 3e6c9a7f bf796e4e 3e667c66     ..y...l>Nny.f|f>
  417aec:	bf79c79d 3e605c13 bf7a1e84 3e5a3997     ..y..\`>..z..9Z>
  417afc:	bf7a7302 3e541501 bf7ac516 3e4dee60     .sz...T>..z.`.M>
  417b0c:	bf7b14be 3e47c5c2 bf7b61fc 3e419b37     ..{...G>.a{.7.A>
  417b1c:	bf7baccd 3e3b6ecf bf7bf531 3e354098     ..{..n;>1.{..@5>
  417b2c:	bf7c3b28 3e2f10a2 bf7c7eb0 3e28defc     (;|.../>.~|...(>
  417b3c:	bf7cbfc9 3e22abb6 bf7cfe73 3e1c76de     ..|...">s.|..v.>
  417b4c:	bf7d3aac 3e164083 bf7d7474 3e1008b7     .:}..@.>tt}....>
  417b5c:	bf7dabcc 3e09cf86 bf7de0b1 3e039502     ..}....>..}....>
  417b6c:	bf7e1324 3dfab273 bf7e4323 3dee3876     $.~.s..=#C~.v8.=
  417b7c:	bf7e70b0 3de1bc2e bf7e9bc9 3dd53db9     .p~....=..~..=.=
  417b8c:	bf7ec46d 3dc8bd36 bf7eea9d 3dbc3ac3     m.~.6..=..~..:.=
  417b9c:	bf7f0e58 3dafb680 bf7f2f9d 3da3308c     X......=./...0.=
  417bac:	bf7f4e6d 3d96a905 bf7f6ac7 3d8a200a     mN.....=.j... .=
  417bbc:	bf7f84ab 3d7b2b74 bf7f9c18 3d621468     ....t+{=....h.b=
  417bcc:	bf7fb10f 3d48fb2f bf7fc38f 3d2fe007     ..../.H=....../=
  417bdc:	bf7fd398 3d16c32c bf7fe129 3cfb49b9     ....,..=)....I.<
  417bec:	bf7fec43 3cc90ab0 bf7ff4e6 3c96c9b6     C......<.......<
  417bfc:	bf7ffb11 3c490e90 bf7ffec4 3bc90f89     ......I<.......;
  417c0c:	bf800000 00000000 bf7ffec4 bbc90f89     ................
  417c1c:	bf7ffb11 bc490e90 bf7ff4e6 bc96c9b6     ......I.........
  417c2c:	bf7fec43 bcc90ab0 bf7fe129 bcfb49b9     C.......)....I..
  417c3c:	bf7fd398 bd16c32c bf7fc38f bd2fe007     ....,........./.
  417c4c:	bf7fb10f bd48fb2f bf7f9c18 bd621468     ..../.H.....h.b.
  417c5c:	bf7f84ab bd7b2b74 bf7f6ac7 bd8a200a     ....t+{..j... ..
  417c6c:	bf7f4e6d bd96a905 bf7f2f9d bda3308c     mN......./...0..
  417c7c:	bf7f0e58 bdafb680 bf7eea9d bdbc3ac3     X.........~..:..
  417c8c:	bf7ec46d bdc8bd36 bf7e9bc9 bdd53db9     m.~.6.....~..=..
  417c9c:	bf7e70b0 bde1bc2e bf7e4323 bdee3876     .p~.....#C~.v8..
  417cac:	bf7e1324 bdfab273 bf7de0b1 be039502     $.~.s.....}.....
  417cbc:	bf7dabcc be09cf86 bf7d7474 be1008b7     ..}.....tt}.....
  417ccc:	bf7d3aac be164083 bf7cfe73 be1c76de     .:}..@..s.|..v..
  417cdc:	bf7cbfc9 be22abb6 bf7c7eb0 be28defc     ..|..."..~|...(.
  417cec:	bf7c3b28 be2f10a2 bf7bf531 be354098     (;|.../.1.{..@5.
  417cfc:	bf7baccd be3b6ecf bf7b61fc be419b37     ..{..n;..a{.7.A.
  417d0c:	bf7b14be be47c5c2 bf7ac516 be4dee60     ..{...G...z.`.M.
  417d1c:	bf7a7302 be541501 bf7a1e84 be5a3997     .sz...T...z..9Z.
  417d2c:	bf79c79d be605c13 bf796e4e be667c66     ..y..\`.Nny.f|f.
  417d3c:	bf791298 be6c9a7f bf78b47b be72b651     ..y...l.{.x.Q.r.
  417d4c:	bf7853f8 be78cfcc bf77f110 be7ee6e1     .Sx...x...w...~.
  417d5c:	bf778bc5 be827dc0 bf772417 be8586ce     ..w..}...$w.....
  417d6c:	bf76ba07 be888e93 bf764d97 be8b9507     ..v......Mv.....
  417d7c:	bf75dec6 be8e9a22 bf756d97 be919ddd     ..u."....mu.....
  417d8c:	bf74fa0b be94a031 bf748422 be97a117     ..t.1...".t.....
  417d9c:	bf740bdd be9aa086 bf73913f be9d9e78     ..t.....?.s.x...
  417dac:	bf731447 bea09ae5 bf7294f8 bea395c5     G.s.......r.....
  417dbc:	bf721352 bea68f12 bf718f57 bea986c4     R.r.....W.q.....
  417dcc:	bf710908 beac7cd4 bf708066 beaf713a     ..q..|..f.p.:q..
  417ddc:	bf6ff573 beb263ef bf6f6830 beb554ec     s.o..c..0ho..T..
  417dec:	bf6ed89e beb8442a bf6e46be bebb31a0     ..n.*D...Fn..1..
  417dfc:	bf6db293 bebe1d4a bf6d1c1d bec1071e     ..m.J.....m.....
  417e0c:	bf6c835e bec3ef15 bf6be858 bec6d529     ^.l.....X.k.)...
  417e1c:	bf6b4b0c bec9b953 bf6aab7b becc9b8b     .Kk.S...{.j.....
  417e2c:	bf6a09a7 becf7bca bf696591 bed25a09     ..j..{...ei..Z..
  417e3c:	bf68bf3c bed53641 bf6816a8 bed8106b     <.h.A6....h.k...
  417e4c:	bf676bd8 bedae880 bf66becc beddbe79     .kg.......f.y...
  417e5c:	bf660f88 bee0924f bf655e0b bee363fa     ..f.O....^e..c..
  417e6c:	bf64aa59 bee63375 bf63f473 bee900b7     Y.d.u3..s.c.....
  417e7c:	bf633c5a beebcbbb bf628210 beee9479     Z<c.......b.y...
  417e8c:	bf61c598 bef15aea bf6106f2 bef41f07     ..a..Z....a.....
  417e9c:	bf604621 bef6e0cb bf5f8327 bef9a02d     !F`.....'._.-...
  417eac:	bf5ebe05 befc5d27 bf5df6be beff17b2     ..^.']....].....
  417ebc:	bf5d2d53 bf00e7e4 bf5c61c7 bf0242b1     S-]......a\..B..
  417ecc:	bf5b941a bf039c3d bf5ac450 bf04f484     ..[.=...P.Z.....
  417edc:	bf59f26a bf064b82 bf591e6a bf07a136     j.Y..K..j.Y.6...
  417eec:	bf584853 bf08f59b bf577026 bf0a48ad     SHX.....&pW..H..
  417efc:	bf5695e5 bf0b9a6b bf55b993 bf0cead0     ..V.k.....U.....
  417f0c:	bf54db31 bf0e39da bf53fac3 bf0f8784     1.T..9....S.....
  417f1c:	bf531849 bf10d3cd bf5233c6 bf121eb0     I.S......3R.....
  417f2c:	bf514d3d bf13682a bf5064af bf14b039     =MQ.*h...dP.9...
  417f3c:	bf4f7a1f bf15f6d9 bf4e8d90 bf173c07     .zO.......N..<..
  417f4c:	bf4d9f02 bf187fc0 bf4cae79 bf19c200     ..M.....y.L.....
  417f5c:	bf4bbbf8 bf1b02c6 bf4ac77f bf1c420c     ..K.......J..B..
  417f6c:	bf49d112 bf1d7fd1 bf48d8b3 bf1ebc12     ..I.......H.....
  417f7c:	bf47de65 bf1ff6cb bf46e22a bf212ff9     e.G.....*.F../!.
  417f8c:	bf45e403 bf226799 bf44e3f5 bf239da9     ..E..g"...D...#.
  417f9c:	bf43e200 bf24d225 bf42de29 bf26050a     ..C.%.$.).B...&.
  417fac:	bf41d870 bf273656 bf40d0da bf286605     p.A.V6'...@..f(.
  417fbc:	bf3fc767 bf299415 bf3ebc1b bf2ac082     g.?...)...>...*.
  417fcc:	bf3daef9 bf2beb4a bf3ca003 bf2d1469     ..=.J.+...<.i.-.
  417fdc:	bf3b8f3b bf2e3bde bf3a7ca4 bf2f61a5     ;.;..;...|:..a/.
  417fec:	bf396842 bf3085bb bf385216 bf31a81d     Bh9...0..R8...1.
  417ffc:	bf373a23 bf32c8c9 bf36206c bf33e7bc     #:7...2.l 6...3.
  41800c:	bf3504f3 bf3504f3 bf33e7bc bf36206c     ..5...5...3.l 6.
  41801c:	bf32c8c9 bf373a23 bf31a81d bf385216     ..2.#:7...1..R8.
  41802c:	bf3085bb bf396842 bf2f61a5 bf3a7ca4     ..0.Bh9..a/..|:.
  41803c:	bf2e3bde bf3b8f3b bf2d1469 bf3ca003     .;..;.;.i.-...<.
  41804c:	bf2beb4a bf3daef9 bf2ac082 bf3ebc1b     J.+...=...*...>.
  41805c:	bf299415 bf3fc767 bf286605 bf40d0da     ..).g.?..f(...@.
  41806c:	bf273656 bf41d870 bf26050a bf42de29     V6'.p.A...&.).B.
  41807c:	bf24d225 bf43e200 bf239da9 bf44e3f5     %.$...C...#...D.
  41808c:	bf226799 bf45e403 bf212ff9 bf46e22a     .g"...E../!.*.F.
  41809c:	bf1ff6cb bf47de65 bf1ebc12 bf48d8b3     ....e.G.......H.
  4180ac:	bf1d7fd1 bf49d112 bf1c420c bf4ac77f     ......I..B....J.
  4180bc:	bf1b02c6 bf4bbbf8 bf19c200 bf4cae79     ......K.....y.L.
  4180cc:	bf187fc0 bf4d9f02 bf173c07 bf4e8d90     ......M..<....N.
  4180dc:	bf15f6d9 bf4f7a1f bf14b039 bf5064af     .....zO.9....dP.
  4180ec:	bf13682a bf514d3d bf121eb0 bf5233c6     *h..=MQ......3R.
  4180fc:	bf10d3cd bf531849 bf0f8784 bf53fac3     ....I.S.......S.
  41810c:	bf0e39da bf54db31 bf0cead0 bf55b993     .9..1.T.......U.
  41811c:	bf0b9a6b bf5695e5 bf0a48ad bf577026     k.....V..H..&pW.
  41812c:	bf08f59b bf584853 bf07a136 bf591e6a     ....SHX.6...j.Y.
  41813c:	bf064b82 bf59f26a bf04f484 bf5ac450     .K..j.Y.....P.Z.
  41814c:	bf039c3d bf5b941a bf0242b1 bf5c61c7     =.....[..B...a\.
  41815c:	bf00e7e4 bf5d2d53 beff17b2 bf5df6be     ....S-].......].
  41816c:	befc5d27 bf5ebe05 bef9a02d bf5f8327     ']....^.-...'._.
  41817c:	bef6e0cb bf604621 bef41f07 bf6106f2     ....!F`.......a.
  41818c:	bef15aea bf61c598 beee9479 bf628210     .Z....a.y.....b.
  41819c:	beebcbbb bf633c5a bee900b7 bf63f473     ....Z<c.....s.c.
  4181ac:	bee63375 bf64aa59 bee363fa bf655e0b     u3..Y.d..c...^e.
  4181bc:	bee0924f bf660f88 beddbe79 bf66becc     O.....f.y.....f.
  4181cc:	bedae880 bf676bd8 bed8106b bf6816a8     .....kg.k.....h.
  4181dc:	bed53641 bf68bf3c bed25a09 bf696591     A6..<.h..Z...ei.
  4181ec:	becf7bca bf6a09a7 becc9b8b bf6aab7b     .{....j.....{.j.
  4181fc:	bec9b953 bf6b4b0c bec6d529 bf6be858     S....Kk.)...X.k.
  41820c:	bec3ef15 bf6c835e bec1071e bf6d1c1d     ....^.l.......m.
  41821c:	bebe1d4a bf6db293 bebb31a0 bf6e46be     J.....m..1...Fn.
  41822c:	beb8442a bf6ed89e beb554ec bf6f6830     *D....n..T..0ho.
  41823c:	beb263ef bf6ff573 beaf713a bf708066     .c..s.o.:q..f.p.
  41824c:	beac7cd4 bf710908 bea986c4 bf718f57     .|....q.....W.q.
  41825c:	bea68f12 bf721352 bea395c5 bf7294f8     ....R.r.......r.
  41826c:	bea09ae5 bf731447 be9d9e78 bf73913f     ....G.s.x...?.s.
  41827c:	be9aa086 bf740bdd be97a117 bf748422     ......t.....".t.
  41828c:	be94a031 bf74fa0b be919ddd bf756d97     1.....t......mu.
  41829c:	be8e9a22 bf75dec6 be8b9507 bf764d97     ".....u......Mv.
  4182ac:	be888e93 bf76ba07 be8586ce bf772417     ......v......$w.
  4182bc:	be827dc0 bf778bc5 be7ee6e1 bf77f110     .}....w...~...w.
  4182cc:	be78cfcc bf7853f8 be72b651 bf78b47b     ..x..Sx.Q.r.{.x.
  4182dc:	be6c9a7f bf791298 be667c66 bf796e4e     ..l...y.f|f.Nny.
  4182ec:	be605c13 bf79c79d be5a3997 bf7a1e84     .\`...y..9Z...z.
  4182fc:	be541501 bf7a7302 be4dee60 bf7ac516     ..T..sz.`.M...z.
  41830c:	be47c5c2 bf7b14be be419b37 bf7b61fc     ..G...{.7.A..a{.
  41831c:	be3b6ecf bf7baccd be354098 bf7bf531     .n;...{..@5.1.{.
  41832c:	be2f10a2 bf7c3b28 be28defc bf7c7eb0     ../.(;|...(..~|.
  41833c:	be22abb6 bf7cbfc9 be1c76de bf7cfe73     .."...|..v..s.|.
  41834c:	be164083 bf7d3aac be1008b7 bf7d7474     .@...:}.....tt}.
  41835c:	be09cf86 bf7dabcc be039502 bf7de0b1     ......}.......}.
  41836c:	bdfab273 bf7e1324 bdee3876 bf7e4323     s...$.~.v8..#C~.
  41837c:	bde1bc2e bf7e70b0 bdd53db9 bf7e9bc9     .....p~..=....~.
  41838c:	bdc8bd36 bf7ec46d bdbc3ac3 bf7eea9d     6...m.~..:....~.
  41839c:	bdafb680 bf7f0e58 bda3308c bf7f2f9d     ....X....0.../..
  4183ac:	bd96a905 bf7f4e6d bd8a200a bf7f6ac7     ....mN... ...j..
  4183bc:	bd7b2b74 bf7f84ab bd621468 bf7f9c18     t+{.....h.b.....
  4183cc:	bd48fb2f bf7fb10f bd2fe007 bf7fc38f     /.H......./.....
  4183dc:	bd16c32c bf7fd398 bcfb49b9 bf7fe129     ,........I..)...
  4183ec:	bcc90ab0 bf7fec43 bc96c9b6 bf7ff4e6     ....C...........
  4183fc:	bc490e90 bf7ffb11 bbc90f89 bf7ffec4     ..I.............
  41840c:	80000000 bf800000 3bc90f89 bf7ffec4     ...........;....
  41841c:	3c490e90 bf7ffb11 3c96c9b6 bf7ff4e6     ..I<.......<....
  41842c:	3cc90ab0 bf7fec43 3cfb49b9 bf7fe129     ...<C....I.<)...
  41843c:	3d16c32c bf7fd398 3d2fe007 bf7fc38f     ,..=....../=....
  41844c:	3d48fb2f bf7fb10f 3d621468 bf7f9c18     /.H=....h.b=....
  41845c:	3d7b2b74 bf7f84ab 3d8a200a bf7f6ac7     t+{=..... .=.j..
  41846c:	3d96a905 bf7f4e6d 3da3308c bf7f2f9d     ...=mN...0.=./..
  41847c:	3dafb680 bf7f0e58 3dbc3ac3 bf7eea9d     ...=X....:.=..~.
  41848c:	3dc8bd36 bf7ec46d 3dd53db9 bf7e9bc9     6..=m.~..=.=..~.
  41849c:	3de1bc2e bf7e70b0 3dee3876 bf7e4323     ...=.p~.v8.=#C~.
  4184ac:	3dfab273 bf7e1324 3e039502 bf7de0b1     s..=$.~....>..}.
  4184bc:	3e09cf86 bf7dabcc 3e1008b7 bf7d7474     ...>..}....>tt}.
  4184cc:	3e164083 bf7d3aac 3e1c76de bf7cfe73     .@.>.:}..v.>s.|.
  4184dc:	3e22abb6 bf7cbfc9 3e28defc bf7c7eb0     ..">..|...(>.~|.
  4184ec:	3e2f10a2 bf7c3b28 3e354098 bf7bf531     ../>(;|..@5>1.{.
  4184fc:	3e3b6ecf bf7baccd 3e419b37 bf7b61fc     .n;>..{.7.A>.a{.
  41850c:	3e47c5c2 bf7b14be 3e4dee60 bf7ac516     ..G>..{.`.M>..z.
  41851c:	3e541501 bf7a7302 3e5a3997 bf7a1e84     ..T>.sz..9Z>..z.
  41852c:	3e605c13 bf79c79d 3e667c66 bf796e4e     .\`>..y.f|f>Nny.
  41853c:	3e6c9a7f bf791298 3e72b651 bf78b47b     ..l>..y.Q.r>{.x.
  41854c:	3e78cfcc bf7853f8 3e7ee6e1 bf77f110     ..x>.Sx...~>..w.
  41855c:	3e827dc0 bf778bc5 3e8586ce bf772417     .}.>..w....>.$w.
  41856c:	3e888e93 bf76ba07 3e8b9507 bf764d97     ...>..v....>.Mv.
  41857c:	3e8e9a22 bf75dec6 3e919ddd bf756d97     "..>..u....>.mu.
  41858c:	3e94a031 bf74fa0b 3e97a117 bf748422     1..>..t....>".t.
  41859c:	3e9aa086 bf740bdd 3e9d9e78 bf73913f     ...>..t.x..>?.s.
  4185ac:	3ea09ae5 bf731447 3ea395c5 bf7294f8     ...>G.s....>..r.
  4185bc:	3ea68f12 bf721352 3ea986c4 bf718f57     ...>R.r....>W.q.
  4185cc:	3eac7cd4 bf710908 3eaf713a bf708066     .|.>..q.:q.>f.p.
  4185dc:	3eb263ef bf6ff573 3eb554ec bf6f6830     .c.>s.o..T.>0ho.
  4185ec:	3eb8442a bf6ed89e 3ebb31a0 bf6e46be     *D.>..n..1.>.Fn.
  4185fc:	3ebe1d4a bf6db293 3ec1071e bf6d1c1d     J..>..m....>..m.
  41860c:	3ec3ef15 bf6c835e 3ec6d529 bf6be858     ...>^.l.)..>X.k.
  41861c:	3ec9b953 bf6b4b0c 3ecc9b8b bf6aab7b     S..>.Kk....>{.j.
  41862c:	3ecf7bca bf6a09a7 3ed25a09 bf696591     .{.>..j..Z.>.ei.
  41863c:	3ed53641 bf68bf3c 3ed8106b bf6816a8     A6.><.h.k..>..h.
  41864c:	3edae880 bf676bd8 3eddbe79 bf66becc     ...>.kg.y..>..f.
  41865c:	3ee0924f bf660f88 3ee363fa bf655e0b     O..>..f..c.>.^e.
  41866c:	3ee63375 bf64aa59 3ee900b7 bf63f473     u3.>Y.d....>s.c.
  41867c:	3eebcbbb bf633c5a 3eee9479 bf628210     ...>Z<c.y..>..b.
  41868c:	3ef15aea bf61c598 3ef41f07 bf6106f2     .Z.>..a....>..a.
  41869c:	3ef6e0cb bf604621 3ef9a02d bf5f8327     ...>!F`.-..>'._.
  4186ac:	3efc5d27 bf5ebe05 3eff17b2 bf5df6be     '].>..^....>..].
  4186bc:	3f00e7e4 bf5d2d53 3f0242b1 bf5c61c7     ...?S-]..B.?.a\.
  4186cc:	3f039c3d bf5b941a 3f04f484 bf5ac450     =..?..[....?P.Z.
  4186dc:	3f064b82 bf59f26a 3f07a136 bf591e6a     .K.?j.Y.6..?j.Y.
  4186ec:	3f08f59b bf584853 3f0a48ad bf577026     ...?SHX..H.?&pW.
  4186fc:	3f0b9a6b bf5695e5 3f0cead0 bf55b993     k..?..V....?..U.
  41870c:	3f0e39da bf54db31 3f0f8784 bf53fac3     .9.?1.T....?..S.
  41871c:	3f10d3cd bf531849 3f121eb0 bf5233c6     ...?I.S....?.3R.
  41872c:	3f13682a bf514d3d 3f14b039 bf5064af     *h.?=MQ.9..?.dP.
  41873c:	3f15f6d9 bf4f7a1f 3f173c07 bf4e8d90     ...?.zO..<.?..N.
  41874c:	3f187fc0 bf4d9f02 3f19c200 bf4cae79     ...?..M....?y.L.
  41875c:	3f1b02c6 bf4bbbf8 3f1c420c bf4ac77f     ...?..K..B.?..J.
  41876c:	3f1d7fd1 bf49d112 3f1ebc12 bf48d8b3     ...?..I....?..H.
  41877c:	3f1ff6cb bf47de65 3f212ff9 bf46e22a     ...?e.G../!?*.F.
  41878c:	3f226799 bf45e403 3f239da9 bf44e3f5     .g"?..E...#?..D.
  41879c:	3f24d225 bf43e200 3f26050a bf42de29     %.$?..C...&?).B.
  4187ac:	3f273656 bf41d870 3f286605 bf40d0da     V6'?p.A..f(?..@.
  4187bc:	3f299415 bf3fc767 3f2ac082 bf3ebc1b     ..)?g.?...*?..>.
  4187cc:	3f2beb4a bf3daef9 3f2d1469 bf3ca003     J.+?..=.i.-?..<.
  4187dc:	3f2e3bde bf3b8f3b 3f2f61a5 bf3a7ca4     .;.?;.;..a/?.|:.
  4187ec:	3f3085bb bf396842 3f31a81d bf385216     ..0?Bh9...1?.R8.
  4187fc:	3f32c8c9 bf373a23 3f33e7bc bf36206c     ..2?#:7...3?l 6.
  41880c:	3f3504f3 bf3504f3 3f36206c bf33e7bc     ..5?..5.l 6?..3.
  41881c:	3f373a23 bf32c8c9 3f385216 bf31a81d     #:7?..2..R8?..1.
  41882c:	3f396842 bf3085bb 3f3a7ca4 bf2f61a5     Bh9?..0..|:?.a/.
  41883c:	3f3b8f3b bf2e3bde 3f3ca003 bf2d1469     ;.;?.;....<?i.-.
  41884c:	3f3daef9 bf2beb4a 3f3ebc1b bf2ac082     ..=?J.+...>?..*.
  41885c:	3f3fc767 bf299415 3f40d0da bf286605     g.??..)...@?.f(.
  41886c:	3f41d870 bf273656 3f42de29 bf26050a     p.A?V6'.).B?..&.
  41887c:	3f43e200 bf24d225 3f44e3f5 bf239da9     ..C?%.$...D?..#.
  41888c:	3f45e403 bf226799 3f46e22a bf212ff9     ..E?.g".*.F?./!.
  41889c:	3f47de65 bf1ff6cb 3f48d8b3 bf1ebc12     e.G?......H?....
  4188ac:	3f49d112 bf1d7fd1 3f4ac77f bf1c420c     ..I?......J?.B..
  4188bc:	3f4bbbf8 bf1b02c6 3f4cae79 bf19c200     ..K?....y.L?....
  4188cc:	3f4d9f02 bf187fc0 3f4e8d90 bf173c07     ..M?......N?.<..
  4188dc:	3f4f7a1f bf15f6d9 3f5064af bf14b039     .zO?.....dP?9...
  4188ec:	3f514d3d bf13682a 3f5233c6 bf121eb0     =MQ?*h...3R?....
  4188fc:	3f531849 bf10d3cd 3f53fac3 bf0f8784     I.S?......S?....
  41890c:	3f54db31 bf0e39da 3f55b993 bf0cead0     1.T?.9....U?....
  41891c:	3f5695e5 bf0b9a6b 3f577026 bf0a48ad     ..V?k...&pW?.H..
  41892c:	3f584853 bf08f59b 3f591e6a bf07a136     SHX?....j.Y?6...
  41893c:	3f59f26a bf064b82 3f5ac450 bf04f484     j.Y?.K..P.Z?....
  41894c:	3f5b941a bf039c3d 3f5c61c7 bf0242b1     ..[?=....a\?.B..
  41895c:	3f5d2d53 bf00e7e4 3f5df6be beff17b2     S-]?......]?....
  41896c:	3f5ebe05 befc5d27 3f5f8327 bef9a02d     ..^?']..'._?-...
  41897c:	3f604621 bef6e0cb 3f6106f2 bef41f07     !F`?......a?....
  41898c:	3f61c598 bef15aea 3f628210 beee9479     ..a?.Z....b?y...
  41899c:	3f633c5a beebcbbb 3f63f473 bee900b7     Z<c?....s.c?....
  4189ac:	3f64aa59 bee63375 3f655e0b bee363fa     Y.d?u3...^e?.c..
  4189bc:	3f660f88 bee0924f 3f66becc beddbe79     ..f?O.....f?y...
  4189cc:	3f676bd8 bedae880 3f6816a8 bed8106b     .kg?......h?k...
  4189dc:	3f68bf3c bed53641 3f696591 bed25a09     <.h?A6...ei?.Z..
  4189ec:	3f6a09a7 becf7bca 3f6aab7b becc9b8b     ..j?.{..{.j?....
  4189fc:	3f6b4b0c bec9b953 3f6be858 bec6d529     .Kk?S...X.k?)...
  418a0c:	3f6c835e bec3ef15 3f6d1c1d bec1071e     ^.l?......m?....
  418a1c:	3f6db293 bebe1d4a 3f6e46be bebb31a0     ..m?J....Fn?.1..
  418a2c:	3f6ed89e beb8442a 3f6f6830 beb554ec     ..n?*D..0ho?.T..
  418a3c:	3f6ff573 beb263ef 3f708066 beaf713a     s.o?.c..f.p?:q..
  418a4c:	3f710908 beac7cd4 3f718f57 bea986c4     ..q?.|..W.q?....
  418a5c:	3f721352 bea68f12 3f7294f8 bea395c5     R.r?......r?....
  418a6c:	3f731447 bea09ae5 3f73913f be9d9e78     G.s?....?.s?x...
  418a7c:	3f740bdd be9aa086 3f748422 be97a117     ..t?....".t?....
  418a8c:	3f74fa0b be94a031 3f756d97 be919ddd     ..t?1....mu?....
  418a9c:	3f75dec6 be8e9a22 3f764d97 be8b9507     ..u?"....Mv?....
  418aac:	3f76ba07 be888e93 3f772417 be8586ce     ..v?.....$w?....
  418abc:	3f778bc5 be827dc0 3f77f110 be7ee6e1     ..w?.}....w?..~.
  418acc:	3f7853f8 be78cfcc 3f78b47b be72b651     .Sx?..x.{.x?Q.r.
  418adc:	3f791298 be6c9a7f 3f796e4e be667c66     ..y?..l.Nny?f|f.
  418aec:	3f79c79d be605c13 3f7a1e84 be5a3997     ..y?.\`...z?.9Z.
  418afc:	3f7a7302 be541501 3f7ac516 be4dee60     .sz?..T...z?`.M.
  418b0c:	3f7b14be be47c5c2 3f7b61fc be419b37     ..{?..G..a{?7.A.
  418b1c:	3f7baccd be3b6ecf 3f7bf531 be354098     ..{?.n;.1.{?.@5.
  418b2c:	3f7c3b28 be2f10a2 3f7c7eb0 be28defc     (;|?../..~|?..(.
  418b3c:	3f7cbfc9 be22abb6 3f7cfe73 be1c76de     ..|?..".s.|?.v..
  418b4c:	3f7d3aac be164083 3f7d7474 be1008b7     .:}?.@..tt}?....
  418b5c:	3f7dabcc be09cf86 3f7de0b1 be039502     ..}?......}?....
  418b6c:	3f7e1324 bdfab273 3f7e4323 bdee3876     $.~?s...#C~?v8..
  418b7c:	3f7e70b0 bde1bc2e 3f7e9bc9 bdd53db9     .p~?......~?.=..
  418b8c:	3f7ec46d bdc8bd36 3f7eea9d bdbc3ac3     m.~?6.....~?.:..
  418b9c:	3f7f0e58 bdafb680 3f7f2f9d bda3308c     X..?...../.?.0..
  418bac:	3f7f4e6d bd96a905 3f7f6ac7 bd8a200a     mN.?.....j.?. ..
  418bbc:	3f7f84ab bd7b2b74 3f7f9c18 bd621468     ...?t+{....?h.b.
  418bcc:	3f7fb10f bd48fb2f 3f7fc38f bd2fe007     ...?/.H....?../.
  418bdc:	3f7fd398 bd16c32c 3f7fe129 bcfb49b9     ...?,...)..?.I..
  418bec:	3f7fec43 bcc90ab0 3f7ff4e6 bc96c9b6     C..?.......?....
  418bfc:	3f7ffb11 bc490e90 3f7ffec4 bbc90f89     ...?..I....?....

00418c0c <twiddleCoef_32>:
  418c0c:	3f800000 00000000 3f7b14be 3e47c5c2     ...?......{?..G>
  418c1c:	3f6c835e 3ec3ef15 3f54db31 3f0e39da     ^.l?...>1.T?.9.?
  418c2c:	3f3504f3 3f3504f3 3f0e39da 3f54db31     ..5?..5?.9.?1.T?
  418c3c:	3ec3ef15 3f6c835e 3e47c5c2 3f7b14be     ...>^.l?..G>..{?
  418c4c:	00000000 3f800000 be47c5c2 3f7b14be     .......?..G...{?
  418c5c:	bec3ef15 3f6c835e bf0e39da 3f54db31     ....^.l?.9..1.T?
  418c6c:	bf3504f3 3f3504f3 bf54db31 3f0e39da     ..5...5?1.T..9.?
  418c7c:	bf6c835e 3ec3ef15 bf7b14be 3e47c5c2     ^.l....>..{...G>
  418c8c:	bf800000 00000000 bf7b14be be47c5c2     ..........{...G.
  418c9c:	bf6c835e bec3ef15 bf54db31 bf0e39da     ^.l.....1.T..9..
  418cac:	bf3504f3 bf3504f3 bf0e39da bf54db31     ..5...5..9..1.T.
  418cbc:	bec3ef15 bf6c835e be47c5c2 bf7b14be     ....^.l...G...{.
  418ccc:	80000000 bf800000 3e47c5c2 bf7b14be     ..........G>..{.
  418cdc:	3ec3ef15 bf6c835e 3f0e39da bf54db31     ...>^.l..9.?1.T.
  418cec:	3f3504f3 bf3504f3 3f54db31 bf0e39da     ..5?..5.1.T?.9..
  418cfc:	3f6c835e bec3ef15 3f7b14be be47c5c2     ^.l?......{?..G.

00418d0c <armBitRevIndexTable1024>:
  418d0c:	10000008 02000010 12000018 04000020     ............ ...
  418d1c:	14000028 06000030 16000038 08000040     (...0...8...@...
  418d2c:	18000048 0a000050 1a000058 0c000060     H...P...X...`...
  418d3c:	1c000068 0e000070 1e000078 08000080     h...p...x.......
  418d4c:	10400088 02400090 12400098 044000a0     ..@...@...@...@.
  418d5c:	144000a8 064000b0 164000b8 084000c0     ..@...@...@...@.
  418d6c:	184000c8 0a4000d0 1a4000d8 0c4000e0     ..@...@...@...@.
  418d7c:	1c4000e8 0e4000f0 1e4000f8 08000100     ..@...@...@.....
  418d8c:	10800108 02800110 12800118 04800120     ............ ...
  418d9c:	14800128 06800130 16800138 08800140     (...0...8...@...
  418dac:	18800148 0a800150 1a800158 0c800160     H...P...X...`...
  418dbc:	1c800168 0e800170 1e800178 08400180     h...p...x.....@.
  418dcc:	10c00188 02c00190 12c00198 04c001a0     ................
  418ddc:	14c001a8 06c001b0 16c001b8 08c001c0     ................
  418dec:	18c001c8 0ac001d0 1ac001d8 0cc001e0     ................
  418dfc:	1cc001e8 0ec001f0 1ec001f8 08000200     ................
  418e0c:	11000208 03000210 13000218 05000220     ............ ...
  418e1c:	15000228 07000230 17000238 09000240     (...0...8...@...
  418e2c:	19000248 0b000250 1b000258 0d000260     H...P...X...`...
  418e3c:	1d000268 0f000270 1f000278 08800280     h...p...x.......
  418e4c:	11400288 03400290 13400298 054002a0     ..@...@...@...@.
  418e5c:	154002a8 074002b0 174002b8 094002c0     ..@...@...@...@.
  418e6c:	194002c8 0b4002d0 1b4002d8 0d4002e0     ..@...@...@...@.
  418e7c:	1d4002e8 0f4002f0 1f4002f8 08400300     ..@...@...@...@.
  418e8c:	11800308 03800310 13800318 05800320     ............ ...
  418e9c:	15800328 07800330 17800338 09800340     (...0...8...@...
  418eac:	19800348 0b800350 1b800358 0d800360     H...P...X...`...
  418ebc:	1d800368 0f800370 1f800378 08c00380     h...p...x.......
  418ecc:	11c00388 03c00390 13c00398 05c003a0     ................
  418edc:	15c003a8 07c003b0 17c003b8 09c003c0     ................
  418eec:	19c003c8 0bc003d0 1bc003d8 0dc003e0     ................
  418efc:	1dc003e8 0fc003f0 1fc003f8 10000400     ................
  418f0c:	10080408 11000410 12080418 10080420     ............ ...
  418f1c:	14080428 06080430 16080438 08080440     (...0...8...@...
  418f2c:	18080448 0a080450 1a080458 0c080460     H...P...X...`...
  418f3c:	1c080468 0e080470 1e080478 18000480     h...p...x.......
  418f4c:	10480488 19000490 12480498 180804a0     ..H.......H.....
  418f5c:	144804a8 064804b0 164804b8 084804c0     ..H...H...H...H.
  418f6c:	184804c8 0a4804d0 1a4804d8 0c4804e0     ..H...H...H...H.
  418f7c:	1c4804e8 0e4804f0 1e4804f8 10400500     ..H...H...H...@.
  418f8c:	10880508 11400510 12880518 10480520     ......@..... .H.
  418f9c:	14880528 06880530 16880538 08880540     (...0...8...@...
  418fac:	18880548 0a880550 1a880558 0c880560     H...P...X...`...
  418fbc:	1c880568 0e880570 1e880578 18400580     h...p...x.....@.
  418fcc:	10c80588 19400590 12c80598 184805a0     ......@.......H.
  418fdc:	14c805a8 06c805b0 16c805b8 08c805c0     ................
  418fec:	18c805c8 0ac805d0 1ac805d8 0cc805e0     ................
  418ffc:	1cc805e8 0ec805f0 1ec805f8 10800600     ................
  41900c:	11080608 11800610 13080618 10880620     ............ ...
  41901c:	15080628 07080630 17080638 09080640     (...0...8...@...
  41902c:	19080648 0b080650 1b080658 0d080660     H...P...X...`...
  41903c:	1d080668 0f080670 1f080678 18800680     h...p...x.......
  41904c:	11480688 19800690 13480698 188806a0     ..H.......H.....
  41905c:	154806a8 074806b0 174806b8 094806c0     ..H...H...H...H.
  41906c:	194806c8 0b4806d0 1b4806d8 0d4806e0     ..H...H...H...H.
  41907c:	1d4806e8 0f4806f0 1f4806f8 10c00700     ..H...H...H.....
  41908c:	11880708 11c00710 13880718 10c80720     ............ ...
  41909c:	15880728 07880730 17880738 09880740     (...0...8...@...
  4190ac:	19880748 0b880750 1b880758 0d880760     H...P...X...`...
  4190bc:	1d880768 0f880770 1f880778 18c00780     h...p...x.......
  4190cc:	11c80788 19c00790 13c80798 18c807a0     ................
  4190dc:	15c807a8 07c807b0 17c807b8 09c807c0     ................
  4190ec:	19c807c8 0bc807d0 1bc807d8 0dc807e0     ................
  4190fc:	1dc807e8 0fc807f0 1fc807f8 10100808     ................
  41910c:	08400810 12100818 11000820 14100828     ..@..... ...(...
  41911c:	11800830 16100838 18100848 0a100850     0...8...H...P...
  41912c:	1a100858 0c100860 1c100868 0e100870     X...`...h...p...
  41913c:	1e100878 0a000880 10500888 0b000890     x.........P.....
  41914c:	12500898 0a0808a0 145008a8 0b0808b0     ..P.......P.....
  41915c:	165008b8 0a1008c0 185008c8 0a5008d0     ..P.......P...P.
  41916c:	1a5008d8 0c5008e0 1c5008e8 0e5008f0     ..P...P...P...P.
  41917c:	1e5008f8 10900908 09800910 12900918     ..P.............
  41918c:	19000920 14900928 19800930 16900938      ...(...0...8...
  41919c:	0b000940 18900948 0a900950 1a900958     @...H...P...X...
  4191ac:	0c900960 1c900968 0e900970 1e900978     `...h...p...x...
  4191bc:	0a400980 10d00988 0b400990 12d00998     ..@.......@.....
  4191cc:	0a4809a0 14d009a8 0b4809b0 16d009b8     ..H.......H.....
  4191dc:	0a5009c0 18d009c8 0ad009d0 1ad009d8     ..P.............
  4191ec:	0cd009e0 1cd009e8 0ed009f0 1ed009f8     ................
  4191fc:	11100a08 13100a18 11400a20 15100a28     ........ .@.(...
  41920c:	11c00a30 17100a38 19100a48 0b100a50     0...8...H...P...
  41921c:	1b100a58 0d100a60 1d100a68 0f100a70     X...`...h...p...
  41922c:	1f100a78 11500a88 0b800a90 13500a98     x.....P.......P.
  41923c:	11500aa0 15500aa8 0b880ab0 17500ab8     ..P...P.......P.
  41924c:	0b800ac0 19500ac8 0b500ad0 1b500ad8     ......P...P...P.
  41925c:	0d500ae0 1d500ae8 0f500af0 1f500af8     ..P...P...P...P.
  41926c:	11900b08 13900b18 19400b20 15900b28     ........ .@.(...
  41927c:	19c00b30 17900b38 19900b48 0b900b50     0...8...H...P...
  41928c:	1b900b58 0d900b60 1d900b68 0f900b70     X...`...h...p...
  41929c:	1f900b78 11d00b88 0bc00b90 13d00b98     x...............
  4192ac:	19500ba0 15d00ba8 0bc80bb0 17d00bb8     ..P.............
  4192bc:	19d00bc8 1bd00bd8 0dd00be0 1dd00be8     ................
  4192cc:	0fd00bf0 1fd00bf8 12000c00 10180c08     ................
  4192dc:	13000c10 12180c18 12080c20 14180c28     ........ ...(...
  4192ec:	13080c30 16180c38 12100c40 18180c48     0...8...@...H...
  4192fc:	13100c50 1a180c58 12180c60 1c180c68     P...X...`...h...
  41930c:	0e180c70 1e180c78 1a000c80 10580c88     p...x.........X.
  41931c:	1b000c90 12580c98 1a080ca0 14580ca8     ......X.......X.
  41932c:	1b080cb0 16580cb8 1a100cc0 18580cc8     ......X.......X.
  41933c:	1b100cd0 1a580cd8 1a180ce0 1c580ce8     ......X.......X.
  41934c:	0e580cf0 1e580cf8 12400d00 10980d08     ..X...X...@.....
  41935c:	13400d10 12980d18 12480d20 14980d28     ..@..... .H.(...
  41936c:	13480d30 16980d38 12500d40 18980d48     0.H.8...@.P.H...
  41937c:	13500d50 1a980d58 12580d60 1c980d68     P.P.X...`.X.h...
  41938c:	0e980d70 1e980d78 1a400d80 10d80d88     p...x.....@.....
  41939c:	1b400d90 12d80d98 1a480da0 14d80da8     ..@.......H.....
  4193ac:	1b480db0 16d80db8 1a500dc0 18d80dc8     ..H.......P.....
  4193bc:	1b500dd0 1ad80dd8 1a580de0 1cd80de8     ..P.......X.....
  4193cc:	0ed80df0 1ed80df8 12800e00 11180e08     ................
  4193dc:	13800e10 13180e18 12880e20 15180e28     ........ ...(...
  4193ec:	13880e30 17180e38 12900e40 19180e48     0...8...@...H...
  4193fc:	13900e50 1b180e58 12980e60 1d180e68     P...X...`...h...
  41940c:	0f180e70 1f180e78 1a800e80 11580e88     p...x.........X.
  41941c:	1b800e90 13580e98 1a880ea0 15580ea8     ......X.......X.
  41942c:	1b880eb0 17580eb8 1a900ec0 19580ec8     ......X.......X.
  41943c:	1b900ed0 1b580ed8 1a980ee0 1d580ee8     ......X.......X.
  41944c:	0f580ef0 1f580ef8 12c00f00 11980f08     ..X...X.........
  41945c:	13c00f10 13980f18 12c80f20 15980f28     ........ ...(...
  41946c:	13c80f30 17980f38 12d00f40 19980f48     0...8...@...H...
  41947c:	13d00f50 1b980f58 12d80f60 1d980f68     P...X...`...h...
  41948c:	0f980f70 1f980f78 1ac00f80 11d80f88     p...x...........
  41949c:	1bc00f90 13d80f98 1ac80fa0 15d80fa8     ................
  4194ac:	1bc80fb0 17d80fb8 1ad00fc0 19d80fc8     ................
  4194bc:	1bd00fd0 1bd80fd8 1ad80fe0 1dd80fe8     ................
  4194cc:	1bd80ff0 1fd80ff8 10201008 10401010     .......... ...@.
  4194dc:	12201018 14201028 10881030 16201038     .. .(. .0...8. .
  4194ec:	11001040 18201048 11401050 1a201058     @...H. .P.@.X. .
  4194fc:	12081060 1c201068 12881070 1e201078     `...h. .p...x. .
  41950c:	12001080 12081088 12401090 12601098     ..........@...`.
  41951c:	122010a0 146010a8 126010b0 166010b8     .. ...`...`...`.
  41952c:	130010c0 186010c8 134010d0 1a6010d8     ......`...@...`.
  41953c:	121810e0 1c6010e8 129810f0 1e6010f8     ......`.......`.
  41954c:	12201108 11401110 12a01118 18081120     .. ...@..... ...
  41955c:	14a01128 18881130 16a01138 18a01148     (...0...8...H...
  41956c:	1aa01158 1a081160 1ca01168 1a881170     X...`...h...p...
  41957c:	1ea01178 12101180 12181188 12501190     x.............P.
  41958c:	12e01198 181811a0 14e011a8 189811b0     ................
  41959c:	16e011b8 131011c0 18e011c8 135011d0     ..............P.
  4195ac:	1ae011d8 1a1811e0 1ce011e8 1a9811f0     ................
  4195bc:	1ee011f8 18001200 18081208 18401210     ..............@.
  4195cc:	13201218 18201220 15201228 18601230     .. . . .(. .0.`.
  4195dc:	17201238 19001240 19201248 19401250     8. .@...H. .P.@.
  4195ec:	1b201258 19201260 1d201268 12c81270     X. .`. .h. .p...
  4195fc:	1f201278 1a001280 1a081288 1a401290     x. ...........@.
  41960c:	13601298 1a2012a0 156012a8 1a6012b0     ..`... ...`...`.
  41961c:	176012b8 1b0012c0 196012c8 1b4012d0     ..`.......`...@.
  41962c:	1b6012d8 1b2012e0 1d6012e8 1b6012f0     ..`... ...`...`.
  41963c:	1f6012f8 18101300 18181308 18501310     ..`...........P.
  41964c:	13a01318 18481320 15a01328 18c81330     .... .H.(...0...
  41965c:	17a01338 19101340 19a01348 19501350     8...@...H...P.P.
  41966c:	1ba01358 1a481360 1da01368 1ac81370     X...`.H.h...p...
  41967c:	1fa01378 1a101380 1a181388 1a501390     x.............P.
  41968c:	13e01398 185813a0 15e013a8 18d813b0     ......X.........
  41969c:	17e013b8 1b1013c0 19e013c8 1b5013d0     ..............P.
  4196ac:	1be013d8 1a5813e0 1de013e8 1ad813f0     ......X.........
  4196bc:	1fe013f8 14201408 15001410 15201418     ...... ....... .
  4196cc:	15081430 16281438 15001440 18281448     0...8.(.@...H.(.
  4196dc:	15101450 1a281458 15201460 1c281468     P...X.(.`. .h.(.
  4196ec:	15181470 1e281478 1c001480 1c201488     p...x.(....... .
  4196fc:	1d001490 1d201498 1c0814a0 1c2814a8     ...... .......(.
  41970c:	1d0814b0 166814b8 1c1014c0 186814c8     ......h.......h.
  41971c:	1d1014d0 1a6814d8 1c1814e0 1c6814e8     ......h.......h.
  41972c:	1d1814f0 1e6814f8 15201508 15401510     ......h... ...@.
  41973c:	15601518 18281520 1c281528 15481530     ..`. .(.(.(.0.H.
  41974c:	16a81538 18a81548 1aa81558 1a281560     8...H...X...`.(.
  41975c:	1ca81568 1aa81570 1ea81578 1c401580     h...p...x.....@.
  41976c:	1c601588 1d401590 1d601598 1c4815a0     ..`...@...`...H.
  41977c:	1c6815a8 1d4815b0 16e815b8 1c5015c0     ..h...H.......P.
  41978c:	18e815c8 1d5015d0 1ae815d8 1c5815e0     ......P.......X.
  41979c:	1ce815e8 1d5815f0 1ee815f8 1c001600     ......X.........
  4197ac:	1c081608 1c401610 1c481618 1c201620     ......@...H. . .
  4197bc:	1c281628 1c601630 17281638 1d001640     (.(.0.`.8.(.@...
  4197cc:	19281648 1d401650 1b281658 1d201660     H.(.P.@.X.(.`. .
  4197dc:	1d281668 1d601670 1f281678 1c801680     h.(.p.`.x.(.....
  4197ec:	1ca01688 1d801690 1da01698 1c8816a0     ................
  4197fc:	1ca816a8 1d8816b0 176816b8 1c9016c0     ..........h.....
  41980c:	196816c8 1d9016d0 1b6816d8 1c9816e0     ..h.......h.....
  41981c:	1d6816e8 1d9816f0 1f6816f8 1c101700     ..h.......h.....
  41982c:	1c181708 1c501710 1c581718 18681720     ......P...X. .h.
  41983c:	1c681728 18e81730 17a81738 1d101740     (.h.0...8...@...
  41984c:	19a81748 1d501750 1ba81758 1a681760     H...P.P.X...`.h.
  41985c:	1da81768 1ae81770 1fa81778 1cc01780     h...p...x.......
  41986c:	1ce01788 1dc01790 1de01798 1cc817a0     ................
  41987c:	1ce817a8 1dc817b0 17e817b8 1cd017c0     ................
  41988c:	19e817c8 1dd017d0 1be817d8 1cd817e0     ................
  41989c:	1de817e8 1dd817f0 1fe817f8 18601818     ..............`.
  4198ac:	18481830 1c601838 1a301858 1c301868     0.H.8.`.X.0.h.0.
  4198bc:	1a181870 1e301878 1a001880 1a081888     p...x.0.........
  4198cc:	1b001890 19601898 1a2018a0 1a2818a8     ......`... ...(.
  4198dc:	1b2018b0 1d6018b8 1a1018c0 1a1818c8     .. ...`.........
  4198ec:	1b1018d0 1a7018d8 1a3018e0 1c7018e8     ......p...0...p.
  4198fc:	1a5818f0 1e7018f8 19201908 1a601918     ..X...p... ...`.
  41990c:	1d081928 19881930 1d881938 1b201948     (...0...8...H. .
  41991c:	1ab01958 1b081960 1cb01968 1b881970     X...`...h...p...
  41992c:	1eb01978 1a401980 1a481988 1b401990     x.....@...H...@.
  41993c:	1b601998 1a6019a0 1d1819a8 1b6019b0     ..`...`.......`.
  41994c:	1d9819b8 1a5019c0 1a5819c8 1b5019d0     ......P...X...P.
  41995c:	1af019d8 1b1819e0 1cf019e8 1b9819f0     ................
  41996c:	1ef019f8 1c701a38 1b301a58 1d301a68     ....8.p.X.0.h.0.
  41997c:	1b181a70 1f301a78 1ac01a90 1ac81a98     p...x.0.........
  41998c:	1ae01ab0 1ae81ab8 1b801ac0 1b881ac8     ................
  41999c:	1bc01ad0 1b701ad8 1ba01ae0 1d701ae8     ......p.......p.
  4199ac:	1be01af0 1f701af8 1d481b28 1dc81b38     ......p.(.H.8...
  4199bc:	1b601b48 1bb01b58 1db01b68 1bc81b70     H.`.X...h...p...
  4199cc:	1fb01b78 1bc01b90 1bc81b98 1d581ba8     x.............X.
  4199dc:	1be01bb0 1dd81bb8 1bf01bd8 1df01be8     ................
  4199ec:	1ff01bf8 1c201c08 1c301c18 1c681c38     ...... ...0.8.h.
  4199fc:	1c601c48 1c701c58 1e381c78 1e001c80     H.`.X.p.x.8.....
  419a0c:	1e201c88 1f001c90 1f201c98 1e081ca0     .. ....... .....
  419a1c:	1e281ca8 1f081cb0 1f281cb8 1e101cc0     ..(.......(.....
  419a2c:	1e301cc8 1f101cd0 1f301cd8 1e181ce0     ..0.......0.....
  419a3c:	1e381ce8 1f181cf0 1e781cf8 1d201d08     ..8.......x... .
  419a4c:	1d301d18 1da81d38 1d601d48 1d701d58     ..0.8...H.`.X.p.
  419a5c:	1f281d68 1eb81d78 1e401d80 1e601d88     h.(.x.....@...`.
  419a6c:	1f401d90 1f601d98 1e481da0 1e681da8     ..@...`...H...h.
  419a7c:	1f481db0 1f681db8 1e501dc0 1e701dc8     ..H...h...P...p.
  419a8c:	1f501dd0 1f701dd8 1e581de0 1e781de8     ..P...p...X...x.
  419a9c:	1f581df0 1ef81df8 1e201e08 1e301e18     ..X....... ...0.
  419aac:	1e601e48 1e701e58 1f381e78 1ea01e88     H.`.X.p.x.8.....
  419abc:	1f801e90 1fa01e98 1f881eb0 1fa81eb8     ................
  419acc:	1f801ec0 1f881ec8 1f901ed0 1fb01ed8     ................
  419adc:	1fa01ee0 1fa81ee8 1f981ef0 1f781ef8     ..............x.
  419aec:	1f201f08 1f301f18 1f601f48 1f701f58     .. ...0.H.`.X.p.
  419afc:	1fb81f78 1fa01f88 1fc01f90 1fe01f98     x...............
  419b0c:	1fc81fb0 1fe81fb8 1fe01fc8 1ff01fd8     ................

00419b1c <armBitRevIndexTable16>:
  419b1c:	00400008 00480018 00400010 00500028     ..@...H...@.(.P.
  419b2c:	00400020 00580038 00480030 00680058      .@.8.X.0.H.X.h.
  419b3c:	00600048 00700068                       H.`.h.p.

00419b44 <twiddleCoef_rfft_32>:
  419b44:	00000000 3f800000 3e47c5c2 3f7b14be     .......?..G>..{?
  419b54:	3ec3ef15 3f6c835e 3f0e39da 3f54db31     ...>^.l?.9.?1.T?
  419b64:	3f3504f3 3f3504f3 3f54db31 3f0e39da     ..5?..5?1.T?.9.?
  419b74:	3f6c835e 3ec3ef15 3f7b14be 3e47c5c2     ^.l?...>..{?..G>
  419b84:	3f800000 00000000 3f7b14be be47c5c2     ...?......{?..G.
  419b94:	3f6c835e bec3ef15 3f54db31 bf0e39da     ^.l?....1.T?.9..
  419ba4:	3f3504f3 bf3504f3 3f0e39da bf54db31     ..5?..5..9.?1.T.
  419bb4:	3ec3ef15 bf6c835e 3e47c5c2 bf7b14be     ...>^.l...G>..{.

00419bc4 <armBitRevIndexTable32>:
  419bc4:	00400008 00800010 00c00018 00400020     ..@......... .@.
  419bd4:	00480028 00880030 00c80038 00800040     (.H.0...8...@...
  419be4:	00500048 00d00058 00900050 00c00060     H.P.X...P...`...
  419bf4:	00d00068 00980070 00d80078 00c00088     h...p...x.......
  419c04:	00a00090 00d000a8 00e00098 00d000b0     ................
  419c14:	00e800b8 00f000d8 00e000c8 00f000e8     ................

00419c24 <sinTable_f32>:
  419c24:	00000000 3c490e92 3cc90ab1 3d16c32b     ......I<...<+..=
  419c34:	3d48fb2e 3d7b2b75 3d96a904 3dafb680     ..H=u+{=...=...=
  419c44:	3dc8bd36 3de1bc2f 3dfab273 3e09cf87     6..=/..=s..=...>
  419c54:	3e164083 3e22abb5 3e2f10a2 3e3b6ecf     .@.>..">../>.n;>
  419c64:	3e47c5c2 3e541501 3e605c13 3e6c9a7f     ..G>..T>.\`>..l>
  419c74:	3e78cfcc 3e827dc0 3e888e93 3e8e9a22     ..x>.}.>...>"..>
  419c84:	3e94a032 3e9aa086 3ea09ae5 3ea68f12     2..>...>...>...>
  419c94:	3eac7cd4 3eb263ef 3eb8442a 3ebe1d49     .|.>.c.>*D.>I..>
  419ca4:	3ec3ef15 3ec9b953 3ecf7bca 3ed53641     ...>S..>.{.>A6.>
  419cb4:	3edae880 3ee0924f 3ee63375 3eebcbbb     ...>O..>u3.>...>
  419cc4:	3ef15aea 3ef6e0cb 3efc5d27 3f00e7e4     .Z.>...>'].>...?
  419cd4:	3f039c3d 3f064b82 3f08f59b 3f0b9a6b     =..?.K.?...?k..?
  419ce4:	3f0e39da 3f10d3cd 3f13682a 3f15f6d9     .9.?...?*h.?...?
  419cf4:	3f187fc0 3f1b02c6 3f1d7fd1 3f1ff6cb     ...?...?...?...?
  419d04:	3f226799 3f24d225 3f273656 3f299415     .g"?%.$?V6'?..)?
  419d14:	3f2beb4a 3f2e3bde 3f3085bb 3f32c8c9     J.+?.;.?..0?..2?
  419d24:	3f3504f3 3f373a23 3f396842 3f3b8f3b     ..5?#:7?Bh9?;.;?
  419d34:	3f3daef9 3f3fc767 3f41d870 3f43e201     ..=?g.??p.A?..C?
  419d44:	3f45e403 3f47de65 3f49d112 3f4bbbf8     ..E?e.G?..I?..K?
  419d54:	3f4d9f02 3f4f7a20 3f514d3d 3f531849     ..M? zO?=MQ?I.S?
  419d64:	3f54db31 3f5695e5 3f584853 3f59f26a     1.T?..V?SHX?j.Y?
  419d74:	3f5b941a 3f5d2d53 3f5ebe05 3f604621     ..[?S-]?..^?!F`?
  419d84:	3f61c597 3f633c5a 3f64aa59 3f660f88     ..a?Z<c?Y.d?..f?
  419d94:	3f676bd8 3f68bf3c 3f6a09a7 3f6b4b0c     .kg?<.h?..j?.Kk?
  419da4:	3f6c835e 3f6db293 3f6ed89e 3f6ff573     ^.l?..m?..n?s.o?
  419db4:	3f710908 3f721352 3f731447 3f740bdd     ..q?R.r?G.s?..t?
  419dc4:	3f74fa0b 3f75dec6 3f76ba07 3f778bc5     ..t?..u?..v?..w?
  419dd4:	3f7853f8 3f791298 3f79c79d 3f7a7302     .Sx?..y?..y?.sz?
  419de4:	3f7b14be 3f7baccd 3f7c3b28 3f7cbfc9     ..{?..{?(;|?..|?
  419df4:	3f7d3aac 3f7dabcc 3f7e1323 3f7e70b0     .:}?..}?#.~?.p~?
  419e04:	3f7ec46d 3f7f0e58 3f7f4e6d 3f7f84ab     m.~?X..?mN.?...?
  419e14:	3f7fb10f 3f7fd397 3f7fec43 3f7ffb11     ...?...?C..?...?
  419e24:	3f800000 3f7ffb11 3f7fec43 3f7fd397     ...?...?C..?...?
  419e34:	3f7fb10f 3f7f84ab 3f7f4e6d 3f7f0e58     ...?...?mN.?X..?
  419e44:	3f7ec46d 3f7e70b0 3f7e1323 3f7dabcc     m.~?.p~?#.~?..}?
  419e54:	3f7d3aac 3f7cbfc9 3f7c3b28 3f7baccd     .:}?..|?(;|?..{?
  419e64:	3f7b14be 3f7a7302 3f79c79d 3f791298     ..{?.sz?..y?..y?
  419e74:	3f7853f8 3f778bc5 3f76ba07 3f75dec6     .Sx?..w?..v?..u?
  419e84:	3f74fa0b 3f740bdd 3f731447 3f721352     ..t?..t?G.s?R.r?
  419e94:	3f710908 3f6ff573 3f6ed89e 3f6db293     ..q?s.o?..n?..m?
  419ea4:	3f6c835e 3f6b4b0c 3f6a09a7 3f68bf3c     ^.l?.Kk?..j?<.h?
  419eb4:	3f676bd8 3f660f88 3f64aa59 3f633c5a     .kg?..f?Y.d?Z<c?
  419ec4:	3f61c597 3f604621 3f5ebe05 3f5d2d53     ..a?!F`?..^?S-]?
  419ed4:	3f5b941a 3f59f26a 3f584853 3f5695e5     ..[?j.Y?SHX?..V?
  419ee4:	3f54db31 3f531849 3f514d3d 3f4f7a20     1.T?I.S?=MQ? zO?
  419ef4:	3f4d9f02 3f4bbbf8 3f49d112 3f47de65     ..M?..K?..I?e.G?
  419f04:	3f45e403 3f43e201 3f41d870 3f3fc767     ..E?..C?p.A?g.??
  419f14:	3f3daef9 3f3b8f3b 3f396842 3f373a23     ..=?;.;?Bh9?#:7?
  419f24:	3f3504f3 3f32c8c9 3f3085bb 3f2e3bde     ..5?..2?..0?.;.?
  419f34:	3f2beb4a 3f299415 3f273656 3f24d225     J.+?..)?V6'?%.$?
  419f44:	3f226799 3f1ff6cb 3f1d7fd1 3f1b02c6     .g"?...?...?...?
  419f54:	3f187fc0 3f15f6d9 3f13682a 3f10d3cd     ...?...?*h.?...?
  419f64:	3f0e39da 3f0b9a6b 3f08f59b 3f064b82     .9.?k..?...?.K.?
  419f74:	3f039c3d 3f00e7e4 3efc5d27 3ef6e0cb     =..?...?'].>...>
  419f84:	3ef15aea 3eebcbbb 3ee63375 3ee0924f     .Z.>...>u3.>O..>
  419f94:	3edae880 3ed53641 3ecf7bca 3ec9b953     ...>A6.>.{.>S..>
  419fa4:	3ec3ef15 3ebe1d49 3eb8442a 3eb263ef     ...>I..>*D.>.c.>
  419fb4:	3eac7cd4 3ea68f12 3ea09ae5 3e9aa086     .|.>...>...>...>
  419fc4:	3e94a032 3e8e9a22 3e888e93 3e827dc0     2..>"..>...>.}.>
  419fd4:	3e78cfcc 3e6c9a7f 3e605c13 3e541501     ..x>..l>.\`>..T>
  419fe4:	3e47c5c2 3e3b6ecf 3e2f10a2 3e22abb5     ..G>.n;>../>..">
  419ff4:	3e164083 3e09cf87 3dfab273 3de1bc2f     .@.>...>s..=/..=
  41a004:	3dc8bd36 3dafb680 3d96a904 3d7b2b75     6..=...=...=u+{=
  41a014:	3d48fb2e 3d16c32b 3cc90ab1 3c490e92     ..H=+..=...<..I<
  41a024:	00000000 bc490e92 bcc90ab1 bd16c32b     ......I.....+...
  41a034:	bd48fb2e bd7b2b75 bd96a904 bdafb680     ..H.u+{.........
  41a044:	bdc8bd36 bde1bc2f bdfab273 be09cf87     6.../...s.......
  41a054:	be164083 be22abb5 be2f10a2 be3b6ecf     .@....".../..n;.
  41a064:	be47c5c2 be541501 be605c13 be6c9a7f     ..G...T..\`...l.
  41a074:	be78cfcc be827dc0 be888e93 be8e9a22     ..x..}......"...
  41a084:	be94a032 be9aa086 bea09ae5 bea68f12     2...............
  41a094:	beac7cd4 beb263ef beb8442a bebe1d49     .|...c..*D..I...
  41a0a4:	bec3ef15 bec9b953 becf7bca bed53641     ....S....{..A6..
  41a0b4:	bedae880 bee0924f bee63375 beebcbbb     ....O...u3......
  41a0c4:	bef15aea bef6e0cb befc5d27 bf00e7e4     .Z......']......
  41a0d4:	bf039c3d bf064b82 bf08f59b bf0b9a6b     =....K......k...
  41a0e4:	bf0e39da bf10d3cd bf13682a bf15f6d9     .9......*h......
  41a0f4:	bf187fc0 bf1b02c6 bf1d7fd1 bf1ff6cb     ................
  41a104:	bf226799 bf24d225 bf273656 bf299415     .g".%.$.V6'...).
  41a114:	bf2beb4a bf2e3bde bf3085bb bf32c8c9     J.+..;....0...2.
  41a124:	bf3504f3 bf373a23 bf396842 bf3b8f3b     ..5.#:7.Bh9.;.;.
  41a134:	bf3daef9 bf3fc767 bf41d870 bf43e201     ..=.g.?.p.A...C.
  41a144:	bf45e403 bf47de65 bf49d112 bf4bbbf8     ..E.e.G...I...K.
  41a154:	bf4d9f02 bf4f7a20 bf514d3d bf531849     ..M. zO.=MQ.I.S.
  41a164:	bf54db31 bf5695e5 bf584853 bf59f26a     1.T...V.SHX.j.Y.
  41a174:	bf5b941a bf5d2d53 bf5ebe05 bf604621     ..[.S-]...^.!F`.
  41a184:	bf61c597 bf633c5a bf64aa59 bf660f88     ..a.Z<c.Y.d...f.
  41a194:	bf676bd8 bf68bf3c bf6a09a7 bf6b4b0c     .kg.<.h...j..Kk.
  41a1a4:	bf6c835e bf6db293 bf6ed89e bf6ff573     ^.l...m...n.s.o.
  41a1b4:	bf710908 bf721352 bf731447 bf740bdd     ..q.R.r.G.s...t.
  41a1c4:	bf74fa0b bf75dec6 bf76ba07 bf778bc5     ..t...u...v...w.
  41a1d4:	bf7853f8 bf791298 bf79c79d bf7a7302     .Sx...y...y..sz.
  41a1e4:	bf7b14be bf7baccd bf7c3b28 bf7cbfc9     ..{...{.(;|...|.
  41a1f4:	bf7d3aac bf7dabcc bf7e1323 bf7e70b0     .:}...}.#.~..p~.
  41a204:	bf7ec46d bf7f0e58 bf7f4e6d bf7f84ab     m.~.X...mN......
  41a214:	bf7fb10f bf7fd397 bf7fec43 bf7ffb11     ........C.......
  41a224:	bf800000 bf7ffb11 bf7fec43 bf7fd397     ........C.......
  41a234:	bf7fb10f bf7f84ab bf7f4e6d bf7f0e58     ........mN..X...
  41a244:	bf7ec46d bf7e70b0 bf7e1323 bf7dabcc     m.~..p~.#.~...}.
  41a254:	bf7d3aac bf7cbfc9 bf7c3b28 bf7baccd     .:}...|.(;|...{.
  41a264:	bf7b14be bf7a7302 bf79c79d bf791298     ..{..sz...y...y.
  41a274:	bf7853f8 bf778bc5 bf76ba07 bf75dec6     .Sx...w...v...u.
  41a284:	bf74fa0b bf740bdd bf731447 bf721352     ..t...t.G.s.R.r.
  41a294:	bf710908 bf6ff573 bf6ed89e bf6db293     ..q.s.o...n...m.
  41a2a4:	bf6c835e bf6b4b0c bf6a09a7 bf68bf3c     ^.l..Kk...j.<.h.
  41a2b4:	bf676bd8 bf660f88 bf64aa59 bf633c5a     .kg...f.Y.d.Z<c.
  41a2c4:	bf61c597 bf604621 bf5ebe05 bf5d2d53     ..a.!F`...^.S-].
  41a2d4:	bf5b941a bf59f26a bf584853 bf5695e5     ..[.j.Y.SHX...V.
  41a2e4:	bf54db31 bf531849 bf514d3d bf4f7a20     1.T.I.S.=MQ. zO.
  41a2f4:	bf4d9f02 bf4bbbf8 bf49d112 bf47de65     ..M...K...I.e.G.
  41a304:	bf45e403 bf43e201 bf41d870 bf3fc767     ..E...C.p.A.g.?.
  41a314:	bf3daef9 bf3b8f3b bf396842 bf373a23     ..=.;.;.Bh9.#:7.
  41a324:	bf3504f3 bf32c8c9 bf3085bb bf2e3bde     ..5...2...0..;..
  41a334:	bf2beb4a bf299415 bf273656 bf24d225     J.+...).V6'.%.$.
  41a344:	bf226799 bf1ff6cb bf1d7fd1 bf1b02c6     .g".............
  41a354:	bf187fc0 bf15f6d9 bf13682a bf10d3cd     ........*h......
  41a364:	bf0e39da bf0b9a6b bf08f59b bf064b82     .9..k........K..
  41a374:	bf039c3d bf00e7e4 befc5d27 bef6e0cb     =.......']......
  41a384:	bef15aea beebcbbb bee63375 bee0924f     .Z......u3..O...
  41a394:	bedae880 bed53641 becf7bca bec9b953     ....A6...{..S...
  41a3a4:	bec3ef15 bebe1d49 beb8442a beb263ef     ....I...*D...c..
  41a3b4:	beac7cd4 bea68f12 bea09ae5 be9aa086     .|..............
  41a3c4:	be94a032 be8e9a22 be888e93 be827dc0     2..."........}..
  41a3d4:	be78cfcc be6c9a7f be605c13 be541501     ..x...l..\`...T.
  41a3e4:	be47c5c2 be3b6ecf be2f10a2 be22abb5     ..G..n;.../...".
  41a3f4:	be164083 be09cf87 bdfab273 bde1bc2f     .@......s.../...
  41a404:	bdc8bd36 bdafb680 bd96a904 bd7b2b75     6...........u+{.
  41a414:	bd48fb2e bd16c32b bcc90ab1 bc490e92     ..H.+.........I.
  41a424:	80000000                                ....

0041a428 <twiddleCoef_128>:
  41a428:	3f800000 00000000 3f7fb10f 3d48fb2f     ...?.......?/.H=
  41a438:	3f7ec46d 3dc8bd36 3f7d3aac 3e164083     m.~?6..=.:}?.@.>
  41a448:	3f7b14be 3e47c5c2 3f7853f8 3e78cfcc     ..{?..G>.Sx?..x>
  41a458:	3f74fa0b 3e94a031 3f710908 3eac7cd4     ..t?1..>..q?.|.>
  41a468:	3f6c835e 3ec3ef15 3f676bd8 3edae880     ^.l?...>.kg?...>
  41a478:	3f61c598 3ef15aea 3f5b941a 3f039c3d     ..a?.Z.>..[?=..?
  41a488:	3f54db31 3f0e39da 3f4d9f02 3f187fc0     1.T?.9.?..M?...?
  41a498:	3f45e403 3f226799 3f3daef9 3f2beb4a     ..E?.g"?..=?J.+?
  41a4a8:	3f3504f3 3f3504f3 3f2beb4a 3f3daef9     ..5?..5?J.+?..=?
  41a4b8:	3f226799 3f45e403 3f187fc0 3f4d9f02     .g"?..E?...?..M?
  41a4c8:	3f0e39da 3f54db31 3f039c3d 3f5b941a     .9.?1.T?=..?..[?
  41a4d8:	3ef15aea 3f61c598 3edae880 3f676bd8     .Z.>..a?...>.kg?
  41a4e8:	3ec3ef15 3f6c835e 3eac7cd4 3f710908     ...>^.l?.|.>..q?
  41a4f8:	3e94a031 3f74fa0b 3e78cfcc 3f7853f8     1..>..t?..x>.Sx?
  41a508:	3e47c5c2 3f7b14be 3e164083 3f7d3aac     ..G>..{?.@.>.:}?
  41a518:	3dc8bd36 3f7ec46d 3d48fb2f 3f7fb10f     6..=m.~?/.H=...?
  41a528:	00000000 3f800000 bd48fb2f 3f7fb10f     .......?/.H....?
  41a538:	bdc8bd36 3f7ec46d be164083 3f7d3aac     6...m.~?.@...:}?
  41a548:	be47c5c2 3f7b14be be78cfcc 3f7853f8     ..G...{?..x..Sx?
  41a558:	be94a031 3f74fa0b beac7cd4 3f710908     1.....t?.|....q?
  41a568:	bec3ef15 3f6c835e bedae880 3f676bd8     ....^.l?.....kg?
  41a578:	bef15aea 3f61c598 bf039c3d 3f5b941a     .Z....a?=.....[?
  41a588:	bf0e39da 3f54db31 bf187fc0 3f4d9f02     .9..1.T?......M?
  41a598:	bf226799 3f45e403 bf2beb4a 3f3daef9     .g"...E?J.+...=?
  41a5a8:	bf3504f3 3f3504f3 bf3daef9 3f2beb4a     ..5...5?..=.J.+?
  41a5b8:	bf45e403 3f226799 bf4d9f02 3f187fc0     ..E..g"?..M....?
  41a5c8:	bf54db31 3f0e39da bf5b941a 3f039c3d     1.T..9.?..[.=..?
  41a5d8:	bf61c598 3ef15aea bf676bd8 3edae880     ..a..Z.>.kg....>
  41a5e8:	bf6c835e 3ec3ef15 bf710908 3eac7cd4     ^.l....>..q..|.>
  41a5f8:	bf74fa0b 3e94a031 bf7853f8 3e78cfcc     ..t.1..>.Sx...x>
  41a608:	bf7b14be 3e47c5c2 bf7d3aac 3e164083     ..{...G>.:}..@.>
  41a618:	bf7ec46d 3dc8bd36 bf7fb10f 3d48fb2f     m.~.6..=..../.H=
  41a628:	bf800000 00000000 bf7fb10f bd48fb2f     ............/.H.
  41a638:	bf7ec46d bdc8bd36 bf7d3aac be164083     m.~.6....:}..@..
  41a648:	bf7b14be be47c5c2 bf7853f8 be78cfcc     ..{...G..Sx...x.
  41a658:	bf74fa0b be94a031 bf710908 beac7cd4     ..t.1.....q..|..
  41a668:	bf6c835e bec3ef15 bf676bd8 bedae880     ^.l......kg.....
  41a678:	bf61c598 bef15aea bf5b941a bf039c3d     ..a..Z....[.=...
  41a688:	bf54db31 bf0e39da bf4d9f02 bf187fc0     1.T..9....M.....
  41a698:	bf45e403 bf226799 bf3daef9 bf2beb4a     ..E..g"...=.J.+.
  41a6a8:	bf3504f3 bf3504f3 bf2beb4a bf3daef9     ..5...5.J.+...=.
  41a6b8:	bf226799 bf45e403 bf187fc0 bf4d9f02     .g"...E.......M.
  41a6c8:	bf0e39da bf54db31 bf039c3d bf5b941a     .9..1.T.=.....[.
  41a6d8:	bef15aea bf61c598 bedae880 bf676bd8     .Z....a......kg.
  41a6e8:	bec3ef15 bf6c835e beac7cd4 bf710908     ....^.l..|....q.
  41a6f8:	be94a031 bf74fa0b be78cfcc bf7853f8     1.....t...x..Sx.
  41a708:	be47c5c2 bf7b14be be164083 bf7d3aac     ..G...{..@...:}.
  41a718:	bdc8bd36 bf7ec46d bd48fb2f bf7fb10f     6...m.~./.H.....
  41a728:	80000000 bf800000 3d48fb2f bf7fb10f     ......../.H=....
  41a738:	3dc8bd36 bf7ec46d 3e164083 bf7d3aac     6..=m.~..@.>.:}.
  41a748:	3e47c5c2 bf7b14be 3e78cfcc bf7853f8     ..G>..{...x>.Sx.
  41a758:	3e94a031 bf74fa0b 3eac7cd4 bf710908     1..>..t..|.>..q.
  41a768:	3ec3ef15 bf6c835e 3edae880 bf676bd8     ...>^.l....>.kg.
  41a778:	3ef15aea bf61c598 3f039c3d bf5b941a     .Z.>..a.=..?..[.
  41a788:	3f0e39da bf54db31 3f187fc0 bf4d9f02     .9.?1.T....?..M.
  41a798:	3f226799 bf45e403 3f2beb4a bf3daef9     .g"?..E.J.+?..=.
  41a7a8:	3f3504f3 bf3504f3 3f3daef9 bf2beb4a     ..5?..5...=?J.+.
  41a7b8:	3f45e403 bf226799 3f4d9f02 bf187fc0     ..E?.g"...M?....
  41a7c8:	3f54db31 bf0e39da 3f5b941a bf039c3d     1.T?.9....[?=...
  41a7d8:	3f61c598 bef15aea 3f676bd8 bedae880     ..a?.Z...kg?....
  41a7e8:	3f6c835e bec3ef15 3f710908 beac7cd4     ^.l?......q?.|..
  41a7f8:	3f74fa0b be94a031 3f7853f8 be78cfcc     ..t?1....Sx?..x.
  41a808:	3f7b14be be47c5c2 3f7d3aac be164083     ..{?..G..:}?.@..
  41a818:	3f7ec46d bdc8bd36 3f7fb10f bd48fb2f     m.~?6......?/.H.

0041a828 <twiddleCoef_512>:
  41a828:	3f800000 00000000 3f7ffb11 3c490e90     ...?.......?..I<
  41a838:	3f7fec43 3cc90ab0 3f7fd398 3d16c32c     C..?...<...?,..=
  41a848:	3f7fb10f 3d48fb2f 3f7f84ab 3d7b2b74     ...?/.H=...?t+{=
  41a858:	3f7f4e6d 3d96a905 3f7f0e58 3dafb680     mN.?...=X..?...=
  41a868:	3f7ec46d 3dc8bd36 3f7e70b0 3de1bc2e     m.~?6..=.p~?...=
  41a878:	3f7e1324 3dfab273 3f7dabcc 3e09cf86     $.~?s..=..}?...>
  41a888:	3f7d3aac 3e164083 3f7cbfc9 3e22abb6     .:}?.@.>..|?..">
  41a898:	3f7c3b28 3e2f10a2 3f7baccd 3e3b6ecf     (;|?../>..{?.n;>
  41a8a8:	3f7b14be 3e47c5c2 3f7a7302 3e541501     ..{?..G>.sz?..T>
  41a8b8:	3f79c79d 3e605c13 3f791298 3e6c9a7f     ..y?.\`>..y?..l>
  41a8c8:	3f7853f8 3e78cfcc 3f778bc5 3e827dc0     .Sx?..x>..w?.}.>
  41a8d8:	3f76ba07 3e888e93 3f75dec6 3e8e9a22     ..v?...>..u?"..>
  41a8e8:	3f74fa0b 3e94a031 3f740bdd 3e9aa086     ..t?1..>..t?...>
  41a8f8:	3f731447 3ea09ae5 3f721352 3ea68f12     G.s?...>R.r?...>
  41a908:	3f710908 3eac7cd4 3f6ff573 3eb263ef     ..q?.|.>s.o?.c.>
  41a918:	3f6ed89e 3eb8442a 3f6db293 3ebe1d4a     ..n?*D.>..m?J..>
  41a928:	3f6c835e 3ec3ef15 3f6b4b0c 3ec9b953     ^.l?...>.Kk?S..>
  41a938:	3f6a09a7 3ecf7bca 3f68bf3c 3ed53641     ..j?.{.><.h?A6.>
  41a948:	3f676bd8 3edae880 3f660f88 3ee0924f     .kg?...>..f?O..>
  41a958:	3f64aa59 3ee63375 3f633c5a 3eebcbbb     Y.d?u3.>Z<c?...>
  41a968:	3f61c598 3ef15aea 3f604621 3ef6e0cb     ..a?.Z.>!F`?...>
  41a978:	3f5ebe05 3efc5d27 3f5d2d53 3f00e7e4     ..^?'].>S-]?...?
  41a988:	3f5b941a 3f039c3d 3f59f26a 3f064b82     ..[?=..?j.Y?.K.?
  41a998:	3f584853 3f08f59b 3f5695e5 3f0b9a6b     SHX?...?..V?k..?
  41a9a8:	3f54db31 3f0e39da 3f531849 3f10d3cd     1.T?.9.?I.S?...?
  41a9b8:	3f514d3d 3f13682a 3f4f7a1f 3f15f6d9     =MQ?*h.?.zO?...?
  41a9c8:	3f4d9f02 3f187fc0 3f4bbbf8 3f1b02c6     ..M?...?..K?...?
  41a9d8:	3f49d112 3f1d7fd1 3f47de65 3f1ff6cb     ..I?...?e.G?...?
  41a9e8:	3f45e403 3f226799 3f43e200 3f24d225     ..E?.g"?..C?%.$?
  41a9f8:	3f41d870 3f273656 3f3fc767 3f299415     p.A?V6'?g.??..)?
  41aa08:	3f3daef9 3f2beb4a 3f3b8f3b 3f2e3bde     ..=?J.+?;.;?.;.?
  41aa18:	3f396842 3f3085bb 3f373a23 3f32c8c9     Bh9?..0?#:7?..2?
  41aa28:	3f3504f3 3f3504f3 3f32c8c9 3f373a23     ..5?..5?..2?#:7?
  41aa38:	3f3085bb 3f396842 3f2e3bde 3f3b8f3b     ..0?Bh9?.;.?;.;?
  41aa48:	3f2beb4a 3f3daef9 3f299415 3f3fc767     J.+?..=?..)?g.??
  41aa58:	3f273656 3f41d870 3f24d225 3f43e200     V6'?p.A?%.$?..C?
  41aa68:	3f226799 3f45e403 3f1ff6cb 3f47de65     .g"?..E?...?e.G?
  41aa78:	3f1d7fd1 3f49d112 3f1b02c6 3f4bbbf8     ...?..I?...?..K?
  41aa88:	3f187fc0 3f4d9f02 3f15f6d9 3f4f7a1f     ...?..M?...?.zO?
  41aa98:	3f13682a 3f514d3d 3f10d3cd 3f531849     *h.?=MQ?...?I.S?
  41aaa8:	3f0e39da 3f54db31 3f0b9a6b 3f5695e5     .9.?1.T?k..?..V?
  41aab8:	3f08f59b 3f584853 3f064b82 3f59f26a     ...?SHX?.K.?j.Y?
  41aac8:	3f039c3d 3f5b941a 3f00e7e4 3f5d2d53     =..?..[?...?S-]?
  41aad8:	3efc5d27 3f5ebe05 3ef6e0cb 3f604621     '].>..^?...>!F`?
  41aae8:	3ef15aea 3f61c598 3eebcbbb 3f633c5a     .Z.>..a?...>Z<c?
  41aaf8:	3ee63375 3f64aa59 3ee0924f 3f660f88     u3.>Y.d?O..>..f?
  41ab08:	3edae880 3f676bd8 3ed53641 3f68bf3c     ...>.kg?A6.><.h?
  41ab18:	3ecf7bca 3f6a09a7 3ec9b953 3f6b4b0c     .{.>..j?S..>.Kk?
  41ab28:	3ec3ef15 3f6c835e 3ebe1d4a 3f6db293     ...>^.l?J..>..m?
  41ab38:	3eb8442a 3f6ed89e 3eb263ef 3f6ff573     *D.>..n?.c.>s.o?
  41ab48:	3eac7cd4 3f710908 3ea68f12 3f721352     .|.>..q?...>R.r?
  41ab58:	3ea09ae5 3f731447 3e9aa086 3f740bdd     ...>G.s?...>..t?
  41ab68:	3e94a031 3f74fa0b 3e8e9a22 3f75dec6     1..>..t?"..>..u?
  41ab78:	3e888e93 3f76ba07 3e827dc0 3f778bc5     ...>..v?.}.>..w?
  41ab88:	3e78cfcc 3f7853f8 3e6c9a7f 3f791298     ..x>.Sx?..l>..y?
  41ab98:	3e605c13 3f79c79d 3e541501 3f7a7302     .\`>..y?..T>.sz?
  41aba8:	3e47c5c2 3f7b14be 3e3b6ecf 3f7baccd     ..G>..{?.n;>..{?
  41abb8:	3e2f10a2 3f7c3b28 3e22abb6 3f7cbfc9     ../>(;|?..">..|?
  41abc8:	3e164083 3f7d3aac 3e09cf86 3f7dabcc     .@.>.:}?...>..}?
  41abd8:	3dfab273 3f7e1324 3de1bc2e 3f7e70b0     s..=$.~?...=.p~?
  41abe8:	3dc8bd36 3f7ec46d 3dafb680 3f7f0e58     6..=m.~?...=X..?
  41abf8:	3d96a905 3f7f4e6d 3d7b2b74 3f7f84ab     ...=mN.?t+{=...?
  41ac08:	3d48fb2f 3f7fb10f 3d16c32c 3f7fd398     /.H=...?,..=...?
  41ac18:	3cc90ab0 3f7fec43 3c490e90 3f7ffb11     ...<C..?..I<...?
  41ac28:	00000000 3f800000 bc490e90 3f7ffb11     .......?..I....?
  41ac38:	bcc90ab0 3f7fec43 bd16c32c 3f7fd398     ....C..?,......?
  41ac48:	bd48fb2f 3f7fb10f bd7b2b74 3f7f84ab     /.H....?t+{....?
  41ac58:	bd96a905 3f7f4e6d bdafb680 3f7f0e58     ....mN.?....X..?
  41ac68:	bdc8bd36 3f7ec46d bde1bc2e 3f7e70b0     6...m.~?.....p~?
  41ac78:	bdfab273 3f7e1324 be09cf86 3f7dabcc     s...$.~?......}?
  41ac88:	be164083 3f7d3aac be22abb6 3f7cbfc9     .@...:}?.."...|?
  41ac98:	be2f10a2 3f7c3b28 be3b6ecf 3f7baccd     ../.(;|?.n;...{?
  41aca8:	be47c5c2 3f7b14be be541501 3f7a7302     ..G...{?..T..sz?
  41acb8:	be605c13 3f79c79d be6c9a7f 3f791298     .\`...y?..l...y?
  41acc8:	be78cfcc 3f7853f8 be827dc0 3f778bc5     ..x..Sx?.}....w?
  41acd8:	be888e93 3f76ba07 be8e9a22 3f75dec6     ......v?".....u?
  41ace8:	be94a031 3f74fa0b be9aa086 3f740bdd     1.....t?......t?
  41acf8:	bea09ae5 3f731447 bea68f12 3f721352     ....G.s?....R.r?
  41ad08:	beac7cd4 3f710908 beb263ef 3f6ff573     .|....q?.c..s.o?
  41ad18:	beb8442a 3f6ed89e bebe1d4a 3f6db293     *D....n?J.....m?
  41ad28:	bec3ef15 3f6c835e bec9b953 3f6b4b0c     ....^.l?S....Kk?
  41ad38:	becf7bca 3f6a09a7 bed53641 3f68bf3c     .{....j?A6..<.h?
  41ad48:	bedae880 3f676bd8 bee0924f 3f660f88     .....kg?O.....f?
  41ad58:	bee63375 3f64aa59 beebcbbb 3f633c5a     u3..Y.d?....Z<c?
  41ad68:	bef15aea 3f61c598 bef6e0cb 3f604621     .Z....a?....!F`?
  41ad78:	befc5d27 3f5ebe05 bf00e7e4 3f5d2d53     ']....^?....S-]?
  41ad88:	bf039c3d 3f5b941a bf064b82 3f59f26a     =.....[?.K..j.Y?
  41ad98:	bf08f59b 3f584853 bf0b9a6b 3f5695e5     ....SHX?k.....V?
  41ada8:	bf0e39da 3f54db31 bf10d3cd 3f531849     .9..1.T?....I.S?
  41adb8:	bf13682a 3f514d3d bf15f6d9 3f4f7a1f     *h..=MQ?.....zO?
  41adc8:	bf187fc0 3f4d9f02 bf1b02c6 3f4bbbf8     ......M?......K?
  41add8:	bf1d7fd1 3f49d112 bf1ff6cb 3f47de65     ......I?....e.G?
  41ade8:	bf226799 3f45e403 bf24d225 3f43e200     .g"...E?%.$...C?
  41adf8:	bf273656 3f41d870 bf299415 3f3fc767     V6'.p.A?..).g.??
  41ae08:	bf2beb4a 3f3daef9 bf2e3bde 3f3b8f3b     J.+...=?.;..;.;?
  41ae18:	bf3085bb 3f396842 bf32c8c9 3f373a23     ..0.Bh9?..2.#:7?
  41ae28:	bf3504f3 3f3504f3 bf373a23 3f32c8c9     ..5...5?#:7...2?
  41ae38:	bf396842 3f3085bb bf3b8f3b 3f2e3bde     Bh9...0?;.;..;.?
  41ae48:	bf3daef9 3f2beb4a bf3fc767 3f299415     ..=.J.+?g.?...)?
  41ae58:	bf41d870 3f273656 bf43e200 3f24d225     p.A.V6'?..C.%.$?
  41ae68:	bf45e403 3f226799 bf47de65 3f1ff6cb     ..E..g"?e.G....?
  41ae78:	bf49d112 3f1d7fd1 bf4bbbf8 3f1b02c6     ..I....?..K....?
  41ae88:	bf4d9f02 3f187fc0 bf4f7a1f 3f15f6d9     ..M....?.zO....?
  41ae98:	bf514d3d 3f13682a bf531849 3f10d3cd     =MQ.*h.?I.S....?
  41aea8:	bf54db31 3f0e39da bf5695e5 3f0b9a6b     1.T..9.?..V.k..?
  41aeb8:	bf584853 3f08f59b bf59f26a 3f064b82     SHX....?j.Y..K.?
  41aec8:	bf5b941a 3f039c3d bf5d2d53 3f00e7e4     ..[.=..?S-]....?
  41aed8:	bf5ebe05 3efc5d27 bf604621 3ef6e0cb     ..^.'].>!F`....>
  41aee8:	bf61c598 3ef15aea bf633c5a 3eebcbbb     ..a..Z.>Z<c....>
  41aef8:	bf64aa59 3ee63375 bf660f88 3ee0924f     Y.d.u3.>..f.O..>
  41af08:	bf676bd8 3edae880 bf68bf3c 3ed53641     .kg....><.h.A6.>
  41af18:	bf6a09a7 3ecf7bca bf6b4b0c 3ec9b953     ..j..{.>.Kk.S..>
  41af28:	bf6c835e 3ec3ef15 bf6db293 3ebe1d4a     ^.l....>..m.J..>
  41af38:	bf6ed89e 3eb8442a bf6ff573 3eb263ef     ..n.*D.>s.o..c.>
  41af48:	bf710908 3eac7cd4 bf721352 3ea68f12     ..q..|.>R.r....>
  41af58:	bf731447 3ea09ae5 bf740bdd 3e9aa086     G.s....>..t....>
  41af68:	bf74fa0b 3e94a031 bf75dec6 3e8e9a22     ..t.1..>..u."..>
  41af78:	bf76ba07 3e888e93 bf778bc5 3e827dc0     ..v....>..w..}.>
  41af88:	bf7853f8 3e78cfcc bf791298 3e6c9a7f     .Sx...x>..y...l>
  41af98:	bf79c79d 3e605c13 bf7a7302 3e541501     ..y..\`>.sz...T>
  41afa8:	bf7b14be 3e47c5c2 bf7baccd 3e3b6ecf     ..{...G>..{..n;>
  41afb8:	bf7c3b28 3e2f10a2 bf7cbfc9 3e22abb6     (;|.../>..|...">
  41afc8:	bf7d3aac 3e164083 bf7dabcc 3e09cf86     .:}..@.>..}....>
  41afd8:	bf7e1324 3dfab273 bf7e70b0 3de1bc2e     $.~.s..=.p~....=
  41afe8:	bf7ec46d 3dc8bd36 bf7f0e58 3dafb680     m.~.6..=X......=
  41aff8:	bf7f4e6d 3d96a905 bf7f84ab 3d7b2b74     mN.....=....t+{=
  41b008:	bf7fb10f 3d48fb2f bf7fd398 3d16c32c     ..../.H=....,..=
  41b018:	bf7fec43 3cc90ab0 bf7ffb11 3c490e90     C......<......I<
  41b028:	bf800000 00000000 bf7ffb11 bc490e90     ..............I.
  41b038:	bf7fec43 bcc90ab0 bf7fd398 bd16c32c     C...........,...
  41b048:	bf7fb10f bd48fb2f bf7f84ab bd7b2b74     ..../.H.....t+{.
  41b058:	bf7f4e6d bd96a905 bf7f0e58 bdafb680     mN......X.......
  41b068:	bf7ec46d bdc8bd36 bf7e70b0 bde1bc2e     m.~.6....p~.....
  41b078:	bf7e1324 bdfab273 bf7dabcc be09cf86     $.~.s.....}.....
  41b088:	bf7d3aac be164083 bf7cbfc9 be22abb6     .:}..@....|...".
  41b098:	bf7c3b28 be2f10a2 bf7baccd be3b6ecf     (;|.../...{..n;.
  41b0a8:	bf7b14be be47c5c2 bf7a7302 be541501     ..{...G..sz...T.
  41b0b8:	bf79c79d be605c13 bf791298 be6c9a7f     ..y..\`...y...l.
  41b0c8:	bf7853f8 be78cfcc bf778bc5 be827dc0     .Sx...x...w..}..
  41b0d8:	bf76ba07 be888e93 bf75dec6 be8e9a22     ..v.......u."...
  41b0e8:	bf74fa0b be94a031 bf740bdd be9aa086     ..t.1.....t.....
  41b0f8:	bf731447 bea09ae5 bf721352 bea68f12     G.s.....R.r.....
  41b108:	bf710908 beac7cd4 bf6ff573 beb263ef     ..q..|..s.o..c..
  41b118:	bf6ed89e beb8442a bf6db293 bebe1d4a     ..n.*D....m.J...
  41b128:	bf6c835e bec3ef15 bf6b4b0c bec9b953     ^.l......Kk.S...
  41b138:	bf6a09a7 becf7bca bf68bf3c bed53641     ..j..{..<.h.A6..
  41b148:	bf676bd8 bedae880 bf660f88 bee0924f     .kg.......f.O...
  41b158:	bf64aa59 bee63375 bf633c5a beebcbbb     Y.d.u3..Z<c.....
  41b168:	bf61c598 bef15aea bf604621 bef6e0cb     ..a..Z..!F`.....
  41b178:	bf5ebe05 befc5d27 bf5d2d53 bf00e7e4     ..^.']..S-].....
  41b188:	bf5b941a bf039c3d bf59f26a bf064b82     ..[.=...j.Y..K..
  41b198:	bf584853 bf08f59b bf5695e5 bf0b9a6b     SHX.......V.k...
  41b1a8:	bf54db31 bf0e39da bf531849 bf10d3cd     1.T..9..I.S.....
  41b1b8:	bf514d3d bf13682a bf4f7a1f bf15f6d9     =MQ.*h...zO.....
  41b1c8:	bf4d9f02 bf187fc0 bf4bbbf8 bf1b02c6     ..M.......K.....
  41b1d8:	bf49d112 bf1d7fd1 bf47de65 bf1ff6cb     ..I.....e.G.....
  41b1e8:	bf45e403 bf226799 bf43e200 bf24d225     ..E..g"...C.%.$.
  41b1f8:	bf41d870 bf273656 bf3fc767 bf299415     p.A.V6'.g.?...).
  41b208:	bf3daef9 bf2beb4a bf3b8f3b bf2e3bde     ..=.J.+.;.;..;..
  41b218:	bf396842 bf3085bb bf373a23 bf32c8c9     Bh9...0.#:7...2.
  41b228:	bf3504f3 bf3504f3 bf32c8c9 bf373a23     ..5...5...2.#:7.
  41b238:	bf3085bb bf396842 bf2e3bde bf3b8f3b     ..0.Bh9..;..;.;.
  41b248:	bf2beb4a bf3daef9 bf299415 bf3fc767     J.+...=...).g.?.
  41b258:	bf273656 bf41d870 bf24d225 bf43e200     V6'.p.A.%.$...C.
  41b268:	bf226799 bf45e403 bf1ff6cb bf47de65     .g"...E.....e.G.
  41b278:	bf1d7fd1 bf49d112 bf1b02c6 bf4bbbf8     ......I.......K.
  41b288:	bf187fc0 bf4d9f02 bf15f6d9 bf4f7a1f     ......M......zO.
  41b298:	bf13682a bf514d3d bf10d3cd bf531849     *h..=MQ.....I.S.
  41b2a8:	bf0e39da bf54db31 bf0b9a6b bf5695e5     .9..1.T.k.....V.
  41b2b8:	bf08f59b bf584853 bf064b82 bf59f26a     ....SHX..K..j.Y.
  41b2c8:	bf039c3d bf5b941a bf00e7e4 bf5d2d53     =.....[.....S-].
  41b2d8:	befc5d27 bf5ebe05 bef6e0cb bf604621     ']....^.....!F`.
  41b2e8:	bef15aea bf61c598 beebcbbb bf633c5a     .Z....a.....Z<c.
  41b2f8:	bee63375 bf64aa59 bee0924f bf660f88     u3..Y.d.O.....f.
  41b308:	bedae880 bf676bd8 bed53641 bf68bf3c     .....kg.A6..<.h.
  41b318:	becf7bca bf6a09a7 bec9b953 bf6b4b0c     .{....j.S....Kk.
  41b328:	bec3ef15 bf6c835e bebe1d4a bf6db293     ....^.l.J.....m.
  41b338:	beb8442a bf6ed89e beb263ef bf6ff573     *D....n..c..s.o.
  41b348:	beac7cd4 bf710908 bea68f12 bf721352     .|....q.....R.r.
  41b358:	bea09ae5 bf731447 be9aa086 bf740bdd     ....G.s.......t.
  41b368:	be94a031 bf74fa0b be8e9a22 bf75dec6     1.....t.".....u.
  41b378:	be888e93 bf76ba07 be827dc0 bf778bc5     ......v..}....w.
  41b388:	be78cfcc bf7853f8 be6c9a7f bf791298     ..x..Sx...l...y.
  41b398:	be605c13 bf79c79d be541501 bf7a7302     .\`...y...T..sz.
  41b3a8:	be47c5c2 bf7b14be be3b6ecf bf7baccd     ..G...{..n;...{.
  41b3b8:	be2f10a2 bf7c3b28 be22abb6 bf7cbfc9     ../.(;|..."...|.
  41b3c8:	be164083 bf7d3aac be09cf86 bf7dabcc     .@...:}.......}.
  41b3d8:	bdfab273 bf7e1324 bde1bc2e bf7e70b0     s...$.~......p~.
  41b3e8:	bdc8bd36 bf7ec46d bdafb680 bf7f0e58     6...m.~.....X...
  41b3f8:	bd96a905 bf7f4e6d bd7b2b74 bf7f84ab     ....mN..t+{.....
  41b408:	bd48fb2f bf7fb10f bd16c32c bf7fd398     /.H.....,.......
  41b418:	bcc90ab0 bf7fec43 bc490e90 bf7ffb11     ....C.....I.....
  41b428:	80000000 bf800000 3c490e90 bf7ffb11     ..........I<....
  41b438:	3cc90ab0 bf7fec43 3d16c32c bf7fd398     ...<C...,..=....
  41b448:	3d48fb2f bf7fb10f 3d7b2b74 bf7f84ab     /.H=....t+{=....
  41b458:	3d96a905 bf7f4e6d 3dafb680 bf7f0e58     ...=mN.....=X...
  41b468:	3dc8bd36 bf7ec46d 3de1bc2e bf7e70b0     6..=m.~....=.p~.
  41b478:	3dfab273 bf7e1324 3e09cf86 bf7dabcc     s..=$.~....>..}.
  41b488:	3e164083 bf7d3aac 3e22abb6 bf7cbfc9     .@.>.:}...">..|.
  41b498:	3e2f10a2 bf7c3b28 3e3b6ecf bf7baccd     ../>(;|..n;>..{.
  41b4a8:	3e47c5c2 bf7b14be 3e541501 bf7a7302     ..G>..{...T>.sz.
  41b4b8:	3e605c13 bf79c79d 3e6c9a7f bf791298     .\`>..y...l>..y.
  41b4c8:	3e78cfcc bf7853f8 3e827dc0 bf778bc5     ..x>.Sx..}.>..w.
  41b4d8:	3e888e93 bf76ba07 3e8e9a22 bf75dec6     ...>..v."..>..u.
  41b4e8:	3e94a031 bf74fa0b 3e9aa086 bf740bdd     1..>..t....>..t.
  41b4f8:	3ea09ae5 bf731447 3ea68f12 bf721352     ...>G.s....>R.r.
  41b508:	3eac7cd4 bf710908 3eb263ef bf6ff573     .|.>..q..c.>s.o.
  41b518:	3eb8442a bf6ed89e 3ebe1d4a bf6db293     *D.>..n.J..>..m.
  41b528:	3ec3ef15 bf6c835e 3ec9b953 bf6b4b0c     ...>^.l.S..>.Kk.
  41b538:	3ecf7bca bf6a09a7 3ed53641 bf68bf3c     .{.>..j.A6.><.h.
  41b548:	3edae880 bf676bd8 3ee0924f bf660f88     ...>.kg.O..>..f.
  41b558:	3ee63375 bf64aa59 3eebcbbb bf633c5a     u3.>Y.d....>Z<c.
  41b568:	3ef15aea bf61c598 3ef6e0cb bf604621     .Z.>..a....>!F`.
  41b578:	3efc5d27 bf5ebe05 3f00e7e4 bf5d2d53     '].>..^....?S-].
  41b588:	3f039c3d bf5b941a 3f064b82 bf59f26a     =..?..[..K.?j.Y.
  41b598:	3f08f59b bf584853 3f0b9a6b bf5695e5     ...?SHX.k..?..V.
  41b5a8:	3f0e39da bf54db31 3f10d3cd bf531849     .9.?1.T....?I.S.
  41b5b8:	3f13682a bf514d3d 3f15f6d9 bf4f7a1f     *h.?=MQ....?.zO.
  41b5c8:	3f187fc0 bf4d9f02 3f1b02c6 bf4bbbf8     ...?..M....?..K.
  41b5d8:	3f1d7fd1 bf49d112 3f1ff6cb bf47de65     ...?..I....?e.G.
  41b5e8:	3f226799 bf45e403 3f24d225 bf43e200     .g"?..E.%.$?..C.
  41b5f8:	3f273656 bf41d870 3f299415 bf3fc767     V6'?p.A...)?g.?.
  41b608:	3f2beb4a bf3daef9 3f2e3bde bf3b8f3b     J.+?..=..;.?;.;.
  41b618:	3f3085bb bf396842 3f32c8c9 bf373a23     ..0?Bh9...2?#:7.
  41b628:	3f3504f3 bf3504f3 3f373a23 bf32c8c9     ..5?..5.#:7?..2.
  41b638:	3f396842 bf3085bb 3f3b8f3b bf2e3bde     Bh9?..0.;.;?.;..
  41b648:	3f3daef9 bf2beb4a 3f3fc767 bf299415     ..=?J.+.g.??..).
  41b658:	3f41d870 bf273656 3f43e200 bf24d225     p.A?V6'...C?%.$.
  41b668:	3f45e403 bf226799 3f47de65 bf1ff6cb     ..E?.g".e.G?....
  41b678:	3f49d112 bf1d7fd1 3f4bbbf8 bf1b02c6     ..I?......K?....
  41b688:	3f4d9f02 bf187fc0 3f4f7a1f bf15f6d9     ..M?.....zO?....
  41b698:	3f514d3d bf13682a 3f531849 bf10d3cd     =MQ?*h..I.S?....
  41b6a8:	3f54db31 bf0e39da 3f5695e5 bf0b9a6b     1.T?.9....V?k...
  41b6b8:	3f584853 bf08f59b 3f59f26a bf064b82     SHX?....j.Y?.K..
  41b6c8:	3f5b941a bf039c3d 3f5d2d53 bf00e7e4     ..[?=...S-]?....
  41b6d8:	3f5ebe05 befc5d27 3f604621 bef6e0cb     ..^?']..!F`?....
  41b6e8:	3f61c598 bef15aea 3f633c5a beebcbbb     ..a?.Z..Z<c?....
  41b6f8:	3f64aa59 bee63375 3f660f88 bee0924f     Y.d?u3....f?O...
  41b708:	3f676bd8 bedae880 3f68bf3c bed53641     .kg?....<.h?A6..
  41b718:	3f6a09a7 becf7bca 3f6b4b0c bec9b953     ..j?.{...Kk?S...
  41b728:	3f6c835e bec3ef15 3f6db293 bebe1d4a     ^.l?......m?J...
  41b738:	3f6ed89e beb8442a 3f6ff573 beb263ef     ..n?*D..s.o?.c..
  41b748:	3f710908 beac7cd4 3f721352 bea68f12     ..q?.|..R.r?....
  41b758:	3f731447 bea09ae5 3f740bdd be9aa086     G.s?......t?....
  41b768:	3f74fa0b be94a031 3f75dec6 be8e9a22     ..t?1.....u?"...
  41b778:	3f76ba07 be888e93 3f778bc5 be827dc0     ..v?......w?.}..
  41b788:	3f7853f8 be78cfcc 3f791298 be6c9a7f     .Sx?..x...y?..l.
  41b798:	3f79c79d be605c13 3f7a7302 be541501     ..y?.\`..sz?..T.
  41b7a8:	3f7b14be be47c5c2 3f7baccd be3b6ecf     ..{?..G...{?.n;.
  41b7b8:	3f7c3b28 be2f10a2 3f7cbfc9 be22abb6     (;|?../...|?..".
  41b7c8:	3f7d3aac be164083 3f7dabcc be09cf86     .:}?.@....}?....
  41b7d8:	3f7e1324 bdfab273 3f7e70b0 bde1bc2e     $.~?s....p~?....
  41b7e8:	3f7ec46d bdc8bd36 3f7f0e58 bdafb680     m.~?6...X..?....
  41b7f8:	3f7f4e6d bd96a905 3f7f84ab bd7b2b74     mN.?.......?t+{.
  41b808:	3f7fb10f bd48fb2f 3f7fd398 bd16c32c     ...?/.H....?,...
  41b818:	3f7fec43 bcc90ab0 3f7ffb11 bc490e90     C..?.......?..I.

0041b828 <armBitRevIndexTable2048>:
  41b828:	10000008 20000010 30000018 02000020     ....... ...0 ...
  41b838:	12000028 22000030 32000038 04000040     (...0.."8..2@...
  41b848:	14000048 24000050 34000058 06000060     H...P..$X..4`...
  41b858:	16000068 26000070 36000078 08000080     h...p..&x..6....
  41b868:	18000088 28000090 38000098 0a0000a0     .......(...8....
  41b878:	1a0000a8 2a0000b0 3a0000b8 0c0000c0     .......*...:....
  41b888:	1c0000c8 2c0000d0 3c0000d8 0e0000e0     .......,...<....
  41b898:	1e0000e8 2e0000f0 3e0000f8 04000100     ...........>....
  41b8a8:	10400108 20400110 30400118 02400120     ..@...@ ..@0 .@.
  41b8b8:	12400128 22400130 32400138 04400140     (.@.0.@"8.@2@.@.
  41b8c8:	14400148 24400150 34400158 06400160     H.@.P.@$X.@4`.@.
  41b8d8:	16400168 26400170 36400178 08400180     h.@.p.@&x.@6..@.
  41b8e8:	18400188 28400190 38400198 0a4001a0     ..@...@(..@8..@.
  41b8f8:	1a4001a8 2a4001b0 3a4001b8 0c4001c0     ..@...@*..@:..@.
  41b908:	1c4001c8 2c4001d0 3c4001d8 0e4001e0     ..@...@,..@<..@.
  41b918:	1e4001e8 2e4001f0 3e4001f8 08000200     ..@...@...@>....
  41b928:	10800208 20800210 30800218 02800220     ....... ...0 ...
  41b938:	12800228 22800230 32800238 04800240     (...0.."8..2@...
  41b948:	14800248 24800250 34800258 06800260     H...P..$X..4`...
  41b958:	16800268 26800270 36800278 08800280     h...p..&x..6....
  41b968:	18800288 28800290 38800298 0a8002a0     .......(...8....
  41b978:	1a8002a8 2a8002b0 3a8002b8 0c8002c0     .......*...:....
  41b988:	1c8002c8 2c8002d0 3c8002d8 0e8002e0     .......,...<....
  41b998:	1e8002e8 2e8002f0 3e8002f8 0c000300     ...........>....
  41b9a8:	10c00308 20c00310 30c00318 0c800320     ....... ...0 ...
  41b9b8:	12c00328 22c00330 32c00338 04c00340     (...0.."8..2@...
  41b9c8:	14c00348 24c00350 34c00358 06c00360     H...P..$X..4`...
  41b9d8:	16c00368 26c00370 36c00378 08c00380     h...p..&x..6....
  41b9e8:	18c00388 28c00390 38c00398 0ac003a0     .......(...8....
  41b9f8:	1ac003a8 2ac003b0 3ac003b8 0cc003c0     .......*...:....
  41ba08:	1cc003c8 2cc003d0 3cc003d8 0ec003e0     .......,...<....
  41ba18:	1ec003e8 2ec003f0 3ec003f8 11000408     ...........>....
  41ba28:	21000410 31000418 0c000420 13000428     ...!...1 ...(...
  41ba38:	23000430 33000438 05000440 15000448     0..#8..3@...H...
  41ba48:	25000450 35000458 07000460 17000468     P..%X..5`...h...
  41ba58:	27000470 37000478 09000480 19000488     p..'x..7........
  41ba68:	29000490 39000498 0b0004a0 1b0004a8     ...)...9........
  41ba78:	2b0004b0 3b0004b8 0d0004c0 1d0004c8     ...+...;........
  41ba88:	2d0004d0 3d0004d8 0f0004e0 1f0004e8     ...-...=........
  41ba98:	2f0004f0 3f0004f8 11400508 21400510     .../...?..@...@!
  41baa8:	31400518 0d000520 13400528 23400530     ..@1 ...(.@.0.@#
  41bab8:	33400538 15400548 25400550 35400558     8.@3H.@.P.@%X.@5
  41bac8:	07400560 17400568 27400570 37400578     `.@.h.@.p.@'x.@7
  41bad8:	09400580 19400588 29400590 39400598     ..@...@...@)..@9
  41bae8:	0b4005a0 1b4005a8 2b4005b0 3b4005b8     ..@...@...@+..@;
  41baf8:	0d4005c0 1d4005c8 2d4005d0 3d4005d8     ..@...@...@-..@=
  41bb08:	0f4005e0 1f4005e8 2f4005f0 3f4005f8     ..@...@...@/..@?
  41bb18:	08400600 11800608 21800610 31800618     ..@........!...1
  41bb28:	08c00620 13800628 23800630 33800638      ...(...0..#8..3
  41bb38:	09400640 15800648 25800650 35800658     @.@.H...P..%X..5
  41bb48:	07800660 17800668 27800670 37800678     `...h...p..'x..7
  41bb58:	09800680 19800688 29800690 39800698     ...........)...9
  41bb68:	0b8006a0 1b8006a8 2b8006b0 3b8006b8     ...........+...;
  41bb78:	0d8006c0 1d8006c8 2d8006d0 3d8006d8     ...........-...=
  41bb88:	0f8006e0 1f8006e8 2f8006f0 3f8006f8     .........../...?
  41bb98:	0c400700 11c00708 21c00710 31c00718     ..@........!...1
  41bba8:	0cc00720 13c00728 23c00730 33c00738      ...(...0..#8..3
  41bbb8:	0d400740 15c00748 25c00750 35c00758     @.@.H...P..%X..5
  41bbc8:	07c00760 17c00768 27c00770 37c00778     `...h...p..'x..7
  41bbd8:	09c00780 19c00788 29c00790 39c00798     ...........)...9
  41bbe8:	0bc007a0 1bc007a8 2bc007b0 3bc007b8     ...........+...;
  41bbf8:	0dc007c0 1dc007c8 2dc007d0 3dc007d8     ...........-...=
  41bc08:	0fc007e0 1fc007e8 2fc007f0 3fc007f8     .........../...?
  41bc18:	10000800 10080808 20080810 30080818     ........... ...0
  41bc28:	10800820 12080828 22080830 32080838      ...(...0.."8..2
  41bc38:	11000840 14080848 24080850 34080858     @...H...P..$X..4
  41bc48:	11800860 16080868 26080870 36080878     `...h...p..&x..6
  41bc58:	10080880 18080888 28080890 38080898     ...........(...8
  41bc68:	0a0808a0 1a0808a8 2a0808b0 3a0808b8     ...........*...:
  41bc78:	0c0808c0 1c0808c8 2c0808d0 3c0808d8     ...........,...<
  41bc88:	0e0808e0 1e0808e8 2e0808f0 3e0808f8     ...............>
  41bc98:	14000900 10480908 20480910 30480918     ......H...H ..H0
  41bca8:	14800920 12480928 22480930 32480938      ...(.H.0.H"8.H2
  41bcb8:	15000940 14480948 24480950 34480958     @...H.H.P.H$X.H4
  41bcc8:	15800960 16480968 26480970 36480978     `...h.H.p.H&x.H6
  41bcd8:	14080980 18480988 28480990 38480998     ......H...H(..H8
  41bce8:	0a4809a0 1a4809a8 2a4809b0 3a4809b8     ..H...H...H*..H:
  41bcf8:	0c4809c0 1c4809c8 2c4809d0 3c4809d8     ..H...H...H,..H<
  41bd08:	0e4809e0 1e4809e8 2e4809f0 3e4809f8     ..H...H...H...H>
  41bd18:	18000a00 10880a08 20880a10 30880a18     ........... ...0
  41bd28:	18800a20 12880a28 22880a30 32880a38      ...(...0.."8..2
  41bd38:	19000a40 14880a48 24880a50 34880a58     @...H...P..$X..4
  41bd48:	19800a60 16880a68 26880a70 36880a78     `...h...p..&x..6
  41bd58:	18080a80 18880a88 28880a90 38880a98     ...........(...8
  41bd68:	18880aa0 1a880aa8 2a880ab0 3a880ab8     ...........*...:
  41bd78:	0c880ac0 1c880ac8 2c880ad0 3c880ad8     ...........,...<
  41bd88:	0e880ae0 1e880ae8 2e880af0 3e880af8     ...............>
  41bd98:	1c000b00 10c80b08 20c80b10 30c80b18     ........... ...0
  41bda8:	1c800b20 12c80b28 22c80b30 32c80b38      ...(...0.."8..2
  41bdb8:	1d000b40 14c80b48 24c80b50 34c80b58     @...H...P..$X..4
  41bdc8:	1d800b60 16c80b68 26c80b70 36c80b78     `...h...p..&x..6
  41bdd8:	1c080b80 18c80b88 28c80b90 38c80b98     ...........(...8
  41bde8:	1c880ba0 1ac80ba8 2ac80bb0 3ac80bb8     ...........*...:
  41bdf8:	0cc80bc0 1cc80bc8 2cc80bd0 3cc80bd8     ...........,...<
  41be08:	0ec80be0 1ec80be8 2ec80bf0 3ec80bf8     ...............>
  41be18:	10400c00 11080c08 21080c10 31080c18     ..@........!...1
  41be28:	10c00c20 13080c28 23080c30 33080c38      ...(...0..#8..3
  41be38:	11400c40 15080c48 25080c50 35080c58     @.@.H...P..%X..5
  41be48:	11c00c60 17080c68 27080c70 37080c78     `...h...p..'x..7
  41be58:	10480c80 19080c88 29080c90 39080c98     ..H........)...9
  41be68:	10c80ca0 1b080ca8 2b080cb0 3b080cb8     ...........+...;
  41be78:	0d080cc0 1d080cc8 2d080cd0 3d080cd8     ...........-...=
  41be88:	0f080ce0 1f080ce8 2f080cf0 3f080cf8     .........../...?
  41be98:	14400d00 11480d08 21480d10 31480d18     ..@...H...H!..H1
  41bea8:	14c00d20 13480d28 23480d30 33480d38      ...(.H.0.H#8.H3
  41beb8:	15400d40 15480d48 25480d50 35480d58     @.@.H.H.P.H%X.H5
  41bec8:	15c00d60 17480d68 27480d70 37480d78     `...h.H.p.H'x.H7
  41bed8:	14480d80 19480d88 29480d90 39480d98     ..H...H...H)..H9
  41bee8:	14c80da0 1b480da8 2b480db0 3b480db8     ......H...H+..H;
  41bef8:	15480dc0 1d480dc8 2d480dd0 3d480dd8     ..H...H...H-..H=
  41bf08:	0f480de0 1f480de8 2f480df0 3f480df8     ..H...H...H/..H?
  41bf18:	18400e00 11880e08 21880e10 31880e18     ..@........!...1
  41bf28:	18c00e20 13880e28 23880e30 33880e38      ...(...0..#8..3
  41bf38:	19400e40 15880e48 25880e50 35880e58     @.@.H...P..%X..5
  41bf48:	19c00e60 17880e68 27880e70 37880e78     `...h...p..'x..7
  41bf58:	18480e80 19880e88 29880e90 39880e98     ..H........)...9
  41bf68:	18c80ea0 1b880ea8 2b880eb0 3b880eb8     ...........+...;
  41bf78:	19480ec0 1d880ec8 2d880ed0 3d880ed8     ..H........-...=
  41bf88:	0f880ee0 1f880ee8 2f880ef0 3f880ef8     .........../...?
  41bf98:	1c400f00 11c80f08 21c80f10 31c80f18     ..@........!...1
  41bfa8:	1cc00f20 13c80f28 23c80f30 33c80f38      ...(...0..#8..3
  41bfb8:	1d400f40 15c80f48 25c80f50 35c80f58     @.@.H...P..%X..5
  41bfc8:	1dc00f60 17c80f68 27c80f70 37c80f78     `...h...p..'x..7
  41bfd8:	1c480f80 19c80f88 29c80f90 39c80f98     ..H........)...9
  41bfe8:	1cc80fa0 1bc80fa8 2bc80fb0 3bc80fb8     ...........+...;
  41bff8:	1d480fc0 1dc80fc8 2dc80fd0 3dc80fd8     ..H........-...=
  41c008:	1dc80fe0 1fc80fe8 2fc80ff0 3fc80ff8     .........../...?
  41c018:	20001000 10101008 20101010 30101018     ... ....... ...0
  41c028:	20801020 12101028 22101030 32101038      .. (...0.."8..2
  41c038:	21001040 14101048 24101050 34101058     @..!H...P..$X..4
  41c048:	21801060 16101068 26101070 36101078     `..!h...p..&x..6
  41c058:	20081080 18101088 28101090 38101098     ... .......(...8
  41c068:	208810a0 1a1010a8 2a1010b0 3a1010b8     ... .......*...:
  41c078:	210810c0 1c1010c8 2c1010d0 3c1010d8     ...!.......,...<
  41c088:	218810e0 1e1010e8 2e1010f0 3e1010f8     ...!...........>
  41c098:	24001100 24101108 20501110 30501118     ...$...$..P ..P0
  41c0a8:	24801120 12501128 22501130 32501138      ..$(.P.0.P"8.P2
  41c0b8:	25001140 14501148 24501150 34501158     @..%H.P.P.P$X.P4
  41c0c8:	25801160 16501168 26501170 36501178     `..%h.P.p.P&x.P6
  41c0d8:	24081180 18501188 28501190 38501198     ...$..P...P(..P8
  41c0e8:	248811a0 1a5011a8 2a5011b0 3a5011b8     ...$..P...P*..P:
  41c0f8:	250811c0 1c5011c8 2c5011d0 3c5011d8     ...%..P...P,..P<
  41c108:	258811e0 1e5011e8 2e5011f0 3e5011f8     ...%..P...P...P>
  41c118:	28001200 28101208 20901210 30901218     ...(...(... ...0
  41c128:	28801220 12901228 22901230 32901238      ..((...0.."8..2
  41c138:	29001240 14901248 24901250 34901258     @..)H...P..$X..4
  41c148:	29801260 16901268 26901270 36901278     `..)h...p..&x..6
  41c158:	28081280 18901288 28901290 38901298     ...(.......(...8
  41c168:	288812a0 1a9012a8 2a9012b0 3a9012b8     ...(.......*...:
  41c178:	290812c0 1c9012c8 2c9012d0 3c9012d8     ...).......,...<
  41c188:	298812e0 1e9012e8 2e9012f0 3e9012f8     ...)...........>
  41c198:	2c001300 2c101308 20d01310 30d01318     ...,...,... ...0
  41c1a8:	2c801320 2c901328 22d01330 32d01338      ..,(..,0.."8..2
  41c1b8:	2d001340 14d01348 24d01350 34d01358     @..-H...P..$X..4
  41c1c8:	2d801360 16d01368 26d01370 36d01378     `..-h...p..&x..6
  41c1d8:	2c081380 18d01388 28d01390 38d01398     ...,.......(...8
  41c1e8:	2c8813a0 1ad013a8 2ad013b0 3ad013b8     ...,.......*...:
  41c1f8:	2d0813c0 1cd013c8 2cd013d0 3cd013d8     ...-.......,...<
  41c208:	2d8813e0 1ed013e8 2ed013f0 3ed013f8     ...-...........>
  41c218:	20401400 20501408 21101410 31101418     ..@ ..P ...!...1
  41c228:	20c01420 20d01428 23101430 33101438      .. (.. 0..#8..3
  41c238:	21401440 15101448 25101450 35101458     @.@!H...P..%X..5
  41c248:	21c01460 17101468 27101470 37101478     `..!h...p..'x..7
  41c258:	20481480 19101488 29101490 39101498     ..H .......)...9
  41c268:	20c814a0 1b1014a8 2b1014b0 3b1014b8     ... .......+...;
  41c278:	214814c0 1d1014c8 2d1014d0 3d1014d8     ..H!.......-...=
  41c288:	21c814e0 1f1014e8 2f1014f0 3f1014f8     ...!......./...?
  41c298:	24401500 24501508 21501510 31501518     ..@$..P$..P!..P1
  41c2a8:	24c01520 24d01528 23501530 33501538      ..$(..$0.P#8.P3
  41c2b8:	25401540 15501548 25501550 35501558     @.@%H.P.P.P%X.P5
  41c2c8:	25c01560 17501568 27501570 37501578     `..%h.P.p.P'x.P7
  41c2d8:	24481580 19501588 29501590 39501598     ..H$..P...P)..P9
  41c2e8:	24c815a0 1b5015a8 2b5015b0 3b5015b8     ...$..P...P+..P;
  41c2f8:	254815c0 1d5015c8 2d5015d0 3d5015d8     ..H%..P...P-..P=
  41c308:	25c815e0 1f5015e8 2f5015f0 3f5015f8     ...%..P...P/..P?
  41c318:	28401600 28501608 21901610 31901618     ..@(..P(...!...1
  41c328:	28c01620 28d01628 23901630 33901638      ..((..(0..#8..3
  41c338:	29401640 29501648 25901650 35901658     @.@)H.P)P..%X..5
  41c348:	29c01660 17901668 27901670 37901678     `..)h...p..'x..7
  41c358:	28481680 19901688 29901690 39901698     ..H(.......)...9
  41c368:	28c816a0 1b9016a8 2b9016b0 3b9016b8     ...(.......+...;
  41c378:	294816c0 1d9016c8 2d9016d0 3d9016d8     ..H).......-...=
  41c388:	29c816e0 1f9016e8 2f9016f0 3f9016f8     ...)......./...?
  41c398:	2c401700 2c501708 21d01710 31d01718     ..@,..P,...!...1
  41c3a8:	2cc01720 2cd01728 23d01730 33d01738      ..,(..,0..#8..3
  41c3b8:	2d401740 2d501748 25d01750 35d01758     @.@-H.P-P..%X..5
  41c3c8:	2dc01760 17d01768 27d01770 37d01778     `..-h...p..'x..7
  41c3d8:	2c481780 19d01788 29d01790 39d01798     ..H,.......)...9
  41c3e8:	2cc817a0 1bd017a8 2bd017b0 3bd017b8     ...,.......+...;
  41c3f8:	2d4817c0 1dd017c8 2dd017d0 3dd017d8     ..H-.......-...=
  41c408:	2dc817e0 1fd017e8 2fd017f0 3fd017f8     ...-......./...?
  41c418:	30001800 30101808 20181810 30181818     ...0...0... ...0
  41c428:	30801820 30901828 22181830 32181838      ..0(..00.."8..2
  41c438:	31001840 31101848 24181850 34181858     @..1H..1P..$X..4
  41c448:	31801860 31901868 26181870 36181878     `..1h..1p..&x..6
  41c458:	30081880 30181888 28181890 38181898     ...0...0...(...8
  41c468:	308818a0 1a1818a8 2a1818b0 3a1818b8     ...0.......*...:
  41c478:	310818c0 1c1818c8 2c1818d0 3c1818d8     ...1.......,...<
  41c488:	318818e0 1e1818e8 2e1818f0 3e1818f8     ...1...........>
  41c498:	34001900 34101908 20581910 30581918     ...4...4..X ..X0
  41c4a8:	34801920 34901928 22581930 32581938      ..4(..40.X"8.X2
  41c4b8:	35001940 35101948 24581950 34581958     @..5H..5P.X$X.X4
  41c4c8:	35801960 35901968 26581970 36581978     `..5h..5p.X&x.X6
  41c4d8:	34081980 34181988 28581990 38581998     ...4...4..X(..X8
  41c4e8:	348819a0 1a5819a8 2a5819b0 3a5819b8     ...4..X...X*..X:
  41c4f8:	350819c0 1c5819c8 2c5819d0 3c5819d8     ...5..X...X,..X<
  41c508:	358819e0 1e5819e8 2e5819f0 3e5819f8     ...5..X...X...X>
  41c518:	38001a00 38101a08 20981a10 30981a18     ...8...8... ...0
  41c528:	38801a20 38901a28 22981a30 32981a38      ..8(..80.."8..2
  41c538:	39001a40 39101a48 24981a50 34981a58     @..9H..9P..$X..4
  41c548:	39801a60 39901a68 26981a70 36981a78     `..9h..9p..&x..6
  41c558:	38081a80 38181a88 28981a90 38981a98     ...8...8...(...8
  41c568:	38881aa0 38981aa8 2a981ab0 3a981ab8     ...8...8...*...:
  41c578:	39081ac0 1c981ac8 2c981ad0 3c981ad8     ...9.......,...<
  41c588:	39881ae0 1e981ae8 2e981af0 3e981af8     ...9...........>
  41c598:	3c001b00 3c101b08 20d81b10 30d81b18     ...<...<... ...0
  41c5a8:	3c801b20 3c901b28 22d81b30 32d81b38      ..<(..<0.."8..2
  41c5b8:	3d001b40 3d101b48 24d81b50 34d81b58     @..=H..=P..$X..4
  41c5c8:	3d801b60 3d901b68 26d81b70 36d81b78     `..=h..=p..&x..6
  41c5d8:	3c081b80 3c181b88 28d81b90 38d81b98     ...<...<...(...8
  41c5e8:	3c881ba0 3c981ba8 2ad81bb0 3ad81bb8     ...<...<...*...:
  41c5f8:	3d081bc0 1cd81bc8 2cd81bd0 3cd81bd8     ...=.......,...<
  41c608:	3d881be0 1ed81be8 2ed81bf0 3ed81bf8     ...=...........>
  41c618:	30401c00 30501c08 21181c10 31181c18     ..@0..P0...!...1
  41c628:	30c01c20 30d01c28 23181c30 33181c38      ..0(..00..#8..3
  41c638:	31401c40 31501c48 25181c50 35181c58     @.@1H.P1P..%X..5
  41c648:	31c01c60 31d01c68 27181c70 37181c78     `..1h..1p..'x..7
  41c658:	30481c80 30581c88 29181c90 39181c98     ..H0..X0...)...9
  41c668:	30c81ca0 30d81ca8 2b181cb0 3b181cb8     ...0...0...+...;
  41c678:	31481cc0 1d181cc8 2d181cd0 3d181cd8     ..H1.......-...=
  41c688:	31c81ce0 1f181ce8 2f181cf0 3f181cf8     ...1......./...?
  41c698:	34401d00 34501d08 21581d10 31581d18     ..@4..P4..X!..X1
  41c6a8:	34c01d20 34d01d28 23581d30 33581d38      ..4(..40.X#8.X3
  41c6b8:	35401d40 35501d48 25581d50 35581d58     @.@5H.P5P.X%X.X5
  41c6c8:	35c01d60 35d01d68 27581d70 37581d78     `..5h..5p.X'x.X7
  41c6d8:	34481d80 34581d88 29581d90 39581d98     ..H4..X4..X)..X9
  41c6e8:	34c81da0 34d81da8 2b581db0 3b581db8     ...4...4..X+..X;
  41c6f8:	35481dc0 35581dc8 2d581dd0 3d581dd8     ..H5..X5..X-..X=
  41c708:	35c81de0 1f581de8 2f581df0 3f581df8     ...5..X...X/..X?
  41c718:	38401e00 38501e08 21981e10 31981e18     ..@8..P8...!...1
  41c728:	38c01e20 38d01e28 23981e30 33981e38      ..8(..80..#8..3
  41c738:	39401e40 39501e48 25981e50 35981e58     @.@9H.P9P..%X..5
  41c748:	39c01e60 39d01e68 27981e70 37981e78     `..9h..9p..'x..7
  41c758:	38481e80 38581e88 29981e90 39981e98     ..H8..X8...)...9
  41c768:	38c81ea0 38d81ea8 2b981eb0 3b981eb8     ...8...8...+...;
  41c778:	39481ec0 39581ec8 2d981ed0 3d981ed8     ..H9..X9...-...=
  41c788:	39c81ee0 1f981ee8 2f981ef0 3f981ef8     ...9......./...?
  41c798:	3c401f00 3c501f08 21d81f10 31d81f18     ..@<..P<...!...1
  41c7a8:	3cc01f20 3cd01f28 23d81f30 33d81f38      ..<(..<0..#8..3
  41c7b8:	3d401f40 3d501f48 25d81f50 35d81f58     @.@=H.P=P..%X..5
  41c7c8:	3dc01f60 3dd01f68 27d81f70 37d81f78     `..=h..=p..'x..7
  41c7d8:	3c481f80 3c581f88 29d81f90 39d81f98     ..H<..X<...)...9
  41c7e8:	3cc81fa0 3cd81fa8 2bd81fb0 3bd81fb8     ...<...<...+...;
  41c7f8:	3d481fc0 3d581fc8 2dd81fd0 3dd81fd8     ..H=..X=...-...=
  41c808:	3dc81fe0 3dd81fe8 2fd81ff0 3fd81ff8     ...=...=.../...?
  41c818:	20802008 20202010 30202018 28802028     . . .   .  0( .(
  41c828:	22202030 32202038 21002040 20c02048     0  "8  2@ .!H . 
  41c838:	24202050 34202058 24102060 28c02068     P  $X  4` .$h .(
  41c848:	26202070 36202078 30802088 28202090     p  &x  6. .0.  (
  41c858:	38202098 300820a0 388020a8 2a2020b0     .  8. .0. .8.  *
  41c868:	3a2020b8 210820c0 30c020c8 2c2020d0     .  :. .!. .0.  ,
  41c878:	3c2020d8 310820e0 38c020e8 2e2020f0     .  <. .1. .8.  .
  41c888:	3e2020f8 24002100 21802108 24102110     .  >.!.$.!.!.!.$
  41c898:	30602118 24202120 29802128 22602130     .!`0 ! $(!.)0!`"
  41c8a8:	32602138 25002140 21c02148 24602150     8!`2@!.%H!.!P!`$
  41c8b8:	34602158 24502160 29c02168 26602170     X!`4`!P$h!.)p!`&
  41c8c8:	36602178 24082180 31802188 28602190     x!`6.!.$.!.1.!`(
  41c8d8:	38602198 340821a0 398021a8 2a6021b0     .!`8.!.4.!.9.!`*
  41c8e8:	3a6021b8 250821c0 31c021c8 2c6021d0     .!`:.!.%.!.1.!`,
  41c8f8:	3c6021d8 350821e0 39c021e8 2e6021f0     .!`<.!.5.!.9.!`.
  41c908:	3e6021f8 30002200 30802208 30082210     .!`>.".0.".0.".0
  41c918:	30a02218 30102220 28882228 22a02230     .".0 ".0(".(0"."
  41c928:	32a02238 30402240 30c02248 24a02250     8".2@"@0H".0P".$
  41c938:	34a02258 30502260 28c82268 26a02270     X".4`"P0h".(p".&
  41c948:	36a02278 30202280 30882288 28a02290     x".6." 0.".0.".(
  41c958:	38a02298 301822a0 388822a8 2aa022b0     .".8.".0.".8.".*
  41c968:	3aa022b8 306022c0 30c822c8 2ca022d0     .".:."`0.".0.".,
  41c978:	3ca022d8 311822e0 38c822e8 2ea022f0     .".<.".1.".8."..
  41c988:	3ea022f8 31002300 31802308 31082310     .".>.#.1.#.1.#.1
  41c998:	30e02318 31102320 29882328 31182330     .#.0 #.1(#.)0#.1
  41c9a8:	32e02338 31402340 31c02348 24e02350     8#.2@#@1H#.1P#.$
  41c9b8:	34e02358 31502360 29c82368 26e02370     X#.4`#P1h#.)p#.&
  41c9c8:	36e02378 24182380 31882388 28e02390     x#.6.#.$.#.1.#.(
  41c9d8:	38e02398 341823a0 398823a8 2ae023b0     .#.8.#.4.#.9.#.*
  41c9e8:	3ae023b8 251823c0 31c823c8 2ce023d0     .#.:.#.%.#.1.#.,
  41c9f8:	3ce023d8 351823e0 39c823e8 2ee023f0     .#.<.#.5.#.9.#..
  41ca08:	3ee023f8 24802408 24202410 31202418     .#.>.$.$.$ $.$ 1
  41ca18:	2c802428 31102430 33202438 25002440     ($.,0$.18$ 3@$.%
  41ca28:	24c02448 25202450 35202458 25102460     H$.$P$ %X$ 5`$.%
  41ca38:	2cc02468 27202470 37202478 34802488     h$.,p$ 'x$ 7.$.4
  41ca48:	29202490 39202498 304824a0 3c8024a8     .$ ).$ 9.$H0.$.<
  41ca58:	2b2024b0 3b2024b8 250824c0 34c024c8     .$ +.$ ;.$.%.$.4
  41ca68:	2d2024d0 3d2024d8 314824e0 3cc024e8     .$ -.$ =.$H1.$.<
  41ca78:	2f2024f0 3f2024f8 25802508 25202510     .$ /.$ ?.%.%.% %
  41ca88:	31602518 2d802528 31502530 33602538     .%`1(%.-0%P18%`3
  41ca98:	25c02548 25602550 35602558 2dc02568     H%.%P%`%X%`5h%.-
  41caa8:	27602570 37602578 35802588 29602590     p%`'x%`7.%.5.%`)
  41cab8:	39602598 344825a0 3d8025a8 2b6025b0     .%`9.%H4.%.=.%`+
  41cac8:	3b6025b8 35c025c8 2d6025d0 3d6025d8     .%`;.%.5.%`-.%`=
  41cad8:	354825e0 3dc025e8 2f6025f0 3f6025f8     .%H5.%.=.%`/.%`?
  41cae8:	34002600 34802608 34082610 31a02618     .&.4.&.4.&.4.&.1
  41caf8:	34102620 2c882628 34182630 33a02638      &.4(&.,0&.48&.3
  41cb08:	34402640 34c02648 34482650 35a02658     @&@4H&.4P&H4X&.5
  41cb18:	34502660 2cc82668 27a02670 37a02678     `&P4h&.,p&.'x&.7
  41cb28:	34202680 34882688 29a02690 39a02698     .& 4.&.4.&.).&.9
  41cb38:	305826a0 3c8826a8 2ba026b0 3ba026b8     .&X0.&.<.&.+.&.;
  41cb48:	346026c0 34c826c8 2da026d0 3da026d8     .&`4.&.4.&.-.&.=
  41cb58:	315826e0 3cc826e8 2fa026f0 3fa026f8     .&X1.&.<.&./.&.?
  41cb68:	35002700 35802708 35082710 31e02718     .'.5.'.5.'.5.'.1
  41cb78:	35102720 2d882728 35182730 33e02738      '.5('.-0'.58'.3
  41cb88:	35402740 35c02748 35482750 35e02758     @'@5H'.5P'H5X'.5
  41cb98:	35502760 2dc82768 27e02770 37e02778     `'P5h'.-p'.'x'.7
  41cba8:	35202780 35882788 29e02790 39e02798     .' 5.'.5.'.).'.9
  41cbb8:	345827a0 3d8827a8 2be027b0 3be027b8     .'X4.'.=.'.+.'.;
  41cbc8:	356027c0 35c827c8 2de027d0 3de027d8     .'`5.'.5.'.-.'.=
  41cbd8:	355827e0 3dc827e8 2fe027f0 3fe027f8     .'X5.'.=.'./.'.?
  41cbe8:	28202808 28802810 30282818 28902828     .( (.(.(.((0((.(
  41cbf8:	28882830 32282838 2c002840 2c202848     0(.(8((2@(.,H( ,
  41cc08:	2c802850 34282858 2c082860 28d02868     P(.,X((4`(.,h(.(
  41cc18:	2c882870 36282878 30902888 38282898     p(.,x((6.(.0.((8
  41cc28:	302828a0 389028a8 2a2828b0 3a2828b8     .((0.(.8.((*.((:
  41cc38:	2c1028c0 30d028c8 2c2828d0 3c2828d8     .(.,.(.0.((,.((<
  41cc48:	2c1828e0 38d028e8 2e2828f0 3e2828f8     .(.,.(.8.((..((>
  41cc58:	2c002900 2c082908 2c102910 30682918     .).,.).,.).,.)h0
  41cc68:	2c202920 29902928 30d02930 32682938      ) ,().)0).08)h2
  41cc78:	2c402940 2c602948 2cc02950 34682958     @)@,H)`,P).,X)h4
  41cc88:	2c482960 29d02968 2cc82970 36682978     `)H,h).)p).,x)h6
  41cc98:	2c802980 31902988 2c282990 38682998     .).,.).1.)(,.)h8
  41cca8:	342829a0 399029a8 2a6829b0 3a6829b8     .)(4.).9.)h*.)h:
  41ccb8:	2c5029c0 31d029c8 2c6829d0 3c6829d8     .)P,.).1.)h,.)h<
  41ccc8:	2c5829e0 39d029e8 2e6829f0 3e6829f8     .)X,.).9.)h..)h>
  41ccd8:	38002a00 38202a08 38802a10 30a82a18     .*.8.* 8.*.8.*.0
  41cce8:	38082a20 38282a28 38882a30 32a82a38      *.8(*(80*.88*.2
  41ccf8:	3c002a40 3c202a48 3c802a50 34a82a58     @*.<H* <P*.<X*.4
  41cd08:	3c082a60 3c282a68 3c882a70 36a82a78     `*.<h*(<p*.<x*.6
  41cd18:	38102a80 30982a88 38902a90 38a82a98     .*.8.*.0.*.8.*.8
  41cd28:	38182aa0 38982aa8 38982ab0 3aa82ab8     .*.8.*.8.*.8.*.:
  41cd38:	3c102ac0 30d82ac8 2ca82ad0 3ca82ad8     .*.<.*.0.*.,.*.<
  41cd48:	3c182ae0 38d82ae8 2ea82af0 3ea82af8     .*.<.*.8.*...*.>
  41cd58:	38402b00 38602b08 38c02b10 30e82b18     .+@8.+`8.+.8.+.0
  41cd68:	38482b20 38682b28 38c82b30 32e82b38      +H8(+h80+.88+.2
  41cd78:	3c402b40 3c602b48 3cc02b50 34e82b58     @+@<H+`<P+.<X+.4
  41cd88:	3c482b60 3c682b68 3cc82b70 36e82b78     `+H<h+h<p+.<x+.6
  41cd98:	38502b80 31982b88 38d02b90 38e82b98     .+P8.+.1.+.8.+.8
  41cda8:	38582ba0 39982ba8 38d82bb0 3ae82bb8     .+X8.+.9.+.8.+.:
  41cdb8:	3c502bc0 31d82bc8 2ce82bd0 3ce82bd8     .+P<.+.1.+.,.+.<
  41cdc8:	3c582be0 39d82be8 2ee82bf0 3ee82bf8     .+X<.+.9.+...+.>
  41cdd8:	2c202c08 2c802c10 31282c18 2c902c28     ., ,.,.,.,(1(,.,
  41cde8:	31902c30 33282c38 2d002c40 2d202c48     0,.18,(3@,.-H, -
  41cdf8:	2d802c50 35282c58 2d082c60 2cd02c68     P,.-X,(5`,.-h,.,
  41ce08:	2d882c70 37282c78 34902c88 39282c98     p,.-x,(7.,.4.,(9
  41ce18:	30682ca0 3c902ca8 38682cb0 3b282cb8     .,h0.,.<.,h8.,(;
  41ce28:	2d102cc0 34d02cc8 2d282cd0 3d282cd8     .,.-.,.4.,(-.,(=
  41ce38:	2d182ce0 3cd02ce8 2f282cf0 3f282cf8     .,.-.,.<.,(/.,(?
  41ce48:	2d202d08 2d802d10 31682d18 2d902d28     .- -.-.-.-h1(-.-
  41ce58:	31d02d30 33682d38 2d602d48 2dc02d50     0-.18-h3H-`-P-.-
  41ce68:	35682d58 2dd02d68 2dc82d70 37682d78     X-h5h-.-p-.-x-h7
  41ce78:	35902d88 39682d98 34682da0 3d902da8     .-.5.-h9.-h4.-.=
  41ce88:	3c682db0 3b682db8 35d02dc8 3d682dd8     .-h<.-h;.-.5.-h=
  41ce98:	35682de0 3dd02de8 2f682df0 3f682df8     .-h5.-.=.-h/.-h?
  41cea8:	39002e00 39202e08 39802e10 31a82e18     ...9.. 9...9...1
  41ceb8:	39082e20 39282e28 39882e30 33a82e38      ..9(.(90..98..3
  41cec8:	3d002e40 3d202e48 3d802e50 35a82e58     @..=H. =P..=X..5
  41ced8:	3d082e60 3d282e68 3d882e70 37a82e78     `..=h.(=p..=x..7
  41cee8:	39102e80 34982e88 39902e90 39a82e98     ...9...4...9...9
  41cef8:	39182ea0 3c982ea8 39982eb0 3ba82eb8     ...9...<...9...;
  41cf08:	3d102ec0 34d82ec8 3d902ed0 3da82ed8     ...=...4...=...=
  41cf18:	3d182ee0 3cd82ee8 2fa82ef0 3fa82ef8     ...=...<.../...?
  41cf28:	39402f00 39602f08 39c02f10 31e82f18     ./@9./`9./.9./.1
  41cf38:	39482f20 39682f28 39c82f30 33e82f38      /H9(/h90/.98/.3
  41cf48:	3d402f40 3d602f48 3dc02f50 35e82f58     @/@=H/`=P/.=X/.5
  41cf58:	3d482f60 3d682f68 3dc82f70 37e82f78     `/H=h/h=p/.=x/.7
  41cf68:	39502f80 35982f88 39d02f90 39e82f98     ./P9./.5./.9./.9
  41cf78:	39582fa0 3d982fa8 39d82fb0 3be82fb8     ./X9./.=./.9./.;
  41cf88:	3d502fc0 35d82fc8 3dd02fd0 3de82fd8     ./P=./.5./.=./.=
  41cf98:	3d582fe0 3dd82fe8 3dd82ff0 3fe82ff8     ./X=./.=./.=./.?
  41cfa8:	30303018 32303038 31003040 31083048     .0008002@0.1H0.1
  41cfb8:	31103050 34303058 31203060 31283068     P0.1X004`0 1h0(1
  41cfc8:	34183070 36303078 30a03088 38303098     p0.4x006.0.0.008
  41cfd8:	38a030a8 388830b0 3a3030b8 318030c0     .0.8.0.8.00:.0.1
  41cfe8:	30e030c8 319030d0 3c3030d8 318830e0     .0.0.0.1.00<.0.1
  41cff8:	38e030e8 398830f0 3e3030f8 34003100     .0.8.0.9.00>.1.4
  41d008:	34083108 34103110 34183118 34203120     .1.4.1.4.1.4 1 4
  41d018:	34283128 34303130 32703138 35003140     (1(4010481p2@1.5
  41d028:	35083148 35103150 34703158 35203160     H1.5P1.5X1p4`1 5
  41d038:	35283168 34583170 36703178 34803180     h1(5p1X4x1p6.1.4
  41d048:	31a03188 34903190 38703198 348831a0     .1.1.1.4.1p8.1.4
  41d058:	39a031a8 3c8831b0 3a7031b8 358031c0     .1.9.1.<.1p:.1.5
  41d068:	31e031c8 359031d0 3c7031d8 358831e0     .1.1.1.5.1p<.1.5
  41d078:	39e031e8 3d8831f0 3e7031f8 38003200     .1.9.1.=.1p>.2.8
  41d088:	38803208 38083210 38883218 38103220     .2.8.2.8.2.8 2.8
  41d098:	38903228 38183230 32b03238 38403240     (2.802.882.2@2@8
  41d0a8:	38c03248 38483250 34b03258 38503260     H2.8P2H8X2.4`2P8
  41d0b8:	38d03268 38583270 36b03278 38203280     h2.8p2X8x2.6.2 8
  41d0c8:	38a03288 38283290 38b03298 383032a0     .2.8.2(8.2.8.208
  41d0d8:	38a832a8 389832b0 3ab032b8 386032c0     .2.8.2.8.2.:.2`8
  41d0e8:	38e032c8 386832d0 3cb032d8 387032e0     .2.8.2h8.2.<.2p8
  41d0f8:	38e832e8 399832f0 3eb032f8 39003300     .2.8.2.9.2.>.3.9
  41d108:	39803308 39083310 39883318 39103320     .3.9.3.9.3.9 3.9
  41d118:	39903328 39183330 39983338 39403340     (3.903.983.9@3@9
  41d128:	39c03348 39483350 34f03358 39503360     H3.9P3H9X3.4`3P9
  41d138:	39d03368 39583370 36f03378 39203380     h3.9p3X9x3.6.3 9
  41d148:	39a03388 39283390 38f03398 349833a0     .3.9.3(9.3.8.3.4
  41d158:	39a833a8 3c9833b0 3af033b8 396033c0     .3.9.3.<.3.:.3`9
  41d168:	39e033c8 396833d0 3cf033d8 359833e0     .3.9.3h9.3.<.3.5
  41d178:	39e833e8 3d9833f0 3ef033f8 34303418     .3.9.3.=.3.>.404
  41d188:	39183438 35003440 35083448 35103450     84.9@4.5H4.5P4.5
  41d198:	35303458 35203460 35283468 35183470     X405`4 5h4(5p4.5
  41d1a8:	37303478 34a03488 39303498 3ca034a8     x407.4.4.409.4.<
  41d1b8:	38c834b0 3b3034b8 358034c0 34e034c8     .4.8.40;.4.5.4.4
  41d1c8:	359034d0 3d3034d8 358834e0 3ce034e8     .4.5.40=.4.5.4.<
  41d1d8:	39c834f0 3f3034f8 35303518 39583538     .4.9.40?.50585X9
  41d1e8:	35703558 37703578 35a03588 39703598     X5p5x5p7.5.5.5p9
  41d1f8:	3da035a8 3cc835b0 3b7035b8 35e035c8     .5.=.5.<.5p;.5.5
  41d208:	3d7035d8 3de035e8 3dc835f0 3f7035f8     .5p=.5.=.5.=.5p?
  41d218:	3c003600 3c803608 3c083610 3c883618     .6.<.6.<.6.<.6.<
  41d228:	3c103620 3c903628 3c183630 3c983638      6.<(6.<06.<86.<
  41d238:	3c403640 3cc03648 3c483650 3cc83658     @6@<H6.<P6H<X6.<
  41d248:	3c503660 3cd03668 3c583670 37b03678     `6P<h6.<p6X<x6.7
  41d258:	3c203680 3ca03688 3c283690 39b03698     .6 <.6.<.6(<.6.9
  41d268:	3c3036a0 3ca836a8 38d836b0 3bb036b8     .60<.6.<.6.8.6.;
  41d278:	3c6036c0 3ce036c8 3c6836d0 3db036d8     .6`<.6.<.6h<.6.=
  41d288:	3c7036e0 3ce836e8 39d836f0 3fb036f8     .6p<.6.<.6.9.6.?
  41d298:	3d003700 3d803708 3d083710 3d883718     .7.=.7.=.7.=.7.=
  41d2a8:	3d103720 3d903728 3d183730 3d983738      7.=(7.=07.=87.=
  41d2b8:	3d403740 3dc03748 3d483750 3dc83758     @7@=H7.=P7H=X7.=
  41d2c8:	3d503760 3dd03768 3d583770 37f03778     `7P=h7.=p7X=x7.7
  41d2d8:	3d203780 3da03788 3d283790 39f03798     .7 =.7.=.7(=.7.9
  41d2e8:	3d3037a0 3da837a8 3cd837b0 3bf037b8     .70=.7.=.7.<.7.;
  41d2f8:	3d6037c0 3de037c8 3d6837d0 3df037d8     .7`=.7.=.7h=.7.=
  41d308:	3d7037e0 3de837e8 3dd837f0 3ff037f8     .7p=.7.=.7.=.7.?
  41d318:	38983838 39003840 39083848 39103850     88.8@8.9H8.9P8.9
  41d328:	39183858 39203860 39283868 39303870     X8.9`8 9h8(9p809
  41d338:	3c983878 38b038a8 3a3838b8 398038c0     x8.<.8.8.88:.8.9
  41d348:	398838c8 399038d0 3c3838d8 39a038e0     .8.9.8.9.88<.8.9
  41d358:	38f038e8 3e3838f8 39a838f0 3c003900     .8.8.88>.8.9.9.<
  41d368:	3c083908 3c103910 3c183918 3c203920     .9.<.9.<.9.< 9 <
  41d378:	3c283928 3c303930 3c383938 3d003940     (9(<090<898<@9.=
  41d388:	3d083948 3d103950 3d183958 3d203960     H9.=P9.=X9.=`9 =
  41d398:	3d283968 3d303970 3cd83978 3c803980     h9(=p90=x9.<.9.<
  41d3a8:	3c883988 3c903990 3c983998 3ca039a0     .9.<.9.<.9.<.9.<
  41d3b8:	39b039a8 3a7839b8 3ca839b0 3d8039c0     .9.9.9x:.9.<.9.=
  41d3c8:	3d8839c8 3d9039d0 3c7839d8 3da039e0     .9.=.9.=.9x<.9.=
  41d3d8:	39f039e8 3e7839f8 3da839f0 3a103a08     .9.9.9x>.9.=.:.:
  41d3e8:	3a203a10 3a303a18 3a803a20 3a903a28     .: :.:0: :.:(:.:
  41d3f8:	3aa03a30 3ab03a38 3b003a40 3b103a48     0:.:8:.:@:.;H:.;
  41d408:	3b203a50 3b303a58 3b803a60 3b903a68     P: ;X:0;`:.;h:.;
  41d418:	3ba03a70 3bb03a78 3aa03a88 3ab03a98     p:.;x:.;.:.:.:.:
  41d428:	3ab03aa8 3b083ac0 3b183ac8 3b283ad0     .:.:.:.;.:.;.:(;
  41d438:	3cb83ad8 3b883ae0 3b983ae8 3ba83af0     .:.<.:.;.:.;.:.;
  41d448:	3eb83af8 3e003b00 3e103b08 3e203b10     .:.>.;.>.;.>.; >
  41d458:	3e303b18 3e803b20 3e903b28 3ea03b30     .;0> ;.>(;.>0;.>
  41d468:	3eb03b38 3f003b40 3f103b48 3f203b50     8;.>@;.?H;.?P; ?
  41d478:	3f303b58 3f803b60 3f903b68 3fa03b70     X;0?`;.?h;.?p;.?
  41d488:	3fb03b78 3e083b80 3e183b88 3e283b90     x;.?.;.>.;.>.;(>
  41d498:	3e383b98 3e883ba0 3e983ba8 3ea83bb0     .;8>.;.>.;.>.;.>
  41d4a8:	3eb83bb8 3f083bc0 3f183bc8 3f283bd0     .;.>.;.?.;.?.;(?
  41d4b8:	3cf83bd8 3f883be0 3f983be8 3fa83bf0     .;.<.;.?.;.?.;.?
  41d4c8:	3ef83bf8 3c983c38 3d003c40 3d083c48     .;.>8<.<@<.=H<.=
  41d4d8:	3d103c50 3d183c58 3d203c60 3d283c68     P<.=X<.=`< =h<(=
  41d4e8:	3d303c70 3d983c78 3cb03ca8 3eb03cb8     p<0=x<.=.<.<.<.>
  41d4f8:	3d803cc0 3d883cc8 3d903cd0 3d383cd8     .<.=.<.=.<.=.<8=
  41d508:	3da03ce0 3cf03ce8 3da83cf0 3f383cf8     .<.=.<.<.<.=.<8?
  41d518:	3d983d38 3dd83d78 3db03da8 3fb03db8     8=.=x=.=.=.=.=.?
  41d528:	3df03de8 3e803e08 3f783df8 3e803e10     .=.=.>.>.=x?.>.>
  41d538:	3e883e18 3e803e20 3e903e28 3e883e30     .>.> >.>(>.>0>.>
  41d548:	3e983e38 3f003e40 3f203e48 3f803e50     8>.>@>.?H> ?P>.?
  41d558:	3fa03e58 3f083e60 3f283e68 3f883e70     X>.?`>.?h>(?p>.?
  41d568:	3fa83e78 3ea03e88 3ea83e98 3f103ec0     x>.?.>.>.>.>.>.?
  41d578:	3eb03ea8 3f303ec8 3f903ed0 3fb03ed8     .>.>.>0?.>.?.>.?
  41d588:	3f183ee0 3f383ee8 3f983ef0 3f803f08     .>.?.>8?.>.?.?.?
  41d598:	3fb83ef8 3f803f10 3f883f18 3f803f20     .>.?.?.?.?.? ?.?
  41d5a8:	3f903f28 3f883f30 3f983f38 3f503f48     (?.?0?.?8?.?H?P?
  41d5b8:	3f603f50 3f703f58 3fc03f60 3fd03f68     P?`?X?p?`?.?h?.?
  41d5c8:	3fe03f70 3ff03f78 3fa03f88 3fa83f98     p?.?x?.?.?.?.?.?
  41d5d8:	3fb03fa8 3ff03fd8 3fe03fc8 3ff03fe8     .?.?.?.?.?.?.?.?

0041d5e8 <twiddleCoef_64>:
  41d5e8:	3f800000 00000000 3f7ec46d 3dc8bd36     ...?....m.~?6..=
  41d5f8:	3f7b14be 3e47c5c2 3f74fa0b 3e94a031     ..{?..G>..t?1..>
  41d608:	3f6c835e 3ec3ef15 3f61c598 3ef15aea     ^.l?...>..a?.Z.>
  41d618:	3f54db31 3f0e39da 3f45e403 3f226799     1.T?.9.?..E?.g"?
  41d628:	3f3504f3 3f3504f3 3f226799 3f45e403     ..5?..5?.g"?..E?
  41d638:	3f0e39da 3f54db31 3ef15aea 3f61c598     .9.?1.T?.Z.>..a?
  41d648:	3ec3ef15 3f6c835e 3e94a031 3f74fa0b     ...>^.l?1..>..t?
  41d658:	3e47c5c2 3f7b14be 3dc8bd36 3f7ec46d     ..G>..{?6..=m.~?
  41d668:	00000000 3f800000 bdc8bd36 3f7ec46d     .......?6...m.~?
  41d678:	be47c5c2 3f7b14be be94a031 3f74fa0b     ..G...{?1.....t?
  41d688:	bec3ef15 3f6c835e bef15aea 3f61c598     ....^.l?.Z....a?
  41d698:	bf0e39da 3f54db31 bf226799 3f45e403     .9..1.T?.g"...E?
  41d6a8:	bf3504f3 3f3504f3 bf45e403 3f226799     ..5...5?..E..g"?
  41d6b8:	bf54db31 3f0e39da bf61c598 3ef15aea     1.T..9.?..a..Z.>
  41d6c8:	bf6c835e 3ec3ef15 bf74fa0b 3e94a031     ^.l....>..t.1..>
  41d6d8:	bf7b14be 3e47c5c2 bf7ec46d 3dc8bd36     ..{...G>m.~.6..=
  41d6e8:	bf800000 00000000 bf7ec46d bdc8bd36     ........m.~.6...
  41d6f8:	bf7b14be be47c5c2 bf74fa0b be94a031     ..{...G...t.1...
  41d708:	bf6c835e bec3ef15 bf61c598 bef15aea     ^.l.......a..Z..
  41d718:	bf54db31 bf0e39da bf45e403 bf226799     1.T..9....E..g".
  41d728:	bf3504f3 bf3504f3 bf226799 bf45e403     ..5...5..g"...E.
  41d738:	bf0e39da bf54db31 bef15aea bf61c598     .9..1.T..Z....a.
  41d748:	bec3ef15 bf6c835e be94a031 bf74fa0b     ....^.l.1.....t.
  41d758:	be47c5c2 bf7b14be bdc8bd36 bf7ec46d     ..G...{.6...m.~.
  41d768:	80000000 bf800000 3dc8bd36 bf7ec46d     ........6..=m.~.
  41d778:	3e47c5c2 bf7b14be 3e94a031 bf74fa0b     ..G>..{.1..>..t.
  41d788:	3ec3ef15 bf6c835e 3ef15aea bf61c598     ...>^.l..Z.>..a.
  41d798:	3f0e39da bf54db31 3f226799 bf45e403     .9.?1.T..g"?..E.
  41d7a8:	3f3504f3 bf3504f3 3f45e403 bf226799     ..5?..5...E?.g".
  41d7b8:	3f54db31 bf0e39da 3f61c598 bef15aea     1.T?.9....a?.Z..
  41d7c8:	3f6c835e bec3ef15 3f74fa0b be94a031     ^.l?......t?1...
  41d7d8:	3f7b14be be47c5c2 3f7ec46d bdc8bd36     ..{?..G.m.~?6...

0041d7e8 <twiddleCoef_rfft_512>:
  41d7e8:	00000000 3f800000 3c490e90 3f7ffb11     .......?..I<...?
  41d7f8:	3cc90ab0 3f7fec43 3d16c32c 3f7fd398     ...<C..?,..=...?
  41d808:	3d48fb2f 3f7fb10f 3d7b2b74 3f7f84ab     /.H=...?t+{=...?
  41d818:	3d96a905 3f7f4e6d 3dafb680 3f7f0e58     ...=mN.?...=X..?
  41d828:	3dc8bd36 3f7ec46d 3de1bc2e 3f7e70b0     6..=m.~?...=.p~?
  41d838:	3dfab273 3f7e1324 3e09cf86 3f7dabcc     s..=$.~?...>..}?
  41d848:	3e164083 3f7d3aac 3e22abb6 3f7cbfc9     .@.>.:}?..">..|?
  41d858:	3e2f10a2 3f7c3b28 3e3b6ecf 3f7baccd     ../>(;|?.n;>..{?
  41d868:	3e47c5c2 3f7b14be 3e541501 3f7a7302     ..G>..{?..T>.sz?
  41d878:	3e605c13 3f79c79d 3e6c9a7f 3f791298     .\`>..y?..l>..y?
  41d888:	3e78cfcc 3f7853f8 3e827dc0 3f778bc5     ..x>.Sx?.}.>..w?
  41d898:	3e888e93 3f76ba07 3e8e9a22 3f75dec6     ...>..v?"..>..u?
  41d8a8:	3e94a031 3f74fa0b 3e9aa086 3f740bdd     1..>..t?...>..t?
  41d8b8:	3ea09ae5 3f731447 3ea68f12 3f721352     ...>G.s?...>R.r?
  41d8c8:	3eac7cd4 3f710908 3eb263ef 3f6ff573     .|.>..q?.c.>s.o?
  41d8d8:	3eb8442a 3f6ed89e 3ebe1d4a 3f6db293     *D.>..n?J..>..m?
  41d8e8:	3ec3ef15 3f6c835e 3ec9b953 3f6b4b0c     ...>^.l?S..>.Kk?
  41d8f8:	3ecf7bca 3f6a09a7 3ed53641 3f68bf3c     .{.>..j?A6.><.h?
  41d908:	3edae880 3f676bd8 3ee0924f 3f660f88     ...>.kg?O..>..f?
  41d918:	3ee63375 3f64aa59 3eebcbbb 3f633c5a     u3.>Y.d?...>Z<c?
  41d928:	3ef15aea 3f61c598 3ef6e0cb 3f604621     .Z.>..a?...>!F`?
  41d938:	3efc5d27 3f5ebe05 3f00e7e4 3f5d2d53     '].>..^?...?S-]?
  41d948:	3f039c3d 3f5b941a 3f064b82 3f59f26a     =..?..[?.K.?j.Y?
  41d958:	3f08f59b 3f584853 3f0b9a6b 3f5695e5     ...?SHX?k..?..V?
  41d968:	3f0e39da 3f54db31 3f10d3cd 3f531849     .9.?1.T?...?I.S?
  41d978:	3f13682a 3f514d3d 3f15f6d9 3f4f7a1f     *h.?=MQ?...?.zO?
  41d988:	3f187fc0 3f4d9f02 3f1b02c6 3f4bbbf8     ...?..M?...?..K?
  41d998:	3f1d7fd1 3f49d112 3f1ff6cb 3f47de65     ...?..I?...?e.G?
  41d9a8:	3f226799 3f45e403 3f24d225 3f43e200     .g"?..E?%.$?..C?
  41d9b8:	3f273656 3f41d870 3f299415 3f3fc767     V6'?p.A?..)?g.??
  41d9c8:	3f2beb4a 3f3daef9 3f2e3bde 3f3b8f3b     J.+?..=?.;.?;.;?
  41d9d8:	3f3085bb 3f396842 3f32c8c9 3f373a23     ..0?Bh9?..2?#:7?
  41d9e8:	3f3504f3 3f3504f3 3f373a23 3f32c8c9     ..5?..5?#:7?..2?
  41d9f8:	3f396842 3f3085bb 3f3b8f3b 3f2e3bde     Bh9?..0?;.;?.;.?
  41da08:	3f3daef9 3f2beb4a 3f3fc767 3f299415     ..=?J.+?g.??..)?
  41da18:	3f41d870 3f273656 3f43e200 3f24d225     p.A?V6'?..C?%.$?
  41da28:	3f45e403 3f226799 3f47de65 3f1ff6cb     ..E?.g"?e.G?...?
  41da38:	3f49d112 3f1d7fd1 3f4bbbf8 3f1b02c6     ..I?...?..K?...?
  41da48:	3f4d9f02 3f187fc0 3f4f7a1f 3f15f6d9     ..M?...?.zO?...?
  41da58:	3f514d3d 3f13682a 3f531849 3f10d3cd     =MQ?*h.?I.S?...?
  41da68:	3f54db31 3f0e39da 3f5695e5 3f0b9a6b     1.T?.9.?..V?k..?
  41da78:	3f584853 3f08f59b 3f59f26a 3f064b82     SHX?...?j.Y?.K.?
  41da88:	3f5b941a 3f039c3d 3f5d2d53 3f00e7e4     ..[?=..?S-]?...?
  41da98:	3f5ebe05 3efc5d27 3f604621 3ef6e0cb     ..^?'].>!F`?...>
  41daa8:	3f61c598 3ef15aea 3f633c5a 3eebcbbb     ..a?.Z.>Z<c?...>
  41dab8:	3f64aa59 3ee63375 3f660f88 3ee0924f     Y.d?u3.>..f?O..>
  41dac8:	3f676bd8 3edae880 3f68bf3c 3ed53641     .kg?...><.h?A6.>
  41dad8:	3f6a09a7 3ecf7bca 3f6b4b0c 3ec9b953     ..j?.{.>.Kk?S..>
  41dae8:	3f6c835e 3ec3ef15 3f6db293 3ebe1d4a     ^.l?...>..m?J..>
  41daf8:	3f6ed89e 3eb8442a 3f6ff573 3eb263ef     ..n?*D.>s.o?.c.>
  41db08:	3f710908 3eac7cd4 3f721352 3ea68f12     ..q?.|.>R.r?...>
  41db18:	3f731447 3ea09ae5 3f740bdd 3e9aa086     G.s?...>..t?...>
  41db28:	3f74fa0b 3e94a031 3f75dec6 3e8e9a22     ..t?1..>..u?"..>
  41db38:	3f76ba07 3e888e93 3f778bc5 3e827dc0     ..v?...>..w?.}.>
  41db48:	3f7853f8 3e78cfcc 3f791298 3e6c9a7f     .Sx?..x>..y?..l>
  41db58:	3f79c79d 3e605c13 3f7a7302 3e541501     ..y?.\`>.sz?..T>
  41db68:	3f7b14be 3e47c5c2 3f7baccd 3e3b6ecf     ..{?..G>..{?.n;>
  41db78:	3f7c3b28 3e2f10a2 3f7cbfc9 3e22abb6     (;|?../>..|?..">
  41db88:	3f7d3aac 3e164083 3f7dabcc 3e09cf86     .:}?.@.>..}?...>
  41db98:	3f7e1324 3dfab273 3f7e70b0 3de1bc2e     $.~?s..=.p~?...=
  41dba8:	3f7ec46d 3dc8bd36 3f7f0e58 3dafb680     m.~?6..=X..?...=
  41dbb8:	3f7f4e6d 3d96a905 3f7f84ab 3d7b2b74     mN.?...=...?t+{=
  41dbc8:	3f7fb10f 3d48fb2f 3f7fd398 3d16c32c     ...?/.H=...?,..=
  41dbd8:	3f7fec43 3cc90ab0 3f7ffb11 3c490e90     C..?...<...?..I<
  41dbe8:	3f800000 00000000 3f7ffb11 bc490e90     ...?.......?..I.
  41dbf8:	3f7fec43 bcc90ab0 3f7fd398 bd16c32c     C..?.......?,...
  41dc08:	3f7fb10f bd48fb2f 3f7f84ab bd7b2b74     ...?/.H....?t+{.
  41dc18:	3f7f4e6d bd96a905 3f7f0e58 bdafb680     mN.?....X..?....
  41dc28:	3f7ec46d bdc8bd36 3f7e70b0 bde1bc2e     m.~?6....p~?....
  41dc38:	3f7e1324 bdfab273 3f7dabcc be09cf86     $.~?s.....}?....
  41dc48:	3f7d3aac be164083 3f7cbfc9 be22abb6     .:}?.@....|?..".
  41dc58:	3f7c3b28 be2f10a2 3f7baccd be3b6ecf     (;|?../...{?.n;.
  41dc68:	3f7b14be be47c5c2 3f7a7302 be541501     ..{?..G..sz?..T.
  41dc78:	3f79c79d be605c13 3f791298 be6c9a7f     ..y?.\`...y?..l.
  41dc88:	3f7853f8 be78cfcc 3f778bc5 be827dc0     .Sx?..x...w?.}..
  41dc98:	3f76ba07 be888e93 3f75dec6 be8e9a22     ..v?......u?"...
  41dca8:	3f74fa0b be94a031 3f740bdd be9aa086     ..t?1.....t?....
  41dcb8:	3f731447 bea09ae5 3f721352 bea68f12     G.s?....R.r?....
  41dcc8:	3f710908 beac7cd4 3f6ff573 beb263ef     ..q?.|..s.o?.c..
  41dcd8:	3f6ed89e beb8442a 3f6db293 bebe1d4a     ..n?*D....m?J...
  41dce8:	3f6c835e bec3ef15 3f6b4b0c bec9b953     ^.l?.....Kk?S...
  41dcf8:	3f6a09a7 becf7bca 3f68bf3c bed53641     ..j?.{..<.h?A6..
  41dd08:	3f676bd8 bedae880 3f660f88 bee0924f     .kg?......f?O...
  41dd18:	3f64aa59 bee63375 3f633c5a beebcbbb     Y.d?u3..Z<c?....
  41dd28:	3f61c598 bef15aea 3f604621 bef6e0cb     ..a?.Z..!F`?....
  41dd38:	3f5ebe05 befc5d27 3f5d2d53 bf00e7e4     ..^?']..S-]?....
  41dd48:	3f5b941a bf039c3d 3f59f26a bf064b82     ..[?=...j.Y?.K..
  41dd58:	3f584853 bf08f59b 3f5695e5 bf0b9a6b     SHX?......V?k...
  41dd68:	3f54db31 bf0e39da 3f531849 bf10d3cd     1.T?.9..I.S?....
  41dd78:	3f514d3d bf13682a 3f4f7a1f bf15f6d9     =MQ?*h...zO?....
  41dd88:	3f4d9f02 bf187fc0 3f4bbbf8 bf1b02c6     ..M?......K?....
  41dd98:	3f49d112 bf1d7fd1 3f47de65 bf1ff6cb     ..I?....e.G?....
  41dda8:	3f45e403 bf226799 3f43e200 bf24d225     ..E?.g"...C?%.$.
  41ddb8:	3f41d870 bf273656 3f3fc767 bf299415     p.A?V6'.g.??..).
  41ddc8:	3f3daef9 bf2beb4a 3f3b8f3b bf2e3bde     ..=?J.+.;.;?.;..
  41ddd8:	3f396842 bf3085bb 3f373a23 bf32c8c9     Bh9?..0.#:7?..2.
  41dde8:	3f3504f3 bf3504f3 3f32c8c9 bf373a23     ..5?..5...2?#:7.
  41ddf8:	3f3085bb bf396842 3f2e3bde bf3b8f3b     ..0?Bh9..;.?;.;.
  41de08:	3f2beb4a bf3daef9 3f299415 bf3fc767     J.+?..=...)?g.?.
  41de18:	3f273656 bf41d870 3f24d225 bf43e200     V6'?p.A.%.$?..C.
  41de28:	3f226799 bf45e403 3f1ff6cb bf47de65     .g"?..E....?e.G.
  41de38:	3f1d7fd1 bf49d112 3f1b02c6 bf4bbbf8     ...?..I....?..K.
  41de48:	3f187fc0 bf4d9f02 3f15f6d9 bf4f7a1f     ...?..M....?.zO.
  41de58:	3f13682a bf514d3d 3f10d3cd bf531849     *h.?=MQ....?I.S.
  41de68:	3f0e39da bf54db31 3f0b9a6b bf5695e5     .9.?1.T.k..?..V.
  41de78:	3f08f59b bf584853 3f064b82 bf59f26a     ...?SHX..K.?j.Y.
  41de88:	3f039c3d bf5b941a 3f00e7e4 bf5d2d53     =..?..[....?S-].
  41de98:	3efc5d27 bf5ebe05 3ef6e0cb bf604621     '].>..^....>!F`.
  41dea8:	3ef15aea bf61c598 3eebcbbb bf633c5a     .Z.>..a....>Z<c.
  41deb8:	3ee63375 bf64aa59 3ee0924f bf660f88     u3.>Y.d.O..>..f.
  41dec8:	3edae880 bf676bd8 3ed53641 bf68bf3c     ...>.kg.A6.><.h.
  41ded8:	3ecf7bca bf6a09a7 3ec9b953 bf6b4b0c     .{.>..j.S..>.Kk.
  41dee8:	3ec3ef15 bf6c835e 3ebe1d4a bf6db293     ...>^.l.J..>..m.
  41def8:	3eb8442a bf6ed89e 3eb263ef bf6ff573     *D.>..n..c.>s.o.
  41df08:	3eac7cd4 bf710908 3ea68f12 bf721352     .|.>..q....>R.r.
  41df18:	3ea09ae5 bf731447 3e9aa086 bf740bdd     ...>G.s....>..t.
  41df28:	3e94a031 bf74fa0b 3e8e9a22 bf75dec6     1..>..t."..>..u.
  41df38:	3e888e93 bf76ba07 3e827dc0 bf778bc5     ...>..v..}.>..w.
  41df48:	3e78cfcc bf7853f8 3e6c9a7f bf791298     ..x>.Sx...l>..y.
  41df58:	3e605c13 bf79c79d 3e541501 bf7a7302     .\`>..y...T>.sz.
  41df68:	3e47c5c2 bf7b14be 3e3b6ecf bf7baccd     ..G>..{..n;>..{.
  41df78:	3e2f10a2 bf7c3b28 3e22abb6 bf7cbfc9     ../>(;|...">..|.
  41df88:	3e164083 bf7d3aac 3e09cf86 bf7dabcc     .@.>.:}....>..}.
  41df98:	3dfab273 bf7e1324 3de1bc2e bf7e70b0     s..=$.~....=.p~.
  41dfa8:	3dc8bd36 bf7ec46d 3dafb680 bf7f0e58     6..=m.~....=X...
  41dfb8:	3d96a905 bf7f4e6d 3d7b2b74 bf7f84ab     ...=mN..t+{=....
  41dfc8:	3d48fb2f bf7fb10f 3d16c32c bf7fd398     /.H=....,..=....
  41dfd8:	3cc90ab0 bf7fec43 3c490e90 bf7ffb11     ...<C.....I<....

0041dfe8 <armBitRevIndexTable512>:
  41dfe8:	02000008 04000010 06000018 08000020     ............ ...
  41dff8:	0a000028 0c000030 0e000038 02400048     (...0...8...H.@.
  41e008:	04400050 06400058 08400060 0a400068     P.@.X.@.`.@.h.@.
  41e018:	0c400070 0e400078 02800088 04800090     p.@.x.@.........
  41e028:	06800098 088000a0 0a8000a8 0c8000b0     ................
  41e038:	0e8000b8 02c000c8 04c000d0 06c000d8     ................
  41e048:	08c000e0 0ac000e8 0cc000f0 0ec000f8     ................
  41e058:	03000108 05000110 07000118 09000120     ............ ...
  41e068:	0b000128 0d000130 0f000138 03400148     (...0...8...H.@.
  41e078:	05400150 07400158 09400160 0b400168     P.@.X.@.`.@.h.@.
  41e088:	0d400170 0f400178 03800188 05800190     p.@.x.@.........
  41e098:	07800198 098001a0 0b8001a8 0d8001b0     ................
  41e0a8:	0f8001b8 03c001c8 05c001d0 07c001d8     ................
  41e0b8:	09c001e0 0bc001e8 0dc001f0 0fc001f8     ................
  41e0c8:	04080210 06080218 08080220 0a080228     ........ ...(...
  41e0d8:	0c080230 0e080238 04480250 06480258     0...8...P.H.X.H.
  41e0e8:	08480260 0a480268 0c480270 0e480278     `.H.h.H.p.H.x.H.
  41e0f8:	04880290 06880298 088802a0 0a8802a8     ................
  41e108:	0c8802b0 0e8802b8 04c802d0 06c802d8     ................
  41e118:	08c802e0 0ac802e8 0cc802f0 0ec802f8     ................
  41e128:	05080310 07080318 09080320 0b080328     ........ ...(...
  41e138:	0d080330 0f080338 05480350 07480358     0...8...P.H.X.H.
  41e148:	09480360 0b480368 0d480370 0f480378     `.H.h.H.p.H.x.H.
  41e158:	05880390 07880398 098803a0 0b8803a8     ................
  41e168:	0d8803b0 0f8803b8 05c803d0 07c803d8     ................
  41e178:	09c803e0 0bc803e8 0dc803f0 0fc803f8     ................
  41e188:	06100418 08100420 0a100428 0c100430     .... ...(...0...
  41e198:	0e100438 06500458 08500460 0a500468     8...X.P.`.P.h.P.
  41e1a8:	0c500470 0e500478 06900498 089004a0     p.P.x.P.........
  41e1b8:	0a9004a8 0c9004b0 0e9004b8 06d004d8     ................
  41e1c8:	08d004e0 0ad004e8 0cd004f0 0ed004f8     ................
  41e1d8:	07100518 09100520 0b100528 0d100530     .... ...(...0...
  41e1e8:	0f100538 07500558 09500560 0b500568     8...X.P.`.P.h.P.
  41e1f8:	0d500570 0f500578 07900598 099005a0     p.P.x.P.........
  41e208:	0b9005a8 0d9005b0 0f9005b8 07d005d8     ................
  41e218:	09d005e0 0bd005e8 0dd005f0 0fd005f8     ................
  41e228:	08180620 0a180628 0c180630 0e180638      ...(...0...8...
  41e238:	08580660 0a580668 0c580670 0e580678     `.X.h.X.p.X.x.X.
  41e248:	089806a0 0a9806a8 0c9806b0 0e9806b8     ................
  41e258:	08d806e0 0ad806e8 0cd806f0 0ed806f8     ................
  41e268:	09180720 0b180728 0d180730 0f180738      ...(...0...8...
  41e278:	09580760 0b580768 0d580770 0f580778     `.X.h.X.p.X.x.X.
  41e288:	099807a0 0b9807a8 0d9807b0 0f9807b8     ................
  41e298:	09d807e0 0bd807e8 0dd807f0 0fd807f8     ................
  41e2a8:	0a200828 0c200830 0e200838 0a600868     (. .0. .8. .h.`.
  41e2b8:	0c600870 0e600878 0aa008a8 0ca008b0     p.`.x.`.........
  41e2c8:	0ea008b8 0ae008e8 0ce008f0 0ee008f8     ................
  41e2d8:	0b200928 0d200930 0f200938 0b600968     (. .0. .8. .h.`.
  41e2e8:	0d600970 0f600978 0ba009a8 0da009b0     p.`.x.`.........
  41e2f8:	0fa009b8 0be009e8 0de009f0 0fe009f8     ................
  41e308:	0c280a30 0e280a38 0c680a70 0e680a78     0.(.8.(.p.h.x.h.
  41e318:	0ca80ab0 0ea80ab8 0ce80af0 0ee80af8     ................
  41e328:	0d280b30 0f280b38 0d680b70 0f680b78     0.(.8.(.p.h.x.h.
  41e338:	0da80bb0 0fa80bb8 0de80bf0 0fe80bf8     ................
  41e348:	0e300c38 0e700c78 0eb00cb8 0ef00cf8     8.0.x.p.........
  41e358:	0f300d38 0f700d78 0fb00db8 0ff00df8     8.0.x.p.........

0041e368 <twiddleCoef_rfft_1024>:
  41e368:	00000000 3f800000 3bc90f89 3f7ffec4     .......?...;...?
  41e378:	3c490e90 3f7ffb11 3c96c9b6 3f7ff4e6     ..I<...?...<...?
  41e388:	3cc90ab0 3f7fec43 3cfb49b9 3f7fe129     ...<C..?.I.<)..?
  41e398:	3d16c32c 3f7fd398 3d2fe007 3f7fc38f     ,..=...?../=...?
  41e3a8:	3d48fb2f 3f7fb10f 3d621468 3f7f9c18     /.H=...?h.b=...?
  41e3b8:	3d7b2b74 3f7f84ab 3d8a200a 3f7f6ac7     t+{=...?. .=.j.?
  41e3c8:	3d96a905 3f7f4e6d 3da3308c 3f7f2f9d     ...=mN.?.0.=./.?
  41e3d8:	3dafb680 3f7f0e58 3dbc3ac3 3f7eea9d     ...=X..?.:.=..~?
  41e3e8:	3dc8bd36 3f7ec46d 3dd53db9 3f7e9bc9     6..=m.~?.=.=..~?
  41e3f8:	3de1bc2e 3f7e70b0 3dee3876 3f7e4323     ...=.p~?v8.=#C~?
  41e408:	3dfab273 3f7e1324 3e039502 3f7de0b1     s..=$.~?...>..}?
  41e418:	3e09cf86 3f7dabcc 3e1008b7 3f7d7474     ...>..}?...>tt}?
  41e428:	3e164083 3f7d3aac 3e1c76de 3f7cfe73     .@.>.:}?.v.>s.|?
  41e438:	3e22abb6 3f7cbfc9 3e28defc 3f7c7eb0     ..">..|?..(>.~|?
  41e448:	3e2f10a2 3f7c3b28 3e354098 3f7bf531     ../>(;|?.@5>1.{?
  41e458:	3e3b6ecf 3f7baccd 3e419b37 3f7b61fc     .n;>..{?7.A>.a{?
  41e468:	3e47c5c2 3f7b14be 3e4dee60 3f7ac516     ..G>..{?`.M>..z?
  41e478:	3e541501 3f7a7302 3e5a3997 3f7a1e84     ..T>.sz?.9Z>..z?
  41e488:	3e605c13 3f79c79d 3e667c66 3f796e4e     .\`>..y?f|f>Nny?
  41e498:	3e6c9a7f 3f791298 3e72b651 3f78b47b     ..l>..y?Q.r>{.x?
  41e4a8:	3e78cfcc 3f7853f8 3e7ee6e1 3f77f110     ..x>.Sx?..~>..w?
  41e4b8:	3e827dc0 3f778bc5 3e8586ce 3f772417     .}.>..w?...>.$w?
  41e4c8:	3e888e93 3f76ba07 3e8b9507 3f764d97     ...>..v?...>.Mv?
  41e4d8:	3e8e9a22 3f75dec6 3e919ddd 3f756d97     "..>..u?...>.mu?
  41e4e8:	3e94a031 3f74fa0b 3e97a117 3f748422     1..>..t?...>".t?
  41e4f8:	3e9aa086 3f740bdd 3e9d9e78 3f73913f     ...>..t?x..>?.s?
  41e508:	3ea09ae5 3f731447 3ea395c5 3f7294f8     ...>G.s?...>..r?
  41e518:	3ea68f12 3f721352 3ea986c4 3f718f57     ...>R.r?...>W.q?
  41e528:	3eac7cd4 3f710908 3eaf713a 3f708066     .|.>..q?:q.>f.p?
  41e538:	3eb263ef 3f6ff573 3eb554ec 3f6f6830     .c.>s.o?.T.>0ho?
  41e548:	3eb8442a 3f6ed89e 3ebb31a0 3f6e46be     *D.>..n?.1.>.Fn?
  41e558:	3ebe1d4a 3f6db293 3ec1071e 3f6d1c1d     J..>..m?...>..m?
  41e568:	3ec3ef15 3f6c835e 3ec6d529 3f6be858     ...>^.l?)..>X.k?
  41e578:	3ec9b953 3f6b4b0c 3ecc9b8b 3f6aab7b     S..>.Kk?...>{.j?
  41e588:	3ecf7bca 3f6a09a7 3ed25a09 3f696591     .{.>..j?.Z.>.ei?
  41e598:	3ed53641 3f68bf3c 3ed8106b 3f6816a8     A6.><.h?k..>..h?
  41e5a8:	3edae880 3f676bd8 3eddbe79 3f66becc     ...>.kg?y..>..f?
  41e5b8:	3ee0924f 3f660f88 3ee363fa 3f655e0b     O..>..f?.c.>.^e?
  41e5c8:	3ee63375 3f64aa59 3ee900b7 3f63f473     u3.>Y.d?...>s.c?
  41e5d8:	3eebcbbb 3f633c5a 3eee9479 3f628210     ...>Z<c?y..>..b?
  41e5e8:	3ef15aea 3f61c598 3ef41f07 3f6106f2     .Z.>..a?...>..a?
  41e5f8:	3ef6e0cb 3f604621 3ef9a02d 3f5f8327     ...>!F`?-..>'._?
  41e608:	3efc5d27 3f5ebe05 3eff17b2 3f5df6be     '].>..^?...>..]?
  41e618:	3f00e7e4 3f5d2d53 3f0242b1 3f5c61c7     ...?S-]?.B.?.a\?
  41e628:	3f039c3d 3f5b941a 3f04f484 3f5ac450     =..?..[?...?P.Z?
  41e638:	3f064b82 3f59f26a 3f07a136 3f591e6a     .K.?j.Y?6..?j.Y?
  41e648:	3f08f59b 3f584853 3f0a48ad 3f577026     ...?SHX?.H.?&pW?
  41e658:	3f0b9a6b 3f5695e5 3f0cead0 3f55b993     k..?..V?...?..U?
  41e668:	3f0e39da 3f54db31 3f0f8784 3f53fac3     .9.?1.T?...?..S?
  41e678:	3f10d3cd 3f531849 3f121eb0 3f5233c6     ...?I.S?...?.3R?
  41e688:	3f13682a 3f514d3d 3f14b039 3f5064af     *h.?=MQ?9..?.dP?
  41e698:	3f15f6d9 3f4f7a1f 3f173c07 3f4e8d90     ...?.zO?.<.?..N?
  41e6a8:	3f187fc0 3f4d9f02 3f19c200 3f4cae79     ...?..M?...?y.L?
  41e6b8:	3f1b02c6 3f4bbbf8 3f1c420c 3f4ac77f     ...?..K?.B.?..J?
  41e6c8:	3f1d7fd1 3f49d112 3f1ebc12 3f48d8b3     ...?..I?...?..H?
  41e6d8:	3f1ff6cb 3f47de65 3f212ff9 3f46e22a     ...?e.G?./!?*.F?
  41e6e8:	3f226799 3f45e403 3f239da9 3f44e3f5     .g"?..E?..#?..D?
  41e6f8:	3f24d225 3f43e200 3f26050a 3f42de29     %.$?..C?..&?).B?
  41e708:	3f273656 3f41d870 3f286605 3f40d0da     V6'?p.A?.f(?..@?
  41e718:	3f299415 3f3fc767 3f2ac082 3f3ebc1b     ..)?g.??..*?..>?
  41e728:	3f2beb4a 3f3daef9 3f2d1469 3f3ca003     J.+?..=?i.-?..<?
  41e738:	3f2e3bde 3f3b8f3b 3f2f61a5 3f3a7ca4     .;.?;.;?.a/?.|:?
  41e748:	3f3085bb 3f396842 3f31a81d 3f385216     ..0?Bh9?..1?.R8?
  41e758:	3f32c8c9 3f373a23 3f33e7bc 3f36206c     ..2?#:7?..3?l 6?
  41e768:	3f3504f3 3f3504f3 3f36206c 3f33e7bc     ..5?..5?l 6?..3?
  41e778:	3f373a23 3f32c8c9 3f385216 3f31a81d     #:7?..2?.R8?..1?
  41e788:	3f396842 3f3085bb 3f3a7ca4 3f2f61a5     Bh9?..0?.|:?.a/?
  41e798:	3f3b8f3b 3f2e3bde 3f3ca003 3f2d1469     ;.;?.;.?..<?i.-?
  41e7a8:	3f3daef9 3f2beb4a 3f3ebc1b 3f2ac082     ..=?J.+?..>?..*?
  41e7b8:	3f3fc767 3f299415 3f40d0da 3f286605     g.??..)?..@?.f(?
  41e7c8:	3f41d870 3f273656 3f42de29 3f26050a     p.A?V6'?).B?..&?
  41e7d8:	3f43e200 3f24d225 3f44e3f5 3f239da9     ..C?%.$?..D?..#?
  41e7e8:	3f45e403 3f226799 3f46e22a 3f212ff9     ..E?.g"?*.F?./!?
  41e7f8:	3f47de65 3f1ff6cb 3f48d8b3 3f1ebc12     e.G?...?..H?...?
  41e808:	3f49d112 3f1d7fd1 3f4ac77f 3f1c420c     ..I?...?..J?.B.?
  41e818:	3f4bbbf8 3f1b02c6 3f4cae79 3f19c200     ..K?...?y.L?...?
  41e828:	3f4d9f02 3f187fc0 3f4e8d90 3f173c07     ..M?...?..N?.<.?
  41e838:	3f4f7a1f 3f15f6d9 3f5064af 3f14b039     .zO?...?.dP?9..?
  41e848:	3f514d3d 3f13682a 3f5233c6 3f121eb0     =MQ?*h.?.3R?...?
  41e858:	3f531849 3f10d3cd 3f53fac3 3f0f8784     I.S?...?..S?...?
  41e868:	3f54db31 3f0e39da 3f55b993 3f0cead0     1.T?.9.?..U?...?
  41e878:	3f5695e5 3f0b9a6b 3f577026 3f0a48ad     ..V?k..?&pW?.H.?
  41e888:	3f584853 3f08f59b 3f591e6a 3f07a136     SHX?...?j.Y?6..?
  41e898:	3f59f26a 3f064b82 3f5ac450 3f04f484     j.Y?.K.?P.Z?...?
  41e8a8:	3f5b941a 3f039c3d 3f5c61c7 3f0242b1     ..[?=..?.a\?.B.?
  41e8b8:	3f5d2d53 3f00e7e4 3f5df6be 3eff17b2     S-]?...?..]?...>
  41e8c8:	3f5ebe05 3efc5d27 3f5f8327 3ef9a02d     ..^?'].>'._?-..>
  41e8d8:	3f604621 3ef6e0cb 3f6106f2 3ef41f07     !F`?...>..a?...>
  41e8e8:	3f61c598 3ef15aea 3f628210 3eee9479     ..a?.Z.>..b?y..>
  41e8f8:	3f633c5a 3eebcbbb 3f63f473 3ee900b7     Z<c?...>s.c?...>
  41e908:	3f64aa59 3ee63375 3f655e0b 3ee363fa     Y.d?u3.>.^e?.c.>
  41e918:	3f660f88 3ee0924f 3f66becc 3eddbe79     ..f?O..>..f?y..>
  41e928:	3f676bd8 3edae880 3f6816a8 3ed8106b     .kg?...>..h?k..>
  41e938:	3f68bf3c 3ed53641 3f696591 3ed25a09     <.h?A6.>.ei?.Z.>
  41e948:	3f6a09a7 3ecf7bca 3f6aab7b 3ecc9b8b     ..j?.{.>{.j?...>
  41e958:	3f6b4b0c 3ec9b953 3f6be858 3ec6d529     .Kk?S..>X.k?)..>
  41e968:	3f6c835e 3ec3ef15 3f6d1c1d 3ec1071e     ^.l?...>..m?...>
  41e978:	3f6db293 3ebe1d4a 3f6e46be 3ebb31a0     ..m?J..>.Fn?.1.>
  41e988:	3f6ed89e 3eb8442a 3f6f6830 3eb554ec     ..n?*D.>0ho?.T.>
  41e998:	3f6ff573 3eb263ef 3f708066 3eaf713a     s.o?.c.>f.p?:q.>
  41e9a8:	3f710908 3eac7cd4 3f718f57 3ea986c4     ..q?.|.>W.q?...>
  41e9b8:	3f721352 3ea68f12 3f7294f8 3ea395c5     R.r?...>..r?...>
  41e9c8:	3f731447 3ea09ae5 3f73913f 3e9d9e78     G.s?...>?.s?x..>
  41e9d8:	3f740bdd 3e9aa086 3f748422 3e97a117     ..t?...>".t?...>
  41e9e8:	3f74fa0b 3e94a031 3f756d97 3e919ddd     ..t?1..>.mu?...>
  41e9f8:	3f75dec6 3e8e9a22 3f764d97 3e8b9507     ..u?"..>.Mv?...>
  41ea08:	3f76ba07 3e888e93 3f772417 3e8586ce     ..v?...>.$w?...>
  41ea18:	3f778bc5 3e827dc0 3f77f110 3e7ee6e1     ..w?.}.>..w?..~>
  41ea28:	3f7853f8 3e78cfcc 3f78b47b 3e72b651     .Sx?..x>{.x?Q.r>
  41ea38:	3f791298 3e6c9a7f 3f796e4e 3e667c66     ..y?..l>Nny?f|f>
  41ea48:	3f79c79d 3e605c13 3f7a1e84 3e5a3997     ..y?.\`>..z?.9Z>
  41ea58:	3f7a7302 3e541501 3f7ac516 3e4dee60     .sz?..T>..z?`.M>
  41ea68:	3f7b14be 3e47c5c2 3f7b61fc 3e419b37     ..{?..G>.a{?7.A>
  41ea78:	3f7baccd 3e3b6ecf 3f7bf531 3e354098     ..{?.n;>1.{?.@5>
  41ea88:	3f7c3b28 3e2f10a2 3f7c7eb0 3e28defc     (;|?../>.~|?..(>
  41ea98:	3f7cbfc9 3e22abb6 3f7cfe73 3e1c76de     ..|?..">s.|?.v.>
  41eaa8:	3f7d3aac 3e164083 3f7d7474 3e1008b7     .:}?.@.>tt}?...>
  41eab8:	3f7dabcc 3e09cf86 3f7de0b1 3e039502     ..}?...>..}?...>
  41eac8:	3f7e1324 3dfab273 3f7e4323 3dee3876     $.~?s..=#C~?v8.=
  41ead8:	3f7e70b0 3de1bc2e 3f7e9bc9 3dd53db9     .p~?...=..~?.=.=
  41eae8:	3f7ec46d 3dc8bd36 3f7eea9d 3dbc3ac3     m.~?6..=..~?.:.=
  41eaf8:	3f7f0e58 3dafb680 3f7f2f9d 3da3308c     X..?...=./.?.0.=
  41eb08:	3f7f4e6d 3d96a905 3f7f6ac7 3d8a200a     mN.?...=.j.?. .=
  41eb18:	3f7f84ab 3d7b2b74 3f7f9c18 3d621468     ...?t+{=...?h.b=
  41eb28:	3f7fb10f 3d48fb2f 3f7fc38f 3d2fe007     ...?/.H=...?../=
  41eb38:	3f7fd398 3d16c32c 3f7fe129 3cfb49b9     ...?,..=)..?.I.<
  41eb48:	3f7fec43 3cc90ab0 3f7ff4e6 3c96c9b6     C..?...<...?...<
  41eb58:	3f7ffb11 3c490e90 3f7ffec4 3bc90f89     ...?..I<...?...;
  41eb68:	3f800000 00000000 3f7ffec4 bbc90f89     ...?.......?....
  41eb78:	3f7ffb11 bc490e90 3f7ff4e6 bc96c9b6     ...?..I....?....
  41eb88:	3f7fec43 bcc90ab0 3f7fe129 bcfb49b9     C..?....)..?.I..
  41eb98:	3f7fd398 bd16c32c 3f7fc38f bd2fe007     ...?,......?../.
  41eba8:	3f7fb10f bd48fb2f 3f7f9c18 bd621468     ...?/.H....?h.b.
  41ebb8:	3f7f84ab bd7b2b74 3f7f6ac7 bd8a200a     ...?t+{..j.?. ..
  41ebc8:	3f7f4e6d bd96a905 3f7f2f9d bda3308c     mN.?...../.?.0..
  41ebd8:	3f7f0e58 bdafb680 3f7eea9d bdbc3ac3     X..?......~?.:..
  41ebe8:	3f7ec46d bdc8bd36 3f7e9bc9 bdd53db9     m.~?6.....~?.=..
  41ebf8:	3f7e70b0 bde1bc2e 3f7e4323 bdee3876     .p~?....#C~?v8..
  41ec08:	3f7e1324 bdfab273 3f7de0b1 be039502     $.~?s.....}?....
  41ec18:	3f7dabcc be09cf86 3f7d7474 be1008b7     ..}?....tt}?....
  41ec28:	3f7d3aac be164083 3f7cfe73 be1c76de     .:}?.@..s.|?.v..
  41ec38:	3f7cbfc9 be22abb6 3f7c7eb0 be28defc     ..|?.."..~|?..(.
  41ec48:	3f7c3b28 be2f10a2 3f7bf531 be354098     (;|?../.1.{?.@5.
  41ec58:	3f7baccd be3b6ecf 3f7b61fc be419b37     ..{?.n;..a{?7.A.
  41ec68:	3f7b14be be47c5c2 3f7ac516 be4dee60     ..{?..G...z?`.M.
  41ec78:	3f7a7302 be541501 3f7a1e84 be5a3997     .sz?..T...z?.9Z.
  41ec88:	3f79c79d be605c13 3f796e4e be667c66     ..y?.\`.Nny?f|f.
  41ec98:	3f791298 be6c9a7f 3f78b47b be72b651     ..y?..l.{.x?Q.r.
  41eca8:	3f7853f8 be78cfcc 3f77f110 be7ee6e1     .Sx?..x...w?..~.
  41ecb8:	3f778bc5 be827dc0 3f772417 be8586ce     ..w?.}...$w?....
  41ecc8:	3f76ba07 be888e93 3f764d97 be8b9507     ..v?.....Mv?....
  41ecd8:	3f75dec6 be8e9a22 3f756d97 be919ddd     ..u?"....mu?....
  41ece8:	3f74fa0b be94a031 3f748422 be97a117     ..t?1...".t?....
  41ecf8:	3f740bdd be9aa086 3f73913f be9d9e78     ..t?....?.s?x...
  41ed08:	3f731447 bea09ae5 3f7294f8 bea395c5     G.s?......r?....
  41ed18:	3f721352 bea68f12 3f718f57 bea986c4     R.r?....W.q?....
  41ed28:	3f710908 beac7cd4 3f708066 beaf713a     ..q?.|..f.p?:q..
  41ed38:	3f6ff573 beb263ef 3f6f6830 beb554ec     s.o?.c..0ho?.T..
  41ed48:	3f6ed89e beb8442a 3f6e46be bebb31a0     ..n?*D...Fn?.1..
  41ed58:	3f6db293 bebe1d4a 3f6d1c1d bec1071e     ..m?J.....m?....
  41ed68:	3f6c835e bec3ef15 3f6be858 bec6d529     ^.l?....X.k?)...
  41ed78:	3f6b4b0c bec9b953 3f6aab7b becc9b8b     .Kk?S...{.j?....
  41ed88:	3f6a09a7 becf7bca 3f696591 bed25a09     ..j?.{...ei?.Z..
  41ed98:	3f68bf3c bed53641 3f6816a8 bed8106b     <.h?A6....h?k...
  41eda8:	3f676bd8 bedae880 3f66becc beddbe79     .kg?......f?y...
  41edb8:	3f660f88 bee0924f 3f655e0b bee363fa     ..f?O....^e?.c..
  41edc8:	3f64aa59 bee63375 3f63f473 bee900b7     Y.d?u3..s.c?....
  41edd8:	3f633c5a beebcbbb 3f628210 beee9479     Z<c?......b?y...
  41ede8:	3f61c598 bef15aea 3f6106f2 bef41f07     ..a?.Z....a?....
  41edf8:	3f604621 bef6e0cb 3f5f8327 bef9a02d     !F`?....'._?-...
  41ee08:	3f5ebe05 befc5d27 3f5df6be beff17b2     ..^?']....]?....
  41ee18:	3f5d2d53 bf00e7e4 3f5c61c7 bf0242b1     S-]?.....a\?.B..
  41ee28:	3f5b941a bf039c3d 3f5ac450 bf04f484     ..[?=...P.Z?....
  41ee38:	3f59f26a bf064b82 3f591e6a bf07a136     j.Y?.K..j.Y?6...
  41ee48:	3f584853 bf08f59b 3f577026 bf0a48ad     SHX?....&pW?.H..
  41ee58:	3f5695e5 bf0b9a6b 3f55b993 bf0cead0     ..V?k.....U?....
  41ee68:	3f54db31 bf0e39da 3f53fac3 bf0f8784     1.T?.9....S?....
  41ee78:	3f531849 bf10d3cd 3f5233c6 bf121eb0     I.S?.....3R?....
  41ee88:	3f514d3d bf13682a 3f5064af bf14b039     =MQ?*h...dP?9...
  41ee98:	3f4f7a1f bf15f6d9 3f4e8d90 bf173c07     .zO?......N?.<..
  41eea8:	3f4d9f02 bf187fc0 3f4cae79 bf19c200     ..M?....y.L?....
  41eeb8:	3f4bbbf8 bf1b02c6 3f4ac77f bf1c420c     ..K?......J?.B..
  41eec8:	3f49d112 bf1d7fd1 3f48d8b3 bf1ebc12     ..I?......H?....
  41eed8:	3f47de65 bf1ff6cb 3f46e22a bf212ff9     e.G?....*.F?./!.
  41eee8:	3f45e403 bf226799 3f44e3f5 bf239da9     ..E?.g"...D?..#.
  41eef8:	3f43e200 bf24d225 3f42de29 bf26050a     ..C?%.$.).B?..&.
  41ef08:	3f41d870 bf273656 3f40d0da bf286605     p.A?V6'...@?.f(.
  41ef18:	3f3fc767 bf299415 3f3ebc1b bf2ac082     g.??..)...>?..*.
  41ef28:	3f3daef9 bf2beb4a 3f3ca003 bf2d1469     ..=?J.+...<?i.-.
  41ef38:	3f3b8f3b bf2e3bde 3f3a7ca4 bf2f61a5     ;.;?.;...|:?.a/.
  41ef48:	3f396842 bf3085bb 3f385216 bf31a81d     Bh9?..0..R8?..1.
  41ef58:	3f373a23 bf32c8c9 3f36206c bf33e7bc     #:7?..2.l 6?..3.
  41ef68:	3f3504f3 bf3504f3 3f33e7bc bf36206c     ..5?..5...3?l 6.
  41ef78:	3f32c8c9 bf373a23 3f31a81d bf385216     ..2?#:7...1?.R8.
  41ef88:	3f3085bb bf396842 3f2f61a5 bf3a7ca4     ..0?Bh9..a/?.|:.
  41ef98:	3f2e3bde bf3b8f3b 3f2d1469 bf3ca003     .;.?;.;.i.-?..<.
  41efa8:	3f2beb4a bf3daef9 3f2ac082 bf3ebc1b     J.+?..=...*?..>.
  41efb8:	3f299415 bf3fc767 3f286605 bf40d0da     ..)?g.?..f(?..@.
  41efc8:	3f273656 bf41d870 3f26050a bf42de29     V6'?p.A...&?).B.
  41efd8:	3f24d225 bf43e200 3f239da9 bf44e3f5     %.$?..C...#?..D.
  41efe8:	3f226799 bf45e403 3f212ff9 bf46e22a     .g"?..E../!?*.F.
  41eff8:	3f1ff6cb bf47de65 3f1ebc12 bf48d8b3     ...?e.G....?..H.
  41f008:	3f1d7fd1 bf49d112 3f1c420c bf4ac77f     ...?..I..B.?..J.
  41f018:	3f1b02c6 bf4bbbf8 3f19c200 bf4cae79     ...?..K....?y.L.
  41f028:	3f187fc0 bf4d9f02 3f173c07 bf4e8d90     ...?..M..<.?..N.
  41f038:	3f15f6d9 bf4f7a1f 3f14b039 bf5064af     ...?.zO.9..?.dP.
  41f048:	3f13682a bf514d3d 3f121eb0 bf5233c6     *h.?=MQ....?.3R.
  41f058:	3f10d3cd bf531849 3f0f8784 bf53fac3     ...?I.S....?..S.
  41f068:	3f0e39da bf54db31 3f0cead0 bf55b993     .9.?1.T....?..U.
  41f078:	3f0b9a6b bf5695e5 3f0a48ad bf577026     k..?..V..H.?&pW.
  41f088:	3f08f59b bf584853 3f07a136 bf591e6a     ...?SHX.6..?j.Y.
  41f098:	3f064b82 bf59f26a 3f04f484 bf5ac450     .K.?j.Y....?P.Z.
  41f0a8:	3f039c3d bf5b941a 3f0242b1 bf5c61c7     =..?..[..B.?.a\.
  41f0b8:	3f00e7e4 bf5d2d53 3eff17b2 bf5df6be     ...?S-]....>..].
  41f0c8:	3efc5d27 bf5ebe05 3ef9a02d bf5f8327     '].>..^.-..>'._.
  41f0d8:	3ef6e0cb bf604621 3ef41f07 bf6106f2     ...>!F`....>..a.
  41f0e8:	3ef15aea bf61c598 3eee9479 bf628210     .Z.>..a.y..>..b.
  41f0f8:	3eebcbbb bf633c5a 3ee900b7 bf63f473     ...>Z<c....>s.c.
  41f108:	3ee63375 bf64aa59 3ee363fa bf655e0b     u3.>Y.d..c.>.^e.
  41f118:	3ee0924f bf660f88 3eddbe79 bf66becc     O..>..f.y..>..f.
  41f128:	3edae880 bf676bd8 3ed8106b bf6816a8     ...>.kg.k..>..h.
  41f138:	3ed53641 bf68bf3c 3ed25a09 bf696591     A6.><.h..Z.>.ei.
  41f148:	3ecf7bca bf6a09a7 3ecc9b8b bf6aab7b     .{.>..j....>{.j.
  41f158:	3ec9b953 bf6b4b0c 3ec6d529 bf6be858     S..>.Kk.)..>X.k.
  41f168:	3ec3ef15 bf6c835e 3ec1071e bf6d1c1d     ...>^.l....>..m.
  41f178:	3ebe1d4a bf6db293 3ebb31a0 bf6e46be     J..>..m..1.>.Fn.
  41f188:	3eb8442a bf6ed89e 3eb554ec bf6f6830     *D.>..n..T.>0ho.
  41f198:	3eb263ef bf6ff573 3eaf713a bf708066     .c.>s.o.:q.>f.p.
  41f1a8:	3eac7cd4 bf710908 3ea986c4 bf718f57     .|.>..q....>W.q.
  41f1b8:	3ea68f12 bf721352 3ea395c5 bf7294f8     ...>R.r....>..r.
  41f1c8:	3ea09ae5 bf731447 3e9d9e78 bf73913f     ...>G.s.x..>?.s.
  41f1d8:	3e9aa086 bf740bdd 3e97a117 bf748422     ...>..t....>".t.
  41f1e8:	3e94a031 bf74fa0b 3e919ddd bf756d97     1..>..t....>.mu.
  41f1f8:	3e8e9a22 bf75dec6 3e8b9507 bf764d97     "..>..u....>.Mv.
  41f208:	3e888e93 bf76ba07 3e8586ce bf772417     ...>..v....>.$w.
  41f218:	3e827dc0 bf778bc5 3e7ee6e1 bf77f110     .}.>..w...~>..w.
  41f228:	3e78cfcc bf7853f8 3e72b651 bf78b47b     ..x>.Sx.Q.r>{.x.
  41f238:	3e6c9a7f bf791298 3e667c66 bf796e4e     ..l>..y.f|f>Nny.
  41f248:	3e605c13 bf79c79d 3e5a3997 bf7a1e84     .\`>..y..9Z>..z.
  41f258:	3e541501 bf7a7302 3e4dee60 bf7ac516     ..T>.sz.`.M>..z.
  41f268:	3e47c5c2 bf7b14be 3e419b37 bf7b61fc     ..G>..{.7.A>.a{.
  41f278:	3e3b6ecf bf7baccd 3e354098 bf7bf531     .n;>..{..@5>1.{.
  41f288:	3e2f10a2 bf7c3b28 3e28defc bf7c7eb0     ../>(;|...(>.~|.
  41f298:	3e22abb6 bf7cbfc9 3e1c76de bf7cfe73     ..">..|..v.>s.|.
  41f2a8:	3e164083 bf7d3aac 3e1008b7 bf7d7474     .@.>.:}....>tt}.
  41f2b8:	3e09cf86 bf7dabcc 3e039502 bf7de0b1     ...>..}....>..}.
  41f2c8:	3dfab273 bf7e1324 3dee3876 bf7e4323     s..=$.~.v8.=#C~.
  41f2d8:	3de1bc2e bf7e70b0 3dd53db9 bf7e9bc9     ...=.p~..=.=..~.
  41f2e8:	3dc8bd36 bf7ec46d 3dbc3ac3 bf7eea9d     6..=m.~..:.=..~.
  41f2f8:	3dafb680 bf7f0e58 3da3308c bf7f2f9d     ...=X....0.=./..
  41f308:	3d96a905 bf7f4e6d 3d8a200a bf7f6ac7     ...=mN... .=.j..
  41f318:	3d7b2b74 bf7f84ab 3d621468 bf7f9c18     t+{=....h.b=....
  41f328:	3d48fb2f bf7fb10f 3d2fe007 bf7fc38f     /.H=....../=....
  41f338:	3d16c32c bf7fd398 3cfb49b9 bf7fe129     ,..=.....I.<)...
  41f348:	3cc90ab0 bf7fec43 3c96c9b6 bf7ff4e6     ...<C......<....
  41f358:	3c490e90 bf7ffb11 3bc90f89 bf7ffec4     ..I<.......;....

0041f368 <twiddleCoef_rfft_256>:
  41f368:	00000000 3f800000 3cc90ab0 3f7fec43     .......?...<C..?
  41f378:	3d48fb2f 3f7fb10f 3d96a905 3f7f4e6d     /.H=...?...=mN.?
  41f388:	3dc8bd36 3f7ec46d 3dfab273 3f7e1324     6..=m.~?s..=$.~?
  41f398:	3e164083 3f7d3aac 3e2f10a2 3f7c3b28     .@.>.:}?../>(;|?
  41f3a8:	3e47c5c2 3f7b14be 3e605c13 3f79c79d     ..G>..{?.\`>..y?
  41f3b8:	3e78cfcc 3f7853f8 3e888e93 3f76ba07     ..x>.Sx?...>..v?
  41f3c8:	3e94a031 3f74fa0b 3ea09ae5 3f731447     1..>..t?...>G.s?
  41f3d8:	3eac7cd4 3f710908 3eb8442a 3f6ed89e     .|.>..q?*D.>..n?
  41f3e8:	3ec3ef15 3f6c835e 3ecf7bca 3f6a09a7     ...>^.l?.{.>..j?
  41f3f8:	3edae880 3f676bd8 3ee63375 3f64aa59     ...>.kg?u3.>Y.d?
  41f408:	3ef15aea 3f61c598 3efc5d27 3f5ebe05     .Z.>..a?'].>..^?
  41f418:	3f039c3d 3f5b941a 3f08f59b 3f584853     =..?..[?...?SHX?
  41f428:	3f0e39da 3f54db31 3f13682a 3f514d3d     .9.?1.T?*h.?=MQ?
  41f438:	3f187fc0 3f4d9f02 3f1d7fd1 3f49d112     ...?..M?...?..I?
  41f448:	3f226799 3f45e403 3f273656 3f41d870     .g"?..E?V6'?p.A?
  41f458:	3f2beb4a 3f3daef9 3f3085bb 3f396842     J.+?..=?..0?Bh9?
  41f468:	3f3504f3 3f3504f3 3f396842 3f3085bb     ..5?..5?Bh9?..0?
  41f478:	3f3daef9 3f2beb4a 3f41d870 3f273656     ..=?J.+?p.A?V6'?
  41f488:	3f45e403 3f226799 3f49d112 3f1d7fd1     ..E?.g"?..I?...?
  41f498:	3f4d9f02 3f187fc0 3f514d3d 3f13682a     ..M?...?=MQ?*h.?
  41f4a8:	3f54db31 3f0e39da 3f584853 3f08f59b     1.T?.9.?SHX?...?
  41f4b8:	3f5b941a 3f039c3d 3f5ebe05 3efc5d27     ..[?=..?..^?'].>
  41f4c8:	3f61c598 3ef15aea 3f64aa59 3ee63375     ..a?.Z.>Y.d?u3.>
  41f4d8:	3f676bd8 3edae880 3f6a09a7 3ecf7bca     .kg?...>..j?.{.>
  41f4e8:	3f6c835e 3ec3ef15 3f6ed89e 3eb8442a     ^.l?...>..n?*D.>
  41f4f8:	3f710908 3eac7cd4 3f731447 3ea09ae5     ..q?.|.>G.s?...>
  41f508:	3f74fa0b 3e94a031 3f76ba07 3e888e93     ..t?1..>..v?...>
  41f518:	3f7853f8 3e78cfcc 3f79c79d 3e605c13     .Sx?..x>..y?.\`>
  41f528:	3f7b14be 3e47c5c2 3f7c3b28 3e2f10a2     ..{?..G>(;|?../>
  41f538:	3f7d3aac 3e164083 3f7e1324 3dfab273     .:}?.@.>$.~?s..=
  41f548:	3f7ec46d 3dc8bd36 3f7f4e6d 3d96a905     m.~?6..=mN.?...=
  41f558:	3f7fb10f 3d48fb2f 3f7fec43 3cc90ab0     ...?/.H=C..?...<
  41f568:	3f800000 00000000 3f7fec43 bcc90ab0     ...?....C..?....
  41f578:	3f7fb10f bd48fb2f 3f7f4e6d bd96a905     ...?/.H.mN.?....
  41f588:	3f7ec46d bdc8bd36 3f7e1324 bdfab273     m.~?6...$.~?s...
  41f598:	3f7d3aac be164083 3f7c3b28 be2f10a2     .:}?.@..(;|?../.
  41f5a8:	3f7b14be be47c5c2 3f79c79d be605c13     ..{?..G...y?.\`.
  41f5b8:	3f7853f8 be78cfcc 3f76ba07 be888e93     .Sx?..x...v?....
  41f5c8:	3f74fa0b be94a031 3f731447 bea09ae5     ..t?1...G.s?....
  41f5d8:	3f710908 beac7cd4 3f6ed89e beb8442a     ..q?.|....n?*D..
  41f5e8:	3f6c835e bec3ef15 3f6a09a7 becf7bca     ^.l?......j?.{..
  41f5f8:	3f676bd8 bedae880 3f64aa59 bee63375     .kg?....Y.d?u3..
  41f608:	3f61c598 bef15aea 3f5ebe05 befc5d27     ..a?.Z....^?']..
  41f618:	3f5b941a bf039c3d 3f584853 bf08f59b     ..[?=...SHX?....
  41f628:	3f54db31 bf0e39da 3f514d3d bf13682a     1.T?.9..=MQ?*h..
  41f638:	3f4d9f02 bf187fc0 3f49d112 bf1d7fd1     ..M?......I?....
  41f648:	3f45e403 bf226799 3f41d870 bf273656     ..E?.g".p.A?V6'.
  41f658:	3f3daef9 bf2beb4a 3f396842 bf3085bb     ..=?J.+.Bh9?..0.
  41f668:	3f3504f3 bf3504f3 3f3085bb bf396842     ..5?..5...0?Bh9.
  41f678:	3f2beb4a bf3daef9 3f273656 bf41d870     J.+?..=.V6'?p.A.
  41f688:	3f226799 bf45e403 3f1d7fd1 bf49d112     .g"?..E....?..I.
  41f698:	3f187fc0 bf4d9f02 3f13682a bf514d3d     ...?..M.*h.?=MQ.
  41f6a8:	3f0e39da bf54db31 3f08f59b bf584853     .9.?1.T....?SHX.
  41f6b8:	3f039c3d bf5b941a 3efc5d27 bf5ebe05     =..?..[.'].>..^.
  41f6c8:	3ef15aea bf61c598 3ee63375 bf64aa59     .Z.>..a.u3.>Y.d.
  41f6d8:	3edae880 bf676bd8 3ecf7bca bf6a09a7     ...>.kg..{.>..j.
  41f6e8:	3ec3ef15 bf6c835e 3eb8442a bf6ed89e     ...>^.l.*D.>..n.
  41f6f8:	3eac7cd4 bf710908 3ea09ae5 bf731447     .|.>..q....>G.s.
  41f708:	3e94a031 bf74fa0b 3e888e93 bf76ba07     1..>..t....>..v.
  41f718:	3e78cfcc bf7853f8 3e605c13 bf79c79d     ..x>.Sx..\`>..y.
  41f728:	3e47c5c2 bf7b14be 3e2f10a2 bf7c3b28     ..G>..{.../>(;|.
  41f738:	3e164083 bf7d3aac 3dfab273 bf7e1324     .@.>.:}.s..=$.~.
  41f748:	3dc8bd36 bf7ec46d 3d96a905 bf7f4e6d     6..=m.~....=mN..
  41f758:	3d48fb2f bf7fb10f 3cc90ab0 bf7fec43     /.H=.......<C...

0041f768 <armBitRevIndexTable256>:
  41f768:	02000008 04000010 06000018 00400020     ............ .@.
  41f778:	02400028 04400030 06400038 00800040     (.@.0.@.8.@.@...
  41f788:	02800048 04800050 06800058 00c00060     H...P...X...`...
  41f798:	02c00068 04c00070 06c00078 01000080     h...p...x.......
  41f7a8:	03000088 05000090 07000098 014000a0     ..............@.
  41f7b8:	034000a8 054000b0 074000b8 018000c0     ..@...@...@.....
  41f7c8:	038000c8 058000d0 078000d8 01c000e0     ................
  41f7d8:	03c000e8 05c000f0 07c000f8 02000100     ................
  41f7e8:	02080108 04080110 06080118 02800120     ............ ...
  41f7f8:	02480128 04480130 06480138 03000140     (.H.0.H.8.H.@...
  41f808:	02880148 04880150 06880158 03800160     H...P...X...`...
  41f818:	02c80168 04c80170 06c80178 02080180     h...p...x.......
  41f828:	03080188 05080190 07080198 028801a0     ................
  41f838:	034801a8 054801b0 074801b8 030801c0     ..H...H...H.....
  41f848:	038801c8 058801d0 078801d8 038801e0     ................
  41f858:	03c801e8 05c801f0 07c801f8 02100208     ................
  41f868:	04000200 04100210 06100218 04800220     ............ ...
  41f878:	02500228 04500230 06500238 05000240     (.P.0.P.8.P.@...
  41f888:	02900248 04900250 06900258 05800260     H...P...X...`...
  41f898:	02d00268 04d00270 06d00278 04080280     h...p...x.......
  41f8a8:	03100288 05100290 07100298 048802a0     ................
  41f8b8:	035002a8 055002b0 075002b8 050802c0     ..P...P...P.....
  41f8c8:	039002c8 059002d0 079002d8 058802e0     ................
  41f8d8:	03d002e8 05d002f0 07d002f8 06000300     ................
  41f8e8:	06100308 04180310 06180318 06800320     ............ ...
  41f8f8:	06900328 04580330 06580338 07000340     (...0.X.8.X.@...
  41f908:	07100348 04980350 06980358 07800360     H...P...X...`...
  41f918:	07900368 04d80370 06d80378 06080380     h...p...x.......
  41f928:	06180388 05180390 07180398 068803a0     ................
  41f938:	069803a8 055803b0 075803b8 070803c0     ......X...X.....
  41f948:	071803c8 059803d0 079803d8 078803e0     ................
  41f958:	079803e8 05d803f0 07d803f8 04800408     ................
  41f968:	04200410 06200418 05800428 04600430     .. ... .(...0.`.
  41f978:	06600438 06000440 04880448 04a00450     8.`.@...H...P...
  41f988:	06a00458 06100460 05880468 04e00470     X...`...h...p...
  41f998:	06e00478 06800488 05200490 07200498     x......... ... .
  41f9a8:	060804a0 078004a8 056004b0 076004b8     ..........`...`.
  41f9b8:	062004c0 068804c8 05a004d0 07a004d8     .. .............
  41f9c8:	061804e0 078804e8 05e004f0 07e004f8     ................
  41f9d8:	05200508 05800510 06280518 05900528     .. .......(.(...
  41f9e8:	05880530 06680538 07000540 07200548     0...8.h.@...H. .
  41f9f8:	07800550 06a80558 07080560 05980568     P...X...`...h...
  41fa08:	07880570 06e80578 06900588 07280598     p...x.........(.
  41fa18:	062805a0 079005a8 072805b0 076805b8     ..(.......(...h.
  41fa28:	071005c0 069805c8 079005d0 07a805d8     ................
  41fa38:	071805e0 079805e8 079805f0 07e805f8     ................
  41fa48:	06300618 06700638 07000640 07800648     ..0.8.p.@...H...
  41fa58:	07080650 06b00658 07100660 07900668     P...X...`...h...
  41fa68:	07180670 06f00678 06a00688 07300698     p...x.........0.
  41fa78:	07a006a8 078806b0 077006b8 072006c0     ..........p... .
  41fa88:	07a006c8 072806d0 07b006d8 073006e0     ......(.......0.
  41fa98:	07a806e8 079806f0 07f006f8 07500748     ............H.P.
  41faa8:	07980738 07600750 07700758 07c00760     8...P.`.X.p.`...
  41fab8:	07d00768 07f00778 07e00770 07f007b8     h...x...p.......
  41fac8:	07b007a8 07f007d8 07e007c8 07f007e8     ................

0041fad8 <twiddleCoef_rfft_128>:
  41fad8:	00000000 3f800000 3d48fb2f 3f7fb10f     .......?/.H=...?
  41fae8:	3dc8bd36 3f7ec46d 3e164083 3f7d3aac     6..=m.~?.@.>.:}?
  41faf8:	3e47c5c2 3f7b14be 3e78cfcc 3f7853f8     ..G>..{?..x>.Sx?
  41fb08:	3e94a031 3f74fa0b 3eac7cd4 3f710908     1..>..t?.|.>..q?
  41fb18:	3ec3ef15 3f6c835e 3edae880 3f676bd8     ...>^.l?...>.kg?
  41fb28:	3ef15aea 3f61c598 3f039c3d 3f5b941a     .Z.>..a?=..?..[?
  41fb38:	3f0e39da 3f54db31 3f187fc0 3f4d9f02     .9.?1.T?...?..M?
  41fb48:	3f226799 3f45e403 3f2beb4a 3f3daef9     .g"?..E?J.+?..=?
  41fb58:	3f3504f3 3f3504f3 3f3daef9 3f2beb4a     ..5?..5?..=?J.+?
  41fb68:	3f45e403 3f226799 3f4d9f02 3f187fc0     ..E?.g"?..M?...?
  41fb78:	3f54db31 3f0e39da 3f5b941a 3f039c3d     1.T?.9.?..[?=..?
  41fb88:	3f61c598 3ef15aea 3f676bd8 3edae880     ..a?.Z.>.kg?...>
  41fb98:	3f6c835e 3ec3ef15 3f710908 3eac7cd4     ^.l?...>..q?.|.>
  41fba8:	3f74fa0b 3e94a031 3f7853f8 3e78cfcc     ..t?1..>.Sx?..x>
  41fbb8:	3f7b14be 3e47c5c2 3f7d3aac 3e164083     ..{?..G>.:}?.@.>
  41fbc8:	3f7ec46d 3dc8bd36 3f7fb10f 3d48fb2f     m.~?6..=...?/.H=
  41fbd8:	3f800000 00000000 3f7fb10f bd48fb2f     ...?.......?/.H.
  41fbe8:	3f7ec46d bdc8bd36 3f7d3aac be164083     m.~?6....:}?.@..
  41fbf8:	3f7b14be be47c5c2 3f7853f8 be78cfcc     ..{?..G..Sx?..x.
  41fc08:	3f74fa0b be94a031 3f710908 beac7cd4     ..t?1.....q?.|..
  41fc18:	3f6c835e bec3ef15 3f676bd8 bedae880     ^.l?.....kg?....
  41fc28:	3f61c598 bef15aea 3f5b941a bf039c3d     ..a?.Z....[?=...
  41fc38:	3f54db31 bf0e39da 3f4d9f02 bf187fc0     1.T?.9....M?....
  41fc48:	3f45e403 bf226799 3f3daef9 bf2beb4a     ..E?.g"...=?J.+.
  41fc58:	3f3504f3 bf3504f3 3f2beb4a bf3daef9     ..5?..5.J.+?..=.
  41fc68:	3f226799 bf45e403 3f187fc0 bf4d9f02     .g"?..E....?..M.
  41fc78:	3f0e39da bf54db31 3f039c3d bf5b941a     .9.?1.T.=..?..[.
  41fc88:	3ef15aea bf61c598 3edae880 bf676bd8     .Z.>..a....>.kg.
  41fc98:	3ec3ef15 bf6c835e 3eac7cd4 bf710908     ...>^.l..|.>..q.
  41fca8:	3e94a031 bf74fa0b 3e78cfcc bf7853f8     1..>..t...x>.Sx.
  41fcb8:	3e47c5c2 bf7b14be 3e164083 bf7d3aac     ..G>..{..@.>.:}.
  41fcc8:	3dc8bd36 bf7ec46d 3d48fb2f bf7fb10f     6..=m.~./.H=....

0041fcd8 <armBitRevIndexTable128>:
  41fcd8:	02000008 00400010 02400018 00800020     ......@...@. ...
  41fce8:	02800028 00c00030 02c00038 01000040     (...0...8...@...
  41fcf8:	03000048 01400050 03400058 01800060     H...P.@.X.@.`...
  41fd08:	03800068 01c00070 03c00078 02000080     h...p...x.......
  41fd18:	02080088 03000090 02480098 020800a0     ..........H.....
  41fd28:	028800a8 00c800b0 02c800b8 010800c0     ................
  41fd38:	030800c8 014800d0 034800d8 018800e0     ......H...H.....
  41fd48:	038800e8 01c800f0 03c800f8 02100108     ................
  41fd58:	01400110 02500118 03000120 02900128     ..@...P. ...(...
  41fd68:	01480130 02d00138 03100148 03500158     0.H.8...H...X.P.
  41fd78:	01900160 03900168 01d00170 03d00178     `...h...p...x...
  41fd88:	02400180 02180188 03400190 02580198     ..@.......@...X.
  41fd98:	024801a0 029801a8 034801b0 02d801b8     ..H.......H.....
  41fda8:	025001c0 031801c8 035001d0 035801d8     ..P.......P...X.
  41fdb8:	025801e0 039801e8 035801f0 03d801f8     ..X.......X.....
  41fdc8:	02200208 02400210 02600218 02a00228     .. ...@...`.(...
  41fdd8:	02600230 02e00238 03000240 03200248     0.`.8...@...H. .
  41fde8:	03400250 03600258 03200260 03a00268     P.@.X.`.`. .h...
  41fdf8:	03600270 03e00278 02a00288 03800290     p.`.x...........
  41fe08:	03a00298 038802b0 02e802b8 038002c0     ................
  41fe18:	032802c8 039002d0 036802d8 03a002e0     ..(.......h.....
  41fe28:	03a802e8 039802f0 03e802f8 03200308     .............. .
  41fe38:	03400310 03600318 03880328 03600330     ..@...`.(...0.`.
  41fe48:	03980338 03600348 03700358 03b00368     8...H.`.X.p.h...
  41fe58:	03f00378 03a00388 03c00390 03e00398     x...............
  41fe68:	03c803b0 03e803b8 03e003c8 03f003d8     ................
  41fe78:	74727173 00000066                       sqrtf...

0041fe80 <_global_impure_ptr>:
  41fe80:	20400088 33323130 37363534 42413938     ..@ 0123456789AB
  41fe90:	46454443 00000000 33323130 37363534     CDEF....01234567
  41fea0:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
  41feb0:	0000296c                                l)..

0041feb4 <blanks.8340>:
  41feb4:	20202020 20202020 20202020 20202020                     

0041fec4 <zeroes.8341>:
  41fec4:	30303030 30303030 30303030 30303030     0000000000000000
  41fed4:	00000043 49534f50 00000058 0000002e     C...POSIX.......

0041fee4 <_ctype_>:
  41fee4:	20202000 20202020 28282020 20282828     .         ((((( 
  41fef4:	20202020 20202020 20202020 20202020                     
  41ff04:	10108820 10101010 10101010 10101010      ...............
  41ff14:	04040410 04040404 10040404 10101010     ................
  41ff24:	41411010 41414141 01010101 01010101     ..AAAAAA........
  41ff34:	01010101 01010101 01010101 10101010     ................
  41ff44:	42421010 42424242 02020202 02020202     ..BBBBBB........
  41ff54:	02020202 02020202 02020202 10101010     ................
  41ff64:	00000020 00000000 00000000 00000000      ...............
	...

0041ffe8 <_init>:
  41ffe8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  41ffea:	bf00      	nop
  41ffec:	bcf8      	pop	{r3, r4, r5, r6, r7}
  41ffee:	bc08      	pop	{r3}
  41fff0:	469e      	mov	lr, r3
  41fff2:	4770      	bx	lr

0041fff4 <__init_array_start>:
  41fff4:	00409579 	.word	0x00409579

0041fff8 <__frame_dummy_init_array_entry>:
  41fff8:	00400165                                e.@.

0041fffc <_fini>:
  41fffc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  41fffe:	bf00      	nop
  420000:	bcf8      	pop	{r3, r4, r5, r6, r7}
  420002:	bc08      	pop	{r3}
  420004:	469e      	mov	lr, r3
  420006:	4770      	bx	lr

00420008 <__fini_array_start>:
  420008:	00400141 	.word	0x00400141

Disassembly of section .relocate:

20400000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20400000:	f3bf 8f5f 	dmb	sy
20400004:	3801      	subs	r0, #1
20400006:	d1fb      	bne.n	20400000 <portable_delay_cycles>
20400008:	4770      	bx	lr
	...

2040000c <inBuffer>:
2040000c:	8c00 2041                                   ..A 

20400010 <inPingMode>:
20400010:	0001 0000                                   ....

20400014 <outBuffer>:
20400014:	7800 2041                                   .xA 

20400018 <outPingMode>:
20400018:	0001 0000                                   ....

2040001c <processBuffer>:
2040001c:	6c00 2041                                   .lA 

20400020 <pitchtracker>:
20400020:	0000 bf80 ffff ffff                         ........

20400028 <g_interrupt_enabled>:
20400028:	0001 0000                                   ....

2040002c <SystemCoreClock>:
2040002c:	0900 003d                                   ..=.

20400030 <uxCriticalNesting>:
20400030:	aaaa aaaa                                   ....

20400034 <xISRTestStatus>:
20400034:	0001 0000                                   ....

20400038 <uxTick.9777>:
20400038:	ffff ffff                                   ....

2040003c <xTestStatus>:
2040003c:	0001 0000                                   ....

20400040 <envelope_filter>:
20400040:	096c 3b79 65fe 3c77 0275 3d1a cb29 3d90     l.y;.ew<u..=)..=
20400050:	f488 3ddb e0df 3e0b 58e2 3e17 e0df 3e0b     ...=...>.X.>...>
20400060:	f488 3ddb cb29 3d90 0275 3d1a 65fe 3c77     ...=)..=u..=.ew<
20400070:	096c 3b79                                   l.y;

20400074 <envelope_filter_length>:
20400074:	000d 0000                                   ....

20400078 <harmony_list_fill>:
20400078:	b80c 2041                                   ..A 

2040007c <harmony_list_read>:
2040007c:	b838 2041                                   8.A 

20400080 <__fdlib_version>:
20400080:	0001 0000                                   ....

20400084 <_impure_ptr>:
20400084:	0088 2040                                   ..@ 

20400088 <impure_data>:
20400088:	0000 0000 0374 2040 03dc 2040 0444 2040     ....t.@ ..@ D.@ 
	...
20400130:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
20400140:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

204004b0 <__malloc_av_>:
	...
204004b8:	04b0 2040 04b0 2040 04b8 2040 04b8 2040     ..@ ..@ ..@ ..@ 
204004c8:	04c0 2040 04c0 2040 04c8 2040 04c8 2040     ..@ ..@ ..@ ..@ 
204004d8:	04d0 2040 04d0 2040 04d8 2040 04d8 2040     ..@ ..@ ..@ ..@ 
204004e8:	04e0 2040 04e0 2040 04e8 2040 04e8 2040     ..@ ..@ ..@ ..@ 
204004f8:	04f0 2040 04f0 2040 04f8 2040 04f8 2040     ..@ ..@ ..@ ..@ 
20400508:	0500 2040 0500 2040 0508 2040 0508 2040     ..@ ..@ ..@ ..@ 
20400518:	0510 2040 0510 2040 0518 2040 0518 2040     ..@ ..@ ..@ ..@ 
20400528:	0520 2040 0520 2040 0528 2040 0528 2040      .@  .@ (.@ (.@ 
20400538:	0530 2040 0530 2040 0538 2040 0538 2040     0.@ 0.@ 8.@ 8.@ 
20400548:	0540 2040 0540 2040 0548 2040 0548 2040     @.@ @.@ H.@ H.@ 
20400558:	0550 2040 0550 2040 0558 2040 0558 2040     P.@ P.@ X.@ X.@ 
20400568:	0560 2040 0560 2040 0568 2040 0568 2040     `.@ `.@ h.@ h.@ 
20400578:	0570 2040 0570 2040 0578 2040 0578 2040     p.@ p.@ x.@ x.@ 
20400588:	0580 2040 0580 2040 0588 2040 0588 2040     ..@ ..@ ..@ ..@ 
20400598:	0590 2040 0590 2040 0598 2040 0598 2040     ..@ ..@ ..@ ..@ 
204005a8:	05a0 2040 05a0 2040 05a8 2040 05a8 2040     ..@ ..@ ..@ ..@ 
204005b8:	05b0 2040 05b0 2040 05b8 2040 05b8 2040     ..@ ..@ ..@ ..@ 
204005c8:	05c0 2040 05c0 2040 05c8 2040 05c8 2040     ..@ ..@ ..@ ..@ 
204005d8:	05d0 2040 05d0 2040 05d8 2040 05d8 2040     ..@ ..@ ..@ ..@ 
204005e8:	05e0 2040 05e0 2040 05e8 2040 05e8 2040     ..@ ..@ ..@ ..@ 
204005f8:	05f0 2040 05f0 2040 05f8 2040 05f8 2040     ..@ ..@ ..@ ..@ 
20400608:	0600 2040 0600 2040 0608 2040 0608 2040     ..@ ..@ ..@ ..@ 
20400618:	0610 2040 0610 2040 0618 2040 0618 2040     ..@ ..@ ..@ ..@ 
20400628:	0620 2040 0620 2040 0628 2040 0628 2040      .@  .@ (.@ (.@ 
20400638:	0630 2040 0630 2040 0638 2040 0638 2040     0.@ 0.@ 8.@ 8.@ 
20400648:	0640 2040 0640 2040 0648 2040 0648 2040     @.@ @.@ H.@ H.@ 
20400658:	0650 2040 0650 2040 0658 2040 0658 2040     P.@ P.@ X.@ X.@ 
20400668:	0660 2040 0660 2040 0668 2040 0668 2040     `.@ `.@ h.@ h.@ 
20400678:	0670 2040 0670 2040 0678 2040 0678 2040     p.@ p.@ x.@ x.@ 
20400688:	0680 2040 0680 2040 0688 2040 0688 2040     ..@ ..@ ..@ ..@ 
20400698:	0690 2040 0690 2040 0698 2040 0698 2040     ..@ ..@ ..@ ..@ 
204006a8:	06a0 2040 06a0 2040 06a8 2040 06a8 2040     ..@ ..@ ..@ ..@ 
204006b8:	06b0 2040 06b0 2040 06b8 2040 06b8 2040     ..@ ..@ ..@ ..@ 
204006c8:	06c0 2040 06c0 2040 06c8 2040 06c8 2040     ..@ ..@ ..@ ..@ 
204006d8:	06d0 2040 06d0 2040 06d8 2040 06d8 2040     ..@ ..@ ..@ ..@ 
204006e8:	06e0 2040 06e0 2040 06e8 2040 06e8 2040     ..@ ..@ ..@ ..@ 
204006f8:	06f0 2040 06f0 2040 06f8 2040 06f8 2040     ..@ ..@ ..@ ..@ 
20400708:	0700 2040 0700 2040 0708 2040 0708 2040     ..@ ..@ ..@ ..@ 
20400718:	0710 2040 0710 2040 0718 2040 0718 2040     ..@ ..@ ..@ ..@ 
20400728:	0720 2040 0720 2040 0728 2040 0728 2040      .@  .@ (.@ (.@ 
20400738:	0730 2040 0730 2040 0738 2040 0738 2040     0.@ 0.@ 8.@ 8.@ 
20400748:	0740 2040 0740 2040 0748 2040 0748 2040     @.@ @.@ H.@ H.@ 
20400758:	0750 2040 0750 2040 0758 2040 0758 2040     P.@ P.@ X.@ X.@ 
20400768:	0760 2040 0760 2040 0768 2040 0768 2040     `.@ `.@ h.@ h.@ 
20400778:	0770 2040 0770 2040 0778 2040 0778 2040     p.@ p.@ x.@ x.@ 
20400788:	0780 2040 0780 2040 0788 2040 0788 2040     ..@ ..@ ..@ ..@ 
20400798:	0790 2040 0790 2040 0798 2040 0798 2040     ..@ ..@ ..@ ..@ 
204007a8:	07a0 2040 07a0 2040 07a8 2040 07a8 2040     ..@ ..@ ..@ ..@ 
204007b8:	07b0 2040 07b0 2040 07b8 2040 07b8 2040     ..@ ..@ ..@ ..@ 
204007c8:	07c0 2040 07c0 2040 07c8 2040 07c8 2040     ..@ ..@ ..@ ..@ 
204007d8:	07d0 2040 07d0 2040 07d8 2040 07d8 2040     ..@ ..@ ..@ ..@ 
204007e8:	07e0 2040 07e0 2040 07e8 2040 07e8 2040     ..@ ..@ ..@ ..@ 
204007f8:	07f0 2040 07f0 2040 07f8 2040 07f8 2040     ..@ ..@ ..@ ..@ 
20400808:	0800 2040 0800 2040 0808 2040 0808 2040     ..@ ..@ ..@ ..@ 
20400818:	0810 2040 0810 2040 0818 2040 0818 2040     ..@ ..@ ..@ ..@ 
20400828:	0820 2040 0820 2040 0828 2040 0828 2040      .@  .@ (.@ (.@ 
20400838:	0830 2040 0830 2040 0838 2040 0838 2040     0.@ 0.@ 8.@ 8.@ 
20400848:	0840 2040 0840 2040 0848 2040 0848 2040     @.@ @.@ H.@ H.@ 
20400858:	0850 2040 0850 2040 0858 2040 0858 2040     P.@ P.@ X.@ X.@ 
20400868:	0860 2040 0860 2040 0868 2040 0868 2040     `.@ `.@ h.@ h.@ 
20400878:	0870 2040 0870 2040 0878 2040 0878 2040     p.@ p.@ x.@ x.@ 
20400888:	0880 2040 0880 2040 0888 2040 0888 2040     ..@ ..@ ..@ ..@ 
20400898:	0890 2040 0890 2040 0898 2040 0898 2040     ..@ ..@ ..@ ..@ 
204008a8:	08a0 2040 08a0 2040 08a8 2040 08a8 2040     ..@ ..@ ..@ ..@ 

204008b8 <__malloc_sbrk_base>:
204008b8:	ffff ffff                                   ....

204008bc <__malloc_trim_threshold>:
204008bc:	0000 0002                                   ....

204008c0 <__atexit_recursive_mutex>:
204008c0:	b864 2041                                   d.A 

204008c4 <__global_locale>:
204008c4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008e4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400904:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400924:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400944:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400964:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400984:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204009a4:	a671 0040 a001 0040 0000 0000 fee4 0041     q.@...@.......A.
204009b4:	fee0 0041 fe94 0041 fe94 0041 fe94 0041     ..A...A...A...A.
204009c4:	fe94 0041 fe94 0041 fe94 0041 fe94 0041     ..A...A...A...A.
204009d4:	fe94 0041 fe94 0041 ffff ffff ffff ffff     ..A...A.........
204009e4:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
20400a0c:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
