
GatorScribe.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000f904  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0040f904  0040f904  0001f904  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009d8  20400000  0040f90c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          000183fc  204009d8  004102e4  000209d8  2**2
                  ALLOC
  4 .stack        00002004  20418dd4  004286e0  000209d8  2**0
                  ALLOC
  5 .heap         00000200  2041add8  0042a6e4  000209d8  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000209d8  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  00020a06  2**0
                  CONTENTS, READONLY
  8 .debug_info   00032468  00000000  00000000  00020a5f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000071b9  00000000  00000000  00052ec7  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000123ed  00000000  00000000  0005a080  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00001358  00000000  00000000  0006c46d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00002da0  00000000  00000000  0006d7c5  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0002a513  00000000  00000000  00070565  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0001db9e  00000000  00000000  0009aa78  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    0009e948  00000000  00000000  000b8616  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00004e50  00000000  00000000  00156f60  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	d8 ad 41 20 95 47 40 00 8d 47 40 00 91 47 40 00     ..A .G@..G@..G@.
  400010:	8d 47 40 00 8d 47 40 00 8d 47 40 00 00 00 00 00     .G@..G@..G@.....
	...
  40002c:	8d 47 40 00 8d 47 40 00 00 00 00 00 8d 47 40 00     .G@..G@......G@.
  40003c:	8d 47 40 00 8d 47 40 00 8d 47 40 00 8d 47 40 00     .G@..G@..G@..G@.
  40004c:	8d 47 40 00 8d 47 40 00 8d 47 40 00 8d 47 40 00     .G@..G@..G@..G@.
  40005c:	8d 47 40 00 8d 47 40 00 00 00 00 00 71 45 40 00     .G@..G@.....qE@.
  40006c:	81 45 40 00 91 45 40 00 8d 47 40 00 8d 47 40 00     .E@..E@..G@..G@.
  40007c:	8d 47 40 00 a1 45 40 00 b1 45 40 00 8d 47 40 00     .G@..E@..E@..G@.
  40008c:	8d 47 40 00 8d 47 40 00 8d 47 40 00 8d 47 40 00     .G@..G@..G@..G@.
  40009c:	8d 47 40 00 8d 47 40 00 8d 47 40 00 8d 47 40 00     .G@..G@..G@..G@.
  4000ac:	8d 47 40 00 8d 47 40 00 8d 47 40 00 8d 47 40 00     .G@..G@..G@..G@.
  4000bc:	8d 47 40 00 8d 47 40 00 8d 47 40 00 8d 47 40 00     .G@..G@..G@..G@.
  4000cc:	8d 47 40 00 00 00 00 00 8d 47 40 00 00 00 00 00     .G@......G@.....
  4000dc:	8d 47 40 00 8d 47 40 00 8d 47 40 00 8d 47 40 00     .G@..G@..G@..G@.
  4000ec:	8d 47 40 00 8d 47 40 00 8d 47 40 00 8d 47 40 00     .G@..G@..G@..G@.
  4000fc:	8d 47 40 00 8d 47 40 00 8d 47 40 00 8d 47 40 00     .G@..G@..G@..G@.
  40010c:	8d 47 40 00 8d 47 40 00 8d 47 40 00 00 00 00 00     .G@..G@..G@.....
  40011c:	00 00 00 00 8d 47 40 00 8d 47 40 00 ad 01 40 00     .....G@..G@...@.
  40012c:	8d 47 40 00 8d 47 40 00 00 00 00 00 8d 47 40 00     .G@..G@......G@.
  40013c:	8d 47 40 00                                         .G@.

00400140 <__do_global_dtors_aux>:
  400140:	b510      	push	{r4, lr}
  400142:	4c05      	ldr	r4, [pc, #20]	; (400158 <__do_global_dtors_aux+0x18>)
  400144:	7823      	ldrb	r3, [r4, #0]
  400146:	b933      	cbnz	r3, 400156 <__do_global_dtors_aux+0x16>
  400148:	4b04      	ldr	r3, [pc, #16]	; (40015c <__do_global_dtors_aux+0x1c>)
  40014a:	b113      	cbz	r3, 400152 <__do_global_dtors_aux+0x12>
  40014c:	4804      	ldr	r0, [pc, #16]	; (400160 <__do_global_dtors_aux+0x20>)
  40014e:	f3af 8000 	nop.w
  400152:	2301      	movs	r3, #1
  400154:	7023      	strb	r3, [r4, #0]
  400156:	bd10      	pop	{r4, pc}
  400158:	204009d8 	.word	0x204009d8
  40015c:	00000000 	.word	0x00000000
  400160:	0040f90c 	.word	0x0040f90c

00400164 <frame_dummy>:
  400164:	4b0c      	ldr	r3, [pc, #48]	; (400198 <frame_dummy+0x34>)
  400166:	b143      	cbz	r3, 40017a <frame_dummy+0x16>
  400168:	480c      	ldr	r0, [pc, #48]	; (40019c <frame_dummy+0x38>)
  40016a:	490d      	ldr	r1, [pc, #52]	; (4001a0 <frame_dummy+0x3c>)
  40016c:	b510      	push	{r4, lr}
  40016e:	f3af 8000 	nop.w
  400172:	480c      	ldr	r0, [pc, #48]	; (4001a4 <frame_dummy+0x40>)
  400174:	6803      	ldr	r3, [r0, #0]
  400176:	b923      	cbnz	r3, 400182 <frame_dummy+0x1e>
  400178:	bd10      	pop	{r4, pc}
  40017a:	480a      	ldr	r0, [pc, #40]	; (4001a4 <frame_dummy+0x40>)
  40017c:	6803      	ldr	r3, [r0, #0]
  40017e:	b933      	cbnz	r3, 40018e <frame_dummy+0x2a>
  400180:	4770      	bx	lr
  400182:	4b09      	ldr	r3, [pc, #36]	; (4001a8 <frame_dummy+0x44>)
  400184:	2b00      	cmp	r3, #0
  400186:	d0f7      	beq.n	400178 <frame_dummy+0x14>
  400188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40018c:	4718      	bx	r3
  40018e:	4b06      	ldr	r3, [pc, #24]	; (4001a8 <frame_dummy+0x44>)
  400190:	2b00      	cmp	r3, #0
  400192:	d0f5      	beq.n	400180 <frame_dummy+0x1c>
  400194:	4718      	bx	r3
  400196:	bf00      	nop
  400198:	00000000 	.word	0x00000000
  40019c:	0040f90c 	.word	0x0040f90c
  4001a0:	204009dc 	.word	0x204009dc
  4001a4:	0040f90c 	.word	0x0040f90c
  4001a8:	00000000 	.word	0x00000000

004001ac <XDMAC_Handler>:
 */
static inline uint32_t xdmac_channel_get_interrupt_status(Xdmac *xdmac, uint32_t channel_num)
{
	Assert(xdmac);
	Assert(channel_num < XDMACCHID_NUMBER);
	return xdmac->XDMAC_CHID[channel_num].XDMAC_CIS;
  4001ac:	4b31      	ldr	r3, [pc, #196]	; (400274 <XDMAC_Handler+0xc8>)
  4001ae:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
void XDMAC_Handler(void)
{
    uint32_t dma_status;
    
    dma_status = xdmac_channel_get_interrupt_status(XDMAC, XDMA_CH_SSC_RX);
    if (dma_status & XDMAC_CIS_BIS)
  4001b0:	07d9      	lsls	r1, r3, #31
  4001b2:	d53a      	bpl.n	40022a <XDMAC_Handler+0x7e>
{
  4001b4:	b470      	push	{r4, r5, r6}
    {
		// Update input, process, and fill buffers to be used 
		if(inPingMode)
  4001b6:	4d30      	ldr	r5, [pc, #192]	; (400278 <XDMAC_Handler+0xcc>)
  4001b8:	782b      	ldrb	r3, [r5, #0]
  4001ba:	2b00      	cmp	r3, #0
  4001bc:	d145      	bne.n	40024a <XDMAC_Handler+0x9e>
			inBuffer = inPingBuffer; 
			processBuffer = processPingBuffer; 
		}
		else 
		{
			inBuffer = inPongBuffer; 
  4001be:	4e2f      	ldr	r6, [pc, #188]	; (40027c <XDMAC_Handler+0xd0>)
			processBuffer = processPongBuffer; 
  4001c0:	4a2f      	ldr	r2, [pc, #188]	; (400280 <XDMAC_Handler+0xd4>)
			inBuffer = inPongBuffer; 
  4001c2:	4830      	ldr	r0, [pc, #192]	; (400284 <XDMAC_Handler+0xd8>)
			processBuffer = processPongBuffer; 
  4001c4:	4633      	mov	r3, r6
  4001c6:	4c30      	ldr	r4, [pc, #192]	; (400288 <XDMAC_Handler+0xdc>)
  4001c8:	4611      	mov	r1, r2
			inBuffer = inPongBuffer; 
  4001ca:	6006      	str	r6, [r0, #0]
			processBuffer = processPongBuffer; 
  4001cc:	6022      	str	r2, [r4, #0]
		}
		inPingMode = !inPingMode; 
  4001ce:	782e      	ldrb	r6, [r5, #0]
		
		int processIdx = 0;
		// Fill process buffer - only left channel decimated by 1
		for(int i = 0; i < IO_BUF_SIZE; i+=4)
  4001d0:	2200      	movs	r2, #0
		{
			processBuffer[processIdx++] = ((float32_t)(int16_t)inBuffer[i]) / INT16_MAX; 
  4001d2:	ed9f 7a2e 	vldr	s14, [pc, #184]	; 40028c <XDMAC_Handler+0xe0>
		inPingMode = !inPingMode; 
  4001d6:	f086 0601 	eor.w	r6, r6, #1
  4001da:	702e      	strb	r6, [r5, #0]
  4001dc:	e001      	b.n	4001e2 <XDMAC_Handler+0x36>
  4001de:	6821      	ldr	r1, [r4, #0]
  4001e0:	6803      	ldr	r3, [r0, #0]
			processBuffer[processIdx++] = ((float32_t)(int16_t)inBuffer[i]) / INT16_MAX; 
  4001e2:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
  4001e6:	4411      	add	r1, r2
		for(int i = 0; i < IO_BUF_SIZE; i+=4)
  4001e8:	3204      	adds	r2, #4
			processBuffer[processIdx++] = ((float32_t)(int16_t)inBuffer[i]) / INT16_MAX; 
  4001ea:	b21b      	sxth	r3, r3
		for(int i = 0; i < IO_BUF_SIZE; i+=4)
  4001ec:	f5b2 5f80 	cmp.w	r2, #4096	; 0x1000
			processBuffer[processIdx++] = ((float32_t)(int16_t)inBuffer[i]) / INT16_MAX; 
  4001f0:	ee07 3a90 	vmov	s15, r3
  4001f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
  4001f8:	ee67 7a87 	vmul.f32	s15, s15, s14
  4001fc:	edc1 7a00 	vstr	s15, [r1]
		for(int i = 0; i < IO_BUF_SIZE; i+=4)
  400200:	d1ed      	bne.n	4001de <XDMAC_Handler+0x32>
		}
		dataReceived = true; // can check for out of time here 
  400202:	4b23      	ldr	r3, [pc, #140]	; (400290 <XDMAC_Handler+0xe4>)
  400204:	2201      	movs	r2, #1
  400206:	701a      	strb	r2, [r3, #0]
  400208:	4b1a      	ldr	r3, [pc, #104]	; (400274 <XDMAC_Handler+0xc8>)
  40020a:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
    }
	
	dma_status = xdmac_channel_get_interrupt_status(XDMAC, XDMA_CH_SSC_TX);
	if (dma_status & XDMAC_CIS_BIS)
  40020e:	07da      	lsls	r2, r3, #31
  400210:	d509      	bpl.n	400226 <XDMAC_Handler+0x7a>
	{
		// update output buffer to be used 
		if(outPingMode)
  400212:	4b20      	ldr	r3, [pc, #128]	; (400294 <XDMAC_Handler+0xe8>)
  400214:	781a      	ldrb	r2, [r3, #0]
  400216:	bb02      	cbnz	r2, 40025a <XDMAC_Handler+0xae>
		{
			outBuffer = outPingBuffer; 
		}
		else
		{
			outBuffer = outPongBuffer; 
  400218:	4a1f      	ldr	r2, [pc, #124]	; (400298 <XDMAC_Handler+0xec>)
  40021a:	4920      	ldr	r1, [pc, #128]	; (40029c <XDMAC_Handler+0xf0>)
  40021c:	6011      	str	r1, [r2, #0]
		}
		outPingMode = !outPingMode; 
  40021e:	781a      	ldrb	r2, [r3, #0]
  400220:	f082 0201 	eor.w	r2, r2, #1
  400224:	701a      	strb	r2, [r3, #0]
	}
}
  400226:	bc70      	pop	{r4, r5, r6}
  400228:	4770      	bx	lr
  40022a:	4b12      	ldr	r3, [pc, #72]	; (400274 <XDMAC_Handler+0xc8>)
  40022c:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
	if (dma_status & XDMAC_CIS_BIS)
  400230:	07db      	lsls	r3, r3, #31
  400232:	d5f9      	bpl.n	400228 <XDMAC_Handler+0x7c>
		if(outPingMode)
  400234:	4b17      	ldr	r3, [pc, #92]	; (400294 <XDMAC_Handler+0xe8>)
  400236:	781a      	ldrb	r2, [r3, #0]
  400238:	b99a      	cbnz	r2, 400262 <XDMAC_Handler+0xb6>
			outBuffer = outPongBuffer; 
  40023a:	4a17      	ldr	r2, [pc, #92]	; (400298 <XDMAC_Handler+0xec>)
  40023c:	4917      	ldr	r1, [pc, #92]	; (40029c <XDMAC_Handler+0xf0>)
  40023e:	6011      	str	r1, [r2, #0]
		outPingMode = !outPingMode; 
  400240:	781a      	ldrb	r2, [r3, #0]
  400242:	f082 0201 	eor.w	r2, r2, #1
  400246:	701a      	strb	r2, [r3, #0]
  400248:	4770      	bx	lr
			inBuffer = inPingBuffer; 
  40024a:	4a15      	ldr	r2, [pc, #84]	; (4002a0 <XDMAC_Handler+0xf4>)
  40024c:	480d      	ldr	r0, [pc, #52]	; (400284 <XDMAC_Handler+0xd8>)
			processBuffer = processPingBuffer; 
  40024e:	4c0e      	ldr	r4, [pc, #56]	; (400288 <XDMAC_Handler+0xdc>)
  400250:	4613      	mov	r3, r2
  400252:	4914      	ldr	r1, [pc, #80]	; (4002a4 <XDMAC_Handler+0xf8>)
			inBuffer = inPingBuffer; 
  400254:	6002      	str	r2, [r0, #0]
			processBuffer = processPingBuffer; 
  400256:	6021      	str	r1, [r4, #0]
  400258:	e7b9      	b.n	4001ce <XDMAC_Handler+0x22>
			outBuffer = outPingBuffer; 
  40025a:	4a0f      	ldr	r2, [pc, #60]	; (400298 <XDMAC_Handler+0xec>)
  40025c:	4912      	ldr	r1, [pc, #72]	; (4002a8 <XDMAC_Handler+0xfc>)
  40025e:	6011      	str	r1, [r2, #0]
  400260:	e7dd      	b.n	40021e <XDMAC_Handler+0x72>
  400262:	4a0d      	ldr	r2, [pc, #52]	; (400298 <XDMAC_Handler+0xec>)
  400264:	4910      	ldr	r1, [pc, #64]	; (4002a8 <XDMAC_Handler+0xfc>)
  400266:	6011      	str	r1, [r2, #0]
		outPingMode = !outPingMode; 
  400268:	781a      	ldrb	r2, [r3, #0]
  40026a:	f082 0201 	eor.w	r2, r2, #1
  40026e:	701a      	strb	r2, [r3, #0]
  400270:	4770      	bx	lr
  400272:	bf00      	nop
  400274:	40078000 	.word	0x40078000
  400278:	20400010 	.word	0x20400010
  40027c:	2040fd94 	.word	0x2040fd94
  400280:	20415d94 	.word	0x20415d94
  400284:	2040000c 	.word	0x2040000c
  400288:	2040001c 	.word	0x2040001c
  40028c:	38000100 	.word	0x38000100
  400290:	204009f4 	.word	0x204009f4
  400294:	20400018 	.word	0x20400018
  400298:	20400014 	.word	0x20400014
  40029c:	20413d94 	.word	0x20413d94
  4002a0:	20416d94 	.word	0x20416d94
  4002a4:	2040ed94 	.word	0x2040ed94
  4002a8:	20411d94 	.word	0x20411d94

004002ac <configure_xdma>:
/******************************* XDMAC Interrupt Handler End *******************************/

/********************************** Public Functions Start **********************************/
void configure_xdma(void)
{
  4002ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t *src;
    
    xdmac_channel_config_t xdmac_channel_cfg = {0};
  4002b0:	2620      	movs	r6, #32
{
  4002b2:	b088      	sub	sp, #32
    xdmac_channel_config_t xdmac_channel_cfg = {0};
  4002b4:	2100      	movs	r1, #0
  4002b6:	4b30      	ldr	r3, [pc, #192]	; (400378 <configure_xdma+0xcc>)
  4002b8:	4632      	mov	r2, r6
  4002ba:	4668      	mov	r0, sp
  4002bc:	4798      	blx	r3
    
    /* Initialize and enable DMA controller */
    pmc_enable_periph_clk(ID_XDMAC);
  4002be:	4b2f      	ldr	r3, [pc, #188]	; (40037c <configure_xdma+0xd0>)
  4002c0:	203a      	movs	r0, #58	; 0x3a
    | XDMAC_CC_DIF_AHB_IF0
    | XDMAC_CC_SAM_FIXED_AM
    | XDMAC_CC_DAM_INCREMENTED_AM
    | XDMAC_CC_PERID(33);
	
    xdmac_configure_transfer(XDMAC, XDMA_CH_SSC_RX, &xdmac_channel_cfg);
  4002c2:	4c2f      	ldr	r4, [pc, #188]	; (400380 <configure_xdma+0xd4>)
    pmc_enable_periph_clk(ID_XDMAC);
  4002c4:	4798      	blx	r3

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  4002c6:	f04f 6580 	mov.w	r5, #67108864	; 0x4000000
  4002ca:	4b2e      	ldr	r3, [pc, #184]	; (400384 <configure_xdma+0xd8>)
    xdmac_configure_transfer(XDMAC, XDMA_CH_SSC_RX, &xdmac_channel_cfg);
  4002cc:	466a      	mov	r2, sp
    xdmac_channel_cfg.mbr_cfg = XDMAC_CC_TYPE_PER_TRAN
  4002ce:	f8df e0c8 	ldr.w	lr, [pc, #200]	; 400398 <configure_xdma+0xec>
    xdmac_configure_transfer(XDMAC, XDMA_CH_SSC_RX, &xdmac_channel_cfg);
  4002d2:	4620      	mov	r0, r4
  4002d4:	f8c3 5184 	str.w	r5, [r3, #388]	; 0x184
  4002d8:	2100      	movs	r1, #0
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHPR[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  4002da:	f883 633a 	strb.w	r6, [r3, #826]	; 0x33a
 */
static inline void xdmac_channel_set_descriptor_control(Xdmac *xdmac, uint32_t channel_num, uint32_t config)
{
	Assert(xdmac);
	Assert(channel_num < XDMACCHID_NUMBER);
	xdmac->XDMAC_CHID[channel_num].XDMAC_CNDC = config;
  4002de:	270f      	movs	r7, #15
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  4002e0:	605d      	str	r5, [r3, #4]
	xdmac->XDMAC_GIE = ( XDMAC_GIE_IE0 << channel_num) ;
  4002e2:	2501      	movs	r5, #1
  4002e4:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 40039c <configure_xdma+0xf0>
    xdmac_channel_cfg.mbr_cfg = XDMAC_CC_TYPE_PER_TRAN
  4002e8:	f8cd e00c 	str.w	lr, [sp, #12]
    xdmac_configure_transfer(XDMAC, XDMA_CH_SSC_RX, &xdmac_channel_cfg);
  4002ec:	47c0      	blx	r8
    
    /* Initialize linked list descriptor */
    src = (uint16_t *)&inPingBuffer[0];
    linklist_read[0].mbr_ubc = XDMAC_UBC_NVIEW_NDV1
  4002ee:	4b26      	ldr	r3, [pc, #152]	; (400388 <configure_xdma+0xdc>)
    | XDMAC_CC_DIF_AHB_IF1
    | XDMAC_CC_SAM_INCREMENTED_AM
    | XDMAC_CC_DAM_FIXED_AM
    | XDMAC_CC_PERID(32);
	
    xdmac_configure_transfer(XDMAC, XDMA_CH_SSC_TX, &xdmac_channel_cfg);
  4002f0:	466a      	mov	r2, sp
    linklist_read[0].mbr_da = (uint32_t)(src);
  4002f2:	f8df e0ac 	ldr.w	lr, [pc, #172]	; 4003a0 <configure_xdma+0xf4>
    xdmac_configure_transfer(XDMAC, XDMA_CH_SSC_TX, &xdmac_channel_cfg);
  4002f6:	4629      	mov	r1, r5
    linklist_read[0].mbr_nda = (uint32_t)&linklist_read[1];
  4002f8:	f103 0010 	add.w	r0, r3, #16
	xdmac->XDMAC_CHID[channel_num].XDMAC_CNDA = (desc_addr & 0xFFFFFFFC) | ndaif;
  4002fc:	f023 0603 	bic.w	r6, r3, #3
	linklist_read[1].mbr_da = (uint32_t)(src);
  400300:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 4003a4 <configure_xdma+0xf8>
    linklist_read[0].mbr_nda = (uint32_t)&linklist_read[1];
  400304:	6018      	str	r0, [r3, #0]
    xdmac_configure_transfer(XDMAC, XDMA_CH_SSC_TX, &xdmac_channel_cfg);
  400306:	4620      	mov	r0, r4
	xdmac->XDMAC_CHID[channel_num].XDMAC_CNDC = config;
  400308:	66e7      	str	r7, [r4, #108]	; 0x6c
	xdmac->XDMAC_CHID[channel_num].XDMAC_CNDA = (desc_addr & 0xFFFFFFFC) | ndaif;
  40030a:	66a6      	str	r6, [r4, #104]	; 0x68
	xdmac->XDMAC_GIE = ( XDMAC_GIE_IE0 << channel_num) ;
  40030c:	60e5      	str	r5, [r4, #12]
    linklist_read[0].mbr_ubc = XDMAC_UBC_NVIEW_NDV1
  40030e:	4e1f      	ldr	r6, [pc, #124]	; (40038c <configure_xdma+0xe0>)
	xdmac->XDMAC_CHID[channel_num].XDMAC_CIE = mask;
  400310:	6525      	str	r5, [r4, #80]	; 0x50
    linklist_read[0].mbr_da = (uint32_t)(src);
  400312:	f8c3 e00c 	str.w	lr, [r3, #12]
    linklist_read[0].mbr_sa  = (uint32_t)&(SSC->SSC_RHR);
  400316:	f8df e090 	ldr.w	lr, [pc, #144]	; 4003a8 <configure_xdma+0xfc>
	linklist_read[1].mbr_da = (uint32_t)(src);
  40031a:	f8c3 c01c 	str.w	ip, [r3, #28]
    xdmac_channel_cfg.mbr_cfg = XDMAC_CC_TYPE_PER_TRAN
  40031e:	f8df c08c 	ldr.w	ip, [pc, #140]	; 4003ac <configure_xdma+0x100>
    linklist_read[0].mbr_ubc = XDMAC_UBC_NVIEW_NDV1
  400322:	605e      	str	r6, [r3, #4]
	linklist_read[1].mbr_ubc = XDMAC_UBC_NVIEW_NDV1
  400324:	615e      	str	r6, [r3, #20]
    linklist_read[0].mbr_sa  = (uint32_t)&(SSC->SSC_RHR);
  400326:	f8c3 e008 	str.w	lr, [r3, #8]
	linklist_read[1].mbr_sa  = (uint32_t)&(SSC->SSC_RHR);
  40032a:	f8c3 e018 	str.w	lr, [r3, #24]
	linklist_read[1].mbr_nda = (uint32_t)&linklist_read[0];
  40032e:	611b      	str	r3, [r3, #16]
    xdmac_channel_cfg.mbr_cfg = XDMAC_CC_TYPE_PER_TRAN
  400330:	f8cd c00c 	str.w	ip, [sp, #12]
    xdmac_configure_transfer(XDMAC, XDMA_CH_SSC_TX, &xdmac_channel_cfg);
  400334:	47c0      	blx	r8
    
    src = (uint16_t *)&outPingBuffer[0];
    linklist_write[0].mbr_ubc = XDMAC_UBC_NVIEW_NDV1
  400336:	4b16      	ldr	r3, [pc, #88]	; (400390 <configure_xdma+0xe4>)
	xdmac->XDMAC_GIE = ( XDMAC_GIE_IE0 << channel_num) ;
  400338:	2102      	movs	r1, #2
		 | XDMAC_UBC_NDE_FETCH_EN
		 | XDMAC_UBC_NSEN_UPDATED
			| XDMAC_CUBC_UBLEN(IO_BUF_SIZE);
    linklist_write[0].mbr_sa = (uint32_t)(src);
    linklist_write[0].mbr_da = (uint32_t)&(SSC->SSC_THR);
  40033a:	4a16      	ldr	r2, [pc, #88]	; (400394 <configure_xdma+0xe8>)
    linklist_write[0].mbr_sa = (uint32_t)(src);
  40033c:	f8df c070 	ldr.w	ip, [pc, #112]	; 4003b0 <configure_xdma+0x104>
    linklist_write[0].mbr_nda = (uint32_t)&linklist_write[1];
  400340:	f103 0810 	add.w	r8, r3, #16
	xdmac->XDMAC_CHID[channel_num].XDMAC_CNDA = (desc_addr & 0xFFFFFFFC) | ndaif;
  400344:	f023 0003 	bic.w	r0, r3, #3
	src = (uint16_t *)&outPongBuffer[0];
	linklist_write[1].mbr_ubc = XDMAC_UBC_NVIEW_NDV1
	    | XDMAC_UBC_NDE_FETCH_EN
	    | XDMAC_UBC_NSEN_UPDATED
	    | XDMAC_CUBC_UBLEN(IO_BUF_SIZE);
	linklist_write[1].mbr_sa = (uint32_t)(src);
  400348:	f8df e068 	ldr.w	lr, [pc, #104]	; 4003b4 <configure_xdma+0x108>
    linklist_write[0].mbr_ubc = XDMAC_UBC_NVIEW_NDV1
  40034c:	605e      	str	r6, [r3, #4]
	linklist_write[1].mbr_ubc = XDMAC_UBC_NVIEW_NDV1
  40034e:	615e      	str	r6, [r3, #20]
	linklist_write[1].mbr_da = (uint32_t)&(SSC->SSC_THR);
	linklist_write[1].mbr_nda = (uint32_t)&linklist_write[0];
  400350:	611b      	str	r3, [r3, #16]
    linklist_write[0].mbr_nda = (uint32_t)&linklist_write[1];
  400352:	f8c3 8000 	str.w	r8, [r3]
    linklist_write[0].mbr_sa = (uint32_t)(src);
  400356:	f8c3 c008 	str.w	ip, [r3, #8]
	xdmac->XDMAC_CHID[channel_num].XDMAC_CNDC = config;
  40035a:	f8c4 70ac 	str.w	r7, [r4, #172]	; 0xac
	linklist_write[1].mbr_sa = (uint32_t)(src);
  40035e:	f8c3 e018 	str.w	lr, [r3, #24]
	xdmac->XDMAC_CHID[channel_num].XDMAC_CNDA = (desc_addr & 0xFFFFFFFC) | ndaif;
  400362:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
    linklist_write[0].mbr_da = (uint32_t)&(SSC->SSC_THR);
  400366:	60da      	str	r2, [r3, #12]
	xdmac->XDMAC_GIE = ( XDMAC_GIE_IE0 << channel_num) ;
  400368:	60e1      	str	r1, [r4, #12]
	linklist_write[1].mbr_da = (uint32_t)&(SSC->SSC_THR);
  40036a:	61da      	str	r2, [r3, #28]
	xdmac->XDMAC_CHID[channel_num].XDMAC_CIE = mask;
  40036c:	f8c4 5090 	str.w	r5, [r4, #144]	; 0x90
    xdmac_channel_set_descriptor_addr(XDMAC, XDMA_CH_SSC_TX, (uint32_t)(&linklist_write[0]), 0);
    
    xdmac_enable_interrupt(XDMAC, XDMA_CH_SSC_TX);
    xdmac_channel_enable_interrupt(XDMAC, XDMA_CH_SSC_TX, XDMAC_CIE_BIE);
    
}
  400370:	b008      	add	sp, #32
  400372:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400376:	bf00      	nop
  400378:	00408c85 	.word	0x00408c85
  40037c:	004046c9 	.word	0x004046c9
  400380:	40078000 	.word	0x40078000
  400384:	e000e100 	.word	0xe000e100
  400388:	204009f8 	.word	0x204009f8
  40038c:	0b001000 	.word	0x0b001000
  400390:	20400a18 	.word	0x20400a18
  400394:	40004024 	.word	0x40004024
  400398:	21042801 	.word	0x21042801
  40039c:	00403e45 	.word	0x00403e45
  4003a0:	20416d94 	.word	0x20416d94
  4003a4:	2040fd94 	.word	0x2040fd94
  4003a8:	40004020 	.word	0x40004020
  4003ac:	20014811 	.word	0x20014811
  4003b0:	20411d94 	.word	0x20411d94
  4003b4:	20413d94 	.word	0x20413d94

004003b8 <audio_init>:

#include "DMA_Audio.h"
#include "WM8904_Driver.h"

void audio_init(void)
{
  4003b8:	b510      	push	{r4, lr}
	/* Initialize WM8904 TWI interface*/
	if (wm8904_twi_init() != TWIHS_SUCCESS) {
  4003ba:	4b13      	ldr	r3, [pc, #76]	; (400408 <audio_init+0x50>)
  4003bc:	4798      	blx	r3
  4003be:	b118      	cbz	r0, 4003c8 <audio_init+0x10>
		printf("-E-\tWM8904 initialization failed.\r");
  4003c0:	4812      	ldr	r0, [pc, #72]	; (40040c <audio_init+0x54>)
  4003c2:	4b13      	ldr	r3, [pc, #76]	; (400410 <audio_init+0x58>)
  4003c4:	4798      	blx	r3
  4003c6:	e7fe      	b.n	4003c6 <audio_init+0xe>
			/* Capture error */
		}
	}
		
	/* Configure CODEC */
	configure_codec();
  4003c8:	4b12      	ldr	r3, [pc, #72]	; (400414 <audio_init+0x5c>)
  4003ca:	4604      	mov	r4, r0
  4003cc:	4798      	blx	r3
		
	/* Configure SSC */
	configure_ssc();
  4003ce:	4b12      	ldr	r3, [pc, #72]	; (400418 <audio_init+0x60>)
  4003d0:	4798      	blx	r3
		
	/* Configure XDMA */
	configure_xdma();
  4003d2:	4b12      	ldr	r3, [pc, #72]	; (40041c <audio_init+0x64>)
  4003d4:	4798      	blx	r3
		
	/* Enable the DAC master clock */
	pmc_pck_set_prescaler(PMC_PCK_2, PMC_MCKR_PRES_CLK_1);
  4003d6:	4621      	mov	r1, r4
  4003d8:	2002      	movs	r0, #2
  4003da:	4b11      	ldr	r3, [pc, #68]	; (400420 <audio_init+0x68>)
  4003dc:	4798      	blx	r3
	pmc_pck_set_source(PMC_PCK_2, PMC_MCKR_CSS_SLOW_CLK);
  4003de:	4621      	mov	r1, r4
  4003e0:	2002      	movs	r0, #2
  4003e2:	4b10      	ldr	r3, [pc, #64]	; (400424 <audio_init+0x6c>)
  4003e4:	4798      	blx	r3
	pmc_enable_pck(PMC_PCK_2);
  4003e6:	2002      	movs	r0, #2
  4003e8:	4b0f      	ldr	r3, [pc, #60]	; (400428 <audio_init+0x70>)
  4003ea:	4798      	blx	r3
		
	/* Start playing */
	ssc_enable_rx(SSC);
  4003ec:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
  4003f0:	4b0e      	ldr	r3, [pc, #56]	; (40042c <audio_init+0x74>)
  4003f2:	4798      	blx	r3
	xdmac->XDMAC_GE = (XDMAC_GE_EN0 << channel_num);
  4003f4:	4c0e      	ldr	r4, [pc, #56]	; (400430 <audio_init+0x78>)
  4003f6:	2201      	movs	r2, #1
	xdmac_channel_enable(XDMAC, XDMA_CH_SSC_RX);
	// might want to enable in the first xdma interrupt (if you care)
	ssc_enable_tx(SSC);
  4003f8:	4b0e      	ldr	r3, [pc, #56]	; (400434 <audio_init+0x7c>)
  4003fa:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
  4003fe:	61e2      	str	r2, [r4, #28]
  400400:	4798      	blx	r3
  400402:	2302      	movs	r3, #2
  400404:	61e3      	str	r3, [r4, #28]
  400406:	bd10      	pop	{r4, pc}
  400408:	004034a1 	.word	0x004034a1
  40040c:	0040df70 	.word	0x0040df70
  400410:	004084e1 	.word	0x004084e1
  400414:	004004fd 	.word	0x004004fd
  400418:	00400439 	.word	0x00400439
  40041c:	004002ad 	.word	0x004002ad
  400420:	00404711 	.word	0x00404711
  400424:	00404745 	.word	0x00404745
  400428:	00404779 	.word	0x00404779
  40042c:	004039f9 	.word	0x004039f9
  400430:	40078000 	.word	0x40078000
  400434:	00403a09 	.word	0x00403a09

00400438 <configure_ssc>:
#include "WM8904_Driver.h"


/********************************** Public Functions Start **********************************/
void configure_ssc(void)
{
  400438:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	clock_opt_t tx_clk_option, rx_clk_option;
	data_frame_opt_t tx_data_frame_option, rx_data_frame_option;

	/* Initialize clock */
	pmc_enable_periph_clk(ID_SSC);
  40043c:	4b28      	ldr	r3, [pc, #160]	; (4004e0 <configure_ssc+0xa8>)
{
  40043e:	b09c      	sub	sp, #112	; 0x70
	pmc_enable_periph_clk(ID_SSC);
  400440:	2016      	movs	r0, #22
	/* Reset SSC */
	ssc_reset(SSC);

	/* Transmitter clock mode configuration. */
	tx_clk_option.ul_cks = SSC_TCMR_CKS_TK;
	tx_clk_option.ul_cko = SSC_TCMR_CKO_NONE;
  400442:	2400      	movs	r4, #0
	pmc_enable_periph_clk(ID_SSC);
  400444:	4798      	blx	r3
	ssc_reset(SSC);
  400446:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
  40044a:	4b26      	ldr	r3, [pc, #152]	; (4004e4 <configure_ssc+0xac>)
	tx_clk_option.ul_cki = 0;
	tx_clk_option.ul_ckg = SSC_TCMR_CKG_CONTINUOUS;
	tx_clk_option.ul_start_sel = SSC_TCMR_START_TF_EDGE;
	tx_clk_option.ul_sttdly = 1;
	tx_clk_option.ul_period = BITS_BY_SLOT - 1;
  40044c:	250f      	movs	r5, #15
	ssc_reset(SSC);
  40044e:	4798      	blx	r3
	tx_clk_option.ul_sttdly = 1;
  400450:	2601      	movs	r6, #1
	tx_clk_option.ul_start_sel = SSC_TCMR_START_TF_EDGE;
  400452:	f44f 68e0 	mov.w	r8, #1792	; 0x700
	tx_clk_option.ul_cks = SSC_TCMR_CKS_TK;
  400456:	f04f 0e02 	mov.w	lr, #2
	/* Transmitter frame mode configuration. */
	tx_data_frame_option.ul_datlen = BITS_BY_SLOT - 1;
	tx_data_frame_option.ul_msbf = SSC_TFMR_MSBF;
  40045a:	2780      	movs	r7, #128	; 0x80
	tx_data_frame_option.ul_fslen = BITS_BY_SLOT - 1;
	tx_data_frame_option.ul_fslen_ext = 0;
	tx_data_frame_option.ul_fsos = SSC_TFMR_FSOS_NONE;
	tx_data_frame_option.ul_fsedge = SSC_TFMR_FSEDGE_POSITIVE;
	/* Configure the SSC transmitter to I2S mode. */
	ssc_set_transmitter(SSC, &tx_clk_option, &tx_data_frame_option);
  40045c:	aa0e      	add	r2, sp, #56	; 0x38
  40045e:	4669      	mov	r1, sp
  400460:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
  400464:	4b20      	ldr	r3, [pc, #128]	; (4004e8 <configure_ssc+0xb0>)
	tx_clk_option.ul_cks = SSC_TCMR_CKS_TK;
  400466:	f8cd e000 	str.w	lr, [sp]
	tx_clk_option.ul_cko = SSC_TCMR_CKO_NONE;
  40046a:	9401      	str	r4, [sp, #4]
	tx_clk_option.ul_cki = 0;
  40046c:	9402      	str	r4, [sp, #8]
	tx_clk_option.ul_ckg = SSC_TCMR_CKG_CONTINUOUS;
  40046e:	9403      	str	r4, [sp, #12]
	tx_data_frame_option.ul_datnb = 0;
  400470:	9410      	str	r4, [sp, #64]	; 0x40
	tx_data_frame_option.ul_fslen_ext = 0;
  400472:	9412      	str	r4, [sp, #72]	; 0x48
	tx_data_frame_option.ul_fsos = SSC_TFMR_FSOS_NONE;
  400474:	9413      	str	r4, [sp, #76]	; 0x4c
	tx_data_frame_option.ul_fsedge = SSC_TFMR_FSEDGE_POSITIVE;
  400476:	9414      	str	r4, [sp, #80]	; 0x50
	tx_clk_option.ul_start_sel = SSC_TCMR_START_TF_EDGE;
  400478:	f8cd 8018 	str.w	r8, [sp, #24]
	tx_clk_option.ul_sttdly = 1;
  40047c:	9605      	str	r6, [sp, #20]
	tx_clk_option.ul_period = BITS_BY_SLOT - 1;
  40047e:	9504      	str	r5, [sp, #16]
	tx_data_frame_option.ul_datlen = BITS_BY_SLOT - 1;
  400480:	950e      	str	r5, [sp, #56]	; 0x38
	tx_data_frame_option.ul_fslen = BITS_BY_SLOT - 1;
  400482:	9511      	str	r5, [sp, #68]	; 0x44
	tx_data_frame_option.ul_msbf = SSC_TFMR_MSBF;
  400484:	970f      	str	r7, [sp, #60]	; 0x3c
	ssc_set_transmitter(SSC, &tx_clk_option, &tx_data_frame_option);
  400486:	4798      	blx	r3

	/* Receiver clock mode configuration. */
	rx_clk_option.ul_cks = SSC_RCMR_CKS_TK;
	rx_clk_option.ul_cko = SSC_RCMR_CKO_NONE;
	rx_clk_option.ul_cki = SSC_RCMR_CKI;
  400488:	f04f 0c20 	mov.w	ip, #32
	rx_clk_option.ul_ckg = SSC_RCMR_CKG_CONTINUOUS;
	rx_clk_option.ul_start_sel = SSC_RCMR_START_RF_EDGE;
	rx_clk_option.ul_sttdly = 1;	
	rx_clk_option.ul_period = BITS_BY_SLOT;	
  40048c:	f04f 0e10 	mov.w	lr, #16
	rx_data_frame_option.ul_fslen = BITS_BY_SLOT - 1;	
	rx_data_frame_option.ul_fslen_ext = 0;
	rx_data_frame_option.ul_fsos = SSC_TFMR_FSOS_NONE;
	rx_data_frame_option.ul_fsedge = SSC_TFMR_FSEDGE_POSITIVE;
	/* Configure the SSC transmitter to I2S mode. */
	ssc_set_receiver(SSC, &rx_clk_option, &rx_data_frame_option);
  400490:	aa15      	add	r2, sp, #84	; 0x54
  400492:	a907      	add	r1, sp, #28
  400494:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
  400498:	4b14      	ldr	r3, [pc, #80]	; (4004ec <configure_ssc+0xb4>)
	rx_clk_option.ul_cki = SSC_RCMR_CKI;
  40049a:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
	rx_clk_option.ul_period = BITS_BY_SLOT;	
  40049e:	f8cd e02c 	str.w	lr, [sp, #44]	; 0x2c
	rx_clk_option.ul_start_sel = SSC_RCMR_START_RF_EDGE;
  4004a2:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
	rx_clk_option.ul_cks = SSC_RCMR_CKS_TK;
  4004a6:	9607      	str	r6, [sp, #28]
	rx_clk_option.ul_cko = SSC_RCMR_CKO_NONE;
  4004a8:	9408      	str	r4, [sp, #32]
	rx_clk_option.ul_ckg = SSC_RCMR_CKG_CONTINUOUS;
  4004aa:	940a      	str	r4, [sp, #40]	; 0x28
	rx_clk_option.ul_sttdly = 1;	
  4004ac:	960c      	str	r6, [sp, #48]	; 0x30
	rx_data_frame_option.ul_datlen = BITS_BY_SLOT - 1;
  4004ae:	9515      	str	r5, [sp, #84]	; 0x54
	rx_data_frame_option.ul_msbf = SSC_RFMR_MSBF;
  4004b0:	9716      	str	r7, [sp, #88]	; 0x58
	rx_data_frame_option.ul_datnb = 0;
  4004b2:	9417      	str	r4, [sp, #92]	; 0x5c
	rx_data_frame_option.ul_fslen = BITS_BY_SLOT - 1;	
  4004b4:	9518      	str	r5, [sp, #96]	; 0x60
	rx_data_frame_option.ul_fslen_ext = 0;
  4004b6:	9419      	str	r4, [sp, #100]	; 0x64
	rx_data_frame_option.ul_fsos = SSC_TFMR_FSOS_NONE;
  4004b8:	941a      	str	r4, [sp, #104]	; 0x68
	rx_data_frame_option.ul_fsedge = SSC_TFMR_FSEDGE_POSITIVE;
  4004ba:	941b      	str	r4, [sp, #108]	; 0x6c
	ssc_set_receiver(SSC, &rx_clk_option, &rx_data_frame_option);
  4004bc:	4798      	blx	r3

	/* Disable transmitter first */
	ssc_disable_tx(SSC);
  4004be:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
  4004c2:	4b0b      	ldr	r3, [pc, #44]	; (4004f0 <configure_ssc+0xb8>)
  4004c4:	4798      	blx	r3
	ssc_disable_rx(SSC);
  4004c6:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
  4004ca:	4b0a      	ldr	r3, [pc, #40]	; (4004f4 <configure_ssc+0xbc>)
  4004cc:	4798      	blx	r3

	/* Disable All Interrupt */
	ssc_disable_interrupt(SSC, 0xFFFFFFFF);
  4004ce:	f04f 31ff 	mov.w	r1, #4294967295
  4004d2:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
  4004d6:	4b08      	ldr	r3, [pc, #32]	; (4004f8 <configure_ssc+0xc0>)
  4004d8:	4798      	blx	r3
}
  4004da:	b01c      	add	sp, #112	; 0x70
  4004dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4004e0:	004046c9 	.word	0x004046c9
  4004e4:	004039e5 	.word	0x004039e5
  4004e8:	00403a8d 	.word	0x00403a8d
  4004ec:	00403a19 	.word	0x00403a19
  4004f0:	00403a11 	.word	0x00403a11
  4004f4:	00403a01 	.word	0x00403a01
  4004f8:	00403b01 	.word	0x00403b01

004004fc <configure_codec>:


void configure_codec(void)
{
  4004fc:	b570      	push	{r4, r5, r6, lr}
	uint16_t data = 0;
	/* check that WM8904 is present */
	wm8904_write_register(WM8904_SW_RESET_AND_ID, 0xFFFF);
  4004fe:	f64f 71ff 	movw	r1, #65535	; 0xffff
  400502:	2000      	movs	r0, #0
  400504:	4c40      	ldr	r4, [pc, #256]	; (400608 <configure_codec+0x10c>)
  400506:	47a0      	blx	r4
	data = wm8904_read_register(WM8904_SW_RESET_AND_ID);
  400508:	4b40      	ldr	r3, [pc, #256]	; (40060c <configure_codec+0x110>)
  40050a:	2000      	movs	r0, #0
  40050c:	4798      	blx	r3
	if(data != 0x8904) {
  40050e:	f648 1304 	movw	r3, #35076	; 0x8904
  400512:	4298      	cmp	r0, r3
  400514:	d003      	beq.n	40051e <configure_codec+0x22>
		printf("WM8904 not found!\n\r");
  400516:	483e      	ldr	r0, [pc, #248]	; (400610 <configure_codec+0x114>)
  400518:	4b3e      	ldr	r3, [pc, #248]	; (400614 <configure_codec+0x118>)
  40051a:	4798      	blx	r3
  40051c:	e7fe      	b.n	40051c <configure_codec+0x20>
		while(1);
	}

	wm8904_write_register(WM8904_BIAS_CONTROL_0, WM8904_ISEL_HP_BIAS);	
  40051e:	2108      	movs	r1, #8
  400520:	2004      	movs	r0, #4
  400522:	47a0      	blx	r4
	wm8904_write_register(WM8904_VMID_CONTROL_0, WM8904_VMID_BUF_ENA |	
  400524:	2147      	movs	r1, #71	; 0x47
  400526:	2005      	movs	r0, #5
	WM8904_VMID_RES_FAST | WM8904_VMID_ENA);
	delay_ms(5);
  400528:	4d3b      	ldr	r5, [pc, #236]	; (400618 <configure_codec+0x11c>)
	wm8904_write_register(WM8904_VMID_CONTROL_0, WM8904_VMID_BUF_ENA |	
  40052a:	47a0      	blx	r4
	delay_ms(5);
  40052c:	483b      	ldr	r0, [pc, #236]	; (40061c <configure_codec+0x120>)
  40052e:	47a8      	blx	r5
	wm8904_write_register(WM8904_VMID_CONTROL_0, WM8904_VMID_BUF_ENA |
  400530:	2143      	movs	r1, #67	; 0x43
  400532:	2005      	movs	r0, #5
  400534:	47a0      	blx	r4
	WM8904_VMID_RES_NORMAL | WM8904_VMID_ENA);
	wm8904_write_register(WM8904_BIAS_CONTROL_0, WM8904_ISEL_HP_BIAS | WM8904_BIAS_ENA);
  400536:	2109      	movs	r1, #9
  400538:	2004      	movs	r0, #4
  40053a:	47a0      	blx	r4
	wm8904_write_register(WM8904_POWER_MANAGEMENT_0, WM8904_INL_ENA | WM8904_INR_ENA);
  40053c:	2103      	movs	r1, #3
  40053e:	200c      	movs	r0, #12
  400540:	47a0      	blx	r4
	wm8904_write_register(WM8904_POWER_MANAGEMENT_2, WM8904_HPL_PGA_ENA | WM8904_HPR_PGA_ENA);
  400542:	2103      	movs	r1, #3
  400544:	200e      	movs	r0, #14
  400546:	47a0      	blx	r4
	wm8904_write_register(WM8904_DAC_DIGITAL_1, WM8904_DEEMPH(0));
  400548:	2100      	movs	r1, #0
  40054a:	2021      	movs	r0, #33	; 0x21
  40054c:	47a0      	blx	r4
	wm8904_write_register(WM8904_ANALOGUE_OUT12_ZC, 0x0000);
  40054e:	2100      	movs	r1, #0
  400550:	203d      	movs	r0, #61	; 0x3d
  400552:	47a0      	blx	r4
	wm8904_write_register(WM8904_CHARGE_PUMP_0, WM8904_CP_ENA);
  400554:	2101      	movs	r1, #1
  400556:	2062      	movs	r0, #98	; 0x62
  400558:	47a0      	blx	r4
	wm8904_write_register(WM8904_CLASS_W_0, WM8904_CP_DYN_PWR);
  40055a:	2101      	movs	r1, #1
  40055c:	2068      	movs	r0, #104	; 0x68
  40055e:	47a0      	blx	r4
	wm8904_write_register(WM8904_FLL_CONTROL_1, 0x0000);
  400560:	2100      	movs	r1, #0
  400562:	2074      	movs	r0, #116	; 0x74
  400564:	47a0      	blx	r4
	wm8904_write_register(WM8904_FLL_CONTROL_2, WM8904_FLL_OUTDIV(7)| WM8904_FLL_FRATIO(4));
  400566:	f240 7104 	movw	r1, #1796	; 0x704
  40056a:	2075      	movs	r0, #117	; 0x75
  40056c:	47a0      	blx	r4
	wm8904_write_register(WM8904_FLL_CONTROL_3, WM8904_FLL_K(0x8000));
  40056e:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  400572:	2076      	movs	r0, #118	; 0x76
  400574:	47a0      	blx	r4
	wm8904_write_register(WM8904_FLL_CONTROL_4, WM8904_FLL_N(0xBB));
  400576:	f44f 51bb 	mov.w	r1, #5984	; 0x1760
  40057a:	2077      	movs	r0, #119	; 0x77
  40057c:	47a0      	blx	r4
	wm8904_write_register(WM8904_FLL_CONTROL_1, WM8904_FLL_FRACN_ENA | WM8904_FLL_ENA);
  40057e:	2105      	movs	r1, #5
  400580:	2074      	movs	r0, #116	; 0x74
  400582:	47a0      	blx	r4
	delay_ms(5);
  400584:	4825      	ldr	r0, [pc, #148]	; (40061c <configure_codec+0x120>)
  400586:	47a8      	blx	r5
	wm8904_write_register(WM8904_CLOCK_RATES_1, WM8904_CLK_SYS_RATE(3) | WM8904_SAMPLE_RATE(SAMPLE_RATE));
  400588:	f640 4105 	movw	r1, #3077	; 0xc05
  40058c:	2015      	movs	r0, #21
  40058e:	47a0      	blx	r4
	wm8904_write_register(WM8904_CLOCK_RATES_0, 0x0000);
  400590:	2100      	movs	r1, #0
  400592:	2014      	movs	r0, #20
  400594:	47a0      	blx	r4
	wm8904_write_register(WM8904_CLOCK_RATES_2,
  400596:	f244 0106 	movw	r1, #16390	; 0x4006
  40059a:	2016      	movs	r0, #22
  40059c:	47a0      	blx	r4
	WM8904_SYSCLK_SRC | WM8904_CLK_SYS_ENA | WM8904_CLK_DSP_ENA);
	wm8904_write_register(WM8904_AUDIO_INTERFACE_1, WM8904_BCLK_DIR | WM8904_AIF_FMT_I2S); 
  40059e:	2142      	movs	r1, #66	; 0x42
  4005a0:	2019      	movs	r0, #25
  4005a2:	47a0      	blx	r4
	wm8904_write_register(WM8904_AUDIO_INTERFACE_2, WM8904_BCLK_DIV(8));
  4005a4:	2108      	movs	r1, #8
  4005a6:	201a      	movs	r0, #26
  4005a8:	47a0      	blx	r4
	wm8904_write_register(WM8904_AUDIO_INTERFACE_3, WM8904_LRCLK_DIR | WM8904_LRCLK_RATE(0x20));
  4005aa:	f44f 6102 	mov.w	r1, #2080	; 0x820
  4005ae:	201b      	movs	r0, #27
  4005b0:	47a0      	blx	r4
	wm8904_write_register(WM8904_POWER_MANAGEMENT_6,
  4005b2:	210f      	movs	r1, #15
  4005b4:	2012      	movs	r0, #18
  4005b6:	47a0      	blx	r4
	WM8904_DACL_ENA | WM8904_DACR_ENA |
	WM8904_ADCL_ENA | WM8904_ADCR_ENA);
	delay_ms(5);
  4005b8:	4818      	ldr	r0, [pc, #96]	; (40061c <configure_codec+0x120>)
  4005ba:	47a8      	blx	r5
	wm8904_write_register(WM8904_ANALOGUE_LEFT_INPUT_0, WM8904_LIN_VOL(0x10));
  4005bc:	2110      	movs	r1, #16
  4005be:	202c      	movs	r0, #44	; 0x2c
  4005c0:	47a0      	blx	r4
	wm8904_write_register(WM8904_ANALOGUE_RIGHT_INPUT_0, WM8904_RIN_VOL(0x10));
  4005c2:	2110      	movs	r1, #16
  4005c4:	202d      	movs	r0, #45	; 0x2d
  4005c6:	47a0      	blx	r4
	wm8904_write_register(WM8904_ANALOGUE_HP_0,
  4005c8:	2111      	movs	r1, #17
  4005ca:	205a      	movs	r0, #90	; 0x5a
  4005cc:	47a0      	blx	r4
	WM8904_HPL_ENA | WM8904_HPR_ENA);
	wm8904_write_register(WM8904_ANALOGUE_HP_0,
  4005ce:	2133      	movs	r1, #51	; 0x33
  4005d0:	205a      	movs	r0, #90	; 0x5a
  4005d2:	47a0      	blx	r4
	WM8904_HPL_ENA_DLY | WM8904_HPL_ENA |
	WM8904_HPR_ENA_DLY | WM8904_HPR_ENA);
	wm8904_write_register(WM8904_DC_SERVO_0,
  4005d4:	210f      	movs	r1, #15
  4005d6:	2043      	movs	r0, #67	; 0x43
  4005d8:	47a0      	blx	r4
	WM8904_DCS_ENA_CHAN_3 | WM8904_DCS_ENA_CHAN_2 |
	WM8904_DCS_ENA_CHAN_1 | WM8904_DCS_ENA_CHAN_0);
	wm8904_write_register(WM8904_DC_SERVO_1,
  4005da:	21f0      	movs	r1, #240	; 0xf0
  4005dc:	2044      	movs	r0, #68	; 0x44
  4005de:	47a0      	blx	r4
	WM8904_DCS_TRIG_STARTUP_3 | WM8904_DCS_TRIG_STARTUP_2 |
	WM8904_DCS_TRIG_STARTUP_1 | WM8904_DCS_TRIG_STARTUP_0);
	delay_ms(100);
  4005e0:	480f      	ldr	r0, [pc, #60]	; (400620 <configure_codec+0x124>)
  4005e2:	47a8      	blx	r5
	wm8904_write_register(WM8904_ANALOGUE_HP_0,
  4005e4:	2177      	movs	r1, #119	; 0x77
  4005e6:	205a      	movs	r0, #90	; 0x5a
  4005e8:	47a0      	blx	r4
	WM8904_HPL_ENA_OUTP | WM8904_HPL_ENA_DLY | WM8904_HPL_ENA |
	WM8904_HPR_ENA_OUTP | WM8904_HPR_ENA_DLY | WM8904_HPR_ENA);
	wm8904_write_register(WM8904_ANALOGUE_HP_0,
  4005ea:	21ff      	movs	r1, #255	; 0xff
  4005ec:	205a      	movs	r0, #90	; 0x5a
  4005ee:	47a0      	blx	r4
	WM8904_HPL_RMV_SHORT | WM8904_HPL_ENA_OUTP | WM8904_HPL_ENA_DLY | WM8904_HPL_ENA |
	WM8904_HPR_RMV_SHORT | WM8904_HPR_ENA_OUTP | WM8904_HPR_ENA_DLY | WM8904_HPR_ENA);
	wm8904_write_register(WM8904_ANALOGUE_OUT1_LEFT, WM8904_HPOUT_VU | WM8904_HPOUTL_VOL(0x39));
  4005f0:	21b9      	movs	r1, #185	; 0xb9
  4005f2:	2039      	movs	r0, #57	; 0x39
  4005f4:	47a0      	blx	r4
	wm8904_write_register(WM8904_ANALOGUE_OUT1_RIGHT, WM8904_HPOUT_VU | WM8904_HPOUTR_VOL(0x39));
  4005f6:	203a      	movs	r0, #58	; 0x3a
  4005f8:	21b9      	movs	r1, #185	; 0xb9
  4005fa:	47a0      	blx	r4
	delay_ms(100);
  4005fc:	462b      	mov	r3, r5
  4005fe:	4808      	ldr	r0, [pc, #32]	; (400620 <configure_codec+0x124>)
}
  400600:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	delay_ms(100);
  400604:	4718      	bx	r3
  400606:	bf00      	nop
  400608:	00403429 	.word	0x00403429
  40060c:	00403465 	.word	0x00403465
  400610:	0040df94 	.word	0x0040df94
  400614:	004084e1 	.word	0x004084e1
  400618:	20400001 	.word	0x20400001
  40061c:	0003dbc2 	.word	0x0003dbc2
  400620:	004d2b25 	.word	0x004d2b25

00400624 <gfx_generic_draw_filled_rect.part.0>:
{
	return gfx_height;
}

/* This function is documented in gfx.h */
void gfx_generic_draw_filled_rect(gfx_coord_t x, gfx_coord_t y,
  400624:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	if ((width == 0) || (height == 0)) {
		return;
	}

	/* Invert if width or height is negative. */
	if (width < 0) {
  400628:	1e15      	subs	r5, r2, #0
void gfx_generic_draw_filled_rect(gfx_coord_t x, gfx_coord_t y,
  40062a:	461c      	mov	r4, r3
  40062c:	f8bd 8020 	ldrh.w	r8, [sp, #32]
	if (width < 0) {
  400630:	db49      	blt.n	4006c6 <gfx_generic_draw_filled_rect.part.0+0xa2>
		width = -width;
		x -= width - 1;
	}

	if (height < 0) {
  400632:	2c00      	cmp	r4, #0
  400634:	db40      	blt.n	4006b8 <gfx_generic_draw_filled_rect.part.0+0x94>
		y -= height - 1;
	}

#ifdef CONF_GFX_USE_CLIPPING
	/* Nothing to do if entire rectangle is outside clipping region. */
	if ((x > gfx_max_x) || (y > gfx_max_y) ||
  400636:	4b2e      	ldr	r3, [pc, #184]	; (4006f0 <gfx_generic_draw_filled_rect.part.0+0xcc>)
  400638:	f9b3 6000 	ldrsh.w	r6, [r3]
  40063c:	4286      	cmp	r6, r0
  40063e:	db39      	blt.n	4006b4 <gfx_generic_draw_filled_rect.part.0+0x90>
  400640:	4b2c      	ldr	r3, [pc, #176]	; (4006f4 <gfx_generic_draw_filled_rect.part.0+0xd0>)
  400642:	f9b3 7000 	ldrsh.w	r7, [r3]
  400646:	428f      	cmp	r7, r1
  400648:	db34      	blt.n	4006b4 <gfx_generic_draw_filled_rect.part.0+0x90>
			((x + width) <= gfx_min_x) ||
  40064a:	4b2b      	ldr	r3, [pc, #172]	; (4006f8 <gfx_generic_draw_filled_rect.part.0+0xd4>)
  40064c:	1942      	adds	r2, r0, r5
  40064e:	f9b3 3000 	ldrsh.w	r3, [r3]
	if ((x > gfx_max_x) || (y > gfx_max_y) ||
  400652:	429a      	cmp	r2, r3
  400654:	dd2e      	ble.n	4006b4 <gfx_generic_draw_filled_rect.part.0+0x90>
			((y + height) <= gfx_min_y)) {
  400656:	f8df e0ac 	ldr.w	lr, [pc, #172]	; 400704 <gfx_generic_draw_filled_rect.part.0+0xe0>
  40065a:	eb01 0a04 	add.w	sl, r1, r4
  40065e:	f9be 9000 	ldrsh.w	r9, [lr]
			((x + width) <= gfx_min_x) ||
  400662:	45ca      	cmp	sl, r9
  400664:	dd26      	ble.n	4006b4 <gfx_generic_draw_filled_rect.part.0+0x90>
		return;
	}

	/* Clip if outside left X limit. */
	if (x < gfx_min_x) {
  400666:	4298      	cmp	r0, r3
  400668:	db3b      	blt.n	4006e2 <gfx_generic_draw_filled_rect.part.0+0xbe>
  40066a:	fa1f fe80 	uxth.w	lr, r0
		width -= gfx_min_x - x;
		x = gfx_min_x;
	}

	/* Clip if outside top Y limit. */
	if (y < gfx_min_y) {
  40066e:	4549      	cmp	r1, r9
  400670:	db30      	blt.n	4006d4 <gfx_generic_draw_filled_rect.part.0+0xb0>
  400672:	fa1f fc81 	uxth.w	ip, r1
		y = gfx_min_y;
	}
#endif

	/*  Compute bottom right point. */
	x2 = x + width - 1;
  400676:	f10e 32ff 	add.w	r2, lr, #4294967295
	y2 = y + height - 1;
  40067a:	f10c 33ff 	add.w	r3, ip, #4294967295
	x2 = x + width - 1;
  40067e:	442a      	add	r2, r5
	y2 = y + height - 1;
  400680:	4423      	add	r3, r4
	x2 = x + width - 1;
  400682:	b212      	sxth	r2, r2
	y2 = y + height - 1;
  400684:	b21b      	sxth	r3, r3

#ifdef CONF_GFX_USE_CLIPPING
	/* Clip if outside right X limit. */
	if (x2 > gfx_max_x) {
  400686:	4296      	cmp	r6, r2
  400688:	da04      	bge.n	400694 <gfx_generic_draw_filled_rect.part.0+0x70>
		x2 = gfx_max_x;
		width = x2 - x + 1;
  40068a:	1c75      	adds	r5, r6, #1
  40068c:	4632      	mov	r2, r6
  40068e:	eba5 050e 	sub.w	r5, r5, lr
  400692:	b22d      	sxth	r5, r5
	}

	/* Clip if outside bottom Y limit. */
	if (y2 > gfx_max_y) {
  400694:	429f      	cmp	r7, r3
  400696:	da04      	bge.n	4006a2 <gfx_generic_draw_filled_rect.part.0+0x7e>
		y2 = gfx_max_y;
		height = y2 - y + 1;
  400698:	1c7c      	adds	r4, r7, #1
  40069a:	463b      	mov	r3, r7
  40069c:	eba4 040c 	sub.w	r4, r4, ip
  4006a0:	b224      	sxth	r4, r4
	}
#endif

	/* Set up draw area and duplicate pixel color until area is full. */
	gfx_set_limits(x, y, x2, y2);
  4006a2:	4e16      	ldr	r6, [pc, #88]	; (4006fc <gfx_generic_draw_filled_rect.part.0+0xd8>)
  4006a4:	47b0      	blx	r6
	gfx_duplicate_pixel(color, (uint32_t)width * height);
  4006a6:	fb05 f104 	mul.w	r1, r5, r4
  4006aa:	4640      	mov	r0, r8
  4006ac:	4b14      	ldr	r3, [pc, #80]	; (400700 <gfx_generic_draw_filled_rect.part.0+0xdc>)
}
  4006ae:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	gfx_duplicate_pixel(color, (uint32_t)width * height);
  4006b2:	4718      	bx	r3
  4006b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		height = -height;
  4006b8:	b2a3      	uxth	r3, r4
		y -= height - 1;
  4006ba:	3101      	adds	r1, #1
		height = -height;
  4006bc:	425c      	negs	r4, r3
		y -= height - 1;
  4006be:	4419      	add	r1, r3
		height = -height;
  4006c0:	b224      	sxth	r4, r4
		y -= height - 1;
  4006c2:	b209      	sxth	r1, r1
  4006c4:	e7b7      	b.n	400636 <gfx_generic_draw_filled_rect.part.0+0x12>
		width = -width;
  4006c6:	b2ab      	uxth	r3, r5
		x -= width - 1;
  4006c8:	3001      	adds	r0, #1
		width = -width;
  4006ca:	425d      	negs	r5, r3
		x -= width - 1;
  4006cc:	4418      	add	r0, r3
		width = -width;
  4006ce:	b22d      	sxth	r5, r5
		x -= width - 1;
  4006d0:	b200      	sxth	r0, r0
  4006d2:	e7ae      	b.n	400632 <gfx_generic_draw_filled_rect.part.0+0xe>
		height -= gfx_min_y - y;
  4006d4:	fa1f fc89 	uxth.w	ip, r9
  4006d8:	4649      	mov	r1, r9
  4006da:	ebaa 040c 	sub.w	r4, sl, ip
  4006de:	b224      	sxth	r4, r4
  4006e0:	e7c9      	b.n	400676 <gfx_generic_draw_filled_rect.part.0+0x52>
		width -= gfx_min_x - x;
  4006e2:	fa1f fe83 	uxth.w	lr, r3
  4006e6:	4618      	mov	r0, r3
  4006e8:	eba2 050e 	sub.w	r5, r2, lr
  4006ec:	b22d      	sxth	r5, r5
  4006ee:	e7be      	b.n	40066e <gfx_generic_draw_filled_rect.part.0+0x4a>
  4006f0:	20418d98 	.word	0x20418d98
  4006f4:	20418d9c 	.word	0x20418d9c
  4006f8:	20418d96 	.word	0x20418d96
  4006fc:	004038c9 	.word	0x004038c9
  400700:	0040394d 	.word	0x0040394d
  400704:	20418d9a 	.word	0x20418d9a

00400708 <gfx_set_clipping>:
{
  400708:	b4f0      	push	{r4, r5, r6, r7}
	if (max_x >= gfx_width) {
  40070a:	4c0e      	ldr	r4, [pc, #56]	; (400744 <gfx_set_clipping+0x3c>)
  40070c:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
  400710:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
  400714:	f9b4 4000 	ldrsh.w	r4, [r4]
  400718:	4294      	cmp	r4, r2
  40071a:	dc01      	bgt.n	400720 <gfx_set_clipping+0x18>
		max_x = gfx_width - 1;
  40071c:	1e62      	subs	r2, r4, #1
  40071e:	b212      	sxth	r2, r2
	if (max_y >= gfx_height) {
  400720:	4c09      	ldr	r4, [pc, #36]	; (400748 <gfx_set_clipping+0x40>)
  400722:	f9b4 4000 	ldrsh.w	r4, [r4]
  400726:	429c      	cmp	r4, r3
  400728:	dc01      	bgt.n	40072e <gfx_set_clipping+0x26>
		max_y = gfx_height - 1;
  40072a:	3c01      	subs	r4, #1
  40072c:	b223      	sxth	r3, r4
	gfx_min_x = min_x;
  40072e:	4f07      	ldr	r7, [pc, #28]	; (40074c <gfx_set_clipping+0x44>)
	gfx_min_y = min_y;
  400730:	4e07      	ldr	r6, [pc, #28]	; (400750 <gfx_set_clipping+0x48>)
	gfx_max_x = max_x;
  400732:	4d08      	ldr	r5, [pc, #32]	; (400754 <gfx_set_clipping+0x4c>)
	gfx_max_y = max_y;
  400734:	4c08      	ldr	r4, [pc, #32]	; (400758 <gfx_set_clipping+0x50>)
	gfx_min_x = min_x;
  400736:	8038      	strh	r0, [r7, #0]
	gfx_min_y = min_y;
  400738:	8031      	strh	r1, [r6, #0]
	gfx_max_x = max_x;
  40073a:	802a      	strh	r2, [r5, #0]
	gfx_max_y = max_y;
  40073c:	8023      	strh	r3, [r4, #0]
}
  40073e:	bcf0      	pop	{r4, r5, r6, r7}
  400740:	4770      	bx	lr
  400742:	bf00      	nop
  400744:	20418d94 	.word	0x20418d94
  400748:	20418d9e 	.word	0x20418d9e
  40074c:	20418d96 	.word	0x20418d96
  400750:	20418d9a 	.word	0x20418d9a
  400754:	20418d98 	.word	0x20418d98
  400758:	20418d9c 	.word	0x20418d9c

0040075c <gfx_get_width>:
	return gfx_width;
  40075c:	4b01      	ldr	r3, [pc, #4]	; (400764 <gfx_get_width+0x8>)
}
  40075e:	f9b3 0000 	ldrsh.w	r0, [r3]
  400762:	4770      	bx	lr
  400764:	20418d94 	.word	0x20418d94

00400768 <gfx_get_height>:
	return gfx_height;
  400768:	4b01      	ldr	r3, [pc, #4]	; (400770 <gfx_get_height+0x8>)
}
  40076a:	f9b3 0000 	ldrsh.w	r0, [r3]
  40076e:	4770      	bx	lr
  400770:	20418d9e 	.word	0x20418d9e

00400774 <gfx_generic_draw_filled_rect>:
{
  400774:	b430      	push	{r4, r5}
  400776:	f8bd 5008 	ldrh.w	r5, [sp, #8]
	if ((width == 0) || (height == 0)) {
  40077a:	b12a      	cbz	r2, 400788 <gfx_generic_draw_filled_rect+0x14>
  40077c:	b123      	cbz	r3, 400788 <gfx_generic_draw_filled_rect+0x14>
  40077e:	4c03      	ldr	r4, [pc, #12]	; (40078c <gfx_generic_draw_filled_rect+0x18>)
  400780:	9502      	str	r5, [sp, #8]
  400782:	46a4      	mov	ip, r4
}
  400784:	bc30      	pop	{r4, r5}
  400786:	4760      	bx	ip
  400788:	bc30      	pop	{r4, r5}
  40078a:	4770      	bx	lr
  40078c:	00400625 	.word	0x00400625

00400790 <gfx_ili9488_set_orientation>:
gfx_coord_t gfx_height, gfx_width;
gfx_coord_t gfx_min_x, gfx_min_y;
gfx_coord_t gfx_max_x, gfx_max_y;

void gfx_ili9488_set_orientation(uint8_t flags)
{
  400790:	b570      	push	{r4, r5, r6, lr}
  400792:	4604      	mov	r4, r0
	ili9488_set_orientation(flags);
  400794:	4b11      	ldr	r3, [pc, #68]	; (4007dc <gfx_ili9488_set_orientation+0x4c>)
  400796:	4798      	blx	r3

	/* Switch width and height if XY is switched. */
	if ((flags & GFX_SWITCH_XY) != 0x00) {
  400798:	0763      	lsls	r3, r4, #29
  40079a:	d412      	bmi.n	4007c2 <gfx_ili9488_set_orientation+0x32>
		gfx_width = ILI9488_SWITCH_XY_WIDTH;
		gfx_height = ILI9488_SWITCH_XY_HEIGHT;
	} else {
		gfx_width = ILI9488_SWITCH_XY_HEIGHT;
  40079c:	4c10      	ldr	r4, [pc, #64]	; (4007e0 <gfx_ili9488_set_orientation+0x50>)
  40079e:	f44f 75f0 	mov.w	r5, #480	; 0x1e0
		gfx_height = ILI9488_SWITCH_XY_WIDTH;
  4007a2:	4910      	ldr	r1, [pc, #64]	; (4007e4 <gfx_ili9488_set_orientation+0x54>)
  4007a4:	f44f 70a0 	mov.w	r0, #320	; 0x140
  4007a8:	f240 133f 	movw	r3, #319	; 0x13f
  4007ac:	f240 12df 	movw	r2, #479	; 0x1df
		gfx_width = ILI9488_SWITCH_XY_HEIGHT;
  4007b0:	8025      	strh	r5, [r4, #0]
		gfx_height = ILI9488_SWITCH_XY_WIDTH;
  4007b2:	8008      	strh	r0, [r1, #0]
		//gfx_height = ILI9488_SWITCH_XY_HEIGHT;
	}

#ifdef CONF_GFX_USE_CLIPPING
	/* Reset clipping region. */
	gfx_set_clipping(0, 0, gfx_width - 1, gfx_height - 1);
  4007b4:	4c0c      	ldr	r4, [pc, #48]	; (4007e8 <gfx_ili9488_set_orientation+0x58>)
  4007b6:	2100      	movs	r1, #0
  4007b8:	46a4      	mov	ip, r4
  4007ba:	4608      	mov	r0, r1
#endif
}
  4007bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	gfx_set_clipping(0, 0, gfx_width - 1, gfx_height - 1);
  4007c0:	4760      	bx	ip
		gfx_width = ILI9488_SWITCH_XY_WIDTH;
  4007c2:	4b07      	ldr	r3, [pc, #28]	; (4007e0 <gfx_ili9488_set_orientation+0x50>)
  4007c4:	f44f 70a0 	mov.w	r0, #320	; 0x140
		gfx_height = ILI9488_SWITCH_XY_HEIGHT;
  4007c8:	4a06      	ldr	r2, [pc, #24]	; (4007e4 <gfx_ili9488_set_orientation+0x54>)
  4007ca:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
		gfx_width = ILI9488_SWITCH_XY_WIDTH;
  4007ce:	8018      	strh	r0, [r3, #0]
  4007d0:	f240 13df 	movw	r3, #479	; 0x1df
		gfx_height = ILI9488_SWITCH_XY_HEIGHT;
  4007d4:	8011      	strh	r1, [r2, #0]
  4007d6:	f240 123f 	movw	r2, #319	; 0x13f
  4007da:	e7eb      	b.n	4007b4 <gfx_ili9488_set_orientation+0x24>
  4007dc:	004038f1 	.word	0x004038f1
  4007e0:	20418d94 	.word	0x20418d94
  4007e4:	20418d9e 	.word	0x20418d9e
  4007e8:	00400709 	.word	0x00400709

004007ec <gfx_ili9488_init>:
	pio_set(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
	LCD_MULTI_WD(us_data, size);
}

void gfx_ili9488_init(void)
{
  4007ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4007f0:	b086      	sub	sp, #24
	gfx_height = ILI9488_LCD_HEIGHT;

	/* Initialize display parameter */
	g_ili9488_display_opt.ul_width= ILI9488_LCD_WIDTH;
	g_ili9488_display_opt.ul_height = ILI9488_LCD_HEIGHT;
	g_ili9488_display_opt.foreground_color= COLOR_WHITE;
  4007f2:	f06f 4e7f 	mvn.w	lr, #4278190080	; 0xff000000
	gfx_width = ILI9488_LCD_WIDTH;
  4007f6:	f44f 72a0 	mov.w	r2, #320	; 0x140
	g_ili9488_display_opt.background_color = COLOR_BLACK;
  4007fa:	2400      	movs	r4, #0
	gfx_width = ILI9488_LCD_WIDTH;
  4007fc:	4d1f      	ldr	r5, [pc, #124]	; (40087c <gfx_ili9488_init+0x90>)
	gfx_height = ILI9488_LCD_HEIGHT;
  4007fe:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
  400802:	4e1f      	ldr	r6, [pc, #124]	; (400880 <gfx_ili9488_init+0x94>)

	ili9488_init(&g_ili9488_display_opt);
  400804:	a802      	add	r0, sp, #8
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  400806:	f8df 809c 	ldr.w	r8, [pc, #156]	; 4008a4 <gfx_ili9488_init+0xb8>

/* Define EBI access for ILI9488 16-bit System Interface.*/
#ifdef ILI9488_EBIMODE
	static inline void LCD_IR(uint8_t lcd_index)
	{
		*((volatile uint16_t *)(BOARD_ILI9488_ADDR)) = lcd_index; /* ILI9488 index register address */
  40080a:	f04f 47c6 	mov.w	r7, #1660944384	; 0x63000000
	ili9488_init(&g_ili9488_display_opt);
  40080e:	491d      	ldr	r1, [pc, #116]	; (400884 <gfx_ili9488_init+0x98>)
	g_ili9488_display_opt.foreground_color= COLOR_WHITE;
  400810:	f8cd e010 	str.w	lr, [sp, #16]
	gfx_width = ILI9488_LCD_WIDTH;
  400814:	802a      	strh	r2, [r5, #0]
	g_ili9488_display_opt.ul_width= ILI9488_LCD_WIDTH;
  400816:	9202      	str	r2, [sp, #8]
	gfx_height = ILI9488_LCD_HEIGHT;
  400818:	8033      	strh	r3, [r6, #0]
	g_ili9488_display_opt.ul_height = ILI9488_LCD_HEIGHT;
  40081a:	9303      	str	r3, [sp, #12]
	g_ili9488_display_opt.background_color = COLOR_BLACK;
  40081c:	9405      	str	r4, [sp, #20]
	ili9488_init(&g_ili9488_display_opt);
  40081e:	4788      	blx	r1
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  400820:	4640      	mov	r0, r8
  400822:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  400826:	4b18      	ldr	r3, [pc, #96]	; (400888 <gfx_ili9488_init+0x9c>)
  400828:	4798      	blx	r3
  40082a:	2353      	movs	r3, #83	; 0x53
	pio_set(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  40082c:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  400830:	4640      	mov	r0, r8
  400832:	803b      	strh	r3, [r7, #0]
  400834:	4b15      	ldr	r3, [pc, #84]	; (40088c <gfx_ili9488_init+0xa0>)
  400836:	4798      	blx	r3
		*(volatile uint16_t *)(BOARD_ILI9488_ADDR) = lcd_data;
	}
	static inline void LCD_MULTI_WD(const uint16_t *lcd_data, uint32_t size)
	{
		while(size--) {
			*((volatile uint16_t *)(BOARD_ILI9488_ADDR)) = *lcd_data++;
  400838:	2224      	movs	r2, #36	; 0x24
	
	/* Attempt to make display brighter :( */ 
	ili9488_color_t param = 0x24;
	ili9488_write_register(ILI9488_CMD_WRITE_CTRL_DISPLAY, &param, 1); 
	ili9488_write_brightness(0xFFFF);
  40083a:	f64f 70ff 	movw	r0, #65535	; 0xffff
  40083e:	4b14      	ldr	r3, [pc, #80]	; (400890 <gfx_ili9488_init+0xa4>)
  400840:	803a      	strh	r2, [r7, #0]
  400842:	4798      	blx	r3

	ili9488_display_on();
  400844:	4b13      	ldr	r3, [pc, #76]	; (400894 <gfx_ili9488_init+0xa8>)
  400846:	4798      	blx	r3

	/* Set clipping area to whole screen initially */
	gfx_set_clipping(0, 0, gfx_width, gfx_height);
  400848:	4f13      	ldr	r7, [pc, #76]	; (400898 <gfx_ili9488_init+0xac>)
  40084a:	f9b5 2000 	ldrsh.w	r2, [r5]
  40084e:	4621      	mov	r1, r4
  400850:	f9b6 3000 	ldrsh.w	r3, [r6]
  400854:	4620      	mov	r0, r4
  400856:	47b8      	blx	r7

	gfx_set_orientation(GFX_FLIP_Y);
  400858:	2002      	movs	r0, #2
  40085a:	4b10      	ldr	r3, [pc, #64]	; (40089c <gfx_ili9488_init+0xb0>)
  40085c:	4798      	blx	r3
	gfx_draw_filled_rect(0, 0, gfx_width, gfx_height, g_ili9488_display_opt.background_color);			
  40085e:	4621      	mov	r1, r4
  400860:	f8bd 4014 	ldrh.w	r4, [sp, #20]
  400864:	f9b6 3000 	ldrsh.w	r3, [r6]
  400868:	4608      	mov	r0, r1
  40086a:	9400      	str	r4, [sp, #0]
  40086c:	f9b5 2000 	ldrsh.w	r2, [r5]
  400870:	4c0b      	ldr	r4, [pc, #44]	; (4008a0 <gfx_ili9488_init+0xb4>)
  400872:	47a0      	blx	r4
}
  400874:	b006      	add	sp, #24
  400876:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40087a:	bf00      	nop
  40087c:	20418d94 	.word	0x20418d94
  400880:	20418d9e 	.word	0x20418d9e
  400884:	00403709 	.word	0x00403709
  400888:	00404269 	.word	0x00404269
  40088c:	00404265 	.word	0x00404265
  400890:	00403895 	.word	0x00403895
  400894:	00403665 	.word	0x00403665
  400898:	00400709 	.word	0x00400709
  40089c:	00400791 	.word	0x00400791
  4008a0:	00400775 	.word	0x00400775
  4008a4:	400e1200 	.word	0x400e1200

004008a8 <lcd_init>:
#include "LCDLib.h"
#include "asf.h"

/*********************************** Public Functions Start ***********************************/
void lcd_init(void)
{
  4008a8:	b510      	push	{r4, lr}
	gfx_init();
  4008aa:	4b03      	ldr	r3, [pc, #12]	; (4008b8 <lcd_init+0x10>)
  4008ac:	4798      	blx	r3
	mxt_init();
  4008ae:	4b03      	ldr	r3, [pc, #12]	; (4008bc <lcd_init+0x14>)
}
  4008b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	mxt_init();
  4008b4:	4718      	bx	r3
  4008b6:	bf00      	nop
  4008b8:	004007ed 	.word	0x004007ed
  4008bc:	004008c1 	.word	0x004008c1

004008c0 <mxt_init>:
	else 
		return false; 
}

void mxt_init(void)
{
  4008c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	enum status_code status;

	/* T8 configuration object data */
	uint8_t t8_object[] = {
  4008c4:	4c57      	ldr	r4, [pc, #348]	; (400a24 <mxt_init+0x164>)
{
  4008c6:	b09f      	sub	sp, #124	; 0x7c
	mxt_write_config_reg(&device, mxt_get_object_address(&device,
			MXT_GEN_COMMANDPROCESSOR_T6, 0)
			+ MXT_GEN_COMMANDPROCESSOR_RESET, 0x01);

	/* Wait for the reset of the device to complete */
	delay_ms(MXT_RESET_TIME);
  4008c8:	f8df 9190 	ldr.w	r9, [pc, #400]	; 400a5c <mxt_init+0x19c>
	uint8_t t9_object[] = {
  4008cc:	f104 050c 	add.w	r5, r4, #12
	uint8_t t8_object[] = {
  4008d0:	ab06      	add	r3, sp, #24
	uint8_t t9_object[] = {
  4008d2:	af15      	add	r7, sp, #84	; 0x54
	uint8_t t46_object[] = {
  4008d4:	f104 0c30 	add.w	ip, r4, #48	; 0x30
  4008d8:	46ee      	mov	lr, sp
	uint8_t t56_object[] = {
  4008da:	ae0c      	add	r6, sp, #48	; 0x30
			MXT_GEN_POWERCONFIG_T7, 0) + 2, 0x4b);
	mxt_write_config_reg(&device, mxt_get_object_address(&device,
			MXT_GEN_POWERCONFIG_T7, 0) + 3, 0x84);

	// Write predefined configuration data to configuration objects 
	mxt_write_config_object(&device, mxt_get_object_address(&device,
  4008dc:	f8df 8180 	ldr.w	r8, [pc, #384]	; 400a60 <mxt_init+0x1a0>
	uint8_t t8_object[] = {
  4008e0:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
  4008e4:	c303      	stmia	r3!, {r0, r1}
  4008e6:	801a      	strh	r2, [r3, #0]
	uint8_t t56_object[] = {
  4008e8:	343c      	adds	r4, #60	; 0x3c
	uint8_t t9_object[] = {
  4008ea:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  4008ec:	c70f      	stmia	r7!, {r0, r1, r2, r3}
  4008ee:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  4008f0:	c70f      	stmia	r7!, {r0, r1, r2, r3}
	uint8_t t46_object[] = {
  4008f2:	e89c 0007 	ldmia.w	ip, {r0, r1, r2}
	uint8_t t9_object[] = {
  4008f6:	682b      	ldr	r3, [r5, #0]
	twihs_master_options_t twi_opt = {
  4008f8:	2500      	movs	r5, #0
	uint8_t t46_object[] = {
  4008fa:	e8ae 0003 	stmia.w	lr!, {r0, r1}
	uint8_t t9_object[] = {
  4008fe:	603b      	str	r3, [r7, #0]
	twihs_master_options_t twi_opt = {
  400900:	274a      	movs	r7, #74	; 0x4a
	uint8_t t46_object[] = {
  400902:	f88e 2000 	strb.w	r2, [lr]
	twihs_master_options_t twi_opt = {
  400906:	f8df e15c 	ldr.w	lr, [pc, #348]	; 400a64 <mxt_init+0x1a4>
	uint8_t t56_object[] = {
  40090a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  40090c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
  40090e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  400910:	f8d4 c000 	ldr.w	ip, [r4]
	pio_configure(PIOD, PIO_INPUT, PIO_PD28, PIO_PULLUP);
  400914:	4c44      	ldr	r4, [pc, #272]	; (400a28 <mxt_init+0x168>)
	twihs_master_options_t twi_opt = {
  400916:	f8cd e028 	str.w	lr, [sp, #40]	; 0x28
  40091a:	950b      	str	r5, [sp, #44]	; 0x2c
  40091c:	9509      	str	r5, [sp, #36]	; 0x24
  40091e:	f88d 702c 	strb.w	r7, [sp, #44]	; 0x2c
	uint8_t t56_object[] = {
  400922:	c60f      	stmia	r6!, {r0, r1, r2, r3}
	pio_configure(PIOD, PIO_INPUT, PIO_PD28, PIO_PULLUP);
  400924:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  400928:	2301      	movs	r3, #1
  40092a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  40092e:	483f      	ldr	r0, [pc, #252]	; (400a2c <mxt_init+0x16c>)
	uint8_t t56_object[] = {
  400930:	f886 c000 	strb.w	ip, [r6]
	pio_configure(PIOD, PIO_INPUT, PIO_PD28, PIO_PULLUP);
  400934:	47a0      	blx	r4
typedef twihs_packet_t twihs_package_t;

static inline uint32_t twihs_master_setup(twihs_master_t p_twihs,
		twihs_master_options_t *p_opt)
{
	p_opt->master_clk = sysclk_get_peripheral_hz();
  400936:	4a3e      	ldr	r2, [pc, #248]	; (400a30 <mxt_init+0x170>)
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400938:	2013      	movs	r0, #19
  40093a:	4b3e      	ldr	r3, [pc, #248]	; (400a34 <mxt_init+0x174>)

	// Issue recalibration command to maXTouch device by writing a non-zero
	 // value to the calibrate register 
	mxt_write_config_reg(&device, mxt_get_object_address(&device, MXT_GEN_COMMANDPROCESSOR_T6, 0) + MXT_GEN_COMMANDPROCESSOR_CALIBRATE, 0x01); 
	
	delay_ms(100); 
  40093c:	f44f 74af 	mov.w	r4, #350	; 0x15e
  400940:	9209      	str	r2, [sp, #36]	; 0x24
	p_opt->smbus      = 0;
  400942:	f88d 502d 	strb.w	r5, [sp, #45]	; 0x2d
  400946:	4798      	blx	r3
#endif		
	} else {
		// Do Nothing
	}
#endif
	return (twihs_master_init(p_twihs, p_opt));
  400948:	a909      	add	r1, sp, #36	; 0x24
  40094a:	4b3b      	ldr	r3, [pc, #236]	; (400a38 <mxt_init+0x178>)
  40094c:	483b      	ldr	r0, [pc, #236]	; (400a3c <mxt_init+0x17c>)
  40094e:	4798      	blx	r3
	status = mxt_init_device(&device, MAXTOUCH_TWI_INTERFACE,
  400950:	4e3b      	ldr	r6, [pc, #236]	; (400a40 <mxt_init+0x180>)
  400952:	237c      	movs	r3, #124	; 0x7c
  400954:	463a      	mov	r2, r7
  400956:	4939      	ldr	r1, [pc, #228]	; (400a3c <mxt_init+0x17c>)
  400958:	483a      	ldr	r0, [pc, #232]	; (400a44 <mxt_init+0x184>)
  40095a:	47b0      	blx	r6
	mxt_write_config_reg(&device, mxt_get_object_address(&device,
  40095c:	4e3a      	ldr	r6, [pc, #232]	; (400a48 <mxt_init+0x188>)
  40095e:	462a      	mov	r2, r5
  400960:	2106      	movs	r1, #6
  400962:	4838      	ldr	r0, [pc, #224]	; (400a44 <mxt_init+0x184>)
  400964:	4f39      	ldr	r7, [pc, #228]	; (400a4c <mxt_init+0x18c>)
  400966:	47b0      	blx	r6
  400968:	2201      	movs	r2, #1
  40096a:	4601      	mov	r1, r0
  40096c:	4835      	ldr	r0, [pc, #212]	; (400a44 <mxt_init+0x184>)
  40096e:	47b8      	blx	r7
	delay_ms(MXT_RESET_TIME);
  400970:	4837      	ldr	r0, [pc, #220]	; (400a50 <mxt_init+0x190>)
  400972:	47c8      	blx	r9
	mxt_write_config_reg(&device, mxt_get_object_address(&device,
  400974:	462a      	mov	r2, r5
  400976:	2107      	movs	r1, #7
  400978:	4832      	ldr	r0, [pc, #200]	; (400a44 <mxt_init+0x184>)
  40097a:	47b0      	blx	r6
  40097c:	2220      	movs	r2, #32
  40097e:	4601      	mov	r1, r0
  400980:	4830      	ldr	r0, [pc, #192]	; (400a44 <mxt_init+0x184>)
  400982:	47b8      	blx	r7
	mxt_write_config_reg(&device, mxt_get_object_address(&device,
  400984:	462a      	mov	r2, r5
  400986:	2107      	movs	r1, #7
  400988:	482e      	ldr	r0, [pc, #184]	; (400a44 <mxt_init+0x184>)
  40098a:	47b0      	blx	r6
  40098c:	1c41      	adds	r1, r0, #1
  40098e:	2210      	movs	r2, #16
  400990:	482c      	ldr	r0, [pc, #176]	; (400a44 <mxt_init+0x184>)
  400992:	b289      	uxth	r1, r1
  400994:	47b8      	blx	r7
	mxt_write_config_reg(&device, mxt_get_object_address(&device,
  400996:	462a      	mov	r2, r5
  400998:	2107      	movs	r1, #7
  40099a:	482a      	ldr	r0, [pc, #168]	; (400a44 <mxt_init+0x184>)
  40099c:	47b0      	blx	r6
  40099e:	1c81      	adds	r1, r0, #2
  4009a0:	224b      	movs	r2, #75	; 0x4b
  4009a2:	4828      	ldr	r0, [pc, #160]	; (400a44 <mxt_init+0x184>)
  4009a4:	b289      	uxth	r1, r1
  4009a6:	47b8      	blx	r7
	mxt_write_config_reg(&device, mxt_get_object_address(&device,
  4009a8:	462a      	mov	r2, r5
  4009aa:	2107      	movs	r1, #7
  4009ac:	4825      	ldr	r0, [pc, #148]	; (400a44 <mxt_init+0x184>)
  4009ae:	47b0      	blx	r6
  4009b0:	1cc1      	adds	r1, r0, #3
  4009b2:	2284      	movs	r2, #132	; 0x84
  4009b4:	4823      	ldr	r0, [pc, #140]	; (400a44 <mxt_init+0x184>)
  4009b6:	b289      	uxth	r1, r1
  4009b8:	47b8      	blx	r7
	mxt_write_config_object(&device, mxt_get_object_address(&device,
  4009ba:	462a      	mov	r2, r5
  4009bc:	2108      	movs	r1, #8
  4009be:	4821      	ldr	r0, [pc, #132]	; (400a44 <mxt_init+0x184>)
  4009c0:	47b0      	blx	r6
  4009c2:	aa06      	add	r2, sp, #24
  4009c4:	4601      	mov	r1, r0
  4009c6:	481f      	ldr	r0, [pc, #124]	; (400a44 <mxt_init+0x184>)
  4009c8:	47c0      	blx	r8
	mxt_write_config_object(&device, mxt_get_object_address(&device,
  4009ca:	462a      	mov	r2, r5
  4009cc:	2109      	movs	r1, #9
  4009ce:	481d      	ldr	r0, [pc, #116]	; (400a44 <mxt_init+0x184>)
  4009d0:	47b0      	blx	r6
  4009d2:	aa15      	add	r2, sp, #84	; 0x54
  4009d4:	4601      	mov	r1, r0
  4009d6:	481b      	ldr	r0, [pc, #108]	; (400a44 <mxt_init+0x184>)
  4009d8:	47c0      	blx	r8
	mxt_write_config_object(&device, mxt_get_object_address(&device,
  4009da:	462a      	mov	r2, r5
  4009dc:	212e      	movs	r1, #46	; 0x2e
  4009de:	4819      	ldr	r0, [pc, #100]	; (400a44 <mxt_init+0x184>)
  4009e0:	47b0      	blx	r6
  4009e2:	466a      	mov	r2, sp
  4009e4:	4601      	mov	r1, r0
  4009e6:	4817      	ldr	r0, [pc, #92]	; (400a44 <mxt_init+0x184>)
  4009e8:	47c0      	blx	r8
	mxt_write_config_object(&device, mxt_get_object_address(&device,
  4009ea:	462a      	mov	r2, r5
  4009ec:	2138      	movs	r1, #56	; 0x38
  4009ee:	4815      	ldr	r0, [pc, #84]	; (400a44 <mxt_init+0x184>)
  4009f0:	47b0      	blx	r6
  4009f2:	aa0c      	add	r2, sp, #48	; 0x30
  4009f4:	4601      	mov	r1, r0
  4009f6:	4813      	ldr	r0, [pc, #76]	; (400a44 <mxt_init+0x184>)
  4009f8:	47c0      	blx	r8
	mxt_write_config_reg(&device, mxt_get_object_address(&device, MXT_GEN_COMMANDPROCESSOR_T6, 0) + MXT_GEN_COMMANDPROCESSOR_CALIBRATE, 0x01); 
  4009fa:	462a      	mov	r2, r5
  4009fc:	2106      	movs	r1, #6
  4009fe:	4811      	ldr	r0, [pc, #68]	; (400a44 <mxt_init+0x184>)
  400a00:	47b0      	blx	r6
  400a02:	1c81      	adds	r1, r0, #2
  400a04:	2201      	movs	r2, #1
  400a06:	480f      	ldr	r0, [pc, #60]	; (400a44 <mxt_init+0x184>)
  400a08:	b289      	uxth	r1, r1
  400a0a:	4e12      	ldr	r6, [pc, #72]	; (400a54 <mxt_init+0x194>)
  400a0c:	47b8      	blx	r7
	delay_ms(100); 
  400a0e:	4812      	ldr	r0, [pc, #72]	; (400a58 <mxt_init+0x198>)
		mxt_read_message(data, &message);
  400a10:	4d0c      	ldr	r5, [pc, #48]	; (400a44 <mxt_init+0x184>)
	delay_ms(100); 
  400a12:	47c8      	blx	r9
		mxt_read_message(data, &message);
  400a14:	a903      	add	r1, sp, #12
  400a16:	4628      	mov	r0, r5
  400a18:	47b0      	blx	r6
	} while (--count);
  400a1a:	3c01      	subs	r4, #1
  400a1c:	d1fa      	bne.n	400a14 <mxt_init+0x154>
	
	// Make chg pin high 
	mxt_make_highchg(&device);
}
  400a1e:	b01f      	add	sp, #124	; 0x7c
  400a20:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  400a24:	0040dfa8 	.word	0x0040dfa8
  400a28:	00404305 	.word	0x00404305
  400a2c:	400e1400 	.word	0x400e1400
  400a30:	08f0d180 	.word	0x08f0d180
  400a34:	004046c9 	.word	0x004046c9
  400a38:	00403bc5 	.word	0x00403bc5
  400a3c:	40018000 	.word	0x40018000
  400a40:	00402fb1 	.word	0x00402fb1
  400a44:	20400a38 	.word	0x20400a38
  400a48:	00403211 	.word	0x00403211
  400a4c:	004032d5 	.word	0x004032d5
  400a50:	003228d8 	.word	0x003228d8
  400a54:	0040331d 	.word	0x0040331d
  400a58:	004d2b25 	.word	0x004d2b25
  400a5c:	20400001 	.word	0x20400001
  400a60:	00403259 	.word	0x00403259
  400a64:	00061a80 	.word	0x00061a80

00400a68 <PSOLA_init>:
static float32_t gAnaMagn[PROCESS_BUF_SIZE];
static float32_t gSynFreq[PROCESS_BUF_SIZE];
static float32_t gSynMagn[PROCESS_BUF_SIZE];

void PSOLA_init(uint32_t bufferSize)
{
  400a68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400a6c:	4604      	mov	r4, r0
	memset(gInFIFO, 0, bufferSize*sizeof(float32_t));
  400a6e:	4d14      	ldr	r5, [pc, #80]	; (400ac0 <PSOLA_init+0x58>)
  400a70:	2100      	movs	r1, #0
  400a72:	4814      	ldr	r0, [pc, #80]	; (400ac4 <PSOLA_init+0x5c>)
  400a74:	00a6      	lsls	r6, r4, #2
	memset(gOutFIFO, 0, bufferSize*sizeof(float32_t));
	memset(gFFTworksp, 0, 2*bufferSize*sizeof(float32_t));
  400a76:	00e7      	lsls	r7, r4, #3
	memset(gLastPhase, 0, (bufferSize/2+1)*sizeof(float32_t));
  400a78:	0864      	lsrs	r4, r4, #1
	memset(gInFIFO, 0, bufferSize*sizeof(float32_t));
  400a7a:	4632      	mov	r2, r6
  400a7c:	47a8      	blx	r5
	memset(gOutFIFO, 0, bufferSize*sizeof(float32_t));
  400a7e:	4632      	mov	r2, r6
	memset(gLastPhase, 0, (bufferSize/2+1)*sizeof(float32_t));
  400a80:	3401      	adds	r4, #1
	memset(gOutFIFO, 0, bufferSize*sizeof(float32_t));
  400a82:	2100      	movs	r1, #0
  400a84:	4810      	ldr	r0, [pc, #64]	; (400ac8 <PSOLA_init+0x60>)
	memset(gLastPhase, 0, (bufferSize/2+1)*sizeof(float32_t));
  400a86:	00a4      	lsls	r4, r4, #2
	memset(gOutFIFO, 0, bufferSize*sizeof(float32_t));
  400a88:	47a8      	blx	r5
	memset(gFFTworksp, 0, 2*bufferSize*sizeof(float32_t));
  400a8a:	463a      	mov	r2, r7
  400a8c:	2100      	movs	r1, #0
  400a8e:	480f      	ldr	r0, [pc, #60]	; (400acc <PSOLA_init+0x64>)
  400a90:	47a8      	blx	r5
	memset(gLastPhase, 0, (bufferSize/2+1)*sizeof(float32_t));
  400a92:	4622      	mov	r2, r4
  400a94:	2100      	movs	r1, #0
  400a96:	480e      	ldr	r0, [pc, #56]	; (400ad0 <PSOLA_init+0x68>)
  400a98:	47a8      	blx	r5
	memset(gSumPhase, 0, (bufferSize/2+1)*sizeof(float32_t));
  400a9a:	4622      	mov	r2, r4
  400a9c:	2100      	movs	r1, #0
  400a9e:	480d      	ldr	r0, [pc, #52]	; (400ad4 <PSOLA_init+0x6c>)
  400aa0:	47a8      	blx	r5
	memset(gOutputAccum, 0, 2*bufferSize*sizeof(float32_t));
  400aa2:	463a      	mov	r2, r7
  400aa4:	2100      	movs	r1, #0
  400aa6:	480c      	ldr	r0, [pc, #48]	; (400ad8 <PSOLA_init+0x70>)
  400aa8:	47a8      	blx	r5
	memset(gAnaFreq, 0, bufferSize*sizeof(float32_t));
  400aaa:	4632      	mov	r2, r6
  400aac:	2100      	movs	r1, #0
  400aae:	480b      	ldr	r0, [pc, #44]	; (400adc <PSOLA_init+0x74>)
  400ab0:	47a8      	blx	r5
	memset(gAnaMagn, 0, bufferSize*sizeof(float32_t));
  400ab2:	4632      	mov	r2, r6
  400ab4:	462b      	mov	r3, r5
  400ab6:	2100      	movs	r1, #0
  400ab8:	4809      	ldr	r0, [pc, #36]	; (400ae0 <PSOLA_init+0x78>)
}
  400aba:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
	memset(gAnaMagn, 0, bufferSize*sizeof(float32_t));
  400abe:	4718      	bx	r3
  400ac0:	00408c85 	.word	0x00408c85
  400ac4:	20404a58 	.word	0x20404a58
  400ac8:	2040625c 	.word	0x2040625c
  400acc:	20402a58 	.word	0x20402a58
  400ad0:	20405a58 	.word	0x20405a58
  400ad4:	2040925c 	.word	0x2040925c
  400ad8:	2040725c 	.word	0x2040725c
  400adc:	20400a58 	.word	0x20400a58
  400ae0:	20401a58 	.word	0x20401a58
  400ae4:	00000000 	.word	0x00000000

00400ae8 <pitch_shift_do>:

void pitch_shift_do(float32_t * outData, uint32_t pitch_shift, cvec_t *mags_and_phases)
{
  400ae8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400aec:	4baa      	ldr	r3, [pc, #680]	; (400d98 <pitch_shift_do+0x2b0>)
  400aee:	4690      	mov	r8, r2
  400af0:	f8df b2f4 	ldr.w	fp, [pc, #756]	; 400de8 <pitch_shift_do+0x300>
	freqPerBin = FFT_SAMPLE_RATE/(double)FFT_FRAME_SIZE;
	expct = 2.*M_PI*(double)STEP_SIZE/(double)FFT_FRAME_SIZE;
	
	/* ***************** ANALYSIS ******************* */
	/* this is the analysis step */
	for (k = 0; k <= FRAME_SIZE_2; k++) {
  400af4:	f04f 0900 	mov.w	r9, #0
  400af8:	4aa8      	ldr	r2, [pc, #672]	; (400d9c <pitch_shift_do+0x2b4>)
  400afa:	f8df a2f0 	ldr.w	sl, [pc, #752]	; 400dec <pitch_shift_do+0x304>

		/* get deviation from bin frequency from the +/- Pi interval */
		tmp = NUM_OF_OVERLAPS*tmp/(2.*M_PI);

		/* compute the k-th partials' true frequency */
		tmp = (double)k*freqPerBin + tmp*freqPerBin;
  400afe:	4615      	mov	r5, r2
{
  400b00:	ed2d 8b02 	vpush	{d8}
  400b04:	b089      	sub	sp, #36	; 0x24
  400b06:	f8cd b004 	str.w	fp, [sp, #4]
		tmp = (double)k*freqPerBin + tmp*freqPerBin;
  400b0a:	f8cd b01c 	str.w	fp, [sp, #28]
  400b0e:	469b      	mov	fp, r3
{
  400b10:	9104      	str	r1, [sp, #16]
  400b12:	9306      	str	r3, [sp, #24]
		phase = mags_and_phases->phas[k]; 
  400b14:	f8d8 1008 	ldr.w	r1, [r8, #8]
  400b18:	ea4f 0389 	mov.w	r3, r9, lsl #2
		magn = mags_and_phases->norm[k]; 
  400b1c:	f8d8 2004 	ldr.w	r2, [r8, #4]
		phase = mags_and_phases->phas[k]; 
  400b20:	4419      	add	r1, r3
		magn = mags_and_phases->norm[k]; 
  400b22:	4413      	add	r3, r2
		phase = mags_and_phases->phas[k]; 
  400b24:	680c      	ldr	r4, [r1, #0]
		magn = mags_and_phases->norm[k]; 
  400b26:	ed93 8a00 	vldr	s16, [r3]
		phase = mags_and_phases->phas[k]; 
  400b2a:	4620      	mov	r0, r4
  400b2c:	4b9c      	ldr	r3, [pc, #624]	; (400da0 <pitch_shift_do+0x2b8>)
  400b2e:	4798      	blx	r3
  400b30:	4606      	mov	r6, r0
  400b32:	460f      	mov	r7, r1
		tmp = phase - gLastPhase[k];
  400b34:	6828      	ldr	r0, [r5, #0]
  400b36:	4b9a      	ldr	r3, [pc, #616]	; (400da0 <pitch_shift_do+0x2b8>)
  400b38:	4798      	blx	r3
  400b3a:	4602      	mov	r2, r0
  400b3c:	460b      	mov	r3, r1
  400b3e:	4630      	mov	r0, r6
  400b40:	4639      	mov	r1, r7
  400b42:	4e98      	ldr	r6, [pc, #608]	; (400da4 <pitch_shift_do+0x2bc>)
  400b44:	47b0      	blx	r6
		gLastPhase[k] = phase;
  400b46:	f845 4b04 	str.w	r4, [r5], #4
		tmp = phase - gLastPhase[k];
  400b4a:	4606      	mov	r6, r0
  400b4c:	460f      	mov	r7, r1
		tmp -= (double)k*expct;
  400b4e:	4648      	mov	r0, r9
  400b50:	4b95      	ldr	r3, [pc, #596]	; (400da8 <pitch_shift_do+0x2c0>)
  400b52:	4798      	blx	r3
  400b54:	4c93      	ldr	r4, [pc, #588]	; (400da4 <pitch_shift_do+0x2bc>)
	for (k = 0; k <= FRAME_SIZE_2; k++) {
  400b56:	f109 0901 	add.w	r9, r9, #1
		tmp -= (double)k*expct;
  400b5a:	a383      	add	r3, pc, #524	; (adr r3, 400d68 <pitch_shift_do+0x280>)
  400b5c:	e9d3 2300 	ldrd	r2, r3, [r3]
  400b60:	e9cd 0102 	strd	r0, r1, [sp, #8]
  400b64:	47d0      	blx	sl
  400b66:	4602      	mov	r2, r0
  400b68:	460b      	mov	r3, r1
  400b6a:	4630      	mov	r0, r6
  400b6c:	4639      	mov	r1, r7
  400b6e:	47a0      	blx	r4
  400b70:	4606      	mov	r6, r0
  400b72:	460f      	mov	r7, r1
		tmp -= M_PI*(double)qpd;
  400b74:	4c8b      	ldr	r4, [pc, #556]	; (400da4 <pitch_shift_do+0x2bc>)
		qpd = tmp/M_PI;
  400b76:	a37e      	add	r3, pc, #504	; (adr r3, 400d70 <pitch_shift_do+0x288>)
  400b78:	e9d3 2300 	ldrd	r2, r3, [r3]
  400b7c:	47d0      	blx	sl
  400b7e:	4b8b      	ldr	r3, [pc, #556]	; (400dac <pitch_shift_do+0x2c4>)
  400b80:	4798      	blx	r3
		if (qpd >= 0) qpd += qpd&1;
  400b82:	1e03      	subs	r3, r0, #0
  400b84:	f103 0001 	add.w	r0, r3, #1
		else qpd -= qpd&1;
  400b88:	bfb8      	it	lt
  400b8a:	f023 0001 	biclt.w	r0, r3, #1
		tmp -= M_PI*(double)qpd;
  400b8e:	4b86      	ldr	r3, [pc, #536]	; (400da8 <pitch_shift_do+0x2c0>)
		if (qpd >= 0) qpd += qpd&1;
  400b90:	bfa8      	it	ge
  400b92:	f020 0001 	bicge.w	r0, r0, #1
		tmp -= M_PI*(double)qpd;
  400b96:	4798      	blx	r3
  400b98:	a377      	add	r3, pc, #476	; (adr r3, 400d78 <pitch_shift_do+0x290>)
  400b9a:	e9d3 2300 	ldrd	r2, r3, [r3]
  400b9e:	47d0      	blx	sl
  400ba0:	4602      	mov	r2, r0
  400ba2:	460b      	mov	r3, r1
  400ba4:	4630      	mov	r0, r6
  400ba6:	4639      	mov	r1, r7
  400ba8:	47a0      	blx	r4
		tmp = (double)k*freqPerBin + tmp*freqPerBin;
  400baa:	4c81      	ldr	r4, [pc, #516]	; (400db0 <pitch_shift_do+0x2c8>)
		tmp = NUM_OF_OVERLAPS*tmp/(2.*M_PI);
  400bac:	a374      	add	r3, pc, #464	; (adr r3, 400d80 <pitch_shift_do+0x298>)
  400bae:	e9d3 2300 	ldrd	r2, r3, [r3]
  400bb2:	47d0      	blx	sl
		tmp = (double)k*freqPerBin + tmp*freqPerBin;
  400bb4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  400bb8:	47a0      	blx	r4

		/* store magnitude and true frequency in analysis arrays */
		gAnaMagn[k] = magn;
  400bba:	9b01      	ldr	r3, [sp, #4]
  400bbc:	eca3 8a01 	vstmia	r3!, {s16}
  400bc0:	9301      	str	r3, [sp, #4]
		tmp = (double)k*freqPerBin + tmp*freqPerBin;
  400bc2:	a371      	add	r3, pc, #452	; (adr r3, 400d88 <pitch_shift_do+0x2a0>)
  400bc4:	e9d3 2300 	ldrd	r2, r3, [r3]
  400bc8:	47d0      	blx	sl
		gAnaFreq[k] = tmp;
  400bca:	4b7a      	ldr	r3, [pc, #488]	; (400db4 <pitch_shift_do+0x2cc>)
  400bcc:	4798      	blx	r3
	for (k = 0; k <= FRAME_SIZE_2; k++) {
  400bce:	f240 2301 	movw	r3, #513	; 0x201
		gAnaFreq[k] = tmp;
  400bd2:	f84b 0b04 	str.w	r0, [fp], #4
	for (k = 0; k <= FRAME_SIZE_2; k++) {
  400bd6:	4599      	cmp	r9, r3
  400bd8:	d19c      	bne.n	400b14 <pitch_shift_do+0x2c>
	}
	
	memset(gSynMagn, 0, FFT_FRAME_SIZE*sizeof(float32_t));
  400bda:	4c77      	ldr	r4, [pc, #476]	; (400db8 <pitch_shift_do+0x2d0>)
  400bdc:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  400be0:	2100      	movs	r1, #0
  400be2:	4876      	ldr	r0, [pc, #472]	; (400dbc <pitch_shift_do+0x2d4>)
  400be4:	f8dd b01c 	ldr.w	fp, [sp, #28]
  400be8:	47a0      	blx	r4
  400bea:	4b74      	ldr	r3, [pc, #464]	; (400dbc <pitch_shift_do+0x2d4>)
	memset(gSynFreq, 0, FFT_FRAME_SIZE*sizeof(float32_t));
  400bec:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  400bf0:	4873      	ldr	r0, [pc, #460]	; (400dc0 <pitch_shift_do+0x2d8>)
  400bf2:	2100      	movs	r1, #0
  400bf4:	461d      	mov	r5, r3
  400bf6:	9302      	str	r3, [sp, #8]
  400bf8:	4606      	mov	r6, r0
  400bfa:	9001      	str	r0, [sp, #4]
  400bfc:	47a0      	blx	r4
	for (k = 0; k <= FRAME_SIZE_2; k++) {
		index = k*pitch_shift;
		if (index <= FRAME_SIZE_2) {
			gSynMagn[index] += gAnaMagn[k];
			gSynFreq[index] = gAnaFreq[k] * pitch_shift;
  400bfe:	eddd 7a04 	vldr	s15, [sp, #16]
	memset(gSynFreq, 0, FFT_FRAME_SIZE*sizeof(float32_t));
  400c02:	4631      	mov	r1, r6
  400c04:	462a      	mov	r2, r5
  400c06:	ee17 6a90 	vmov	r6, s15
			gSynFreq[index] = gAnaFreq[k] * pitch_shift;
  400c0a:	eeb8 6a67 	vcvt.f32.u32	s12, s15
  400c0e:	4c6d      	ldr	r4, [pc, #436]	; (400dc4 <pitch_shift_do+0x2dc>)
	memset(gSynFreq, 0, FFT_FRAME_SIZE*sizeof(float32_t));
  400c10:	2300      	movs	r3, #0
  400c12:	00b0      	lsls	r0, r6, #2
  400c14:	9d06      	ldr	r5, [sp, #24]
		if (index <= FRAME_SIZE_2) {
  400c16:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  400c1a:	4433      	add	r3, r6
  400c1c:	dc0d      	bgt.n	400c3a <pitch_shift_do+0x152>
			gSynMagn[index] += gAnaMagn[k];
  400c1e:	ed92 7a00 	vldr	s14, [r2]
  400c22:	eddb 7a00 	vldr	s15, [fp]
			gSynFreq[index] = gAnaFreq[k] * pitch_shift;
  400c26:	edd5 6a00 	vldr	s13, [r5]
			gSynMagn[index] += gAnaMagn[k];
  400c2a:	ee77 7a27 	vadd.f32	s15, s14, s15
			gSynFreq[index] = gAnaFreq[k] * pitch_shift;
  400c2e:	ee26 7a86 	vmul.f32	s14, s13, s12
			gSynMagn[index] += gAnaMagn[k];
  400c32:	edc2 7a00 	vstr	s15, [r2]
			gSynFreq[index] = gAnaFreq[k] * pitch_shift;
  400c36:	ed81 7a00 	vstr	s14, [r1]
  400c3a:	f10b 0b04 	add.w	fp, fp, #4
  400c3e:	4402      	add	r2, r0
  400c40:	3504      	adds	r5, #4
  400c42:	4401      	add	r1, r0
	for (k = 0; k <= FRAME_SIZE_2; k++) {
  400c44:	455c      	cmp	r4, fp
  400c46:	d1e6      	bne.n	400c16 <pitch_shift_do+0x12e>
  400c48:	4d5f      	ldr	r5, [pc, #380]	; (400dc8 <pitch_shift_do+0x2e0>)
  400c4a:	2400      	movs	r4, #0
  400c4c:	f8df b1a0 	ldr.w	fp, [pc, #416]	; 400df0 <pitch_shift_do+0x308>
  400c50:	46a1      	mov	r9, r4
  400c52:	46a8      	mov	r8, r5
	/* ***************** SYNTHESIS ******************* */
	/* this is the synthesis step */
	for (k = 0; k <= FRAME_SIZE_2; k++) {

		/* get magnitude and true frequency from synthesis arrays */
		magn = gSynMagn[k];
  400c54:	9b02      	ldr	r3, [sp, #8]
  400c56:	f10b 0b08 	add.w	fp, fp, #8
  400c5a:	f853 0b04 	ldr.w	r0, [r3], #4
  400c5e:	9302      	str	r3, [sp, #8]
  400c60:	4b4f      	ldr	r3, [pc, #316]	; (400da0 <pitch_shift_do+0x2b8>)
  400c62:	4798      	blx	r3
		tmp = gSynFreq[k];
  400c64:	9b01      	ldr	r3, [sp, #4]
		magn = gSynMagn[k];
  400c66:	e9cd 0104 	strd	r0, r1, [sp, #16]
		tmp = gSynFreq[k];
  400c6a:	f853 0b04 	ldr.w	r0, [r3], #4
  400c6e:	9301      	str	r3, [sp, #4]
  400c70:	4b4b      	ldr	r3, [pc, #300]	; (400da0 <pitch_shift_do+0x2b8>)
  400c72:	4798      	blx	r3

		/* subtract bin mid frequency */
		tmp -= (double)k*freqPerBin;
  400c74:	4b4c      	ldr	r3, [pc, #304]	; (400da8 <pitch_shift_do+0x2c0>)
		tmp = gSynFreq[k];
  400c76:	4606      	mov	r6, r0
  400c78:	460f      	mov	r7, r1
		tmp -= (double)k*freqPerBin;
  400c7a:	4648      	mov	r0, r9
	for (k = 0; k <= FRAME_SIZE_2; k++) {
  400c7c:	f109 0901 	add.w	r9, r9, #1
		tmp -= (double)k*freqPerBin;
  400c80:	4798      	blx	r3
  400c82:	4604      	mov	r4, r0
  400c84:	460d      	mov	r5, r1
  400c86:	a340      	add	r3, pc, #256	; (adr r3, 400d88 <pitch_shift_do+0x2a0>)
  400c88:	e9d3 2300 	ldrd	r2, r3, [r3]
  400c8c:	47d0      	blx	sl
  400c8e:	4602      	mov	r2, r0
  400c90:	460b      	mov	r3, r1
  400c92:	4630      	mov	r0, r6
  400c94:	4639      	mov	r1, r7
  400c96:	4e43      	ldr	r6, [pc, #268]	; (400da4 <pitch_shift_do+0x2bc>)
  400c98:	47b0      	blx	r6
  400c9a:	4606      	mov	r6, r0
  400c9c:	460f      	mov	r7, r1

		/* take number of overlaps into account */
		tmp = 2.*M_PI*tmp/NUM_OF_OVERLAPS;

		/* add the overlap phase advance back in */
		tmp += (double)k*expct;
  400c9e:	4620      	mov	r0, r4
  400ca0:	4629      	mov	r1, r5
  400ca2:	a331      	add	r3, pc, #196	; (adr r3, 400d68 <pitch_shift_do+0x280>)
  400ca4:	e9d3 2300 	ldrd	r2, r3, [r3]
  400ca8:	47d0      	blx	sl
  400caa:	4604      	mov	r4, r0
  400cac:	460d      	mov	r5, r1

		/* accumulate delta phase to get bin phase */
		gSumPhase[k] += tmp;
  400cae:	f8d8 0000 	ldr.w	r0, [r8]
  400cb2:	4b3b      	ldr	r3, [pc, #236]	; (400da0 <pitch_shift_do+0x2b8>)
  400cb4:	4798      	blx	r3
  400cb6:	4602      	mov	r2, r0
  400cb8:	460b      	mov	r3, r1
  400cba:	4620      	mov	r0, r4
  400cbc:	4629      	mov	r1, r5
  400cbe:	4c3c      	ldr	r4, [pc, #240]	; (400db0 <pitch_shift_do+0x2c8>)
  400cc0:	47a0      	blx	r4
  400cc2:	4604      	mov	r4, r0
  400cc4:	460d      	mov	r5, r1
		tmp = 2.*M_PI*tmp/NUM_OF_OVERLAPS;
  400cc6:	4630      	mov	r0, r6
  400cc8:	4639      	mov	r1, r7
  400cca:	a331      	add	r3, pc, #196	; (adr r3, 400d90 <pitch_shift_do+0x2a8>)
  400ccc:	e9d3 2300 	ldrd	r2, r3, [r3]
  400cd0:	47d0      	blx	sl
		gSumPhase[k] += tmp;
  400cd2:	4602      	mov	r2, r0
  400cd4:	460b      	mov	r3, r1
  400cd6:	4620      	mov	r0, r4
  400cd8:	4629      	mov	r1, r5
  400cda:	4c35      	ldr	r4, [pc, #212]	; (400db0 <pitch_shift_do+0x2c8>)
  400cdc:	47a0      	blx	r4
  400cde:	4b35      	ldr	r3, [pc, #212]	; (400db4 <pitch_shift_do+0x2cc>)
  400ce0:	4798      	blx	r3
		phase = gSumPhase[k];
  400ce2:	4b2f      	ldr	r3, [pc, #188]	; (400da0 <pitch_shift_do+0x2b8>)
		gSumPhase[k] += tmp;
  400ce4:	f848 0b04 	str.w	r0, [r8], #4
		phase = gSumPhase[k];
  400ce8:	4798      	blx	r3

		/* get real and imag part and re-interleave */
		gFFTworksp[2*k] = magn*cos(phase);
  400cea:	4b38      	ldr	r3, [pc, #224]	; (400dcc <pitch_shift_do+0x2e4>)
		phase = gSumPhase[k];
  400cec:	4604      	mov	r4, r0
  400cee:	460d      	mov	r5, r1
		gFFTworksp[2*k] = magn*cos(phase);
  400cf0:	4798      	blx	r3
  400cf2:	4602      	mov	r2, r0
  400cf4:	460b      	mov	r3, r1
  400cf6:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
  400cfa:	4630      	mov	r0, r6
  400cfc:	4639      	mov	r1, r7
  400cfe:	47d0      	blx	sl
  400d00:	4b2c      	ldr	r3, [pc, #176]	; (400db4 <pitch_shift_do+0x2cc>)
  400d02:	4798      	blx	r3
		gFFTworksp[2*k+1] = magn*sin(phase);
  400d04:	4b32      	ldr	r3, [pc, #200]	; (400dd0 <pitch_shift_do+0x2e8>)
		gFFTworksp[2*k] = magn*cos(phase);
  400d06:	f84b 0c08 	str.w	r0, [fp, #-8]
		gFFTworksp[2*k+1] = magn*sin(phase);
  400d0a:	4629      	mov	r1, r5
  400d0c:	4620      	mov	r0, r4
  400d0e:	4798      	blx	r3
  400d10:	4602      	mov	r2, r0
  400d12:	460b      	mov	r3, r1
  400d14:	4630      	mov	r0, r6
  400d16:	4639      	mov	r1, r7
  400d18:	47d0      	blx	sl
  400d1a:	4b26      	ldr	r3, [pc, #152]	; (400db4 <pitch_shift_do+0x2cc>)
  400d1c:	4798      	blx	r3
	for (k = 0; k <= FRAME_SIZE_2; k++) {
  400d1e:	f240 2301 	movw	r3, #513	; 0x201
		gFFTworksp[2*k+1] = magn*sin(phase);
  400d22:	f84b 0c04 	str.w	r0, [fp, #-4]
	for (k = 0; k <= FRAME_SIZE_2; k++) {
  400d26:	4599      	cmp	r9, r3
  400d28:	d194      	bne.n	400c54 <pitch_shift_do+0x16c>
  400d2a:	4b2a      	ldr	r3, [pc, #168]	; (400dd4 <pitch_shift_do+0x2ec>)
	}

	/* zero negative frequencies */
	for (k = FFT_FRAME_SIZE+2; k < 2*FFT_FRAME_SIZE; k++) gFFTworksp[k] = 0.;
  400d2c:	2100      	movs	r1, #0
  400d2e:	f603 72f8 	addw	r2, r3, #4088	; 0xff8
  400d32:	f843 1b04 	str.w	r1, [r3], #4
  400d36:	429a      	cmp	r2, r3
  400d38:	d1fb      	bne.n	400d32 <pitch_shift_do+0x24a>
  400d3a:	4b27      	ldr	r3, [pc, #156]	; (400dd8 <pitch_shift_do+0x2f0>)
  400d3c:	4a27      	ldr	r2, [pc, #156]	; (400ddc <pitch_shift_do+0x2f4>)
  400d3e:	f503 6080 	add.w	r0, r3, #1024	; 0x400
	for(k=0; k < FFT_FRAME_SIZE; k++) {
		gOutputAccum[k] += hanning[k]*gFFTworksp[2*k]; 
	}
	*/
	// problem for output 
	for (k = 0; k < STEP_SIZE; k++) gOutFIFO[k] = gOutputAccum[k];
  400d42:	f853 1b04 	ldr.w	r1, [r3], #4
  400d46:	4298      	cmp	r0, r3
  400d48:	f842 1b04 	str.w	r1, [r2], #4
  400d4c:	d1f9      	bne.n	400d42 <pitch_shift_do+0x25a>

	/* shift accumulator */
	memmove(gOutputAccum, gOutputAccum+STEP_SIZE, FFT_FRAME_SIZE*sizeof(float));
  400d4e:	4924      	ldr	r1, [pc, #144]	; (400de0 <pitch_shift_do+0x2f8>)
  400d50:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  400d54:	4b23      	ldr	r3, [pc, #140]	; (400de4 <pitch_shift_do+0x2fc>)
  400d56:	f5a1 6080 	sub.w	r0, r1, #1024	; 0x400

  400d5a:	b009      	add	sp, #36	; 0x24
  400d5c:	ecbd 8b02 	vpop	{d8}
  400d60:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	memmove(gOutputAccum, gOutputAccum+STEP_SIZE, FFT_FRAME_SIZE*sizeof(float));
  400d64:	4718      	bx	r3
  400d66:	bf00      	nop
  400d68:	54442d18 	.word	0x54442d18
  400d6c:	3ff921fb 	.word	0x3ff921fb
  400d70:	6dc9c883 	.word	0x6dc9c883
  400d74:	3fd45f30 	.word	0x3fd45f30
  400d78:	54442d18 	.word	0x54442d18
  400d7c:	400921fb 	.word	0x400921fb
  400d80:	6dc9c883 	.word	0x6dc9c883
  400d84:	3fe45f30 	.word	0x3fe45f30
  400d88:	00000000 	.word	0x00000000
  400d8c:	4036b480 	.word	0x4036b480
  400d90:	6a5a74d3 	.word	0x6a5a74d3
  400d94:	3fb1b5f3 	.word	0x3fb1b5f3
  400d98:	20400a58 	.word	0x20400a58
  400d9c:	20405a58 	.word	0x20405a58
  400da0:	00407761 	.word	0x00407761
  400da4:	004074a1 	.word	0x004074a1
  400da8:	0040773d 	.word	0x0040773d
  400dac:	00407d3d 	.word	0x00407d3d
  400db0:	004074a5 	.word	0x004074a5
  400db4:	00407d8d 	.word	0x00407d8d
  400db8:	00408c85 	.word	0x00408c85
  400dbc:	2040aa60 	.word	0x2040aa60
  400dc0:	20409a60 	.word	0x20409a60
  400dc4:	2040225c 	.word	0x2040225c
  400dc8:	2040925c 	.word	0x2040925c
  400dcc:	00404ecd 	.word	0x00404ecd
  400dd0:	00404f61 	.word	0x00404f61
  400dd4:	20403a60 	.word	0x20403a60
  400dd8:	2040725c 	.word	0x2040725c
  400ddc:	2040625c 	.word	0x2040625c
  400de0:	2040765c 	.word	0x2040765c
  400de4:	00408bbd 	.word	0x00408bbd
  400de8:	20401a58 	.word	0x20401a58
  400dec:	00407809 	.word	0x00407809
  400df0:	20402a58 	.word	0x20402a58

00400df4 <new_cvec>:
*/

#include "aubio_priv.h"
#include "cvec.h"

cvec_t * new_cvec(uint_t length) {
  400df4:	b570      	push	{r4, r5, r6, lr}
  cvec_t * s;
  if ((sint_t)length <= 0) {
  400df6:	1e04      	subs	r4, r0, #0
  400df8:	dd12      	ble.n	400e20 <new_cvec+0x2c>
    return NULL;
  }
  s = AUBIO_NEW(cvec_t);
  400dfa:	4e0a      	ldr	r6, [pc, #40]	; (400e24 <new_cvec+0x30>)
  400dfc:	2101      	movs	r1, #1
  400dfe:	200c      	movs	r0, #12
  400e00:	47b0      	blx	r6
  s->length = length/2 + 1;
  s->norm = AUBIO_ARRAY(smpl_t,s->length);
  400e02:	2101      	movs	r1, #1
  s = AUBIO_NEW(cvec_t);
  400e04:	4605      	mov	r5, r0
  s->length = length/2 + 1;
  400e06:	0860      	lsrs	r0, r4, #1
  400e08:	4408      	add	r0, r1
  s->norm = AUBIO_ARRAY(smpl_t,s->length);
  400e0a:	0084      	lsls	r4, r0, #2
  s->length = length/2 + 1;
  400e0c:	6028      	str	r0, [r5, #0]
  s->norm = AUBIO_ARRAY(smpl_t,s->length);
  400e0e:	4620      	mov	r0, r4
  400e10:	47b0      	blx	r6
  s->phas = AUBIO_ARRAY(smpl_t,s->length);
  400e12:	2101      	movs	r1, #1
  s->norm = AUBIO_ARRAY(smpl_t,s->length);
  400e14:	6068      	str	r0, [r5, #4]
  s->phas = AUBIO_ARRAY(smpl_t,s->length);
  400e16:	4620      	mov	r0, r4
  400e18:	47b0      	blx	r6
  400e1a:	60a8      	str	r0, [r5, #8]
  return s;
}
  400e1c:	4628      	mov	r0, r5
  400e1e:	bd70      	pop	{r4, r5, r6, pc}
    return NULL;
  400e20:	2500      	movs	r5, #0
  400e22:	e7fb      	b.n	400e1c <new_cvec+0x28>
  400e24:	00408421 	.word	0x00408421

00400e28 <new_aubio_fft>:
#endif /* using OOURA */

  fvec_t * compspec;
};

aubio_fft_t * new_aubio_fft (uint_t winsize) {
  400e28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400e2c:	4605      	mov	r5, r0
  aubio_fft_t * s = AUBIO_NEW(aubio_fft_t);
  400e2e:	2101      	movs	r1, #1
  400e30:	201c      	movs	r0, #28
  400e32:	4e1b      	ldr	r6, [pc, #108]	; (400ea0 <new_aubio_fft+0x78>)
  400e34:	47b0      	blx	r6
  if ((sint_t)winsize < 2) {
  400e36:	2d01      	cmp	r5, #1
  aubio_fft_t * s = AUBIO_NEW(aubio_fft_t);
  400e38:	4604      	mov	r4, r0
  if ((sint_t)winsize < 2) {
  400e3a:	dd29      	ble.n	400e90 <new_aubio_fft+0x68>
    AUBIO_ERR("fft: failed to initialize. IPP error: %d\n", status);
    goto beach;
  }

#else                         // using OOURA
  if (aubio_is_power_of_two(winsize) != 1) {
  400e3c:	4628      	mov	r0, r5
  400e3e:	4b19      	ldr	r3, [pc, #100]	; (400ea4 <new_aubio_fft+0x7c>)
  400e40:	4798      	blx	r3
  400e42:	2801      	cmp	r0, #1
  400e44:	4607      	mov	r7, r0
  400e46:	d123      	bne.n	400e90 <new_aubio_fft+0x68>
    //AUBIO_ERR("fft: can only create with sizes power of two, requested %d,"
       // " try recompiling aubio with --enable-fftw3\n", winsize);
    goto beach;
  }
  s->winsize = winsize;
  s->fft_size = winsize / 2 + 1;
  400e48:	086b      	lsrs	r3, r5, #1
  s->compspec = new_fvec(winsize);
  400e4a:	4a17      	ldr	r2, [pc, #92]	; (400ea8 <new_aubio_fft+0x80>)
  s->winsize = winsize;
  400e4c:	6025      	str	r5, [r4, #0]
  s->compspec = new_fvec(winsize);
  400e4e:	4628      	mov	r0, r5
  s->fft_size = winsize / 2 + 1;
  400e50:	3301      	adds	r3, #1
  400e52:	6063      	str	r3, [r4, #4]
  s->compspec = new_fvec(winsize);
  400e54:	4790      	blx	r2
  s->in    = AUBIO_ARRAY(smpl_t, s->winsize);
  400e56:	6825      	ldr	r5, [r4, #0]
  s->compspec = new_fvec(winsize);
  400e58:	61a0      	str	r0, [r4, #24]
  s->in    = AUBIO_ARRAY(smpl_t, s->winsize);
  400e5a:	4639      	mov	r1, r7
  400e5c:	00ad      	lsls	r5, r5, #2
  400e5e:	4628      	mov	r0, r5
  400e60:	47b0      	blx	r6
  s->out   = AUBIO_ARRAY(smpl_t, s->winsize);
  400e62:	4639      	mov	r1, r7
  s->in    = AUBIO_ARRAY(smpl_t, s->winsize);
  400e64:	60a0      	str	r0, [r4, #8]
  s->out   = AUBIO_ARRAY(smpl_t, s->winsize);
  400e66:	4628      	mov	r0, r5
  400e68:	47b0      	blx	r6
  s->ip    = AUBIO_ARRAY(int   , s->fft_size);
  400e6a:	6865      	ldr	r5, [r4, #4]
  s->out   = AUBIO_ARRAY(smpl_t, s->winsize);
  400e6c:	60e0      	str	r0, [r4, #12]
  s->ip    = AUBIO_ARRAY(int   , s->fft_size);
  400e6e:	4639      	mov	r1, r7
  400e70:	00ad      	lsls	r5, r5, #2
  400e72:	4628      	mov	r0, r5
  400e74:	47b0      	blx	r6
  400e76:	4680      	mov	r8, r0
  s->w     = AUBIO_ARRAY(smpl_t, s->fft_size);
  400e78:	4639      	mov	r1, r7
  400e7a:	4628      	mov	r0, r5
  s->ip    = AUBIO_ARRAY(int   , s->fft_size);
  400e7c:	f8c4 8014 	str.w	r8, [r4, #20]
  s->w     = AUBIO_ARRAY(smpl_t, s->fft_size);
  400e80:	47b0      	blx	r6
  s->ip[0] = 0;
  400e82:	2300      	movs	r3, #0
  s->w     = AUBIO_ARRAY(smpl_t, s->fft_size);
  400e84:	6120      	str	r0, [r4, #16]
  return s;

beach:
  AUBIO_FREE(s);
  return NULL;
}
  400e86:	4620      	mov	r0, r4
  s->ip[0] = 0;
  400e88:	f8c8 3000 	str.w	r3, [r8]
}
  400e8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  AUBIO_FREE(s);
  400e90:	4620      	mov	r0, r4
  return NULL;
  400e92:	2400      	movs	r4, #0
  AUBIO_FREE(s);
  400e94:	4b05      	ldr	r3, [pc, #20]	; (400eac <new_aubio_fft+0x84>)
  400e96:	4798      	blx	r3
}
  400e98:	4620      	mov	r0, r4
  400e9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400e9e:	bf00      	nop
  400ea0:	00408421 	.word	0x00408421
  400ea4:	00401351 	.word	0x00401351
  400ea8:	00401141 	.word	0x00401141
  400eac:	00408519 	.word	0x00408519

00400eb0 <aubio_fft_do_complex>:
void aubio_fft_rdo(aubio_fft_t * s, const cvec_t * spectrum, fvec_t * output) {
  aubio_fft_get_realimag(spectrum, s->compspec);
  aubio_fft_rdo_complex(s, s->compspec, output);
}

void aubio_fft_do_complex(aubio_fft_t * s, const fvec_t * input, fvec_t * compspec) {
  400eb0:	b5f0      	push	{r4, r5, r6, r7, lr}
  400eb2:	4604      	mov	r4, r0
  uint_t i;
#ifndef HAVE_MEMCPY_HACKS
  for (i=0; i < s->winsize; i++) {
  400eb4:	6800      	ldr	r0, [r0, #0]
void aubio_fft_do_complex(aubio_fft_t * s, const fvec_t * input, fvec_t * compspec) {
  400eb6:	b083      	sub	sp, #12
  400eb8:	4615      	mov	r5, r2
  for (i=0; i < s->winsize; i++) {
  400eba:	b158      	cbz	r0, 400ed4 <aubio_fft_do_complex+0x24>
  400ebc:	2300      	movs	r3, #0
  400ebe:	009e      	lsls	r6, r3, #2
    s->in[i] = input->data[i];
  400ec0:	6848      	ldr	r0, [r1, #4]
  400ec2:	68a2      	ldr	r2, [r4, #8]
  for (i=0; i < s->winsize; i++) {
  400ec4:	3301      	adds	r3, #1
    s->in[i] = input->data[i];
  400ec6:	4430      	add	r0, r6
  400ec8:	4432      	add	r2, r6
  400eca:	6800      	ldr	r0, [r0, #0]
  400ecc:	6010      	str	r0, [r2, #0]
  for (i=0; i < s->winsize; i++) {
  400ece:	6820      	ldr	r0, [r4, #0]
  400ed0:	4298      	cmp	r0, r3
  400ed2:	d8f4      	bhi.n	400ebe <aubio_fft_do_complex+0xe>
    compspec->data[i] = s->complexOut[i].re;
    compspec->data[s->fft_size - i] = s->complexOut[i].im;
  }

#else                         // using OOURA
  aubio_ooura_rdft(s->winsize, 1, s->in, s->ip, s->w);
  400ed4:	6927      	ldr	r7, [r4, #16]
  400ed6:	2101      	movs	r1, #1
  400ed8:	6963      	ldr	r3, [r4, #20]
  400eda:	68a2      	ldr	r2, [r4, #8]
  400edc:	4e18      	ldr	r6, [pc, #96]	; (400f40 <aubio_fft_do_complex+0x90>)
  400ede:	9700      	str	r7, [sp, #0]
  400ee0:	47b0      	blx	r6
  compspec->data[0] = s->in[0];
  400ee2:	68a2      	ldr	r2, [r4, #8]
  400ee4:	686b      	ldr	r3, [r5, #4]
  400ee6:	6812      	ldr	r2, [r2, #0]
  400ee8:	601a      	str	r2, [r3, #0]
  compspec->data[s->winsize / 2] = s->in[1];
  400eea:	6822      	ldr	r2, [r4, #0]
  400eec:	686b      	ldr	r3, [r5, #4]
  400eee:	0852      	lsrs	r2, r2, #1
  400ef0:	68a1      	ldr	r1, [r4, #8]
  400ef2:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  400ef6:	684a      	ldr	r2, [r1, #4]
  400ef8:	601a      	str	r2, [r3, #0]
  for (i = 1; i < s->fft_size - 1; i++) {
  400efa:	6863      	ldr	r3, [r4, #4]
  400efc:	3b01      	subs	r3, #1
  400efe:	2b01      	cmp	r3, #1
  400f00:	d91c      	bls.n	400f3c <aubio_fft_do_complex+0x8c>
  400f02:	260c      	movs	r6, #12
  400f04:	2301      	movs	r3, #1
    compspec->data[i] = s->in[2 * i];
  400f06:	68a1      	ldr	r1, [r4, #8]
  400f08:	686a      	ldr	r2, [r5, #4]
  400f0a:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  400f0e:	eb02 0283 	add.w	r2, r2, r3, lsl #2
  400f12:	6809      	ldr	r1, [r1, #0]
  400f14:	6011      	str	r1, [r2, #0]
    compspec->data[s->winsize - i] = - s->in[2 * i + 1];
  400f16:	68a2      	ldr	r2, [r4, #8]
  400f18:	6821      	ldr	r1, [r4, #0]
  400f1a:	1990      	adds	r0, r2, r6
  400f1c:	686a      	ldr	r2, [r5, #4]
  400f1e:	1ac9      	subs	r1, r1, r3
  for (i = 1; i < s->fft_size - 1; i++) {
  400f20:	3301      	adds	r3, #1
    compspec->data[s->winsize - i] = - s->in[2 * i + 1];
  400f22:	edd0 7a00 	vldr	s15, [r0]
  400f26:	3608      	adds	r6, #8
  400f28:	eb02 0281 	add.w	r2, r2, r1, lsl #2
  400f2c:	eef1 7a67 	vneg.f32	s15, s15
  400f30:	edc2 7a00 	vstr	s15, [r2]
  for (i = 1; i < s->fft_size - 1; i++) {
  400f34:	6862      	ldr	r2, [r4, #4]
  400f36:	3a01      	subs	r2, #1
  400f38:	429a      	cmp	r2, r3
  400f3a:	d8e4      	bhi.n	400f06 <aubio_fft_do_complex+0x56>
  }
#endif /* using OOURA */
}
  400f3c:	b003      	add	sp, #12
  400f3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
  400f40:	0040242d 	.word	0x0040242d

00400f44 <aubio_fft_rdo_complex>:

void aubio_fft_rdo_complex(aubio_fft_t * s, const fvec_t * compspec, fvec_t * output) {
  400f44:	b5f0      	push	{r4, r5, r6, r7, lr}
  aubio_ippsFFTInv_CCSToR((const aubio_IppFloat *)s->complexOut, output->data, s->fftSpec, s->memBuffer);
  // apply scaling
  aubio_ippsMulC(output->data, 1.0 / s->winsize, output->data, s->fft_size);

#else                         // using OOURA
  smpl_t scale = 2.0 / s->winsize;
  400f46:	4b30      	ldr	r3, [pc, #192]	; (401008 <aubio_fft_rdo_complex+0xc4>)
void aubio_fft_rdo_complex(aubio_fft_t * s, const fvec_t * compspec, fvec_t * output) {
  400f48:	4604      	mov	r4, r0
  400f4a:	460e      	mov	r6, r1
  400f4c:	4615      	mov	r5, r2
  smpl_t scale = 2.0 / s->winsize;
  400f4e:	4f2f      	ldr	r7, [pc, #188]	; (40100c <aubio_fft_rdo_complex+0xc8>)
void aubio_fft_rdo_complex(aubio_fft_t * s, const fvec_t * compspec, fvec_t * output) {
  400f50:	ed2d 8b02 	vpush	{d8}
  400f54:	b083      	sub	sp, #12
  smpl_t scale = 2.0 / s->winsize;
  400f56:	6800      	ldr	r0, [r0, #0]
  400f58:	4798      	blx	r3
  400f5a:	4602      	mov	r2, r0
  400f5c:	460b      	mov	r3, r1
  400f5e:	2000      	movs	r0, #0
  400f60:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  400f64:	47b8      	blx	r7
  400f66:	4b2a      	ldr	r3, [pc, #168]	; (401010 <aubio_fft_rdo_complex+0xcc>)
  400f68:	4798      	blx	r3
  s->out[0] = compspec->data[0];
  400f6a:	6872      	ldr	r2, [r6, #4]
  400f6c:	68e3      	ldr	r3, [r4, #12]
  smpl_t scale = 2.0 / s->winsize;
  400f6e:	ee08 0a10 	vmov	s16, r0
  s->out[0] = compspec->data[0];
  400f72:	6812      	ldr	r2, [r2, #0]
  400f74:	601a      	str	r2, [r3, #0]
  s->out[1] = compspec->data[s->winsize / 2];
  400f76:	6822      	ldr	r2, [r4, #0]
  400f78:	6873      	ldr	r3, [r6, #4]
  400f7a:	0852      	lsrs	r2, r2, #1
  400f7c:	68e1      	ldr	r1, [r4, #12]
  400f7e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  400f82:	681b      	ldr	r3, [r3, #0]
  400f84:	604b      	str	r3, [r1, #4]
  for (i = 1; i < s->fft_size - 1; i++) {
  400f86:	6863      	ldr	r3, [r4, #4]
  400f88:	3b01      	subs	r3, #1
  400f8a:	2b01      	cmp	r3, #1
  400f8c:	d91c      	bls.n	400fc8 <aubio_fft_rdo_complex+0x84>
  400f8e:	270c      	movs	r7, #12
  400f90:	2301      	movs	r3, #1
    s->out[2 * i] = compspec->data[i];
  400f92:	6871      	ldr	r1, [r6, #4]
  400f94:	68e2      	ldr	r2, [r4, #12]
  400f96:	eb01 0183 	add.w	r1, r1, r3, lsl #2
  400f9a:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
  400f9e:	6809      	ldr	r1, [r1, #0]
  400fa0:	6011      	str	r1, [r2, #0]
    s->out[2 * i + 1] = - compspec->data[s->winsize - i];
  400fa2:	6822      	ldr	r2, [r4, #0]
  400fa4:	6871      	ldr	r1, [r6, #4]
  400fa6:	1ad0      	subs	r0, r2, r3
  400fa8:	68e2      	ldr	r2, [r4, #12]
  for (i = 1; i < s->fft_size - 1; i++) {
  400faa:	3301      	adds	r3, #1
    s->out[2 * i + 1] = - compspec->data[s->winsize - i];
  400fac:	eb01 0180 	add.w	r1, r1, r0, lsl #2
  400fb0:	443a      	add	r2, r7
  400fb2:	3708      	adds	r7, #8
  400fb4:	edd1 7a00 	vldr	s15, [r1]
  400fb8:	eef1 7a67 	vneg.f32	s15, s15
  400fbc:	edc2 7a00 	vstr	s15, [r2]
  for (i = 1; i < s->fft_size - 1; i++) {
  400fc0:	6862      	ldr	r2, [r4, #4]
  400fc2:	3a01      	subs	r2, #1
  400fc4:	429a      	cmp	r2, r3
  400fc6:	d8e4      	bhi.n	400f92 <aubio_fft_rdo_complex+0x4e>
  }
  aubio_ooura_rdft(s->winsize, -1, s->out, s->ip, s->w);
  400fc8:	6927      	ldr	r7, [r4, #16]
  400fca:	f04f 31ff 	mov.w	r1, #4294967295
  400fce:	6963      	ldr	r3, [r4, #20]
  400fd0:	68e2      	ldr	r2, [r4, #12]
  400fd2:	6820      	ldr	r0, [r4, #0]
  400fd4:	4e0f      	ldr	r6, [pc, #60]	; (401014 <aubio_fft_rdo_complex+0xd0>)
  400fd6:	9700      	str	r7, [sp, #0]
  400fd8:	47b0      	blx	r6
  for (i=0; i < s->winsize; i++) {
  400fda:	6823      	ldr	r3, [r4, #0]
  400fdc:	b17b      	cbz	r3, 400ffe <aubio_fft_rdo_complex+0xba>
  400fde:	2300      	movs	r3, #0
  400fe0:	0098      	lsls	r0, r3, #2
    output->data[i] = s->out[i] * scale;
  400fe2:	68e1      	ldr	r1, [r4, #12]
  400fe4:	686a      	ldr	r2, [r5, #4]
  for (i=0; i < s->winsize; i++) {
  400fe6:	3301      	adds	r3, #1
    output->data[i] = s->out[i] * scale;
  400fe8:	4401      	add	r1, r0
  400fea:	4402      	add	r2, r0
  400fec:	edd1 7a00 	vldr	s15, [r1]
  400ff0:	ee67 7a88 	vmul.f32	s15, s15, s16
  400ff4:	edc2 7a00 	vstr	s15, [r2]
  for (i=0; i < s->winsize; i++) {
  400ff8:	6822      	ldr	r2, [r4, #0]
  400ffa:	429a      	cmp	r2, r3
  400ffc:	d8f0      	bhi.n	400fe0 <aubio_fft_rdo_complex+0x9c>
  }
#endif
}
  400ffe:	b003      	add	sp, #12
  401000:	ecbd 8b02 	vpop	{d8}
  401004:	bdf0      	pop	{r4, r5, r6, r7, pc}
  401006:	bf00      	nop
  401008:	0040771d 	.word	0x0040771d
  40100c:	00407a5d 	.word	0x00407a5d
  401010:	00407d8d 	.word	0x00407d8d
  401014:	0040242d 	.word	0x0040242d

00401018 <aubio_fft_get_phas>:
void aubio_fft_get_realimag(const cvec_t * spectrum, fvec_t * compspec) {
  aubio_fft_get_imag(spectrum, compspec);
  aubio_fft_get_real(spectrum, compspec);
}

void aubio_fft_get_phas(const fvec_t * compspec, cvec_t * spectrum) {
  401018:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  uint_t i;
  if (compspec->data[0] < 0) {
  40101c:	6843      	ldr	r3, [r0, #4]
void aubio_fft_get_phas(const fvec_t * compspec, cvec_t * spectrum) {
  40101e:	4606      	mov	r6, r0
  401020:	460f      	mov	r7, r1
  if (compspec->data[0] < 0) {
  401022:	edd3 7a00 	vldr	s15, [r3]
  401026:	eef5 7ac0 	vcmpe.f32	s15, #0.0
  40102a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  40102e:	d430      	bmi.n	401092 <aubio_fft_get_phas+0x7a>
  401030:	2200      	movs	r2, #0
    spectrum->phas[0] = PI;
  } else {
    spectrum->phas[0] = 0.;
  401032:	688b      	ldr	r3, [r1, #8]
  401034:	601a      	str	r2, [r3, #0]
  for (i = 1; i < spectrum->length / 2; i++) {
    ELEM_SWAP(compspec->data[spectrum->length + i - 1],
        compspec->data[compspec->length - i]);
  }
#else
  for (i=1; i < spectrum->length - 1; i++) {
  401036:	683b      	ldr	r3, [r7, #0]
  401038:	1e5a      	subs	r2, r3, #1
  40103a:	2a01      	cmp	r2, #1
  40103c:	d915      	bls.n	40106a <aubio_fft_get_phas+0x52>
  40103e:	2401      	movs	r4, #1
  401040:	4d19      	ldr	r5, [pc, #100]	; (4010a8 <aubio_fft_get_phas+0x90>)
    spectrum->phas[i] = ATAN2(compspec->data[compspec->length-i],
  401042:	6832      	ldr	r2, [r6, #0]
  401044:	ea4f 0884 	mov.w	r8, r4, lsl #2
  401048:	6873      	ldr	r3, [r6, #4]
  40104a:	1b12      	subs	r2, r2, r4
  for (i=1; i < spectrum->length - 1; i++) {
  40104c:	3401      	adds	r4, #1
    spectrum->phas[i] = ATAN2(compspec->data[compspec->length-i],
  40104e:	eb03 0108 	add.w	r1, r3, r8
  401052:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  401056:	6809      	ldr	r1, [r1, #0]
  401058:	6818      	ldr	r0, [r3, #0]
  40105a:	47a8      	blx	r5
  40105c:	68bb      	ldr	r3, [r7, #8]
  40105e:	4443      	add	r3, r8
  401060:	6018      	str	r0, [r3, #0]
  for (i=1; i < spectrum->length - 1; i++) {
  401062:	683b      	ldr	r3, [r7, #0]
  401064:	1e5a      	subs	r2, r3, #1
  401066:	42a2      	cmp	r2, r4
  401068:	d8eb      	bhi.n	401042 <aubio_fft_get_phas+0x2a>
        compspec->data[i]);
  }
#endif
  if (compspec->data[compspec->length/2] < 0) {
  40106a:	e896 0006 	ldmia.w	r6, {r1, r2}
  40106e:	2000      	movs	r0, #0
  401070:	0849      	lsrs	r1, r1, #1
  401072:	eb02 0281 	add.w	r2, r2, r1, lsl #2
  401076:	edd2 7a00 	vldr	s15, [r2]
    spectrum->phas[spectrum->length - 1] = PI;
  40107a:	68ba      	ldr	r2, [r7, #8]
  if (compspec->data[compspec->length/2] < 0) {
  40107c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
  401080:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  401084:	d409      	bmi.n	40109a <aubio_fft_get_phas+0x82>
  } else {
    spectrum->phas[spectrum->length - 1] = 0.;
  401086:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  40108a:	f843 0c04 	str.w	r0, [r3, #-4]
  40108e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    spectrum->phas[0] = PI;
  401092:	688b      	ldr	r3, [r1, #8]
  401094:	4a05      	ldr	r2, [pc, #20]	; (4010ac <aubio_fft_get_phas+0x94>)
  401096:	601a      	str	r2, [r3, #0]
  401098:	e7cd      	b.n	401036 <aubio_fft_get_phas+0x1e>
    spectrum->phas[spectrum->length - 1] = PI;
  40109a:	4904      	ldr	r1, [pc, #16]	; (4010ac <aubio_fft_get_phas+0x94>)
  40109c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  4010a0:	f843 1c04 	str.w	r1, [r3, #-4]
  4010a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4010a8:	004050dd 	.word	0x004050dd
  4010ac:	40490fdb 	.word	0x40490fdb

004010b0 <aubio_fft_get_norm>:
  }
}

void aubio_fft_get_norm(const fvec_t * compspec, cvec_t * spectrum) {
  4010b0:	b4f0      	push	{r4, r5, r6, r7}
  uint_t i = 0;
  spectrum->norm[0] = ABS(compspec->data[0]);
  4010b2:	6842      	ldr	r2, [r0, #4]
  4010b4:	684b      	ldr	r3, [r1, #4]
  4010b6:	edd2 7a00 	vldr	s15, [r2]
  4010ba:	eef0 7ae7 	vabs.f32	s15, s15
  4010be:	edc3 7a00 	vstr	s15, [r3]
  for (i=1; i < spectrum->length - 1; i++) {
  4010c2:	680a      	ldr	r2, [r1, #0]
  4010c4:	1e53      	subs	r3, r2, #1
  4010c6:	2b01      	cmp	r3, #1
  4010c8:	d91a      	bls.n	401100 <aubio_fft_get_norm+0x50>
  4010ca:	2301      	movs	r3, #1
    spectrum->norm[i] = SQRT(SQR(compspec->data[i])
        + SQR(compspec->data[compspec->length - i]) );
  4010cc:	6805      	ldr	r5, [r0, #0]
    spectrum->norm[i] = SQRT(SQR(compspec->data[i])
  4010ce:	009e      	lsls	r6, r3, #2
  4010d0:	6842      	ldr	r2, [r0, #4]
        + SQR(compspec->data[compspec->length - i]) );
  4010d2:	1aed      	subs	r5, r5, r3
    spectrum->norm[i] = SQRT(SQR(compspec->data[i])
  4010d4:	684c      	ldr	r4, [r1, #4]
  4010d6:	1997      	adds	r7, r2, r6
  for (i=1; i < spectrum->length - 1; i++) {
  4010d8:	3301      	adds	r3, #1
        + SQR(compspec->data[compspec->length - i]) );
  4010da:	eb02 0285 	add.w	r2, r2, r5, lsl #2
    spectrum->norm[i] = SQRT(SQR(compspec->data[i])
  4010de:	4434      	add	r4, r6
  4010e0:	ed97 7a00 	vldr	s14, [r7]
        + SQR(compspec->data[compspec->length - i]) );
  4010e4:	edd2 7a00 	vldr	s15, [r2]
  4010e8:	ee67 7aa7 	vmul.f32	s15, s15, s15
    spectrum->norm[i] = SQRT(SQR(compspec->data[i])
  4010ec:	eee7 7a07 	vfma.f32	s15, s14, s14
  4010f0:	eeb1 7ae7 	vsqrt.f32	s14, s15
  4010f4:	ed84 7a00 	vstr	s14, [r4]
  for (i=1; i < spectrum->length - 1; i++) {
  4010f8:	680a      	ldr	r2, [r1, #0]
  4010fa:	1e54      	subs	r4, r2, #1
  4010fc:	429c      	cmp	r4, r3
  4010fe:	d8e5      	bhi.n	4010cc <aubio_fft_get_norm+0x1c>
  }
  spectrum->norm[spectrum->length-1] =
    ABS(compspec->data[compspec->length/2]);
  401100:	6804      	ldr	r4, [r0, #0]
  401102:	6840      	ldr	r0, [r0, #4]
  401104:	0864      	lsrs	r4, r4, #1
  spectrum->norm[spectrum->length-1] =
  401106:	684b      	ldr	r3, [r1, #4]
    ABS(compspec->data[compspec->length/2]);
  401108:	eb00 0184 	add.w	r1, r0, r4, lsl #2
  spectrum->norm[spectrum->length-1] =
  40110c:	eb03 0282 	add.w	r2, r3, r2, lsl #2
    ABS(compspec->data[compspec->length/2]);
  401110:	edd1 7a00 	vldr	s15, [r1]
  401114:	eef0 7ae7 	vabs.f32	s15, s15
  spectrum->norm[spectrum->length-1] =
  401118:	ed42 7a01 	vstr	s15, [r2, #-4]
}
  40111c:	bcf0      	pop	{r4, r5, r6, r7}
  40111e:	4770      	bx	lr

00401120 <aubio_fft_get_spectrum>:
void aubio_fft_get_spectrum(const fvec_t * compspec, cvec_t * spectrum) {
  401120:	b570      	push	{r4, r5, r6, lr}
  401122:	4604      	mov	r4, r0
  401124:	460d      	mov	r5, r1
  aubio_fft_get_phas(compspec, spectrum);
  401126:	4b04      	ldr	r3, [pc, #16]	; (401138 <aubio_fft_get_spectrum+0x18>)
  401128:	4798      	blx	r3
  aubio_fft_get_norm(compspec, spectrum);
  40112a:	4629      	mov	r1, r5
  40112c:	4620      	mov	r0, r4
  40112e:	4b03      	ldr	r3, [pc, #12]	; (40113c <aubio_fft_get_spectrum+0x1c>)
}
  401130:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  aubio_fft_get_norm(compspec, spectrum);
  401134:	4718      	bx	r3
  401136:	bf00      	nop
  401138:	00401019 	.word	0x00401019
  40113c:	004010b1 	.word	0x004010b1

00401140 <new_fvec>:
*/

#include "aubio_priv.h"
#include "fvec.h"

fvec_t * new_fvec(uint_t length) {
  401140:	b570      	push	{r4, r5, r6, lr}
  fvec_t * s;
  if ((sint_t)length <= 0) {
  401142:	1e04      	subs	r4, r0, #0
  401144:	dd0b      	ble.n	40115e <new_fvec+0x1e>
    return NULL;
  }
  s = AUBIO_NEW(fvec_t);
  401146:	2101      	movs	r1, #1
  401148:	4e06      	ldr	r6, [pc, #24]	; (401164 <new_fvec+0x24>)
  40114a:	2008      	movs	r0, #8
  40114c:	47b0      	blx	r6
  40114e:	4605      	mov	r5, r0
  s->length = length;
  s->data = AUBIO_ARRAY(smpl_t, s->length);
  401150:	2101      	movs	r1, #1
  401152:	00a0      	lsls	r0, r4, #2
  s->length = length;
  401154:	602c      	str	r4, [r5, #0]
  s->data = AUBIO_ARRAY(smpl_t, s->length);
  401156:	47b0      	blx	r6
  401158:	6068      	str	r0, [r5, #4]
  return s;
}
  40115a:	4628      	mov	r0, r5
  40115c:	bd70      	pop	{r4, r5, r6, pc}
    return NULL;
  40115e:	2500      	movs	r5, #0
  401160:	e7fb      	b.n	40115a <new_fvec+0x1a>
  401162:	bf00      	nop
  401164:	00408421 	.word	0x00408421

00401168 <fvec_rev>:

void fvec_ones(fvec_t *s) {
  fvec_set_all (s, 1.);
}

void fvec_rev(fvec_t *s) {
  401168:	b430      	push	{r4, r5}
  uint_t j;
  for (j=0; j< FLOOR((smpl_t)s->length/2); j++) {
  40116a:	2300      	movs	r3, #0
  40116c:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
    ELEM_SWAP(s->data[j], s->data[s->length-1-j]);
  401170:	f06f 4440 	mvn.w	r4, #3221225472	; 0xc0000000
  for (j=0; j< FLOOR((smpl_t)s->length/2); j++) {
  401174:	e00f      	b.n	401196 <fvec_rev+0x2e>
    ELEM_SWAP(s->data[j], s->data[s->length-1-j]);
  401176:	6841      	ldr	r1, [r0, #4]
  401178:	eb01 0282 	add.w	r2, r1, r2, lsl #2
  40117c:	eb01 0183 	add.w	r1, r1, r3, lsl #2
  401180:	6812      	ldr	r2, [r2, #0]
  401182:	680d      	ldr	r5, [r1, #0]
  401184:	600a      	str	r2, [r1, #0]
  401186:	6802      	ldr	r2, [r0, #0]
  401188:	6841      	ldr	r1, [r0, #4]
  40118a:	4422      	add	r2, r4
  40118c:	1ad2      	subs	r2, r2, r3
  40118e:	3301      	adds	r3, #1
  401190:	eb01 0282 	add.w	r2, r1, r2, lsl #2
  401194:	6015      	str	r5, [r2, #0]
  for (j=0; j< FLOOR((smpl_t)s->length/2); j++) {
  401196:	edd0 7a00 	vldr	s15, [r0]
  40119a:	ee07 3a10 	vmov	s14, r3
    ELEM_SWAP(s->data[j], s->data[s->length-1-j]);
  40119e:	6802      	ldr	r2, [r0, #0]
  for (j=0; j< FLOOR((smpl_t)s->length/2); j++) {
  4011a0:	eef8 7a67 	vcvt.f32.u32	s15, s15
  4011a4:	eeb8 7a47 	vcvt.f32.u32	s14, s14
    ELEM_SWAP(s->data[j], s->data[s->length-1-j]);
  4011a8:	4422      	add	r2, r4
  for (j=0; j< FLOOR((smpl_t)s->length/2); j++) {
  4011aa:	ee67 7aa6 	vmul.f32	s15, s15, s13
    ELEM_SWAP(s->data[j], s->data[s->length-1-j]);
  4011ae:	1ad2      	subs	r2, r2, r3
  for (j=0; j< FLOOR((smpl_t)s->length/2); j++) {
  4011b0:	fefb 7a67 	vrintm.f32	s15, s15
  4011b4:	eeb4 7ae7 	vcmpe.f32	s14, s15
  4011b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4011bc:	d4db      	bmi.n	401176 <fvec_rev+0xe>
  }
}
  4011be:	bc30      	pop	{r4, r5}
  4011c0:	4770      	bx	lr
  4011c2:	bf00      	nop

004011c4 <fvec_weighted_copy>:
  }
#endif /* HAVE_ACCELERATE */
}

void fvec_weighted_copy(const fvec_t *in, const fvec_t *weight, fvec_t *out) {
  uint_t length = MIN(in->length, MIN(out->length, weight->length));
  4011c4:	6813      	ldr	r3, [r2, #0]
void fvec_weighted_copy(const fvec_t *in, const fvec_t *weight, fvec_t *out) {
  4011c6:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint_t length = MIN(in->length, MIN(out->length, weight->length));
  4011c8:	6805      	ldr	r5, [r0, #0]
  4011ca:	680c      	ldr	r4, [r1, #0]
  4011cc:	42ab      	cmp	r3, r5
  4011ce:	bf28      	it	cs
  4011d0:	462b      	movcs	r3, r5
  4011d2:	42a3      	cmp	r3, r4
  4011d4:	bf28      	it	cs
  4011d6:	4623      	movcs	r3, r4
  aubio_ippsMul(in->data, weight->data, out->data, (int)length);
#elif defined(HAVE_ACCELERATE)
  aubio_vDSP_vmul(in->data, 1, weight->data, 1, out->data, 1, length);
#else
  uint_t j;
  for (j = 0; j < length; j++) {
  4011d8:	b19b      	cbz	r3, 401202 <fvec_weighted_copy+0x3e>
  4011da:	469e      	mov	lr, r3
  4011dc:	2300      	movs	r3, #0
  4011de:	009e      	lsls	r6, r3, #2
    out->data[j] = in->data[j] * weight->data[j];
  4011e0:	6844      	ldr	r4, [r0, #4]
  4011e2:	684d      	ldr	r5, [r1, #4]
  for (j = 0; j < length; j++) {
  4011e4:	3301      	adds	r3, #1
    out->data[j] = in->data[j] * weight->data[j];
  4011e6:	19a7      	adds	r7, r4, r6
  4011e8:	6854      	ldr	r4, [r2, #4]
  4011ea:	4435      	add	r5, r6
  for (j = 0; j < length; j++) {
  4011ec:	459e      	cmp	lr, r3
    out->data[j] = in->data[j] * weight->data[j];
  4011ee:	edd7 7a00 	vldr	s15, [r7]
  4011f2:	4434      	add	r4, r6
  4011f4:	ed95 7a00 	vldr	s14, [r5]
  4011f8:	ee67 7a87 	vmul.f32	s15, s15, s14
  4011fc:	edc4 7a00 	vstr	s15, [r4]
  for (j = 0; j < length; j++) {
  401200:	d1ed      	bne.n	4011de <fvec_weighted_copy+0x1a>
  401202:	bdf0      	pop	{r4, r5, r6, r7, pc}

00401204 <fvec_copy>:
  }
#endif
}

void fvec_copy(const fvec_t *s, fvec_t *t) {
  if (s->length != t->length) {
  401204:	6803      	ldr	r3, [r0, #0]
  401206:	680a      	ldr	r2, [r1, #0]
  401208:	4293      	cmp	r3, r2
  40120a:	d000      	beq.n	40120e <fvec_copy+0xa>
  uint_t j;
  for (j = 0; j < t->length; j++) {
    t->data[j] = s->data[j];
  }
#endif
}
  40120c:	4770      	bx	lr
  for (j = 0; j < t->length; j++) {
  40120e:	2b00      	cmp	r3, #0
  401210:	d0fc      	beq.n	40120c <fvec_copy+0x8>
  401212:	2300      	movs	r3, #0
void fvec_copy(const fvec_t *s, fvec_t *t) {
  401214:	b430      	push	{r4, r5}
  401216:	009d      	lsls	r5, r3, #2
    t->data[j] = s->data[j];
  401218:	6844      	ldr	r4, [r0, #4]
  40121a:	684a      	ldr	r2, [r1, #4]
  for (j = 0; j < t->length; j++) {
  40121c:	3301      	adds	r3, #1
    t->data[j] = s->data[j];
  40121e:	442c      	add	r4, r5
  401220:	442a      	add	r2, r5
  401222:	6824      	ldr	r4, [r4, #0]
  401224:	6014      	str	r4, [r2, #0]
  for (j = 0; j < t->length; j++) {
  401226:	680a      	ldr	r2, [r1, #0]
  401228:	429a      	cmp	r2, r3
  40122a:	d8f4      	bhi.n	401216 <fvec_copy+0x12>
}
  40122c:	bc30      	pop	{r4, r5}
  40122e:	4770      	bx	lr

00401230 <fvec_sum>:
  aubio_ippsSum(s->data, (int)s->length, &tmp);
#elif defined(HAVE_ACCELERATE)
  aubio_vDSP_sve(s->data, 1, &tmp, s->length);
#else
  uint_t j;
  for (j = 0; j < s->length; j++) {
  401230:	6802      	ldr	r2, [r0, #0]
  401232:	b16a      	cbz	r2, 401250 <fvec_sum+0x20>
  401234:	6843      	ldr	r3, [r0, #4]
  401236:	eddf 7a08 	vldr	s15, [pc, #32]	; 401258 <fvec_sum+0x28>
  40123a:	eb03 0282 	add.w	r2, r3, r2, lsl #2
    tmp += s->data[j];
  40123e:	ecb3 7a01 	vldmia	r3!, {s14}
  for (j = 0; j < s->length; j++) {
  401242:	4293      	cmp	r3, r2
    tmp += s->data[j];
  401244:	ee77 7a87 	vadd.f32	s15, s15, s14
  for (j = 0; j < s->length; j++) {
  401248:	d1f9      	bne.n	40123e <fvec_sum+0xe>
  }
#endif
  return tmp;
}
  40124a:	ee17 0a90 	vmov	r0, s15
  40124e:	4770      	bx	lr
  smpl_t tmp = 0.0;
  401250:	eddf 7a01 	vldr	s15, [pc, #4]	; 401258 <fvec_sum+0x28>
  return tmp;
  401254:	e7f9      	b.n	40124a <fvec_sum+0x1a>
  401256:	bf00      	nop
  401258:	00000000 	.word	0x00000000

0040125c <fvec_min_elem>:
fvec_min_elem (fvec_t * s)
{
#ifndef HAVE_ACCELERATE
  uint_t j, pos = 0.;
  smpl_t tmp = s->data[0];
  for (j = 0; j < s->length; j++) {
  40125c:	e890 0006 	ldmia.w	r0, {r1, r2}
  smpl_t tmp = s->data[0];
  401260:	edd2 7a00 	vldr	s15, [r2]
  for (j = 0; j < s->length; j++) {
  401264:	b179      	cbz	r1, 401286 <fvec_min_elem+0x2a>
  401266:	2000      	movs	r0, #0
  401268:	4603      	mov	r3, r0
    pos = (tmp < s->data[j]) ? pos : j;
  40126a:	ecb2 7a01 	vldmia	r2!, {s14}
  40126e:	eeb4 7ae7 	vcmpe.f32	s14, s15
    tmp = (tmp < s->data[j]) ? tmp : s->data[j];
  401272:	fec7 7ac7 	vminnm.f32	s15, s15, s14
    pos = (tmp < s->data[j]) ? pos : j;
  401276:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  40127a:	bfd8      	it	le
  40127c:	4618      	movle	r0, r3
  for (j = 0; j < s->length; j++) {
  40127e:	3301      	adds	r3, #1
  401280:	428b      	cmp	r3, r1
  401282:	d1f2      	bne.n	40126a <fvec_min_elem+0xe>
  401284:	4770      	bx	lr
  uint_t j, pos = 0.;
  401286:	4608      	mov	r0, r1
  smpl_t tmp = 0.;
  vDSP_Length pos = 0;
  aubio_vDSP_minvi(s->data, 1, &tmp, &pos, s->length);
#endif
  return (uint_t)pos;
}
  401288:	4770      	bx	lr
  40128a:	bf00      	nop

0040128c <fvec_add>:

void
fvec_add (fvec_t * o, smpl_t val)
{
  uint_t j;
  for (j = 0; j < o->length; j++) {
  40128c:	6803      	ldr	r3, [r0, #0]
{
  40128e:	ee07 1a10 	vmov	s14, r1
  for (j = 0; j < o->length; j++) {
  401292:	b16b      	cbz	r3, 4012b0 <fvec_add+0x24>
  401294:	2200      	movs	r2, #0
    o->data[j] += val;
  401296:	6843      	ldr	r3, [r0, #4]
  401298:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  for (j = 0; j < o->length; j++) {
  40129c:	3201      	adds	r2, #1
    o->data[j] += val;
  40129e:	edd3 7a00 	vldr	s15, [r3]
  4012a2:	ee77 7a87 	vadd.f32	s15, s15, s14
  4012a6:	edc3 7a00 	vstr	s15, [r3]
  for (j = 0; j < o->length; j++) {
  4012aa:	6803      	ldr	r3, [r0, #0]
  4012ac:	4293      	cmp	r3, r2
  4012ae:	d8f2      	bhi.n	401296 <fvec_add+0xa>
  4012b0:	4770      	bx	lr
  4012b2:	bf00      	nop

004012b4 <fvec_quadratic_peak_pos>:
}

smpl_t fvec_quadratic_peak_pos (const fvec_t * x, uint_t pos) {
  smpl_t s0, s1, s2; uint_t x0, x2;
  smpl_t half = .5, two = 2.;
  if (pos == 0 || pos == x->length - 1) return (float)pos;
  4012b4:	b359      	cbz	r1, 40130e <fvec_quadratic_peak_pos+0x5a>
  4012b6:	6802      	ldr	r2, [r0, #0]
  4012b8:	1e53      	subs	r3, r2, #1
  4012ba:	4299      	cmp	r1, r3
  4012bc:	d027      	beq.n	40130e <fvec_quadratic_peak_pos+0x5a>
  x0 = (pos < 1) ? pos : pos - 1;
  x2 = (pos + 1 < x->length) ? pos + 1 : pos;
  4012be:	1c4b      	adds	r3, r1, #1
  if (x0 == pos) return (x->data[pos] <= x->data[x2]) ? (float)pos : (float)x2;
  if (x2 == pos) return (x->data[pos] <= x->data[x0]) ? (float)pos : (float)x0;
  4012c0:	429a      	cmp	r2, r3
smpl_t fvec_quadratic_peak_pos (const fvec_t * x, uint_t pos) {
  4012c2:	b410      	push	{r4}
  x0 = (pos < 1) ? pos : pos - 1;
  4012c4:	f101 34ff 	add.w	r4, r1, #4294967295
  if (x2 == pos) return (x->data[pos] <= x->data[x0]) ? (float)pos : (float)x0;
  4012c8:	6843      	ldr	r3, [r0, #4]
  4012ca:	d927      	bls.n	40131c <fvec_quadratic_peak_pos+0x68>
  s0 = x->data[x0];
  4012cc:	eb03 0384 	add.w	r3, r3, r4, lsl #2
  s1 = x->data[pos];
  s2 = x->data[x2];
  return (float)(pos + half * (s0 - s2 ) / (s0 - two * s1 + s2));
  4012d0:	eeb0 5a00 	vmov.f32	s10, #0	; 0x40000000  2.0
  4012d4:	eef6 5a00 	vmov.f32	s11, #96	; 0x3f000000  0.5
  4012d8:	ee07 1a90 	vmov	s15, r1
  s2 = x->data[x2];
  4012dc:	ed93 6a02 	vldr	s12, [r3, #8]
  s0 = x->data[x0];
  4012e0:	ed93 7a00 	vldr	s14, [r3]
  return (float)(pos + half * (s0 - s2 ) / (s0 - two * s1 + s2));
  4012e4:	eef8 7a67 	vcvt.f32.u32	s15, s15
  4012e8:	edd3 4a01 	vldr	s9, [r3, #4]
  4012ec:	ee77 6a06 	vadd.f32	s13, s14, s12
  4012f0:	ee37 7a46 	vsub.f32	s14, s14, s12
  4012f4:	eee4 6ac5 	vfms.f32	s13, s9, s10
  4012f8:	ee27 7a25 	vmul.f32	s14, s14, s11
  4012fc:	ee87 6a26 	vdiv.f32	s12, s14, s13
  401300:	ee76 7a27 	vadd.f32	s15, s12, s15
}
  401304:	ee17 0a90 	vmov	r0, s15
  401308:	f85d 4b04 	ldr.w	r4, [sp], #4
  40130c:	4770      	bx	lr
  if (pos == 0 || pos == x->length - 1) return (float)pos;
  40130e:	ee07 1a90 	vmov	s15, r1
  401312:	eef8 7a67 	vcvt.f32.u32	s15, s15
}
  401316:	ee17 0a90 	vmov	r0, s15
  40131a:	4770      	bx	lr
  if (x2 == pos) return (x->data[pos] <= x->data[x0]) ? (float)pos : (float)x0;
  40131c:	eb03 0381 	add.w	r3, r3, r1, lsl #2
  401320:	ed93 7a00 	vldr	s14, [r3]
  401324:	ed53 7a01 	vldr	s15, [r3, #-4]
  401328:	eeb4 7ae7 	vcmpe.f32	s14, s15
  40132c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  401330:	d808      	bhi.n	401344 <fvec_quadratic_peak_pos+0x90>
  if (pos == 0 || pos == x->length - 1) return (float)pos;
  401332:	ee07 1a90 	vmov	s15, r1
}
  401336:	f85d 4b04 	ldr.w	r4, [sp], #4
  if (pos == 0 || pos == x->length - 1) return (float)pos;
  40133a:	eef8 7a67 	vcvt.f32.u32	s15, s15
}
  40133e:	ee17 0a90 	vmov	r0, s15
  401342:	4770      	bx	lr
  if (x2 == pos) return (x->data[pos] <= x->data[x0]) ? (float)pos : (float)x0;
  401344:	ee07 4a90 	vmov	s15, r4
  401348:	eef8 7a67 	vcvt.f32.u32	s15, s15
  40134c:	e7da      	b.n	401304 <fvec_quadratic_peak_pos+0x50>
  40134e:	bf00      	nop

00401350 <aubio_is_power_of_two>:
}

uint_t
aubio_is_power_of_two (uint_t a)
{
  if ((a & (a - 1)) == 0) {
  401350:	1e43      	subs	r3, r0, #1
  401352:	4203      	tst	r3, r0
    return 1;
  } else {
    return 0;
  }
}
  401354:	bf0c      	ite	eq
  401356:	2001      	moveq	r0, #1
  401358:	2000      	movne	r0, #0
  40135a:	4770      	bx	lr

0040135c <bitrv2>:
void bitrv2(int n, int *ip, smpl_t *a)
{
    int j, j1, k, k1, l, m, m2;
    smpl_t xr, xi, yr, yi;
    
    ip[0] = 0;
  40135c:	2300      	movs	r3, #0
    l = n;
    m = 1;
    while ((m << 3) < l) {
  40135e:	2808      	cmp	r0, #8
{
  401360:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ip[0] = 0;
  401364:	600b      	str	r3, [r1, #0]
{
  401366:	b089      	sub	sp, #36	; 0x24
    while ((m << 3) < l) {
  401368:	dd60      	ble.n	40142c <bitrv2+0xd0>
  40136a:	1f0b      	subs	r3, r1, #4
  40136c:	2701      	movs	r7, #1
  40136e:	469e      	mov	lr, r3
  401370:	9305      	str	r3, [sp, #20]
  401372:	ea4f 0987 	mov.w	r9, r7, lsl #2
        l >>= 1;
  401376:	4675      	mov	r5, lr
  401378:	1040      	asrs	r0, r0, #1
  40137a:	eb01 0409 	add.w	r4, r1, r9
  40137e:	eb04 0609 	add.w	r6, r4, r9
        for (j = 0; j < m; j++) {
            ip[m + j] = ip[j] + l;
  401382:	f855 3f04 	ldr.w	r3, [r5, #4]!
  401386:	4403      	add	r3, r0
  401388:	f844 3b04 	str.w	r3, [r4], #4
        for (j = 0; j < m; j++) {
  40138c:	42a6      	cmp	r6, r4
  40138e:	d1f8      	bne.n	401382 <bitrv2+0x26>
    while ((m << 3) < l) {
  401390:	013b      	lsls	r3, r7, #4
        }
        m <<= 1;
  401392:	007f      	lsls	r7, r7, #1
    while ((m << 3) < l) {
  401394:	4283      	cmp	r3, r0
  401396:	dbec      	blt.n	401372 <bitrv2+0x16>
  401398:	9707      	str	r7, [sp, #28]
    }
    m2 = 2 * m;
  40139a:	46ca      	mov	sl, r9
    if ((m << 3) == l) {
  40139c:	d04d      	beq.n	40143a <bitrv2+0xde>
  40139e:	f04f 0a02 	mov.w	sl, #2
  4013a2:	f8dd b014 	ldr.w	fp, [sp, #20]
  4013a6:	f04f 0800 	mov.w	r8, #0
            a[k1 + 1] = xi;
        }
    } else {
        for (k = 1; k < m; k++) {
            for (j = 0; j < k; j++) {
                j1 = 2 * j + ip[k];
  4013aa:	f851 001a 	ldr.w	r0, [r1, sl, lsl #1]
                k1 = 2 * k + ip[j];
  4013ae:	f85b 3f04 	ldr.w	r3, [fp, #4]!
                j1 = 2 * j + ip[k];
  4013b2:	4440      	add	r0, r8
  4013b4:	f108 0802 	add.w	r8, r8, #2
                k1 = 2 * k + ip[j];
  4013b8:	4453      	add	r3, sl
                xr = a[j1];
  4013ba:	0085      	lsls	r5, r0, #2
                yi = a[k1 + 1];
                a[j1] = yr;
                a[j1 + 1] = yi;
                a[k1] = xr;
                a[k1 + 1] = xi;
                j1 += m2;
  4013bc:	4448      	add	r0, r9
                yr = a[k1];
  4013be:	009c      	lsls	r4, r3, #2
                k1 += m2;
  4013c0:	444b      	add	r3, r9
                xi = a[j1 + 1];
  4013c2:	f105 0c04 	add.w	ip, r5, #4
                xr = a[j1];
  4013c6:	0080      	lsls	r0, r0, #2
                yi = a[k1 + 1];
  4013c8:	f104 0e04 	add.w	lr, r4, #4
                xi = a[j1 + 1];
                yr = a[k1];
  4013cc:	009b      	lsls	r3, r3, #2
                xi = a[j1 + 1];
  4013ce:	4494      	add	ip, r2
                xr = a[j1];
  4013d0:	4415      	add	r5, r2
                yi = a[k1 + 1];
  4013d2:	4496      	add	lr, r2
                yr = a[k1];
  4013d4:	4414      	add	r4, r2
                xi = a[j1 + 1];
  4013d6:	1d07      	adds	r7, r0, #4
                yi = a[k1 + 1];
  4013d8:	1d1e      	adds	r6, r3, #4
                xi = a[j1 + 1];
  4013da:	eddc 7a00 	vldr	s15, [ip]
                xr = a[j1];
  4013de:	4410      	add	r0, r2
                yi = a[k1 + 1];
  4013e0:	edde 6a00 	vldr	s13, [lr]
                xi = a[j1 + 1];
  4013e4:	4417      	add	r7, r2
                xr = a[j1];
  4013e6:	ed95 7a00 	vldr	s14, [r5]
                yr = a[k1];
  4013ea:	4413      	add	r3, r2
                yr = a[k1];
  4013ec:	ed94 6a00 	vldr	s12, [r4]
                yi = a[k1 + 1];
  4013f0:	4416      	add	r6, r2
            for (j = 0; j < k; j++) {
  4013f2:	45c2      	cmp	sl, r8
                a[j1] = yr;
  4013f4:	ed85 6a00 	vstr	s12, [r5]
                a[j1 + 1] = yi;
  4013f8:	edcc 6a00 	vstr	s13, [ip]
                a[k1] = xr;
  4013fc:	ed84 7a00 	vstr	s14, [r4]
                a[k1 + 1] = xi;
  401400:	edce 7a00 	vstr	s15, [lr]
                xi = a[j1 + 1];
  401404:	683c      	ldr	r4, [r7, #0]
                xr = a[j1];
  401406:	6805      	ldr	r5, [r0, #0]
                yr = a[k1];
  401408:	f8d3 c000 	ldr.w	ip, [r3]
                yi = a[k1 + 1];
  40140c:	f8d6 e000 	ldr.w	lr, [r6]
                a[j1] = yr;
  401410:	f8c0 c000 	str.w	ip, [r0]
                a[j1 + 1] = yi;
  401414:	f8c7 e000 	str.w	lr, [r7]
                a[k1] = xr;
  401418:	601d      	str	r5, [r3, #0]
                a[k1 + 1] = xi;
  40141a:	6034      	str	r4, [r6, #0]
            for (j = 0; j < k; j++) {
  40141c:	d1c5      	bne.n	4013aa <bitrv2+0x4e>
  40141e:	f10a 0a02 	add.w	sl, sl, #2
        for (k = 1; k < m; k++) {
  401422:	45d1      	cmp	r9, sl
  401424:	d1bd      	bne.n	4013a2 <bitrv2+0x46>
            }
        }
    }
}
  401426:	b009      	add	sp, #36	; 0x24
  401428:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if ((m << 3) == l) {
  40142c:	d1fb      	bne.n	401426 <bitrv2+0xca>
  40142e:	1f0b      	subs	r3, r1, #4
    m2 = 2 * m;
  401430:	f04f 0a02 	mov.w	sl, #2
  401434:	9305      	str	r3, [sp, #20]
    m = 1;
  401436:	2301      	movs	r3, #1
  401438:	9307      	str	r3, [sp, #28]
  40143a:	ea4f 034a 	mov.w	r3, sl, lsl #1
        for (k = 0; k < m; k++) {
  40143e:	f8dd b014 	ldr.w	fp, [sp, #20]
  401442:	f8cd a018 	str.w	sl, [sp, #24]
  401446:	9301      	str	r3, [sp, #4]
  401448:	2300      	movs	r3, #0
  40144a:	9304      	str	r3, [sp, #16]
            j1 = 2 * k + m2 + ip[k];
  40144c:	f85b 3f04 	ldr.w	r3, [fp, #4]!
        for (k = 0; k < m; k++) {
  401450:	9904      	ldr	r1, [sp, #16]
            j1 = 2 * k + m2 + ip[k];
  401452:	9806      	ldr	r0, [sp, #24]
        for (k = 0; k < m; k++) {
  401454:	3101      	adds	r1, #1
            j1 = 2 * k + m2 + ip[k];
  401456:	4403      	add	r3, r0
        for (k = 0; k < m; k++) {
  401458:	9104      	str	r1, [sp, #16]
            k1 = j1 + m2;
  40145a:	eb03 010a 	add.w	r1, r3, sl
            xr = a[j1];
  40145e:	009b      	lsls	r3, r3, #2
            yr = a[k1];
  401460:	0089      	lsls	r1, r1, #2
            xi = a[j1 + 1];
  401462:	1d1c      	adds	r4, r3, #4
            xr = a[j1];
  401464:	4413      	add	r3, r2
            yi = a[k1 + 1];
  401466:	1d08      	adds	r0, r1, #4
            yr = a[k1];
  401468:	4411      	add	r1, r2
            xr = a[j1];
  40146a:	681e      	ldr	r6, [r3, #0]
            xi = a[j1 + 1];
  40146c:	4414      	add	r4, r2
            yi = a[k1 + 1];
  40146e:	4410      	add	r0, r2
            yr = a[k1];
  401470:	f8d1 e000 	ldr.w	lr, [r1]
            xi = a[j1 + 1];
  401474:	6825      	ldr	r5, [r4, #0]
            yi = a[k1 + 1];
  401476:	6807      	ldr	r7, [r0, #0]
            a[j1] = yr;
  401478:	f8c3 e000 	str.w	lr, [r3]
            a[j1 + 1] = yi;
  40147c:	6027      	str	r7, [r4, #0]
        for (k = 0; k < m; k++) {
  40147e:	9b07      	ldr	r3, [sp, #28]
            a[k1] = xr;
  401480:	600e      	str	r6, [r1, #0]
        for (k = 0; k < m; k++) {
  401482:	9904      	ldr	r1, [sp, #16]
            a[k1 + 1] = xi;
  401484:	6005      	str	r5, [r0, #0]
        for (k = 0; k < m; k++) {
  401486:	4299      	cmp	r1, r3
  401488:	d0cd      	beq.n	401426 <bitrv2+0xca>
  40148a:	9b04      	ldr	r3, [sp, #16]
  40148c:	f8dd 9014 	ldr.w	r9, [sp, #20]
  401490:	005b      	lsls	r3, r3, #1
  401492:	9303      	str	r3, [sp, #12]
  401494:	2300      	movs	r3, #0
  401496:	9300      	str	r3, [sp, #0]
                k1 = 2 * k + ip[j];
  401498:	f859 3f04 	ldr.w	r3, [r9, #4]!
  40149c:	9803      	ldr	r0, [sp, #12]
                j1 = 2 * j + ip[k];
  40149e:	f8db 1004 	ldr.w	r1, [fp, #4]
            for (j = 0; j < k; j++) {
  4014a2:	45cb      	cmp	fp, r9
                j1 = 2 * j + ip[k];
  4014a4:	9c00      	ldr	r4, [sp, #0]
                k1 = 2 * k + ip[j];
  4014a6:	4403      	add	r3, r0
                j1 = 2 * j + ip[k];
  4014a8:	4421      	add	r1, r4
                yr = a[k1];
  4014aa:	ea4f 0783 	mov.w	r7, r3, lsl #2
                xr = a[j1];
  4014ae:	f104 0402 	add.w	r4, r4, #2
  4014b2:	ea4f 0081 	mov.w	r0, r1, lsl #2
                yi = a[k1 + 1];
  4014b6:	f107 0804 	add.w	r8, r7, #4
                xr = a[j1];
  4014ba:	9400      	str	r4, [sp, #0]
                yr = a[k1];
  4014bc:	4417      	add	r7, r2
                k1 += 2 * m2;
  4014be:	9c01      	ldr	r4, [sp, #4]
                yi = a[k1 + 1];
  4014c0:	4490      	add	r8, r2
                j1 += m2;
  4014c2:	4451      	add	r1, sl
                yr = a[k1];
  4014c4:	ed97 6a00 	vldr	s12, [r7]
                k1 += 2 * m2;
  4014c8:	4423      	add	r3, r4
                xi = a[j1 + 1];
  4014ca:	f100 0404 	add.w	r4, r0, #4
                yi = a[k1 + 1];
  4014ce:	edd8 6a00 	vldr	s13, [r8]
                xr = a[j1];
  4014d2:	ea4f 0681 	mov.w	r6, r1, lsl #2
                xi = a[j1 + 1];
  4014d6:	4414      	add	r4, r2
                xr = a[j1];
  4014d8:	4410      	add	r0, r2
                j1 += m2;
  4014da:	4451      	add	r1, sl
                yr = a[k1];
  4014dc:	ea4f 0583 	mov.w	r5, r3, lsl #2
                xi = a[j1 + 1];
  4014e0:	edd4 7a00 	vldr	s15, [r4]
                k1 -= m2;
  4014e4:	eba3 030a 	sub.w	r3, r3, sl
                xr = a[j1];
  4014e8:	ed90 7a00 	vldr	s14, [r0]
                xi = a[j1 + 1];
  4014ec:	f106 0c04 	add.w	ip, r6, #4
                a[j1] = yr;
  4014f0:	ed80 6a00 	vstr	s12, [r0]
                yi = a[k1 + 1];
  4014f4:	f105 0e04 	add.w	lr, r5, #4
                a[j1 + 1] = yi;
  4014f8:	edc4 6a00 	vstr	s13, [r4]
                xr = a[j1];
  4014fc:	ea4f 0481 	mov.w	r4, r1, lsl #2
                j1 += m2;
  401500:	4451      	add	r1, sl
                yr = a[k1];
  401502:	4415      	add	r5, r2
                a[k1] = xr;
  401504:	ed87 7a00 	vstr	s14, [r7]
                xr = a[j1];
  401508:	4416      	add	r6, r2
                j1 += m2;
  40150a:	9102      	str	r1, [sp, #8]
                xi = a[j1 + 1];
  40150c:	4494      	add	ip, r2
                k1 += 2 * m2;
  40150e:	9901      	ldr	r1, [sp, #4]
                yi = a[k1 + 1];
  401510:	4496      	add	lr, r2
                a[k1 + 1] = xi;
  401512:	edc8 7a00 	vstr	s15, [r8]
                yr = a[k1];
  401516:	ea4f 0083 	mov.w	r0, r3, lsl #2
                yr = a[k1];
  40151a:	edd5 6a00 	vldr	s13, [r5]
                k1 += 2 * m2;
  40151e:	440b      	add	r3, r1
                xr = a[j1];
  401520:	9902      	ldr	r1, [sp, #8]
                xi = a[j1 + 1];
  401522:	f104 0704 	add.w	r7, r4, #4
                xr = a[j1];
  401526:	edd6 7a00 	vldr	s15, [r6]
                yr = a[k1];
  40152a:	ea4f 0383 	mov.w	r3, r3, lsl #2
                xi = a[j1 + 1];
  40152e:	f8dc 8000 	ldr.w	r8, [ip]
                xr = a[j1];
  401532:	ea4f 0181 	mov.w	r1, r1, lsl #2
                yi = a[k1 + 1];
  401536:	ed9e 7a00 	vldr	s14, [lr]
                xr = a[j1];
  40153a:	4414      	add	r4, r2
                a[j1] = yr;
  40153c:	edc6 6a00 	vstr	s13, [r6]
                yi = a[k1 + 1];
  401540:	f100 0604 	add.w	r6, r0, #4
                a[j1 + 1] = yi;
  401544:	ed8c 7a00 	vstr	s14, [ip]
                xi = a[j1 + 1];
  401548:	4417      	add	r7, r2
                a[k1] = xr;
  40154a:	edc5 7a00 	vstr	s15, [r5]
                yr = a[k1];
  40154e:	4410      	add	r0, r2
                yi = a[k1 + 1];
  401550:	4416      	add	r6, r2
                xi = a[j1 + 1];
  401552:	f101 0c04 	add.w	ip, r1, #4
                yi = a[k1 + 1];
  401556:	f103 0504 	add.w	r5, r3, #4
                a[k1 + 1] = xi;
  40155a:	f8ce 8000 	str.w	r8, [lr]
                xi = a[j1 + 1];
  40155e:	f8d7 e000 	ldr.w	lr, [r7]
                xr = a[j1];
  401562:	4411      	add	r1, r2
                xr = a[j1];
  401564:	f8d4 8000 	ldr.w	r8, [r4]
                xi = a[j1 + 1];
  401568:	4494      	add	ip, r2
                yr = a[k1];
  40156a:	ed90 7a00 	vldr	s14, [r0]
                yr = a[k1];
  40156e:	4413      	add	r3, r2
                yi = a[k1 + 1];
  401570:	edd6 7a00 	vldr	s15, [r6]
                yi = a[k1 + 1];
  401574:	4415      	add	r5, r2
                a[j1] = yr;
  401576:	ed84 7a00 	vstr	s14, [r4]
                a[j1 + 1] = yi;
  40157a:	edc7 7a00 	vstr	s15, [r7]
                a[k1] = xr;
  40157e:	f8c0 8000 	str.w	r8, [r0]
                a[k1 + 1] = xi;
  401582:	f8c6 e000 	str.w	lr, [r6]
                xr = a[j1];
  401586:	680c      	ldr	r4, [r1, #0]
                xi = a[j1 + 1];
  401588:	f8dc 0000 	ldr.w	r0, [ip]
                yr = a[k1];
  40158c:	681f      	ldr	r7, [r3, #0]
                yi = a[k1 + 1];
  40158e:	682e      	ldr	r6, [r5, #0]
                a[j1] = yr;
  401590:	600f      	str	r7, [r1, #0]
                a[j1 + 1] = yi;
  401592:	f8cc 6000 	str.w	r6, [ip]
                a[k1] = xr;
  401596:	601c      	str	r4, [r3, #0]
                a[k1 + 1] = xi;
  401598:	6028      	str	r0, [r5, #0]
            for (j = 0; j < k; j++) {
  40159a:	f47f af7d 	bne.w	401498 <bitrv2+0x13c>
  40159e:	9b06      	ldr	r3, [sp, #24]
  4015a0:	3302      	adds	r3, #2
  4015a2:	9306      	str	r3, [sp, #24]
  4015a4:	e752      	b.n	40144c <bitrv2+0xf0>
  4015a6:	bf00      	nop

004015a8 <cft1st>:
    y2i = x0i - x2i;
    y1r = x1r - x3i;
    y1i = x1i + x3r;
    y3r = x1r + x3i;
    y3i = x1i - x3r;
    x0r = a[8] + a[10];
  4015a8:	edd1 7a0a 	vldr	s15, [r1, #40]	; 0x28
    a[9] = y0i - y4i;
    a[4] = y2r - y6i;
    a[5] = y2i + y6r;
    a[12] = y2r + y6i;
    a[13] = y2i - y6r;
    if (n > 16) {
  4015ac:	2810      	cmp	r0, #16
    x0r = a[8] + a[10];
  4015ae:	edd1 5a08 	vldr	s11, [r1, #32]
    x2i = a[13] + a[15];
  4015b2:	ed91 7a0f 	vldr	s14, [r1, #60]	; 0x3c
  4015b6:	edd1 6a0d 	vldr	s13, [r1, #52]	; 0x34
    x1r = a[8] - a[10];
  4015ba:	ee35 4ae7 	vsub.f32	s8, s11, s15
    x2r = a[12] + a[14];
  4015be:	edd1 1a0c 	vldr	s3, [r1, #48]	; 0x30
    x0r = a[8] + a[10];
  4015c2:	ee75 5aa7 	vadd.f32	s11, s11, s15
    x2r = a[12] + a[14];
  4015c6:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
    x3i = a[13] - a[15];
  4015ca:	ee36 6ac7 	vsub.f32	s12, s13, s14
    x2i = a[5] + a[7];
  4015ce:	ed91 3a07 	vldr	s6, [r1, #28]
    x2i = a[13] + a[15];
  4015d2:	ee76 2a87 	vadd.f32	s5, s13, s14
    x0i = a[9] + a[11];
  4015d6:	ed91 5a0b 	vldr	s10, [r1, #44]	; 0x2c
    x3r = a[12] - a[14];
  4015da:	ee71 6ae7 	vsub.f32	s13, s3, s15
    x0r = a[0] + a[2];
  4015de:	ed91 7a00 	vldr	s14, [r1]
    x2r = a[12] + a[14];
  4015e2:	ee71 1aa7 	vadd.f32	s3, s3, s15
    x2i = a[5] + a[7];
  4015e6:	ed91 2a05 	vldr	s4, [r1, #20]
    wn4r = w[2];
  4015ea:	edd2 7a02 	vldr	s15, [r2, #8]
    x0i = a[1] + a[3];
  4015ee:	ed91 0a03 	vldr	s0, [r1, #12]
    x2r = a[4] + a[6];
  4015f2:	edd1 3a06 	vldr	s7, [r1, #24]
  4015f6:	edd1 4a04 	vldr	s9, [r1, #16]
{
  4015fa:	ed2d 8b10 	vpush	{d8-d15}
    x0i = a[9] + a[11];
  4015fe:	ed91 8a09 	vldr	s16, [r1, #36]	; 0x24
    wn4r = w[2];
  401602:	eeb0 ba67 	vmov.f32	s22, s15
    x0r = a[0] + a[2];
  401606:	edd1 9a02 	vldr	s19, [r1, #8]
    x0r = x1r - x3i;
  40160a:	ee34 aa46 	vsub.f32	s20, s8, s12
    x1i = a[9] - a[11];
  40160e:	ee78 0a45 	vsub.f32	s1, s16, s10
    x0i = a[1] + a[3];
  401612:	edd1 8a01 	vldr	s17, [r1, #4]
    x3i = a[5] - a[7];
  401616:	ee32 9a43 	vsub.f32	s18, s4, s6
{
  40161a:	b086      	sub	sp, #24
    x2r = x1r + x3i;
  40161c:	ee34 4a06 	vadd.f32	s8, s8, s12
    x1r = a[0] - a[2];
  401620:	ee37 6a69 	vsub.f32	s12, s14, s19
    wn4r = w[2];
  401624:	edcd 7a04 	vstr	s15, [sp, #16]
    x0i = x1i + x3r;
  401628:	ee30 1aa6 	vadd.f32	s2, s1, s13
    x0i = a[1] + a[3];
  40162c:	ee78 7a80 	vadd.f32	s15, s17, s0
    x2i = x1i - x3r;
  401630:	ee70 0ae6 	vsub.f32	s1, s1, s13
    x2i = a[5] + a[7];
  401634:	ee32 2a03 	vadd.f32	s4, s4, s6
    x1i = a[1] - a[3];
  401638:	ee78 6ac0 	vsub.f32	s13, s17, s0
    y1r = x1r - x3i;
  40163c:	ee36 3a49 	vsub.f32	s6, s12, s18
    x3r = a[4] - a[6];
  401640:	ee34 0ae3 	vsub.f32	s0, s9, s7
    x2r = a[4] + a[6];
  401644:	ee74 4aa3 	vadd.f32	s9, s9, s7
    a[10] = y1r - y5r;
  401648:	eef1 3a4b 	vneg.f32	s7, s22
    x0i = a[9] + a[11];
  40164c:	ee38 5a05 	vadd.f32	s10, s16, s10
    y3r = x1r + x3i;
  401650:	ee36 6a09 	vadd.f32	s12, s12, s18
    y5r = wn4r * (x0r - x0i);
  401654:	ee3a 8a41 	vsub.f32	s16, s20, s2
    a[10] = y1r - y5r;
  401658:	edcd 3a05 	vstr	s7, [sp, #20]
  40165c:	eeb0 9a63 	vmov.f32	s18, s7
    y5i = wn4r * (x0r + x0i);
  401660:	ee3a 1a01 	vadd.f32	s2, s20, s2
    y1i = x1i + x3r;
  401664:	ee76 3a80 	vadd.f32	s7, s13, s0
    a[2] = y1r + y5r;
  401668:	eef0 8a43 	vmov.f32	s17, s6
    y3i = x1i - x3r;
  40166c:	ee76 6ac0 	vsub.f32	s13, s13, s0
    a[10] = y1r - y5r;
  401670:	eea9 3a08 	vfma.f32	s6, s18, s16
    y7i = wn4r * (x2r + x2i);
  401674:	ee34 0a20 	vadd.f32	s0, s8, s1
    a[2] = y1r + y5r;
  401678:	eeeb 8a08 	vfma.f32	s17, s22, s16
    y7r = wn4r * (x2r - x2i);
  40167c:	ee34 4a60 	vsub.f32	s8, s8, s1
    a[3] = y1i + y5i;
  401680:	eeb0 8a63 	vmov.f32	s16, s7
    a[11] = y1i - y5i;
  401684:	eee9 3a01 	vfma.f32	s7, s18, s2
    x0r = a[0] + a[2];
  401688:	ee37 7a29 	vadd.f32	s14, s14, s19
    a[10] = y1r - y5r;
  40168c:	ed81 3a0a 	vstr	s6, [r1, #40]	; 0x28
    a[3] = y1i + y5i;
  401690:	eeab 8a01 	vfma.f32	s16, s22, s2
    a[6] = y3r - y7i;
  401694:	eef0 0a46 	vmov.f32	s1, s12
    a[2] = y1r + y5r;
  401698:	edc1 8a02 	vstr	s17, [r1, #8]
    a[14] = y3r + y7i;
  40169c:	eeab 6a00 	vfma.f32	s12, s22, s0
    a[7] = y3i + y7r;
  4016a0:	eeb0 1a66 	vmov.f32	s2, s13
    a[15] = y3i - y7r;
  4016a4:	eee9 6a04 	vfma.f32	s13, s18, s8
    a[11] = y1i - y5i;
  4016a8:	edc1 3a0b 	vstr	s7, [r1, #44]	; 0x2c
    y4r = x0r + x2r;
  4016ac:	ee75 3aa1 	vadd.f32	s7, s11, s3
    a[7] = y3i + y7r;
  4016b0:	eeab 1a04 	vfma.f32	s2, s22, s8
    a[3] = y1i + y5i;
  4016b4:	ed81 8a03 	vstr	s16, [r1, #12]
    y0r = x0r + x2r;
  4016b8:	ee37 4a24 	vadd.f32	s8, s14, s9
    y6r = x0r - x2r;
  4016bc:	ee75 5ae1 	vsub.f32	s11, s11, s3
    a[14] = y3r + y7i;
  4016c0:	ed81 6a0e 	vstr	s12, [r1, #56]	; 0x38
    y2r = x0r - x2r;
  4016c4:	ee37 7a64 	vsub.f32	s14, s14, s9
    y0i = x0i + x2i;
  4016c8:	ee37 6a82 	vadd.f32	s12, s15, s4
    a[15] = y3i - y7r;
  4016cc:	edc1 6a0f 	vstr	s13, [r1, #60]	; 0x3c
    y4i = x0i + x2i;
  4016d0:	ee75 4a22 	vadd.f32	s9, s10, s5
    y6i = x0i - x2i;
  4016d4:	ee75 6a62 	vsub.f32	s13, s10, s5
    a[7] = y3i + y7r;
  4016d8:	ed81 1a07 	vstr	s2, [r1, #28]
    a[0] = y0r + y4r;
  4016dc:	ee34 5a23 	vadd.f32	s10, s8, s7
    y2i = x0i - x2i;
  4016e0:	ee77 7ac2 	vsub.f32	s15, s15, s4
    a[6] = y3r - y7i;
  4016e4:	eee9 0a00 	vfma.f32	s1, s18, s0
    a[8] = y0r - y4r;
  4016e8:	ee34 4a63 	vsub.f32	s8, s8, s7
    a[0] = y0r + y4r;
  4016ec:	ed81 5a00 	vstr	s10, [r1]
    a[1] = y0i + y4i;
  4016f0:	ee76 3a24 	vadd.f32	s7, s12, s9
    a[4] = y2r - y6i;
  4016f4:	ee37 5a66 	vsub.f32	s10, s14, s13
    a[9] = y0i - y4i;
  4016f8:	ee36 6a64 	vsub.f32	s12, s12, s9
    a[8] = y0r - y4r;
  4016fc:	ed81 4a08 	vstr	s8, [r1, #32]
    a[12] = y2r + y6i;
  401700:	ee37 7a26 	vadd.f32	s14, s14, s13
    a[1] = y0i + y4i;
  401704:	edc1 3a01 	vstr	s7, [r1, #4]
    a[5] = y2i + y6r;
  401708:	ee77 6aa5 	vadd.f32	s13, s15, s11
    a[6] = y3r - y7i;
  40170c:	edc1 0a06 	vstr	s1, [r1, #24]
    a[13] = y2i - y6r;
  401710:	ee77 7ae5 	vsub.f32	s15, s15, s11
    a[9] = y0i - y4i;
  401714:	ed81 6a09 	vstr	s12, [r1, #36]	; 0x24
    a[4] = y2r - y6i;
  401718:	ed81 5a04 	vstr	s10, [r1, #16]
    a[12] = y2r + y6i;
  40171c:	ed81 7a0c 	vstr	s14, [r1, #48]	; 0x30
    a[5] = y2i + y6r;
  401720:	edc1 6a05 	vstr	s13, [r1, #20]
    a[13] = y2i - y6r;
  401724:	edc1 7a0d 	vstr	s15, [r1, #52]	; 0x34
    if (n > 16) {
  401728:	f340 821a 	ble.w	401b60 <cft1st+0x5b8>
        wk1r = w[4];
        wk1i = w[5];
        x0r = a[16] + a[18];
  40172c:	ed91 7a12 	vldr	s14, [r1, #72]	; 0x48
        x0r = y6r - y2i;
        x0i = y2r + y6i;
        a[28] = wn4r * (x0r - x0i);
        a[29] = wn4r * (x0i + x0r);
        k1 = 4;
        for (j = 32; j < n; j += 16) {
  401730:	2820      	cmp	r0, #32
        x2i = a[21] + a[23];
  401732:	edd1 7a17 	vldr	s15, [r1, #92]	; 0x5c
        x0r = a[16] + a[18];
  401736:	edd1 4a10 	vldr	s9, [r1, #64]	; 0x40
        x2i = a[21] + a[23];
  40173a:	ed91 8a15 	vldr	s16, [r1, #84]	; 0x54
        x1r = a[16] - a[18];
  40173e:	ee74 5ac7 	vsub.f32	s11, s9, s14
        x0i = a[17] + a[19];
  401742:	ed91 3a13 	vldr	s6, [r1, #76]	; 0x4c
  401746:	edd1 2a11 	vldr	s5, [r1, #68]	; 0x44
        x0r = a[16] + a[18];
  40174a:	ee74 4a87 	vadd.f32	s9, s9, s14
        x3i = a[21] - a[23];
  40174e:	ee78 6a67 	vsub.f32	s13, s16, s15
        x2r = a[20] + a[22];
  401752:	ed91 7a16 	vldr	s14, [r1, #88]	; 0x58
  401756:	ed91 5a14 	vldr	s10, [r1, #80]	; 0x50
        x1i = a[17] - a[19];
  40175a:	ee32 4ac3 	vsub.f32	s8, s5, s6
        x0i = a[25] + a[27];
  40175e:	ed91 9a19 	vldr	s18, [r1, #100]	; 0x64
        x2i = a[21] + a[23];
  401762:	ee38 8a27 	vadd.f32	s16, s16, s15
        x3r = a[20] - a[22];
  401766:	ee35 6a47 	vsub.f32	s12, s10, s14
        x0r = a[24] + a[26];
  40176a:	edd1 7a1a 	vldr	s15, [r1, #104]	; 0x68
        y1r = x1r - x3i;
  40176e:	ee75 9ae6 	vsub.f32	s19, s11, s13
        x2r = a[28] + a[30];
  401772:	edd1 8a1e 	vldr	s17, [r1, #120]	; 0x78
        x0r = a[24] + a[26];
  401776:	ed91 0a18 	vldr	s0, [r1, #96]	; 0x60
        y3r = x1r + x3i;
  40177a:	ee75 6aa6 	vadd.f32	s13, s11, s13
        x2i = a[29] + a[31];
  40177e:	edd1 1a1d 	vldr	s3, [r1, #116]	; 0x74
        x0i = a[17] + a[19];
  401782:	ee72 2a83 	vadd.f32	s5, s5, s6
        x2i = a[29] + a[31];
  401786:	edd1 5a1f 	vldr	s11, [r1, #124]	; 0x7c
        y1i = x1i + x3r;
  40178a:	ee74 aa06 	vadd.f32	s21, s8, s12
        x0i = a[25] + a[27];
  40178e:	ed91 3a1b 	vldr	s6, [r1, #108]	; 0x6c
        x1r = a[24] - a[26];
  401792:	ee70 3a67 	vsub.f32	s7, s0, s15
        x2r = a[28] + a[30];
  401796:	ed91 2a1c 	vldr	s4, [r1, #112]	; 0x70
        x3i = a[29] - a[31];
  40179a:	ee71 0ae5 	vsub.f32	s1, s3, s11
        x1i = a[25] - a[27];
  40179e:	ee39 1a43 	vsub.f32	s2, s18, s6
        x2i = a[29] + a[31];
  4017a2:	ee71 1aa5 	vadd.f32	s3, s3, s11
        x3r = a[28] - a[30];
  4017a6:	ee72 5a68 	vsub.f32	s11, s4, s17
        y3i = x1i - x3r;
  4017aa:	ee34 4a46 	vsub.f32	s8, s8, s12
        wk1i = w[5];
  4017ae:	ed92 6a05 	vldr	s12, [r2, #20]
        x0r = x1r - x3i;
  4017b2:	ee33 aae0 	vsub.f32	s20, s7, s1
        x2r = a[20] + a[22];
  4017b6:	ee35 5a07 	vadd.f32	s10, s10, s14
        x2r = x1r + x3i;
  4017ba:	ee73 3aa0 	vadd.f32	s7, s7, s1
        x0i = x1i + x3r;
  4017be:	ee31 7a25 	vadd.f32	s14, s2, s11
        x2r = a[28] + a[30];
  4017c2:	ee32 2a28 	vadd.f32	s4, s4, s17
        x2i = x3r - x1i;
  4017c6:	ee75 5ac1 	vsub.f32	s11, s11, s2
        x0i = wk1r * y1i + wk1i * y1r;
  4017ca:	ee66 8a29 	vmul.f32	s17, s12, s19
        x0r = wk1r * y1r - wk1i * y1i;
  4017ce:	ee6a 0ac6 	vnmul.f32	s1, s21, s12
        x0r = a[24] + a[26];
  4017d2:	ee30 0a27 	vadd.f32	s0, s0, s15
        wk1r = w[4];
  4017d6:	edd2 7a04 	vldr	s15, [r2, #16]
        x0i = a[25] + a[27];
  4017da:	ee39 3a03 	vadd.f32	s6, s18, s6
        x0i = wk1r * y1i + wk1i * y1r;
  4017de:	eee7 8aaa 	vfma.f32	s17, s15, s21
        x0r = wk1r * y1r - wk1i * y1i;
  4017e2:	eee7 0aa9 	vfma.f32	s1, s15, s19
        y7i = wk1r * x2i - wk1i * x2r;
  4017e6:	ee63 aac6 	vnmul.f32	s21, s7, s12
        y7r = wk1r * x2r + wk1i * x2i;
  4017ea:	ee66 9a25 	vmul.f32	s19, s12, s11
        y5r = wk1i * x0r - wk1r * x0i;
  4017ee:	ee27 9a67 	vnmul.f32	s18, s14, s15
        y5i = wk1i * x0i + wk1r * x0r;
  4017f2:	ee27 1a8a 	vmul.f32	s2, s15, s20
        y7r = wk1r * x2r + wk1i * x2i;
  4017f6:	eee7 9aa3 	vfma.f32	s19, s15, s7
        y7i = wk1r * x2i - wk1i * x2r;
  4017fa:	eef0 3a6a 	vmov.f32	s7, s21
        y5r = wk1i * x0r - wk1r * x0i;
  4017fe:	eea6 9a0a 	vfma.f32	s18, s12, s20
        x0r = wk1i * y3r - wk1r * y3i;
  401802:	ee24 aa67 	vnmul.f32	s20, s8, s15
        y7i = wk1r * x2i - wk1i * x2r;
  401806:	eee7 3aa5 	vfma.f32	s7, s15, s11
        x0i = wk1i * y3i + wk1r * y3r;
  40180a:	ee67 7aa6 	vmul.f32	s15, s15, s13
        y5i = wk1i * x0i + wk1r * x0r;
  40180e:	eea6 1a07 	vfma.f32	s2, s12, s14
        y2r = x0r - x2r;
  401812:	ee74 5ac5 	vsub.f32	s11, s9, s10
        x0r = wk1i * y3r - wk1r * y3i;
  401816:	eea6 aa26 	vfma.f32	s20, s12, s13
        x0i = wk1i * y3i + wk1r * y3r;
  40181a:	eee6 7a04 	vfma.f32	s15, s12, s8
        y6i = x0i - x2i;
  40181e:	ee73 aa61 	vsub.f32	s21, s6, s3
        y2i = x0i - x2i;
  401822:	ee32 4ac8 	vsub.f32	s8, s5, s16
        y6r = x0r - x2r;
  401826:	ee70 6a42 	vsub.f32	s13, s0, s4
        y0r = x0r + x2r;
  40182a:	ee34 7a85 	vadd.f32	s14, s9, s10
        x0r = y2r - y6i;
  40182e:	ee35 6aea 	vsub.f32	s12, s11, s21
        x0i = y2i + y6r;
  401832:	ee74 4a26 	vadd.f32	s9, s8, s13
        x0i = y2r + y6i;
  401836:	ee75 5aaa 	vadd.f32	s11, s11, s21
        x0r = y6r - y2i;
  40183a:	ee76 6ac4 	vsub.f32	s13, s13, s8
        a[20] = wn4r * (x0r - x0i);
  40183e:	ee36 4a64 	vsub.f32	s8, s12, s9
        a[21] = wn4r * (x0i + x0r);
  401842:	ee36 6a24 	vadd.f32	s12, s12, s9
        a[28] = wn4r * (x0r - x0i);
  401846:	ee76 4ae5 	vsub.f32	s9, s13, s11
        a[29] = wn4r * (x0i + x0r);
  40184a:	ee76 6aa5 	vadd.f32	s13, s13, s11
        a[19] = x0i + y5i;
  40184e:	ee71 5a28 	vadd.f32	s11, s2, s17
        y4i = x0i + x2i;
  401852:	ee33 5a21 	vadd.f32	s10, s6, s3
        y0i = x0i + x2i;
  401856:	ee72 2a88 	vadd.f32	s5, s5, s16
        a[18] = x0r + y5r;
  40185a:	ee39 3a20 	vadd.f32	s6, s18, s1
        a[19] = x0i + y5i;
  40185e:	edc1 5a13 	vstr	s11, [r1, #76]	; 0x4c
        y4r = x0r + x2r;
  401862:	ee30 2a02 	vadd.f32	s4, s0, s4
        a[23] = x0i + y7i;
  401866:	ee73 5aa7 	vadd.f32	s11, s7, s15
        a[30] = y7i - x0i;
  40186a:	ee73 7ae7 	vsub.f32	s15, s7, s15
        a[18] = x0r + y5r;
  40186e:	ed81 3a12 	vstr	s6, [r1, #72]	; 0x48
        a[27] = x0r - y5r;
  401872:	ee70 0ac9 	vsub.f32	s1, s1, s18
        a[22] = x0r - y7r;
  401876:	ee3a 3a69 	vsub.f32	s6, s20, s19
        a[23] = x0i + y7i;
  40187a:	edc1 5a17 	vstr	s11, [r1, #92]	; 0x5c
        a[30] = y7i - x0i;
  40187e:	edc1 7a1e 	vstr	s15, [r1, #120]	; 0x78
        a[28] = wn4r * (x0r - x0i);
  401882:	ee64 5a8b 	vmul.f32	s11, s9, s22
        a[17] = y0i + y4i;
  401886:	ee72 7a85 	vadd.f32	s15, s5, s10
        a[27] = x0r - y5r;
  40188a:	edc1 0a1b 	vstr	s1, [r1, #108]	; 0x6c
        a[16] = y0r + y4r;
  40188e:	ee77 4a02 	vadd.f32	s9, s14, s4
        a[22] = x0r - y7r;
  401892:	ed81 3a16 	vstr	s6, [r1, #88]	; 0x58
        a[26] = y5i - x0i;
  401896:	ee31 1a68 	vsub.f32	s2, s2, s17
        a[31] = x0r + y7r;
  40189a:	ee79 9a8a 	vadd.f32	s19, s19, s20
        a[17] = y0i + y4i;
  40189e:	edc1 7a11 	vstr	s15, [r1, #68]	; 0x44
        a[20] = wn4r * (x0r - x0i);
  4018a2:	ee24 4a0b 	vmul.f32	s8, s8, s22
        a[16] = y0r + y4r;
  4018a6:	edc1 4a10 	vstr	s9, [r1, #64]	; 0x40
        a[21] = wn4r * (x0i + x0r);
  4018aa:	ee26 6a0b 	vmul.f32	s12, s12, s22
        a[26] = y5i - x0i;
  4018ae:	ed81 1a1a 	vstr	s2, [r1, #104]	; 0x68
        a[29] = wn4r * (x0i + x0r);
  4018b2:	ee66 6a8b 	vmul.f32	s13, s13, s22
        a[31] = x0r + y7r;
  4018b6:	edc1 9a1f 	vstr	s19, [r1, #124]	; 0x7c
        a[25] = y0r - y4r;
  4018ba:	ee37 7a42 	vsub.f32	s14, s14, s4
        a[20] = wn4r * (x0r - x0i);
  4018be:	ed81 4a14 	vstr	s8, [r1, #80]	; 0x50
        a[24] = y4i - y0i;
  4018c2:	ee35 5a62 	vsub.f32	s10, s10, s5
        a[21] = wn4r * (x0i + x0r);
  4018c6:	ed81 6a15 	vstr	s12, [r1, #84]	; 0x54
        a[25] = y0r - y4r;
  4018ca:	ed81 7a19 	vstr	s14, [r1, #100]	; 0x64
        a[24] = y4i - y0i;
  4018ce:	ed81 5a18 	vstr	s10, [r1, #96]	; 0x60
        a[28] = wn4r * (x0r - x0i);
  4018d2:	edc1 5a1c 	vstr	s11, [r1, #112]	; 0x70
        a[29] = wn4r * (x0i + x0r);
  4018d6:	edc1 6a1d 	vstr	s13, [r1, #116]	; 0x74
        for (j = 32; j < n; j += 16) {
  4018da:	f340 8141 	ble.w	401b60 <cft1st+0x5b8>
  4018de:	f1a0 0321 	sub.w	r3, r0, #33	; 0x21
  4018e2:	f023 030f 	bic.w	r3, r3, #15
  4018e6:	3310      	adds	r3, #16
  4018e8:	4413      	add	r3, r2
            y1r = x1r - x3i;
            y1i = x1i + x3r;
            y3r = x1r + x3i;
            y3i = x1i - x3r;
            x0r = a[j + 8] + a[j + 10];
            x0i = a[j + 9] + a[j + 11];
  4018ea:	edd1 5a2b 	vldr	s11, [r1, #172]	; 0xac
  4018ee:	3210      	adds	r2, #16
            x0r = a[j + 8] + a[j + 10];
  4018f0:	edd1 fa28 	vldr	s31, [r1, #160]	; 0xa0
  4018f4:	3140      	adds	r1, #64	; 0x40
  4018f6:	edd1 da1a 	vldr	s27, [r1, #104]	; 0x68
            x1r = a[j + 8] - a[j + 10];
            x1i = a[j + 9] - a[j + 11];
            x2r = a[j + 12] + a[j + 14];
            x2i = a[j + 13] + a[j + 15];
  4018fa:	ed91 ea1d 	vldr	s28, [r1, #116]	; 0x74
            x2r = a[j + 12] + a[j + 14];
  4018fe:	ed91 8a1c 	vldr	s16, [r1, #112]	; 0x70
            x1r = a[j + 8] - a[j + 10];
  401902:	ee7f eaed 	vsub.f32	s29, s31, s27
            x2i = a[j + 13] + a[j + 15];
  401906:	ed91 3a1f 	vldr	s6, [r1, #124]	; 0x7c
            x0r = a[j + 8] + a[j + 10];
  40190a:	ee7f daad 	vadd.f32	s27, s31, s27
            x0i = a[j + 9] + a[j + 11];
  40190e:	edd1 4a19 	vldr	s9, [r1, #100]	; 0x64
            x2r = a[j + 12] + a[j + 14];
  401912:	ed91 0a1e 	vldr	s0, [r1, #120]	; 0x78
            x3r = a[j + 12] - a[j + 14];
            x3i = a[j + 13] - a[j + 15];
  401916:	ee7e 7a43 	vsub.f32	s15, s28, s6
            x1i = a[j + 9] - a[j + 11];
  40191a:	ee74 0ae5 	vsub.f32	s1, s9, s11
            x0i = a[j + 1] + a[j + 3];
  40191e:	ed91 5a13 	vldr	s10, [r1, #76]	; 0x4c
            x3r = a[j + 12] - a[j + 14];
  401922:	ee78 1a40 	vsub.f32	s3, s16, s0
            x2r = a[j + 4] + a[j + 6];
  401926:	ed91 aa16 	vldr	s20, [r1, #88]	; 0x58
            x0i = a[j + 1] + a[j + 3];
  40192a:	edd1 ca11 	vldr	s25, [r1, #68]	; 0x44
            y4r = x0r + x2r;
            y4i = x0i + x2i;
            y6r = x0r - x2r;
            y6i = x0i - x2i;
            x0r = x1r - x3i;
  40192e:	ee3e dae7 	vsub.f32	s26, s29, s15
            x2r = a[j + 4] + a[j + 6];
  401932:	ed91 6a14 	vldr	s12, [r1, #80]	; 0x50
            x0i = a[j + 9] + a[j + 11];
  401936:	ee74 4aa5 	vadd.f32	s9, s9, s11
            x0i = x1i + x3r;
  40193a:	ee70 2aa1 	vadd.f32	s5, s1, s3
            x0r = a[j] + a[j + 2];
  40193e:	ed91 fa10 	vldr	s30, [r1, #64]	; 0x40
            x2r = x1r + x3i;
            x2i = x1i - x3r;
  401942:	ee70 1ae1 	vsub.f32	s3, s1, s3
            x2i = a[j + 5] + a[j + 7];
  401946:	edd1 9a17 	vldr	s19, [r1, #92]	; 0x5c
            x1i = a[j + 1] - a[j + 3];
  40194a:	ee7c 0ac5 	vsub.f32	s1, s25, s10
            wk1r = w[k1];
  40194e:	ed92 2a04 	vldr	s4, [r2, #16]
            x3r = a[j + 4] - a[j + 6];
  401952:	ee76 5a4a 	vsub.f32	s11, s12, s20
            wk2i = w[k1 + 3];
  401956:	ed92 7a07 	vldr	s14, [r2, #28]
            x2r = x1r + x3i;
  40195a:	ee7e eaa7 	vadd.f32	s29, s29, s15
            x0r = a[j] + a[j + 2];
  40195e:	edd1 7a12 	vldr	s15, [r1, #72]	; 0x48
            x0i = a[j + 1] + a[j + 3];
  401962:	ee7c ca85 	vadd.f32	s25, s25, s10
            x3i = a[j + 5] - a[j + 7];
  401966:	ed91 5a15 	vldr	s10, [r1, #84]	; 0x54
            x2i = a[j + 13] + a[j + 15];
  40196a:	ee3e 3a03 	vadd.f32	s6, s28, s6
            wk1i = w[k1 + 1];
  40196e:	edd2 3a05 	vldr	s7, [r2, #20]
            y5r = wn4r * (x0r - x0i);
            y5i = wn4r * (x0r + x0i);
  401972:	ee3d ea22 	vadd.f32	s28, s26, s5
            wk2r = w[k1 + 2];
  401976:	ed92 1a06 	vldr	s2, [r2, #24]
            x2r = a[j + 12] + a[j + 14];
  40197a:	ee38 0a00 	vadd.f32	s0, s16, s0
            y7r = wn4r * (x2r - x2i);
            y7i = wn4r * (x2r + x2i);
            x0r = y1r + y5r;
            x0i = y1i + y5i;
  40197e:	eddd fa04 	vldr	s31, [sp, #16]
            x1r = a[j] - a[j + 2];
  401982:	ee3f 8a67 	vsub.f32	s16, s30, s15
        for (j = 32; j < n; j += 16) {
  401986:	4293      	cmp	r3, r2
            y5r = wn4r * (x0r - x0i);
  401988:	ee7d 2a62 	vsub.f32	s5, s26, s5
            x3i = a[j + 5] - a[j + 7];
  40198c:	ee35 5a69 	vsub.f32	s10, s10, s19
            y1i = x1i + x3r;
  401990:	ee30 daa5 	vadd.f32	s26, s1, s11
            x2r = a[j + 4] + a[j + 6];
  401994:	ee36 6a0a 	vadd.f32	s12, s12, s20
            x0r = a[j] + a[j + 2];
  401998:	ee3f aa27 	vadd.f32	s20, s30, s15
            x2i = a[j + 5] + a[j + 7];
  40199c:	edd1 7a15 	vldr	s15, [r1, #84]	; 0x54
            wk3r = wk1r - wtmp * wk1i;
  4019a0:	eef1 ba63 	vneg.f32	s23, s7
            wtmp = 2 * wk2i;
  4019a4:	ee37 ba07 	vadd.f32	s22, s14, s14
            y3i = x1i - x3r;
  4019a8:	ee70 5ae5 	vsub.f32	s11, s1, s11
            a[j + 2] = wk1r * x0r - wk1i * x0i;
            a[j + 3] = wk1r * x0i + wk1i * x0r;
            x0r = y1r - y5r;
            x0i = y1i - y5i;
  4019ac:	eeb0 fa4d 	vmov.f32	s30, s26
            y1r = x1r - x3i;
  4019b0:	ee78 0a45 	vsub.f32	s1, s16, s10
            wk3r = wk1r - wtmp * wk1i;
  4019b4:	eef0 8a42 	vmov.f32	s17, s4
            x2i = a[j + 5] + a[j + 7];
  4019b8:	ee77 9aa9 	vadd.f32	s19, s15, s19
            y3r = x1r + x3i;
  4019bc:	ee38 5a05 	vadd.f32	s10, s16, s10
            y7i = wn4r * (x2r + x2i);
  4019c0:	ee7e 7aa1 	vadd.f32	s15, s29, s3
            y7r = wn4r * (x2r - x2i);
  4019c4:	ee3e 8ae1 	vsub.f32	s16, s29, s3
            x0i = y1i - y5i;
  4019c8:	eddd ea05 	vldr	s29, [sp, #20]
            wk3r = wk1r - wtmp * wk1i;
  4019cc:	eeeb 8a8b 	vfma.f32	s17, s23, s22
            x0i = y1i - y5i;
  4019d0:	eeae fa8e 	vfma.f32	s30, s29, s28
            wk4i = wtmp * wk2r;
  4019d4:	ee61 6a0b 	vmul.f32	s13, s2, s22
            x0i = y1i + y5i;
  4019d8:	eeaf da8e 	vfma.f32	s26, s31, s28
            x0r = y1r - y5r;
  4019dc:	eeb0 ea60 	vmov.f32	s28, s1
            wtmp = 2 * wk4i;
  4019e0:	ee36 9aa6 	vadd.f32	s18, s13, s13
            x0r = y1r + y5r;
  4019e4:	eeef 0aa2 	vfma.f32	s1, s31, s5
            x0r = y1r - y5r;
  4019e8:	eeae eaa2 	vfma.f32	s28, s29, s5
            wk7i = wtmp * wk3r - wk1i;
  4019ec:	eef0 2a6b 	vmov.f32	s5, s23
            wk3i = wtmp * wk1r - wk1i;
  4019f0:	eeb0 4a6b 	vmov.f32	s8, s23
            wk4r = 1 - wtmp * wk2i;
  4019f4:	eef1 aa47 	vneg.f32	s21, s14
            wk7i = wtmp * wk3r - wk1i;
  4019f8:	eee8 2a89 	vfma.f32	s5, s17, s18
            wk3i = wtmp * wk1r - wk1i;
  4019fc:	eea2 4a0b 	vfma.f32	s8, s4, s22
            wk7i = wtmp * wk3r - wk1i;
  401a00:	edcd 2a01 	vstr	s5, [sp, #4]
            x0r = y3r - y7i;
            x0i = y3i + y7r;
            a[j + 6] = wk3r * x0r - wk3i * x0i;
            a[j + 7] = wk3r * x0i + wk3i * x0r;
            x0r = y3r + y7i;
            x0i = y3i - y7r;
  401a04:	eef0 2a65 	vmov.f32	s5, s11
            x0i = y3i + y7r;
  401a08:	eeef 5a88 	vfma.f32	s11, s31, s16
            wk5i = wtmp * wk1r - wk3i;
  401a0c:	eeb1 ca44 	vneg.f32	s24, s8
            x0i = y3i - y7r;
  401a10:	eeee 2a88 	vfma.f32	s5, s29, s16
            x0r = y3r + y7i;
  401a14:	eeb0 8a45 	vmov.f32	s16, s10
            wk5i = wtmp * wk1r - wk3i;
  401a18:	eef0 1a4c 	vmov.f32	s3, s24
            x0r = y3r - y7i;
  401a1c:	eeae 5aa7 	vfma.f32	s10, s29, s15
            x0r = y3r + y7i;
  401a20:	eeaf 8aa7 	vfma.f32	s16, s31, s15
            y6r = x0r - x2r;
  401a24:	ee7d fac0 	vsub.f32	s31, s27, s0
            wk5i = wtmp * wk1r - wk3i;
  401a28:	eee2 1a09 	vfma.f32	s3, s4, s18
            wk5r = wk3r - wtmp * wk1i;
  401a2c:	eef0 ea68 	vmov.f32	s29, s17
            y2i = x0i - x2i;
  401a30:	ee7c 7ae9 	vsub.f32	s15, s25, s19
            x0r = y3r + y7i;
  401a34:	ed8d 8a02 	vstr	s16, [sp, #8]
            y0r = x0r + x2r;
  401a38:	ee3a 8a06 	vadd.f32	s16, s20, s12
            y2r = x0r - x2r;
  401a3c:	ee3a 6a46 	vsub.f32	s12, s20, s12
            y4r = x0r + x2r;
  401a40:	ee3d aa80 	vadd.f32	s20, s27, s0
            wk7r = wk1r - wtmp * wk3i;
  401a44:	eef0 da42 	vmov.f32	s27, s4
            wk5r = wk3r - wtmp * wk1i;
  401a48:	eeeb ea89 	vfma.f32	s29, s23, s18
            y0i = x0i + x2i;
  401a4c:	ee3c 0aa9 	vadd.f32	s0, s25, s19
            wk7r = wk1r - wtmp * wk3i;
  401a50:	eeec da09 	vfma.f32	s27, s24, s18
            wk4r = 1 - wtmp * wk2i;
  401a54:	eeb7 ca00 	vmov.f32	s24, #112	; 0x3f800000  1.0
            y4i = x0i + x2i;
  401a58:	ee74 9a83 	vadd.f32	s19, s9, s6
            y6i = x0i - x2i;
  401a5c:	ee74 4ac3 	vsub.f32	s9, s9, s6
            wk4r = 1 - wtmp * wk2i;
  401a60:	eeaa ca8b 	vfma.f32	s24, s21, s22
            wk6i = wtmp * wk2r - wk2i;
  401a64:	eeb0 3a6a 	vmov.f32	s6, s21
            wk6r = wk2r - wtmp * wk2i;
  401a68:	eeb0 ba41 	vmov.f32	s22, s2
            a[j + 14] = wk7r * x0r - wk7i * x0i;
            a[j + 15] = wk7r * x0i + wk7i * x0r;
            a[j] = y0r + y4r;
            a[j + 1] = y0i + y4i;
            x0r = y0r - y4r;
  401a6c:	ee78 ca4a 	vsub.f32	s25, s16, s20
            wk6i = wtmp * wk2r - wk2i;
  401a70:	eea1 3a09 	vfma.f32	s6, s2, s18
            wk6r = wk2r - wtmp * wk2i;
  401a74:	eeaa ba89 	vfma.f32	s22, s21, s18
            a[j + 10] = wk5r * x0r - wk5i * x0i;
  401a78:	ee2f 9a61 	vnmul.f32	s18, s30, s3
            a[j + 11] = wk5r * x0i + wk5i * x0r;
  401a7c:	ee61 1a8e 	vmul.f32	s3, s3, s28
            x0i = y0i - y4i;
  401a80:	ee70 ba69 	vsub.f32	s23, s0, s19
            a[j + 10] = wk5r * x0r - wk5i * x0i;
  401a84:	eeae 9a8e 	vfma.f32	s18, s29, s28
            a[j + 11] = wk5r * x0i + wk5i * x0r;
  401a88:	eeee 1a8f 	vfma.f32	s3, s29, s30
            a[j + 15] = wk7r * x0i + wk7i * x0r;
  401a8c:	ed9d fa02 	vldr	s30, [sp, #8]
            a[j + 2] = wk1r * x0r - wk1i * x0i;
  401a90:	ee2d ea63 	vnmul.f32	s28, s26, s7
            wk6r = wk2r - wtmp * wk2i;
  401a94:	eef0 aa4b 	vmov.f32	s21, s22
            x0r = y2r - y6i;
            x0i = y2i + y6r;
            a[j + 4] = wk2r * x0r - wk2i * x0i;
            a[j + 5] = wk2r * x0i + wk2i * x0r;
            x0r = y2r + y6i;
            x0i = y2i - y6r;
  401a98:	ee37 baef 	vsub.f32	s22, s15, s31
            a[j + 2] = wk1r * x0r - wk1i * x0i;
  401a9c:	eea2 ea20 	vfma.f32	s28, s4, s1
            x0i = y2i + y6r;
  401aa0:	ee77 7aaf 	vadd.f32	s15, s15, s31
            a[j + 10] = wk5r * x0r - wk5i * x0i;
  401aa4:	ed81 9a1a 	vstr	s18, [r1, #104]	; 0x68
            a[j + 11] = wk5r * x0i + wk5i * x0r;
  401aa8:	edcd 1a03 	vstr	s3, [sp, #12]
            x0r = y2r + y6i;
  401aac:	ee76 fa24 	vadd.f32	s31, s12, s9
            a[j + 14] = wk7r * x0r - wk7i * x0i;
  401ab0:	eddd 1a01 	vldr	s3, [sp, #4]
            x0r = y2r - y6i;
  401ab4:	ee36 6a64 	vsub.f32	s12, s12, s9
            a[j + 14] = wk7r * x0r - wk7i * x0i;
  401ab8:	eef0 ea62 	vmov.f32	s29, s5
  401abc:	ee62 4ae1 	vnmul.f32	s9, s5, s3
            a[j + 15] = wk7r * x0i + wk7i * x0r;
  401ac0:	ee61 2a8f 	vmul.f32	s5, s3, s30
            a[j + 11] = wk5r * x0i + wk5i * x0r;
  401ac4:	eddd 1a03 	vldr	s3, [sp, #12]
            a[j + 2] = wk1r * x0r - wk1i * x0i;
  401ac8:	ed81 ea12 	vstr	s28, [r1, #72]	; 0x48
            a[j + 3] = wk1r * x0i + wk1i * x0r;
  401acc:	ee63 3aa0 	vmul.f32	s7, s7, s1
            a[j + 11] = wk5r * x0i + wk5i * x0r;
  401ad0:	edc1 1a1b 	vstr	s3, [r1, #108]	; 0x6c
            a[j + 6] = wk3r * x0r - wk3i * x0i;
  401ad4:	ee65 0ac4 	vnmul.f32	s1, s11, s8
            a[j + 9] = wk4r * x0i + wk4i * x0r;
  401ad8:	ee26 9aac 	vmul.f32	s18, s13, s25
            a[j + 12] = wk6r * x0r - wk6i * x0i;
  401adc:	ee6b 1a43 	vnmul.f32	s3, s22, s6
            a[j + 4] = wk2r * x0r - wk2i * x0i;
  401ae0:	ee27 eac7 	vnmul.f32	s28, s15, s14
            a[j + 7] = wk3r * x0i + wk3i * x0r;
  401ae4:	ee24 4a05 	vmul.f32	s8, s8, s10
            a[j + 8] = wk4r * x0r - wk4i * x0i;
  401ae8:	ee6b 6ae6 	vnmul.f32	s13, s23, s13
            a[j + 13] = wk6r * x0i + wk6i * x0r;
  401aec:	ee23 3a2f 	vmul.f32	s6, s6, s31
            a[j + 5] = wk2r * x0i + wk2i * x0r;
  401af0:	ee27 7a06 	vmul.f32	s14, s14, s12
            a[j + 3] = wk1r * x0i + wk1i * x0r;
  401af4:	eee2 3a0d 	vfma.f32	s7, s4, s26
            a[j + 15] = wk7r * x0i + wk7i * x0r;
  401af8:	eeed 2aae 	vfma.f32	s5, s27, s29
            a[j + 14] = wk7r * x0r - wk7i * x0i;
  401afc:	eeed 4a8f 	vfma.f32	s9, s27, s30
            a[j + 6] = wk3r * x0r - wk3i * x0i;
  401b00:	eee8 0a85 	vfma.f32	s1, s17, s10
            a[j + 7] = wk3r * x0i + wk3i * x0r;
  401b04:	eea8 4aa5 	vfma.f32	s8, s17, s11
            a[j + 8] = wk4r * x0r - wk4i * x0i;
  401b08:	eeec 6a2c 	vfma.f32	s13, s24, s25
            a[j + 9] = wk4r * x0i + wk4i * x0r;
  401b0c:	eeac 9a2b 	vfma.f32	s18, s24, s23
            a[j + 3] = wk1r * x0i + wk1i * x0r;
  401b10:	edc1 3a13 	vstr	s7, [r1, #76]	; 0x4c
            a[j + 13] = wk6r * x0i + wk6i * x0r;
  401b14:	eeaa 3a8b 	vfma.f32	s6, s21, s22
            a[j + 15] = wk7r * x0i + wk7i * x0r;
  401b18:	edc1 2a1f 	vstr	s5, [r1, #124]	; 0x7c
            a[j + 12] = wk6r * x0r - wk6i * x0i;
  401b1c:	eeea 1aaf 	vfma.f32	s3, s21, s31
            a[j + 14] = wk7r * x0r - wk7i * x0i;
  401b20:	edc1 4a1e 	vstr	s9, [r1, #120]	; 0x78
            a[j + 4] = wk2r * x0r - wk2i * x0i;
  401b24:	eea1 ea06 	vfma.f32	s28, s2, s12
            a[j + 6] = wk3r * x0r - wk3i * x0i;
  401b28:	edc1 0a16 	vstr	s1, [r1, #88]	; 0x58
            a[j + 5] = wk2r * x0i + wk2i * x0r;
  401b2c:	eea1 7a27 	vfma.f32	s14, s2, s15
            a[j + 7] = wk3r * x0i + wk3i * x0r;
  401b30:	ed81 4a17 	vstr	s8, [r1, #92]	; 0x5c
            a[j] = y0r + y4r;
  401b34:	ee38 8a0a 	vadd.f32	s16, s16, s20
            a[j + 8] = wk4r * x0r - wk4i * x0i;
  401b38:	edc1 6a18 	vstr	s13, [r1, #96]	; 0x60
            a[j + 1] = y0i + y4i;
  401b3c:	ee30 0a29 	vadd.f32	s0, s0, s19
            a[j + 9] = wk4r * x0i + wk4i * x0r;
  401b40:	ed81 9a19 	vstr	s18, [r1, #100]	; 0x64
            a[j + 13] = wk6r * x0i + wk6i * x0r;
  401b44:	ed81 3a1d 	vstr	s6, [r1, #116]	; 0x74
            a[j] = y0r + y4r;
  401b48:	ed81 8a10 	vstr	s16, [r1, #64]	; 0x40
            a[j + 1] = y0i + y4i;
  401b4c:	ed81 0a11 	vstr	s0, [r1, #68]	; 0x44
            a[j + 4] = wk2r * x0r - wk2i * x0i;
  401b50:	ed81 ea14 	vstr	s28, [r1, #80]	; 0x50
            a[j + 12] = wk6r * x0r - wk6i * x0i;
  401b54:	edc1 1a1c 	vstr	s3, [r1, #112]	; 0x70
            a[j + 5] = wk2r * x0i + wk2i * x0r;
  401b58:	ed81 7a15 	vstr	s14, [r1, #84]	; 0x54
        for (j = 32; j < n; j += 16) {
  401b5c:	f47f aec5 	bne.w	4018ea <cft1st+0x342>
        }
    }
}
  401b60:	b006      	add	sp, #24
  401b62:	ecbd 8b10 	vpop	{d8-d15}
  401b66:	4770      	bx	lr

00401b68 <cftmdl>:


void cftmdl(int n, int l, smpl_t *a, smpl_t *w)
{
  401b68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
        y0r, y0i, y1r, y1i, y2r, y2i, y3r, y3i, 
        y4r, y4i, y5r, y5i, y6r, y6i, y7r, y7i;
    
    m = l << 3;
    wn4r = w[2];
    for (j = 0; j < l; j += 2) {
  401b6c:	2900      	cmp	r1, #0
{
  401b6e:	469b      	mov	fp, r3
    m = l << 3;
  401b70:	ea4f 09c1 	mov.w	r9, r1, lsl #3
{
  401b74:	ed2d 8b10 	vpush	{d8-d15}
  401b78:	b08d      	sub	sp, #52	; 0x34
    wn4r = w[2];
  401b7a:	ed93 fa02 	vldr	s30, [r3, #8]
{
  401b7e:	9009      	str	r0, [sp, #36]	; 0x24
  401b80:	9207      	str	r2, [sp, #28]
    for (j = 0; j < l; j += 2) {
  401b82:	f340 80e7 	ble.w	401d54 <cftmdl+0x1ec>
  401b86:	eb01 0241 	add.w	r2, r1, r1, lsl #1
  401b8a:	f101 3aff 	add.w	sl, r1, #4294967295
  401b8e:	9e07      	ldr	r6, [sp, #28]
  401b90:	008b      	lsls	r3, r1, #2
  401b92:	188d      	adds	r5, r1, r2
  401b94:	ea4f 0a5a 	mov.w	sl, sl, lsr #1
  401b98:	4637      	mov	r7, r6
  401b9a:	eb06 0c03 	add.w	ip, r6, r3
  401b9e:	194c      	adds	r4, r1, r5
  401ba0:	f103 0e04 	add.w	lr, r3, #4
  401ba4:	eb06 0aca 	add.w	sl, r6, sl, lsl #3
  401ba8:	eeb1 8a4f 	vneg.f32	s16, s30
  401bac:	1908      	adds	r0, r1, r4
  401bae:	eb06 0282 	add.w	r2, r6, r2, lsl #2
  401bb2:	eb06 0585 	add.w	r5, r6, r5, lsl #2
  401bb6:	44be      	add	lr, r7
  401bb8:	eb06 0484 	add.w	r4, r6, r4, lsl #2
  401bbc:	180e      	adds	r6, r1, r0
  401bbe:	46b8      	mov	r8, r7
  401bc0:	eb07 0080 	add.w	r0, r7, r0, lsl #2
  401bc4:	eb07 0686 	add.w	r6, r7, r6, lsl #2
  401bc8:	4463      	add	r3, ip
  401bca:	f10a 0a0c 	add.w	sl, sl, #12
  401bce:	3704      	adds	r7, #4
        y2i = x0i - x2i;
        y1r = x1r - x3i;
        y1i = x1i + x3r;
        y3r = x1r + x3i;
        y3i = x1i - x3r;
        x0r = a[j4] + a[j5];
  401bd0:	edd4 7a00 	vldr	s15, [r4]
  401bd4:	3708      	adds	r7, #8
        x0i = a[j4 + 1] + a[j5 + 1];
        x1r = a[j4] - a[j5];
        x1i = a[j4 + 1] - a[j5 + 1];
        x2r = a[j6] + a[j7];
        x2i = a[j6 + 1] + a[j7 + 1];
  401bd6:	edd0 6a01 	vldr	s13, [r0, #4]
  401bda:	f10e 0e08 	add.w	lr, lr, #8
  401bde:	ed96 7a01 	vldr	s14, [r6, #4]
  401be2:	f10c 0c08 	add.w	ip, ip, #8
        x2r = a[j6] + a[j7];
  401be6:	edd6 3a00 	vldr	s7, [r6]
  401bea:	3408      	adds	r4, #8
        x0r = a[j4] + a[j5];
  401bec:	ed95 6a00 	vldr	s12, [r5]
        x2i = a[j6 + 1] + a[j7 + 1];
  401bf0:	ee76 1a87 	vadd.f32	s3, s13, s14
        x0i = a[j4 + 1] + a[j5 + 1];
  401bf4:	ed95 ba01 	vldr	s22, [r5, #4]
  401bf8:	3208      	adds	r2, #8
  401bfa:	ed54 5a01 	vldr	s11, [r4, #-4]
        x1r = a[j4] - a[j5];
  401bfe:	ee36 5a67 	vsub.f32	s10, s12, s15
        x2r = a[j6] + a[j7];
  401c02:	ed90 0a00 	vldr	s0, [r0]
        x0r = a[j4] + a[j5];
  401c06:	ee36 6a27 	vadd.f32	s12, s12, s15
        x1i = a[j4 + 1] - a[j5 + 1];
  401c0a:	ee3b 9a65 	vsub.f32	s18, s22, s11
        x0i = a[j + 1] + a[j1 + 1];
  401c0e:	ed1c aa01 	vldr	s20, [ip, #-4]
        x3r = a[j6] - a[j7];
        x3i = a[j6 + 1] - a[j7 + 1];
  401c12:	ee76 7ac7 	vsub.f32	s15, s13, s14
        x2r = a[j2] + a[j3];
  401c16:	ed93 1a00 	vldr	s2, [r3]
        x3r = a[j6] - a[j7];
  401c1a:	ee70 4a63 	vsub.f32	s9, s0, s7
        x0r = a[j] + a[j1];
  401c1e:	ed57 6a03 	vldr	s13, [r7, #-12]
        x2r = a[j6] + a[j7];
  401c22:	ee30 0a23 	vadd.f32	s0, s0, s7
        x0r = a[j] + a[j1];
  401c26:	ed1e 7a03 	vldr	s14, [lr, #-12]
        y4r = x0r + x2r;
        y4i = x0i + x2i;
        y6r = x0r - x2r;
        y6i = x0i - x2i;
        x0r = x1r - x3i;
  401c2a:	ee75 8a67 	vsub.f32	s17, s10, s15
        x2i = a[j2 + 1] + a[j3 + 1];
  401c2e:	edd3 aa01 	vldr	s21, [r3, #4]
        x0i = x1i + x3r;
  401c32:	ee39 3a24 	vadd.f32	s6, s18, s9
        x2i = a[j2 + 1] + a[j3 + 1];
  401c36:	ed12 2a01 	vldr	s4, [r2, #-4]
        x2r = x1r + x3i;
        x2i = x1i - x3r;
  401c3a:	ee39 9a64 	vsub.f32	s18, s18, s9
        x2r = a[j2] + a[j3];
  401c3e:	ed52 4a02 	vldr	s9, [r2, #-8]
        x2r = x1r + x3i;
  401c42:	ee35 5a27 	vadd.f32	s10, s10, s15
        x0i = a[j + 1] + a[j1 + 1];
  401c46:	edd8 7a01 	vldr	s15, [r8, #4]
        x3r = a[j2] - a[j3];
  401c4a:	ee71 3a64 	vsub.f32	s7, s2, s9
  401c4e:	3608      	adds	r6, #8
        x1i = a[j + 1] - a[j1 + 1];
  401c50:	ee77 2aca 	vsub.f32	s5, s15, s20
  401c54:	f108 0808 	add.w	r8, r8, #8
        x1r = a[j] - a[j1];
  401c58:	ee76 0ac7 	vsub.f32	s1, s13, s14
  401c5c:	3508      	adds	r5, #8
        x3i = a[j2 + 1] - a[j3 + 1];
  401c5e:	ee3a 4ac2 	vsub.f32	s8, s21, s4
  401c62:	3308      	adds	r3, #8
        x2r = a[j2] + a[j3];
  401c64:	ee31 1a24 	vadd.f32	s2, s2, s9
  401c68:	3008      	adds	r0, #8
        y1i = x1i + x3r;
  401c6a:	ee72 4aa3 	vadd.f32	s9, s5, s7
        y5r = wn4r * (x0r - x0i);
  401c6e:	ee78 9ac3 	vsub.f32	s19, s17, s6
        x0r = a[j] + a[j1];
  401c72:	ee36 7a87 	vadd.f32	s14, s13, s14
        y5i = wn4r * (x0r + x0i);
  401c76:	ee78 8a83 	vadd.f32	s17, s17, s6
        y3i = x1i - x3r;
  401c7a:	ee72 6ae3 	vsub.f32	s13, s5, s7
        y1r = x1r - x3i;
  401c7e:	ee30 3ac4 	vsub.f32	s6, s1, s8
        y7r = wn4r * (x2r - x2i);
  401c82:	ee75 2a49 	vsub.f32	s5, s10, s18
        y3r = x1r + x3i;
  401c86:	ee30 4a84 	vadd.f32	s8, s1, s8
        y7i = wn4r * (x2r + x2i);
  401c8a:	ee35 5a09 	vadd.f32	s10, s10, s18
        a[j1] = y1r + y5r;
        a[j1 + 1] = y1i + y5i;
  401c8e:	eeb0 9a64 	vmov.f32	s18, s9
        x0i = a[j + 1] + a[j1 + 1];
  401c92:	ee77 7a8a 	vadd.f32	s15, s15, s20
        a[j5] = y1r - y5r;
        a[j5 + 1] = y1i - y5i;
  401c96:	eee8 4a28 	vfma.f32	s9, s16, s17
        a[j1] = y1r + y5r;
  401c9a:	eeb0 aa43 	vmov.f32	s20, s6
        a[j1 + 1] = y1i + y5i;
  401c9e:	eeaf 9a28 	vfma.f32	s18, s30, s17
        a[j3] = y3r - y7i;
        a[j3 + 1] = y3i + y7r;
  401ca2:	eef0 0a66 	vmov.f32	s1, s13
        a[j3] = y3r - y7i;
  401ca6:	eef0 8a44 	vmov.f32	s17, s8
        a[j7] = y3r + y7i;
        a[j7 + 1] = y3i - y7r;
  401caa:	eee8 6a22 	vfma.f32	s13, s16, s5
        a[j7] = y3r + y7i;
  401cae:	eeaf 4a05 	vfma.f32	s8, s30, s10
        a[j3] = y3r - y7i;
  401cb2:	eee8 8a05 	vfma.f32	s17, s16, s10
        a[j3 + 1] = y3i + y7r;
  401cb6:	eeef 0a22 	vfma.f32	s1, s30, s5
        a[j1] = y1r + y5r;
  401cba:	eeaf aa29 	vfma.f32	s20, s30, s19
        a[j5] = y1r - y5r;
  401cbe:	eea8 3a29 	vfma.f32	s6, s16, s19
        x0i = a[j4 + 1] + a[j5 + 1];
  401cc2:	ee7b 5a25 	vadd.f32	s11, s22, s11
        a[j5 + 1] = y1i - y5i;
  401cc6:	eef0 3a64 	vmov.f32	s7, s9
        y4r = x0r + x2r;
  401cca:	ee76 2a00 	vadd.f32	s5, s12, s0
        y0r = x0r + x2r;
  401cce:	ee77 4a01 	vadd.f32	s9, s14, s2
        x2i = a[j2 + 1] + a[j3 + 1];
  401cd2:	ee3a 2a82 	vadd.f32	s4, s21, s4
        a[j1] = y1r + y5r;
  401cd6:	ed0e aa03 	vstr	s20, [lr, #-12]
        a[j1 + 1] = y1i + y5i;
  401cda:	ed0c 9a01 	vstr	s18, [ip, #-4]
        y2r = x0r - x2r;
  401cde:	ee37 7a41 	vsub.f32	s14, s14, s2
        a[j5 + 1] = y1i - y5i;
  401ce2:	ed44 3a01 	vstr	s7, [r4, #-4]
        y6r = x0r - x2r;
  401ce6:	ee36 6a40 	vsub.f32	s12, s12, s0
        a[j5] = y1r - y5r;
  401cea:	ed04 3a02 	vstr	s6, [r4, #-8]
        y0i = x0i + x2i;
  401cee:	ee37 5a82 	vadd.f32	s10, s15, s4
        a[j3] = y3r - y7i;
  401cf2:	ed42 8a02 	vstr	s17, [r2, #-8]
        y2i = x0i - x2i;
  401cf6:	ee77 7ac2 	vsub.f32	s15, s15, s4
        a[j3 + 1] = y3i + y7r;
  401cfa:	ed42 0a01 	vstr	s1, [r2, #-4]
        a[j7] = y3r + y7i;
  401cfe:	ed06 4a02 	vstr	s8, [r6, #-8]
        y4i = x0i + x2i;
  401d02:	ee35 4aa1 	vadd.f32	s8, s11, s3
        a[j7 + 1] = y3i - y7r;
  401d06:	ed46 6a01 	vstr	s13, [r6, #-4]
        y6i = x0i - x2i;
  401d0a:	ee75 6ae1 	vsub.f32	s13, s11, s3
        a[j] = y0r + y4r;
  401d0e:	ee74 5aa2 	vadd.f32	s11, s9, s5
        a[j + 1] = y0i + y4i;
  401d12:	ee75 3a04 	vadd.f32	s7, s10, s8
        a[j4] = y0r - y4r;
  401d16:	ee74 4ae2 	vsub.f32	s9, s9, s5
        a[j] = y0r + y4r;
  401d1a:	ed47 5a03 	vstr	s11, [r7, #-12]
        a[j4 + 1] = y0i - y4i;
  401d1e:	ee35 5a44 	vsub.f32	s10, s10, s8
        a[j2] = y2r - y6i;
  401d22:	ee77 5a66 	vsub.f32	s11, s14, s13
    for (j = 0; j < l; j += 2) {
  401d26:	45ba      	cmp	sl, r7
        a[j2 + 1] = y2i + y6r;
        a[j6] = y2r + y6i;
  401d28:	ee37 7a26 	vadd.f32	s14, s14, s13
        a[j + 1] = y0i + y4i;
  401d2c:	ed48 3a01 	vstr	s7, [r8, #-4]
        a[j2 + 1] = y2i + y6r;
  401d30:	ee77 6a86 	vadd.f32	s13, s15, s12
        a[j4] = y0r - y4r;
  401d34:	ed45 4a02 	vstr	s9, [r5, #-8]
        a[j6 + 1] = y2i - y6r;
  401d38:	ee77 7ac6 	vsub.f32	s15, s15, s12
        a[j4 + 1] = y0i - y4i;
  401d3c:	ed05 5a01 	vstr	s10, [r5, #-4]
        a[j2] = y2r - y6i;
  401d40:	ed43 5a02 	vstr	s11, [r3, #-8]
        a[j2 + 1] = y2i + y6r;
  401d44:	ed43 6a01 	vstr	s13, [r3, #-4]
        a[j6] = y2r + y6i;
  401d48:	ed00 7a02 	vstr	s14, [r0, #-8]
        a[j6 + 1] = y2i - y6r;
  401d4c:	ed40 7a01 	vstr	s15, [r0, #-4]
    for (j = 0; j < l; j += 2) {
  401d50:	f47f af3e 	bne.w	401bd0 <cftmdl+0x68>
    }
    if (m < n) {
  401d54:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401d56:	4599      	cmp	r9, r3
  401d58:	f280 829f 	bge.w	40229a <cftmdl+0x732>
        wk1r = w[4];
        wk1i = w[5];
        for (j = m; j < l + m; j += 2) {
  401d5c:	eb01 0c09 	add.w	ip, r1, r9
        wk1r = w[4];
  401d60:	ed9b 0a04 	vldr	s0, [fp, #16]
        wk1i = w[5];
  401d64:	ed9b 8a05 	vldr	s16, [fp, #20]
        for (j = m; j < l + m; j += 2) {
  401d68:	45e1      	cmp	r9, ip
  401d6a:	f280 8108 	bge.w	401f7e <cftmdl+0x416>
  401d6e:	eb01 030c 	add.w	r3, r1, ip
  401d72:	ebac 0209 	sub.w	r2, ip, r9
  401d76:	9e07      	ldr	r6, [sp, #28]
  401d78:	f109 0a02 	add.w	sl, r9, #2
  401d7c:	18cd      	adds	r5, r1, r3
  401d7e:	3a01      	subs	r2, #1
  401d80:	eb06 0383 	add.w	r3, r6, r3, lsl #2
  401d84:	194c      	adds	r4, r1, r5
  401d86:	f022 0201 	bic.w	r2, r2, #1
  401d8a:	ea4f 0e89 	mov.w	lr, r9, lsl #2
  401d8e:	9300      	str	r3, [sp, #0]
  401d90:	1908      	adds	r0, r1, r4
  401d92:	4492      	add	sl, r2
  401d94:	f10e 0804 	add.w	r8, lr, #4
  401d98:	eb06 0585 	add.w	r5, r6, r5, lsl #2
  401d9c:	180a      	adds	r2, r1, r0
  401d9e:	eb06 0484 	add.w	r4, r6, r4, lsl #2
  401da2:	44b0      	add	r8, r6
  401da4:	44b6      	add	lr, r6
  401da6:	188b      	adds	r3, r1, r2
  401da8:	eb06 0080 	add.w	r0, r6, r0, lsl #2
  401dac:	eb06 0a8a 	add.w	sl, r6, sl, lsl #2
  401db0:	eb06 0282 	add.w	r2, r6, r2, lsl #2
  401db4:	eb06 078c 	add.w	r7, r6, ip, lsl #2
  401db8:	eb06 0683 	add.w	r6, r6, r3, lsl #2
  401dbc:	9b00      	ldr	r3, [sp, #0]
            j4 = j3 + l;
            j5 = j4 + l;
            j6 = j5 + l;
            j7 = j6 + l;
            x0r = a[j] + a[j1];
            x0i = a[j + 1] + a[j1 + 1];
  401dbe:	ed9e 9a01 	vldr	s18, [lr, #4]
  401dc2:	f10e 0e08 	add.w	lr, lr, #8
            x0r = a[j] + a[j1];
  401dc6:	ed18 2a01 	vldr	s4, [r8, #-4]
  401dca:	3708      	adds	r7, #8
  401dcc:	ed17 7a02 	vldr	s14, [r7, #-8]
  401dd0:	3008      	adds	r0, #8
            x1r = a[j] - a[j1];
            x1i = a[j + 1] - a[j1 + 1];
            x2r = a[j2] + a[j3];
            x2i = a[j2 + 1] + a[j3 + 1];
  401dd2:	edd3 1a01 	vldr	s3, [r3, #4]
  401dd6:	3508      	adds	r5, #8
  401dd8:	ed55 7a01 	vldr	s15, [r5, #-4]
            x1r = a[j] - a[j1];
  401ddc:	ee32 3a47 	vsub.f32	s6, s4, s14
            x2r = a[j2] + a[j3];
  401de0:	ed55 4a02 	vldr	s9, [r5, #-8]
            x0r = a[j] + a[j1];
  401de4:	ee32 2a07 	vadd.f32	s4, s4, s14
            x0i = a[j + 1] + a[j1 + 1];
  401de8:	ed57 0a01 	vldr	s1, [r7, #-4]
            x3r = a[j2] - a[j3];
            x3i = a[j2 + 1] - a[j3 + 1];
  401dec:	ee31 7ae7 	vsub.f32	s14, s3, s15
            x2r = a[j2] + a[j3];
  401df0:	edd3 2a00 	vldr	s5, [r3]
            x2i = a[j2 + 1] + a[j3 + 1];
  401df4:	ee71 aaa7 	vadd.f32	s21, s3, s15
            x1i = a[j + 1] - a[j1 + 1];
  401df8:	ee79 3a60 	vsub.f32	s7, s18, s1
            y1r = x1r - x3i;
            y1i = x1i + x3r;
            y3r = x1r + x3i;
            y3i = x1i - x3r;
            x0r = a[j4] + a[j5];
            x0i = a[j4 + 1] + a[j5 + 1];
  401dfc:	edd4 6a01 	vldr	s13, [r4, #4]
            x3r = a[j2] - a[j3];
  401e00:	ee72 7ae4 	vsub.f32	s15, s5, s9
            x1r = a[j4] - a[j5];
            x1i = a[j4 + 1] - a[j5 + 1];
            x2r = a[j6] + a[j7];
  401e04:	ed92 6a00 	vldr	s12, [r2]
            y1r = x1r - x3i;
  401e08:	ee73 da47 	vsub.f32	s27, s6, s14
            x0r = a[j4] + a[j5];
  401e0c:	ed10 5a02 	vldr	s10, [r0, #-8]
            y3r = x1r + x3i;
  401e10:	ee33 3a07 	vadd.f32	s6, s6, s14
            x0i = a[j4 + 1] + a[j5 + 1];
  401e14:	ed10 7a01 	vldr	s14, [r0, #-4]
            y1i = x1i + x3r;
  401e18:	ee33 eaa7 	vadd.f32	s28, s7, s15
            x2i = a[j6 + 1] + a[j7 + 1];
  401e1c:	edd6 5a01 	vldr	s11, [r6, #4]
            y3i = x1i - x3r;
  401e20:	ee73 3ae7 	vsub.f32	s7, s7, s15
            x2r = a[j6] + a[j7];
  401e24:	edd6 7a00 	vldr	s15, [r6]
            x1i = a[j4 + 1] - a[j5 + 1];
  401e28:	ee36 4ac7 	vsub.f32	s8, s13, s14
            x0r = a[j4] + a[j5];
  401e2c:	ed94 ba00 	vldr	s22, [r4]
            x3r = a[j6] - a[j7];
  401e30:	ee76 8a67 	vsub.f32	s17, s12, s15
            x2i = a[j6 + 1] + a[j7 + 1];
  401e34:	ed92 aa01 	vldr	s20, [r2, #4]
            x1r = a[j4] - a[j5];
  401e38:	ee3b 1a45 	vsub.f32	s2, s22, s10
  401e3c:	3608      	adds	r6, #8
            x3i = a[j6 + 1] - a[j7 + 1];
  401e3e:	ee7a 1a65 	vsub.f32	s3, s20, s11
  401e42:	f108 0808 	add.w	r8, r8, #8
            y4r = x0r + x2r;
            y4i = x0i + x2i;
            y6r = x0r - x2r;
            y6i = x0i - x2i;
            x0r = x1r - x3i;
            x0i = x1i + x3r;
  401e46:	ee74 ca28 	vadd.f32	s25, s8, s17
  401e4a:	3408      	adds	r4, #8
            x0i = a[j + 1] + a[j1 + 1];
  401e4c:	ee79 0a20 	vadd.f32	s1, s18, s1
  401e50:	3308      	adds	r3, #8
            x0r = x1r - x3i;
  401e52:	ee31 da61 	vsub.f32	s26, s2, s3
  401e56:	3208      	adds	r2, #8
            x2r = x1r + x3i;
  401e58:	ee31 1a21 	vadd.f32	s2, s2, s3
            x2r = a[j2] + a[j3];
  401e5c:	ee72 2aa4 	vadd.f32	s5, s5, s9
            x2i = x3r - x1i;
  401e60:	ee78 1ac4 	vsub.f32	s3, s17, s8
            x0r = a[j4] + a[j5];
  401e64:	ee3b ba05 	vadd.f32	s22, s22, s10
            x2i = a[j6 + 1] + a[j7 + 1];
  401e68:	ee3a aa25 	vadd.f32	s20, s20, s11
            x0i = a[j4 + 1] + a[j5 + 1];
  401e6c:	ee76 6a87 	vadd.f32	s13, s13, s14
            x2r = a[j6] + a[j7];
  401e70:	ee36 6a27 	vadd.f32	s12, s12, s15
            y5r = wk1i * x0r - wk1r * x0i;
            y5i = wk1i * x0i + wk1r * x0r;
            y7r = wk1r * x2r + wk1i * x2i;
            y7i = wk1r * x2i - wk1i * x2r;
            x0r = wk1r * y1r - wk1i * y1i;
  401e74:	ee2e 9a48 	vnmul.f32	s18, s28, s16
            y5r = wk1i * x0r - wk1r * x0i;
  401e78:	ee2c 4ac0 	vnmul.f32	s8, s25, s0
            y2r = x0r - x2r;
  401e7c:	ee72 7a62 	vsub.f32	s15, s4, s5
            y6r = x0r - x2r;
  401e80:	ee3b 7a46 	vsub.f32	s14, s22, s12
            y2i = x0i - x2i;
  401e84:	ee70 baea 	vsub.f32	s23, s1, s21
            y6i = x0i - x2i;
  401e88:	ee36 caca 	vsub.f32	s24, s13, s20
            y7r = wk1r * x2r + wk1i * x2i;
  401e8c:	ee68 8a21 	vmul.f32	s17, s16, s3
            x0i = wk1r * y1i + wk1i * y1r;
            a[j1] = x0r + y5r;
            a[j1 + 1] = x0i + y5i;
            a[j5] = y5i - x0i;
            a[j5 + 1] = x0r - y5r;
            x0r = wk1i * y3r - wk1r * y3i;
  401e90:	ee23 5ac0 	vnmul.f32	s10, s7, s0
            x0i = wk1i * y3i + wk1r * y3r;
  401e94:	ee60 5a03 	vmul.f32	s11, s0, s6
            x0r = wk1r * y1r - wk1i * y1i;
  401e98:	eea0 9a2d 	vfma.f32	s18, s0, s27
            y5r = wk1i * x0r - wk1r * x0i;
  401e9c:	eea8 4a0d 	vfma.f32	s8, s16, s26
            x0i = wk1r * y1i + wk1i * y1r;
  401ea0:	ee68 9a2d 	vmul.f32	s19, s16, s27
            y5i = wk1i * x0i + wk1r * x0r;
  401ea4:	ee60 4a0d 	vmul.f32	s9, s0, s26
            y7i = wk1r * x2i - wk1i * x2r;
  401ea8:	ee61 ea48 	vnmul.f32	s29, s2, s16
            y7r = wk1r * x2r + wk1i * x2i;
  401eac:	eee0 8a01 	vfma.f32	s17, s0, s2
            x0r = wk1i * y3r - wk1r * y3i;
  401eb0:	eea8 5a03 	vfma.f32	s10, s16, s6
            x0i = wk1i * y3i + wk1r * y3r;
  401eb4:	eee8 5a23 	vfma.f32	s11, s16, s7
            a[j7 + 1] = x0r + y7r;
            a[j] = y0r + y4r;
            a[j + 1] = y0i + y4i;
            a[j4] = y4i - y0i;
            a[j4 + 1] = y0r - y4r;
            x0r = y2r - y6i;
  401eb8:	ee37 3acc 	vsub.f32	s6, s15, s24
            x0i = y2i + y6r;
  401ebc:	ee7b 3a87 	vadd.f32	s7, s23, s14
            x0i = wk1r * y1i + wk1i * y1r;
  401ec0:	eee0 9a0e 	vfma.f32	s19, s0, s28
            a[j2] = wn4r * (x0r - x0i);
            a[j2 + 1] = wn4r * (x0i + x0r);
            x0r = y6r - y2i;
  401ec4:	ee37 7a6b 	vsub.f32	s14, s14, s23
            y5i = wk1i * x0i + wk1r * x0r;
  401ec8:	eee8 4a2c 	vfma.f32	s9, s16, s25
            x0i = y2r + y6i;
  401ecc:	ee77 7a8c 	vadd.f32	s15, s15, s24
            y7i = wk1r * x2i - wk1i * x2r;
  401ed0:	eeb0 1a6e 	vmov.f32	s2, s29
            y0r = x0r + x2r;
  401ed4:	ee72 2a22 	vadd.f32	s5, s4, s5
            a[j2] = wn4r * (x0r - x0i);
  401ed8:	ee33 2a63 	vsub.f32	s4, s6, s7
            y7i = wk1r * x2i - wk1i * x2r;
  401edc:	eea0 1a21 	vfma.f32	s2, s0, s3
            a[j2 + 1] = wn4r * (x0i + x0r);
  401ee0:	ee73 3a23 	vadd.f32	s7, s6, s7
            a[j6] = wn4r * (x0r - x0i);
  401ee4:	ee37 3a67 	vsub.f32	s6, s14, s15
            a[j6 + 1] = wn4r * (x0i + x0r);
  401ee8:	ee77 7a27 	vadd.f32	s15, s14, s15
            a[j1] = x0r + y5r;
  401eec:	ee34 7a09 	vadd.f32	s14, s8, s18
            y0i = x0i + x2i;
  401ef0:	ee70 1aaa 	vadd.f32	s3, s1, s21
            y4r = x0r + x2r;
  401ef4:	ee3b 6a06 	vadd.f32	s12, s22, s12
            a[j1] = x0r + y5r;
  401ef8:	ed07 7a02 	vstr	s14, [r7, #-8]
            a[j1 + 1] = x0i + y5i;
  401efc:	ee74 0aa9 	vadd.f32	s1, s9, s19
            a[j3] = x0r - y7r;
  401f00:	ee35 7a68 	vsub.f32	s14, s10, s17
            y4i = x0i + x2i;
  401f04:	ee76 6a8a 	vadd.f32	s13, s13, s20
            a[j5] = y5i - x0i;
  401f08:	ee74 4ae9 	vsub.f32	s9, s9, s19
            a[j1 + 1] = x0i + y5i;
  401f0c:	ed47 0a01 	vstr	s1, [r7, #-4]
            a[j5 + 1] = x0r - y5r;
  401f10:	ee39 4a44 	vsub.f32	s8, s18, s8
            a[j7 + 1] = x0r + y7r;
  401f14:	ee38 5a85 	vadd.f32	s10, s17, s10
            a[j5] = y5i - x0i;
  401f18:	ed40 4a02 	vstr	s9, [r0, #-8]
            a[j3 + 1] = x0i + y7i;
  401f1c:	ee71 0a25 	vadd.f32	s1, s2, s11
            a[j5 + 1] = x0r - y5r;
  401f20:	ed00 4a01 	vstr	s8, [r0, #-4]
            a[j7] = y7i - x0i;
  401f24:	ee71 5a65 	vsub.f32	s11, s2, s11
            a[j3] = x0r - y7r;
  401f28:	ed05 7a02 	vstr	s14, [r5, #-8]
            a[j] = y0r + y4r;
  401f2c:	ee72 4a86 	vadd.f32	s9, s5, s12
            a[j + 1] = y0i + y4i;
  401f30:	ee31 7aa6 	vadd.f32	s14, s3, s13
            a[j3 + 1] = x0i + y7i;
  401f34:	ed45 0a01 	vstr	s1, [r5, #-4]
            a[j7 + 1] = x0r + y7r;
  401f38:	ed06 5a01 	vstr	s10, [r6, #-4]
            a[j4 + 1] = y0r - y4r;
  401f3c:	ee32 6ac6 	vsub.f32	s12, s5, s12
            a[j7] = y7i - x0i;
  401f40:	ed46 5a02 	vstr	s11, [r6, #-8]
            a[j4] = y4i - y0i;
  401f44:	ee76 6ae1 	vsub.f32	s13, s13, s3
            a[j] = y0r + y4r;
  401f48:	ed48 4a03 	vstr	s9, [r8, #-12]
            a[j2] = wn4r * (x0r - x0i);
  401f4c:	ee22 5a0f 	vmul.f32	s10, s4, s30
            a[j + 1] = y0i + y4i;
  401f50:	ed0e 7a01 	vstr	s14, [lr, #-4]
            a[j2 + 1] = wn4r * (x0i + x0r);
  401f54:	ee63 5a8f 	vmul.f32	s11, s7, s30
            a[j6] = wn4r * (x0r - x0i);
  401f58:	ee23 7a0f 	vmul.f32	s14, s6, s30
        for (j = m; j < l + m; j += 2) {
  401f5c:	45f2      	cmp	sl, lr
            a[j6 + 1] = wn4r * (x0i + x0r);
  401f5e:	ee67 7a8f 	vmul.f32	s15, s15, s30
            a[j4 + 1] = y0r - y4r;
  401f62:	ed04 6a01 	vstr	s12, [r4, #-4]
            a[j4] = y4i - y0i;
  401f66:	ed44 6a02 	vstr	s13, [r4, #-8]
            a[j2] = wn4r * (x0r - x0i);
  401f6a:	ed03 5a02 	vstr	s10, [r3, #-8]
            a[j2 + 1] = wn4r * (x0i + x0r);
  401f6e:	ed43 5a01 	vstr	s11, [r3, #-4]
            a[j6] = wn4r * (x0r - x0i);
  401f72:	ed02 7a02 	vstr	s14, [r2, #-8]
            a[j6 + 1] = wn4r * (x0i + x0r);
  401f76:	ed42 7a01 	vstr	s15, [r2, #-4]
        for (j = m; j < l + m; j += 2) {
  401f7a:	f47f af20 	bne.w	401dbe <cftmdl+0x256>
        }
        k1 = 4;
        for (k = 2 * m; k < n; k += m) {
  401f7e:	ea4f 0a49 	mov.w	sl, r9, lsl #1
  401f82:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401f84:	4553      	cmp	r3, sl
  401f86:	f340 8188 	ble.w	40229a <cftmdl+0x732>
  401f8a:	eb01 020a 	add.w	r2, r1, sl
  401f8e:	9c07      	ldr	r4, [sp, #28]
  401f90:	eba9 0101 	sub.w	r1, r9, r1
  401f94:	eef1 da4f 	vneg.f32	s27, s30
  401f98:	eb04 0282 	add.w	r2, r4, r2, lsl #2
  401f9c:	465b      	mov	r3, fp
  401f9e:	eb09 000c 	add.w	r0, r9, ip
  401fa2:	eb04 0bc9 	add.w	fp, r4, r9, lsl #3
  401fa6:	9206      	str	r2, [sp, #24]
  401fa8:	008a      	lsls	r2, r1, #2
  401faa:	9005      	str	r0, [sp, #20]
  401fac:	920b      	str	r2, [sp, #44]	; 0x2c
  401fae:	ea4f 0289 	mov.w	r2, r9, lsl #2
  401fb2:	920a      	str	r2, [sp, #40]	; 0x28
            k1 += 4;
            wk1r = w[k1];
            wk1i = w[k1 + 1];
            wk2r = w[k1 + 2];
            wk2i = w[k1 + 3];
  401fb4:	edd3 ba0b 	vldr	s23, [r3, #44]	; 0x2c
            wtmp = 2 * wk2i;
            wk3r = wk1r - wtmp * wk1i;
            wk3i = wtmp * wk1r - wk1i;
            wk4r = 1 - wtmp * wk2i;
  401fb8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
            wk1i = w[k1 + 1];
  401fbc:	ed93 da09 	vldr	s26, [r3, #36]	; 0x24
            wtmp = 2 * wk2i;
  401fc0:	ee7b 7aab 	vadd.f32	s15, s23, s23
            wk1r = w[k1];
  401fc4:	edd3 aa08 	vldr	s21, [r3, #32]
            wk3r = wk1r - wtmp * wk1i;
  401fc8:	eeb1 aa4d 	vneg.f32	s20, s26
            wk2r = w[k1 + 2];
  401fcc:	ed93 ba0a 	vldr	s22, [r3, #40]	; 0x28
            wk4r = 1 - wtmp * wk2i;
  401fd0:	eeb1 7a6b 	vneg.f32	s14, s23
            wk5i = wtmp * wk1r - wk3i;
            wk6r = wk2r - wtmp * wk2i;
            wk6i = wtmp * wk2r - wk2i;
            wk7r = wk1r - wtmp * wk3i;
            wk7i = wtmp * wk3r - wk1i;
            for (j = k; j < l + k; j += 2) {
  401fd4:	9a05      	ldr	r2, [sp, #20]
            wk4i = wtmp * wk2r;
  401fd6:	ee6b ca27 	vmul.f32	s25, s22, s15
            wk3i = wtmp * wk1r - wk1i;
  401fda:	eeb0 ea4a 	vmov.f32	s28, s20
            for (j = k; j < l + k; j += 2) {
  401fde:	4592      	cmp	sl, r2
            wk3r = wk1r - wtmp * wk1i;
  401fe0:	eeb0 ca6a 	vmov.f32	s24, s21
            wk4r = 1 - wtmp * wk2i;
  401fe4:	eee7 6a27 	vfma.f32	s13, s14, s15
            wk3i = wtmp * wk1r - wk1i;
  401fe8:	eeaa eaa7 	vfma.f32	s28, s21, s15
            wk3r = wk1r - wtmp * wk1i;
  401fec:	eeaa ca27 	vfma.f32	s24, s20, s15
            wk6r = wk2r - wtmp * wk2i;
  401ff0:	eeb0 6a4b 	vmov.f32	s12, s22
            wtmp = 2 * wk4i;
  401ff4:	ee7c 7aac 	vadd.f32	s15, s25, s25
            wk7r = wk1r - wtmp * wk3i;
  401ff8:	eef0 ea6a 	vmov.f32	s29, s21
            wk4r = 1 - wtmp * wk2i;
  401ffc:	edcd 6a00 	vstr	s13, [sp]
            wk6r = wk2r - wtmp * wk2i;
  402000:	eea7 6a27 	vfma.f32	s12, s14, s15
            wk5i = wtmp * wk1r - wk3i;
  402004:	eef1 6a4e 	vneg.f32	s13, s28
            wk6i = wtmp * wk2r - wk2i;
  402008:	eeab 7a27 	vfma.f32	s14, s22, s15
            wk7r = wk1r - wtmp * wk3i;
  40200c:	eee6 eaa7 	vfma.f32	s29, s13, s15
            wk6r = wk2r - wtmp * wk2i;
  402010:	ed8d 6a03 	vstr	s12, [sp, #12]
            wk5r = wk3r - wtmp * wk1i;
  402014:	eeb0 6a4c 	vmov.f32	s12, s24
            wk6i = wtmp * wk2r - wk2i;
  402018:	ed8d 7a04 	vstr	s14, [sp, #16]
            wk5r = wk3r - wtmp * wk1i;
  40201c:	eeaa 6a27 	vfma.f32	s12, s20, s15
            wk7i = wtmp * wk3r - wk1i;
  402020:	eeac aa27 	vfma.f32	s20, s24, s15
            wk5r = wk3r - wtmp * wk1i;
  402024:	ed8d 6a01 	vstr	s12, [sp, #4]
            wk5i = wtmp * wk1r - wk3i;
  402028:	eeb0 6a66 	vmov.f32	s12, s13
  40202c:	eeaa 6aa7 	vfma.f32	s12, s21, s15
  402030:	ed8d 6a02 	vstr	s12, [sp, #8]
            for (j = k; j < l + k; j += 2) {
  402034:	f280 8122 	bge.w	40227c <cftmdl+0x714>
  402038:	9a05      	ldr	r2, [sp, #20]
  40203a:	f10a 0802 	add.w	r8, sl, #2
  40203e:	9c06      	ldr	r4, [sp, #24]
  402040:	eb09 000b 	add.w	r0, r9, fp
  402044:	f102 3eff 	add.w	lr, r2, #4294967295
  402048:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  40204a:	eb09 0104 	add.w	r1, r9, r4
  40204e:	9408      	str	r4, [sp, #32]
  402050:	ebae 0e0a 	sub.w	lr, lr, sl
  402054:	9c07      	ldr	r4, [sp, #28]
  402056:	eb02 070b 	add.w	r7, r2, fp
  40205a:	eb00 0209 	add.w	r2, r0, r9
  40205e:	f02e 0e01 	bic.w	lr, lr, #1
  402062:	eb01 0609 	add.w	r6, r1, r9
  402066:	f10b 0c04 	add.w	ip, fp, #4
  40206a:	eb02 0509 	add.w	r5, r2, r9
  40206e:	44f0      	add	r8, lr
  402070:	46de      	mov	lr, fp
  402072:	eb04 0888 	add.w	r8, r4, r8, lsl #2
  402076:	9c08      	ldr	r4, [sp, #32]
                y2i = x0i - x2i;
                y1r = x1r - x3i;
                y1i = x1i + x3r;
                y3r = x1r + x3i;
                y3i = x1i - x3r;
                x0r = a[j4] + a[j5];
  402078:	ed92 3a00 	vldr	s6, [r2]
  40207c:	f10e 0e08 	add.w	lr, lr, #8
  402080:	edd6 7a00 	vldr	s15, [r6]
  402084:	3408      	adds	r4, #8
                x0i = a[j4 + 1] + a[j5 + 1];
                x1r = a[j4] - a[j5];
                x1i = a[j4 + 1] - a[j5 + 1];
                x2r = a[j6] + a[j7];
                x2i = a[j6 + 1] + a[j7 + 1];
  402086:	ed95 4a01 	vldr	s8, [r5, #4]
  40208a:	3608      	adds	r6, #8
  40208c:	ed97 6a01 	vldr	s12, [r7, #4]
                x1r = a[j4] - a[j5];
  402090:	ee73 1a67 	vsub.f32	s3, s6, s15
                x0i = a[j4 + 1] + a[j5 + 1];
  402094:	ed56 6a01 	vldr	s13, [r6, #-4]
                x0r = a[j4] + a[j5];
  402098:	ee33 3a27 	vadd.f32	s6, s6, s15
                x2r = a[j6] + a[j7];
  40209c:	edd5 5a00 	vldr	s11, [r5]
                x3r = a[j6] - a[j7];
                x3i = a[j6 + 1] - a[j7 + 1];
  4020a0:	ee74 7a46 	vsub.f32	s15, s8, s12
                x2r = a[j6] + a[j7];
  4020a4:	edd7 fa00 	vldr	s31, [r7]
                x2i = a[j6 + 1] + a[j7 + 1];
  4020a8:	ee34 4a06 	vadd.f32	s8, s8, s12
                x0i = a[j4 + 1] + a[j5 + 1];
  4020ac:	ed92 7a01 	vldr	s14, [r2, #4]
  4020b0:	3108      	adds	r1, #8
                x3r = a[j6] - a[j7];
  4020b2:	ee35 6aef 	vsub.f32	s12, s11, s31
                x0r = a[j] + a[j1];
  4020b6:	ed1c 9a01 	vldr	s18, [ip, #-4]
                x1i = a[j4 + 1] - a[j5 + 1];
  4020ba:	ee77 4a66 	vsub.f32	s9, s14, s13
                x2i = a[j2 + 1] + a[j3 + 1];
  4020be:	edd0 8a01 	vldr	s17, [r0, #4]
                x0r = a[j] + a[j1];
  4020c2:	ed54 2a02 	vldr	s5, [r4, #-8]
                y4r = x0r + x2r;
                y4i = x0i + x2i;
                y6r = x0r - x2r;
                y6i = x0i - x2i;
                x0r = x1r - x3i;
  4020c6:	ee71 9ae7 	vsub.f32	s19, s3, s15
                x2i = a[j2 + 1] + a[j3 + 1];
  4020ca:	ed51 3a01 	vldr	s7, [r1, #-4]
                x0i = x1i + x3r;
                x2r = x1r + x3i;
  4020ce:	ee71 1aa7 	vadd.f32	s3, s3, s15
                x1r = a[j] - a[j1];
  4020d2:	ee39 8a62 	vsub.f32	s16, s18, s5
                x0i = a[j + 1] + a[j1 + 1];
  4020d6:	ed5e 0a01 	vldr	s1, [lr, #-4]
                x0i = x1i + x3r;
  4020da:	ee34 2a86 	vadd.f32	s4, s9, s12
                x2r = a[j2] + a[j3];
  4020de:	ed90 1a00 	vldr	s2, [r0]
                x2i = x1i - x3r;
  4020e2:	ee74 4ac6 	vsub.f32	s9, s9, s12
                x0i = a[j + 1] + a[j1 + 1];
  4020e6:	ed54 7a01 	vldr	s15, [r4, #-4]
                x3i = a[j2 + 1] - a[j3 + 1];
  4020ea:	ee38 6ae3 	vsub.f32	s12, s17, s7
                x2r = a[j2] + a[j3];
  4020ee:	ed11 5a02 	vldr	s10, [r1, #-8]
                x1i = a[j + 1] - a[j1 + 1];
  4020f2:	ee30 0ae7 	vsub.f32	s0, s1, s15
  4020f6:	3708      	adds	r7, #8
                x0i = a[j4 + 1] + a[j5 + 1];
  4020f8:	ee37 7a26 	vadd.f32	s14, s14, s13
  4020fc:	f10c 0c08 	add.w	ip, ip, #8
                x3r = a[j2] - a[j3];
  402100:	ee71 6a45 	vsub.f32	s13, s2, s10
  402104:	3208      	adds	r2, #8
                x2r = a[j6] + a[j7];
  402106:	ee75 5aaf 	vadd.f32	s11, s11, s31
  40210a:	3008      	adds	r0, #8
                y5r = wn4r * (x0r - x0i);
  40210c:	ee79 fac2 	vsub.f32	s31, s19, s4
  402110:	3508      	adds	r5, #8
                y5i = wn4r * (x0r + x0i);
  402112:	ee39 2a82 	vadd.f32	s4, s19, s4
                y1r = x1r - x3i;
  402116:	ee78 9a46 	vsub.f32	s19, s16, s12
                y3r = x1r + x3i;
  40211a:	ee38 6a06 	vadd.f32	s12, s16, s12
                y1i = x1i + x3r;
  40211e:	ee30 8a26 	vadd.f32	s16, s0, s13
                y3i = x1i - x3r;
  402122:	ee70 6a66 	vsub.f32	s13, s0, s13
                y7r = wn4r * (x2r - x2i);
  402126:	ee31 0ae4 	vsub.f32	s0, s3, s9
                y7i = wn4r * (x2r + x2i);
  40212a:	ee71 4aa4 	vadd.f32	s9, s3, s9
                x0r = y1r + y5r;
  40212e:	eef0 1a69 	vmov.f32	s3, s19
                x0i = y1i + y5i;
                a[j1] = wk1r * x0r - wk1i * x0i;
                a[j1 + 1] = wk1r * x0i + wk1i * x0r;
                x0r = y1r - y5r;
  402132:	eeed 9aaf 	vfma.f32	s19, s27, s31
                x0i = a[j + 1] + a[j1 + 1];
  402136:	ee70 7aa7 	vadd.f32	s15, s1, s15
                x0r = y1r + y5r;
  40213a:	eeef 1a2f 	vfma.f32	s3, s30, s31
                x0i = y1i + y5i;
  40213e:	eef0 fa48 	vmov.f32	s31, s16
                x0i = y1i - y5i;
  402142:	eef0 0a48 	vmov.f32	s1, s16
                x2r = a[j2] + a[j3];
  402146:	ee31 5a05 	vadd.f32	s10, s2, s10
                x0i = y1i + y5i;
  40214a:	eeef fa02 	vfma.f32	s31, s30, s4
                x0r = a[j] + a[j1];
  40214e:	ee79 2a22 	vadd.f32	s5, s18, s5
                a[j5] = wk5r * x0r - wk5i * x0i;
                a[j5 + 1] = wk5r * x0i + wk5i * x0r;
                x0r = y3r - y7i;
                x0i = y3i + y7r;
  402152:	eeb0 8a66 	vmov.f32	s16, s13
                x2i = a[j2 + 1] + a[j3 + 1];
  402156:	ee78 3aa3 	vadd.f32	s7, s17, s7
                x0i = y1i - y5i;
  40215a:	eeed 0a82 	vfma.f32	s1, s27, s4
                x0r = y3r - y7i;
  40215e:	eeb0 2a46 	vmov.f32	s4, s12
                x0i = y3i + y7r;
  402162:	eeaf 8a00 	vfma.f32	s16, s30, s0
                a[j3] = wk3r * x0r - wk3i * x0i;
                a[j3 + 1] = wk3r * x0i + wk3i * x0r;
                x0r = y3r + y7i;
                x0i = y3i - y7r;
  402166:	eeed 6a80 	vfma.f32	s13, s27, s0
                y0r = x0r + x2r;
  40216a:	ee72 8a85 	vadd.f32	s17, s5, s10
                a[j1 + 1] = wk1r * x0i + wk1i * x0r;
  40216e:	ee2d 0a21 	vmul.f32	s0, s26, s3
                y2r = x0r - x2r;
  402172:	ee72 2ac5 	vsub.f32	s5, s5, s10
                y4i = x0i + x2i;
  402176:	ee37 5a04 	vadd.f32	s10, s14, s8
                y6i = x0i - x2i;
  40217a:	ee37 7a44 	vsub.f32	s14, s14, s8
                x0r = y3r - y7i;
  40217e:	eead 2aa4 	vfma.f32	s4, s27, s9
                x0r = y3r + y7i;
  402182:	eeaf 6a24 	vfma.f32	s12, s30, s9
                y4r = x0r + x2r;
  402186:	ee33 9a25 	vadd.f32	s18, s6, s11
                y0i = x0i + x2i;
  40218a:	ee77 4aa3 	vadd.f32	s9, s15, s7
                y6r = x0r - x2r;
  40218e:	ee73 5a65 	vsub.f32	s11, s6, s11
                y2i = x0i - x2i;
  402192:	ee77 7ae3 	vsub.f32	s15, s15, s7
                a[j + 1] = y0i + y4i;
                x0r = y0r - y4r;
                x0i = y0i - y4i;
                a[j4] = wk4r * x0r - wk4i * x0i;
                a[j4 + 1] = wk4r * x0i + wk4i * x0r;
                x0r = y2r - y6i;
  402196:	ee32 1ac7 	vsub.f32	s2, s5, s14
                a[j1 + 1] = wk1r * x0i + wk1i * x0r;
  40219a:	eeaa 0aaf 	vfma.f32	s0, s21, s31
                x0i = y2i + y6r;
                a[j2] = wk2r * x0r - wk2i * x0i;
                a[j2 + 1] = wk2r * x0i + wk2i * x0r;
                x0r = y2r + y6i;
  40219e:	ee32 7a87 	vadd.f32	s14, s5, s14
                a[j1] = wk1r * x0r - wk1i * x0i;
  4021a2:	ee6f 2acd 	vnmul.f32	s5, s31, s26
                a[j5] = wk5r * x0r - wk5i * x0i;
  4021a6:	eddd fa02 	vldr	s31, [sp, #8]
                x0i = y2i + y6r;
  4021aa:	ee37 4aa5 	vadd.f32	s8, s15, s11
                x0i = y2i - y6r;
  4021ae:	ee77 5ae5 	vsub.f32	s11, s15, s11
                a[j5] = wk5r * x0r - wk5i * x0i;
  4021b2:	ee60 7aef 	vnmul.f32	s15, s1, s31
                a[j1] = wk1r * x0r - wk1i * x0i;
  4021b6:	eeea 2aa1 	vfma.f32	s5, s21, s3
                a[j1 + 1] = wk1r * x0i + wk1i * x0r;
  4021ba:	ed04 0a01 	vstr	s0, [r4, #-4]
                a[j5 + 1] = wk5r * x0i + wk5i * x0r;
  4021be:	ee6f 1aa9 	vmul.f32	s3, s31, s19
                a[j5] = wk5r * x0r - wk5i * x0i;
  4021c2:	eddd fa01 	vldr	s31, [sp, #4]
                a[j3] = wk3r * x0r - wk3i * x0i;
  4021c6:	ee28 0a4e 	vnmul.f32	s0, s16, s28
                a[j5] = wk5r * x0r - wk5i * x0i;
  4021ca:	eeef 7aa9 	vfma.f32	s15, s31, s19
                a[j3 + 1] = wk3r * x0i + wk3i * x0r;
  4021ce:	ee6e 9a02 	vmul.f32	s19, s28, s4
                a[j5 + 1] = wk5r * x0i + wk5i * x0r;
  4021d2:	eeef 1aa0 	vfma.f32	s3, s31, s1
                a[j3] = wk3r * x0r - wk3i * x0i;
  4021d6:	eeac 0a02 	vfma.f32	s0, s24, s4
                a[j1] = wk1r * x0r - wk1i * x0i;
  4021da:	ed44 2a02 	vstr	s5, [r4, #-8]
                a[j3 + 1] = wk3r * x0i + wk3i * x0r;
  4021de:	eeec 9a08 	vfma.f32	s19, s24, s16
                a[j7] = wk7r * x0r - wk7i * x0i;
  4021e2:	ee66 0aca 	vnmul.f32	s1, s13, s20
                a[j7 + 1] = wk7r * x0i + wk7i * x0r;
  4021e6:	ee6a 2a06 	vmul.f32	s5, s20, s12
                a[j5] = wk5r * x0r - wk5i * x0i;
  4021ea:	ed46 7a02 	vstr	s15, [r6, #-8]
                x0r = y0r - y4r;
  4021ee:	ee78 3ac9 	vsub.f32	s7, s17, s18
                x0i = y0i - y4i;
  4021f2:	ee34 3ac5 	vsub.f32	s6, s9, s10
                a[j5 + 1] = wk5r * x0i + wk5i * x0r;
  4021f6:	ed46 1a01 	vstr	s3, [r6, #-4]
                a[j2 + 1] = wk2r * x0i + wk2i * x0r;
  4021fa:	ee2b 2a81 	vmul.f32	s4, s23, s2
                a[j3] = wk3r * x0r - wk3i * x0i;
  4021fe:	ed01 0a02 	vstr	s0, [r1, #-8]
                a[j3 + 1] = wk3r * x0i + wk3i * x0r;
  402202:	ed41 9a01 	vstr	s19, [r1, #-4]
                a[j7] = wk7r * x0r - wk7i * x0i;
  402206:	eeee 0a86 	vfma.f32	s1, s29, s12
                a[j6] = wk6r * x0r - wk6i * x0i;
  40220a:	eddd 9a04 	vldr	s19, [sp, #16]
                a[j7 + 1] = wk7r * x0i + wk7i * x0r;
  40220e:	eeee 2aa6 	vfma.f32	s5, s29, s13
                a[j2] = wk2r * x0r - wk2i * x0i;
  402212:	ee24 6a6b 	vnmul.f32	s12, s8, s23
                a[j4 + 1] = wk4r * x0i + wk4i * x0r;
  402216:	ed9d 0a00 	vldr	s0, [sp]
  40221a:	ee6c 7aa3 	vmul.f32	s15, s25, s7
                a[j4] = wk4r * x0r - wk4i * x0i;
  40221e:	ee63 1a6c 	vnmul.f32	s3, s6, s25
                a[j6] = wk6r * x0r - wk6i * x0i;
  402222:	ee25 8ae9 	vnmul.f32	s16, s11, s19
                a[j6 + 1] = wk6r * x0i + wk6i * x0r;
  402226:	ee69 6a87 	vmul.f32	s13, s19, s14
                a[j7] = wk7r * x0r - wk7i * x0i;
  40222a:	ed47 0a02 	vstr	s1, [r7, #-8]
                a[j2 + 1] = wk2r * x0i + wk2i * x0r;
  40222e:	eeab 2a04 	vfma.f32	s4, s22, s8
                a[j6] = wk6r * x0r - wk6i * x0i;
  402232:	ed9d 4a03 	vldr	s8, [sp, #12]
                a[j] = y0r + y4r;
  402236:	ee78 8a89 	vadd.f32	s17, s17, s18
                a[j7 + 1] = wk7r * x0i + wk7i * x0r;
  40223a:	ed47 2a01 	vstr	s5, [r7, #-4]
                a[j + 1] = y0i + y4i;
  40223e:	ee74 4a85 	vadd.f32	s9, s9, s10
                a[j4 + 1] = wk4r * x0i + wk4i * x0r;
  402242:	eee0 7a03 	vfma.f32	s15, s0, s6
                a[j4] = wk4r * x0r - wk4i * x0i;
  402246:	eee0 1a23 	vfma.f32	s3, s0, s7
                a[j] = y0r + y4r;
  40224a:	ed4c 8a03 	vstr	s17, [ip, #-12]
                a[j2] = wk2r * x0r - wk2i * x0i;
  40224e:	eeab 6a01 	vfma.f32	s12, s22, s2
                a[j + 1] = y0i + y4i;
  402252:	ed4e 4a01 	vstr	s9, [lr, #-4]
                a[j6] = wk6r * x0r - wk6i * x0i;
  402256:	eea4 8a07 	vfma.f32	s16, s8, s14
            for (j = k; j < l + k; j += 2) {
  40225a:	45f0      	cmp	r8, lr
                a[j6 + 1] = wk6r * x0i + wk6i * x0r;
  40225c:	eee4 6a25 	vfma.f32	s13, s8, s11
                a[j4] = wk4r * x0r - wk4i * x0i;
  402260:	ed42 1a02 	vstr	s3, [r2, #-8]
                a[j4 + 1] = wk4r * x0i + wk4i * x0r;
  402264:	ed42 7a01 	vstr	s15, [r2, #-4]
                a[j2] = wk2r * x0r - wk2i * x0i;
  402268:	ed00 6a02 	vstr	s12, [r0, #-8]
                a[j2 + 1] = wk2r * x0i + wk2i * x0r;
  40226c:	ed00 2a01 	vstr	s4, [r0, #-4]
                a[j6] = wk6r * x0r - wk6i * x0i;
  402270:	ed05 8a02 	vstr	s16, [r5, #-8]
                a[j6 + 1] = wk6r * x0i + wk6i * x0r;
  402274:	ed45 6a01 	vstr	s13, [r5, #-4]
            for (j = k; j < l + k; j += 2) {
  402278:	f47f aefe 	bne.w	402078 <cftmdl+0x510>
  40227c:	9a05      	ldr	r2, [sp, #20]
        for (k = 2 * m; k < n; k += m) {
  40227e:	44ca      	add	sl, r9
  402280:	990a      	ldr	r1, [sp, #40]	; 0x28
  402282:	3310      	adds	r3, #16
  402284:	444a      	add	r2, r9
  402286:	448b      	add	fp, r1
  402288:	9205      	str	r2, [sp, #20]
  40228a:	9a06      	ldr	r2, [sp, #24]
  40228c:	4610      	mov	r0, r2
  40228e:	9a09      	ldr	r2, [sp, #36]	; 0x24
  402290:	4408      	add	r0, r1
  402292:	4552      	cmp	r2, sl
  402294:	9006      	str	r0, [sp, #24]
  402296:	f73f ae8d 	bgt.w	401fb4 <cftmdl+0x44c>
            }
        }
    }
}
  40229a:	b00d      	add	sp, #52	; 0x34
  40229c:	ecbd 8b10 	vpop	{d8-d15}
  4022a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

004022a4 <cftfsub>:
    if (n >= 16) {
  4022a4:	280f      	cmp	r0, #15
{
  4022a6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4022aa:	4606      	mov	r6, r0
  4022ac:	460d      	mov	r5, r1
    if (n >= 16) {
  4022ae:	dc6a      	bgt.n	402386 <cftfsub+0xe2>
  4022b0:	2304      	movs	r3, #4
    l = 2;
  4022b2:	2402      	movs	r4, #2
    if ((l << 1) < n) {
  4022b4:	429e      	cmp	r6, r3
  4022b6:	dd63      	ble.n	402380 <cftfsub+0xdc>
  4022b8:	00e0      	lsls	r0, r4, #3
  4022ba:	0063      	lsls	r3, r4, #1
  4022bc:	462a      	mov	r2, r5
  4022be:	00a5      	lsls	r5, r4, #2
  4022c0:	1d01      	adds	r1, r0, #4
  4022c2:	4423      	add	r3, r4
  4022c4:	4628      	mov	r0, r5
  4022c6:	1956      	adds	r6, r2, r5
  4022c8:	3504      	adds	r5, #4
  4022ca:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  4022ce:	4411      	add	r1, r2
  4022d0:	4430      	add	r0, r6
  4022d2:	4415      	add	r5, r2
  4022d4:	1d17      	adds	r7, r2, #4
  4022d6:	f04f 0e00 	mov.w	lr, #0
            x0r = a[j] + a[j1];
  4022da:	ed15 6a01 	vldr	s12, [r5, #-4]
        for (j = 0; j < l; j += 2) {
  4022de:	f10e 0e02 	add.w	lr, lr, #2
            x0r = a[j] + a[j1];
  4022e2:	ed17 7a01 	vldr	s14, [r7, #-4]
  4022e6:	3208      	adds	r2, #8
            x0i = a[j + 1] + a[j1 + 1];
  4022e8:	edd6 4a01 	vldr	s9, [r6, #4]
        for (j = 0; j < l; j += 2) {
  4022ec:	45a6      	cmp	lr, r4
            x2r = a[j2] + a[j3];
  4022ee:	ed51 6a01 	vldr	s13, [r1, #-4]
            x0r = a[j] + a[j1];
  4022f2:	ee37 5a06 	vadd.f32	s10, s14, s12
            x2r = a[j2] + a[j3];
  4022f6:	edd3 5a00 	vldr	s11, [r3]
            x1r = a[j] - a[j1];
  4022fa:	ee37 7a46 	vsub.f32	s14, s14, s12
            x0i = a[j + 1] + a[j1 + 1];
  4022fe:	ed52 7a01 	vldr	s15, [r2, #-4]
  402302:	f107 0708 	add.w	r7, r7, #8
            x2i = a[j2 + 1] + a[j3 + 1];
  402306:	ed90 6a01 	vldr	s12, [r0, #4]
            x2r = a[j2] + a[j3];
  40230a:	ee36 4aa5 	vadd.f32	s8, s13, s11
            x2i = a[j2 + 1] + a[j3 + 1];
  40230e:	edd3 3a01 	vldr	s7, [r3, #4]
            x3r = a[j2] - a[j3];
  402312:	ee76 6ae5 	vsub.f32	s13, s13, s11
            x0i = a[j + 1] + a[j1 + 1];
  402316:	ee77 5aa4 	vadd.f32	s11, s15, s9
  40231a:	f100 0008 	add.w	r0, r0, #8
            x1i = a[j + 1] - a[j1 + 1];
  40231e:	ee77 7ae4 	vsub.f32	s15, s15, s9
  402322:	f101 0108 	add.w	r1, r1, #8
            x2i = a[j2 + 1] + a[j3 + 1];
  402326:	ee76 4a23 	vadd.f32	s9, s12, s7
  40232a:	f105 0508 	add.w	r5, r5, #8
            x3i = a[j2 + 1] - a[j3 + 1];
  40232e:	ee36 6a63 	vsub.f32	s12, s12, s7
  402332:	f106 0608 	add.w	r6, r6, #8
            a[j] = x0r + x2r;
  402336:	ee75 3a04 	vadd.f32	s7, s10, s8
  40233a:	f103 0308 	add.w	r3, r3, #8
            a[j2] = x0r - x2r;
  40233e:	ee35 5a44 	vsub.f32	s10, s10, s8
            a[j + 1] = x0i + x2i;
  402342:	ee35 4aa4 	vadd.f32	s8, s11, s9
            a[j2 + 1] = x0i - x2i;
  402346:	ee75 5ae4 	vsub.f32	s11, s11, s9
            a[j] = x0r + x2r;
  40234a:	ed47 3a03 	vstr	s7, [r7, #-12]
            a[j1] = x1r - x3i;
  40234e:	ee77 4a46 	vsub.f32	s9, s14, s12
            a[j3] = x1r + x3i;
  402352:	ee37 7a06 	vadd.f32	s14, s14, s12
            a[j + 1] = x0i + x2i;
  402356:	ed02 4a01 	vstr	s8, [r2, #-4]
            a[j1 + 1] = x1i + x3r;
  40235a:	ee37 6aa6 	vadd.f32	s12, s15, s13
            a[j2] = x0r - x2r;
  40235e:	ed01 5a03 	vstr	s10, [r1, #-12]
            a[j3 + 1] = x1i - x3r;
  402362:	ee77 7ae6 	vsub.f32	s15, s15, s13
            a[j2 + 1] = x0i - x2i;
  402366:	ed40 5a01 	vstr	s11, [r0, #-4]
            a[j1] = x1r - x3i;
  40236a:	ed45 4a03 	vstr	s9, [r5, #-12]
            a[j1 + 1] = x1i + x3r;
  40236e:	ed06 6a01 	vstr	s12, [r6, #-4]
            a[j3] = x1r + x3i;
  402372:	ed03 7a02 	vstr	s14, [r3, #-8]
            a[j3 + 1] = x1i - x3r;
  402376:	ed43 7a01 	vstr	s15, [r3, #-4]
        for (j = 0; j < l; j += 2) {
  40237a:	dbae      	blt.n	4022da <cftfsub+0x36>
  40237c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    } else if ((l << 1) == n) {
  402380:	d01a      	beq.n	4023b8 <cftfsub+0x114>
  402382:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        cft1st(n, a, w);
  402386:	4b27      	ldr	r3, [pc, #156]	; (402424 <cftfsub+0x180>)
  402388:	4617      	mov	r7, r2
  40238a:	4798      	blx	r3
        while ((l << 3) <= n) {
  40238c:	287f      	cmp	r0, #127	; 0x7f
  40238e:	dd46      	ble.n	40241e <cftfsub+0x17a>
  402390:	2480      	movs	r4, #128	; 0x80
  402392:	2110      	movs	r1, #16
  402394:	f8df 8090 	ldr.w	r8, [pc, #144]	; 402428 <cftfsub+0x184>
  402398:	e000      	b.n	40239c <cftfsub+0xf8>
  40239a:	4604      	mov	r4, r0
            cftmdl(n, l, a, w);
  40239c:	4630      	mov	r0, r6
  40239e:	463b      	mov	r3, r7
  4023a0:	462a      	mov	r2, r5
  4023a2:	47c0      	blx	r8
  4023a4:	4621      	mov	r1, r4
        while ((l << 3) <= n) {
  4023a6:	00e0      	lsls	r0, r4, #3
  4023a8:	4286      	cmp	r6, r0
  4023aa:	daf6      	bge.n	40239a <cftfsub+0xf6>
    if ((l << 1) < n) {
  4023ac:	0063      	lsls	r3, r4, #1
  4023ae:	429e      	cmp	r6, r3
  4023b0:	dc31      	bgt.n	402416 <cftfsub+0x172>
    } else if ((l << 1) == n) {
  4023b2:	d1e6      	bne.n	402382 <cftfsub+0xde>
        for (j = 0; j < l; j += 2) {
  4023b4:	2c00      	cmp	r4, #0
  4023b6:	dde4      	ble.n	402382 <cftfsub+0xde>
  4023b8:	1e60      	subs	r0, r4, #1
  4023ba:	00a4      	lsls	r4, r4, #2
  4023bc:	462a      	mov	r2, r5
  4023be:	1d2b      	adds	r3, r5, #4
  4023c0:	0840      	lsrs	r0, r0, #1
  4023c2:	1d21      	adds	r1, r4, #4
  4023c4:	442c      	add	r4, r5
  4023c6:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
  4023ca:	4429      	add	r1, r5
  4023cc:	300c      	adds	r0, #12
            x0r = a[j] - a[j1];
  4023ce:	ed53 7a01 	vldr	s15, [r3, #-4]
  4023d2:	3308      	adds	r3, #8
  4023d4:	ed51 6a01 	vldr	s13, [r1, #-4]
  4023d8:	3208      	adds	r2, #8
            x0i = a[j + 1] - a[j1 + 1];
  4023da:	ed12 7a01 	vldr	s14, [r2, #-4]
  4023de:	3108      	adds	r1, #8
            a[j] += a[j1];
  4023e0:	ee37 6aa6 	vadd.f32	s12, s15, s13
            x0i = a[j + 1] - a[j1 + 1];
  4023e4:	edd4 5a01 	vldr	s11, [r4, #4]
            x0r = a[j] - a[j1];
  4023e8:	ee77 7ae6 	vsub.f32	s15, s15, s13
  4023ec:	3408      	adds	r4, #8
            x0i = a[j + 1] - a[j1 + 1];
  4023ee:	ee37 7a65 	vsub.f32	s14, s14, s11
            a[j] += a[j1];
  4023f2:	ed03 6a03 	vstr	s12, [r3, #-12]
        for (j = 0; j < l; j += 2) {
  4023f6:	4298      	cmp	r0, r3
            a[j + 1] += a[j1 + 1];
  4023f8:	ed52 6a01 	vldr	s13, [r2, #-4]
  4023fc:	ed14 6a01 	vldr	s12, [r4, #-4]
  402400:	ee76 6a86 	vadd.f32	s13, s13, s12
  402404:	ed42 6a01 	vstr	s13, [r2, #-4]
            a[j1] = x0r;
  402408:	ed41 7a03 	vstr	s15, [r1, #-12]
            a[j1 + 1] = x0i;
  40240c:	ed04 7a01 	vstr	s14, [r4, #-4]
        for (j = 0; j < l; j += 2) {
  402410:	d1dd      	bne.n	4023ce <cftfsub+0x12a>
  402412:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        for (j = 0; j < l; j += 2) {
  402416:	2c00      	cmp	r4, #0
  402418:	f73f af50 	bgt.w	4022bc <cftfsub+0x18>
  40241c:	e7b1      	b.n	402382 <cftfsub+0xde>
        while ((l << 3) <= n) {
  40241e:	2320      	movs	r3, #32
        l = 16;
  402420:	2410      	movs	r4, #16
  402422:	e747      	b.n	4022b4 <cftfsub+0x10>
  402424:	004015a9 	.word	0x004015a9
  402428:	00401b69 	.word	0x00401b69

0040242c <aubio_ooura_rdft>:
{
  40242c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402430:	4699      	mov	r9, r3
  402432:	4616      	mov	r6, r2
  402434:	4604      	mov	r4, r0
  402436:	ed2d 8b06 	vpush	{d8-d10}
  40243a:	b089      	sub	sp, #36	; 0x24
    nw = ip[0];
  40243c:	681b      	ldr	r3, [r3, #0]
{
  40243e:	9a18      	ldr	r2, [sp, #96]	; 0x60
    if (n > (nw << 2)) {
  402440:	ebb0 0f83 	cmp.w	r0, r3, lsl #2
{
  402444:	9102      	str	r1, [sp, #8]
    nw = ip[0];
  402446:	9301      	str	r3, [sp, #4]
{
  402448:	9200      	str	r2, [sp, #0]
    if (n > (nw << 2)) {
  40244a:	f300 8099 	bgt.w	402580 <aubio_ooura_rdft+0x154>
  40244e:	f8d9 5004 	ldr.w	r5, [r9, #4]
  402452:	00ab      	lsls	r3, r5, #2
    if (n > (nc << 2)) {
  402454:	429c      	cmp	r4, r3
  402456:	dc18      	bgt.n	40248a <aubio_ooura_rdft+0x5e>
    if (isgn >= 0) {
  402458:	9b02      	ldr	r3, [sp, #8]
  40245a:	2b00      	cmp	r3, #0
  40245c:	db72      	blt.n	402544 <aubio_ooura_rdft+0x118>
        if (n > 4) {
  40245e:	2c04      	cmp	r4, #4
  402460:	f300 8104 	bgt.w	40266c <aubio_ooura_rdft+0x240>
        } else if (n == 4) {
  402464:	f000 8161 	beq.w	40272a <aubio_ooura_rdft+0x2fe>
        xi = a[0] - a[1];
  402468:	edd6 7a00 	vldr	s15, [r6]
  40246c:	ed96 7a01 	vldr	s14, [r6, #4]
        a[0] += a[1];
  402470:	ee77 6a87 	vadd.f32	s13, s15, s14
        xi = a[0] - a[1];
  402474:	ee77 7ac7 	vsub.f32	s15, s15, s14
        a[0] += a[1];
  402478:	edc6 6a00 	vstr	s13, [r6]
        a[1] = xi;
  40247c:	edc6 7a01 	vstr	s15, [r6, #4]
}
  402480:	b009      	add	sp, #36	; 0x24
  402482:	ecbd 8b06 	vpop	{d8-d10}
  402486:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        nc = n >> 2;
  40248a:	10a5      	asrs	r5, r4, #2
        makect(nc, ip, w + nw);
  40248c:	9b00      	ldr	r3, [sp, #0]
  40248e:	9a01      	ldr	r2, [sp, #4]
    if (nc > 1) {
  402490:	2d01      	cmp	r5, #1
    ip[1] = nc;
  402492:	f8c9 5004 	str.w	r5, [r9, #4]
        makect(nc, ip, w + nw);
  402496:	eb03 0a82 	add.w	sl, r3, r2, lsl #2
    if (nc > 1) {
  40249a:	dddd      	ble.n	402458 <aubio_ooura_rdft+0x2c>
        nch = nc >> 1;
  40249c:	10e3      	asrs	r3, r4, #3
        delta = ATAN(1.0) / nch;
  40249e:	ed9f 7aa6 	vldr	s14, [pc, #664]	; 402738 <aubio_ooura_rdft+0x30c>
        c[0] = COS(delta * nch);
  4024a2:	f8df 82a4 	ldr.w	r8, [pc, #676]	; 402748 <aubio_ooura_rdft+0x31c>
        c[nch] = (smpl_t)0.5 * c[0];
  4024a6:	eef6 8a00 	vmov.f32	s17, #96	; 0x3f000000  0.5
        delta = ATAN(1.0) / nch;
  4024aa:	ee07 3a90 	vmov	s15, r3
        nch = nc >> 1;
  4024ae:	461f      	mov	r7, r3
        delta = ATAN(1.0) / nch;
  4024b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
  4024b4:	ee87 9a27 	vdiv.f32	s18, s14, s15
        c[0] = COS(delta * nch);
  4024b8:	ee67 7a89 	vmul.f32	s15, s15, s18
  4024bc:	ee17 0a90 	vmov	r0, s15
  4024c0:	47c0      	blx	r8
  4024c2:	ee07 0a90 	vmov	s15, r0
        c[nch] = (smpl_t)0.5 * c[0];
  4024c6:	eb0a 0387 	add.w	r3, sl, r7, lsl #2
        for (j = 1; j < nch; j++) {
  4024ca:	2f01      	cmp	r7, #1
        c[nch] = (smpl_t)0.5 * c[0];
  4024cc:	ee67 7aa8 	vmul.f32	s15, s15, s17
        c[0] = COS(delta * nch);
  4024d0:	f8ca 0000 	str.w	r0, [sl]
        c[nch] = (smpl_t)0.5 * c[0];
  4024d4:	edc3 7a00 	vstr	s15, [r3]
        for (j = 1; j < nch; j++) {
  4024d8:	463b      	mov	r3, r7
  4024da:	d0bd      	beq.n	402458 <aubio_ooura_rdft+0x2c>
  4024dc:	f04f 0b01 	mov.w	fp, #1
  4024e0:	f10a 0704 	add.w	r7, sl, #4
  4024e4:	4a95      	ldr	r2, [pc, #596]	; (40273c <aubio_ooura_rdft+0x310>)
  4024e6:	eb0a 0a85 	add.w	sl, sl, r5, lsl #2
  4024ea:	9603      	str	r6, [sp, #12]
  4024ec:	465e      	mov	r6, fp
  4024ee:	f8cd 9010 	str.w	r9, [sp, #16]
  4024f2:	46a3      	mov	fp, r4
  4024f4:	46d1      	mov	r9, sl
  4024f6:	4614      	mov	r4, r2
  4024f8:	46aa      	mov	sl, r5
  4024fa:	4645      	mov	r5, r8
  4024fc:	4698      	mov	r8, r3
            c[j] = (smpl_t)0.5 * COS(delta * j);
  4024fe:	ee07 6a90 	vmov	s15, r6
        for (j = 1; j < nch; j++) {
  402502:	3601      	adds	r6, #1
            c[j] = (smpl_t)0.5 * COS(delta * j);
  402504:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
  402508:	ee28 8a09 	vmul.f32	s16, s16, s18
  40250c:	ee18 0a10 	vmov	r0, s16
  402510:	47a8      	blx	r5
  402512:	ee07 0a90 	vmov	s15, r0
            c[nc - j] = (smpl_t)0.5 * SIN(delta * j);
  402516:	ee18 0a10 	vmov	r0, s16
            c[j] = (smpl_t)0.5 * COS(delta * j);
  40251a:	ee67 7aa8 	vmul.f32	s15, s15, s17
  40251e:	ece7 7a01 	vstmia	r7!, {s15}
            c[nc - j] = (smpl_t)0.5 * SIN(delta * j);
  402522:	47a0      	blx	r4
  402524:	ee07 0a90 	vmov	s15, r0
        for (j = 1; j < nch; j++) {
  402528:	45b0      	cmp	r8, r6
            c[nc - j] = (smpl_t)0.5 * SIN(delta * j);
  40252a:	ee67 7aa8 	vmul.f32	s15, s15, s17
  40252e:	ed69 7a01 	vstmdb	r9!, {s15}
        for (j = 1; j < nch; j++) {
  402532:	d1e4      	bne.n	4024fe <aubio_ooura_rdft+0xd2>
    if (isgn >= 0) {
  402534:	9b02      	ldr	r3, [sp, #8]
  402536:	4655      	mov	r5, sl
  402538:	465c      	mov	r4, fp
  40253a:	9e03      	ldr	r6, [sp, #12]
  40253c:	2b00      	cmp	r3, #0
  40253e:	f8dd 9010 	ldr.w	r9, [sp, #16]
  402542:	da8c      	bge.n	40245e <aubio_ooura_rdft+0x32>
        a[1] = (smpl_t)0.5 * (a[0] - a[1]);
  402544:	ed96 7a00 	vldr	s14, [r6]
  402548:	eeb6 4a00 	vmov.f32	s8, #96	; 0x3f000000  0.5
  40254c:	edd6 7a01 	vldr	s15, [r6, #4]
        if (n > 4) {
  402550:	2c04      	cmp	r4, #4
        a[1] = (smpl_t)0.5 * (a[0] - a[1]);
  402552:	ee77 7a67 	vsub.f32	s15, s14, s15
  402556:	ee67 7a84 	vmul.f32	s15, s15, s8
        a[0] -= a[1];
  40255a:	ee37 7a67 	vsub.f32	s14, s14, s15
        a[1] = (smpl_t)0.5 * (a[0] - a[1]);
  40255e:	edc6 7a01 	vstr	s15, [r6, #4]
        a[0] -= a[1];
  402562:	ed86 7a00 	vstr	s14, [r6]
        if (n > 4) {
  402566:	f300 80f1 	bgt.w	40274c <aubio_ooura_rdft+0x320>
        } else if (n == 4) {
  40256a:	d189      	bne.n	402480 <aubio_ooura_rdft+0x54>
            cftfsub(n, a, w);
  40256c:	9a00      	ldr	r2, [sp, #0]
  40256e:	4631      	mov	r1, r6
  402570:	4620      	mov	r0, r4
  402572:	4b73      	ldr	r3, [pc, #460]	; (402740 <aubio_ooura_rdft+0x314>)
}
  402574:	b009      	add	sp, #36	; 0x24
  402576:	ecbd 8b06 	vpop	{d8-d10}
  40257a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
            cftfsub(n, a, w);
  40257e:	4718      	bx	r3
        nw = n >> 2;
  402580:	1083      	asrs	r3, r0, #2
    ip[1] = 1;
  402582:	2501      	movs	r5, #1
    if (nw > 2) {
  402584:	2b02      	cmp	r3, #2
        nw = n >> 2;
  402586:	9301      	str	r3, [sp, #4]
    ip[1] = 1;
  402588:	e889 0028 	stmia.w	r9, {r3, r5}
    if (nw > 2) {
  40258c:	f340 80cb 	ble.w	402726 <aubio_ooura_rdft+0x2fa>
        nwh = nw >> 1;
  402590:	10c3      	asrs	r3, r0, #3
        delta = ATAN(1.0) / nwh;
  402592:	ed9f 7a69 	vldr	s14, [pc, #420]	; 402738 <aubio_ooura_rdft+0x30c>
        w[1] = 0;
  402596:	9800      	ldr	r0, [sp, #0]
  402598:	2200      	movs	r2, #0
        nwh = nw >> 1;
  40259a:	4619      	mov	r1, r3
  40259c:	9303      	str	r3, [sp, #12]
        w[0] = 1;
  40259e:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
        w[1] = 0;
  4025a2:	6042      	str	r2, [r0, #4]
        delta = ATAN(1.0) / nwh;
  4025a4:	ee07 1a90 	vmov	s15, r1
        w[nwh] = COS(delta * nwh);
  4025a8:	460f      	mov	r7, r1
  4025aa:	0089      	lsls	r1, r1, #2
        w[0] = 1;
  4025ac:	6003      	str	r3, [r0, #0]
        delta = ATAN(1.0) / nwh;
  4025ae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        w[nwh] = COS(delta * nwh);
  4025b2:	f8df 8194 	ldr.w	r8, [pc, #404]	; 402748 <aubio_ooura_rdft+0x31c>
  4025b6:	460d      	mov	r5, r1
  4025b8:	9104      	str	r1, [sp, #16]
        delta = ATAN(1.0) / nwh;
  4025ba:	eec7 8a27 	vdiv.f32	s17, s14, s15
        w[nwh] = COS(delta * nwh);
  4025be:	1943      	adds	r3, r0, r5
  4025c0:	461d      	mov	r5, r3
  4025c2:	9305      	str	r3, [sp, #20]
  4025c4:	ee67 7aa8 	vmul.f32	s15, s15, s17
  4025c8:	ee17 0a90 	vmov	r0, s15
  4025cc:	47c0      	blx	r8
        if (nwh > 2) {
  4025ce:	2f02      	cmp	r7, #2
        w[nwh] = COS(delta * nwh);
  4025d0:	6028      	str	r0, [r5, #0]
        w[nwh + 1] = w[nwh];
  4025d2:	6068      	str	r0, [r5, #4]
        if (nwh > 2) {
  4025d4:	f77f af3b 	ble.w	40244e <aubio_ooura_rdft+0x22>
  4025d8:	9b00      	ldr	r3, [sp, #0]
  4025da:	2502      	movs	r5, #2
  4025dc:	9a01      	ldr	r2, [sp, #4]
  4025de:	469b      	mov	fp, r3
  4025e0:	9406      	str	r4, [sp, #24]
  4025e2:	eb03 0782 	add.w	r7, r3, r2, lsl #2
  4025e6:	4b55      	ldr	r3, [pc, #340]	; (40273c <aubio_ooura_rdft+0x310>)
  4025e8:	f8dd a00c 	ldr.w	sl, [sp, #12]
  4025ec:	461c      	mov	r4, r3
  4025ee:	4643      	mov	r3, r8
  4025f0:	46d8      	mov	r8, fp
  4025f2:	46b3      	mov	fp, r6
  4025f4:	461e      	mov	r6, r3
  4025f6:	f8cd 901c 	str.w	r9, [sp, #28]
                x = COS(delta * j);
  4025fa:	ee07 5a90 	vmov	s15, r5
            for (j = 2; j < nwh; j += 2) {
  4025fe:	3502      	adds	r5, #2
  402600:	f108 0808 	add.w	r8, r8, #8
  402604:	3f08      	subs	r7, #8
                x = COS(delta * j);
  402606:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
  40260a:	ee28 8a28 	vmul.f32	s16, s16, s17
  40260e:	ee18 0a10 	vmov	r0, s16
  402612:	47b0      	blx	r6
  402614:	4681      	mov	r9, r0
                y = SIN(delta * j);
  402616:	ee18 0a10 	vmov	r0, s16
  40261a:	47a0      	blx	r4
            for (j = 2; j < nwh; j += 2) {
  40261c:	45aa      	cmp	sl, r5
                w[j] = x;
  40261e:	f8c8 9000 	str.w	r9, [r8]
                w[j + 1] = y;
  402622:	f8c8 0004 	str.w	r0, [r8, #4]
                w[nw - j] = y;
  402626:	6038      	str	r0, [r7, #0]
                w[nw - j + 1] = x;
  402628:	f8c7 9004 	str.w	r9, [r7, #4]
            for (j = 2; j < nwh; j += 2) {
  40262c:	dce5      	bgt.n	4025fa <aubio_ooura_rdft+0x1ce>
            for (j = nwh - 2; j >= 2; j -= 2) {
  40262e:	9b03      	ldr	r3, [sp, #12]
  402630:	465e      	mov	r6, fp
  402632:	9c06      	ldr	r4, [sp, #24]
  402634:	3b02      	subs	r3, #2
  402636:	f8dd 901c 	ldr.w	r9, [sp, #28]
  40263a:	2b01      	cmp	r3, #1
  40263c:	d00f      	beq.n	40265e <aubio_ooura_rdft+0x232>
  40263e:	9904      	ldr	r1, [sp, #16]
  402640:	9a05      	ldr	r2, [sp, #20]
  402642:	440a      	add	r2, r1
  402644:	4611      	mov	r1, r2
  402646:	3b02      	subs	r3, #2
                x = w[2 * j];
  402648:	f852 5c10 	ldr.w	r5, [r2, #-16]
                y = w[2 * j + 1];
  40264c:	f852 0c0c 	ldr.w	r0, [r2, #-12]
  402650:	3908      	subs	r1, #8
            for (j = nwh - 2; j >= 2; j -= 2) {
  402652:	2b01      	cmp	r3, #1
                w[nwh + j] = x;
  402654:	600d      	str	r5, [r1, #0]
                w[nwh + j + 1] = y;
  402656:	6048      	str	r0, [r1, #4]
  402658:	f1a2 0210 	sub.w	r2, r2, #16
            for (j = nwh - 2; j >= 2; j -= 2) {
  40265c:	dcf3      	bgt.n	402646 <aubio_ooura_rdft+0x21a>
            bitrv2(nw, ip + 2, w);
  40265e:	9a00      	ldr	r2, [sp, #0]
  402660:	f109 0108 	add.w	r1, r9, #8
  402664:	9801      	ldr	r0, [sp, #4]
  402666:	4b37      	ldr	r3, [pc, #220]	; (402744 <aubio_ooura_rdft+0x318>)
  402668:	4798      	blx	r3
  40266a:	e6f0      	b.n	40244e <aubio_ooura_rdft+0x22>
            bitrv2(n, ip + 2, a);
  40266c:	f109 0108 	add.w	r1, r9, #8
  402670:	4632      	mov	r2, r6
  402672:	4620      	mov	r0, r4
  402674:	4b33      	ldr	r3, [pc, #204]	; (402744 <aubio_ooura_rdft+0x318>)
  402676:	4798      	blx	r3
            cftfsub(n, a, w);
  402678:	f8dd 8000 	ldr.w	r8, [sp]
void rftfsub(int n, smpl_t *a, int nc, smpl_t *c)
{
    int j, k, kk, ks, m;
    smpl_t wkr, wki, xr, xi, yr, yi;
    
    m = n >> 1;
  40267c:	1067      	asrs	r7, r4, #1
            cftfsub(n, a, w);
  40267e:	4620      	mov	r0, r4
  402680:	4642      	mov	r2, r8
  402682:	4631      	mov	r1, r6
  402684:	4b2e      	ldr	r3, [pc, #184]	; (402740 <aubio_ooura_rdft+0x314>)
  402686:	4798      	blx	r3
            rftfsub(n, a, nc, w + nw);
  402688:	9a01      	ldr	r2, [sp, #4]
    ks = 2 * nc / m;
  40268a:	0068      	lsls	r0, r5, #1
    kk = 0;
    for (j = 2; j < m; j += 2) {
  40268c:	2f02      	cmp	r7, #2
            rftfsub(n, a, nc, w + nw);
  40268e:	eb08 0282 	add.w	r2, r8, r2, lsl #2
    ks = 2 * nc / m;
  402692:	fb90 f0f7 	sdiv	r0, r0, r7
    for (j = 2; j < m; j += 2) {
  402696:	f43f aee7 	beq.w	402468 <aubio_ooura_rdft+0x3c>
  40269a:	1a2d      	subs	r5, r5, r0
  40269c:	ebc0 7e80 	rsb	lr, r0, r0, lsl #30
  4026a0:	0080      	lsls	r0, r0, #2
        k = n - j;
        kk += ks;
        wkr = (smpl_t)0.5 - c[nc - kk];
  4026a2:	eeb6 4a00 	vmov.f32	s8, #96	; 0x3f000000  0.5
  4026a6:	eb02 0585 	add.w	r5, r2, r5, lsl #2
  4026aa:	4633      	mov	r3, r6
  4026ac:	eb06 0484 	add.w	r4, r6, r4, lsl #2
  4026b0:	4402      	add	r2, r0
  4026b2:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
    for (j = 2; j < m; j += 2) {
  4026b6:	2102      	movs	r1, #2
        wki = c[kk];
        xr = a[j] - a[k];
  4026b8:	ed93 7a02 	vldr	s14, [r3, #8]
    for (j = 2; j < m; j += 2) {
  4026bc:	3102      	adds	r1, #2
        xi = a[j + 1] + a[k + 1];
  4026be:	ed93 6a03 	vldr	s12, [r3, #12]
  4026c2:	3c08      	subs	r4, #8
        xr = a[j] - a[k];
  4026c4:	edd4 5a00 	vldr	s11, [r4]
    for (j = 2; j < m; j += 2) {
  4026c8:	428f      	cmp	r7, r1
        xi = a[j + 1] + a[k + 1];
  4026ca:	edd4 4a01 	vldr	s9, [r4, #4]
  4026ce:	f103 0308 	add.w	r3, r3, #8
        xr = a[j] - a[k];
  4026d2:	ee77 5a65 	vsub.f32	s11, s14, s11
        wki = c[kk];
  4026d6:	edd2 7a00 	vldr	s15, [r2]
        xi = a[j + 1] + a[k + 1];
  4026da:	ee76 4a24 	vadd.f32	s9, s12, s9
        wkr = (smpl_t)0.5 - c[nc - kk];
  4026de:	ed95 5a00 	vldr	s10, [r5]
  4026e2:	4402      	add	r2, r0
  4026e4:	4475      	add	r5, lr
        yr = wkr * xr - wki * xi;
        yi = wkr * xi + wki * xr;
  4026e6:	ee67 6aa5 	vmul.f32	s13, s15, s11
        wkr = (smpl_t)0.5 - c[nc - kk];
  4026ea:	ee34 5a45 	vsub.f32	s10, s8, s10
        yr = wkr * xr - wki * xi;
  4026ee:	ee64 7ae7 	vnmul.f32	s15, s9, s15
        yi = wkr * xi + wki * xr;
  4026f2:	eee5 6a24 	vfma.f32	s13, s10, s9
        yr = wkr * xr - wki * xi;
  4026f6:	eee5 7a25 	vfma.f32	s15, s10, s11
        a[j] -= yr;
        a[j + 1] -= yi;
  4026fa:	ee36 6a66 	vsub.f32	s12, s12, s13
        a[j] -= yr;
  4026fe:	ee37 7a67 	vsub.f32	s14, s14, s15
        a[j + 1] -= yi;
  402702:	ed83 6a01 	vstr	s12, [r3, #4]
        a[j] -= yr;
  402706:	ed83 7a00 	vstr	s14, [r3]
        a[k] += yr;
  40270a:	ed94 7a00 	vldr	s14, [r4]
        a[k + 1] -= yi;
  40270e:	ed94 6a01 	vldr	s12, [r4, #4]
        a[k] += yr;
  402712:	ee77 7a27 	vadd.f32	s15, s14, s15
        a[k + 1] -= yi;
  402716:	ee76 6a66 	vsub.f32	s13, s12, s13
        a[k] += yr;
  40271a:	edc4 7a00 	vstr	s15, [r4]
        a[k + 1] -= yi;
  40271e:	edc4 6a01 	vstr	s13, [r4, #4]
    for (j = 2; j < m; j += 2) {
  402722:	dcc9      	bgt.n	4026b8 <aubio_ooura_rdft+0x28c>
  402724:	e6a0      	b.n	402468 <aubio_ooura_rdft+0x3c>
    if (nw > 2) {
  402726:	2304      	movs	r3, #4
  402728:	e694      	b.n	402454 <aubio_ooura_rdft+0x28>
            cftfsub(n, a, w);
  40272a:	9a00      	ldr	r2, [sp, #0]
  40272c:	4620      	mov	r0, r4
  40272e:	4631      	mov	r1, r6
  402730:	4b03      	ldr	r3, [pc, #12]	; (402740 <aubio_ooura_rdft+0x314>)
  402732:	4798      	blx	r3
  402734:	e698      	b.n	402468 <aubio_ooura_rdft+0x3c>
  402736:	bf00      	nop
  402738:	3f490fdb 	.word	0x3f490fdb
  40273c:	00405061 	.word	0x00405061
  402740:	004022a5 	.word	0x004022a5
  402744:	0040135d 	.word	0x0040135d
  402748:	00404fe9 	.word	0x00404fe9
{
    int j, k, kk, ks, m;
    smpl_t wkr, wki, xr, xi, yr, yi;
    
    a[1] = -a[1];
    m = n >> 1;
  40274c:	1067      	asrs	r7, r4, #1
    a[1] = -a[1];
  40274e:	eef1 7a67 	vneg.f32	s15, s15
    ks = 2 * nc / m;
  402752:	ea4f 0e45 	mov.w	lr, r5, lsl #1
            rftbsub(n, a, nc, w + nw);
  402756:	9b00      	ldr	r3, [sp, #0]
  402758:	9a01      	ldr	r2, [sp, #4]
    kk = 0;
    for (j = 2; j < m; j += 2) {
  40275a:	2f02      	cmp	r7, #2
    a[1] = -a[1];
  40275c:	edc6 7a01 	vstr	s15, [r6, #4]
            rftbsub(n, a, nc, w + nw);
  402760:	eb03 0182 	add.w	r1, r3, r2, lsl #2
    ks = 2 * nc / m;
  402764:	fb9e fef7 	sdiv	lr, lr, r7
    for (j = 2; j < m; j += 2) {
  402768:	f000 81fc 	beq.w	402b64 <aubio_ooura_rdft+0x738>
  40276c:	eba5 050e 	sub.w	r5, r5, lr
  402770:	ebce 7c8e 	rsb	ip, lr, lr, lsl #30
  402774:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
  402778:	4632      	mov	r2, r6
  40277a:	eb01 0585 	add.w	r5, r1, r5, lsl #2
  40277e:	2002      	movs	r0, #2
  402780:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
  402784:	4471      	add	r1, lr
  402786:	eb06 0384 	add.w	r3, r6, r4, lsl #2
        k = n - j;
        kk += ks;
        wkr = (smpl_t)0.5 - c[nc - kk];
        wki = c[kk];
        xr = a[j] - a[k];
  40278a:	ed92 7a02 	vldr	s14, [r2, #8]
    for (j = 2; j < m; j += 2) {
  40278e:	3002      	adds	r0, #2
        xi = a[j + 1] + a[k + 1];
  402790:	ed92 6a03 	vldr	s12, [r2, #12]
  402794:	3b08      	subs	r3, #8
        xr = a[j] - a[k];
  402796:	edd3 5a00 	vldr	s11, [r3]
    for (j = 2; j < m; j += 2) {
  40279a:	4287      	cmp	r7, r0
        xi = a[j + 1] + a[k + 1];
  40279c:	edd3 4a01 	vldr	s9, [r3, #4]
  4027a0:	f102 0208 	add.w	r2, r2, #8
        xr = a[j] - a[k];
  4027a4:	ee77 5a65 	vsub.f32	s11, s14, s11
        wki = c[kk];
  4027a8:	edd1 7a00 	vldr	s15, [r1]
        xi = a[j + 1] + a[k + 1];
  4027ac:	ee76 4a24 	vadd.f32	s9, s12, s9
        wkr = (smpl_t)0.5 - c[nc - kk];
  4027b0:	ed95 5a00 	vldr	s10, [r5]
  4027b4:	4471      	add	r1, lr
  4027b6:	4465      	add	r5, ip
        yr = wkr * xr + wki * xi;
        yi = wkr * xi - wki * xr;
  4027b8:	ee65 6ae7 	vnmul.f32	s13, s11, s15
        wkr = (smpl_t)0.5 - c[nc - kk];
  4027bc:	ee34 5a45 	vsub.f32	s10, s8, s10
        yr = wkr * xr + wki * xi;
  4027c0:	ee67 7aa4 	vmul.f32	s15, s15, s9
        yi = wkr * xi - wki * xr;
  4027c4:	eee5 6a24 	vfma.f32	s13, s10, s9
        yr = wkr * xr + wki * xi;
  4027c8:	eee5 7a25 	vfma.f32	s15, s10, s11
        a[j] -= yr;
        a[j + 1] = yi - a[j + 1];
  4027cc:	ee36 6ac6 	vsub.f32	s12, s13, s12
        a[j] -= yr;
  4027d0:	ee37 7a67 	vsub.f32	s14, s14, s15
        a[j + 1] = yi - a[j + 1];
  4027d4:	ed82 6a01 	vstr	s12, [r2, #4]
        a[j] -= yr;
  4027d8:	ed82 7a00 	vstr	s14, [r2]
        a[k] += yr;
  4027dc:	ed93 7a00 	vldr	s14, [r3]
        a[k + 1] = yi - a[k + 1];
  4027e0:	ed93 6a01 	vldr	s12, [r3, #4]
        a[k] += yr;
  4027e4:	ee77 7a27 	vadd.f32	s15, s14, s15
        a[k + 1] = yi - a[k + 1];
  4027e8:	ee76 6ac6 	vsub.f32	s13, s13, s12
        a[k] += yr;
  4027ec:	edc3 7a00 	vstr	s15, [r3]
        a[k + 1] = yi - a[k + 1];
  4027f0:	edc3 6a01 	vstr	s13, [r3, #4]
    for (j = 2; j < m; j += 2) {
  4027f4:	dcc9      	bgt.n	40278a <aubio_ooura_rdft+0x35e>
    }
    a[m + 1] = -a[m + 1];
  4027f6:	3701      	adds	r7, #1
            bitrv2(n, ip + 2, a);
  4027f8:	f109 0108 	add.w	r1, r9, #8
  4027fc:	4632      	mov	r2, r6
  4027fe:	4620      	mov	r0, r4
    a[m + 1] = -a[m + 1];
  402800:	eb06 0787 	add.w	r7, r6, r7, lsl #2
            bitrv2(n, ip + 2, a);
  402804:	4be0      	ldr	r3, [pc, #896]	; (402b88 <aubio_ooura_rdft+0x75c>)
    a[m + 1] = -a[m + 1];
  402806:	edd7 7a00 	vldr	s15, [r7]
  40280a:	eef1 7a67 	vneg.f32	s15, s15
  40280e:	edc7 7a00 	vstr	s15, [r7]
            bitrv2(n, ip + 2, a);
  402812:	4798      	blx	r3
    if (n > 16) {
  402814:	2c10      	cmp	r4, #16
  402816:	f300 80ec 	bgt.w	4029f2 <aubio_ooura_rdft+0x5c6>
  40281a:	2308      	movs	r3, #8
    l = 2;
  40281c:	2702      	movs	r7, #2
    if ((l << 2) < n) {
  40281e:	429c      	cmp	r4, r3
  402820:	f340 8108 	ble.w	402a34 <aubio_ooura_rdft+0x608>
        wn4r = w[2];
  402824:	9b00      	ldr	r3, [sp, #0]
  402826:	ed93 2a02 	vldr	s4, [r3, #8]
  40282a:	00bb      	lsls	r3, r7, #2
  40282c:	eb07 0247 	add.w	r2, r7, r7, lsl #1
  402830:	18f5      	adds	r5, r6, r3
        while ((l << 3) < n) {
  402832:	f04f 0800 	mov.w	r8, #0
  402836:	f106 0c04 	add.w	ip, r6, #4
  40283a:	18b8      	adds	r0, r7, r2
  40283c:	442b      	add	r3, r5
  40283e:	eb06 0282 	add.w	r2, r6, r2, lsl #2
  402842:	183c      	adds	r4, r7, r0
  402844:	eb06 0080 	add.w	r0, r6, r0, lsl #2
  402848:	1939      	adds	r1, r7, r4
  40284a:	f104 0e01 	add.w	lr, r4, #1
  40284e:	187c      	adds	r4, r7, r1
  402850:	eb06 0e8e 	add.w	lr, r6, lr, lsl #2
  402854:	eb06 0181 	add.w	r1, r6, r1, lsl #2
  402858:	eb06 0484 	add.w	r4, r6, r4, lsl #2
            x0r = a[j4] + a[j5];
  40285c:	edd0 6a00 	vldr	s13, [r0]
        for (j = 0; j < l; j += 2) {
  402860:	f108 0802 	add.w	r8, r8, #2
            x0r = a[j4] + a[j5];
  402864:	ed1e 7a01 	vldr	s14, [lr, #-4]
  402868:	3508      	adds	r5, #8
            x2i = a[j6 + 1] + a[j7 + 1];
  40286a:	edd4 7a01 	vldr	s15, [r4, #4]
        for (j = 0; j < l; j += 2) {
  40286e:	4547      	cmp	r7, r8
            x2r = a[j6] + a[j7];
  402870:	edd1 9a00 	vldr	s19, [r1]
            x1r = a[j4] - a[j5];
  402874:	ee36 5ac7 	vsub.f32	s10, s13, s14
            x2i = a[j6 + 1] + a[j7 + 1];
  402878:	ed91 3a01 	vldr	s6, [r1, #4]
            x0r = a[j4] + a[j5];
  40287c:	ee76 2a87 	vadd.f32	s5, s13, s14
            x0i = a[j4 + 1] + a[j5 + 1];
  402880:	ed90 aa01 	vldr	s20, [r0, #4]
  402884:	f102 0208 	add.w	r2, r2, #8
  402888:	edde 5a00 	vldr	s11, [lr]
            x3i = a[j6 + 1] - a[j7 + 1];
  40288c:	ee33 6a67 	vsub.f32	s12, s6, s15
            x2r = a[j6] + a[j7];
  402890:	edd4 6a00 	vldr	s13, [r4]
            x2i = a[j6 + 1] + a[j7 + 1];
  402894:	ee33 3a27 	vadd.f32	s6, s6, s15
            x1i = a[j4 + 1] - a[j5 + 1];
  402898:	ee3a 8a65 	vsub.f32	s16, s20, s11
            x0r = a[j] + a[j1];
  40289c:	ed5c 0a01 	vldr	s1, [ip, #-4]
            x3r = a[j6] - a[j7];
  4028a0:	ee79 7ae6 	vsub.f32	s15, s19, s13
            x0r = a[j] + a[j1];
  4028a4:	ed15 7a02 	vldr	s14, [r5, #-8]
            x0r = x1r - x3i;
  4028a8:	ee35 9a46 	vsub.f32	s18, s10, s12
            x2i = a[j2 + 1] + a[j3 + 1];
  4028ac:	edd3 3a01 	vldr	s7, [r3, #4]
  4028b0:	ed12 4a01 	vldr	s8, [r2, #-4]
            x1r = a[j] - a[j1];
  4028b4:	ee30 0ac7 	vsub.f32	s0, s1, s14
            x0i = x1i + x3r;
  4028b8:	ee78 4a27 	vadd.f32	s9, s16, s15
            x2r = a[j2] + a[j3];
  4028bc:	ed93 1a00 	vldr	s2, [r3]
            x2r = a[j6] + a[j7];
  4028c0:	ee79 6aa6 	vadd.f32	s13, s19, s13
            x2r = a[j2] + a[j3];
  4028c4:	ed52 1a02 	vldr	s3, [r2, #-8]
            x2r = x1r + x3i;
  4028c8:	ee75 8a06 	vadd.f32	s17, s10, s12
            x0i = -a[j + 1] - a[j1 + 1];
  4028cc:	ed96 6a01 	vldr	s12, [r6, #4]
            y5r = wn4r * (x0r - x0i);
  4028d0:	ee79 9a64 	vsub.f32	s19, s18, s9
  4028d4:	f104 0408 	add.w	r4, r4, #8
            y5i = wn4r * (x0r + x0i);
  4028d8:	ee39 9a24 	vadd.f32	s18, s18, s9
  4028dc:	f106 0608 	add.w	r6, r6, #8
            x3i = a[j2 + 1] - a[j3 + 1];
  4028e0:	ee73 4ac4 	vsub.f32	s9, s7, s8
  4028e4:	f100 0008 	add.w	r0, r0, #8
            x2i = x1i - x3r;
  4028e8:	ee38 8a67 	vsub.f32	s16, s16, s15
  4028ec:	f10c 0c08 	add.w	ip, ip, #8
            x0i = a[j4 + 1] + a[j5 + 1];
  4028f0:	ee7a 7a25 	vadd.f32	s15, s20, s11
            x0i = -a[j + 1] - a[j1 + 1];
  4028f4:	ed55 5a01 	vldr	s11, [r5, #-4]
            x2i = a[j2 + 1] + a[j3 + 1];
  4028f8:	ee33 4a84 	vadd.f32	s8, s7, s8
  4028fc:	f103 0308 	add.w	r3, r3, #8
            x1i = -a[j + 1] + a[j1 + 1];
  402900:	ee35 5ac6 	vsub.f32	s10, s11, s12
  402904:	f101 0108 	add.w	r1, r1, #8
            x0r = a[j] + a[j1];
  402908:	ee70 3a87 	vadd.f32	s7, s1, s14
  40290c:	ee36 6a25 	vadd.f32	s12, s12, s11
            y1r = x1r - x3i;
  402910:	ee70 0a64 	vsub.f32	s1, s0, s9
            x3r = a[j2] - a[j3];
  402914:	ee71 5a61 	vsub.f32	s11, s2, s3
            x2r = a[j2] + a[j3];
  402918:	ee31 7a21 	vadd.f32	s14, s2, s3
            y3r = x1r + x3i;
  40291c:	ee70 4a24 	vadd.f32	s9, s0, s9
            y1i = x1i - x3r;
  402920:	ee35 1a65 	vsub.f32	s2, s10, s11
            y7r = wn4r * (x2r - x2i);
  402924:	ee38 0ac8 	vsub.f32	s0, s17, s16
            y3i = x1i + x3r;
  402928:	ee75 5a25 	vadd.f32	s11, s10, s11
            y7i = wn4r * (x2r + x2i);
  40292c:	ee38 5a88 	vadd.f32	s10, s17, s16
            a[j1] = y1r + y5r;
  402930:	eeb0 8a60 	vmov.f32	s16, s1
  402934:	ee74 1a06 	vadd.f32	s3, s8, s12
            y2i = x0i + x2i;
  402938:	ee34 6a46 	vsub.f32	s12, s8, s12
            a[j1] = y1r + y5r;
  40293c:	eea9 8a82 	vfma.f32	s16, s19, s4
            a[j5 + 1] = y1i + y5i;
  402940:	eeb0 4a41 	vmov.f32	s8, s2
            a[j5] = y1r - y5r;
  402944:	eee9 0ac2 	vfms.f32	s1, s19, s4
            a[j3] = y3r - y7i;
  402948:	eef0 8a64 	vmov.f32	s17, s9
            a[j1 + 1] = y1i - y5i;
  40294c:	eef0 9a41 	vmov.f32	s19, s2
            a[j5 + 1] = y1i + y5i;
  402950:	eea9 4a02 	vfma.f32	s8, s18, s4
            a[j1] = y1r + y5r;
  402954:	ed05 8a02 	vstr	s16, [r5, #-8]
            a[j3 + 1] = y3i - y7r;
  402958:	eeb0 8a65 	vmov.f32	s16, s11
            a[j7] = y3r + y7i;
  40295c:	eee5 4a02 	vfma.f32	s9, s10, s4
            a[j7 + 1] = y3i + y7r;
  402960:	eee0 5a02 	vfma.f32	s11, s0, s4
            a[j3] = y3r - y7i;
  402964:	eee5 8a42 	vfms.f32	s17, s10, s4
            a[j3 + 1] = y3i - y7r;
  402968:	eea0 8a42 	vfms.f32	s16, s0, s4
            a[j1 + 1] = y1i - y5i;
  40296c:	eee9 9a42 	vfms.f32	s19, s18, s4
            a[j5 + 1] = y1i + y5i;
  402970:	ee14 9a10 	vmov	r9, s8
            y4i = x0i + x2i;
  402974:	ee37 1a83 	vadd.f32	s2, s15, s6
            y0r = x0r + x2r;
  402978:	ee33 4a87 	vadd.f32	s8, s7, s14
            y4r = x0r + x2r;
  40297c:	ee32 5aa6 	vadd.f32	s10, s5, s13
            y2r = x0r - x2r;
  402980:	ee33 7ac7 	vsub.f32	s14, s7, s14
            y0i = x0i - x2i;
  402984:	eeb1 0a61 	vneg.f32	s0, s3
            y6i = x0i - x2i;
  402988:	ee77 7ac3 	vsub.f32	s15, s15, s6
            a[j1 + 1] = y1i - y5i;
  40298c:	ed45 9a01 	vstr	s19, [r5, #-4]
            y6r = x0r - x2r;
  402990:	ee72 6ae6 	vsub.f32	s13, s5, s13
            a[j5] = y1r - y5r;
  402994:	ed4e 0a01 	vstr	s1, [lr, #-4]
            a[j] = y0r + y4r;
  402998:	ee74 3a05 	vadd.f32	s7, s8, s10
            a[j5 + 1] = y1i + y5i;
  40299c:	f84e 9b08 	str.w	r9, [lr], #8
            a[j4 + 1] = y0i + y4i;
  4029a0:	ee71 1a61 	vsub.f32	s3, s2, s3
            a[j3] = y3r - y7i;
  4029a4:	ed42 8a02 	vstr	s17, [r2, #-8]
            a[j3 + 1] = y3i - y7r;
  4029a8:	ed02 8a01 	vstr	s16, [r2, #-4]
            a[j4] = y0r - y4r;
  4029ac:	ee34 5a45 	vsub.f32	s10, s8, s10
            a[j7] = y3r + y7i;
  4029b0:	ed44 4a02 	vstr	s9, [r4, #-8]
            a[j + 1] = y0i - y4i;
  4029b4:	ee70 4a41 	vsub.f32	s9, s0, s2
            a[j7 + 1] = y3i + y7r;
  4029b8:	ed44 5a01 	vstr	s11, [r4, #-4]
            a[j2] = y2r - y6i;
  4029bc:	ee77 5a67 	vsub.f32	s11, s14, s15
            a[j6] = y2r + y6i;
  4029c0:	ee77 7a27 	vadd.f32	s15, s14, s15
            a[j] = y0r + y4r;
  4029c4:	ed4c 3a03 	vstr	s7, [ip, #-12]
            a[j2 + 1] = y2i - y6r;
  4029c8:	ee36 7a66 	vsub.f32	s14, s12, s13
            a[j + 1] = y0i - y4i;
  4029cc:	ed46 4a01 	vstr	s9, [r6, #-4]
            a[j6 + 1] = y2i + y6r;
  4029d0:	ee76 6a26 	vadd.f32	s13, s12, s13
            a[j4 + 1] = y0i + y4i;
  4029d4:	ed40 1a01 	vstr	s3, [r0, #-4]
            a[j4] = y0r - y4r;
  4029d8:	ed00 5a02 	vstr	s10, [r0, #-8]
            a[j2] = y2r - y6i;
  4029dc:	ed43 5a02 	vstr	s11, [r3, #-8]
            a[j2 + 1] = y2i - y6r;
  4029e0:	ed03 7a01 	vstr	s14, [r3, #-4]
            a[j6] = y2r + y6i;
  4029e4:	ed41 7a02 	vstr	s15, [r1, #-8]
            a[j6 + 1] = y2i + y6r;
  4029e8:	ed41 6a01 	vstr	s13, [r1, #-4]
        for (j = 0; j < l; j += 2) {
  4029ec:	f73f af36 	bgt.w	40285c <aubio_ooura_rdft+0x430>
  4029f0:	e546      	b.n	402480 <aubio_ooura_rdft+0x54>
        cft1st(n, a, w);
  4029f2:	f8dd 8000 	ldr.w	r8, [sp]
  4029f6:	4631      	mov	r1, r6
  4029f8:	4620      	mov	r0, r4
  4029fa:	4b64      	ldr	r3, [pc, #400]	; (402b8c <aubio_ooura_rdft+0x760>)
  4029fc:	4642      	mov	r2, r8
  4029fe:	4798      	blx	r3
        while ((l << 3) < n) {
  402a00:	2c80      	cmp	r4, #128	; 0x80
  402a02:	f340 80bd 	ble.w	402b80 <aubio_ooura_rdft+0x754>
  402a06:	2780      	movs	r7, #128	; 0x80
  402a08:	2110      	movs	r1, #16
  402a0a:	4d61      	ldr	r5, [pc, #388]	; (402b90 <aubio_ooura_rdft+0x764>)
  402a0c:	e000      	b.n	402a10 <aubio_ooura_rdft+0x5e4>
  402a0e:	4617      	mov	r7, r2
            cftmdl(n, l, a, w);
  402a10:	4632      	mov	r2, r6
  402a12:	4643      	mov	r3, r8
  402a14:	4620      	mov	r0, r4
  402a16:	47a8      	blx	r5
  402a18:	4639      	mov	r1, r7
        while ((l << 3) < n) {
  402a1a:	00fa      	lsls	r2, r7, #3
  402a1c:	4294      	cmp	r4, r2
  402a1e:	dcf6      	bgt.n	402a0e <aubio_ooura_rdft+0x5e2>
    if ((l << 2) < n) {
  402a20:	00bb      	lsls	r3, r7, #2
  402a22:	429c      	cmp	r4, r3
  402a24:	dd3a      	ble.n	402a9c <aubio_ooura_rdft+0x670>
        for (j = 0; j < l; j += 2) {
  402a26:	2f00      	cmp	r7, #0
  402a28:	f77f ad2a 	ble.w	402480 <aubio_ooura_rdft+0x54>
        wn4r = w[2];
  402a2c:	9a00      	ldr	r2, [sp, #0]
  402a2e:	ed92 2a02 	vldr	s4, [r2, #8]
  402a32:	e6fb      	b.n	40282c <aubio_ooura_rdft+0x400>
    } else if ((l << 2) == n) {
  402a34:	f000 8093 	beq.w	402b5e <aubio_ooura_rdft+0x732>
        for (j = 0; j < l; j += 2) {
  402a38:	2f00      	cmp	r7, #0
  402a3a:	f77f ad21 	ble.w	402480 <aubio_ooura_rdft+0x54>
  402a3e:	1e78      	subs	r0, r7, #1
  402a40:	00bb      	lsls	r3, r7, #2
  402a42:	1d32      	adds	r2, r6, #4
  402a44:	0840      	lsrs	r0, r0, #1
  402a46:	1d19      	adds	r1, r3, #4
  402a48:	4433      	add	r3, r6
  402a4a:	eb06 00c0 	add.w	r0, r6, r0, lsl #3
  402a4e:	4431      	add	r1, r6
  402a50:	300c      	adds	r0, #12
            x0r = a[j] - a[j1];
  402a52:	ed12 7a01 	vldr	s14, [r2, #-4]
  402a56:	3208      	adds	r2, #8
  402a58:	ed51 7a01 	vldr	s15, [r1, #-4]
  402a5c:	3608      	adds	r6, #8
            x0i = -a[j + 1] + a[j1 + 1];
  402a5e:	ed56 6a01 	vldr	s13, [r6, #-4]
  402a62:	3108      	adds	r1, #8
            a[j] += a[j1];
  402a64:	ee77 5a27 	vadd.f32	s11, s14, s15
            x0i = -a[j + 1] + a[j1 + 1];
  402a68:	ed93 6a01 	vldr	s12, [r3, #4]
            x0r = a[j] - a[j1];
  402a6c:	ee77 7a67 	vsub.f32	s15, s14, s15
  402a70:	3308      	adds	r3, #8
            x0i = -a[j + 1] + a[j1 + 1];
  402a72:	ee36 6a66 	vsub.f32	s12, s12, s13
            a[j] += a[j1];
  402a76:	ed42 5a03 	vstr	s11, [r2, #-12]
        for (j = 0; j < l; j += 2) {
  402a7a:	4290      	cmp	r0, r2
            a[j + 1] = -a[j + 1] - a[j1 + 1];
  402a7c:	ed56 6a01 	vldr	s13, [r6, #-4]
  402a80:	ed13 7a01 	vldr	s14, [r3, #-4]
  402a84:	ee36 7a87 	vadd.f32	s14, s13, s14
  402a88:	eeb1 7a47 	vneg.f32	s14, s14
  402a8c:	ed06 7a01 	vstr	s14, [r6, #-4]
            a[j1] = x0r;
  402a90:	ed41 7a03 	vstr	s15, [r1, #-12]
            a[j1 + 1] = x0i;
  402a94:	ed03 6a01 	vstr	s12, [r3, #-4]
        for (j = 0; j < l; j += 2) {
  402a98:	d1db      	bne.n	402a52 <aubio_ooura_rdft+0x626>
  402a9a:	e4f1      	b.n	402480 <aubio_ooura_rdft+0x54>
    } else if ((l << 2) == n) {
  402a9c:	d1cc      	bne.n	402a38 <aubio_ooura_rdft+0x60c>
        for (j = 0; j < l; j += 2) {
  402a9e:	2f00      	cmp	r7, #0
  402aa0:	f77f acee 	ble.w	402480 <aubio_ooura_rdft+0x54>
  402aa4:	1e78      	subs	r0, r7, #1
  402aa6:	1d1c      	adds	r4, r3, #4
  402aa8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
  402aac:	3204      	adds	r2, #4
  402aae:	0840      	lsrs	r0, r0, #1
  402ab0:	18f5      	adds	r5, r6, r3
  402ab2:	eb06 0187 	add.w	r1, r6, r7, lsl #2
  402ab6:	4432      	add	r2, r6
  402ab8:	eb06 00c0 	add.w	r0, r6, r0, lsl #3
  402abc:	442b      	add	r3, r5
  402abe:	4434      	add	r4, r6
  402ac0:	f100 070c 	add.w	r7, r0, #12
  402ac4:	1d30      	adds	r0, r6, #4
            x0i = -a[j + 1] - a[j1 + 1];
  402ac6:	edd6 7a01 	vldr	s15, [r6, #4]
  402aca:	3008      	adds	r0, #8
            x2i = a[j2 + 1] + a[j3 + 1];
  402acc:	edd3 4a01 	vldr	s9, [r3, #4]
  402ad0:	3608      	adds	r6, #8
            x0i = -a[j + 1] - a[j1 + 1];
  402ad2:	ed95 7a01 	vldr	s14, [r5, #4]
  402ad6:	3308      	adds	r3, #8
            x2i = a[j2 + 1] + a[j3 + 1];
  402ad8:	ed91 6a01 	vldr	s12, [r1, #4]
  402adc:	3208      	adds	r2, #8
            x0r = a[j] + a[j1];
  402ade:	ed10 5a03 	vldr	s10, [r0, #-12]
  402ae2:	ee37 4a87 	vadd.f32	s8, s15, s14
            x2r = a[j2] + a[j3];
  402ae6:	ed52 6a03 	vldr	s13, [r2, #-12]
            x2i = a[j2 + 1] + a[j3 + 1];
  402aea:	ee74 3a86 	vadd.f32	s7, s9, s12
            x0r = a[j] + a[j1];
  402aee:	ed54 5a01 	vldr	s11, [r4, #-4]
            x1i = -a[j + 1] + a[j1 + 1];
  402af2:	ee37 7a67 	vsub.f32	s14, s14, s15
            x2r = a[j2] + a[j3];
  402af6:	edd1 7a00 	vldr	s15, [r1]
            x3i = a[j2 + 1] - a[j3 + 1];
  402afa:	ee34 6ac6 	vsub.f32	s12, s9, s12
            x0r = a[j] + a[j1];
  402afe:	ee35 3a25 	vadd.f32	s6, s10, s11
  402b02:	3408      	adds	r4, #8
            x2r = a[j2] + a[j3];
  402b04:	ee76 4aa7 	vadd.f32	s9, s13, s15
  402b08:	3508      	adds	r5, #8
            a[j + 1] = x0i - x2i;
  402b0a:	ee74 2a23 	vadd.f32	s5, s8, s7
  402b0e:	3108      	adds	r1, #8
            x1r = a[j] - a[j1];
  402b10:	ee75 5a65 	vsub.f32	s11, s10, s11
            a[j] = x0r + x2r;
  402b14:	ee33 5a24 	vadd.f32	s10, s6, s9
            x3r = a[j2] - a[j3];
  402b18:	ee76 7ae7 	vsub.f32	s15, s13, s15
            a[j + 1] = x0i - x2i;
  402b1c:	eef1 6a62 	vneg.f32	s13, s5
            a[j] = x0r + x2r;
  402b20:	ed00 5a03 	vstr	s10, [r0, #-12]
            a[j2 + 1] = x0i + x2i;
  402b24:	ee33 4ac4 	vsub.f32	s8, s7, s8
            a[j1] = x1r - x3i;
  402b28:	ee35 5ac6 	vsub.f32	s10, s11, s12
        for (j = 0; j < l; j += 2) {
  402b2c:	4287      	cmp	r7, r0
            a[j + 1] = x0i - x2i;
  402b2e:	ed46 6a01 	vstr	s13, [r6, #-4]
            a[j2] = x0r - x2r;
  402b32:	ee73 4a64 	vsub.f32	s9, s6, s9
            a[j1 + 1] = x1i - x3r;
  402b36:	ee77 6a67 	vsub.f32	s13, s14, s15
            a[j3] = x1r + x3i;
  402b3a:	ee35 6a86 	vadd.f32	s12, s11, s12
            a[j3 + 1] = x1i + x3r;
  402b3e:	ee77 7a27 	vadd.f32	s15, s14, s15
            a[j2] = x0r - x2r;
  402b42:	ed42 4a03 	vstr	s9, [r2, #-12]
            a[j2 + 1] = x0i + x2i;
  402b46:	ed03 4a01 	vstr	s8, [r3, #-4]
            a[j1] = x1r - x3i;
  402b4a:	ed04 5a03 	vstr	s10, [r4, #-12]
            a[j1 + 1] = x1i - x3r;
  402b4e:	ed45 6a01 	vstr	s13, [r5, #-4]
            a[j3] = x1r + x3i;
  402b52:	ed01 6a02 	vstr	s12, [r1, #-8]
            a[j3 + 1] = x1i + x3r;
  402b56:	ed41 7a01 	vstr	s15, [r1, #-4]
        for (j = 0; j < l; j += 2) {
  402b5a:	d1b4      	bne.n	402ac6 <aubio_ooura_rdft+0x69a>
  402b5c:	e490      	b.n	402480 <aubio_ooura_rdft+0x54>
  402b5e:	00fa      	lsls	r2, r7, #3
  402b60:	00bb      	lsls	r3, r7, #2
  402b62:	e79f      	b.n	402aa4 <aubio_ooura_rdft+0x678>
    a[m + 1] = -a[m + 1];
  402b64:	edd6 7a03 	vldr	s15, [r6, #12]
            bitrv2(n, ip + 2, a);
  402b68:	f109 0108 	add.w	r1, r9, #8
  402b6c:	4b06      	ldr	r3, [pc, #24]	; (402b88 <aubio_ooura_rdft+0x75c>)
  402b6e:	4632      	mov	r2, r6
    a[m + 1] = -a[m + 1];
  402b70:	eef1 7a67 	vneg.f32	s15, s15
            bitrv2(n, ip + 2, a);
  402b74:	4620      	mov	r0, r4
    a[m + 1] = -a[m + 1];
  402b76:	edc6 7a03 	vstr	s15, [r6, #12]
            bitrv2(n, ip + 2, a);
  402b7a:	4798      	blx	r3
  402b7c:	2308      	movs	r3, #8
  402b7e:	e64e      	b.n	40281e <aubio_ooura_rdft+0x3f2>
        while ((l << 3) < n) {
  402b80:	2340      	movs	r3, #64	; 0x40
        l = 16;
  402b82:	2710      	movs	r7, #16
  402b84:	e64b      	b.n	40281e <aubio_ooura_rdft+0x3f2>
  402b86:	bf00      	nop
  402b88:	0040135d 	.word	0x0040135d
  402b8c:	004015a9 	.word	0x004015a9
  402b90:	00401b69 	.word	0x00401b69

00402b94 <new_aubio_pitchyinfast>:
#include "mathutils.h"
#include "cvec.h"
#include "pitchyinfast.h"

aubio_pitchyinfast_t * new_aubio_pitchyinfast (uint_t bufsize)
{
  402b94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	aubio_pitchyinfast_t *o = AUBIO_NEW (aubio_pitchyinfast_t);
  402b96:	2101      	movs	r1, #1
{
  402b98:	4605      	mov	r5, r0
	aubio_pitchyinfast_t *o = AUBIO_NEW (aubio_pitchyinfast_t);
  402b9a:	4b11      	ldr	r3, [pc, #68]	; (402be0 <new_aubio_pitchyinfast+0x4c>)
  402b9c:	2024      	movs	r0, #36	; 0x24
	o->yin = new_fvec (bufsize / 2);
  402b9e:	fa25 f701 	lsr.w	r7, r5, r1
	aubio_pitchyinfast_t *o = AUBIO_NEW (aubio_pitchyinfast_t);
  402ba2:	4798      	blx	r3
  402ba4:	4604      	mov	r4, r0
	o->yin = new_fvec (bufsize / 2);
  402ba6:	4e0f      	ldr	r6, [pc, #60]	; (402be4 <new_aubio_pitchyinfast+0x50>)
  402ba8:	4638      	mov	r0, r7
  402baa:	47b0      	blx	r6
  402bac:	6020      	str	r0, [r4, #0]
	o->tmpdata = new_fvec (bufsize);
  402bae:	4628      	mov	r0, r5
  402bb0:	47b0      	blx	r6
  402bb2:	60e0      	str	r0, [r4, #12]
	o->sqdiff = new_fvec (bufsize / 2);
  402bb4:	4638      	mov	r0, r7
  402bb6:	47b0      	blx	r6
  402bb8:	6120      	str	r0, [r4, #16]
	o->kernel = new_fvec (bufsize);
  402bba:	4628      	mov	r0, r5
  402bbc:	47b0      	blx	r6
  402bbe:	6160      	str	r0, [r4, #20]
	o->samples_fft = new_fvec (bufsize);
  402bc0:	4628      	mov	r0, r5
  402bc2:	47b0      	blx	r6
  402bc4:	61a0      	str	r0, [r4, #24]
	o->kernel_fft = new_fvec (bufsize);
  402bc6:	4628      	mov	r0, r5
  402bc8:	47b0      	blx	r6
	o->fft = new_aubio_fft (bufsize);
  402bca:	4b07      	ldr	r3, [pc, #28]	; (402be8 <new_aubio_pitchyinfast+0x54>)
	o->kernel_fft = new_fvec (bufsize);
  402bcc:	61e0      	str	r0, [r4, #28]
	o->fft = new_aubio_fft (bufsize);
  402bce:	4628      	mov	r0, r5
  402bd0:	4798      	blx	r3
	o->tol = 0.05; // changed from 0.15
  402bd2:	4a06      	ldr	r2, [pc, #24]	; (402bec <new_aubio_pitchyinfast+0x58>)
	o->peak_pos = 0;
  402bd4:	2300      	movs	r3, #0
	o->fft = new_aubio_fft (bufsize);
  402bd6:	6220      	str	r0, [r4, #32]
	o->tol = 0.05; // changed from 0.15
  402bd8:	6062      	str	r2, [r4, #4]
	return o;
}
  402bda:	4620      	mov	r0, r4
	o->peak_pos = 0;
  402bdc:	60a3      	str	r3, [r4, #8]
}
  402bde:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402be0:	00408421 	.word	0x00408421
  402be4:	00401141 	.word	0x00401141
  402be8:	00400e29 	.word	0x00400e29
  402bec:	3d4ccccd 	.word	0x3d4ccccd

00402bf0 <aubio_pitchyinfast_do>:
	del_aubio_fft (o->fft);
	AUBIO_FREE (o);
}

float32_t aubio_pitchyinfast_do (aubio_pitchyinfast_t * o, fvec_t * input)
{
  402bf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402bf4:	4604      	mov	r4, r0
  // compute r_t(0) + r_t + tau(0)
  // actually computing r_t(0) -> constant on line 109
  // r_t+tau(0) -> zero lag term done in the for loop for every tau
  {
    fvec_t *squares = o->tmpdata;
    fvec_weighted_copy(input, input, squares);
  402bf6:	4bba      	ldr	r3, [pc, #744]	; (402ee0 <aubio_pitchyinfast_do+0x2f0>)
{
  402bf8:	4689      	mov	r9, r1
  402bfa:	ed2d 8b04 	vpush	{d8-d9}
	uint_t B = o->tmpdata->length;
  402bfe:	68c7      	ldr	r7, [r0, #12]
{
  402c00:	b089      	sub	sp, #36	; 0x24
	fvec_t* yin = o->yin;
  402c02:	6826      	ldr	r6, [r4, #0]
    fvec_weighted_copy(input, input, squares);
  402c04:	4608      	mov	r0, r1
  402c06:	463a      	mov	r2, r7
    tmp_slice.data = squares->data;
    tmp_slice.length = W;
  402c08:	f10d 0820 	add.w	r8, sp, #32
	const uint_t length = yin->length;
  402c0c:	f8d6 a000 	ldr.w	sl, [r6]
	uint_t B = o->tmpdata->length;
  402c10:	f8d7 b000 	ldr.w	fp, [r7]
	const smpl_t tol = o->tol;
  402c14:	edd4 8a01 	vldr	s17, [r4, #4]
    fvec_weighted_copy(input, input, squares);
  402c18:	4798      	blx	r3
    o->sqdiff->data[0] = fvec_sum(&tmp_slice);
  402c1a:	6923      	ldr	r3, [r4, #16]
    tmp_slice.data = squares->data;
  402c1c:	687a      	ldr	r2, [r7, #4]
    tmp_slice.length = W;
  402c1e:	f848 ad10 	str.w	sl, [r8, #-16]!
    o->sqdiff->data[0] = fvec_sum(&tmp_slice);
  402c22:	4640      	mov	r0, r8
    tmp_slice.data = squares->data;
  402c24:	9205      	str	r2, [sp, #20]
    o->sqdiff->data[0] = fvec_sum(&tmp_slice);
  402c26:	685d      	ldr	r5, [r3, #4]
  402c28:	4bae      	ldr	r3, [pc, #696]	; (402ee4 <aubio_pitchyinfast_do+0x2f4>)
  402c2a:	4798      	blx	r3
    for (tau = 1; tau < W; tau++) 
  402c2c:	f1ba 0f01 	cmp.w	sl, #1
    o->sqdiff->data[0] = fvec_sum(&tmp_slice);
  402c30:	6028      	str	r0, [r5, #0]
  402c32:	ea4f 058a 	mov.w	r5, sl, lsl #2
    for (tau = 1; tau < W; tau++) 
  402c36:	d92c      	bls.n	402c92 <aubio_pitchyinfast_do+0xa2>
  402c38:	2000      	movs	r0, #0
  402c3a:	f04f 0e01 	mov.w	lr, #1
	{
		o->sqdiff->data[tau] = o->sqdiff->data[tau-1];
  402c3e:	6923      	ldr	r3, [r4, #16]
  402c40:	ea4f 028e 	mov.w	r2, lr, lsl #2
    for (tau = 1; tau < W; tau++) 
  402c44:	f10e 0e01 	add.w	lr, lr, #1
		o->sqdiff->data[tau] = o->sqdiff->data[tau-1];
  402c48:	685b      	ldr	r3, [r3, #4]
    for (tau = 1; tau < W; tau++) 
  402c4a:	45f2      	cmp	sl, lr
		o->sqdiff->data[tau] = o->sqdiff->data[tau-1];
  402c4c:	eb03 0100 	add.w	r1, r3, r0
  402c50:	4413      	add	r3, r2
  402c52:	6809      	ldr	r1, [r1, #0]
  402c54:	6019      	str	r1, [r3, #0]
		o->sqdiff->data[tau] -= squares->data[tau-1];
  402c56:	6921      	ldr	r1, [r4, #16]
  402c58:	687b      	ldr	r3, [r7, #4]
  402c5a:	6849      	ldr	r1, [r1, #4]
  402c5c:	4403      	add	r3, r0
  402c5e:	4411      	add	r1, r2
  402c60:	edd3 7a00 	vldr	s15, [r3]
  402c64:	ed91 7a00 	vldr	s14, [r1]
  402c68:	ee77 7a67 	vsub.f32	s15, s14, s15
  402c6c:	edc1 7a00 	vstr	s15, [r1]
		o->sqdiff->data[tau] += squares->data[W+tau-1];
  402c70:	687b      	ldr	r3, [r7, #4]
  402c72:	6921      	ldr	r1, [r4, #16]
  402c74:	442b      	add	r3, r5
  402c76:	6849      	ldr	r1, [r1, #4]
  402c78:	4403      	add	r3, r0
  402c7a:	f100 0004 	add.w	r0, r0, #4
  402c7e:	440a      	add	r2, r1
  402c80:	edd3 7a00 	vldr	s15, [r3]
  402c84:	ed92 7a00 	vldr	s14, [r2]
  402c88:	ee77 7a27 	vadd.f32	s15, s14, s15
  402c8c:	edc2 7a00 	vstr	s15, [r2]
    for (tau = 1; tau < W; tau++) 
  402c90:	d1d5      	bne.n	402c3e <aubio_pitchyinfast_do+0x4e>
    }
    fvec_add(o->sqdiff, o->sqdiff->data[0]);
  402c92:	6920      	ldr	r0, [r4, #16]
	
    // build kernel, take a copy of first half of samples
    tmp_slice.data = input->data;
    tmp_slice.length = W;
    kernel_ptr.data = o->kernel->data + 1;
    kernel_ptr.length = W;
  402c94:	af08      	add	r7, sp, #32
    fvec_add(o->sqdiff, o->sqdiff->data[0]);
  402c96:	4b94      	ldr	r3, [pc, #592]	; (402ee8 <aubio_pitchyinfast_do+0x2f8>)
  402c98:	6842      	ldr	r2, [r0, #4]
  402c9a:	6811      	ldr	r1, [r2, #0]
  402c9c:	4798      	blx	r3
    tmp_slice.data = input->data;
  402c9e:	f8d9 2004 	ldr.w	r2, [r9, #4]
    kernel_ptr.data = o->kernel->data + 1;
  402ca2:	6963      	ldr	r3, [r4, #20]
    fvec_copy(&tmp_slice, &kernel_ptr);
  402ca4:	4640      	mov	r0, r8
    tmp_slice.data = input->data;
  402ca6:	9205      	str	r2, [sp, #20]
    kernel_ptr.data = o->kernel->data + 1;
  402ca8:	685b      	ldr	r3, [r3, #4]
    kernel_ptr.length = W;
  402caa:	f847 ad08 	str.w	sl, [r7, #-8]!
    fvec_copy(&tmp_slice, &kernel_ptr);
  402cae:	4639      	mov	r1, r7
    kernel_ptr.data = o->kernel->data + 1;
  402cb0:	3304      	adds	r3, #4
    fvec_copy(&tmp_slice, &kernel_ptr);
  402cb2:	4a8e      	ldr	r2, [pc, #568]	; (402eec <aubio_pitchyinfast_do+0x2fc>)
    fvec_t *compmul = o->tmpdata;
  402cb4:	f8d4 800c 	ldr.w	r8, [r4, #12]
    kernel_ptr.data = o->kernel->data + 1;
  402cb8:	9307      	str	r3, [sp, #28]
    tmp_slice.length = W;
  402cba:	f8cd a010 	str.w	sl, [sp, #16]
    fvec_t *rt_of_tau = o->samples_fft;
  402cbe:	f8d4 9018 	ldr.w	r9, [r4, #24]
    fvec_copy(&tmp_slice, &kernel_ptr);
  402cc2:	4790      	blx	r2
    // reverse them
    fvec_rev(&kernel_ptr);
  402cc4:	4638      	mov	r0, r7
  402cc6:	4b8a      	ldr	r3, [pc, #552]	; (402ef0 <aubio_pitchyinfast_do+0x300>)
  402cc8:	4798      	blx	r3
    // compute fft(kernel)
    aubio_fft_do_complex(o->fft, o->kernel, o->kernel_fft);
  402cca:	69e2      	ldr	r2, [r4, #28]
  402ccc:	4b89      	ldr	r3, [pc, #548]	; (402ef4 <aubio_pitchyinfast_do+0x304>)
  402cce:	6961      	ldr	r1, [r4, #20]
  402cd0:	6a20      	ldr	r0, [r4, #32]
  402cd2:	4798      	blx	r3
    // compute complex product
    compmul->data[0] = o->kernel_fft->data[0] * o->samples_fft->data[0];
  402cd4:	69e2      	ldr	r2, [r4, #28]
  402cd6:	69a3      	ldr	r3, [r4, #24]
    for (tau = 1; tau < W; tau++) 
  402cd8:	f1ba 0f01 	cmp.w	sl, #1
    compmul->data[0] = o->kernel_fft->data[0] * o->samples_fft->data[0];
  402cdc:	6852      	ldr	r2, [r2, #4]
  402cde:	685b      	ldr	r3, [r3, #4]
  402ce0:	edd2 7a00 	vldr	s15, [r2]
  402ce4:	ed93 7a00 	vldr	s14, [r3]
  402ce8:	f8d8 3004 	ldr.w	r3, [r8, #4]
  402cec:	ee67 7a87 	vmul.f32	s15, s15, s14
  402cf0:	edc3 7a00 	vstr	s15, [r3]
    for (tau = 1; tau < W; tau++) 
  402cf4:	f240 8110 	bls.w	402f18 <aubio_pitchyinfast_do+0x328>
  402cf8:	f06f 4140 	mvn.w	r1, #3221225472	; 0xc0000000
  402cfc:	f04f 0e01 	mov.w	lr, #1
  402d00:	4637      	mov	r7, r6
  402d02:	4459      	add	r1, fp
  402d04:	0089      	lsls	r1, r1, #2
  402d06:	468c      	mov	ip, r1
	{
		compmul->data[tau] = o->kernel_fft->data[tau] * o->samples_fft->data[tau];
  402d08:	69e0      	ldr	r0, [r4, #28]
  402d0a:	ea4f 028e 	mov.w	r2, lr, lsl #2
  402d0e:	69a3      	ldr	r3, [r4, #24]
    for (tau = 1; tau < W; tau++) 
  402d10:	f10e 0e01 	add.w	lr, lr, #1
		compmul->data[tau] = o->kernel_fft->data[tau] * o->samples_fft->data[tau];
  402d14:	6846      	ldr	r6, [r0, #4]
  402d16:	6858      	ldr	r0, [r3, #4]
    for (tau = 1; tau < W; tau++) 
  402d18:	45f2      	cmp	sl, lr
		compmul->data[tau] = o->kernel_fft->data[tau] * o->samples_fft->data[tau];
  402d1a:	4416      	add	r6, r2
  402d1c:	f8d8 3004 	ldr.w	r3, [r8, #4]
  402d20:	4410      	add	r0, r2
  402d22:	ed96 7a00 	vldr	s14, [r6]
  402d26:	4413      	add	r3, r2
  402d28:	edd0 7a00 	vldr	s15, [r0]
  402d2c:	ee67 7a27 	vmul.f32	s15, s14, s15
  402d30:	edc3 7a00 	vstr	s15, [r3]
		compmul->data[tau] -= o->kernel_fft->data[B-tau] * o->samples_fft->data[B-tau];
  402d34:	69e6      	ldr	r6, [r4, #28]
  402d36:	69a0      	ldr	r0, [r4, #24]
  402d38:	f8d8 3004 	ldr.w	r3, [r8, #4]
  402d3c:	6876      	ldr	r6, [r6, #4]
  402d3e:	6840      	ldr	r0, [r0, #4]
  402d40:	4413      	add	r3, r2
  402d42:	4466      	add	r6, ip
  402d44:	eb00 020c 	add.w	r2, r0, ip
  402d48:	edd3 7a00 	vldr	s15, [r3]
  402d4c:	edd6 6a00 	vldr	s13, [r6]
  402d50:	f1ac 0c04 	sub.w	ip, ip, #4
  402d54:	ed92 7a00 	vldr	s14, [r2]
  402d58:	eee6 7ac7 	vfms.f32	s15, s13, s14
  402d5c:	edc3 7a00 	vstr	s15, [r3]
    for (tau = 1; tau < W; tau++) 
  402d60:	d1d2      	bne.n	402d08 <aubio_pitchyinfast_do+0x118>
    }
    compmul->data[W] = o->kernel_fft->data[W] * o->samples_fft->data[W];
  402d62:	69e2      	ldr	r2, [r4, #28]
  402d64:	2001      	movs	r0, #1
  402d66:	69a3      	ldr	r3, [r4, #24]
  402d68:	6852      	ldr	r2, [r2, #4]
  402d6a:	685b      	ldr	r3, [r3, #4]
  402d6c:	442a      	add	r2, r5
  402d6e:	442b      	add	r3, r5
  402d70:	edd2 7a00 	vldr	s15, [r2]
  402d74:	ed93 7a00 	vldr	s14, [r3]
  402d78:	f8d8 3004 	ldr.w	r3, [r8, #4]
  402d7c:	ee67 7a87 	vmul.f32	s15, s15, s14
  402d80:	442b      	add	r3, r5
  402d82:	edc3 7a00 	vstr	s15, [r3]
    for (tau = 1; tau < W; tau++) 
	{
		compmul->data[B-tau] = o->kernel_fft->data[B-tau] * o->samples_fft->data[tau];
  402d86:	69e6      	ldr	r6, [r4, #28]
  402d88:	0082      	lsls	r2, r0, #2
    for (tau = 1; tau < W; tau++) 
  402d8a:	3001      	adds	r0, #1
		compmul->data[B-tau] = o->kernel_fft->data[B-tau] * o->samples_fft->data[tau];
  402d8c:	6873      	ldr	r3, [r6, #4]
  402d8e:	69a6      	ldr	r6, [r4, #24]
    for (tau = 1; tau < W; tau++) 
  402d90:	4586      	cmp	lr, r0
		compmul->data[B-tau] = o->kernel_fft->data[B-tau] * o->samples_fft->data[tau];
  402d92:	eb03 0c01 	add.w	ip, r3, r1
  402d96:	f8d8 3004 	ldr.w	r3, [r8, #4]
  402d9a:	6876      	ldr	r6, [r6, #4]
  402d9c:	ed9c 7a00 	vldr	s14, [ip]
  402da0:	440b      	add	r3, r1
  402da2:	4416      	add	r6, r2
  402da4:	edd6 7a00 	vldr	s15, [r6]
  402da8:	ee67 7a27 	vmul.f32	s15, s14, s15
  402dac:	edc3 7a00 	vstr	s15, [r3]
		compmul->data[B-tau] += o->kernel_fft->data[tau] * o->samples_fft->data[B-tau];
  402db0:	69e6      	ldr	r6, [r4, #28]
  402db2:	6873      	ldr	r3, [r6, #4]
  402db4:	69a6      	ldr	r6, [r4, #24]
  402db6:	441a      	add	r2, r3
  402db8:	f8d8 3004 	ldr.w	r3, [r8, #4]
  402dbc:	6876      	ldr	r6, [r6, #4]
  402dbe:	440b      	add	r3, r1
  402dc0:	edd2 6a00 	vldr	s13, [r2]
  402dc4:	440e      	add	r6, r1
  402dc6:	f1a1 0104 	sub.w	r1, r1, #4
  402dca:	edd3 7a00 	vldr	s15, [r3]
  402dce:	ed96 7a00 	vldr	s14, [r6]
  402dd2:	eee6 7a87 	vfma.f32	s15, s13, s14
  402dd6:	edc3 7a00 	vstr	s15, [r3]
    for (tau = 1; tau < W; tau++) 
  402dda:	d1d4      	bne.n	402d86 <aubio_pitchyinfast_do+0x196>
    }
    // compute inverse fft
    aubio_fft_rdo_complex(o->fft, compmul, rt_of_tau);
  402ddc:	4641      	mov	r1, r8
  402dde:	464a      	mov	r2, r9
  402de0:	6a20      	ldr	r0, [r4, #32]
  402de2:	463e      	mov	r6, r7
  402de4:	4b44      	ldr	r3, [pc, #272]	; (402ef8 <aubio_pitchyinfast_do+0x308>)
  402de6:	4798      	blx	r3
    compmul->data[W] = o->kernel_fft->data[W] * o->samples_fft->data[W];
  402de8:	2700      	movs	r7, #0
  402dea:	f8df 8120 	ldr.w	r8, [pc, #288]	; 402f0c <aubio_pitchyinfast_do+0x31c>
  402dee:	9403      	str	r4, [sp, #12]
    // compute square difference r_t(tau) = sqdiff - 2 * r_t_tau[W-1:-1]
    for (tau = 0; tau < W; tau++) 
	{
		yin->data[tau] = o->sqdiff->data[tau] - 2. * rt_of_tau->data[tau+W];
  402df0:	9b03      	ldr	r3, [sp, #12]
  402df2:	00ba      	lsls	r2, r7, #2
  402df4:	6871      	ldr	r1, [r6, #4]
    for (tau = 0; tau < W; tau++) 
  402df6:	3701      	adds	r7, #1
		yin->data[tau] = o->sqdiff->data[tau] - 2. * rt_of_tau->data[tau+W];
  402df8:	691b      	ldr	r3, [r3, #16]
  402dfa:	eb01 0b02 	add.w	fp, r1, r2
  402dfe:	4c3f      	ldr	r4, [pc, #252]	; (402efc <aubio_pitchyinfast_do+0x30c>)
  402e00:	685b      	ldr	r3, [r3, #4]
  402e02:	4413      	add	r3, r2
  402e04:	6818      	ldr	r0, [r3, #0]
  402e06:	47c0      	blx	r8
  402e08:	f8d9 3004 	ldr.w	r3, [r9, #4]
  402e0c:	442b      	add	r3, r5
  402e0e:	3504      	adds	r5, #4
  402e10:	e9cd 0100 	strd	r0, r1, [sp]
  402e14:	6818      	ldr	r0, [r3, #0]
  402e16:	47c0      	blx	r8
  402e18:	4602      	mov	r2, r0
  402e1a:	460b      	mov	r3, r1
  402e1c:	47a0      	blx	r4
  402e1e:	4c38      	ldr	r4, [pc, #224]	; (402f00 <aubio_pitchyinfast_do+0x310>)
  402e20:	4602      	mov	r2, r0
  402e22:	460b      	mov	r3, r1
  402e24:	e9dd 0100 	ldrd	r0, r1, [sp]
  402e28:	47a0      	blx	r4
  402e2a:	4b36      	ldr	r3, [pc, #216]	; (402f04 <aubio_pitchyinfast_do+0x314>)
  402e2c:	4798      	blx	r3
    for (tau = 0; tau < W; tau++) 
  402e2e:	45ba      	cmp	sl, r7
		yin->data[tau] = o->sqdiff->data[tau] - 2. * rt_of_tau->data[tau+W];
  402e30:	f8cb 0000 	str.w	r0, [fp]
    for (tau = 0; tau < W; tau++) 
  402e34:	d1dc      	bne.n	402df0 <aubio_pitchyinfast_do+0x200>
    }
  }

	// now build yin and look for first minimum
	yin->data[0] = 1.0;
  402e36:	eef7 9a00 	vmov.f32	s19, #112	; 0x3f800000  1.0
  402e3a:	6873      	ldr	r3, [r6, #4]
	for (tau = 1; tau < length; tau++) 
  402e3c:	2f01      	cmp	r7, #1
  402e3e:	9c03      	ldr	r4, [sp, #12]
	yin->data[0] = 1.0;
  402e40:	edc3 9a00 	vstr	s19, [r3]
	for (tau = 1; tau < length; tau++) 
  402e44:	f000 8086 	beq.w	402f54 <aubio_pitchyinfast_do+0x364>
  402e48:	f06f 0907 	mvn.w	r9, #7
  402e4c:	ed9f 9a2e 	vldr	s18, [pc, #184]	; 402f08 <aubio_pitchyinfast_do+0x318>
  402e50:	2501      	movs	r5, #1
  402e52:	f8df b0bc 	ldr.w	fp, [pc, #188]	; 402f10 <aubio_pitchyinfast_do+0x320>
  402e56:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 402f14 <aubio_pitchyinfast_do+0x324>
  402e5a:	e01f      	b.n	402e9c <aubio_pitchyinfast_do+0x2ac>
	{
		tmp2 += yin->data[tau];
		if (abs(tmp2) > 0.00001) 
		{
			yin->data[tau] *= tau / tmp2;
  402e5c:	eec7 7a09 	vdiv.f32	s15, s14, s18
  402e60:	ee27 8a88 	vmul.f32	s16, s15, s16
  402e64:	ed88 8a00 	vstr	s16, [r8]
		else
		{
			yin->data[tau] = 1.0;
		}
		period = tau - 3;
		if (tau > 4 && (yin->data[period] < tol) && (yin->data[period] < yin->data[period + 1]))
  402e68:	2d04      	cmp	r5, #4
  402e6a:	f1a5 0103 	sub.w	r1, r5, #3
	for (tau = 1; tau < length; tau++) 
  402e6e:	f105 0501 	add.w	r5, r5, #1
		if (tau > 4 && (yin->data[period] < tol) && (yin->data[period] < yin->data[period + 1]))
  402e72:	d90f      	bls.n	402e94 <aubio_pitchyinfast_do+0x2a4>
  402e74:	6873      	ldr	r3, [r6, #4]
  402e76:	444b      	add	r3, r9
  402e78:	edd3 7a00 	vldr	s15, [r3]
  402e7c:	eef4 8ae7 	vcmpe.f32	s17, s15
  402e80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  402e84:	dd06      	ble.n	402e94 <aubio_pitchyinfast_do+0x2a4>
  402e86:	ed93 7a01 	vldr	s14, [r3, #4]
  402e8a:	eef4 7ac7 	vcmpe.f32	s15, s14
  402e8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  402e92:	d474      	bmi.n	402f7e <aubio_pitchyinfast_do+0x38e>
	for (tau = 1; tau < length; tau++) 
  402e94:	42af      	cmp	r7, r5
  402e96:	f109 0904 	add.w	r9, r9, #4
  402e9a:	d05b      	beq.n	402f54 <aubio_pitchyinfast_do+0x364>
		tmp2 += yin->data[tau];
  402e9c:	6873      	ldr	r3, [r6, #4]
  402e9e:	eb03 0885 	add.w	r8, r3, r5, lsl #2
  402ea2:	ed98 8a00 	vldr	s16, [r8]
  402ea6:	ee39 9a08 	vadd.f32	s18, s18, s16
		if (abs(tmp2) > 0.00001) 
  402eaa:	eefd 7ac9 	vcvt.s32.f32	s15, s18
  402eae:	ee17 3a90 	vmov	r3, s15
  402eb2:	ea83 70e3 	eor.w	r0, r3, r3, asr #31
  402eb6:	eba0 70e3 	sub.w	r0, r0, r3, asr #31
  402eba:	47d8      	blx	fp
  402ebc:	a306      	add	r3, pc, #24	; (adr r3, 402ed8 <aubio_pitchyinfast_do+0x2e8>)
  402ebe:	e9d3 2300 	ldrd	r2, r3, [r3]
  402ec2:	47d0      	blx	sl
			yin->data[tau] *= tau / tmp2;
  402ec4:	ee07 5a90 	vmov	s15, r5
  402ec8:	eeb8 7a67 	vcvt.f32.u32	s14, s15
		if (abs(tmp2) > 0.00001) 
  402ecc:	2800      	cmp	r0, #0
  402ece:	d1c5      	bne.n	402e5c <aubio_pitchyinfast_do+0x26c>
			yin->data[tau] = 1.0;
  402ed0:	edc8 9a00 	vstr	s19, [r8]
  402ed4:	e7c8      	b.n	402e68 <aubio_pitchyinfast_do+0x278>
  402ed6:	bf00      	nop
  402ed8:	88e368f1 	.word	0x88e368f1
  402edc:	3ee4f8b5 	.word	0x3ee4f8b5
  402ee0:	004011c5 	.word	0x004011c5
  402ee4:	00401231 	.word	0x00401231
  402ee8:	0040128d 	.word	0x0040128d
  402eec:	00401205 	.word	0x00401205
  402ef0:	00401169 	.word	0x00401169
  402ef4:	00400eb1 	.word	0x00400eb1
  402ef8:	00400f45 	.word	0x00400f45
  402efc:	004074a5 	.word	0x004074a5
  402f00:	004074a1 	.word	0x004074a1
  402f04:	00407d8d 	.word	0x00407d8d
  402f08:	00000000 	.word	0x00000000
  402f0c:	00407761 	.word	0x00407761
  402f10:	0040773d 	.word	0x0040773d
  402f14:	00407d29 	.word	0x00407d29
    compmul->data[W] = o->kernel_fft->data[W] * o->samples_fft->data[W];
  402f18:	69e0      	ldr	r0, [r4, #28]
    aubio_fft_rdo_complex(o->fft, compmul, rt_of_tau);
  402f1a:	4641      	mov	r1, r8
    compmul->data[W] = o->kernel_fft->data[W] * o->samples_fft->data[W];
  402f1c:	69a3      	ldr	r3, [r4, #24]
    aubio_fft_rdo_complex(o->fft, compmul, rt_of_tau);
  402f1e:	464a      	mov	r2, r9
    compmul->data[W] = o->kernel_fft->data[W] * o->samples_fft->data[W];
  402f20:	6847      	ldr	r7, [r0, #4]
  402f22:	6858      	ldr	r0, [r3, #4]
  402f24:	442f      	add	r7, r5
  402f26:	f8d8 3004 	ldr.w	r3, [r8, #4]
  402f2a:	4428      	add	r0, r5
  402f2c:	edd7 7a00 	vldr	s15, [r7]
  402f30:	442b      	add	r3, r5
  402f32:	ed90 7a00 	vldr	s14, [r0]
    aubio_fft_rdo_complex(o->fft, compmul, rt_of_tau);
  402f36:	4f1a      	ldr	r7, [pc, #104]	; (402fa0 <aubio_pitchyinfast_do+0x3b0>)
    compmul->data[W] = o->kernel_fft->data[W] * o->samples_fft->data[W];
  402f38:	ee67 7a87 	vmul.f32	s15, s15, s14
  402f3c:	edc3 7a00 	vstr	s15, [r3]
    aubio_fft_rdo_complex(o->fft, compmul, rt_of_tau);
  402f40:	6a20      	ldr	r0, [r4, #32]
  402f42:	47b8      	blx	r7
    for (tau = 0; tau < W; tau++) 
  402f44:	f1ba 0f00 	cmp.w	sl, #0
  402f48:	f47f af4e 	bne.w	402de8 <aubio_pitchyinfast_do+0x1f8>
	yin->data[0] = 1.0;
  402f4c:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
  402f50:	6873      	ldr	r3, [r6, #4]
  402f52:	601a      	str	r2, [r3, #0]
			return YIN_FFT_SAMPLING_RATE / fvec_quadratic_peak_pos (yin, o->peak_pos);
		}
	}
		
	// use global minimum
	o->peak_pos = (uint_t)fvec_min_elem (yin);
  402f54:	4630      	mov	r0, r6
  402f56:	4b13      	ldr	r3, [pc, #76]	; (402fa4 <aubio_pitchyinfast_do+0x3b4>)
  402f58:	4798      	blx	r3
  402f5a:	4601      	mov	r1, r0
	return YIN_FFT_SAMPLING_RATE / fvec_quadratic_peak_pos (yin, o->peak_pos);
  402f5c:	4b12      	ldr	r3, [pc, #72]	; (402fa8 <aubio_pitchyinfast_do+0x3b8>)
  402f5e:	4630      	mov	r0, r6
	o->peak_pos = (uint_t)fvec_min_elem (yin);
  402f60:	60a1      	str	r1, [r4, #8]
	return YIN_FFT_SAMPLING_RATE / fvec_quadratic_peak_pos (yin, o->peak_pos);
  402f62:	4798      	blx	r3
  402f64:	ed9f 7a11 	vldr	s14, [pc, #68]	; 402fac <aubio_pitchyinfast_do+0x3bc>
  402f68:	ee06 0a90 	vmov	s13, r0
  402f6c:	eec7 7a26 	vdiv.f32	s15, s14, s13
	//return -1; 
}
  402f70:	ee17 0a90 	vmov	r0, s15
  402f74:	b009      	add	sp, #36	; 0x24
  402f76:	ecbd 8b04 	vpop	{d8-d9}
  402f7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			o->peak_pos = (uint_t)period;
  402f7e:	60a1      	str	r1, [r4, #8]
			return YIN_FFT_SAMPLING_RATE / fvec_quadratic_peak_pos (yin, o->peak_pos);
  402f80:	4630      	mov	r0, r6
  402f82:	4b09      	ldr	r3, [pc, #36]	; (402fa8 <aubio_pitchyinfast_do+0x3b8>)
  402f84:	4798      	blx	r3
  402f86:	ed9f 7a09 	vldr	s14, [pc, #36]	; 402fac <aubio_pitchyinfast_do+0x3bc>
  402f8a:	ee06 0a90 	vmov	s13, r0
  402f8e:	eec7 7a26 	vdiv.f32	s15, s14, s13
}
  402f92:	ee17 0a90 	vmov	r0, s15
  402f96:	b009      	add	sp, #36	; 0x24
  402f98:	ecbd 8b04 	vpop	{d8-d9}
  402f9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402fa0:	00400f45 	.word	0x00400f45
  402fa4:	0040125d 	.word	0x0040125d
  402fa8:	004012b5 	.word	0x004012b5
  402fac:	46b5a400 	.word	0x46b5a400

00402fb0 <mxt_init_device>:
 * \param chgpin IOPORT pin instance attached to the maXTouch device's /CHG pin
 * \return Operation result status code
 */
status_code_t mxt_init_device(struct mxt_device *device,
		twihs_master_t interface, uint8_t chip_adr, uint32_t chgpin)
{
  402fb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  402fb4:	4604      	mov	r4, r0

	/* Set TWI interface, TWI address and CHG-pin of the maXTouch device. */
	device->interface = interface;
	device->mxt_chip_adr = chip_adr;
	device->chgpin = chgpin;
	device->handler = NULL;
  402fb6:	2600      	movs	r6, #0
	device->chgpin = chgpin;
  402fb8:	6183      	str	r3, [r0, #24]
			malloc(sizeof(struct mxt_info_object));
  402fba:	2007      	movs	r0, #7
{
  402fbc:	b086      	sub	sp, #24
	device->interface = interface;
  402fbe:	60a1      	str	r1, [r4, #8]
	device->handler = NULL;
  402fc0:	6126      	str	r6, [r4, #16]
{
  402fc2:	468a      	mov	sl, r1
	device->mxt_chip_adr = chip_adr;
  402fc4:	7322      	strb	r2, [r4, #12]
{
  402fc6:	4617      	mov	r7, r2
			malloc(sizeof(struct mxt_info_object));
  402fc8:	4d8e      	ldr	r5, [pc, #568]	; (403204 <mxt_init_device+0x254>)
	twihs_package_t packet = {
  402fca:	4681      	mov	r9, r0
			malloc(sizeof(struct mxt_info_object));
  402fcc:	47a8      	blx	r5
  402fce:	4603      	mov	r3, r0
	twihs_package_t packet = {
  402fd0:	f04f 0802 	mov.w	r8, #2
  402fd4:	9605      	str	r6, [sp, #20]
  402fd6:	9601      	str	r6, [sp, #4]
	if (twihs_master_read(device->interface, &packet) != STATUS_OK) {
  402fd8:	4650      	mov	r0, sl
	device->info_object = (struct mxt_info_object *)
  402fda:	6023      	str	r3, [r4, #0]
	if (twihs_master_read(device->interface, &packet) != STATUS_OK) {
  402fdc:	a901      	add	r1, sp, #4
  402fde:	4e8a      	ldr	r6, [pc, #552]	; (403208 <mxt_init_device+0x258>)
	twihs_package_t packet = {
  402fe0:	9303      	str	r3, [sp, #12]
  402fe2:	f88d 7014 	strb.w	r7, [sp, #20]
  402fe6:	f8cd 8008 	str.w	r8, [sp, #8]
  402fea:	f8cd 9010 	str.w	r9, [sp, #16]
	if (twihs_master_read(device->interface, &packet) != STATUS_OK) {
  402fee:	47b0      	blx	r6
  402ff0:	2800      	cmp	r0, #0
  402ff2:	f040 8102 	bne.w	4031fa <mxt_init_device+0x24a>
			malloc(device->info_object->obj_count *
  402ff6:	f8d4 a000 	ldr.w	sl, [r4]
  402ffa:	4607      	mov	r7, r0
  402ffc:	f89a 0006 	ldrb.w	r0, [sl, #6]
  403000:	eb00 0040 	add.w	r0, r0, r0, lsl #1
  403004:	0040      	lsls	r0, r0, #1
  403006:	47a8      	blx	r5
	twihs_package_t packet = {
  403008:	9701      	str	r7, [sp, #4]
	device->object_list = (struct mxt_object *)
  40300a:	6060      	str	r0, [r4, #4]
	if (twihs_master_read(device->interface, &packet) != STATUS_OK) {
  40300c:	a901      	add	r1, sp, #4
	twihs_package_t packet = {
  40300e:	9003      	str	r0, [sp, #12]
  403010:	9704      	str	r7, [sp, #16]
  403012:	9705      	str	r7, [sp, #20]
  403014:	f88d 9004 	strb.w	r9, [sp, #4]
  403018:	f8cd 8008 	str.w	r8, [sp, #8]
		.length       = device->info_object->obj_count *
  40301c:	f89a 3006 	ldrb.w	r3, [sl, #6]
	twihs_package_t packet = {
  403020:	7b22      	ldrb	r2, [r4, #12]
		.length       = device->info_object->obj_count *
  403022:	eb03 0343 	add.w	r3, r3, r3, lsl #1
	if (twihs_master_read(device->interface, &packet) != STATUS_OK) {
  403026:	68a0      	ldr	r0, [r4, #8]
	twihs_package_t packet = {
  403028:	f88d 2014 	strb.w	r2, [sp, #20]
		.length       = device->info_object->obj_count *
  40302c:	005b      	lsls	r3, r3, #1
	twihs_package_t packet = {
  40302e:	9304      	str	r3, [sp, #16]
	if (twihs_master_read(device->interface, &packet) != STATUS_OK) {
  403030:	47b0      	blx	r6
  403032:	2800      	cmp	r0, #0
  403034:	f040 80e1 	bne.w	4031fa <mxt_init_device+0x24a>
		result ^= crcpoly;
  403038:	f8df 91d0 	ldr.w	r9, [pc, #464]	; 40320c <mxt_init_device+0x25c>
  40303c:	e894 0088 	ldmia.w	r4, {r3, r7}
			(device->info_object->obj_count *
  403040:	f893 8006 	ldrb.w	r8, [r3, #6]
  403044:	f103 0c06 	add.w	ip, r3, #6
  403048:	eb08 0e48 	add.w	lr, r8, r8, lsl #1
  40304c:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
	crc_area_size = MXT_ID_BLOCK_SIZE +
  403050:	f10e 0e07 	add.w	lr, lr, #7
  403054:	fa1f fe8e 	uxth.w	lr, lr
	data_word = (uint16_t)((uint16_t)(byte2 << 8u) | byte1);
  403058:	7859      	ldrb	r1, [r3, #1]
  40305a:	3302      	adds	r3, #2
  40305c:	f813 2c02 	ldrb.w	r2, [r3, #-2]
	result = ((crc << 1u) ^ (uint32_t)data_word);
  403060:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  403064:	ea82 0040 	eor.w	r0, r2, r0, lsl #1
	if (result & 0x1000000) {
  403068:	01c2      	lsls	r2, r0, #7
		result ^= crcpoly;
  40306a:	bf48      	it	mi
  40306c:	ea80 0009 	eormi.w	r0, r0, r9
	for (i = 0; i < MXT_ID_BLOCK_SIZE - 1; i += 2) {
  403070:	459c      	cmp	ip, r3
  403072:	d1f1      	bne.n	403058 <mxt_init_device+0xa8>
	data_word = (uint16_t)((uint16_t)(byte2 << 8u) | byte1);
  403074:	783a      	ldrb	r2, [r7, #0]
	result = ((crc << 1u) ^ (uint32_t)data_word);
  403076:	ea48 2202 	orr.w	r2, r8, r2, lsl #8
  40307a:	ea82 0240 	eor.w	r2, r2, r0, lsl #1
	if (result & 0x1000000) {
  40307e:	01d0      	lsls	r0, r2, #7
  403080:	d503      	bpl.n	40308a <mxt_init_device+0xda>
		result ^= crcpoly;
  403082:	f482 0200 	eor.w	r2, r2, #8388608	; 0x800000
  403086:	f082 021b 	eor.w	r2, r2, #27
	for (i = 1; i < (crc_area_size - MXT_ID_BLOCK_SIZE - 1); i += 2) {
  40308a:	f1ae 0c08 	sub.w	ip, lr, #8
  40308e:	f1bc 0f01 	cmp.w	ip, #1
  403092:	dd11      	ble.n	4030b8 <mxt_init_device+0x108>
  403094:	2301      	movs	r3, #1
		result ^= crcpoly;
  403096:	f8df 8174 	ldr.w	r8, [pc, #372]	; 40320c <mxt_init_device+0x25c>
		crc_tmp = mxt_crc_24(crc_tmp, objects_pointer[i],
  40309a:	18f8      	adds	r0, r7, r3
	data_word = (uint16_t)((uint16_t)(byte2 << 8u) | byte1);
  40309c:	5cf9      	ldrb	r1, [r7, r3]
	for (i = 1; i < (crc_area_size - MXT_ID_BLOCK_SIZE - 1); i += 2) {
  40309e:	3302      	adds	r3, #2
	data_word = (uint16_t)((uint16_t)(byte2 << 8u) | byte1);
  4030a0:	7840      	ldrb	r0, [r0, #1]
	for (i = 1; i < (crc_area_size - MXT_ID_BLOCK_SIZE - 1); i += 2) {
  4030a2:	b29b      	uxth	r3, r3
	result = ((crc << 1u) ^ (uint32_t)data_word);
  4030a4:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
  4030a8:	ea81 0242 	eor.w	r2, r1, r2, lsl #1
	if (result & 0x1000000) {
  4030ac:	01d1      	lsls	r1, r2, #7
		result ^= crcpoly;
  4030ae:	bf48      	it	mi
  4030b0:	ea82 0208 	eormi.w	r2, r2, r8
	for (i = 1; i < (crc_area_size - MXT_ID_BLOCK_SIZE - 1); i += 2) {
  4030b4:	4563      	cmp	r3, ip
  4030b6:	dbf0      	blt.n	40309a <mxt_init_device+0xea>
	crc_tmp = mxt_crc_24(crc_tmp,
  4030b8:	4477      	add	r7, lr
	result = ((crc << 1u) ^ (uint32_t)data_word);
  4030ba:	f817 3c08 	ldrb.w	r3, [r7, #-8]
  4030be:	ea83 0742 	eor.w	r7, r3, r2, lsl #1
	if (result & 0x1000000) {
  4030c2:	01fb      	lsls	r3, r7, #7
  4030c4:	d503      	bpl.n	4030ce <mxt_init_device+0x11e>
		result ^= crcpoly;
  4030c6:	f487 0700 	eor.w	r7, r7, #8388608	; 0x800000
  4030ca:	f087 071b 	eor.w	r7, r7, #27
	twihs_package_t packet = {
  4030ce:	2300      	movs	r3, #0
  4030d0:	2002      	movs	r0, #2
  4030d2:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
  4030d6:	2203      	movs	r2, #3
  4030d8:	9301      	str	r3, [sp, #4]
	if (twihs_master_read(device->interface, &packet) != STATUS_OK) {
  4030da:	a901      	add	r1, sp, #4
	twihs_package_t packet = {
  4030dc:	9305      	str	r3, [sp, #20]
  4030de:	7b23      	ldrb	r3, [r4, #12]
  4030e0:	9002      	str	r0, [sp, #8]
	if (twihs_master_read(device->interface, &packet) != STATUS_OK) {
  4030e2:	68a0      	ldr	r0, [r4, #8]
	twihs_package_t packet = {
  4030e4:	f88d e004 	strb.w	lr, [sp, #4]
  4030e8:	f88d c005 	strb.w	ip, [sp, #5]
  4030ec:	f8cd d00c 	str.w	sp, [sp, #12]
  4030f0:	9204      	str	r2, [sp, #16]
  4030f2:	f88d 3014 	strb.w	r3, [sp, #20]
	if (twihs_master_read(device->interface, &packet) != STATUS_OK) {
  4030f6:	47b0      	blx	r6
  4030f8:	b120      	cbz	r0, 403104 <mxt_init_device+0x154>
		return ERR_BAD_DATA;
  4030fa:	f06f 0003 	mvn.w	r0, #3
	}

	device->multitouch_report_offset = status;

	return STATUS_OK;
}
  4030fe:	b006      	add	sp, #24
  403100:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		return ((uint32_t)crc[2] << 16) | ((uint16_t)crc[1] << 8) | crc[0];
  403104:	f89d 6002 	ldrb.w	r6, [sp, #2]
	*crc = (crc_tmp & 0x00FFFFFF);
  403108:	f027 437f 	bic.w	r3, r7, #4278190080	; 0xff000000
		return ((uint32_t)crc[2] << 16) | ((uint16_t)crc[1] << 8) | crc[0];
  40310c:	f89d 2000 	ldrb.w	r2, [sp]
  403110:	f89d 1001 	ldrb.w	r1, [sp, #1]
  403114:	ea42 4206 	orr.w	r2, r2, r6, lsl #16
  403118:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
	if (crc_calculated != crc_read) {
  40311c:	429a      	cmp	r2, r3
  40311e:	d1ec      	bne.n	4030fa <mxt_init_device+0x14a>
  403120:	6826      	ldr	r6, [r4, #0]
	for (i = 0; i < device->info_object->obj_count; ++i) {
  403122:	79b3      	ldrb	r3, [r6, #6]
  403124:	b17b      	cbz	r3, 403146 <mxt_init_device+0x196>
  403126:	1e59      	subs	r1, r3, #1
  403128:	4603      	mov	r3, r0
  40312a:	6862      	ldr	r2, [r4, #4]
  40312c:	b2c8      	uxtb	r0, r1
  40312e:	3001      	adds	r0, #1
  403130:	eb00 0040 	add.w	r0, r0, r0, lsl #1
  403134:	eb02 0040 	add.w	r0, r2, r0, lsl #1
		tot_report_ids += (device->object_list[i].num_report_ids);
  403138:	7951      	ldrb	r1, [r2, #5]
  40313a:	3206      	adds	r2, #6
  40313c:	440b      	add	r3, r1
	for (i = 0; i < device->info_object->obj_count; ++i) {
  40313e:	4290      	cmp	r0, r2
		tot_report_ids += (device->object_list[i].num_report_ids);
  403140:	b2db      	uxtb	r3, r3
	for (i = 0; i < device->info_object->obj_count; ++i) {
  403142:	d1f9      	bne.n	403138 <mxt_init_device+0x188>
  403144:	005b      	lsls	r3, r3, #1
			malloc(sizeof(struct mxt_report_id_map) *
  403146:	4618      	mov	r0, r3
  403148:	47a8      	blx	r5
	device->report_id_map = (struct mxt_report_id_map *)
  40314a:	6160      	str	r0, [r4, #20]
	for (i = 0; i < device->info_object->obj_count; ++i) {
  40314c:	79b3      	ldrb	r3, [r6, #6]
  40314e:	2b00      	cmp	r3, #0
  403150:	d0d3      	beq.n	4030fa <mxt_init_device+0x14a>
  403152:	6860      	ldr	r0, [r4, #4]
  403154:	f04f 0c00 	mov.w	ip, #0
  403158:	2701      	movs	r7, #1
		for (j = 0; j <= device->object_list[i].instances; ++j) {
  40315a:	eb0c 0e4c 	add.w	lr, ip, ip, lsl #1
  40315e:	2500      	movs	r5, #0
  403160:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
  403164:	eb00 010e 	add.w	r1, r0, lr
			if (device->object_list[i].num_report_ids != 0) {
  403168:	794b      	ldrb	r3, [r1, #5]
  40316a:	b1a3      	cbz	r3, 403196 <mxt_init_device+0x1e6>
				for (k = 0; k < device->object_list[i].num_report_ids; ++k) {
  40316c:	463b      	mov	r3, r7
					device->report_id_map[id_index].object_type =
  40316e:	b218      	sxth	r0, r3
  403170:	6962      	ldr	r2, [r4, #20]
							device->object_list[i].type;
  403172:	7809      	ldrb	r1, [r1, #0]
					id_index++;
  403174:	3301      	adds	r3, #1
					device->report_id_map[id_index].object_type =
  403176:	f802 1010 	strb.w	r1, [r2, r0, lsl #1]
					id_index++;
  40317a:	b2db      	uxtb	r3, r3
					device->report_id_map[id_index].instance = j;
  40317c:	6961      	ldr	r1, [r4, #20]
				for (k = 0; k < device->object_list[i].num_report_ids; ++k) {
  40317e:	1bda      	subs	r2, r3, r7
					device->report_id_map[id_index].instance = j;
  403180:	eb01 0140 	add.w	r1, r1, r0, lsl #1
				for (k = 0; k < device->object_list[i].num_report_ids; ++k) {
  403184:	b2d2      	uxtb	r2, r2
					device->report_id_map[id_index].instance = j;
  403186:	704d      	strb	r5, [r1, #1]
				for (k = 0; k < device->object_list[i].num_report_ids; ++k) {
  403188:	6860      	ldr	r0, [r4, #4]
  40318a:	eb00 010e 	add.w	r1, r0, lr
  40318e:	794e      	ldrb	r6, [r1, #5]
  403190:	4296      	cmp	r6, r2
  403192:	d8ec      	bhi.n	40316e <mxt_init_device+0x1be>
					id_index++;
  403194:	461f      	mov	r7, r3
		for (j = 0; j <= device->object_list[i].instances; ++j) {
  403196:	3501      	adds	r5, #1
  403198:	790b      	ldrb	r3, [r1, #4]
  40319a:	b2ed      	uxtb	r5, r5
  40319c:	42ab      	cmp	r3, r5
  40319e:	d2e3      	bcs.n	403168 <mxt_init_device+0x1b8>
	for (i = 0; i < device->info_object->obj_count; ++i) {
  4031a0:	f10c 0c01 	add.w	ip, ip, #1
  4031a4:	6823      	ldr	r3, [r4, #0]
  4031a6:	fa5f fc8c 	uxtb.w	ip, ip
  4031aa:	799b      	ldrb	r3, [r3, #6]
  4031ac:	459c      	cmp	ip, r3
  4031ae:	d3d4      	bcc.n	40315a <mxt_init_device+0x1aa>
	for (i = 0; i < device->info_object->obj_count; ++i) {
  4031b0:	2b00      	cmp	r3, #0
  4031b2:	d0a2      	beq.n	4030fa <mxt_init_device+0x14a>
  4031b4:	3b01      	subs	r3, #1
  4031b6:	2100      	movs	r1, #0
  4031b8:	b2db      	uxtb	r3, r3
  4031ba:	3301      	adds	r3, #1
  4031bc:	eb03 0343 	add.w	r3, r3, r3, lsl #1
  4031c0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
		tot_report_ids += (device->object_list[i].num_report_ids);
  4031c4:	7942      	ldrb	r2, [r0, #5]
  4031c6:	3006      	adds	r0, #6
  4031c8:	440a      	add	r2, r1
	for (i = 0; i < device->info_object->obj_count; ++i) {
  4031ca:	4283      	cmp	r3, r0
		tot_report_ids += (device->object_list[i].num_report_ids);
  4031cc:	b2d1      	uxtb	r1, r2
	for (i = 0; i < device->info_object->obj_count; ++i) {
  4031ce:	d1f9      	bne.n	4031c4 <mxt_init_device+0x214>
	for (i = 0; i < tot_rpt_id; ++i) {
  4031d0:	2900      	cmp	r1, #0
  4031d2:	d092      	beq.n	4030fa <mxt_init_device+0x14a>
		if (device->report_id_map[i].object_type == object_type) {
  4031d4:	6962      	ldr	r2, [r4, #20]
  4031d6:	7813      	ldrb	r3, [r2, #0]
  4031d8:	2b09      	cmp	r3, #9
  4031da:	d011      	beq.n	403200 <mxt_init_device+0x250>
  4031dc:	2300      	movs	r3, #0
	for (i = 0; i < tot_rpt_id; ++i) {
  4031de:	3301      	adds	r3, #1
  4031e0:	b2db      	uxtb	r3, r3
  4031e2:	4299      	cmp	r1, r3
  4031e4:	d089      	beq.n	4030fa <mxt_init_device+0x14a>
		if (device->report_id_map[i].object_type == object_type) {
  4031e6:	f812 0f02 	ldrb.w	r0, [r2, #2]!
  4031ea:	2809      	cmp	r0, #9
  4031ec:	d1f7      	bne.n	4031de <mxt_init_device+0x22e>
  4031ee:	b25b      	sxtb	r3, r3
	return STATUS_OK;
  4031f0:	2000      	movs	r0, #0
	device->multitouch_report_offset = status;
  4031f2:	7723      	strb	r3, [r4, #28]
}
  4031f4:	b006      	add	sp, #24
  4031f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4031fa:	f04f 30ff 	mov.w	r0, #4294967295
  4031fe:	e77e      	b.n	4030fe <mxt_init_device+0x14e>
		if (device->report_id_map[i].object_type == object_type) {
  403200:	2300      	movs	r3, #0
  403202:	e7f5      	b.n	4031f0 <mxt_init_device+0x240>
  403204:	00408509 	.word	0x00408509
  403208:	00403bf9 	.word	0x00403bf9
  40320c:	0080001b 	.word	0x0080001b

00403210 <mxt_get_object_address>:
uint16_t mxt_get_object_address(struct mxt_device *device, uint8_t object_id,
		uint8_t instance)
{
	uint8_t i;

	for (i = 0; i < device->info_object->obj_count; i++) {
  403210:	6803      	ldr	r3, [r0, #0]
  403212:	799b      	ldrb	r3, [r3, #6]
  403214:	b1eb      	cbz	r3, 403252 <mxt_get_object_address+0x42>
{
  403216:	b410      	push	{r4}
		if (object_id == device->object_list[i].type) {
  403218:	6844      	ldr	r4, [r0, #4]
  40321a:	7822      	ldrb	r2, [r4, #0]
  40321c:	428a      	cmp	r2, r1
  40321e:	d013      	beq.n	403248 <mxt_get_object_address+0x38>
  403220:	1e5a      	subs	r2, r3, #1
  403222:	1da3      	adds	r3, r4, #6
  403224:	b2d2      	uxtb	r2, r2
  403226:	3201      	adds	r2, #1
  403228:	eb02 0242 	add.w	r2, r2, r2, lsl #1
  40322c:	eb04 0242 	add.w	r2, r4, r2, lsl #1
  403230:	e003      	b.n	40323a <mxt_get_object_address+0x2a>
  403232:	f813 0b06 	ldrb.w	r0, [r3], #6
  403236:	4288      	cmp	r0, r1
  403238:	d006      	beq.n	403248 <mxt_get_object_address+0x38>
	for (i = 0; i < device->info_object->obj_count; i++) {
  40323a:	4293      	cmp	r3, r2
		if (object_id == device->object_list[i].type) {
  40323c:	461c      	mov	r4, r3
	for (i = 0; i < device->info_object->obj_count; i++) {
  40323e:	d1f8      	bne.n	403232 <mxt_get_object_address+0x22>
			return device->object_list[i].start_address;
		}
	}

	return 0;
  403240:	2000      	movs	r0, #0
}
  403242:	f85d 4b04 	ldr.w	r4, [sp], #4
  403246:	4770      	bx	lr
			return device->object_list[i].start_address;
  403248:	f8b4 0001 	ldrh.w	r0, [r4, #1]
}
  40324c:	f85d 4b04 	ldr.w	r4, [sp], #4
  403250:	4770      	bx	lr
	return 0;
  403252:	4618      	mov	r0, r3
  403254:	4770      	bx	lr
  403256:	bf00      	nop

00403258 <mxt_write_config_object>:
 * \param *obj_data Pointer to memory buffer containing object data
 * \result Operation result status code
 */
status_code_t mxt_write_config_object(struct mxt_device *device,
		mxt_memory_adr memory_adr, void *obj_data)
{
  403258:	b530      	push	{r4, r5, lr}
	/* Initializing the TWI packet to send to the slave */
	twihs_package_t packet = {
  40325a:	2300      	movs	r3, #0
{
  40325c:	b087      	sub	sp, #28
	for (i = 0; i < device->info_object->obj_count; ++i) {
  40325e:	6804      	ldr	r4, [r0, #0]
	twihs_package_t packet = {
  403260:	2502      	movs	r5, #2
  403262:	9301      	str	r3, [sp, #4]
  403264:	9203      	str	r2, [sp, #12]
  403266:	0a0a      	lsrs	r2, r1, #8
  403268:	9304      	str	r3, [sp, #16]
  40326a:	9305      	str	r3, [sp, #20]
  40326c:	9502      	str	r5, [sp, #8]
	for (i = 0; i < device->info_object->obj_count; ++i) {
  40326e:	79a3      	ldrb	r3, [r4, #6]
	twihs_package_t packet = {
  403270:	f88d 1004 	strb.w	r1, [sp, #4]
  403274:	f88d 2005 	strb.w	r2, [sp, #5]
	for (i = 0; i < device->info_object->obj_count; ++i) {
  403278:	b1bb      	cbz	r3, 4032aa <mxt_write_config_object+0x52>
		if (device->object_list[i].start_address == mem_adr) {
  40327a:	6844      	ldr	r4, [r0, #4]
  40327c:	f8b4 2001 	ldrh.w	r2, [r4, #1]
  403280:	428a      	cmp	r2, r1
  403282:	d020      	beq.n	4032c6 <mxt_write_config_object+0x6e>
  403284:	1e5a      	subs	r2, r3, #1
  403286:	1da3      	adds	r3, r4, #6
  403288:	b2d2      	uxtb	r2, r2
  40328a:	3201      	adds	r2, #1
  40328c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
  403290:	eb04 0242 	add.w	r2, r4, r2, lsl #1
  403294:	e003      	b.n	40329e <mxt_write_config_object+0x46>
  403296:	f8b4 5001 	ldrh.w	r5, [r4, #1]
  40329a:	428d      	cmp	r5, r1
  40329c:	d013      	beq.n	4032c6 <mxt_write_config_object+0x6e>
	for (i = 0; i < device->info_object->obj_count; ++i) {
  40329e:	4293      	cmp	r3, r2
		if (device->object_list[i].start_address == mem_adr) {
  4032a0:	461c      	mov	r4, r3
  4032a2:	f103 0306 	add.w	r3, r3, #6
	for (i = 0; i < device->info_object->obj_count; ++i) {
  4032a6:	d1f6      	bne.n	403296 <mxt_write_config_object+0x3e>
  4032a8:	2300      	movs	r3, #0
	twihs_package_t packet = {
  4032aa:	7b04      	ldrb	r4, [r0, #12]
		.chip         = device->mxt_chip_adr,
		.buffer       = obj_data,
		.length       = mxt_get_object_size(device, memory_adr)
	};

	if (twihs_master_write(device->interface, &packet) != STATUS_OK) {
  4032ac:	a901      	add	r1, sp, #4
  4032ae:	4a08      	ldr	r2, [pc, #32]	; (4032d0 <mxt_write_config_object+0x78>)
  4032b0:	6880      	ldr	r0, [r0, #8]
	twihs_package_t packet = {
  4032b2:	9304      	str	r3, [sp, #16]
  4032b4:	f88d 4014 	strb.w	r4, [sp, #20]
	if (twihs_master_write(device->interface, &packet) != STATUS_OK) {
  4032b8:	4790      	blx	r2
  4032ba:	3000      	adds	r0, #0
  4032bc:	bf18      	it	ne
  4032be:	2001      	movne	r0, #1
		return ERR_IO_ERROR;
	} else {
		return STATUS_OK;
	}

}
  4032c0:	4240      	negs	r0, r0
  4032c2:	b007      	add	sp, #28
  4032c4:	bd30      	pop	{r4, r5, pc}
			return (device->object_list[i].size + 1);
  4032c6:	78e3      	ldrb	r3, [r4, #3]
  4032c8:	3301      	adds	r3, #1
  4032ca:	b2db      	uxtb	r3, r3
  4032cc:	e7ed      	b.n	4032aa <mxt_write_config_object+0x52>
  4032ce:	bf00      	nop
  4032d0:	00403c99 	.word	0x00403c99

004032d4 <mxt_write_config_reg>:
 * \param value Value to be written to register
 * \result Operation result status code
 */
status_code_t mxt_write_config_reg(struct mxt_device *device,
		mxt_memory_adr memory_adr, uint8_t value)
{
  4032d4:	b5f0      	push	{r4, r5, r6, r7, lr}
  4032d6:	b089      	sub	sp, #36	; 0x24
  4032d8:	460c      	mov	r4, r1
	/* Initializing the TWI packet to send to the slave */
	twihs_package_t packet = {
  4032da:	2300      	movs	r3, #0
  4032dc:	0a09      	lsrs	r1, r1, #8
  4032de:	7b07      	ldrb	r7, [r0, #12]
  4032e0:	2602      	movs	r6, #2
{
  4032e2:	f88d 2007 	strb.w	r2, [sp, #7]
	twihs_package_t packet = {
  4032e6:	f10d 0507 	add.w	r5, sp, #7
  4032ea:	2201      	movs	r2, #1
  4032ec:	9303      	str	r3, [sp, #12]
  4032ee:	9307      	str	r3, [sp, #28]
  4032f0:	f88d 100d 	strb.w	r1, [sp, #13]
		.chip         = device->mxt_chip_adr,
		.buffer       = &value,
		.length       = sizeof(value)
	};

	if (twihs_master_write(device->interface, &packet) != STATUS_OK) {
  4032f4:	a903      	add	r1, sp, #12
  4032f6:	4b08      	ldr	r3, [pc, #32]	; (403318 <mxt_write_config_reg+0x44>)
  4032f8:	6880      	ldr	r0, [r0, #8]
	twihs_package_t packet = {
  4032fa:	f88d 400c 	strb.w	r4, [sp, #12]
  4032fe:	f88d 701c 	strb.w	r7, [sp, #28]
  403302:	9604      	str	r6, [sp, #16]
  403304:	9505      	str	r5, [sp, #20]
  403306:	9206      	str	r2, [sp, #24]
	if (twihs_master_write(device->interface, &packet) != STATUS_OK) {
  403308:	4798      	blx	r3
  40330a:	3000      	adds	r0, #0
  40330c:	bf18      	it	ne
  40330e:	2001      	movne	r0, #1
		return ERR_IO_ERROR;
	} else {
		return STATUS_OK;
	}
}
  403310:	4240      	negs	r0, r0
  403312:	b009      	add	sp, #36	; 0x24
  403314:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403316:	bf00      	nop
  403318:	00403c99 	.word	0x00403c99

0040331c <mxt_read_message>:
 * \param *message Pointer to mxt_message instance
 * \return Operation result status code
 */
status_code_t mxt_read_message(struct mxt_device *device,
		struct mxt_conf_messageprocessor_t5 *message)
{
  40331c:	b5f0      	push	{r4, r5, r6, r7, lr}
	for (i = 0; i < device->info_object->obj_count; i++) {
  40331e:	6803      	ldr	r3, [r0, #0]
{
  403320:	b087      	sub	sp, #28
	for (i = 0; i < device->info_object->obj_count; i++) {
  403322:	799b      	ldrb	r3, [r3, #6]
  403324:	2b00      	cmp	r3, #0
  403326:	d033      	beq.n	403390 <mxt_read_message+0x74>
		if (object_id == device->object_list[i].type) {
  403328:	6845      	ldr	r5, [r0, #4]
  40332a:	782a      	ldrb	r2, [r5, #0]
  40332c:	2a05      	cmp	r2, #5
  40332e:	d02a      	beq.n	403386 <mxt_read_message+0x6a>
  403330:	1e5a      	subs	r2, r3, #1
  403332:	1dab      	adds	r3, r5, #6
  403334:	b2d2      	uxtb	r2, r2
  403336:	3201      	adds	r2, #1
  403338:	eb02 0242 	add.w	r2, r2, r2, lsl #1
  40333c:	eb05 0242 	add.w	r2, r5, r2, lsl #1
  403340:	e003      	b.n	40334a <mxt_read_message+0x2e>
  403342:	f813 4b06 	ldrb.w	r4, [r3], #6
  403346:	2c05      	cmp	r4, #5
  403348:	d01d      	beq.n	403386 <mxt_read_message+0x6a>
	for (i = 0; i < device->info_object->obj_count; i++) {
  40334a:	429a      	cmp	r2, r3
		if (object_id == device->object_list[i].type) {
  40334c:	461d      	mov	r5, r3
	for (i = 0; i < device->info_object->obj_count; i++) {
  40334e:	d1f8      	bne.n	403342 <mxt_read_message+0x26>
  403350:	2300      	movs	r3, #0
  403352:	461f      	mov	r7, r3
	uint16_t obj_adr = mxt_get_object_address(device,
			MXT_GEN_MESSAGEPROCESSOR_T5, 0);

	/* Initializing the TWI packet to send to the slave */
	twihs_package_t packet = {
  403354:	2200      	movs	r2, #0
  403356:	7b04      	ldrb	r4, [r0, #12]
  403358:	2602      	movs	r6, #2
  40335a:	2509      	movs	r5, #9
  40335c:	9201      	str	r2, [sp, #4]
  40335e:	9205      	str	r2, [sp, #20]
  403360:	9103      	str	r1, [sp, #12]
		.buffer       = message,
		.length       = MXT_TWI_MSG_SIZE_T5
	};

	/* Read information from the slave */
	if (twihs_master_read(device->interface, &packet) != STATUS_OK) {
  403362:	a901      	add	r1, sp, #4
  403364:	4a0b      	ldr	r2, [pc, #44]	; (403394 <mxt_read_message+0x78>)
  403366:	6880      	ldr	r0, [r0, #8]
	twihs_package_t packet = {
  403368:	f88d 7004 	strb.w	r7, [sp, #4]
  40336c:	f88d 3005 	strb.w	r3, [sp, #5]
  403370:	9602      	str	r6, [sp, #8]
  403372:	9504      	str	r5, [sp, #16]
  403374:	f88d 4014 	strb.w	r4, [sp, #20]
	if (twihs_master_read(device->interface, &packet) != STATUS_OK) {
  403378:	4790      	blx	r2
  40337a:	3000      	adds	r0, #0
  40337c:	bf18      	it	ne
  40337e:	2001      	movne	r0, #1
		return mxt_validate_message(&packet);
#else
		return STATUS_OK;
#endif
	}
}
  403380:	4240      	negs	r0, r0
  403382:	b007      	add	sp, #28
  403384:	bdf0      	pop	{r4, r5, r6, r7, pc}
			return device->object_list[i].start_address;
  403386:	f8b5 3001 	ldrh.w	r3, [r5, #1]
  40338a:	b2df      	uxtb	r7, r3
  40338c:	0a1b      	lsrs	r3, r3, #8
  40338e:	e7e1      	b.n	403354 <mxt_read_message+0x38>
	for (i = 0; i < device->info_object->obj_count; i++) {
  403390:	461f      	mov	r7, r3
  403392:	e7df      	b.n	403354 <mxt_read_message+0x38>
  403394:	00403bf9 	.word	0x00403bf9

00403398 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  403398:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
  40339c:	b990      	cbnz	r0, 4033c4 <_read+0x2c>
		return -1;
	}

	for (; len > 0; --len) {
  40339e:	2a00      	cmp	r2, #0
  4033a0:	4690      	mov	r8, r2
  4033a2:	dd0d      	ble.n	4033c0 <_read+0x28>
  4033a4:	460c      	mov	r4, r1
  4033a6:	188f      	adds	r7, r1, r2
  4033a8:	4e08      	ldr	r6, [pc, #32]	; (4033cc <_read+0x34>)
  4033aa:	4d09      	ldr	r5, [pc, #36]	; (4033d0 <_read+0x38>)
		ptr_get(stdio_base, ptr);
  4033ac:	4621      	mov	r1, r4
		ptr++;
  4033ae:	3401      	adds	r4, #1
		ptr_get(stdio_base, ptr);
  4033b0:	6830      	ldr	r0, [r6, #0]
  4033b2:	682b      	ldr	r3, [r5, #0]
  4033b4:	4798      	blx	r3
	for (; len > 0; --len) {
  4033b6:	42bc      	cmp	r4, r7
  4033b8:	d1f8      	bne.n	4033ac <_read+0x14>
		nChars++;
	}
	return nChars;
}
  4033ba:	4640      	mov	r0, r8
  4033bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	for (; len > 0; --len) {
  4033c0:	4680      	mov	r8, r0
  4033c2:	e7fa      	b.n	4033ba <_read+0x22>
		return -1;
  4033c4:	f04f 38ff 	mov.w	r8, #4294967295
  4033c8:	e7f7      	b.n	4033ba <_read+0x22>
  4033ca:	bf00      	nop
  4033cc:	20418da8 	.word	0x20418da8
  4033d0:	20418da0 	.word	0x20418da0

004033d4 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  4033d4:	3801      	subs	r0, #1
  4033d6:	2802      	cmp	r0, #2
  4033d8:	d81e      	bhi.n	403418 <_write+0x44>
{
  4033da:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4033de:	4615      	mov	r5, r2
		return -1;
	}

	for (; len != 0; --len) {
  4033e0:	b1ba      	cbz	r2, 403412 <_write+0x3e>
  4033e2:	460e      	mov	r6, r1
  4033e4:	460c      	mov	r4, r1
  4033e6:	f8df 803c 	ldr.w	r8, [pc, #60]	; 403424 <_write+0x50>
  4033ea:	4f0d      	ldr	r7, [pc, #52]	; (403420 <_write+0x4c>)
  4033ec:	e001      	b.n	4033f2 <_write+0x1e>
  4033ee:	3d01      	subs	r5, #1
  4033f0:	d00d      	beq.n	40340e <_write+0x3a>
		if (ptr_put(stdio_base, *ptr++) < 0) {
  4033f2:	f814 1b01 	ldrb.w	r1, [r4], #1
  4033f6:	f8d8 0000 	ldr.w	r0, [r8]
  4033fa:	683b      	ldr	r3, [r7, #0]
  4033fc:	4798      	blx	r3
  4033fe:	2800      	cmp	r0, #0
  403400:	eba4 0006 	sub.w	r0, r4, r6
  403404:	daf3      	bge.n	4033ee <_write+0x1a>
		return -1;
  403406:	f04f 30ff 	mov.w	r0, #4294967295
  40340a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40340e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	for (; len != 0; --len) {
  403412:	4610      	mov	r0, r2
			return -1;
		}
		++nChars;
	}
	return nChars;
}
  403414:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  403418:	f04f 30ff 	mov.w	r0, #4294967295
}
  40341c:	4770      	bx	lr
  40341e:	bf00      	nop
  403420:	20418da4 	.word	0x20418da4
  403424:	20418da8 	.word	0x20418da8

00403428 <wm8904_write_register>:
 *
 * \param uc_register_address Register address to write
 * \param us_data Data to write.
 */
void wm8904_write_register(uint8_t uc_register_address, uint16_t us_data)
{
  403428:	b570      	push	{r4, r5, r6, lr}
  40342a:	460b      	mov	r3, r1
  40342c:	b086      	sub	sp, #24
	uint8_t uc_temp_data[2];
	twihs_packet_t packet;

	uc_temp_data[0] = (us_data & 0xff00) >> 8;
  40342e:	0a0e      	lsrs	r6, r1, #8

	packet.addr[0]     = uc_register_address;
	packet.addr_length = 0x1;
	packet.buffer      = uc_temp_data;
	packet.length      = 0x2;
	packet.chip        = WM8904_SLAVE_ADDRESS;
  403430:	221a      	movs	r2, #26
	uc_temp_data[1] = us_data & 0xff;
  403432:	f88d 3001 	strb.w	r3, [sp, #1]
	packet.addr_length = 0x1;
  403436:	2501      	movs	r5, #1
	packet.length      = 0x2;
  403438:	2402      	movs	r4, #2

	twihs_master_write(WM8904_TWIHS, &packet);
  40343a:	a901      	add	r1, sp, #4
  40343c:	4b07      	ldr	r3, [pc, #28]	; (40345c <wm8904_write_register+0x34>)
	packet.addr[0]     = uc_register_address;
  40343e:	f88d 0004 	strb.w	r0, [sp, #4]
	twihs_master_write(WM8904_TWIHS, &packet);
  403442:	4807      	ldr	r0, [pc, #28]	; (403460 <wm8904_write_register+0x38>)
	uc_temp_data[0] = (us_data & 0xff00) >> 8;
  403444:	f88d 6000 	strb.w	r6, [sp]
	packet.addr_length = 0x1;
  403448:	9502      	str	r5, [sp, #8]
	packet.buffer      = uc_temp_data;
  40344a:	f8cd d00c 	str.w	sp, [sp, #12]
	packet.length      = 0x2;
  40344e:	9404      	str	r4, [sp, #16]
	packet.chip        = WM8904_SLAVE_ADDRESS;
  403450:	f88d 2014 	strb.w	r2, [sp, #20]
	twihs_master_write(WM8904_TWIHS, &packet);
  403454:	4798      	blx	r3
}
  403456:	b006      	add	sp, #24
  403458:	bd70      	pop	{r4, r5, r6, pc}
  40345a:	bf00      	nop
  40345c:	00403c99 	.word	0x00403c99
  403460:	40018000 	.word	0x40018000

00403464 <wm8904_read_register>:
 *
 * \param uc_register_address Register address to write
 * \retun Register value.
 */
uint16_t wm8904_read_register(uint8_t uc_register_address)
{
  403464:	b530      	push	{r4, r5, lr}
  403466:	b087      	sub	sp, #28

	packet.addr[0]     = uc_register_address;
	packet.addr_length = 0x1;
	packet.buffer      = uc_temp_data;
	packet.length      = 0x2;
	packet.chip        = WM8904_SLAVE_ADDRESS;
  403468:	221a      	movs	r2, #26
	packet.addr_length = 0x1;
  40346a:	2501      	movs	r5, #1
	packet.length      = 0x2;
  40346c:	2402      	movs	r4, #2
	packet.addr[0]     = uc_register_address;
  40346e:	f88d 0004 	strb.w	r0, [sp, #4]

	twihs_master_read(WM8904_TWIHS, &packet);
  403472:	a901      	add	r1, sp, #4
  403474:	4b08      	ldr	r3, [pc, #32]	; (403498 <wm8904_read_register+0x34>)
  403476:	4809      	ldr	r0, [pc, #36]	; (40349c <wm8904_read_register+0x38>)
	packet.addr_length = 0x1;
  403478:	9502      	str	r5, [sp, #8]
	packet.buffer      = uc_temp_data;
  40347a:	f8cd d00c 	str.w	sp, [sp, #12]
	packet.length      = 0x2;
  40347e:	9404      	str	r4, [sp, #16]
	packet.chip        = WM8904_SLAVE_ADDRESS;
  403480:	f88d 2014 	strb.w	r2, [sp, #20]
	twihs_master_read(WM8904_TWIHS, &packet);
  403484:	4798      	blx	r3
	us_data = (((uint16_t)uc_temp_data[0] << 8) & 0xff00) | uc_temp_data[1];
  403486:	f89d 0000 	ldrb.w	r0, [sp]
  40348a:	f89d 3001 	ldrb.w	r3, [sp, #1]

	return us_data;
}
  40348e:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
  403492:	b007      	add	sp, #28
  403494:	bd30      	pop	{r4, r5, pc}
  403496:	bf00      	nop
  403498:	00403bf9 	.word	0x00403bf9
  40349c:	40018000 	.word	0x40018000

004034a0 <wm8904_twi_init>:
 * \brief Initialize TWIHS connect to WM8904.
 *
 * \retun TWIHS_SUCCESS if initialization is complete, error code otherwise.
 */
uint32_t wm8904_twi_init(void)
{
  4034a0:	b510      	push	{r4, lr}
	pio_configure_pin(WM8904_TK_PIO, WM8904_TK_FLAGS);
  4034a2:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
{
  4034a6:	b084      	sub	sp, #16
	pio_configure_pin(WM8904_TK_PIO, WM8904_TK_FLAGS);
  4034a8:	4c15      	ldr	r4, [pc, #84]	; (403500 <wm8904_twi_init+0x60>)
  4034aa:	2021      	movs	r0, #33	; 0x21
  4034ac:	47a0      	blx	r4
	pio_configure_pin(WM8904_TF_PIO, WM8904_TF_FLAGS);
  4034ae:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  4034b2:	2020      	movs	r0, #32
  4034b4:	47a0      	blx	r4
	pio_configure_pin(WM8904_TD_PIO, WM8904_TD_FLAGS);
  4034b6:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4034ba:	207a      	movs	r0, #122	; 0x7a
  4034bc:	47a0      	blx	r4
	pio_configure_pin(WM8904_RK_PIO, WM8904_RK_FLAGS);
  4034be:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4034c2:	2016      	movs	r0, #22
  4034c4:	47a0      	blx	r4
	pio_configure_pin(WM8904_RF_PIO, WM8904_RF_FLAGS);
  4034c6:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4034ca:	2078      	movs	r0, #120	; 0x78
  4034cc:	47a0      	blx	r4
	pio_configure_pin(WM8904_RD_PIO, WM8904_RD_FLAGS);
  4034ce:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  4034d2:	200a      	movs	r0, #10
  4034d4:	47a0      	blx	r4
	pio_configure_pin(WM8904_PCK2_PIO, WM8904_PCK2_FLAGS);
  4034d6:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4034da:	2012      	movs	r0, #18
  4034dc:	47a0      	blx	r4
	p_opt->smbus      = 0;
  4034de:	2200      	movs	r2, #0
	p_opt->master_clk = sysclk_get_peripheral_hz();
  4034e0:	4908      	ldr	r1, [pc, #32]	; (403504 <wm8904_twi_init+0x64>)
  4034e2:	2013      	movs	r0, #19

	twihs_options_t opt;
	opt.master_clk = sysclk_get_cpu_hz();
	opt.speed = WM8904_TWIHS_CLK;
  4034e4:	4c08      	ldr	r4, [pc, #32]	; (403508 <wm8904_twi_init+0x68>)
  4034e6:	4b09      	ldr	r3, [pc, #36]	; (40350c <wm8904_twi_init+0x6c>)
  4034e8:	9101      	str	r1, [sp, #4]
	p_opt->smbus      = 0;
  4034ea:	f88d 200d 	strb.w	r2, [sp, #13]
  4034ee:	9402      	str	r4, [sp, #8]
  4034f0:	4798      	blx	r3
	return (twihs_master_init(p_twihs, p_opt));
  4034f2:	a901      	add	r1, sp, #4
  4034f4:	4b06      	ldr	r3, [pc, #24]	; (403510 <wm8904_twi_init+0x70>)
  4034f6:	4807      	ldr	r0, [pc, #28]	; (403514 <wm8904_twi_init+0x74>)
  4034f8:	4798      	blx	r3
	return twihs_master_setup(WM8904_TWIHS, &opt);
}
  4034fa:	b004      	add	sp, #16
  4034fc:	bd10      	pop	{r4, pc}
  4034fe:	bf00      	nop
  403500:	004043cd 	.word	0x004043cd
  403504:	08f0d180 	.word	0x08f0d180
  403508:	00061a80 	.word	0x00061a80
  40350c:	004046c9 	.word	0x004046c9
  403510:	00403bc5 	.word	0x00403bc5
  403514:	40018000 	.word	0x40018000

00403518 <ili9488_write_register.part.0>:
 *
 * \param uc_reg register address.
 * \param us_data data to be written.
 * \param size the number of parameters.
 */
static void ili9488_write_register(uint8_t uc_reg, const ili9488_color_t *us_data, uint32_t size)
  403518:	b538      	push	{r3, r4, r5, lr}
  40351a:	460d      	mov	r5, r1
  40351c:	4604      	mov	r4, r0
	if(size == 0) {
		return;
	}

	/* CDS pin is set high level when writing parameters or image data*/
	pio_set(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  40351e:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  403522:	4807      	ldr	r0, [pc, #28]	; (403540 <ili9488_write_register.part.0+0x28>)
  403524:	4b07      	ldr	r3, [pc, #28]	; (403544 <ili9488_write_register.part.0+0x2c>)
  403526:	4798      	blx	r3
		while(size--) {
  403528:	b145      	cbz	r5, 40353c <ili9488_write_register.part.0+0x24>
  40352a:	1e6b      	subs	r3, r5, #1
			*((volatile uint16_t *)(BOARD_ILI9488_ADDR)) = *lcd_data++;
  40352c:	f04f 41c6 	mov.w	r1, #1660944384	; 0x63000000
  403530:	f834 2b02 	ldrh.w	r2, [r4], #2
		while(size--) {
  403534:	3b01      	subs	r3, #1
			*((volatile uint16_t *)(BOARD_ILI9488_ADDR)) = *lcd_data++;
  403536:	800a      	strh	r2, [r1, #0]
		while(size--) {
  403538:	1c5a      	adds	r2, r3, #1
  40353a:	d1f9      	bne.n	403530 <ili9488_write_register.part.0+0x18>
  40353c:	bd38      	pop	{r3, r4, r5, pc}
  40353e:	bf00      	nop
  403540:	400e1200 	.word	0x400e1200
  403544:	00404265 	.word	0x00404265

00403548 <ili9488_write_register>:
{
  403548:	b570      	push	{r4, r5, r6, lr}
  40354a:	4604      	mov	r4, r0
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  40354c:	4b09      	ldr	r3, [pc, #36]	; (403574 <ili9488_write_register+0x2c>)
{
  40354e:	460e      	mov	r6, r1
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  403550:	4809      	ldr	r0, [pc, #36]	; (403578 <ili9488_write_register+0x30>)
  403552:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
{
  403556:	4615      	mov	r5, r2
		*((volatile uint16_t *)(BOARD_ILI9488_ADDR)) = lcd_index; /* ILI9488 index register address */
  403558:	b2a4      	uxth	r4, r4
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  40355a:	4798      	blx	r3
  40355c:	f04f 43c6 	mov.w	r3, #1660944384	; 0x63000000
  403560:	801c      	strh	r4, [r3, #0]
	if(size == 0) {
  403562:	b905      	cbnz	r5, 403566 <ili9488_write_register+0x1e>
  403564:	bd70      	pop	{r4, r5, r6, pc}
  403566:	4629      	mov	r1, r5
  403568:	4630      	mov	r0, r6
  40356a:	4b04      	ldr	r3, [pc, #16]	; (40357c <ili9488_write_register+0x34>)
	LCD_MULTI_WD(us_data, size);
}
  40356c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  403570:	4718      	bx	r3
  403572:	bf00      	nop
  403574:	00404269 	.word	0x00404269
  403578:	400e1200 	.word	0x400e1200
  40357c:	00403519 	.word	0x00403519

00403580 <ili9488_set_display_direction>:
 * \brief ILI9488 configure landscape.
 *
 * \Param LandscaprMode Landscape Mode.
 */
void ili9488_set_display_direction(enum ili9488_display_direction direction )
{
  403580:	b510      	push	{r4, lr}
  403582:	b082      	sub	sp, #8
	ili9488_color_t value;
	if(direction) {
  403584:	b990      	cbnz	r0, 4035ac <ili9488_set_display_direction+0x2c>
		value = 0xE8;
	} else {
		value = 0x48;
  403586:	2348      	movs	r3, #72	; 0x48
  403588:	f8ad 3006 	strh.w	r3, [sp, #6]
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  40358c:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  403590:	4808      	ldr	r0, [pc, #32]	; (4035b4 <ili9488_set_display_direction+0x34>)
  403592:	4b09      	ldr	r3, [pc, #36]	; (4035b8 <ili9488_set_display_direction+0x38>)
  403594:	2436      	movs	r4, #54	; 0x36
  403596:	4798      	blx	r3
  403598:	f04f 42c6 	mov.w	r2, #1660944384	; 0x63000000
  40359c:	2101      	movs	r1, #1
  40359e:	f10d 0006 	add.w	r0, sp, #6
  4035a2:	4b06      	ldr	r3, [pc, #24]	; (4035bc <ili9488_set_display_direction+0x3c>)
  4035a4:	8014      	strh	r4, [r2, #0]
  4035a6:	4798      	blx	r3
	}
	ili9488_write_register(ILI9488_CMD_MEMORY_ACCESS_CONTROL, &value, 1);
}
  4035a8:	b002      	add	sp, #8
  4035aa:	bd10      	pop	{r4, pc}
		value = 0xE8;
  4035ac:	23e8      	movs	r3, #232	; 0xe8
  4035ae:	f8ad 3006 	strh.w	r3, [sp, #6]
  4035b2:	e7eb      	b.n	40358c <ili9488_set_display_direction+0xc>
  4035b4:	400e1200 	.word	0x400e1200
  4035b8:	00404269 	.word	0x00404269
  4035bc:	00403519 	.word	0x00403519

004035c0 <ili9488_set_window>:
	ili9488_color_t buf[4];

	cnt = sizeof(buf)/sizeof(ili9488_color_t);

	col_start  =  x ;
	col_end    =  width + x - 1;
  4035c0:	3a01      	subs	r2, #1

	row_start = y ;
	row_end   = height + y - 1;
  4035c2:	3b01      	subs	r3, #1
	col_end    =  width + x - 1;
  4035c4:	4402      	add	r2, r0
	row_end   = height + y - 1;
  4035c6:	440b      	add	r3, r1
{
  4035c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4035cc:	460c      	mov	r4, r1
  4035ce:	b084      	sub	sp, #16

	buf[0] = get_8b_to_16b(col_start);
	buf[1] = get_0b_to_8b(col_start);
	buf[2] = get_8b_to_16b(col_end);
  4035d0:	f3c2 2507 	ubfx	r5, r2, #8, #8
	buf[3] = get_0b_to_8b(col_end);
  4035d4:	fa5f fc82 	uxtb.w	ip, r2
	buf[0] = get_8b_to_16b(col_start);
  4035d8:	ea4f 2e10 	mov.w	lr, r0, lsr #8
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  4035dc:	4f1e      	ldr	r7, [pc, #120]	; (403658 <ili9488_set_window+0x98>)
	buf[1] = get_0b_to_8b(col_start);
  4035de:	b2c6      	uxtb	r6, r0
	col_end    =  width + x - 1;
  4035e0:	f8ad 2002 	strh.w	r2, [sp, #2]
	ili9488_write_register(ILI9488_CMD_COLUMN_ADDRESS_SET, buf, cnt);
  4035e4:	a902      	add	r1, sp, #8
  4035e6:	2204      	movs	r2, #4
	col_start  =  x ;
  4035e8:	f8ad 0000 	strh.w	r0, [sp]
	ili9488_write_register(ILI9488_CMD_COLUMN_ADDRESS_SET, buf, cnt);
  4035ec:	202a      	movs	r0, #42	; 0x2a
	row_start = y ;
  4035ee:	f8ad 4004 	strh.w	r4, [sp, #4]
  4035f2:	f04f 44c6 	mov.w	r4, #1660944384	; 0x63000000
	buf[2] = get_8b_to_16b(col_end);
  4035f6:	f8ad 500c 	strh.w	r5, [sp, #12]
  4035fa:	2500      	movs	r5, #0
	ili9488_write_register(ILI9488_CMD_COLUMN_ADDRESS_SET, buf, cnt);
  4035fc:	f8df 8060 	ldr.w	r8, [pc, #96]	; 403660 <ili9488_set_window+0xa0>
	buf[3] = get_0b_to_8b(col_end);
  403600:	f8ad c00e 	strh.w	ip, [sp, #14]
	row_end   = height + y - 1;
  403604:	f8ad 3006 	strh.w	r3, [sp, #6]
	buf[0] = get_8b_to_16b(col_start);
  403608:	f8ad e008 	strh.w	lr, [sp, #8]
	buf[1] = get_0b_to_8b(col_start);
  40360c:	f8ad 600a 	strh.w	r6, [sp, #10]
	ili9488_write_register(ILI9488_CMD_COLUMN_ADDRESS_SET, buf, cnt);
  403610:	47c0      	blx	r8
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  403612:	4e12      	ldr	r6, [pc, #72]	; (40365c <ili9488_set_window+0x9c>)
  403614:	4638      	mov	r0, r7
  403616:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  40361a:	47b0      	blx	r6
  40361c:	8025      	strh	r5, [r4, #0]
	ili9488_write_register(ILI9488_CMD_NOP, 0, 0);

	/* Set Horizontal Address End Position */
	buf[0] = get_8b_to_16b(row_start);
	buf[1] = get_0b_to_8b(row_start);
  40361e:	f89d 3004 	ldrb.w	r3, [sp, #4]
	buf[2] = get_8b_to_16b(row_end);
	buf[3] = get_0b_to_8b(row_end);
	ili9488_write_register(ILI9488_CMD_PAGE_ADDRESS_SET, buf, cnt);
  403622:	a902      	add	r1, sp, #8
	buf[0] = get_8b_to_16b(row_start);
  403624:	f89d 0005 	ldrb.w	r0, [sp, #5]
	ili9488_write_register(ILI9488_CMD_PAGE_ADDRESS_SET, buf, cnt);
  403628:	2204      	movs	r2, #4
	buf[2] = get_8b_to_16b(row_end);
  40362a:	f89d e007 	ldrb.w	lr, [sp, #7]
	buf[1] = get_0b_to_8b(row_start);
  40362e:	f8ad 300a 	strh.w	r3, [sp, #10]
	buf[3] = get_0b_to_8b(row_end);
  403632:	f89d 3006 	ldrb.w	r3, [sp, #6]
	buf[0] = get_8b_to_16b(row_start);
  403636:	f8ad 0008 	strh.w	r0, [sp, #8]
	ili9488_write_register(ILI9488_CMD_PAGE_ADDRESS_SET, buf, cnt);
  40363a:	202b      	movs	r0, #43	; 0x2b
	buf[2] = get_8b_to_16b(row_end);
  40363c:	f8ad e00c 	strh.w	lr, [sp, #12]
	buf[3] = get_0b_to_8b(row_end);
  403640:	f8ad 300e 	strh.w	r3, [sp, #14]
	ili9488_write_register(ILI9488_CMD_PAGE_ADDRESS_SET, buf, cnt);
  403644:	47c0      	blx	r8
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  403646:	4638      	mov	r0, r7
  403648:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  40364c:	47b0      	blx	r6
  40364e:	8025      	strh	r5, [r4, #0]
	ili9488_write_register(ILI9488_CMD_NOP, 0, 0);
}
  403650:	b004      	add	sp, #16
  403652:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  403656:	bf00      	nop
  403658:	400e1200 	.word	0x400e1200
  40365c:	00404269 	.word	0x00404269
  403660:	00403549 	.word	0x00403549

00403664 <ili9488_display_on>:

/**
 * \brief Turn on the LCD.
 */
void ili9488_display_on(void)
{
  403664:	b508      	push	{r3, lr}
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  403666:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  40366a:	4b04      	ldr	r3, [pc, #16]	; (40367c <ili9488_display_on+0x18>)
  40366c:	4804      	ldr	r0, [pc, #16]	; (403680 <ili9488_display_on+0x1c>)
  40366e:	4798      	blx	r3
  403670:	f04f 43c6 	mov.w	r3, #1660944384	; 0x63000000
  403674:	2229      	movs	r2, #41	; 0x29
  403676:	801a      	strh	r2, [r3, #0]
  403678:	bd08      	pop	{r3, pc}
  40367a:	bf00      	nop
  40367c:	00404269 	.word	0x00404269
  403680:	400e1200 	.word	0x400e1200

00403684 <ili9488_set_cursor_position>:
 *
 * \param x X coordinate of upper-left corner on LCD.
 * \param y Y coordinate of upper-left corner on LCD.
 */
void ili9488_set_cursor_position(uint16_t x, uint16_t y)
{
  403684:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403688:	b084      	sub	sp, #16
	uint32_t cnt = 0;

	ili9488_color_t buf[4];
	cnt = sizeof(buf)/sizeof(ili9488_color_t);

	buf[0] = get_8b_to_16b(x);
  40368a:	ea4f 2e10 	mov.w	lr, r0, lsr #8
{
  40368e:	4603      	mov	r3, r0
	buf[1] = get_0b_to_8b(x);
  403690:	b2c6      	uxtb	r6, r0
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  403692:	4f1a      	ldr	r7, [pc, #104]	; (4036fc <ili9488_set_cursor_position+0x78>)
	buf[2] = get_8b_to_16b(x);
	buf[3] = get_0b_to_8b(x);
	ili9488_write_register(ILI9488_CMD_COLUMN_ADDRESS_SET, buf, cnt);
  403694:	2204      	movs	r2, #4
{
  403696:	f8ad 1004 	strh.w	r1, [sp, #4]
  40369a:	f04f 44c6 	mov.w	r4, #1660944384	; 0x63000000
	ili9488_write_register(ILI9488_CMD_COLUMN_ADDRESS_SET, buf, cnt);
  40369e:	a902      	add	r1, sp, #8
  4036a0:	f8df 8060 	ldr.w	r8, [pc, #96]	; 403704 <ili9488_set_cursor_position+0x80>
  4036a4:	2500      	movs	r5, #0
  4036a6:	202a      	movs	r0, #42	; 0x2a
{
  4036a8:	f8ad 3006 	strh.w	r3, [sp, #6]
	buf[0] = get_8b_to_16b(x);
  4036ac:	f8ad e008 	strh.w	lr, [sp, #8]
	buf[2] = get_8b_to_16b(x);
  4036b0:	f8ad e00c 	strh.w	lr, [sp, #12]
	buf[1] = get_0b_to_8b(x);
  4036b4:	f8ad 600a 	strh.w	r6, [sp, #10]
	buf[3] = get_0b_to_8b(x);
  4036b8:	f8ad 600e 	strh.w	r6, [sp, #14]
	ili9488_write_register(ILI9488_CMD_COLUMN_ADDRESS_SET, buf, cnt);
  4036bc:	47c0      	blx	r8
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  4036be:	4e10      	ldr	r6, [pc, #64]	; (403700 <ili9488_set_cursor_position+0x7c>)
  4036c0:	4638      	mov	r0, r7
  4036c2:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  4036c6:	47b0      	blx	r6
  4036c8:	8025      	strh	r5, [r4, #0]
	ili9488_write_register(ILI9488_CMD_NOP, 0, 0);


	/* Set Horizontal Address End Position */
	buf[0] = get_8b_to_16b(y);
  4036ca:	f89d e005 	ldrb.w	lr, [sp, #5]
	buf[1] = get_0b_to_8b(y);
	buf[2] = get_8b_to_16b(y);
	buf[3] = get_0b_to_8b(y);
	ili9488_write_register(ILI9488_CMD_PAGE_ADDRESS_SET, buf, cnt);
  4036ce:	a902      	add	r1, sp, #8
	buf[1] = get_0b_to_8b(y);
  4036d0:	f89d 3004 	ldrb.w	r3, [sp, #4]
	ili9488_write_register(ILI9488_CMD_PAGE_ADDRESS_SET, buf, cnt);
  4036d4:	2204      	movs	r2, #4
  4036d6:	202b      	movs	r0, #43	; 0x2b
	buf[0] = get_8b_to_16b(y);
  4036d8:	f8ad e008 	strh.w	lr, [sp, #8]
	buf[2] = get_8b_to_16b(y);
  4036dc:	f8ad e00c 	strh.w	lr, [sp, #12]
	buf[1] = get_0b_to_8b(y);
  4036e0:	f8ad 300a 	strh.w	r3, [sp, #10]
	buf[3] = get_0b_to_8b(y);
  4036e4:	f8ad 300e 	strh.w	r3, [sp, #14]
	ili9488_write_register(ILI9488_CMD_PAGE_ADDRESS_SET, buf, cnt);
  4036e8:	47c0      	blx	r8
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  4036ea:	4638      	mov	r0, r7
  4036ec:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  4036f0:	47b0      	blx	r6
  4036f2:	8025      	strh	r5, [r4, #0]
	ili9488_write_register(ILI9488_CMD_NOP, 0, 0);
}
  4036f4:	b004      	add	sp, #16
  4036f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4036fa:	bf00      	nop
  4036fc:	400e1200 	.word	0x400e1200
  403700:	00404269 	.word	0x00404269
  403704:	00403549 	.word	0x00403549

00403708 <ili9488_init>:
{
  403708:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	pmc_enable_periph_clk(ID_SMC);
  40370c:	4b50      	ldr	r3, [pc, #320]	; (403850 <ili9488_init+0x148>)
{
  40370e:	b085      	sub	sp, #20
  403710:	4680      	mov	r8, r0
	pmc_enable_periph_clk(ID_SMC);
  403712:	2009      	movs	r0, #9
  403714:	4798      	blx	r3
	smc_set_setup_timing(SMC, BOARD_ILI9488_EBI_NPCS, SMC_SETUP_NWE_SETUP(0)
  403716:	2200      	movs	r2, #0
  403718:	2103      	movs	r1, #3
  40371a:	484e      	ldr	r0, [pc, #312]	; (403854 <ili9488_init+0x14c>)
  40371c:	4b4e      	ldr	r3, [pc, #312]	; (403858 <ili9488_init+0x150>)
  40371e:	f04f 45c6 	mov.w	r5, #1660944384	; 0x63000000
  403722:	4798      	blx	r3
	smc_set_pulse_timing(SMC, BOARD_ILI9488_EBI_NPCS , SMC_PULSE_NWE_PULSE(3)
  403724:	4a4d      	ldr	r2, [pc, #308]	; (40385c <ili9488_init+0x154>)
  403726:	2103      	movs	r1, #3
  403728:	484a      	ldr	r0, [pc, #296]	; (403854 <ili9488_init+0x14c>)
  40372a:	4b4d      	ldr	r3, [pc, #308]	; (403860 <ili9488_init+0x158>)
  40372c:	2401      	movs	r4, #1
  40372e:	4798      	blx	r3
	smc_set_cycle_timing(SMC, BOARD_ILI9488_EBI_NPCS, SMC_CYCLE_NWE_CYCLE(0x4)
  403730:	4a4c      	ldr	r2, [pc, #304]	; (403864 <ili9488_init+0x15c>)
  403732:	2103      	movs	r1, #3
  403734:	4847      	ldr	r0, [pc, #284]	; (403854 <ili9488_init+0x14c>)
  403736:	4b4c      	ldr	r3, [pc, #304]	; (403868 <ili9488_init+0x160>)
  403738:	4798      	blx	r3
	smc_set_mode(SMC, BOARD_ILI9488_EBI_NPCS, SMC_MODE_READ_MODE
  40373a:	4a4c      	ldr	r2, [pc, #304]	; (40386c <ili9488_init+0x164>)
  40373c:	4b4c      	ldr	r3, [pc, #304]	; (403870 <ili9488_init+0x168>)
  40373e:	2103      	movs	r1, #3
  403740:	4844      	ldr	r0, [pc, #272]	; (403854 <ili9488_init+0x14c>)
  403742:	4798      	blx	r3
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  403744:	4e4b      	ldr	r6, [pc, #300]	; (403874 <ili9488_init+0x16c>)
  403746:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  40374a:	484b      	ldr	r0, [pc, #300]	; (403878 <ili9488_init+0x170>)
  40374c:	47b0      	blx	r6
  40374e:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  403752:	4849      	ldr	r0, [pc, #292]	; (403878 <ili9488_init+0x170>)
  403754:	802c      	strh	r4, [r5, #0]
  403756:	47b0      	blx	r6
  403758:	2311      	movs	r3, #17
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  40375a:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  40375e:	4846      	ldr	r0, [pc, #280]	; (403878 <ili9488_init+0x170>)
  403760:	802b      	strh	r3, [r5, #0]
  403762:	47b0      	blx	r6
  403764:	23d3      	movs	r3, #211	; 0xd3
	pio_set(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  403766:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  40376a:	4843      	ldr	r0, [pc, #268]	; (403878 <ili9488_init+0x170>)
  40376c:	802b      	strh	r3, [r5, #0]
  40376e:	4b43      	ldr	r3, [pc, #268]	; (40387c <ili9488_init+0x174>)
  403770:	4798      	blx	r3
		return *(volatile uint16_t *)(BOARD_ILI9488_ADDR);
	}
	static inline void LCD_MULTI_RD(uint16_t *pbuffer, uint32_t size)
	{
		while(size--) {
			*pbuffer++ = *((volatile uint16_t *)(BOARD_ILI9488_ADDR));
  403772:	882b      	ldrh	r3, [r5, #0]
	if (chipid != ILI9488_DEVICE_CODE) {
  403774:	f249 4188 	movw	r1, #38024	; 0x9488
  403778:	f8ad 3004 	strh.w	r3, [sp, #4]
  40377c:	882b      	ldrh	r3, [r5, #0]
  40377e:	b29b      	uxth	r3, r3
  403780:	f8ad 3006 	strh.w	r3, [sp, #6]
		chipid |= (*ptr &0xFF)<< (shift_cnt << 3);
  403784:	b2db      	uxtb	r3, r3
  403786:	882a      	ldrh	r2, [r5, #0]
  403788:	041b      	lsls	r3, r3, #16
  40378a:	b292      	uxth	r2, r2
  40378c:	f8ad 2008 	strh.w	r2, [sp, #8]
  403790:	b2d2      	uxtb	r2, r2
  403792:	8828      	ldrh	r0, [r5, #0]
  403794:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  403798:	b282      	uxth	r2, r0
  40379a:	b2d0      	uxtb	r0, r2
  40379c:	f8ad 200a 	strh.w	r2, [sp, #10]
  4037a0:	882a      	ldrh	r2, [r5, #0]
  4037a2:	4303      	orrs	r3, r0
	if (chipid != ILI9488_DEVICE_CODE) {
  4037a4:	428b      	cmp	r3, r1
  4037a6:	d003      	beq.n	4037b0 <ili9488_init+0xa8>
}
  4037a8:	4620      	mov	r0, r4
  4037aa:	b005      	add	sp, #20
  4037ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	param = 0x48;
  4037b0:	af04      	add	r7, sp, #16
  4037b2:	2348      	movs	r3, #72	; 0x48
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  4037b4:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  4037b8:	482f      	ldr	r0, [pc, #188]	; (403878 <ili9488_init+0x170>)
	param = 0x48;
  4037ba:	f827 3d0c 	strh.w	r3, [r7, #-12]!
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  4037be:	47b0      	blx	r6
		*((volatile uint16_t *)(BOARD_ILI9488_ADDR)) = lcd_index; /* ILI9488 index register address */
  4037c0:	2336      	movs	r3, #54	; 0x36
  4037c2:	4621      	mov	r1, r4
  4037c4:	f8df 90c8 	ldr.w	r9, [pc, #200]	; 403890 <ili9488_init+0x188>
  4037c8:	4638      	mov	r0, r7
  4037ca:	802b      	strh	r3, [r5, #0]
  4037cc:	47c8      	blx	r9
	param = 0x04;
  4037ce:	2304      	movs	r3, #4
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  4037d0:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  4037d4:	4828      	ldr	r0, [pc, #160]	; (403878 <ili9488_init+0x170>)
	param = 0x04;
  4037d6:	f8ad 3004 	strh.w	r3, [sp, #4]
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  4037da:	47b0      	blx	r6
  4037dc:	23cf      	movs	r3, #207	; 0xcf
  4037de:	4621      	mov	r1, r4
  4037e0:	4638      	mov	r0, r7
  4037e2:	802b      	strh	r3, [r5, #0]
  4037e4:	47c8      	blx	r9
	param = 0x05;
  4037e6:	2305      	movs	r3, #5
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  4037e8:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  4037ec:	4822      	ldr	r0, [pc, #136]	; (403878 <ili9488_init+0x170>)
	param = 0x05;
  4037ee:	f8ad 3004 	strh.w	r3, [sp, #4]
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  4037f2:	47b0      	blx	r6
  4037f4:	233a      	movs	r3, #58	; 0x3a
  4037f6:	4621      	mov	r1, r4
  4037f8:	4638      	mov	r0, r7
	ili9488_set_window(0, 0,p_opt->ul_width,p_opt->ul_height);
  4037fa:	4c21      	ldr	r4, [pc, #132]	; (403880 <ili9488_init+0x178>)
  4037fc:	802b      	strh	r3, [r5, #0]
  4037fe:	47c8      	blx	r9
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  403800:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  403804:	481c      	ldr	r0, [pc, #112]	; (403878 <ili9488_init+0x170>)
  403806:	47b0      	blx	r6
  403808:	2312      	movs	r3, #18
  40380a:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  40380e:	481a      	ldr	r0, [pc, #104]	; (403878 <ili9488_init+0x170>)
  403810:	802b      	strh	r3, [r5, #0]
  403812:	47b0      	blx	r6
  403814:	2229      	movs	r2, #41	; 0x29
	ili9488_set_display_direction(LANDSCAPE);
  403816:	2000      	movs	r0, #0
  403818:	4b1a      	ldr	r3, [pc, #104]	; (403884 <ili9488_init+0x17c>)
  40381a:	802a      	strh	r2, [r5, #0]
  40381c:	4798      	blx	r3
	ili9488_set_window(0, 0,p_opt->ul_width,p_opt->ul_height);
  40381e:	2100      	movs	r1, #0
  403820:	f8b8 3004 	ldrh.w	r3, [r8, #4]
  403824:	4608      	mov	r0, r1
  403826:	f8b8 2000 	ldrh.w	r2, [r8]
  40382a:	47a0      	blx	r4
  40382c:	4b16      	ldr	r3, [pc, #88]	; (403888 <ili9488_init+0x180>)
  40382e:	f8b8 1008 	ldrh.w	r1, [r8, #8]
  403832:	f503 7220 	add.w	r2, r3, #640	; 0x280
		g_ul_pixel_cache[i] = ul_color;
  403836:	f823 1f02 	strh.w	r1, [r3, #2]!
	for (i = 0; i < LCD_DATA_CACHE_SIZE; ++i) {
  40383a:	4293      	cmp	r3, r2
  40383c:	d1fb      	bne.n	403836 <ili9488_init+0x12e>
	ili9488_set_cursor_position(0, 0);
  40383e:	2100      	movs	r1, #0
	return 0;
  403840:	2400      	movs	r4, #0
	ili9488_set_cursor_position(0, 0);
  403842:	4b12      	ldr	r3, [pc, #72]	; (40388c <ili9488_init+0x184>)
  403844:	4608      	mov	r0, r1
  403846:	4798      	blx	r3
}
  403848:	4620      	mov	r0, r4
  40384a:	b005      	add	sp, #20
  40384c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  403850:	004046c9 	.word	0x004046c9
  403854:	40080000 	.word	0x40080000
  403858:	004039c5 	.word	0x004039c5
  40385c:	0a0a0403 	.word	0x0a0a0403
  403860:	004039cd 	.word	0x004039cd
  403864:	000a0004 	.word	0x000a0004
  403868:	004039d5 	.word	0x004039d5
  40386c:	000f1003 	.word	0x000f1003
  403870:	004039dd 	.word	0x004039dd
  403874:	00404269 	.word	0x00404269
  403878:	400e1200 	.word	0x400e1200
  40387c:	00404265 	.word	0x00404265
  403880:	004035c1 	.word	0x004035c1
  403884:	00403581 	.word	0x00403581
  403888:	2040ba5e 	.word	0x2040ba5e
  40388c:	00403685 	.word	0x00403685
  403890:	00403519 	.word	0x00403519

00403894 <ili9488_write_brightness>:
 * Configures the display for a given brightness value
 *
 * \param us_value brightness value need to written.
 */
void ili9488_write_brightness(uint16_t us_value)
{
  403894:	b530      	push	{r4, r5, lr}
  403896:	b083      	sub	sp, #12
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  403898:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  40389c:	4b07      	ldr	r3, [pc, #28]	; (4038bc <ili9488_write_brightness+0x28>)
  40389e:	2551      	movs	r5, #81	; 0x51
{
  4038a0:	ac02      	add	r4, sp, #8
  4038a2:	f824 0d02 	strh.w	r0, [r4, #-2]!
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  4038a6:	4806      	ldr	r0, [pc, #24]	; (4038c0 <ili9488_write_brightness+0x2c>)
  4038a8:	4798      	blx	r3
  4038aa:	f04f 42c6 	mov.w	r2, #1660944384	; 0x63000000
  4038ae:	4620      	mov	r0, r4
  4038b0:	2101      	movs	r1, #1
  4038b2:	4b04      	ldr	r3, [pc, #16]	; (4038c4 <ili9488_write_brightness+0x30>)
  4038b4:	8015      	strh	r5, [r2, #0]
  4038b6:	4798      	blx	r3
	ili9488_write_register(ILI9488_CMD_WRITE_DISPLAY_BRIGHTNESS, (ili9488_color_t *)&us_value, 1);
}
  4038b8:	b003      	add	sp, #12
  4038ba:	bd30      	pop	{r4, r5, pc}
  4038bc:	00404269 	.word	0x00404269
  4038c0:	400e1200 	.word	0x400e1200
  4038c4:	00403519 	.word	0x00403519

004038c8 <ili9488_set_limits>:
 * \param end_x The x coordinate of the bottom right corner
 * \param end_y The y coordinate of the bottom right corner
 */
void ili9488_set_limits(ili9488_coord_t start_x, ili9488_coord_t start_y,
		ili9488_coord_t end_x, ili9488_coord_t end_y)
{
  4038c8:	b4f0      	push	{r4, r5, r6, r7}
	limit_start_x = start_x;
  4038ca:	4f05      	ldr	r7, [pc, #20]	; (4038e0 <ili9488_set_limits+0x18>)
	limit_start_y = start_y;
  4038cc:	4e05      	ldr	r6, [pc, #20]	; (4038e4 <ili9488_set_limits+0x1c>)
	limit_end_x = end_x;
  4038ce:	4d06      	ldr	r5, [pc, #24]	; (4038e8 <ili9488_set_limits+0x20>)
	limit_end_y = end_y;
  4038d0:	4c06      	ldr	r4, [pc, #24]	; (4038ec <ili9488_set_limits+0x24>)
	limit_start_x = start_x;
  4038d2:	8038      	strh	r0, [r7, #0]
	limit_start_y = start_y;
  4038d4:	8031      	strh	r1, [r6, #0]
	limit_end_x = end_x;
  4038d6:	802a      	strh	r2, [r5, #0]
	limit_end_y = end_y;
  4038d8:	8023      	strh	r3, [r4, #0]
}
  4038da:	bcf0      	pop	{r4, r5, r6, r7}
  4038dc:	4770      	bx	lr
  4038de:	bf00      	nop
  4038e0:	2040bce4 	.word	0x2040bce4
  4038e4:	2040bce6 	.word	0x2040bce6
  4038e8:	2040bce0 	.word	0x2040bce0
  4038ec:	2040bce2 	.word	0x2040bce2

004038f0 <ili9488_set_orientation>:
void ili9488_set_orientation(uint8_t flags)
{
	/* Flip X/Y and reverse X orientation and set BGR mode*/
	ili9488_color_t madctl = 0x68;

	if (flags & ILI9488_FLIP_X) {
  4038f0:	07c1      	lsls	r1, r0, #31
{
  4038f2:	b510      	push	{r4, lr}
	ili9488_color_t madctl = 0x68;
  4038f4:	bf54      	ite	pl
  4038f6:	2368      	movpl	r3, #104	; 0x68
		madctl &= ~(1 << 6);
  4038f8:	2328      	movmi	r3, #40	; 0x28
{
  4038fa:	b082      	sub	sp, #8
	}

	if (flags & ILI9488_FLIP_Y) {
  4038fc:	0782      	lsls	r2, r0, #30
		madctl &= ~(1 << 6);
  4038fe:	f8ad 3006 	strh.w	r3, [sp, #6]
	if (flags & ILI9488_FLIP_Y) {
  403902:	d505      	bpl.n	403910 <ili9488_set_orientation+0x20>
		madctl |= 1 << 7;
  403904:	f8bd 3006 	ldrh.w	r3, [sp, #6]
  403908:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40390c:	f8ad 3006 	strh.w	r3, [sp, #6]
	}

	if (flags & ILI9488_SWITCH_XY) {
  403910:	0743      	lsls	r3, r0, #29
  403912:	d505      	bpl.n	403920 <ili9488_set_orientation+0x30>
		madctl &= ~(1 << 5);
  403914:	f8bd 3006 	ldrh.w	r3, [sp, #6]
  403918:	f023 0320 	bic.w	r3, r3, #32
  40391c:	f8ad 3006 	strh.w	r3, [sp, #6]
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  403920:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  403924:	4806      	ldr	r0, [pc, #24]	; (403940 <ili9488_set_orientation+0x50>)
  403926:	4b07      	ldr	r3, [pc, #28]	; (403944 <ili9488_set_orientation+0x54>)
  403928:	2436      	movs	r4, #54	; 0x36
  40392a:	4798      	blx	r3
  40392c:	f04f 42c6 	mov.w	r2, #1660944384	; 0x63000000
  403930:	2101      	movs	r1, #1
  403932:	f10d 0006 	add.w	r0, sp, #6
  403936:	4b04      	ldr	r3, [pc, #16]	; (403948 <ili9488_set_orientation+0x58>)
  403938:	8014      	strh	r4, [r2, #0]
  40393a:	4798      	blx	r3
	}

	ili9488_write_register(ILI9488_CMD_MEMORY_ACCESS_CONTROL, &madctl, 1);
}
  40393c:	b002      	add	sp, #8
  40393e:	bd10      	pop	{r4, pc}
  403940:	400e1200 	.word	0x400e1200
  403944:	00404269 	.word	0x00404269
  403948:	00403519 	.word	0x00403519

0040394c <ili9488_duplicate_pixel>:
 * \param color The color to write to the display
 * \param count The number of pixels to write with this color
 */
void ili9488_duplicate_pixel(const uint16_t color, uint32_t count)
{
	ili9488_set_window(limit_start_x, limit_start_y, (limit_end_x - limit_start_x) + 1, (limit_end_y - limit_start_y) + 1);
  40394c:	4b15      	ldr	r3, [pc, #84]	; (4039a4 <ili9488_duplicate_pixel+0x58>)
  40394e:	4a16      	ldr	r2, [pc, #88]	; (4039a8 <ili9488_duplicate_pixel+0x5c>)
{
  403950:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403954:	4606      	mov	r6, r0
	ili9488_set_window(limit_start_x, limit_start_y, (limit_end_x - limit_start_x) + 1, (limit_end_y - limit_start_y) + 1);
  403956:	881b      	ldrh	r3, [r3, #0]
  403958:	8812      	ldrh	r2, [r2, #0]
{
  40395a:	460f      	mov	r7, r1
	ili9488_set_window(limit_start_x, limit_start_y, (limit_end_x - limit_start_x) + 1, (limit_end_y - limit_start_y) + 1);
  40395c:	4813      	ldr	r0, [pc, #76]	; (4039ac <ili9488_duplicate_pixel+0x60>)
  40395e:	3301      	adds	r3, #1
  403960:	4913      	ldr	r1, [pc, #76]	; (4039b0 <ili9488_duplicate_pixel+0x64>)
  403962:	3201      	adds	r2, #1
  403964:	8800      	ldrh	r0, [r0, #0]
  403966:	8809      	ldrh	r1, [r1, #0]
  403968:	1a12      	subs	r2, r2, r0
  40396a:	4d12      	ldr	r5, [pc, #72]	; (4039b4 <ili9488_duplicate_pixel+0x68>)
  40396c:	1a5b      	subs	r3, r3, r1
  40396e:	b292      	uxth	r2, r2
  403970:	b29b      	uxth	r3, r3
  403972:	47a8      	blx	r5
	pio_clear(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  403974:	4b10      	ldr	r3, [pc, #64]	; (4039b8 <ili9488_duplicate_pixel+0x6c>)
  403976:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  40397a:	4810      	ldr	r0, [pc, #64]	; (4039bc <ili9488_duplicate_pixel+0x70>)
  40397c:	4798      	blx	r3
  40397e:	f04f 45c6 	mov.w	r5, #1660944384	; 0x63000000
  403982:	232c      	movs	r3, #44	; 0x2c
  403984:	802b      	strh	r3, [r5, #0]
	ili9488_write_ram_prepare();

#ifdef ILI9488_EBIMODE
	while (count--) {
  403986:	b15f      	cbz	r7, 4039a0 <ili9488_duplicate_pixel+0x54>
  403988:	1e7c      	subs	r4, r7, #1
  40398a:	f8df 8034 	ldr.w	r8, [pc, #52]	; 4039c0 <ili9488_duplicate_pixel+0x74>
	pio_set(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  40398e:	4f0b      	ldr	r7, [pc, #44]	; (4039bc <ili9488_duplicate_pixel+0x70>)
	while (count--) {
  403990:	3c01      	subs	r4, #1
	pio_set(PIN_EBI_CDS_PIO, PIN_EBI_CDS_MASK);
  403992:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  403996:	4638      	mov	r0, r7
  403998:	47c0      	blx	r8
	while (count--) {
  40399a:	1c63      	adds	r3, r4, #1
		*(volatile uint16_t *)(BOARD_ILI9488_ADDR) = lcd_data;
  40399c:	802e      	strh	r6, [r5, #0]
  40399e:	d1f7      	bne.n	403990 <ili9488_duplicate_pixel+0x44>
  4039a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4039a4:	2040bce2 	.word	0x2040bce2
  4039a8:	2040bce0 	.word	0x2040bce0
  4039ac:	2040bce4 	.word	0x2040bce4
  4039b0:	2040bce6 	.word	0x2040bce6
  4039b4:	004035c1 	.word	0x004035c1
  4039b8:	00404269 	.word	0x00404269
  4039bc:	400e1200 	.word	0x400e1200
  4039c0:	00404265 	.word	0x00404265

004039c4 <smc_set_setup_timing>:
 * \param ul_setup_timing Setup timing for NWE, NCS, NRD.
 */
void smc_set_setup_timing(Smc *p_smc, uint32_t ul_cs,
		uint32_t ul_setup_timing)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_SETUP = ul_setup_timing;
  4039c4:	0109      	lsls	r1, r1, #4
  4039c6:	5042      	str	r2, [r0, r1]
  4039c8:	4770      	bx	lr
  4039ca:	bf00      	nop

004039cc <smc_set_pulse_timing>:
 * \param ul_pulse_timing Pulse timing for NWE,NCS,NRD.
 */
void smc_set_pulse_timing(Smc *p_smc, uint32_t ul_cs,
		uint32_t ul_pulse_timing)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_PULSE = ul_pulse_timing;
  4039cc:	eb00 1101 	add.w	r1, r0, r1, lsl #4
  4039d0:	604a      	str	r2, [r1, #4]
  4039d2:	4770      	bx	lr

004039d4 <smc_set_cycle_timing>:
 * \param ul_cycle_timing Cycle timing for NWE and NRD.
 */
void smc_set_cycle_timing(Smc *p_smc, uint32_t ul_cs,
		uint32_t ul_cycle_timing)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_CYCLE = ul_cycle_timing;
  4039d4:	eb00 1101 	add.w	r1, r0, r1, lsl #4
  4039d8:	608a      	str	r2, [r1, #8]
  4039da:	4770      	bx	lr

004039dc <smc_set_mode>:
 * \param ul_cs Chip select number to be set.
 * \param ul_mode SMC mode.
 */
void smc_set_mode(Smc *p_smc, uint32_t ul_cs, uint32_t ul_mode)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_MODE = ul_mode;
  4039dc:	eb00 1101 	add.w	r1, r0, r1, lsl #4
  4039e0:	60ca      	str	r2, [r1, #12]
  4039e2:	4770      	bx	lr

004039e4 <ssc_reset>:
 * \param p_ssc Pointer to an SSC instance.
 */
void ssc_reset(Ssc *p_ssc)
{
	p_ssc->SSC_CR = SSC_CR_SWRST;
	p_ssc->SSC_CMR = 0;
  4039e4:	2300      	movs	r3, #0
	p_ssc->SSC_CR = SSC_CR_SWRST;
  4039e6:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4039ea:	6002      	str	r2, [r0, #0]
	p_ssc->SSC_CMR = 0;
  4039ec:	6043      	str	r3, [r0, #4]
	p_ssc->SSC_RCMR = 0;
  4039ee:	6103      	str	r3, [r0, #16]
	p_ssc->SSC_RFMR = 0;
  4039f0:	6143      	str	r3, [r0, #20]
	p_ssc->SSC_TCMR = 0;
  4039f2:	6183      	str	r3, [r0, #24]
	p_ssc->SSC_TFMR = 0;
  4039f4:	61c3      	str	r3, [r0, #28]
  4039f6:	4770      	bx	lr

004039f8 <ssc_enable_rx>:
 *
 * \param p_ssc Pointer to an SSC instance.
 */
void ssc_enable_rx(Ssc *p_ssc)
{
	p_ssc->SSC_CR = SSC_CR_RXEN;
  4039f8:	2301      	movs	r3, #1
  4039fa:	6003      	str	r3, [r0, #0]
  4039fc:	4770      	bx	lr
  4039fe:	bf00      	nop

00403a00 <ssc_disable_rx>:
 *
 * \param p_ssc Pointer to an SSC instance.
 */
void ssc_disable_rx(Ssc *p_ssc)
{
	p_ssc->SSC_CR = SSC_CR_RXDIS;
  403a00:	2302      	movs	r3, #2
  403a02:	6003      	str	r3, [r0, #0]
  403a04:	4770      	bx	lr
  403a06:	bf00      	nop

00403a08 <ssc_enable_tx>:
 *
 * \param p_ssc Pointer to an SSC instance.
 */
void ssc_enable_tx(Ssc *p_ssc)
{
	p_ssc->SSC_CR = SSC_CR_TXEN;
  403a08:	f44f 7380 	mov.w	r3, #256	; 0x100
  403a0c:	6003      	str	r3, [r0, #0]
  403a0e:	4770      	bx	lr

00403a10 <ssc_disable_tx>:
 *
 * \param p_ssc Pointer to an SSC instance.
 */
void ssc_disable_tx(Ssc *p_ssc)
{
	p_ssc->SSC_CR = SSC_CR_TXDIS;
  403a10:	f44f 7300 	mov.w	r3, #512	; 0x200
  403a14:	6003      	str	r3, [r0, #0]
  403a16:	4770      	bx	lr

00403a18 <ssc_set_receiver>:
 * \param p_rx_clk_opt Pointer to the receiver clock configuration structure.
 * \param p_rx_data_frame Pointer to the receiver data frame configuration structure.
 */
void ssc_set_receiver(Ssc *p_ssc, clock_opt_t *p_rx_clk_opt,
		data_frame_opt_t *p_rx_data_frame)
{
  403a18:	b4f0      	push	{r4, r5, r6, r7}
	if (p_rx_clk_opt == NULL) {
  403a1a:	2900      	cmp	r1, #0
  403a1c:	d02f      	beq.n	403a7e <ssc_set_receiver+0x66>
		p_ssc->SSC_RCMR = 0;
	} else {
		p_ssc->SSC_RCMR |= p_rx_clk_opt->ul_cks |
  403a1e:	6904      	ldr	r4, [r0, #16]
  403a20:	68cf      	ldr	r7, [r1, #12]
  403a22:	698e      	ldr	r6, [r1, #24]
  403a24:	e891 0028 	ldmia.w	r1, {r3, r5}
  403a28:	432b      	orrs	r3, r5
  403a2a:	688d      	ldr	r5, [r1, #8]
  403a2c:	4323      	orrs	r3, r4
				p_rx_clk_opt->ul_cko | p_rx_clk_opt->ul_cki |
				p_rx_clk_opt->ul_ckg |
				p_rx_clk_opt->ul_start_sel |
				SSC_RCMR_PERIOD(p_rx_clk_opt->ul_period) |
				SSC_RCMR_STTDLY(p_rx_clk_opt->ul_sttdly);
  403a2e:	694c      	ldr	r4, [r1, #20]
		p_ssc->SSC_RCMR |= p_rx_clk_opt->ul_cks |
  403a30:	432b      	orrs	r3, r5
				SSC_RCMR_PERIOD(p_rx_clk_opt->ul_period) |
  403a32:	690d      	ldr	r5, [r1, #16]
				SSC_RCMR_STTDLY(p_rx_clk_opt->ul_sttdly);
  403a34:	0421      	lsls	r1, r4, #16
		p_ssc->SSC_RCMR |= p_rx_clk_opt->ul_cks |
  403a36:	433b      	orrs	r3, r7
				SSC_RCMR_STTDLY(p_rx_clk_opt->ul_sttdly);
  403a38:	f401 017f 	and.w	r1, r1, #16711680	; 0xff0000
		p_ssc->SSC_RCMR |= p_rx_clk_opt->ul_cks |
  403a3c:	4333      	orrs	r3, r6
  403a3e:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
  403a42:	430b      	orrs	r3, r1
  403a44:	6103      	str	r3, [r0, #16]
	}

	if (p_rx_data_frame == NULL) {
  403a46:	b1ea      	cbz	r2, 403a84 <ssc_set_receiver+0x6c>
		p_ssc->SSC_RFMR = 0;
	} else {
		p_ssc->SSC_RFMR |= SSC_RFMR_DATLEN(p_rx_data_frame->ul_datlen) |
  403a48:	6954      	ldr	r4, [r2, #20]
  403a4a:	6853      	ldr	r3, [r2, #4]
  403a4c:	6991      	ldr	r1, [r2, #24]
  403a4e:	4323      	orrs	r3, r4
  403a50:	6946      	ldr	r6, [r0, #20]
  403a52:	6814      	ldr	r4, [r2, #0]
  403a54:	430b      	orrs	r3, r1
				p_rx_data_frame->ul_msbf |
				SSC_RFMR_DATNB(p_rx_data_frame->ul_datnb) |
  403a56:	6891      	ldr	r1, [r2, #8]
		p_ssc->SSC_RFMR |= SSC_RFMR_DATLEN(p_rx_data_frame->ul_datlen) |
  403a58:	f004 041f 	and.w	r4, r4, #31
				SSC_RFMR_FSLEN(p_rx_data_frame->ul_fslen) |
				SSC_RFMR_FSLEN_EXT(p_rx_data_frame->ul_fslen_ext) |
  403a5c:	6915      	ldr	r5, [r2, #16]
		p_ssc->SSC_RFMR |= SSC_RFMR_DATLEN(p_rx_data_frame->ul_datlen) |
  403a5e:	4333      	orrs	r3, r6
				SSC_RFMR_FSLEN(p_rx_data_frame->ul_fslen) |
  403a60:	68d2      	ldr	r2, [r2, #12]
				SSC_RFMR_DATNB(p_rx_data_frame->ul_datnb) |
  403a62:	0209      	lsls	r1, r1, #8
		p_ssc->SSC_RFMR |= SSC_RFMR_DATLEN(p_rx_data_frame->ul_datlen) |
  403a64:	4323      	orrs	r3, r4
				SSC_RFMR_FSLEN(p_rx_data_frame->ul_fslen) |
  403a66:	0412      	lsls	r2, r2, #16
				SSC_RFMR_DATNB(p_rx_data_frame->ul_datnb) |
  403a68:	f401 6170 	and.w	r1, r1, #3840	; 0xf00
		p_ssc->SSC_RFMR |= SSC_RFMR_DATLEN(p_rx_data_frame->ul_datlen) |
  403a6c:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
				SSC_RFMR_FSLEN(p_rx_data_frame->ul_fslen) |
  403a70:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
		p_ssc->SSC_RFMR |= SSC_RFMR_DATLEN(p_rx_data_frame->ul_datlen) |
  403a74:	430b      	orrs	r3, r1
  403a76:	4313      	orrs	r3, r2
				p_rx_data_frame->ul_fsos |
				p_rx_data_frame->ul_fsedge;
	}
}
  403a78:	bcf0      	pop	{r4, r5, r6, r7}
		p_ssc->SSC_RFMR |= SSC_RFMR_DATLEN(p_rx_data_frame->ul_datlen) |
  403a7a:	6143      	str	r3, [r0, #20]
}
  403a7c:	4770      	bx	lr
		p_ssc->SSC_RCMR = 0;
  403a7e:	6101      	str	r1, [r0, #16]
	if (p_rx_data_frame == NULL) {
  403a80:	2a00      	cmp	r2, #0
  403a82:	d1e1      	bne.n	403a48 <ssc_set_receiver+0x30>
		p_ssc->SSC_RFMR = 0;
  403a84:	6142      	str	r2, [r0, #20]
}
  403a86:	bcf0      	pop	{r4, r5, r6, r7}
  403a88:	4770      	bx	lr
  403a8a:	bf00      	nop

00403a8c <ssc_set_transmitter>:
 * \param p_tx_clk_opt Pointer to the transmitter clock configuration structure.
 * \param p_tx_data_frame Pointer to the transmitter data frame configuration structure.
 */
void ssc_set_transmitter(Ssc *p_ssc, clock_opt_t *p_tx_clk_opt,
		data_frame_opt_t *p_tx_data_frame)
{
  403a8c:	b4f0      	push	{r4, r5, r6, r7}
	if (p_tx_clk_opt == NULL) {
  403a8e:	2900      	cmp	r1, #0
  403a90:	d02f      	beq.n	403af2 <ssc_set_transmitter+0x66>
		p_ssc->SSC_TCMR = 0;
	} else {
		p_ssc->SSC_TCMR |= p_tx_clk_opt->ul_cks |
  403a92:	6984      	ldr	r4, [r0, #24]
  403a94:	68cf      	ldr	r7, [r1, #12]
  403a96:	698e      	ldr	r6, [r1, #24]
  403a98:	e891 0028 	ldmia.w	r1, {r3, r5}
  403a9c:	432b      	orrs	r3, r5
  403a9e:	688d      	ldr	r5, [r1, #8]
  403aa0:	4323      	orrs	r3, r4
				p_tx_clk_opt->ul_cko | p_tx_clk_opt->ul_cki |
				p_tx_clk_opt->ul_ckg |
				p_tx_clk_opt->ul_start_sel |
				SSC_TCMR_PERIOD(p_tx_clk_opt->ul_period) |
				SSC_TCMR_STTDLY(p_tx_clk_opt->ul_sttdly);
  403aa2:	694c      	ldr	r4, [r1, #20]
		p_ssc->SSC_TCMR |= p_tx_clk_opt->ul_cks |
  403aa4:	432b      	orrs	r3, r5
				SSC_TCMR_PERIOD(p_tx_clk_opt->ul_period) |
  403aa6:	690d      	ldr	r5, [r1, #16]
				SSC_TCMR_STTDLY(p_tx_clk_opt->ul_sttdly);
  403aa8:	0421      	lsls	r1, r4, #16
		p_ssc->SSC_TCMR |= p_tx_clk_opt->ul_cks |
  403aaa:	433b      	orrs	r3, r7
				SSC_TCMR_STTDLY(p_tx_clk_opt->ul_sttdly);
  403aac:	f401 017f 	and.w	r1, r1, #16711680	; 0xff0000
		p_ssc->SSC_TCMR |= p_tx_clk_opt->ul_cks |
  403ab0:	4333      	orrs	r3, r6
  403ab2:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
  403ab6:	430b      	orrs	r3, r1
  403ab8:	6183      	str	r3, [r0, #24]
	}

	if (p_tx_data_frame == NULL) {
  403aba:	b1ea      	cbz	r2, 403af8 <ssc_set_transmitter+0x6c>
		p_ssc->SSC_TFMR = 0;
	} else {
		p_ssc->SSC_TFMR |= SSC_RFMR_DATLEN(p_tx_data_frame->ul_datlen) |
  403abc:	6954      	ldr	r4, [r2, #20]
  403abe:	6853      	ldr	r3, [r2, #4]
  403ac0:	6991      	ldr	r1, [r2, #24]
  403ac2:	4323      	orrs	r3, r4
  403ac4:	69c6      	ldr	r6, [r0, #28]
  403ac6:	6814      	ldr	r4, [r2, #0]
  403ac8:	430b      	orrs	r3, r1
				p_tx_data_frame->ul_msbf |
				SSC_TFMR_DATNB(p_tx_data_frame->ul_datnb) |
  403aca:	6891      	ldr	r1, [r2, #8]
		p_ssc->SSC_TFMR |= SSC_RFMR_DATLEN(p_tx_data_frame->ul_datlen) |
  403acc:	f004 041f 	and.w	r4, r4, #31
				SSC_TFMR_FSLEN(p_tx_data_frame->ul_fslen) |
				SSC_TFMR_FSLEN_EXT(p_tx_data_frame->ul_fslen_ext) |
  403ad0:	6915      	ldr	r5, [r2, #16]
		p_ssc->SSC_TFMR |= SSC_RFMR_DATLEN(p_tx_data_frame->ul_datlen) |
  403ad2:	4333      	orrs	r3, r6
				SSC_TFMR_FSLEN(p_tx_data_frame->ul_fslen) |
  403ad4:	68d2      	ldr	r2, [r2, #12]
				SSC_TFMR_DATNB(p_tx_data_frame->ul_datnb) |
  403ad6:	0209      	lsls	r1, r1, #8
		p_ssc->SSC_TFMR |= SSC_RFMR_DATLEN(p_tx_data_frame->ul_datlen) |
  403ad8:	4323      	orrs	r3, r4
				SSC_TFMR_FSLEN(p_tx_data_frame->ul_fslen) |
  403ada:	0412      	lsls	r2, r2, #16
				SSC_TFMR_DATNB(p_tx_data_frame->ul_datnb) |
  403adc:	f401 6170 	and.w	r1, r1, #3840	; 0xf00
		p_ssc->SSC_TFMR |= SSC_RFMR_DATLEN(p_tx_data_frame->ul_datlen) |
  403ae0:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
				SSC_TFMR_FSLEN(p_tx_data_frame->ul_fslen) |
  403ae4:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
		p_ssc->SSC_TFMR |= SSC_RFMR_DATLEN(p_tx_data_frame->ul_datlen) |
  403ae8:	430b      	orrs	r3, r1
  403aea:	4313      	orrs	r3, r2
				p_tx_data_frame->ul_fsos |
				p_tx_data_frame->ul_fsedge;
	}
}
  403aec:	bcf0      	pop	{r4, r5, r6, r7}
		p_ssc->SSC_TFMR |= SSC_RFMR_DATLEN(p_tx_data_frame->ul_datlen) |
  403aee:	61c3      	str	r3, [r0, #28]
}
  403af0:	4770      	bx	lr
		p_ssc->SSC_TCMR = 0;
  403af2:	6181      	str	r1, [r0, #24]
	if (p_tx_data_frame == NULL) {
  403af4:	2a00      	cmp	r2, #0
  403af6:	d1e1      	bne.n	403abc <ssc_set_transmitter+0x30>
		p_ssc->SSC_TFMR = 0;
  403af8:	61c2      	str	r2, [r0, #28]
}
  403afa:	bcf0      	pop	{r4, r5, r6, r7}
  403afc:	4770      	bx	lr
  403afe:	bf00      	nop

00403b00 <ssc_disable_interrupt>:
 * \param p_ssc Pointer to an SSC instance.
 * \param ul_sources Interrupts to be enabled.
 */
void ssc_disable_interrupt(Ssc *p_ssc, uint32_t ul_sources)
{
	p_ssc->SSC_IDR = ul_sources;
  403b00:	6481      	str	r1, [r0, #72]	; 0x48
  403b02:	4770      	bx	lr

00403b04 <twihs_set_speed>:
	uint32_t ckdiv = 0;
	uint32_t c_lh_div;
	uint32_t cldiv, chdiv;

	/* High-Speed can be only used in slave mode, 400k is the max speed allowed for master */
	if (ul_speed > I2C_FAST_MODE_SPEED) {
  403b04:	4b2c      	ldr	r3, [pc, #176]	; (403bb8 <twihs_set_speed+0xb4>)
  403b06:	4299      	cmp	r1, r3
{
  403b08:	b430      	push	{r4, r5}
	if (ul_speed > I2C_FAST_MODE_SPEED) {
  403b0a:	d84d      	bhi.n	403ba8 <twihs_set_speed+0xa4>
		return FAIL;
	}

	/* Low level time not less than 1.3us of I2C Fast Mode. */
	if (ul_speed > LOW_LEVEL_TIME_LIMIT) {
  403b0c:	f5a3 537a 	sub.w	r3, r3, #16000	; 0x3e80
  403b10:	4299      	cmp	r1, r3
  403b12:	d92e      	bls.n	403b72 <twihs_set_speed+0x6e>
		/* Low level of time fixed for 1.3us. */
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  403b14:	4b29      	ldr	r3, [pc, #164]	; (403bbc <twihs_set_speed+0xb8>)
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  403b16:	4c2a      	ldr	r4, [pc, #168]	; (403bc0 <twihs_set_speed+0xbc>)
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  403b18:	440b      	add	r3, r1
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  403b1a:	fba4 1402 	umull	r1, r4, r4, r2
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  403b1e:	009b      	lsls	r3, r3, #2
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  403b20:	0ba4      	lsrs	r4, r4, #14
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  403b22:	fbb2 f2f3 	udiv	r2, r2, r3
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  403b26:	3c03      	subs	r4, #3
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  403b28:	3a03      	subs	r2, #3
		
		/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((cldiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  403b2a:	2cff      	cmp	r4, #255	; 0xff
  403b2c:	d940      	bls.n	403bb0 <twihs_set_speed+0xac>
  403b2e:	2100      	movs	r1, #0
  403b30:	e000      	b.n	403b34 <twihs_set_speed+0x30>
  403b32:	b13b      	cbz	r3, 403b44 <twihs_set_speed+0x40>
			/* Increase clock divider */
			ckdiv++;
  403b34:	3101      	adds	r1, #1
			/* Divide cldiv value */
			cldiv /= TWIHS_CLK_DIVIDER;
  403b36:	0864      	lsrs	r4, r4, #1
		while ((cldiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  403b38:	2906      	cmp	r1, #6
  403b3a:	bf8c      	ite	hi
  403b3c:	2300      	movhi	r3, #0
  403b3e:	2301      	movls	r3, #1
  403b40:	2cff      	cmp	r4, #255	; 0xff
  403b42:	d8f6      	bhi.n	403b32 <twihs_set_speed+0x2e>
		}
		/* chdiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((chdiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  403b44:	2aff      	cmp	r2, #255	; 0xff
  403b46:	d907      	bls.n	403b58 <twihs_set_speed+0x54>
  403b48:	b913      	cbnz	r3, 403b50 <twihs_set_speed+0x4c>
  403b4a:	e005      	b.n	403b58 <twihs_set_speed+0x54>
  403b4c:	2906      	cmp	r1, #6
  403b4e:	d803      	bhi.n	403b58 <twihs_set_speed+0x54>
			/* Increase clock divider */
			ckdiv++;
			/* Divide cldiv value */
			chdiv /= TWIHS_CLK_DIVIDER;
  403b50:	0852      	lsrs	r2, r2, #1
			ckdiv++;
  403b52:	3101      	adds	r1, #1
		while ((chdiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  403b54:	2aff      	cmp	r2, #255	; 0xff
  403b56:	d8f9      	bhi.n	403b4c <twihs_set_speed+0x48>
		}

		/* set clock waveform generator register */
		p_twihs->TWIHS_CWGR =
				TWIHS_CWGR_CLDIV(cldiv) | TWIHS_CWGR_CHDIV(chdiv) |
  403b58:	0213      	lsls	r3, r2, #8
		p_twihs->TWIHS_CWGR =
  403b5a:	2500      	movs	r5, #0
				TWIHS_CWGR_CKDIV(ckdiv);
  403b5c:	0409      	lsls	r1, r1, #16
				TWIHS_CWGR_CLDIV(cldiv) | TWIHS_CWGR_CHDIV(chdiv) |
  403b5e:	b29b      	uxth	r3, r3
				TWIHS_CWGR_CKDIV(ckdiv);
  403b60:	f401 21e0 	and.w	r1, r1, #458752	; 0x70000
				TWIHS_CWGR_CLDIV(cldiv) | TWIHS_CWGR_CHDIV(chdiv) |
  403b64:	b2e4      	uxtb	r4, r4
  403b66:	430b      	orrs	r3, r1
  403b68:	4323      	orrs	r3, r4
		p_twihs->TWIHS_CWGR =
  403b6a:	6103      	str	r3, [r0, #16]
				TWIHS_CWGR_CLDIV(c_lh_div) | TWIHS_CWGR_CHDIV(c_lh_div) |
				TWIHS_CWGR_CKDIV(ckdiv);
	}

	return PASS;
}
  403b6c:	4628      	mov	r0, r5
  403b6e:	bc30      	pop	{r4, r5}
  403b70:	4770      	bx	lr
		c_lh_div = ul_mck / (ul_speed * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  403b72:	0049      	lsls	r1, r1, #1
		while ((c_lh_div > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  403b74:	2300      	movs	r3, #0
		c_lh_div = ul_mck / (ul_speed * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  403b76:	fbb2 f2f1 	udiv	r2, r2, r1
  403b7a:	3a03      	subs	r2, #3
		while ((c_lh_div > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  403b7c:	2aff      	cmp	r2, #255	; 0xff
  403b7e:	d802      	bhi.n	403b86 <twihs_set_speed+0x82>
  403b80:	e008      	b.n	403b94 <twihs_set_speed+0x90>
  403b82:	2b06      	cmp	r3, #6
  403b84:	d803      	bhi.n	403b8e <twihs_set_speed+0x8a>
			c_lh_div /= TWIHS_CLK_DIVIDER;
  403b86:	0852      	lsrs	r2, r2, #1
			ckdiv++;
  403b88:	3301      	adds	r3, #1
		while ((c_lh_div > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  403b8a:	2aff      	cmp	r2, #255	; 0xff
  403b8c:	d8f9      	bhi.n	403b82 <twihs_set_speed+0x7e>
  403b8e:	041b      	lsls	r3, r3, #16
  403b90:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
				TWIHS_CWGR_CLDIV(c_lh_div) | TWIHS_CWGR_CHDIV(c_lh_div) |
  403b94:	0211      	lsls	r1, r2, #8
	return PASS;
  403b96:	2500      	movs	r5, #0
				TWIHS_CWGR_CLDIV(c_lh_div) | TWIHS_CWGR_CHDIV(c_lh_div) |
  403b98:	b2d2      	uxtb	r2, r2
  403b9a:	b289      	uxth	r1, r1
  403b9c:	431a      	orrs	r2, r3
  403b9e:	430a      	orrs	r2, r1
		p_twihs->TWIHS_CWGR =
  403ba0:	6102      	str	r2, [r0, #16]
}
  403ba2:	4628      	mov	r0, r5
  403ba4:	bc30      	pop	{r4, r5}
  403ba6:	4770      	bx	lr
		return FAIL;
  403ba8:	2501      	movs	r5, #1
}
  403baa:	4628      	mov	r0, r5
  403bac:	bc30      	pop	{r4, r5}
  403bae:	4770      	bx	lr
		while ((cldiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  403bb0:	2301      	movs	r3, #1
	uint32_t ckdiv = 0;
  403bb2:	2100      	movs	r1, #0
  403bb4:	e7c6      	b.n	403b44 <twihs_set_speed+0x40>
  403bb6:	bf00      	nop
  403bb8:	00061a80 	.word	0x00061a80
  403bbc:	3ffd1200 	.word	0x3ffd1200
  403bc0:	057619f1 	.word	0x057619f1

00403bc4 <twihs_master_init>:
{
  403bc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	p_twihs->TWIHS_CR = TWIHS_CR_MSEN;
  403bc6:	2204      	movs	r2, #4
	p_twihs->TWIHS_IDR = ~0UL;
  403bc8:	f04f 37ff 	mov.w	r7, #4294967295
 * \param p_twihs Pointer to a TWIHS instance.
 */
void twihs_reset(Twihs *p_twihs)
{
	/* Set SWRST bit to reset TWIHS peripheral */
	p_twihs->TWIHS_CR = TWIHS_CR_SWRST;
  403bcc:	2480      	movs	r4, #128	; 0x80
	p_twihs->TWIHS_CR = TWIHS_CR_MSDIS;
  403bce:	2608      	movs	r6, #8
	p_twihs->TWIHS_CR = TWIHS_CR_SVDIS;
  403bd0:	2520      	movs	r5, #32
	p_twihs->TWIHS_IDR = ~0UL;
  403bd2:	6287      	str	r7, [r0, #40]	; 0x28
	p_twihs->TWIHS_SR;
  403bd4:	6a07      	ldr	r7, [r0, #32]
	p_twihs->TWIHS_CR = TWIHS_CR_SWRST;
  403bd6:	6004      	str	r4, [r0, #0]
	if (twihs_set_speed(p_twihs, p_opt->speed, p_opt->master_clk) == FAIL) {
  403bd8:	4c06      	ldr	r4, [pc, #24]	; (403bf4 <twihs_master_init+0x30>)
	p_twihs->TWIHS_RHR;
  403bda:	6b07      	ldr	r7, [r0, #48]	; 0x30
	p_twihs->TWIHS_CR = TWIHS_CR_MSDIS;
  403bdc:	6006      	str	r6, [r0, #0]
	p_twihs->TWIHS_CR = TWIHS_CR_SVDIS;
  403bde:	6005      	str	r5, [r0, #0]
	p_twihs->TWIHS_CR = TWIHS_CR_MSEN;
  403be0:	6002      	str	r2, [r0, #0]
	if (twihs_set_speed(p_twihs, p_opt->speed, p_opt->master_clk) == FAIL) {
  403be2:	680a      	ldr	r2, [r1, #0]
  403be4:	6849      	ldr	r1, [r1, #4]
  403be6:	47a0      	blx	r4
}
  403be8:	f1a0 0001 	sub.w	r0, r0, #1
  403bec:	fab0 f080 	clz	r0, r0
  403bf0:	0940      	lsrs	r0, r0, #5
  403bf2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  403bf4:	00403b05 	.word	0x00403b05

00403bf8 <twihs_master_read>:
	uint32_t status, cnt = p_packet->length;
  403bf8:	68ca      	ldr	r2, [r1, #12]
	if (cnt == 0) {
  403bfa:	2a00      	cmp	r2, #0
  403bfc:	d049      	beq.n	403c92 <twihs_master_read+0x9a>
{
  403bfe:	b470      	push	{r4, r5, r6}
	p_twihs->TWIHS_MMR = 0;
  403c00:	2600      	movs	r6, #0
	uint8_t *buffer = p_packet->buffer;
  403c02:	688c      	ldr	r4, [r1, #8]
	p_twihs->TWIHS_MMR = 0;
  403c04:	6046      	str	r6, [r0, #4]
			((p_packet->addr_length << TWIHS_MMR_IADRSZ_Pos) &
  403c06:	684b      	ldr	r3, [r1, #4]
	p_twihs->TWIHS_MMR = TWIHS_MMR_MREAD | TWIHS_MMR_DADR(p_packet->chip) |
  403c08:	7c0d      	ldrb	r5, [r1, #16]
			((p_packet->addr_length << TWIHS_MMR_IADRSZ_Pos) &
  403c0a:	021b      	lsls	r3, r3, #8
	p_twihs->TWIHS_MMR = TWIHS_MMR_MREAD | TWIHS_MMR_DADR(p_packet->chip) |
  403c0c:	042d      	lsls	r5, r5, #16
			((p_packet->addr_length << TWIHS_MMR_IADRSZ_Pos) &
  403c0e:	f403 7340 	and.w	r3, r3, #768	; 0x300
	p_twihs->TWIHS_MMR = TWIHS_MMR_MREAD | TWIHS_MMR_DADR(p_packet->chip) |
  403c12:	f405 05fe 	and.w	r5, r5, #8323072	; 0x7f0000
  403c16:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
  403c1a:	432b      	orrs	r3, r5
  403c1c:	6043      	str	r3, [r0, #4]
	p_twihs->TWIHS_IADR = 0;
  403c1e:	60c6      	str	r6, [r0, #12]
	p_twihs->TWIHS_IADR = twihs_mk_addr(p_packet->addr, p_packet->addr_length);
  403c20:	684b      	ldr	r3, [r1, #4]
	if (len == 0)
  403c22:	b9bb      	cbnz	r3, 403c54 <twihs_master_read+0x5c>
		return 0;
  403c24:	461d      	mov	r5, r3
	p_twihs->TWIHS_CR = TWIHS_CR_START;
  403c26:	2301      	movs	r3, #1
	p_twihs->TWIHS_IADR = twihs_mk_addr(p_packet->addr, p_packet->addr_length);
  403c28:	60c5      	str	r5, [r0, #12]
			p_twihs->TWIHS_CR = TWIHS_CR_STOP;
  403c2a:	2502      	movs	r5, #2
	p_twihs->TWIHS_CR = TWIHS_CR_START;
  403c2c:	6003      	str	r3, [r0, #0]
		status = p_twihs->TWIHS_SR;
  403c2e:	6a03      	ldr	r3, [r0, #32]
		if (status & TWIHS_SR_NACK) {
  403c30:	05d9      	lsls	r1, r3, #23
  403c32:	d40c      	bmi.n	403c4e <twihs_master_read+0x56>
  403c34:	f247 5130 	movw	r1, #30000	; 0x7530
		if (cnt == 1) {
  403c38:	2a01      	cmp	r2, #1
  403c3a:	d01e      	beq.n	403c7a <twihs_master_read+0x82>
		if (!(status & TWIHS_SR_RXRDY)) {
  403c3c:	079e      	lsls	r6, r3, #30
  403c3e:	d515      	bpl.n	403c6c <twihs_master_read+0x74>
		*buffer++ = p_twihs->TWIHS_RHR;
  403c40:	6b03      	ldr	r3, [r0, #48]	; 0x30
		cnt--;
  403c42:	3a01      	subs	r2, #1
		*buffer++ = p_twihs->TWIHS_RHR;
  403c44:	f804 3b01 	strb.w	r3, [r4], #1
		status = p_twihs->TWIHS_SR;
  403c48:	6a03      	ldr	r3, [r0, #32]
		if (status & TWIHS_SR_NACK) {
  403c4a:	05d9      	lsls	r1, r3, #23
  403c4c:	d5f2      	bpl.n	403c34 <twihs_master_read+0x3c>
			return TWIHS_RECEIVE_NACK;
  403c4e:	2005      	movs	r0, #5
}
  403c50:	bc70      	pop	{r4, r5, r6}
  403c52:	4770      	bx	lr
	if (len > 1) {
  403c54:	2b01      	cmp	r3, #1
	val = addr[0];
  403c56:	780d      	ldrb	r5, [r1, #0]
	if (len > 1) {
  403c58:	dde5      	ble.n	403c26 <twihs_master_read+0x2e>
		val |= addr[1];
  403c5a:	784e      	ldrb	r6, [r1, #1]
	if (len > 2) {
  403c5c:	2b02      	cmp	r3, #2
		val |= addr[1];
  403c5e:	ea46 2505 	orr.w	r5, r6, r5, lsl #8
	if (len > 2) {
  403c62:	d0e0      	beq.n	403c26 <twihs_master_read+0x2e>
		val |= addr[2];
  403c64:	788b      	ldrb	r3, [r1, #2]
  403c66:	ea43 2505 	orr.w	r5, r3, r5, lsl #8
  403c6a:	e7dc      	b.n	403c26 <twihs_master_read+0x2e>
		status = p_twihs->TWIHS_SR;
  403c6c:	6a03      	ldr	r3, [r0, #32]
		if (status & TWIHS_SR_NACK) {
  403c6e:	05de      	lsls	r6, r3, #23
  403c70:	d4ed      	bmi.n	403c4e <twihs_master_read+0x56>
		if (!timeout--) {
  403c72:	3901      	subs	r1, #1
  403c74:	d1e0      	bne.n	403c38 <twihs_master_read+0x40>
			return TWIHS_ERROR_TIMEOUT;
  403c76:	2009      	movs	r0, #9
  403c78:	e7ea      	b.n	403c50 <twihs_master_read+0x58>
		if (!(status & TWIHS_SR_RXRDY)) {
  403c7a:	079b      	lsls	r3, r3, #30
			p_twihs->TWIHS_CR = TWIHS_CR_STOP;
  403c7c:	6005      	str	r5, [r0, #0]
		if (!(status & TWIHS_SR_RXRDY)) {
  403c7e:	d5f5      	bpl.n	403c6c <twihs_master_read+0x74>
		*buffer++ = p_twihs->TWIHS_RHR;
  403c80:	6b03      	ldr	r3, [r0, #48]	; 0x30
  403c82:	7023      	strb	r3, [r4, #0]
	while (!(p_twihs->TWIHS_SR & TWIHS_SR_TXCOMP)) {
  403c84:	6a03      	ldr	r3, [r0, #32]
  403c86:	07db      	lsls	r3, r3, #31
  403c88:	d5fc      	bpl.n	403c84 <twihs_master_read+0x8c>
	p_twihs->TWIHS_SR;
  403c8a:	6a03      	ldr	r3, [r0, #32]
	return TWIHS_SUCCESS;
  403c8c:	2000      	movs	r0, #0
}
  403c8e:	bc70      	pop	{r4, r5, r6}
  403c90:	4770      	bx	lr
		return TWIHS_INVALID_ARGUMENT;
  403c92:	2001      	movs	r0, #1
  403c94:	4770      	bx	lr
  403c96:	bf00      	nop

00403c98 <twihs_master_write>:
{
  403c98:	4603      	mov	r3, r0
	uint32_t status, cnt = p_packet->length;
  403c9a:	68c8      	ldr	r0, [r1, #12]
	if (cnt == 0) {
  403c9c:	2800      	cmp	r0, #0
  403c9e:	d034      	beq.n	403d0a <twihs_master_write+0x72>
{
  403ca0:	b470      	push	{r4, r5, r6}
	p_twihs->TWIHS_MMR = 0;
  403ca2:	2600      	movs	r6, #0
	uint8_t *buffer = p_packet->buffer;
  403ca4:	688c      	ldr	r4, [r1, #8]
	p_twihs->TWIHS_MMR = 0;
  403ca6:	605e      	str	r6, [r3, #4]
	p_twihs->TWIHS_MMR = TWIHS_MMR_DADR(p_packet->chip) |
  403ca8:	7c0a      	ldrb	r2, [r1, #16]
			((p_packet->addr_length << TWIHS_MMR_IADRSZ_Pos) &
  403caa:	684d      	ldr	r5, [r1, #4]
	p_twihs->TWIHS_MMR = TWIHS_MMR_DADR(p_packet->chip) |
  403cac:	0412      	lsls	r2, r2, #16
			((p_packet->addr_length << TWIHS_MMR_IADRSZ_Pos) &
  403cae:	022d      	lsls	r5, r5, #8
	p_twihs->TWIHS_MMR = TWIHS_MMR_DADR(p_packet->chip) |
  403cb0:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
			((p_packet->addr_length << TWIHS_MMR_IADRSZ_Pos) &
  403cb4:	f405 7540 	and.w	r5, r5, #768	; 0x300
	p_twihs->TWIHS_MMR = TWIHS_MMR_DADR(p_packet->chip) |
  403cb8:	432a      	orrs	r2, r5
  403cba:	605a      	str	r2, [r3, #4]
	p_twihs->TWIHS_IADR = 0;
  403cbc:	60de      	str	r6, [r3, #12]
	p_twihs->TWIHS_IADR = twihs_mk_addr(p_packet->addr, p_packet->addr_length);
  403cbe:	684a      	ldr	r2, [r1, #4]
	if (len == 0)
  403cc0:	b98a      	cbnz	r2, 403ce6 <twihs_master_write+0x4e>
		return 0;
  403cc2:	4615      	mov	r5, r2
	p_twihs->TWIHS_IADR = twihs_mk_addr(p_packet->addr, p_packet->addr_length);
  403cc4:	60dd      	str	r5, [r3, #12]
		status = p_twihs->TWIHS_SR;
  403cc6:	6a1a      	ldr	r2, [r3, #32]
		if (status & TWIHS_SR_NACK) {
  403cc8:	05d6      	lsls	r6, r2, #23
  403cca:	d409      	bmi.n	403ce0 <twihs_master_write+0x48>
		if (!(status & TWIHS_SR_TXRDY)) {
  403ccc:	0755      	lsls	r5, r2, #29
  403cce:	d5fa      	bpl.n	403cc6 <twihs_master_write+0x2e>
		p_twihs->TWIHS_THR = *buffer++;
  403cd0:	f814 2b01 	ldrb.w	r2, [r4], #1
	while (cnt > 0) {
  403cd4:	3801      	subs	r0, #1
		p_twihs->TWIHS_THR = *buffer++;
  403cd6:	635a      	str	r2, [r3, #52]	; 0x34
	while (cnt > 0) {
  403cd8:	d013      	beq.n	403d02 <twihs_master_write+0x6a>
		status = p_twihs->TWIHS_SR;
  403cda:	6a1a      	ldr	r2, [r3, #32]
		if (status & TWIHS_SR_NACK) {
  403cdc:	05d6      	lsls	r6, r2, #23
  403cde:	d5f5      	bpl.n	403ccc <twihs_master_write+0x34>
			return TWIHS_RECEIVE_NACK;
  403ce0:	2005      	movs	r0, #5
}
  403ce2:	bc70      	pop	{r4, r5, r6}
  403ce4:	4770      	bx	lr
	if (len > 1) {
  403ce6:	2a01      	cmp	r2, #1
	val = addr[0];
  403ce8:	780d      	ldrb	r5, [r1, #0]
	if (len > 1) {
  403cea:	ddeb      	ble.n	403cc4 <twihs_master_write+0x2c>
		val |= addr[1];
  403cec:	784e      	ldrb	r6, [r1, #1]
	if (len > 2) {
  403cee:	2a02      	cmp	r2, #2
		val |= addr[1];
  403cf0:	ea46 2505 	orr.w	r5, r6, r5, lsl #8
	if (len > 2) {
  403cf4:	d0e6      	beq.n	403cc4 <twihs_master_write+0x2c>
		val |= addr[2];
  403cf6:	788a      	ldrb	r2, [r1, #2]
  403cf8:	ea42 2505 	orr.w	r5, r2, r5, lsl #8
  403cfc:	e7e2      	b.n	403cc4 <twihs_master_write+0x2c>
		if (status & TWIHS_SR_TXRDY) {
  403cfe:	0751      	lsls	r1, r2, #29
  403d00:	d405      	bmi.n	403d0e <twihs_master_write+0x76>
		status = p_twihs->TWIHS_SR;
  403d02:	6a1a      	ldr	r2, [r3, #32]
		if (status & TWIHS_SR_NACK) {
  403d04:	05d4      	lsls	r4, r2, #23
  403d06:	d4eb      	bmi.n	403ce0 <twihs_master_write+0x48>
  403d08:	e7f9      	b.n	403cfe <twihs_master_write+0x66>
		return TWIHS_INVALID_ARGUMENT;
  403d0a:	2001      	movs	r0, #1
  403d0c:	4770      	bx	lr
	p_twihs->TWIHS_CR = TWIHS_CR_STOP;
  403d0e:	2202      	movs	r2, #2
  403d10:	601a      	str	r2, [r3, #0]
	while (!(p_twihs->TWIHS_SR & TWIHS_SR_TXCOMP)) {
  403d12:	6a1a      	ldr	r2, [r3, #32]
  403d14:	07d2      	lsls	r2, r2, #31
  403d16:	d5fc      	bpl.n	403d12 <twihs_master_write+0x7a>
}
  403d18:	bc70      	pop	{r4, r5, r6}
  403d1a:	4770      	bx	lr

00403d1c <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  403d1c:	6943      	ldr	r3, [r0, #20]
  403d1e:	079b      	lsls	r3, r3, #30
  403d20:	d502      	bpl.n	403d28 <uart_write+0xc>
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  403d22:	61c1      	str	r1, [r0, #28]
	return 0;
  403d24:	2000      	movs	r0, #0
  403d26:	4770      	bx	lr
		return 1;
  403d28:	2001      	movs	r0, #1
}
  403d2a:	4770      	bx	lr

00403d2c <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
  403d2c:	6943      	ldr	r3, [r0, #20]
  403d2e:	07db      	lsls	r3, r3, #31
  403d30:	d503      	bpl.n	403d3a <uart_read+0xe>
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
  403d32:	6983      	ldr	r3, [r0, #24]
	return 0;
  403d34:	2000      	movs	r0, #0
	*puc_data = (uint8_t) p_uart->UART_RHR;
  403d36:	700b      	strb	r3, [r1, #0]
	return 0;
  403d38:	4770      	bx	lr
		return 1;
  403d3a:	2001      	movs	r0, #1
}
  403d3c:	4770      	bx	lr
  403d3e:	bf00      	nop

00403d40 <usart_set_async_baudrate>:
	uint32_t cd_fp;
	uint32_t cd;
	uint32_t fp;

	/* Calculate the receiver sampling divide of baudrate clock. */
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
  403d40:	010b      	lsls	r3, r1, #4
  403d42:	4293      	cmp	r3, r2
{
  403d44:	b410      	push	{r4}
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
  403d46:	d814      	bhi.n	403d72 <usart_set_async_baudrate+0x32>
	} else {
		over = LOW_FRQ_SAMPLE_DIV;
	}

	/* Calculate clock divider according to the fraction calculated formula. */
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  403d48:	0859      	lsrs	r1, r3, #1
	cd = cd_fp >> 3;
	fp = cd_fp & 0x07;
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  403d4a:	f64f 74fe 	movw	r4, #65534	; 0xfffe
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  403d4e:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
  403d52:	fbb2 f2f3 	udiv	r2, r2, r3
	cd = cd_fp >> 3;
  403d56:	08d3      	lsrs	r3, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  403d58:	1e59      	subs	r1, r3, #1
  403d5a:	42a1      	cmp	r1, r4
  403d5c:	d815      	bhi.n	403d8a <usart_set_async_baudrate+0x4a>
	if (over == 8) {
		p_usart->US_MR |= US_MR_OVER;
	}

	/* Configure the baudrate generate register. */
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
  403d5e:	0412      	lsls	r2, r2, #16

	return 0;
  403d60:	2100      	movs	r1, #0
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
  403d62:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
  403d66:	431a      	orrs	r2, r3
  403d68:	6202      	str	r2, [r0, #32]
}
  403d6a:	4608      	mov	r0, r1
  403d6c:	f85d 4b04 	ldr.w	r4, [sp], #4
  403d70:	4770      	bx	lr
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  403d72:	00c9      	lsls	r1, r1, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  403d74:	f64f 74fe 	movw	r4, #65534	; 0xfffe
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  403d78:	084b      	lsrs	r3, r1, #1
  403d7a:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
  403d7e:	fbb2 f2f1 	udiv	r2, r2, r1
	cd = cd_fp >> 3;
  403d82:	08d3      	lsrs	r3, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  403d84:	1e59      	subs	r1, r3, #1
  403d86:	42a1      	cmp	r1, r4
  403d88:	d904      	bls.n	403d94 <usart_set_async_baudrate+0x54>
		return 1;
  403d8a:	2101      	movs	r1, #1
}
  403d8c:	f85d 4b04 	ldr.w	r4, [sp], #4
  403d90:	4608      	mov	r0, r1
  403d92:	4770      	bx	lr
		p_usart->US_MR |= US_MR_OVER;
  403d94:	6841      	ldr	r1, [r0, #4]
  403d96:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
  403d9a:	6041      	str	r1, [r0, #4]
  403d9c:	e7df      	b.n	403d5e <usart_set_async_baudrate+0x1e>
  403d9e:	bf00      	nop

00403da0 <usart_init_rs232>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_init_rs232(Usart *p_usart,
		const sam_usart_opt_t *p_usart_opt, uint32_t ul_mck)
{
  403da0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	p_usart->US_MR = 0;
  403da2:	2400      	movs	r4, #0
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
  403da4:	4d14      	ldr	r5, [pc, #80]	; (403df8 <usart_init_rs232+0x58>)
	p_usart->US_CR = US_CR_RSTSTA;
  403da6:	f44f 7680 	mov.w	r6, #256	; 0x100
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
  403daa:	f04f 0e88 	mov.w	lr, #136	; 0x88
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
  403dae:	2724      	movs	r7, #36	; 0x24
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
  403db0:	f8c0 50e4 	str.w	r5, [r0, #228]	; 0xe4
	p_usart->US_MR = 0;
  403db4:	6044      	str	r4, [r0, #4]
	p_usart->US_CR = US_CR_RTSDIS;
  403db6:	f44f 2500 	mov.w	r5, #524288	; 0x80000
	p_usart->US_RTOR = 0;
  403dba:	6244      	str	r4, [r0, #36]	; 0x24
	p_usart->US_TTGR = 0;
  403dbc:	6284      	str	r4, [r0, #40]	; 0x28
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
  403dbe:	f8c0 e000 	str.w	lr, [r0]
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
  403dc2:	6007      	str	r7, [r0, #0]
	p_usart->US_CR = US_CR_RSTSTA;
  403dc4:	6006      	str	r6, [r0, #0]
	ul_reg_val = 0;
  403dc6:	4e0d      	ldr	r6, [pc, #52]	; (403dfc <usart_init_rs232+0x5c>)
	p_usart->US_CR = US_CR_RTSDIS;
  403dc8:	6005      	str	r5, [r0, #0]
	ul_reg_val = 0;
  403dca:	6034      	str	r4, [r6, #0]
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
  403dcc:	b189      	cbz	r1, 403df2 <usart_init_rs232+0x52>
  403dce:	460d      	mov	r5, r1
  403dd0:	4b0b      	ldr	r3, [pc, #44]	; (403e00 <usart_init_rs232+0x60>)
  403dd2:	6809      	ldr	r1, [r1, #0]
  403dd4:	4604      	mov	r4, r0
  403dd6:	4798      	blx	r3
  403dd8:	b958      	cbnz	r0, 403df2 <usart_init_rs232+0x52>
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  403dda:	686a      	ldr	r2, [r5, #4]
  403ddc:	68ab      	ldr	r3, [r5, #8]
  403dde:	692f      	ldr	r7, [r5, #16]
  403de0:	4313      	orrs	r3, r2
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  403de2:	68e9      	ldr	r1, [r5, #12]
	p_usart->US_MR |= ul_reg_val;
  403de4:	6862      	ldr	r2, [r4, #4]
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  403de6:	433b      	orrs	r3, r7
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  403de8:	430b      	orrs	r3, r1
	p_usart->US_MR |= ul_reg_val;
  403dea:	431a      	orrs	r2, r3
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  403dec:	6033      	str	r3, [r6, #0]
	p_usart->US_MR |= ul_reg_val;
  403dee:	6062      	str	r2, [r4, #4]
}
  403df0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		return 1;
  403df2:	2001      	movs	r0, #1
  403df4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  403df6:	bf00      	nop
  403df8:	55534100 	.word	0x55534100
  403dfc:	2040bce8 	.word	0x2040bce8
  403e00:	00403d41 	.word	0x00403d41

00403e04 <usart_enable_tx>:
	p_usart->US_CR = US_CR_TXEN;
  403e04:	2340      	movs	r3, #64	; 0x40
  403e06:	6003      	str	r3, [r0, #0]
  403e08:	4770      	bx	lr
  403e0a:	bf00      	nop

00403e0c <usart_enable_rx>:
	p_usart->US_CR = US_CR_RXEN;
  403e0c:	2310      	movs	r3, #16
  403e0e:	6003      	str	r3, [r0, #0]
  403e10:	4770      	bx	lr
  403e12:	bf00      	nop

00403e14 <usart_write>:
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  403e14:	6942      	ldr	r2, [r0, #20]
{
  403e16:	4603      	mov	r3, r0
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  403e18:	0792      	lsls	r2, r2, #30
  403e1a:	d504      	bpl.n	403e26 <usart_write+0x12>
	p_usart->US_THR = US_THR_TXCHR(c);
  403e1c:	f3c1 0108 	ubfx	r1, r1, #0, #9
	return 0;
  403e20:	2000      	movs	r0, #0
	p_usart->US_THR = US_THR_TXCHR(c);
  403e22:	61d9      	str	r1, [r3, #28]
	return 0;
  403e24:	4770      	bx	lr
		return 1;
  403e26:	2001      	movs	r0, #1
}
  403e28:	4770      	bx	lr
  403e2a:	bf00      	nop

00403e2c <usart_read>:
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  403e2c:	6943      	ldr	r3, [r0, #20]
  403e2e:	07db      	lsls	r3, r3, #31
  403e30:	d505      	bpl.n	403e3e <usart_read+0x12>
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  403e32:	6983      	ldr	r3, [r0, #24]
	return 0;
  403e34:	2000      	movs	r0, #0
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  403e36:	f3c3 0308 	ubfx	r3, r3, #0, #9
  403e3a:	600b      	str	r3, [r1, #0]
	return 0;
  403e3c:	4770      	bx	lr
		return 1;
  403e3e:	2001      	movs	r0, #1
}
  403e40:	4770      	bx	lr
  403e42:	bf00      	nop

00403e44 <xdmac_configure_transfer>:
	return xdmac->XDMAC_CHID[channel_num].XDMAC_CIS;
  403e44:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	Assert(xdmac);
	Assert(channel_num < XDMACCHID_NUMBER);
	Assert(cfg);
	
	xdmac_channel_get_interrupt_status( xdmac, channel_num);
	xdmac_channel_set_source_addr(xdmac, channel_num, cfg->mbr_sa);
  403e48:	6853      	ldr	r3, [r2, #4]
  403e4a:	6dc8      	ldr	r0, [r1, #92]	; 0x5c
	xdmac->XDMAC_CHID[channel_num].XDMAC_CSA = src_addr;
  403e4c:	660b      	str	r3, [r1, #96]	; 0x60
	xdmac_channel_set_destination_addr(xdmac, channel_num, cfg->mbr_da);
  403e4e:	6893      	ldr	r3, [r2, #8]
	xdmac->XDMAC_CHID[channel_num].XDMAC_CDA = dst_addr;
  403e50:	664b      	str	r3, [r1, #100]	; 0x64
 */
static inline void xdmac_channel_set_microblock_control(Xdmac *xdmac, uint32_t channel_num, uint32_t ublen)
{
	Assert(xdmac);
	Assert(channel_num < XDMACCHID_NUMBER);
	xdmac->XDMAC_CHID[channel_num].XDMAC_CUBC = XDMAC_CUBC_UBLEN(ublen);
  403e52:	6813      	ldr	r3, [r2, #0]
  403e54:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
  403e58:	670b      	str	r3, [r1, #112]	; 0x70
 */
static inline void xdmac_channel_set_block_control(Xdmac *xdmac, uint32_t channel_num, uint32_t blen)
{
	Assert(xdmac);
	Assert(channel_num < XDMACCHID_NUMBER);
	xdmac->XDMAC_CHID[channel_num].XDMAC_CBC = XDMAC_CBC_BLEN(blen);
  403e5a:	6913      	ldr	r3, [r2, #16]
  403e5c:	f3c3 030b 	ubfx	r3, r3, #0, #12
  403e60:	674b      	str	r3, [r1, #116]	; 0x74
	xdmac_channel_set_microblock_control(xdmac, channel_num, cfg->mbr_ubc);
	xdmac_channel_set_block_control(xdmac, channel_num, cfg->mbr_bc);
	xdmac_channel_set_datastride_mempattern(xdmac, channel_num, cfg->mbr_ds);
  403e62:	6953      	ldr	r3, [r2, #20]
 */
static inline void xdmac_channel_set_datastride_mempattern(Xdmac *xdmac, uint32_t channel_num, uint32_t dds_msp)
{
	Assert(xdmac);
	Assert(channel_num < XDMACCHID_NUMBER);
	xdmac->XDMAC_CHID[channel_num].XDMAC_CDS_MSP = dds_msp;
  403e64:	67cb      	str	r3, [r1, #124]	; 0x7c
static inline void xdmac_channel_set_source_microblock_stride(Xdmac *xdmac,
		uint32_t channel_num, uint32_t subs)
{
	Assert(xdmac);
	Assert(channel_num < XDMACCHID_NUMBER);
	xdmac->XDMAC_CHID[channel_num].XDMAC_CSUS = XDMAC_CSUS_SUBS(subs);
  403e66:	6993      	ldr	r3, [r2, #24]
  403e68:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
  403e6c:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
static inline void xdmac_channel_set_destination_microblock_stride(Xdmac *xdmac,
		uint32_t channel_num, uint32_t dubs)
{
	Assert(xdmac);
	Assert(channel_num < XDMACCHID_NUMBER);
	xdmac->XDMAC_CHID[channel_num].XDMAC_CDUS = XDMAC_CDUS_DUBS(dubs);
  403e70:	69d3      	ldr	r3, [r2, #28]
  403e72:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
  403e76:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
	xdmac_channel_set_source_microblock_stride(xdmac, channel_num, cfg->mbr_sus);
	xdmac_channel_set_destination_microblock_stride(xdmac, channel_num, cfg->mbr_dus);
	xdmac_channel_set_config(xdmac, channel_num, cfg->mbr_cfg );
  403e7a:	68d3      	ldr	r3, [r2, #12]
	xdmac->XDMAC_CHID[channel_num].XDMAC_CC = config;
  403e7c:	678b      	str	r3, [r1, #120]	; 0x78
  403e7e:	4770      	bx	lr

00403e80 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  403e80:	b570      	push	{r4, r5, r6, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  403e82:	4810      	ldr	r0, [pc, #64]	; (403ec4 <sysclk_init+0x44>)
  403e84:	4d10      	ldr	r5, [pc, #64]	; (403ec8 <sysclk_init+0x48>)
  403e86:	47a8      	blx	r5
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  403e88:	213e      	movs	r1, #62	; 0x3e
  403e8a:	2000      	movs	r0, #0
  403e8c:	4b0f      	ldr	r3, [pc, #60]	; (403ecc <sysclk_init+0x4c>)
  403e8e:	4c10      	ldr	r4, [pc, #64]	; (403ed0 <sysclk_init+0x50>)
  403e90:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  403e92:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  403e94:	2800      	cmp	r0, #0
  403e96:	d0fc      	beq.n	403e92 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  403e98:	4b0e      	ldr	r3, [pc, #56]	; (403ed4 <sysclk_init+0x54>)
  403e9a:	4798      	blx	r3
  403e9c:	4c0e      	ldr	r4, [pc, #56]	; (403ed8 <sysclk_init+0x58>)
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  403e9e:	4b0f      	ldr	r3, [pc, #60]	; (403edc <sysclk_init+0x5c>)
  403ea0:	4a0f      	ldr	r2, [pc, #60]	; (403ee0 <sysclk_init+0x60>)
  403ea2:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  403ea4:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  403ea6:	2800      	cmp	r0, #0
  403ea8:	d0fc      	beq.n	403ea4 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  403eaa:	2002      	movs	r0, #2
  403eac:	4b0d      	ldr	r3, [pc, #52]	; (403ee4 <sysclk_init+0x64>)
  403eae:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  403eb0:	4b0d      	ldr	r3, [pc, #52]	; (403ee8 <sysclk_init+0x68>)
  403eb2:	2000      	movs	r0, #0
  403eb4:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  403eb6:	4b0d      	ldr	r3, [pc, #52]	; (403eec <sysclk_init+0x6c>)
  403eb8:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  403eba:	462b      	mov	r3, r5
  403ebc:	4801      	ldr	r0, [pc, #4]	; (403ec4 <sysclk_init+0x44>)

#if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
	/* Signal that the internal frequencies are setup */
	sysclk_initialized = 1;
#endif
}
  403ebe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	system_init_flash(sysclk_get_cpu_hz());
  403ec2:	4718      	bx	r3
  403ec4:	11e1a300 	.word	0x11e1a300
  403ec8:	00404939 	.word	0x00404939
  403ecc:	00404645 	.word	0x00404645
  403ed0:	00404699 	.word	0x00404699
  403ed4:	004046a9 	.word	0x004046a9
  403ed8:	004046b9 	.word	0x004046b9
  403edc:	400e0600 	.word	0x400e0600
  403ee0:	20183f01 	.word	0x20183f01
  403ee4:	004045c1 	.word	0x004045c1
  403ee8:	004045f1 	.word	0x004045f1
  403eec:	00404855 	.word	0x00404855

00403ef0 <board_init>:

void board_init(void)
{
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  403ef0:	4ba8      	ldr	r3, [pc, #672]	; (404194 <board_init+0x2a4>)
  403ef2:	f44f 4200 	mov.w	r2, #32768	; 0x8000
{
  403ef6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	WDT->WDT_MR = WDT_MR_WDDIS;
  403efa:	605a      	str	r2, [r3, #4]
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
  403efc:	f3bf 8f5f 	dmb	sy
		mpu_cal_mpu_region_size(ITCM_END_ADDRESS - ITCM_START_ADDRESS) |
  403f00:	f8df 8314 	ldr.w	r8, [pc, #788]	; 404218 <board_init+0x328>
	dw_region_attr =
  403f04:	4fa4      	ldr	r7, [pc, #656]	; (404198 <board_init+0x2a8>)
		mpu_cal_mpu_region_size(ITCM_END_ADDRESS - ITCM_START_ADDRESS) |
  403f06:	4da5      	ldr	r5, [pc, #660]	; (40419c <board_init+0x2ac>)
  403f08:	4640      	mov	r0, r8
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  403f0a:	4ca5      	ldr	r4, [pc, #660]	; (4041a0 <board_init+0x2b0>)
		mpu_cal_mpu_region_size(ITCM_END_ADDRESS - ITCM_START_ADDRESS) |
  403f0c:	47a8      	blx	r5
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  403f0e:	ea40 0107 	orr.w	r1, r0, r7
  403f12:	2011      	movs	r0, #17
  403f14:	47a0      	blx	r4
		mpu_cal_mpu_region_size(IFLASH_END_ADDRESS - IFLASH_START_ADDRESS) |
  403f16:	48a3      	ldr	r0, [pc, #652]	; (4041a4 <board_init+0x2b4>)
  403f18:	47a8      	blx	r5
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  403f1a:	49a3      	ldr	r1, [pc, #652]	; (4041a8 <board_init+0x2b8>)
	dw_region_attr =
  403f1c:	4ea3      	ldr	r6, [pc, #652]	; (4041ac <board_init+0x2bc>)
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  403f1e:	4301      	orrs	r1, r0
  403f20:	48a3      	ldr	r0, [pc, #652]	; (4041b0 <board_init+0x2c0>)
  403f22:	47a0      	blx	r4
		mpu_cal_mpu_region_size(DTCM_END_ADDRESS - DTCM_START_ADDRESS) |
  403f24:	4640      	mov	r0, r8
  403f26:	47a8      	blx	r5
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  403f28:	ea40 0107 	orr.w	r1, r0, r7
  403f2c:	48a1      	ldr	r0, [pc, #644]	; (4041b4 <board_init+0x2c4>)
  403f2e:	47a0      	blx	r4
		mpu_cal_mpu_region_size(SRAM_FIRST_END_ADDRESS - SRAM_FIRST_START_ADDRESS)
  403f30:	48a1      	ldr	r0, [pc, #644]	; (4041b8 <board_init+0x2c8>)
  403f32:	47a8      	blx	r5
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  403f34:	ea40 0106 	orr.w	r1, r0, r6
  403f38:	48a0      	ldr	r0, [pc, #640]	; (4041bc <board_init+0x2cc>)
  403f3a:	47a0      	blx	r4
		mpu_cal_mpu_region_size(SRAM_SECOND_END_ADDRESS - SRAM_SECOND_START_ADDRESS) |
  403f3c:	48a0      	ldr	r0, [pc, #640]	; (4041c0 <board_init+0x2d0>)
  403f3e:	47a8      	blx	r5
	dw_region_attr = MPU_AP_FULL_ACCESS |
  403f40:	4fa0      	ldr	r7, [pc, #640]	; (4041c4 <board_init+0x2d4>)
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  403f42:	ea40 0106 	orr.w	r1, r0, r6
  403f46:	48a0      	ldr	r0, [pc, #640]	; (4041c8 <board_init+0x2d8>)
  403f48:	47a0      	blx	r4
		mpu_cal_mpu_region_size(PERIPHERALS_END_ADDRESS - PERIPHERALS_START_ADDRESS)
  403f4a:	f06f 4060 	mvn.w	r0, #3758096384	; 0xe0000000
  403f4e:	47a8      	blx	r5
	dw_region_attr =
  403f50:	f8df 82c8 	ldr.w	r8, [pc, #712]	; 40421c <board_init+0x32c>
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  403f54:	ea40 0107 	orr.w	r1, r0, r7
  403f58:	489c      	ldr	r0, [pc, #624]	; (4041cc <board_init+0x2dc>)
  403f5a:	47a0      	blx	r4
		mpu_cal_mpu_region_size(EXT_EBI_END_ADDRESS - EXT_EBI_START_ADDRESS) |
  403f5c:	f06f 4070 	mvn.w	r0, #4026531840	; 0xf0000000
  403f60:	47a8      	blx	r5
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  403f62:	ea40 0108 	orr.w	r1, r0, r8
  403f66:	489a      	ldr	r0, [pc, #616]	; (4041d0 <board_init+0x2e0>)
  403f68:	47a0      	blx	r4
		mpu_cal_mpu_region_size(SDRAM_END_ADDRESS - SDRAM_START_ADDRESS) |
  403f6a:	f06f 4070 	mvn.w	r0, #4026531840	; 0xf0000000
  403f6e:	47a8      	blx	r5
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  403f70:	4998      	ldr	r1, [pc, #608]	; (4041d4 <board_init+0x2e4>)
	SCB->SHCSR |= (SCB_SHCSR_MEMFAULTENA_Msk | SCB_SHCSR_BUSFAULTENA_Msk
  403f72:	4e99      	ldr	r6, [pc, #612]	; (4041d8 <board_init+0x2e8>)
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  403f74:	4301      	orrs	r1, r0
  403f76:	4899      	ldr	r0, [pc, #612]	; (4041dc <board_init+0x2ec>)
  403f78:	47a0      	blx	r4
		mpu_cal_mpu_region_size(QSPI_END_ADDRESS - QSPI_START_ADDRESS) |
  403f7a:	f06f 4060 	mvn.w	r0, #3758096384	; 0xe0000000
  403f7e:	47a8      	blx	r5
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  403f80:	ea40 0108 	orr.w	r1, r0, r8
  403f84:	4896      	ldr	r0, [pc, #600]	; (4041e0 <board_init+0x2f0>)
  403f86:	47a0      	blx	r4
		mpu_cal_mpu_region_size(USBHSRAM_END_ADDRESS - USBHSRAM_START_ADDRESS) |
  403f88:	4896      	ldr	r0, [pc, #600]	; (4041e4 <board_init+0x2f4>)
  403f8a:	47a8      	blx	r5
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  403f8c:	ea40 0107 	orr.w	r1, r0, r7
  403f90:	4895      	ldr	r0, [pc, #596]	; (4041e8 <board_init+0x2f8>)
  403f92:	47a0      	blx	r4
	SCB->SHCSR |= (SCB_SHCSR_MEMFAULTENA_Msk | SCB_SHCSR_BUSFAULTENA_Msk
  403f94:	6a73      	ldr	r3, [r6, #36]	; 0x24
	mpu_enable( MPU_ENABLE | MPU_PRIVDEFENA);
  403f96:	2005      	movs	r0, #5
  403f98:	4a94      	ldr	r2, [pc, #592]	; (4041ec <board_init+0x2fc>)
	SCB->SHCSR |= (SCB_SHCSR_MEMFAULTENA_Msk | SCB_SHCSR_BUSFAULTENA_Msk
  403f9a:	f443 23e0 	orr.w	r3, r3, #458752	; 0x70000
  403f9e:	6273      	str	r3, [r6, #36]	; 0x24
	mpu_enable( MPU_ENABLE | MPU_PRIVDEFENA);
  403fa0:	4790      	blx	r2
  __ASM volatile ("dsb");
  403fa2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  403fa6:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  403faa:	4b91      	ldr	r3, [pc, #580]	; (4041f0 <board_init+0x300>)
  403fac:	4991      	ldr	r1, [pc, #580]	; (4041f4 <board_init+0x304>)
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  403fae:	4a92      	ldr	r2, [pc, #584]	; (4041f8 <board_init+0x308>)
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  403fb0:	6059      	str	r1, [r3, #4]
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  403fb2:	605a      	str	r2, [r3, #4]
  __ASM volatile ("dsb");
  403fb4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  403fb8:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  403fbc:	f8d6 3290 	ldr.w	r3, [r6, #656]	; 0x290
  403fc0:	f023 0301 	bic.w	r3, r3, #1
  403fc4:	f8c6 3290 	str.w	r3, [r6, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  403fc8:	f8d6 3294 	ldr.w	r3, [r6, #660]	; 0x294
  403fcc:	f023 0301 	bic.w	r3, r3, #1
  403fd0:	f8c6 3294 	str.w	r3, [r6, #660]	; 0x294
  __ASM volatile ("dsb");
  403fd4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  403fd8:	f3bf 8f6f 	isb	sy
  403fdc:	4c87      	ldr	r4, [pc, #540]	; (4041fc <board_init+0x30c>)
  403fde:	200a      	movs	r0, #10
  403fe0:	47a0      	blx	r4
  403fe2:	200b      	movs	r0, #11
  403fe4:	47a0      	blx	r4
  403fe6:	200c      	movs	r0, #12
  403fe8:	47a0      	blx	r4
  403fea:	2010      	movs	r0, #16
  403fec:	47a0      	blx	r4
  403fee:	2011      	movs	r0, #17
  403ff0:	47a0      	blx	r4
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  403ff2:	f44f 7500 	mov.w	r5, #512	; 0x200
  403ff6:	4c82      	ldr	r4, [pc, #520]	; (404200 <board_init+0x310>)
  403ff8:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
  403ffc:	4f81      	ldr	r7, [pc, #516]	; (404204 <board_init+0x314>)
		base->PIO_PUDR = mask;
  403ffe:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  404002:	6123      	str	r3, [r4, #16]
		base->PIO_PUDR = mask;
  404004:	2610      	movs	r6, #16
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  404006:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
		base->PIO_PUDR = mask;
  40400a:	f04f 0e08 	mov.w	lr, #8
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  40400e:	6323      	str	r3, [r4, #48]	; 0x30
	ioport_set_pin_mode(SD_MMC_0_CD_GPIO, SD_MMC_0_CD_FLAGS);
#endif

#ifdef CONF_BOARD_ILI9488
	/**LCD pin configure on EBI*/
	pio_configure(PIN_EBI_RESET_PIO, PIN_EBI_RESET_TYPE, PIN_EBI_RESET_MASK, PIN_EBI_RESET_ATTRI);
  404010:	4638      	mov	r0, r7
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  404012:	613d      	str	r5, [r7, #16]
  404014:	2300      	movs	r3, #0
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  404016:	f8c7 50a0 	str.w	r5, [r7, #160]	; 0xa0
  40401a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  40401e:	633d      	str	r5, [r7, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  404020:	6165      	str	r5, [r4, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  404022:	f8c4 50a0 	str.w	r5, [r4, #160]	; 0xa0
		base->PIO_PUER = mask;
  404026:	6665      	str	r5, [r4, #100]	; 0x64
		base->PIO_PPDDR = mask;
  404028:	f8c4 5090 	str.w	r5, [r4, #144]	; 0x90
		base->PIO_MDDR = mask;
  40402c:	6565      	str	r5, [r4, #84]	; 0x54
		base->PIO_IFER = mask;
  40402e:	6225      	str	r5, [r4, #32]
		base->PIO_IFSCER = mask;
  404030:	f8c4 5084 	str.w	r5, [r4, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  404034:	f8d4 c070 	ldr.w	ip, [r4, #112]	; 0x70
	MATRIX->CCFG_SYSIO |= CCFG_SYSIO_SYSIO4;
  404038:	f8df 81e4 	ldr.w	r8, [pc, #484]	; 404220 <board_init+0x330>
  40403c:	f42c 7c00 	bic.w	ip, ip, #512	; 0x200
  404040:	f8c4 c070 	str.w	ip, [r4, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  404044:	f8d4 c074 	ldr.w	ip, [r4, #116]	; 0x74
  404048:	f42c 7c00 	bic.w	ip, ip, #512	; 0x200
  40404c:	f8c4 c074 	str.w	ip, [r4, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  404050:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  404054:	f8c4 50d4 	str.w	r5, [r4, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  404058:	f8c4 50b0 	str.w	r5, [r4, #176]	; 0xb0
		base->PIO_PUDR = mask;
  40405c:	6621      	str	r1, [r4, #96]	; 0x60
		base->PIO_PPDDR = mask;
  40405e:	f8c4 1090 	str.w	r1, [r4, #144]	; 0x90
		base->PIO_MDDR = mask;
  404062:	6561      	str	r1, [r4, #84]	; 0x54
		base->PIO_IFDR = mask;
  404064:	6261      	str	r1, [r4, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  404066:	f8c4 1080 	str.w	r1, [r4, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  40406a:	f8d4 c070 	ldr.w	ip, [r4, #112]	; 0x70
  40406e:	f42c 1c00 	bic.w	ip, ip, #2097152	; 0x200000
  404072:	f8c4 c070 	str.w	ip, [r4, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  404076:	f8d4 c074 	ldr.w	ip, [r4, #116]	; 0x74
  40407a:	f42c 1c00 	bic.w	ip, ip, #2097152	; 0x200000
  40407e:	f8c4 c074 	str.w	ip, [r4, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  404082:	6061      	str	r1, [r4, #4]
  404084:	f8d8 1114 	ldr.w	r1, [r8, #276]	; 0x114
  404088:	ea41 0c06 	orr.w	ip, r1, r6
		base->PIO_PUDR = mask;
  40408c:	495e      	ldr	r1, [pc, #376]	; (404208 <board_init+0x318>)
  40408e:	f8c8 c114 	str.w	ip, [r8, #276]	; 0x114
  404092:	660e      	str	r6, [r1, #96]	; 0x60
		base->PIO_PPDDR = mask;
  404094:	f8c1 6090 	str.w	r6, [r1, #144]	; 0x90
		base->PIO_MDDR = mask;
  404098:	654e      	str	r6, [r1, #84]	; 0x54
		base->PIO_IFDR = mask;
  40409a:	624e      	str	r6, [r1, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  40409c:	f8c1 6080 	str.w	r6, [r1, #128]	; 0x80
		base->PIO_ABCDSR[0] |= mask;
  4040a0:	f8d1 c070 	ldr.w	ip, [r1, #112]	; 0x70
	pio_configure(PIN_EBI_RESET_PIO, PIN_EBI_RESET_TYPE, PIN_EBI_RESET_MASK, PIN_EBI_RESET_ATTRI);
  4040a4:	f8df 817c 	ldr.w	r8, [pc, #380]	; 404224 <board_init+0x334>
  4040a8:	ea4c 0c06 	orr.w	ip, ip, r6
  4040ac:	f8c1 c070 	str.w	ip, [r1, #112]	; 0x70
		base->PIO_ABCDSR[1] |= mask;
  4040b0:	f8d1 c074 	ldr.w	ip, [r1, #116]	; 0x74
  4040b4:	ea4c 0c06 	orr.w	ip, ip, r6
  4040b8:	f8c1 c074 	str.w	ip, [r1, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  4040bc:	604e      	str	r6, [r1, #4]
  4040be:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
		base->PIO_PUDR = mask;
  4040c2:	f8c4 e060 	str.w	lr, [r4, #96]	; 0x60
		base->PIO_PPDDR = mask;
  4040c6:	f8c4 e090 	str.w	lr, [r4, #144]	; 0x90
		base->PIO_MDDR = mask;
  4040ca:	f8c4 e054 	str.w	lr, [r4, #84]	; 0x54
		base->PIO_IFDR = mask;
  4040ce:	f8c4 e024 	str.w	lr, [r4, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  4040d2:	f8c4 e080 	str.w	lr, [r4, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  4040d6:	f8d4 c070 	ldr.w	ip, [r4, #112]	; 0x70
  4040da:	f02c 0c08 	bic.w	ip, ip, #8
  4040de:	f8c4 c070 	str.w	ip, [r4, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  4040e2:	f8d4 c074 	ldr.w	ip, [r4, #116]	; 0x74
  4040e6:	f02c 0c08 	bic.w	ip, ip, #8
  4040ea:	f8c4 c074 	str.w	ip, [r4, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  4040ee:	f8c4 e004 	str.w	lr, [r4, #4]
		base->PIO_PUDR = mask;
  4040f2:	6626      	str	r6, [r4, #96]	; 0x60
		base->PIO_PPDDR = mask;
  4040f4:	f8c4 6090 	str.w	r6, [r4, #144]	; 0x90
		base->PIO_MDDR = mask;
  4040f8:	6566      	str	r6, [r4, #84]	; 0x54
		base->PIO_IFDR = mask;
  4040fa:	6266      	str	r6, [r4, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  4040fc:	f8c4 6080 	str.w	r6, [r4, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  404100:	f8d4 e070 	ldr.w	lr, [r4, #112]	; 0x70
  404104:	f02e 0e10 	bic.w	lr, lr, #16
  404108:	f8c4 e070 	str.w	lr, [r4, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  40410c:	f8d4 e074 	ldr.w	lr, [r4, #116]	; 0x74
  404110:	f02e 0e10 	bic.w	lr, lr, #16
  404114:	f8c4 e074 	str.w	lr, [r4, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  404118:	6066      	str	r6, [r4, #4]
  40411a:	47c0      	blx	r8
	pio_configure(PIN_EBI_CDS_PIO, PIN_EBI_CDS_TYPE, PIN_EBI_CDS_MASK, PIN_EBI_CDS_ATTRI);
  40411c:	4638      	mov	r0, r7
  40411e:	2300      	movs	r3, #0
  404120:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  404124:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  404128:	47c0      	blx	r8
	pio_configure(PIN_EBI_DATAL_PIO, PIN_EBI_DATAL_TYPE, PIN_EBI_DATAL_MASK, PIN_EBI_DATAL_ATTRI);
  40412a:	4638      	mov	r0, r7
  40412c:	2301      	movs	r3, #1
  40412e:	22ff      	movs	r2, #255	; 0xff
  404130:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  404134:	47c0      	blx	r8
	pio_configure(PIN_EBI_DATAH_0_PIO, PIN_EBI_DATAH_0_TYPE, PIN_EBI_DATAH_0_MASK, PIN_EBI_DATAH_0_ATTRI);
  404136:	2301      	movs	r3, #1
  404138:	223f      	movs	r2, #63	; 0x3f
  40413a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40413e:	4833      	ldr	r0, [pc, #204]	; (40420c <board_init+0x31c>)
  404140:	47c0      	blx	r8
	pio_configure(PIN_EBI_DATAH_1_PIO, PIN_EBI_DATAH_1_TYPE, PIN_EBI_DATAH_1_MASK, PIN_EBI_DATAH_1_ATTRI);
  404142:	4620      	mov	r0, r4
  404144:	2301      	movs	r3, #1
  404146:	f44f 32c0 	mov.w	r2, #98304	; 0x18000
  40414a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40414e:	47c0      	blx	r8
	pio_configure(PIN_EBI_NWE_PIO, PIN_EBI_NWE_TYPE, PIN_EBI_NWE_MASK, PIN_EBI_NWE_ATTRI);
  404150:	4638      	mov	r0, r7
  404152:	2301      	movs	r3, #1
  404154:	f44f 7280 	mov.w	r2, #256	; 0x100
  404158:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40415c:	47c0      	blx	r8
	pio_configure(PIN_EBI_NRD_PIO, PIN_EBI_NRD_TYPE, PIN_EBI_NRD_MASK, PIN_EBI_NRD_ATTRI);
  40415e:	4638      	mov	r0, r7
  404160:	2301      	movs	r3, #1
  404162:	f44f 6200 	mov.w	r2, #2048	; 0x800
  404166:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40416a:	47c0      	blx	r8
	pio_configure(PIN_EBI_CS_PIO, PIN_EBI_CS_TYPE, PIN_EBI_CS_MASK, PIN_EBI_CS_ATTRI);
  40416c:	2301      	movs	r3, #1
  40416e:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  404172:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  404176:	4826      	ldr	r0, [pc, #152]	; (404210 <board_init+0x320>)
  404178:	47c0      	blx	r8
	pio_configure(PIN_EBI_BACKLIGHT_PIO, PIN_EBI_BACKLIGHT_TYPE, PIN_EBI_BACKLIGHT_MASK, PIN_EBI_BACKLIGHT_ATTRI);
  40417a:	462a      	mov	r2, r5
  40417c:	4638      	mov	r0, r7
  40417e:	2300      	movs	r3, #0
  404180:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  404184:	47c0      	blx	r8
	pio_set(PIN_EBI_BACKLIGHT_PIO, PIN_EBI_BACKLIGHT_MASK);
  404186:	4629      	mov	r1, r5
  404188:	4638      	mov	r0, r7
  40418a:	4b22      	ldr	r3, [pc, #136]	; (404214 <board_init+0x324>)
	pio_configure_pin(ISI_PCK_PIO, ISI_PCK_FLAGS);
	pio_configure_pin(ISI_PCK0_PIO, ISI_PCK0_FLAGS);
	pio_configure_pin(OV_PWD_GPIO, OV_PWD_FLAGS);
	pio_configure_pin(OV_RST_GPIO, OV_RST_FLAGS);
#endif
}
  40418c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
	pio_set(PIN_EBI_BACKLIGHT_PIO, PIN_EBI_BACKLIGHT_MASK);
  404190:	4718      	bx	r3
  404192:	bf00      	nop
  404194:	400e1850 	.word	0x400e1850
  404198:	01000001 	.word	0x01000001
  40419c:	00404241 	.word	0x00404241
  4041a0:	00404235 	.word	0x00404235
  4041a4:	001fffff 	.word	0x001fffff
  4041a8:	06230001 	.word	0x06230001
  4041ac:	03230001 	.word	0x03230001
  4041b0:	00400012 	.word	0x00400012
  4041b4:	20000013 	.word	0x20000013
  4041b8:	0003ffff 	.word	0x0003ffff
  4041bc:	20400014 	.word	0x20400014
  4041c0:	0001ffff 	.word	0x0001ffff
  4041c4:	13010001 	.word	0x13010001
  4041c8:	20440015 	.word	0x20440015
  4041cc:	40000016 	.word	0x40000016
  4041d0:	60000017 	.word	0x60000017
  4041d4:	03250001 	.word	0x03250001
  4041d8:	e000ed00 	.word	0xe000ed00
  4041dc:	70000018 	.word	0x70000018
  4041e0:	80000019 	.word	0x80000019
  4041e4:	000fffff 	.word	0x000fffff
  4041e8:	a010001a 	.word	0xa010001a
  4041ec:	00404229 	.word	0x00404229
  4041f0:	400e0c00 	.word	0x400e0c00
  4041f4:	5a00080c 	.word	0x5a00080c
  4041f8:	5a00070c 	.word	0x5a00070c
  4041fc:	004046c9 	.word	0x004046c9
  404200:	400e0e00 	.word	0x400e0e00
  404204:	400e1200 	.word	0x400e1200
  404208:	400e1000 	.word	0x400e1000
  40420c:	400e1600 	.word	0x400e1600
  404210:	400e1400 	.word	0x400e1400
  404214:	00404265 	.word	0x00404265
  404218:	003fffff 	.word	0x003fffff
  40421c:	03000001 	.word	0x03000001
  404220:	40088000 	.word	0x40088000
  404224:	00404305 	.word	0x00404305

00404228 <mpu_enable>:
 *
 * \param dwMPUEnable  Enable/Disable the memory region.
 */
void mpu_enable(uint32_t dw_mpu_enable)
{
	MPU->CTRL = dw_mpu_enable ;
  404228:	4b01      	ldr	r3, [pc, #4]	; (404230 <mpu_enable+0x8>)
  40422a:	6058      	str	r0, [r3, #4]
  40422c:	4770      	bx	lr
  40422e:	bf00      	nop
  404230:	e000ed90 	.word	0xe000ed90

00404234 <mpu_set_region>:
 * \param dwRegionBaseAddr  Memory region base address.
 * \param dwRegionAttr  Memory region attributes.
 */
void mpu_set_region(uint32_t dw_region_base_addr, uint32_t dw_region_attr)
{
	MPU->RBAR = dw_region_base_addr;
  404234:	4b01      	ldr	r3, [pc, #4]	; (40423c <mpu_set_region+0x8>)
  404236:	60d8      	str	r0, [r3, #12]
	MPU->RASR = dw_region_attr;
  404238:	6119      	str	r1, [r3, #16]
  40423a:	4770      	bx	lr
  40423c:	e000ed90 	.word	0xe000ed90

00404240 <mpu_cal_mpu_region_size>:
{
	uint32_t dwRegionSize = 32;
	uint32_t dwReturnValue = 4;

	while( dwReturnValue < 31 ) {
		if( dw_actual_size_in_bytes <= dwRegionSize ) {
  404240:	2820      	cmp	r0, #32
  404242:	d90d      	bls.n	404260 <mpu_cal_mpu_region_size+0x20>
  404244:	2240      	movs	r2, #64	; 0x40
  404246:	2305      	movs	r3, #5
  404248:	e002      	b.n	404250 <mpu_cal_mpu_region_size+0x10>
			break;
		} else {
			dwReturnValue++;
  40424a:	3301      	adds	r3, #1
	while( dwReturnValue < 31 ) {
  40424c:	2b1f      	cmp	r3, #31
  40424e:	d005      	beq.n	40425c <mpu_cal_mpu_region_size+0x1c>
		if( dw_actual_size_in_bytes <= dwRegionSize ) {
  404250:	4290      	cmp	r0, r2
		}
		dwRegionSize <<= 1;
  404252:	ea4f 0242 	mov.w	r2, r2, lsl #1
		if( dw_actual_size_in_bytes <= dwRegionSize ) {
  404256:	d8f8      	bhi.n	40424a <mpu_cal_mpu_region_size+0xa>
  404258:	0058      	lsls	r0, r3, #1
  40425a:	4770      	bx	lr
  40425c:	203e      	movs	r0, #62	; 0x3e
  40425e:	4770      	bx	lr
  404260:	2008      	movs	r0, #8
	}

	return ( dwReturnValue << 1 );
}
  404262:	4770      	bx	lr

00404264 <pio_set>:
  404264:	6301      	str	r1, [r0, #48]	; 0x30
  404266:	4770      	bx	lr

00404268 <pio_clear>:
  404268:	6341      	str	r1, [r0, #52]	; 0x34
  40426a:	4770      	bx	lr

0040426c <pio_set_peripheral>:

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  40426c:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
	p_pio->PIO_IDR = ul_mask;
  404270:	6442      	str	r2, [r0, #68]	; 0x44
	switch (ul_type) {
  404272:	d034      	beq.n	4042de <pio_set_peripheral+0x72>
  404274:	d810      	bhi.n	404298 <pio_set_peripheral+0x2c>
  404276:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  40427a:	d01c      	beq.n	4042b6 <pio_set_peripheral+0x4a>
  40427c:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  404280:	d12a      	bne.n	4042d8 <pio_set_peripheral+0x6c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  404282:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  404284:	4313      	orrs	r3, r2
  404286:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  404288:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  40428a:	6f41      	ldr	r1, [r0, #116]	; 0x74
  40428c:	400b      	ands	r3, r1
  40428e:	ea23 0302 	bic.w	r3, r3, r2
  404292:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  404294:	6042      	str	r2, [r0, #4]
  404296:	4770      	bx	lr
	switch (ul_type) {
  404298:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  40429c:	d01b      	beq.n	4042d6 <pio_set_peripheral+0x6a>
  40429e:	d829      	bhi.n	4042f4 <pio_set_peripheral+0x88>
  4042a0:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  4042a4:	d1f6      	bne.n	404294 <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  4042a6:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4042a8:	4313      	orrs	r3, r2
  4042aa:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  4042ac:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  4042ae:	4313      	orrs	r3, r2
  4042b0:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  4042b2:	6042      	str	r2, [r0, #4]
  4042b4:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  4042b6:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  4042b8:	43d3      	mvns	r3, r2
{
  4042ba:	b410      	push	{r4}
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  4042bc:	6f04      	ldr	r4, [r0, #112]	; 0x70
  4042be:	4021      	ands	r1, r4
  4042c0:	461c      	mov	r4, r3
  4042c2:	4019      	ands	r1, r3
  4042c4:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  4042c6:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4042c8:	6f41      	ldr	r1, [r0, #116]	; 0x74
  4042ca:	400b      	ands	r3, r1
  4042cc:	4023      	ands	r3, r4
}
  4042ce:	f85d 4b04 	ldr.w	r4, [sp], #4
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4042d2:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  4042d4:	6042      	str	r2, [r0, #4]
}
  4042d6:	4770      	bx	lr
	switch (ul_type) {
  4042d8:	2900      	cmp	r1, #0
  4042da:	d1db      	bne.n	404294 <pio_set_peripheral+0x28>
  4042dc:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  4042de:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  4042e0:	6f01      	ldr	r1, [r0, #112]	; 0x70
  4042e2:	400b      	ands	r3, r1
  4042e4:	ea23 0302 	bic.w	r3, r3, r2
  4042e8:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  4042ea:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  4042ec:	4313      	orrs	r3, r2
  4042ee:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  4042f0:	6042      	str	r2, [r0, #4]
  4042f2:	4770      	bx	lr
	switch (ul_type) {
  4042f4:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  4042f8:	d0ed      	beq.n	4042d6 <pio_set_peripheral+0x6a>
  4042fa:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  4042fe:	d0ea      	beq.n	4042d6 <pio_set_peripheral+0x6a>
  404300:	e7c8      	b.n	404294 <pio_set_peripheral+0x28>
  404302:	bf00      	nop

00404304 <pio_configure>:
 */
uint32_t pio_configure(Pio *p_pio, const pio_type_t ul_type,
		const uint32_t ul_mask, const uint32_t ul_attribute)
{
	/* Configure pins */
	switch (ul_type) {
  404304:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
{
  404308:	b570      	push	{r4, r5, r6, lr}
	switch (ul_type) {
  40430a:	d037      	beq.n	40437c <pio_configure+0x78>
  40430c:	d92d      	bls.n	40436a <pio_configure+0x66>
  40430e:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  404312:	d019      	beq.n	404348 <pio_configure+0x44>
  404314:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  404318:	d016      	beq.n	404348 <pio_configure+0x44>
  40431a:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  40431e:	d002      	beq.n	404326 <pio_configure+0x22>
				(ul_attribute & PIO_OPENDRAIN) ? 1 : 0,
				(ul_attribute & PIO_PULLUP) ? 1 : 0);
		break;

	default:
		return 0;
  404320:	2300      	movs	r3, #0
	}

	return 1;
}
  404322:	4618      	mov	r0, r3
  404324:	bd70      	pop	{r4, r5, r6, pc}
	if (ul_pull_up_enable) {
  404326:	07dd      	lsls	r5, r3, #31
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  404328:	6442      	str	r2, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  40432a:	d436      	bmi.n	40439a <pio_configure+0x96>
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  40432c:	f013 0f0a 	tst.w	r3, #10
		p_pio->PIO_PUDR = ul_mask;
  404330:	6602      	str	r2, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  404332:	d036      	beq.n	4043a2 <pio_configure+0x9e>
	if (ul_attribute & PIO_DEGLITCH) {
  404334:	079c      	lsls	r4, r3, #30
		p_pio->PIO_IFER = ul_mask;
  404336:	6202      	str	r2, [r0, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  404338:	d536      	bpl.n	4043a8 <pio_configure+0xa4>
		p_pio->PIO_IFSCDR = ul_mask;
  40433a:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
	return 1;
  40433e:	2301      	movs	r3, #1
	p_pio->PIO_ODR = ul_mask;
  404340:	6142      	str	r2, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  404342:	6002      	str	r2, [r0, #0]
}
  404344:	4618      	mov	r0, r3
  404346:	bd70      	pop	{r4, r5, r6, pc}
				(ul_attribute & PIO_OPENDRAIN) ? 1 : 0,
  404348:	f003 0404 	and.w	r4, r3, #4
	if (ul_pull_up_enable) {
  40434c:	07db      	lsls	r3, r3, #31
	p_pio->PIO_IDR = ul_mask;
  40434e:	6442      	str	r2, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  404350:	d51e      	bpl.n	404390 <pio_configure+0x8c>
		p_pio->PIO_PUER = ul_mask;
  404352:	6642      	str	r2, [r0, #100]	; 0x64
	if (ul_multidrive_enable) {
  404354:	b1fc      	cbz	r4, 404396 <pio_configure+0x92>
		p_pio->PIO_MDER = ul_mask;
  404356:	6502      	str	r2, [r0, #80]	; 0x50
	if (ul_default_level) {
  404358:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  40435c:	d02d      	beq.n	4043ba <pio_configure+0xb6>
		p_pio->PIO_CODR = ul_mask;
  40435e:	6342      	str	r2, [r0, #52]	; 0x34
	return 1;
  404360:	2301      	movs	r3, #1
	p_pio->PIO_OER = ul_mask;
  404362:	6102      	str	r2, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  404364:	6002      	str	r2, [r0, #0]
}
  404366:	4618      	mov	r0, r3
  404368:	bd70      	pop	{r4, r5, r6, pc}
	switch (ul_type) {
  40436a:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  40436e:	d005      	beq.n	40437c <pio_configure+0x78>
  404370:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  404374:	d002      	beq.n	40437c <pio_configure+0x78>
  404376:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  40437a:	d1d1      	bne.n	404320 <pio_configure+0x1c>
  40437c:	461e      	mov	r6, r3
		pio_set_peripheral(p_pio, ul_type, ul_mask);
  40437e:	4b10      	ldr	r3, [pc, #64]	; (4043c0 <pio_configure+0xbc>)
  404380:	4604      	mov	r4, r0
  404382:	4798      	blx	r3
	if (ul_pull_up_enable) {
  404384:	07f6      	lsls	r6, r6, #31
  404386:	d514      	bpl.n	4043b2 <pio_configure+0xae>
	return 1;
  404388:	2301      	movs	r3, #1
		p_pio->PIO_PUER = ul_mask;
  40438a:	6662      	str	r2, [r4, #100]	; 0x64
}
  40438c:	4618      	mov	r0, r3
  40438e:	bd70      	pop	{r4, r5, r6, pc}
		p_pio->PIO_PUDR = ul_mask;
  404390:	6602      	str	r2, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  404392:	2c00      	cmp	r4, #0
  404394:	d1df      	bne.n	404356 <pio_configure+0x52>
		p_pio->PIO_MDDR = ul_mask;
  404396:	6542      	str	r2, [r0, #84]	; 0x54
  404398:	e7de      	b.n	404358 <pio_configure+0x54>
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  40439a:	f013 0f0a 	tst.w	r3, #10
		p_pio->PIO_PUER = ul_mask;
  40439e:	6642      	str	r2, [r0, #100]	; 0x64
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  4043a0:	d1c8      	bne.n	404334 <pio_configure+0x30>
	if (ul_attribute & PIO_DEGLITCH) {
  4043a2:	079c      	lsls	r4, r3, #30
		p_pio->PIO_IFDR = ul_mask;
  4043a4:	6242      	str	r2, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
  4043a6:	d4c8      	bmi.n	40433a <pio_configure+0x36>
		if (ul_attribute & PIO_DEBOUNCE) {
  4043a8:	0719      	lsls	r1, r3, #28
  4043aa:	d5c8      	bpl.n	40433e <pio_configure+0x3a>
			p_pio->PIO_IFSCER = ul_mask;
  4043ac:	f8c0 2084 	str.w	r2, [r0, #132]	; 0x84
  4043b0:	e7c5      	b.n	40433e <pio_configure+0x3a>
	return 1;
  4043b2:	2301      	movs	r3, #1
		p_pio->PIO_PUDR = ul_mask;
  4043b4:	6622      	str	r2, [r4, #96]	; 0x60
}
  4043b6:	4618      	mov	r0, r3
  4043b8:	bd70      	pop	{r4, r5, r6, pc}
		p_pio->PIO_SODR = ul_mask;
  4043ba:	6302      	str	r2, [r0, #48]	; 0x30
  4043bc:	e7d0      	b.n	404360 <pio_configure+0x5c>
  4043be:	bf00      	nop
  4043c0:	0040426d 	.word	0x0040426d

004043c4 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  4043c4:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  4043c6:	4770      	bx	lr

004043c8 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  4043c8:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  4043ca:	4770      	bx	lr

004043cc <pio_configure_pin>:
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  4043cc:	4b53      	ldr	r3, [pc, #332]	; (40451c <pio_configure_pin+0x150>)
	switch (ul_flags & PIO_TYPE_Msk) {
  4043ce:	f001 42f0 	and.w	r2, r1, #2013265920	; 0x78000000
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  4043d2:	eb03 1350 	add.w	r3, r3, r0, lsr #5
	switch (ul_flags & PIO_TYPE_Msk) {
  4043d6:	f1b2 5f00 	cmp.w	r2, #536870912	; 0x20000000
{
  4043da:	b470      	push	{r4, r5, r6}
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  4043dc:	ea4f 2343 	mov.w	r3, r3, lsl #9
	switch (ul_flags & PIO_TYPE_Msk) {
  4043e0:	d06d      	beq.n	4044be <pio_configure_pin+0xf2>
  4043e2:	d80b      	bhi.n	4043fc <pio_configure_pin+0x30>
  4043e4:	f1b2 5f80 	cmp.w	r2, #268435456	; 0x10000000
  4043e8:	d027      	beq.n	40443a <pio_configure_pin+0x6e>
  4043ea:	f1b2 5fc0 	cmp.w	r2, #402653184	; 0x18000000
  4043ee:	d052      	beq.n	404496 <pio_configure_pin+0xca>
  4043f0:	f1b2 6f00 	cmp.w	r2, #134217728	; 0x8000000
  4043f4:	d038      	beq.n	404468 <pio_configure_pin+0x9c>
		return 0;
  4043f6:	2000      	movs	r0, #0
}
  4043f8:	bc70      	pop	{r4, r5, r6}
  4043fa:	4770      	bx	lr
	switch (ul_flags & PIO_TYPE_Msk) {
  4043fc:	f1b2 5f40 	cmp.w	r2, #805306368	; 0x30000000
  404400:	d066      	beq.n	4044d0 <pio_configure_pin+0x104>
  404402:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  404406:	d063      	beq.n	4044d0 <pio_configure_pin+0x104>
  404408:	f1b2 5f20 	cmp.w	r2, #671088640	; 0x28000000
  40440c:	d1f3      	bne.n	4043f6 <pio_configure_pin+0x2a>
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  40440e:	f000 001f 	and.w	r0, r0, #31
  404412:	2201      	movs	r2, #1
	if (ul_pull_up_enable) {
  404414:	07cd      	lsls	r5, r1, #31
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  404416:	fa02 f200 	lsl.w	r2, r2, r0
	p_pio->PIO_IDR = ul_mask;
  40441a:	645a      	str	r2, [r3, #68]	; 0x44
	if (ul_pull_up_enable) {
  40441c:	d573      	bpl.n	404506 <pio_configure_pin+0x13a>
		p_pio->PIO_PUER = ul_mask;
  40441e:	665a      	str	r2, [r3, #100]	; 0x64
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  404420:	f011 0f0a 	tst.w	r1, #10
  404424:	d06d      	beq.n	404502 <pio_configure_pin+0x136>
		p_pio->PIO_IFER = ul_mask;
  404426:	621a      	str	r2, [r3, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  404428:	078c      	lsls	r4, r1, #30
  40442a:	d56e      	bpl.n	40450a <pio_configure_pin+0x13e>
		p_pio->PIO_IFSCDR = ul_mask;
  40442c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  404430:	615a      	str	r2, [r3, #20]
	return 1;
  404432:	2001      	movs	r0, #1
	p_pio->PIO_PER = ul_mask;
  404434:	601a      	str	r2, [r3, #0]
}
  404436:	bc70      	pop	{r4, r5, r6}
  404438:	4770      	bx	lr
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  40443a:	f000 021f 	and.w	r2, r0, #31
  40443e:	2001      	movs	r0, #1
	if (ul_pull_up_enable) {
  404440:	07c9      	lsls	r1, r1, #31
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  404442:	fa00 f202 	lsl.w	r2, r0, r2
	p_pio->PIO_IDR = ul_mask;
  404446:	645a      	str	r2, [r3, #68]	; 0x44
		ul_sr = p_pio->PIO_ABCDSR[0];
  404448:	6f1c      	ldr	r4, [r3, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  40444a:	ea44 0402 	orr.w	r4, r4, r2
  40444e:	671c      	str	r4, [r3, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  404450:	6f5c      	ldr	r4, [r3, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  404452:	6f5d      	ldr	r5, [r3, #116]	; 0x74
  404454:	ea04 0405 	and.w	r4, r4, r5
  404458:	ea24 0402 	bic.w	r4, r4, r2
  40445c:	675c      	str	r4, [r3, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  40445e:	605a      	str	r2, [r3, #4]
	if (ul_pull_up_enable) {
  404460:	d516      	bpl.n	404490 <pio_configure_pin+0xc4>
		p_pio->PIO_PUER = ul_mask;
  404462:	665a      	str	r2, [r3, #100]	; 0x64
}
  404464:	bc70      	pop	{r4, r5, r6}
  404466:	4770      	bx	lr
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  404468:	f000 021f 	and.w	r2, r0, #31
  40446c:	2001      	movs	r0, #1
  40446e:	fa00 f202 	lsl.w	r2, r0, r2
	p_pio->PIO_IDR = ul_mask;
  404472:	645a      	str	r2, [r3, #68]	; 0x44
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  404474:	43d6      	mvns	r6, r2
		ul_sr = p_pio->PIO_ABCDSR[0];
  404476:	6f1d      	ldr	r5, [r3, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  404478:	6f1c      	ldr	r4, [r3, #112]	; 0x70
  40447a:	4025      	ands	r5, r4
  40447c:	4035      	ands	r5, r6
  40447e:	671d      	str	r5, [r3, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  404480:	6f5c      	ldr	r4, [r3, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  404482:	6f5d      	ldr	r5, [r3, #116]	; 0x74
  404484:	402c      	ands	r4, r5
  404486:	4034      	ands	r4, r6
  404488:	675c      	str	r4, [r3, #116]	; 0x74
	if (ul_pull_up_enable) {
  40448a:	07cc      	lsls	r4, r1, #31
	p_pio->PIO_PDR = ul_mask;
  40448c:	605a      	str	r2, [r3, #4]
	if (ul_pull_up_enable) {
  40448e:	d4e8      	bmi.n	404462 <pio_configure_pin+0x96>
		p_pio->PIO_PUDR = ul_mask;
  404490:	661a      	str	r2, [r3, #96]	; 0x60
}
  404492:	bc70      	pop	{r4, r5, r6}
  404494:	4770      	bx	lr
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  404496:	f000 021f 	and.w	r2, r0, #31
  40449a:	2001      	movs	r0, #1
  40449c:	fa00 f202 	lsl.w	r2, r0, r2
	p_pio->PIO_IDR = ul_mask;
  4044a0:	645a      	str	r2, [r3, #68]	; 0x44
		ul_sr = p_pio->PIO_ABCDSR[0];
  4044a2:	6f1c      	ldr	r4, [r3, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  4044a4:	6f1d      	ldr	r5, [r3, #112]	; 0x70
  4044a6:	402c      	ands	r4, r5
  4044a8:	ea24 0402 	bic.w	r4, r4, r2
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4044ac:	671c      	str	r4, [r3, #112]	; 0x70
	if (ul_pull_up_enable) {
  4044ae:	07ce      	lsls	r6, r1, #31
		ul_sr = p_pio->PIO_ABCDSR[1];
  4044b0:	6f5c      	ldr	r4, [r3, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  4044b2:	ea44 0402 	orr.w	r4, r4, r2
  4044b6:	675c      	str	r4, [r3, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  4044b8:	605a      	str	r2, [r3, #4]
	if (ul_pull_up_enable) {
  4044ba:	d5e9      	bpl.n	404490 <pio_configure_pin+0xc4>
  4044bc:	e7d1      	b.n	404462 <pio_configure_pin+0x96>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  4044be:	f000 021f 	and.w	r2, r0, #31
  4044c2:	2001      	movs	r0, #1
  4044c4:	fa00 f202 	lsl.w	r2, r0, r2
	p_pio->PIO_IDR = ul_mask;
  4044c8:	645a      	str	r2, [r3, #68]	; 0x44
		ul_sr = p_pio->PIO_ABCDSR[0];
  4044ca:	6f1c      	ldr	r4, [r3, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4044cc:	4314      	orrs	r4, r2
  4044ce:	e7ed      	b.n	4044ac <pio_configure_pin+0xe0>
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  4044d0:	f000 001f 	and.w	r0, r0, #31
  4044d4:	2201      	movs	r2, #1
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  4044d6:	f001 5460 	and.w	r4, r1, #939524096	; 0x38000000
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
  4044da:	f001 0504 	and.w	r5, r1, #4
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  4044de:	4082      	lsls	r2, r0
	if (ul_pull_up_enable) {
  4044e0:	07c9      	lsls	r1, r1, #31
	p_pio->PIO_IDR = ul_mask;
  4044e2:	645a      	str	r2, [r3, #68]	; 0x44
	if (ul_pull_up_enable) {
  4044e4:	d50b      	bpl.n	4044fe <pio_configure_pin+0x132>
		p_pio->PIO_PUER = ul_mask;
  4044e6:	665a      	str	r2, [r3, #100]	; 0x64
	if (ul_multidrive_enable) {
  4044e8:	b1a5      	cbz	r5, 404514 <pio_configure_pin+0x148>
		p_pio->PIO_MDER = ul_mask;
  4044ea:	651a      	str	r2, [r3, #80]	; 0x50
	if (ul_default_level) {
  4044ec:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
  4044f0:	d012      	beq.n	404518 <pio_configure_pin+0x14c>
		p_pio->PIO_CODR = ul_mask;
  4044f2:	635a      	str	r2, [r3, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  4044f4:	611a      	str	r2, [r3, #16]
	return 1;
  4044f6:	2001      	movs	r0, #1
	p_pio->PIO_PER = ul_mask;
  4044f8:	601a      	str	r2, [r3, #0]
}
  4044fa:	bc70      	pop	{r4, r5, r6}
  4044fc:	4770      	bx	lr
		p_pio->PIO_PUDR = ul_mask;
  4044fe:	661a      	str	r2, [r3, #96]	; 0x60
  404500:	e7f2      	b.n	4044e8 <pio_configure_pin+0x11c>
		p_pio->PIO_IFDR = ul_mask;
  404502:	625a      	str	r2, [r3, #36]	; 0x24
  404504:	e790      	b.n	404428 <pio_configure_pin+0x5c>
		p_pio->PIO_PUDR = ul_mask;
  404506:	661a      	str	r2, [r3, #96]	; 0x60
  404508:	e78a      	b.n	404420 <pio_configure_pin+0x54>
		if (ul_attribute & PIO_DEBOUNCE) {
  40450a:	0708      	lsls	r0, r1, #28
  40450c:	d590      	bpl.n	404430 <pio_configure_pin+0x64>
			p_pio->PIO_IFSCER = ul_mask;
  40450e:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  404512:	e78d      	b.n	404430 <pio_configure_pin+0x64>
		p_pio->PIO_MDDR = ul_mask;
  404514:	655a      	str	r2, [r3, #84]	; 0x54
  404516:	e7e9      	b.n	4044ec <pio_configure_pin+0x120>
		p_pio->PIO_SODR = ul_mask;
  404518:	631a      	str	r2, [r3, #48]	; 0x30
  40451a:	e7eb      	b.n	4044f4 <pio_configure_pin+0x128>
  40451c:	00200707 	.word	0x00200707

00404520 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  404520:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  404522:	4604      	mov	r4, r0
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  404524:	4b0f      	ldr	r3, [pc, #60]	; (404564 <pio_handler_process+0x44>)
{
  404526:	460f      	mov	r7, r1
	status = pio_get_interrupt_status(p_pio);
  404528:	4798      	blx	r3
  40452a:	4606      	mov	r6, r0
	status &= pio_get_interrupt_mask(p_pio);
  40452c:	4b0e      	ldr	r3, [pc, #56]	; (404568 <pio_handler_process+0x48>)
  40452e:	4620      	mov	r0, r4
  404530:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  404532:	4006      	ands	r6, r0
  404534:	d015      	beq.n	404562 <pio_handler_process+0x42>
  404536:	4c0d      	ldr	r4, [pc, #52]	; (40456c <pio_handler_process+0x4c>)
  404538:	2500      	movs	r5, #0
  40453a:	e004      	b.n	404546 <pio_handler_process+0x26>
		/* Find triggering source */
		i = 0;
		while (status != 0) {
  40453c:	2d07      	cmp	r5, #7
  40453e:	f104 0410 	add.w	r4, r4, #16
  404542:	d00e      	beq.n	404562 <pio_handler_process+0x42>
  404544:	b16e      	cbz	r6, 404562 <pio_handler_process+0x42>
			/* Source is configured on the same controller */
			if (gs_interrupt_sources[i].id == ul_id) {
  404546:	6823      	ldr	r3, [r4, #0]
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
  404548:	3501      	adds	r5, #1
			if (gs_interrupt_sources[i].id == ul_id) {
  40454a:	42bb      	cmp	r3, r7
  40454c:	d1f6      	bne.n	40453c <pio_handler_process+0x1c>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  40454e:	6861      	ldr	r1, [r4, #4]
  404550:	4231      	tst	r1, r6
  404552:	d0f3      	beq.n	40453c <pio_handler_process+0x1c>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  404554:	68e3      	ldr	r3, [r4, #12]
  404556:	4638      	mov	r0, r7
  404558:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  40455a:	6863      	ldr	r3, [r4, #4]
  40455c:	ea26 0603 	bic.w	r6, r6, r3
  404560:	e7ec      	b.n	40453c <pio_handler_process+0x1c>
  404562:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404564:	004043c5 	.word	0x004043c5
  404568:	004043c9 	.word	0x004043c9
  40456c:	2040bcec 	.word	0x2040bcec

00404570 <PIOA_Handler>:
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
	pio_handler_process(PIOA, ID_PIOA);
  404570:	210a      	movs	r1, #10
  404572:	4801      	ldr	r0, [pc, #4]	; (404578 <PIOA_Handler+0x8>)
  404574:	4b01      	ldr	r3, [pc, #4]	; (40457c <PIOA_Handler+0xc>)
  404576:	4718      	bx	r3
  404578:	400e0e00 	.word	0x400e0e00
  40457c:	00404521 	.word	0x00404521

00404580 <PIOB_Handler>:
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
    pio_handler_process(PIOB, ID_PIOB);
  404580:	210b      	movs	r1, #11
  404582:	4801      	ldr	r0, [pc, #4]	; (404588 <PIOB_Handler+0x8>)
  404584:	4b01      	ldr	r3, [pc, #4]	; (40458c <PIOB_Handler+0xc>)
  404586:	4718      	bx	r3
  404588:	400e1000 	.word	0x400e1000
  40458c:	00404521 	.word	0x00404521

00404590 <PIOC_Handler>:
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
	pio_handler_process(PIOC, ID_PIOC);
  404590:	210c      	movs	r1, #12
  404592:	4801      	ldr	r0, [pc, #4]	; (404598 <PIOC_Handler+0x8>)
  404594:	4b01      	ldr	r3, [pc, #4]	; (40459c <PIOC_Handler+0xc>)
  404596:	4718      	bx	r3
  404598:	400e1200 	.word	0x400e1200
  40459c:	00404521 	.word	0x00404521

004045a0 <PIOD_Handler>:
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
	pio_handler_process(PIOD, ID_PIOD);
  4045a0:	2110      	movs	r1, #16
  4045a2:	4801      	ldr	r0, [pc, #4]	; (4045a8 <PIOD_Handler+0x8>)
  4045a4:	4b01      	ldr	r3, [pc, #4]	; (4045ac <PIOD_Handler+0xc>)
  4045a6:	4718      	bx	r3
  4045a8:	400e1400 	.word	0x400e1400
  4045ac:	00404521 	.word	0x00404521

004045b0 <PIOE_Handler>:
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
	pio_handler_process(PIOE, ID_PIOE);
  4045b0:	2111      	movs	r1, #17
  4045b2:	4801      	ldr	r0, [pc, #4]	; (4045b8 <PIOE_Handler+0x8>)
  4045b4:	4b01      	ldr	r3, [pc, #4]	; (4045bc <PIOE_Handler+0xc>)
  4045b6:	4718      	bx	r3
  4045b8:	400e1600 	.word	0x400e1600
  4045bc:	00404521 	.word	0x00404521

004045c0 <pmc_mck_set_division>:
 * \brief Set the division of the MCK.
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
  4045c0:	3802      	subs	r0, #2
  4045c2:	2802      	cmp	r0, #2
  4045c4:	d80d      	bhi.n	4045e2 <pmc_mck_set_division+0x22>
  4045c6:	4b08      	ldr	r3, [pc, #32]	; (4045e8 <pmc_mck_set_division+0x28>)
  4045c8:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  4045cc:	4907      	ldr	r1, [pc, #28]	; (4045ec <pmc_mck_set_division+0x2c>)
  4045ce:	6b0b      	ldr	r3, [r1, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4045d0:	460a      	mov	r2, r1
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  4045d2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  4045d6:	4303      	orrs	r3, r0
	PMC->PMC_MCKR =
  4045d8:	630b      	str	r3, [r1, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4045da:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4045dc:	071b      	lsls	r3, r3, #28
  4045de:	d5fc      	bpl.n	4045da <pmc_mck_set_division+0x1a>
}
  4045e0:	4770      	bx	lr
{
  4045e2:	2000      	movs	r0, #0
  4045e4:	e7f2      	b.n	4045cc <pmc_mck_set_division+0xc>
  4045e6:	bf00      	nop
  4045e8:	0040e008 	.word	0x0040e008
  4045ec:	400e0600 	.word	0x400e0600

004045f0 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  4045f0:	4913      	ldr	r1, [pc, #76]	; (404640 <pmc_switch_mck_to_pllack+0x50>)
  4045f2:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4045f4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  4045f8:	4318      	orrs	r0, r3
  4045fa:	6308      	str	r0, [r1, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4045fc:	6e8b      	ldr	r3, [r1, #104]	; 0x68
  4045fe:	0718      	lsls	r0, r3, #28
  404600:	d407      	bmi.n	404612 <pmc_switch_mck_to_pllack+0x22>
  404602:	f44f 6300 	mov.w	r3, #2048	; 0x800
  404606:	e001      	b.n	40460c <pmc_switch_mck_to_pllack+0x1c>
			--ul_timeout) {
		if (ul_timeout == 0) {
  404608:	3b01      	subs	r3, #1
  40460a:	d016      	beq.n	40463a <pmc_switch_mck_to_pllack+0x4a>
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  40460c:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  40460e:	0712      	lsls	r2, r2, #28
  404610:	d5fa      	bpl.n	404608 <pmc_switch_mck_to_pllack+0x18>
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  404612:	490b      	ldr	r1, [pc, #44]	; (404640 <pmc_switch_mck_to_pllack+0x50>)
  404614:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  404616:	f023 0303 	bic.w	r3, r3, #3
  40461a:	f043 0302 	orr.w	r3, r3, #2
  40461e:	630b      	str	r3, [r1, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  404620:	6e8b      	ldr	r3, [r1, #104]	; 0x68
  404622:	0718      	lsls	r0, r3, #28
  404624:	d407      	bmi.n	404636 <pmc_switch_mck_to_pllack+0x46>
  404626:	f44f 6300 	mov.w	r3, #2048	; 0x800
  40462a:	e001      	b.n	404630 <pmc_switch_mck_to_pllack+0x40>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40462c:	3b01      	subs	r3, #1
  40462e:	d004      	beq.n	40463a <pmc_switch_mck_to_pllack+0x4a>
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  404630:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  404632:	0712      	lsls	r2, r2, #28
  404634:	d5fa      	bpl.n	40462c <pmc_switch_mck_to_pllack+0x3c>
			return 1;
		}
	}

	return 0;
  404636:	2000      	movs	r0, #0
}
  404638:	4770      	bx	lr
			return 1;
  40463a:	2001      	movs	r0, #1
  40463c:	4770      	bx	lr
  40463e:	bf00      	nop
  404640:	400e0600 	.word	0x400e0600

00404644 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  404644:	b9a0      	cbnz	r0, 404670 <pmc_switch_mainck_to_xtal+0x2c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  404646:	4b0e      	ldr	r3, [pc, #56]	; (404680 <pmc_switch_mainck_to_xtal+0x3c>)
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  404648:	0209      	lsls	r1, r1, #8
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  40464a:	480e      	ldr	r0, [pc, #56]	; (404684 <pmc_switch_mainck_to_xtal+0x40>)
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  40464c:	b289      	uxth	r1, r1
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  40464e:	461a      	mov	r2, r3
{
  404650:	b430      	push	{r4, r5}
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  404652:	4c0d      	ldr	r4, [pc, #52]	; (404688 <pmc_switch_mainck_to_xtal+0x44>)
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  404654:	6a1d      	ldr	r5, [r3, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  404656:	402c      	ands	r4, r5
  404658:	4320      	orrs	r0, r4
  40465a:	4301      	orrs	r1, r0
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  40465c:	6219      	str	r1, [r3, #32]
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  40465e:	6e93      	ldr	r3, [r2, #104]	; 0x68
  404660:	07db      	lsls	r3, r3, #31
  404662:	d5fc      	bpl.n	40465e <pmc_switch_mainck_to_xtal+0x1a>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  404664:	6a11      	ldr	r1, [r2, #32]
  404666:	4b09      	ldr	r3, [pc, #36]	; (40468c <pmc_switch_mainck_to_xtal+0x48>)
  404668:	430b      	orrs	r3, r1
  40466a:	6213      	str	r3, [r2, #32]
	}
}
  40466c:	bc30      	pop	{r4, r5}
  40466e:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  404670:	4903      	ldr	r1, [pc, #12]	; (404680 <pmc_switch_mainck_to_xtal+0x3c>)
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  404672:	4a07      	ldr	r2, [pc, #28]	; (404690 <pmc_switch_mainck_to_xtal+0x4c>)
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  404674:	6a08      	ldr	r0, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  404676:	4b07      	ldr	r3, [pc, #28]	; (404694 <pmc_switch_mainck_to_xtal+0x50>)
  404678:	4002      	ands	r2, r0
  40467a:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  40467c:	620b      	str	r3, [r1, #32]
  40467e:	4770      	bx	lr
  404680:	400e0600 	.word	0x400e0600
  404684:	00370001 	.word	0x00370001
  404688:	ffc8fffc 	.word	0xffc8fffc
  40468c:	01370000 	.word	0x01370000
  404690:	fec8fffc 	.word	0xfec8fffc
  404694:	01370002 	.word	0x01370002

00404698 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  404698:	4b02      	ldr	r3, [pc, #8]	; (4046a4 <pmc_osc_is_ready_mainck+0xc>)
  40469a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  40469c:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  4046a0:	4770      	bx	lr
  4046a2:	bf00      	nop
  4046a4:	400e0600 	.word	0x400e0600

004046a8 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  4046a8:	4b02      	ldr	r3, [pc, #8]	; (4046b4 <pmc_disable_pllack+0xc>)
  4046aa:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  4046ae:	629a      	str	r2, [r3, #40]	; 0x28
  4046b0:	4770      	bx	lr
  4046b2:	bf00      	nop
  4046b4:	400e0600 	.word	0x400e0600

004046b8 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  4046b8:	4b02      	ldr	r3, [pc, #8]	; (4046c4 <pmc_is_locked_pllack+0xc>)
  4046ba:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4046bc:	f000 0002 	and.w	r0, r0, #2
  4046c0:	4770      	bx	lr
  4046c2:	bf00      	nop
  4046c4:	400e0600 	.word	0x400e0600

004046c8 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  4046c8:	283f      	cmp	r0, #63	; 0x3f
  4046ca:	d81a      	bhi.n	404702 <pmc_enable_periph_clk+0x3a>
		return 1;
	}

	if (ul_id < 32) {
  4046cc:	281f      	cmp	r0, #31
  4046ce:	d80a      	bhi.n	4046e6 <pmc_enable_periph_clk+0x1e>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  4046d0:	2301      	movs	r3, #1
  4046d2:	4a0e      	ldr	r2, [pc, #56]	; (40470c <pmc_enable_periph_clk+0x44>)
  4046d4:	fa03 f000 	lsl.w	r0, r3, r0
  4046d8:	6991      	ldr	r1, [r2, #24]
  4046da:	ea30 0301 	bics.w	r3, r0, r1
  4046de:	d012      	beq.n	404706 <pmc_enable_periph_clk+0x3e>
			PMC->PMC_PCER0 = 1 << ul_id;
  4046e0:	6110      	str	r0, [r2, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  4046e2:	2000      	movs	r0, #0
  4046e4:	4770      	bx	lr
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  4046e6:	2301      	movs	r3, #1
		ul_id -= 32;
  4046e8:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  4046ea:	4a08      	ldr	r2, [pc, #32]	; (40470c <pmc_enable_periph_clk+0x44>)
  4046ec:	fa03 f000 	lsl.w	r0, r3, r0
  4046f0:	f8d2 3108 	ldr.w	r3, [r2, #264]	; 0x108
  4046f4:	ea30 0303 	bics.w	r3, r0, r3
  4046f8:	d005      	beq.n	404706 <pmc_enable_periph_clk+0x3e>
			PMC->PMC_PCER1 = 1 << ul_id;
  4046fa:	f8c2 0100 	str.w	r0, [r2, #256]	; 0x100
	return 0;
  4046fe:	2000      	movs	r0, #0
  404700:	4770      	bx	lr
		return 1;
  404702:	2001      	movs	r0, #1
  404704:	4770      	bx	lr
	return 0;
  404706:	2000      	movs	r0, #0
}
  404708:	4770      	bx	lr
  40470a:	bf00      	nop
  40470c:	400e0600 	.word	0x400e0600

00404710 <pmc_pck_set_prescaler>:
 *
 * \param ul_id Peripheral ID.
 * \param ul_pres Prescaler value.
 */
void pmc_pck_set_prescaler(uint32_t ul_id, uint32_t ul_pres)
{
  404710:	4b0b      	ldr	r3, [pc, #44]	; (404740 <pmc_pck_set_prescaler+0x30>)
  404712:	f44f 7280 	mov.w	r2, #256	; 0x100
  404716:	b410      	push	{r4}
  404718:	eb03 0480 	add.w	r4, r3, r0, lsl #2
  40471c:	fa02 f000 	lsl.w	r0, r2, r0
	PMC->PMC_PCK[ul_id] =
			(PMC->PMC_PCK[ul_id] & ~PMC_PCK_PRES_Msk) | ul_pres;
  404720:	6c22      	ldr	r2, [r4, #64]	; 0x40
  404722:	f422 627f 	bic.w	r2, r2, #4080	; 0xff0
  404726:	4311      	orrs	r1, r2
	PMC->PMC_PCK[ul_id] =
  404728:	6421      	str	r1, [r4, #64]	; 0x40
	while ((PMC->PMC_SCER & (PMC_SCER_PCK0 << ul_id))
  40472a:	e002      	b.n	404732 <pmc_pck_set_prescaler+0x22>
			&& !(PMC->PMC_SR & (PMC_SR_PCKRDY0 << ul_id)));
  40472c:	6e9a      	ldr	r2, [r3, #104]	; 0x68
  40472e:	4202      	tst	r2, r0
  404730:	d102      	bne.n	404738 <pmc_pck_set_prescaler+0x28>
	while ((PMC->PMC_SCER & (PMC_SCER_PCK0 << ul_id))
  404732:	681a      	ldr	r2, [r3, #0]
  404734:	4202      	tst	r2, r0
  404736:	d1f9      	bne.n	40472c <pmc_pck_set_prescaler+0x1c>
}
  404738:	f85d 4b04 	ldr.w	r4, [sp], #4
  40473c:	4770      	bx	lr
  40473e:	bf00      	nop
  404740:	400e0600 	.word	0x400e0600

00404744 <pmc_pck_set_source>:
 *
 * \param ul_id Peripheral ID.
 * \param ul_source Source selection value.
 */
void pmc_pck_set_source(uint32_t ul_id, uint32_t ul_source)
{
  404744:	4b0b      	ldr	r3, [pc, #44]	; (404774 <pmc_pck_set_source+0x30>)
  404746:	f44f 7280 	mov.w	r2, #256	; 0x100
  40474a:	b410      	push	{r4}
  40474c:	eb03 0480 	add.w	r4, r3, r0, lsl #2
  404750:	fa02 f000 	lsl.w	r0, r2, r0
	PMC->PMC_PCK[ul_id] =
			(PMC->PMC_PCK[ul_id] & ~PMC_PCK_CSS_Msk) | ul_source;
  404754:	6c22      	ldr	r2, [r4, #64]	; 0x40
  404756:	f022 0207 	bic.w	r2, r2, #7
  40475a:	4311      	orrs	r1, r2
	PMC->PMC_PCK[ul_id] =
  40475c:	6421      	str	r1, [r4, #64]	; 0x40
	while ((PMC->PMC_SCER & (PMC_SCER_PCK0 << ul_id))
  40475e:	e002      	b.n	404766 <pmc_pck_set_source+0x22>
			&& !(PMC->PMC_SR & (PMC_SR_PCKRDY0 << ul_id)));
  404760:	6e9a      	ldr	r2, [r3, #104]	; 0x68
  404762:	4202      	tst	r2, r0
  404764:	d102      	bne.n	40476c <pmc_pck_set_source+0x28>
	while ((PMC->PMC_SCER & (PMC_SCER_PCK0 << ul_id))
  404766:	681a      	ldr	r2, [r3, #0]
  404768:	4202      	tst	r2, r0
  40476a:	d1f9      	bne.n	404760 <pmc_pck_set_source+0x1c>
}
  40476c:	f85d 4b04 	ldr.w	r4, [sp], #4
  404770:	4770      	bx	lr
  404772:	bf00      	nop
  404774:	400e0600 	.word	0x400e0600

00404778 <pmc_enable_pck>:
 *
 * \param ul_id Id of the programmable clock.
 */
void pmc_enable_pck(uint32_t ul_id)
{
	PMC->PMC_SCER = PMC_SCER_PCK0 << ul_id;
  404778:	f44f 7380 	mov.w	r3, #256	; 0x100
  40477c:	4a02      	ldr	r2, [pc, #8]	; (404788 <pmc_enable_pck+0x10>)
  40477e:	fa03 f000 	lsl.w	r0, r3, r0
  404782:	6010      	str	r0, [r2, #0]
  404784:	4770      	bx	lr
  404786:	bf00      	nop
  404788:	400e0600 	.word	0x400e0600

0040478c <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  40478c:	e7fe      	b.n	40478c <Dummy_Handler>
  40478e:	bf00      	nop

00404790 <Dummy_Handler2>:
	while (1) {
	}
}

void Dummy_Handler2(void)
{
  404790:	e7fe      	b.n	404790 <Dummy_Handler2>
  404792:	bf00      	nop

00404794 <Reset_Handler>:
        if (pSrc != pDest) {
  404794:	4924      	ldr	r1, [pc, #144]	; (404828 <Reset_Handler+0x94>)
  404796:	4a25      	ldr	r2, [pc, #148]	; (40482c <Reset_Handler+0x98>)
  404798:	4291      	cmp	r1, r2
{
  40479a:	b500      	push	{lr}
  40479c:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  40479e:	d00e      	beq.n	4047be <Reset_Handler+0x2a>
                for (; pDest < &_erelocate;) {
  4047a0:	4823      	ldr	r0, [pc, #140]	; (404830 <Reset_Handler+0x9c>)
  4047a2:	4282      	cmp	r2, r0
  4047a4:	d20b      	bcs.n	4047be <Reset_Handler+0x2a>
  4047a6:	43d3      	mvns	r3, r2
  4047a8:	4403      	add	r3, r0
  4047aa:	f023 0303 	bic.w	r3, r3, #3
  4047ae:	3304      	adds	r3, #4
  4047b0:	4413      	add	r3, r2
                        *pDest++ = *pSrc++;
  4047b2:	f851 0b04 	ldr.w	r0, [r1], #4
  4047b6:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  4047ba:	429a      	cmp	r2, r3
  4047bc:	d1f9      	bne.n	4047b2 <Reset_Handler+0x1e>
        for (pDest = &_szero; pDest < &_ezero;) {
  4047be:	4a1d      	ldr	r2, [pc, #116]	; (404834 <Reset_Handler+0xa0>)
  4047c0:	491d      	ldr	r1, [pc, #116]	; (404838 <Reset_Handler+0xa4>)
  4047c2:	428a      	cmp	r2, r1
  4047c4:	d20a      	bcs.n	4047dc <Reset_Handler+0x48>
  4047c6:	43d3      	mvns	r3, r2
                *pDest++ = 0;
  4047c8:	2000      	movs	r0, #0
  4047ca:	440b      	add	r3, r1
  4047cc:	f023 0303 	bic.w	r3, r3, #3
  4047d0:	3304      	adds	r3, #4
  4047d2:	4413      	add	r3, r2
  4047d4:	f842 0b04 	str.w	r0, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  4047d8:	429a      	cmp	r2, r3
  4047da:	d1fb      	bne.n	4047d4 <Reset_Handler+0x40>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  4047dc:	4b17      	ldr	r3, [pc, #92]	; (40483c <Reset_Handler+0xa8>)
  4047de:	4a18      	ldr	r2, [pc, #96]	; (404840 <Reset_Handler+0xac>)
  4047e0:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  4047e4:	6093      	str	r3, [r2, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  4047e6:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  4047ea:	fab3 f383 	clz	r3, r3
  4047ee:	095b      	lsrs	r3, r3, #5
  4047f0:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  4047f2:	b672      	cpsid	i
  __ASM volatile ("dmb");
  4047f4:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  4047f8:	4a12      	ldr	r2, [pc, #72]	; (404844 <Reset_Handler+0xb0>)
  4047fa:	2300      	movs	r3, #0
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  4047fc:	4912      	ldr	r1, [pc, #72]	; (404848 <Reset_Handler+0xb4>)
  4047fe:	7013      	strb	r3, [r2, #0]
	return flags;
  404800:	9801      	ldr	r0, [sp, #4]
  404802:	680b      	ldr	r3, [r1, #0]
  404804:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  404808:	600b      	str	r3, [r1, #0]
  __ASM volatile ("dsb");
  40480a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  40480e:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  404812:	b120      	cbz	r0, 40481e <Reset_Handler+0x8a>
		cpu_irq_enable();
  404814:	2301      	movs	r3, #1
  404816:	7013      	strb	r3, [r2, #0]
  __ASM volatile ("dmb");
  404818:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40481c:	b662      	cpsie	i
        __libc_init_array();
  40481e:	4b0b      	ldr	r3, [pc, #44]	; (40484c <Reset_Handler+0xb8>)
  404820:	4798      	blx	r3
        main();
  404822:	4b0b      	ldr	r3, [pc, #44]	; (404850 <Reset_Handler+0xbc>)
  404824:	4798      	blx	r3
  404826:	e7fe      	b.n	404826 <Reset_Handler+0x92>
  404828:	0040f90c 	.word	0x0040f90c
  40482c:	20400000 	.word	0x20400000
  404830:	204009d8 	.word	0x204009d8
  404834:	204009d8 	.word	0x204009d8
  404838:	20418dd4 	.word	0x20418dd4
  40483c:	00400000 	.word	0x00400000
  404840:	e000ed00 	.word	0xe000ed00
  404844:	20400020 	.word	0x20400020
  404848:	e000ed88 	.word	0xe000ed88
  40484c:	00408491 	.word	0x00408491
  404850:	00404bd1 	.word	0x00404bd1

00404854 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  404854:	4a31      	ldr	r2, [pc, #196]	; (40491c <SystemCoreClockUpdate+0xc8>)
  404856:	6b13      	ldr	r3, [r2, #48]	; 0x30
  404858:	f003 0303 	and.w	r3, r3, #3
  40485c:	2b01      	cmp	r3, #1
  40485e:	d03d      	beq.n	4048dc <SystemCoreClockUpdate+0x88>
  404860:	d326      	bcc.n	4048b0 <SystemCoreClockUpdate+0x5c>
  404862:	2b02      	cmp	r3, #2
  404864:	d00d      	beq.n	404882 <SystemCoreClockUpdate+0x2e>
  404866:	492e      	ldr	r1, [pc, #184]	; (404920 <SystemCoreClockUpdate+0xcc>)
  404868:	680b      	ldr	r3, [r1, #0]

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  40486a:	482c      	ldr	r0, [pc, #176]	; (40491c <SystemCoreClockUpdate+0xc8>)
  40486c:	6b02      	ldr	r2, [r0, #48]	; 0x30
  40486e:	f002 0270 	and.w	r2, r2, #112	; 0x70
  404872:	2a70      	cmp	r2, #112	; 0x70
  404874:	d02c      	beq.n	4048d0 <SystemCoreClockUpdate+0x7c>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  404876:	6b02      	ldr	r2, [r0, #48]	; 0x30
  404878:	f3c2 1202 	ubfx	r2, r2, #4, #3
  40487c:	40d3      	lsrs	r3, r2
  40487e:	600b      	str	r3, [r1, #0]
  404880:	4770      	bx	lr
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  404882:	6a13      	ldr	r3, [r2, #32]
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  404884:	4926      	ldr	r1, [pc, #152]	; (404920 <SystemCoreClockUpdate+0xcc>)
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  404886:	01db      	lsls	r3, r3, #7
  404888:	d538      	bpl.n	4048fc <SystemCoreClockUpdate+0xa8>
            SystemCoreClock *= 3U;
  40488a:	4b26      	ldr	r3, [pc, #152]	; (404924 <SystemCoreClockUpdate+0xd0>)
  40488c:	600b      	str	r3, [r1, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  40488e:	4823      	ldr	r0, [pc, #140]	; (40491c <SystemCoreClockUpdate+0xc8>)
  404890:	6b02      	ldr	r2, [r0, #48]	; 0x30
  404892:	f002 0203 	and.w	r2, r2, #3
  404896:	2a02      	cmp	r2, #2
  404898:	d1e7      	bne.n	40486a <SystemCoreClockUpdate+0x16>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  40489a:	6a82      	ldr	r2, [r0, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  40489c:	6a80      	ldr	r0, [r0, #40]	; 0x28
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  40489e:	f3c2 420a 	ubfx	r2, r2, #16, #11
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  4048a2:	b2c0      	uxtb	r0, r0
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  4048a4:	fb02 3303 	mla	r3, r2, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  4048a8:	fbb3 f3f0 	udiv	r3, r3, r0
  4048ac:	600b      	str	r3, [r1, #0]
  4048ae:	e7dc      	b.n	40486a <SystemCoreClockUpdate+0x16>
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  4048b0:	4b1d      	ldr	r3, [pc, #116]	; (404928 <SystemCoreClockUpdate+0xd4>)
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  4048b2:	491b      	ldr	r1, [pc, #108]	; (404920 <SystemCoreClockUpdate+0xcc>)
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  4048b4:	695b      	ldr	r3, [r3, #20]
  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  4048b6:	4819      	ldr	r0, [pc, #100]	; (40491c <SystemCoreClockUpdate+0xc8>)
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  4048b8:	061b      	lsls	r3, r3, #24
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  4048ba:	bf4c      	ite	mi
  4048bc:	f44f 4300 	movmi.w	r3, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  4048c0:	f44f 43fa 	movpl.w	r3, #32000	; 0x7d00
  4048c4:	600b      	str	r3, [r1, #0]
  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  4048c6:	6b02      	ldr	r2, [r0, #48]	; 0x30
  4048c8:	f002 0270 	and.w	r2, r2, #112	; 0x70
  4048cc:	2a70      	cmp	r2, #112	; 0x70
  4048ce:	d1d2      	bne.n	404876 <SystemCoreClockUpdate+0x22>
    SystemCoreClock /= 3U;
  4048d0:	4a16      	ldr	r2, [pc, #88]	; (40492c <SystemCoreClockUpdate+0xd8>)
  4048d2:	fba2 2303 	umull	r2, r3, r2, r3
  4048d6:	085b      	lsrs	r3, r3, #1
  4048d8:	600b      	str	r3, [r1, #0]
  4048da:	4770      	bx	lr
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4048dc:	6a13      	ldr	r3, [r2, #32]
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  4048de:	4910      	ldr	r1, [pc, #64]	; (404920 <SystemCoreClockUpdate+0xcc>)
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4048e0:	01d8      	lsls	r0, r3, #7
  4048e2:	d408      	bmi.n	4048f6 <SystemCoreClockUpdate+0xa2>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4048e4:	4b12      	ldr	r3, [pc, #72]	; (404930 <SystemCoreClockUpdate+0xdc>)
  4048e6:	600b      	str	r3, [r1, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  4048e8:	6a12      	ldr	r2, [r2, #32]
  4048ea:	f002 0270 	and.w	r2, r2, #112	; 0x70
  4048ee:	2a10      	cmp	r2, #16
  4048f0:	d011      	beq.n	404916 <SystemCoreClockUpdate+0xc2>
  4048f2:	2a20      	cmp	r2, #32
  4048f4:	d1b9      	bne.n	40486a <SystemCoreClockUpdate+0x16>
            SystemCoreClock *= 3U;
  4048f6:	4b0b      	ldr	r3, [pc, #44]	; (404924 <SystemCoreClockUpdate+0xd0>)
  4048f8:	600b      	str	r3, [r1, #0]
          break;
  4048fa:	e7b6      	b.n	40486a <SystemCoreClockUpdate+0x16>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4048fc:	4b0c      	ldr	r3, [pc, #48]	; (404930 <SystemCoreClockUpdate+0xdc>)
  4048fe:	600b      	str	r3, [r1, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  404900:	6a12      	ldr	r2, [r2, #32]
  404902:	f002 0270 	and.w	r2, r2, #112	; 0x70
  404906:	2a10      	cmp	r2, #16
  404908:	d002      	beq.n	404910 <SystemCoreClockUpdate+0xbc>
  40490a:	2a20      	cmp	r2, #32
  40490c:	d0bd      	beq.n	40488a <SystemCoreClockUpdate+0x36>
  40490e:	e7be      	b.n	40488e <SystemCoreClockUpdate+0x3a>
            SystemCoreClock *= 2U;
  404910:	4b08      	ldr	r3, [pc, #32]	; (404934 <SystemCoreClockUpdate+0xe0>)
  404912:	600b      	str	r3, [r1, #0]
          break;
  404914:	e7bb      	b.n	40488e <SystemCoreClockUpdate+0x3a>
            SystemCoreClock *= 2U;
  404916:	4b07      	ldr	r3, [pc, #28]	; (404934 <SystemCoreClockUpdate+0xe0>)
  404918:	600b      	str	r3, [r1, #0]
          break;
  40491a:	e7a6      	b.n	40486a <SystemCoreClockUpdate+0x16>
  40491c:	400e0600 	.word	0x400e0600
  404920:	20400024 	.word	0x20400024
  404924:	00b71b00 	.word	0x00b71b00
  404928:	400e1810 	.word	0x400e1810
  40492c:	aaaaaaab 	.word	0xaaaaaaab
  404930:	003d0900 	.word	0x003d0900
  404934:	007a1200 	.word	0x007a1200

00404938 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  404938:	4b16      	ldr	r3, [pc, #88]	; (404994 <system_init_flash+0x5c>)
  40493a:	4298      	cmp	r0, r3
  40493c:	d917      	bls.n	40496e <system_init_flash+0x36>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  40493e:	4b16      	ldr	r3, [pc, #88]	; (404998 <system_init_flash+0x60>)
  404940:	4298      	cmp	r0, r3
  404942:	d910      	bls.n	404966 <system_init_flash+0x2e>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  404944:	4b15      	ldr	r3, [pc, #84]	; (40499c <system_init_flash+0x64>)
  404946:	4298      	cmp	r0, r3
  404948:	d91a      	bls.n	404980 <system_init_flash+0x48>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  40494a:	4b15      	ldr	r3, [pc, #84]	; (4049a0 <system_init_flash+0x68>)
  40494c:	4298      	cmp	r0, r3
  40494e:	d913      	bls.n	404978 <system_init_flash+0x40>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  404950:	4b14      	ldr	r3, [pc, #80]	; (4049a4 <system_init_flash+0x6c>)
  404952:	4298      	cmp	r0, r3
  404954:	d918      	bls.n	404988 <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  404956:	4b14      	ldr	r3, [pc, #80]	; (4049a8 <system_init_flash+0x70>)
  404958:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  40495a:	4b14      	ldr	r3, [pc, #80]	; (4049ac <system_init_flash+0x74>)
  40495c:	bf94      	ite	ls
  40495e:	4a14      	ldrls	r2, [pc, #80]	; (4049b0 <system_init_flash+0x78>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  404960:	4a14      	ldrhi	r2, [pc, #80]	; (4049b4 <system_init_flash+0x7c>)
  404962:	601a      	str	r2, [r3, #0]
  404964:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  404966:	4b11      	ldr	r3, [pc, #68]	; (4049ac <system_init_flash+0x74>)
  404968:	4a13      	ldr	r2, [pc, #76]	; (4049b8 <system_init_flash+0x80>)
  40496a:	601a      	str	r2, [r3, #0]
  40496c:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  40496e:	4b0f      	ldr	r3, [pc, #60]	; (4049ac <system_init_flash+0x74>)
  404970:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  404974:	601a      	str	r2, [r3, #0]
  404976:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  404978:	4b0c      	ldr	r3, [pc, #48]	; (4049ac <system_init_flash+0x74>)
  40497a:	4a10      	ldr	r2, [pc, #64]	; (4049bc <system_init_flash+0x84>)
  40497c:	601a      	str	r2, [r3, #0]
  40497e:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  404980:	4b0a      	ldr	r3, [pc, #40]	; (4049ac <system_init_flash+0x74>)
  404982:	4a0f      	ldr	r2, [pc, #60]	; (4049c0 <system_init_flash+0x88>)
  404984:	601a      	str	r2, [r3, #0]
  404986:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  404988:	4b08      	ldr	r3, [pc, #32]	; (4049ac <system_init_flash+0x74>)
  40498a:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  40498e:	601a      	str	r2, [r3, #0]
  404990:	4770      	bx	lr
  404992:	bf00      	nop
  404994:	015ef3bf 	.word	0x015ef3bf
  404998:	02bde77f 	.word	0x02bde77f
  40499c:	041cdb3f 	.word	0x041cdb3f
  4049a0:	057bceff 	.word	0x057bceff
  4049a4:	06dac2bf 	.word	0x06dac2bf
  4049a8:	0839b67f 	.word	0x0839b67f
  4049ac:	400e0c00 	.word	0x400e0c00
  4049b0:	04000500 	.word	0x04000500
  4049b4:	04000600 	.word	0x04000600
  4049b8:	04000100 	.word	0x04000100
  4049bc:	04000300 	.word	0x04000300
  4049c0:	04000200 	.word	0x04000200

004049c4 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  4049c4:	4a0d      	ldr	r2, [pc, #52]	; (4049fc <_sbrk+0x38>)
	int ramend = (int)&__ram_end__;
  4049c6:	490e      	ldr	r1, [pc, #56]	; (404a00 <_sbrk+0x3c>)
	if (heap == NULL) {
  4049c8:	6813      	ldr	r3, [r2, #0]
  4049ca:	b143      	cbz	r3, 4049de <_sbrk+0x1a>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
  4049cc:	4418      	add	r0, r3
  4049ce:	4281      	cmp	r1, r0
  4049d0:	db02      	blt.n	4049d8 <_sbrk+0x14>
		return (caddr_t) -1;	
	}

	heap += incr;
  4049d2:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  4049d4:	4618      	mov	r0, r3
  4049d6:	4770      	bx	lr
		return (caddr_t) -1;	
  4049d8:	f04f 30ff 	mov.w	r0, #4294967295
  4049dc:	4770      	bx	lr
{
  4049de:	b410      	push	{r4}
		heap = (unsigned char *)&_end;
  4049e0:	4c08      	ldr	r4, [pc, #32]	; (404a04 <_sbrk+0x40>)
	if (((int)prev_heap + incr) > ramend) {
  4049e2:	4420      	add	r0, r4
		heap = (unsigned char *)&_end;
  4049e4:	6014      	str	r4, [r2, #0]
	if (((int)prev_heap + incr) > ramend) {
  4049e6:	4281      	cmp	r1, r0
  4049e8:	db04      	blt.n	4049f4 <_sbrk+0x30>
	heap += incr;
  4049ea:	6010      	str	r0, [r2, #0]
	return (caddr_t) prev_heap;
  4049ec:	4620      	mov	r0, r4
}
  4049ee:	f85d 4b04 	ldr.w	r4, [sp], #4
  4049f2:	4770      	bx	lr
		return (caddr_t) -1;	
  4049f4:	f04f 30ff 	mov.w	r0, #4294967295
  4049f8:	e7f9      	b.n	4049ee <_sbrk+0x2a>
  4049fa:	bf00      	nop
  4049fc:	2040bd5c 	.word	0x2040bd5c
  404a00:	2045fffc 	.word	0x2045fffc
  404a04:	2041afd8 	.word	0x2041afd8

00404a08 <_close>:
}

extern int _close(int file)
{
	return -1;
}
  404a08:	f04f 30ff 	mov.w	r0, #4294967295
  404a0c:	4770      	bx	lr
  404a0e:	bf00      	nop

00404a10 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  404a10:	f44f 5300 	mov.w	r3, #8192	; 0x2000

	return 0;
}
  404a14:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
  404a16:	604b      	str	r3, [r1, #4]
}
  404a18:	4770      	bx	lr
  404a1a:	bf00      	nop

00404a1c <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  404a1c:	2001      	movs	r0, #1
  404a1e:	4770      	bx	lr

00404a20 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  404a20:	2000      	movs	r0, #0
  404a22:	4770      	bx	lr

00404a24 <usart_serial_getchar>:
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  404a24:	4b2d      	ldr	r3, [pc, #180]	; (404adc <usart_serial_getchar+0xb8>)
	uint32_t val = 0;
  404a26:	2200      	movs	r2, #0
{
  404a28:	b5f0      	push	{r4, r5, r6, r7, lr}
	if (UART0 == (Uart*)p_usart) {
  404a2a:	4298      	cmp	r0, r3
{
  404a2c:	b083      	sub	sp, #12
  404a2e:	4604      	mov	r4, r0
  404a30:	460d      	mov	r5, r1
	uint32_t val = 0;
  404a32:	9201      	str	r2, [sp, #4]
	if (UART0 == (Uart*)p_usart) {
  404a34:	d03a      	beq.n	404aac <usart_serial_getchar+0x88>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  404a36:	4b2a      	ldr	r3, [pc, #168]	; (404ae0 <usart_serial_getchar+0xbc>)
  404a38:	4298      	cmp	r0, r3
  404a3a:	d03f      	beq.n	404abc <usart_serial_getchar+0x98>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART2
	if (UART2 == (Uart*)p_usart) {
  404a3c:	4b29      	ldr	r3, [pc, #164]	; (404ae4 <usart_serial_getchar+0xc0>)
  404a3e:	4298      	cmp	r0, r3
  404a40:	d044      	beq.n	404acc <usart_serial_getchar+0xa8>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART3
	if (UART3 == (Uart*)p_usart) {
  404a42:	4b29      	ldr	r3, [pc, #164]	; (404ae8 <usart_serial_getchar+0xc4>)
  404a44:	4298      	cmp	r0, r3
  404a46:	d015      	beq.n	404a74 <usart_serial_getchar+0x50>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  404a48:	4b28      	ldr	r3, [pc, #160]	; (404aec <usart_serial_getchar+0xc8>)
  404a4a:	4298      	cmp	r0, r3
  404a4c:	d024      	beq.n	404a98 <usart_serial_getchar+0x74>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  404a4e:	4b28      	ldr	r3, [pc, #160]	; (404af0 <usart_serial_getchar+0xcc>)
  404a50:	429c      	cmp	r4, r3
  404a52:	d017      	beq.n	404a84 <usart_serial_getchar+0x60>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
  404a54:	4b27      	ldr	r3, [pc, #156]	; (404af4 <usart_serial_getchar+0xd0>)
  404a56:	429c      	cmp	r4, r3
  404a58:	d001      	beq.n	404a5e <usart_serial_getchar+0x3a>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  404a5a:	b003      	add	sp, #12
  404a5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404a5e:	af01      	add	r7, sp, #4
  404a60:	4e25      	ldr	r6, [pc, #148]	; (404af8 <usart_serial_getchar+0xd4>)
		while (usart_read(p_usart, &val));
  404a62:	4639      	mov	r1, r7
  404a64:	4620      	mov	r0, r4
  404a66:	47b0      	blx	r6
  404a68:	2800      	cmp	r0, #0
  404a6a:	d1fa      	bne.n	404a62 <usart_serial_getchar+0x3e>
		*data = (uint8_t)(val & 0xFF);
  404a6c:	9b01      	ldr	r3, [sp, #4]
  404a6e:	702b      	strb	r3, [r5, #0]
}
  404a70:	b003      	add	sp, #12
  404a72:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404a74:	4e21      	ldr	r6, [pc, #132]	; (404afc <usart_serial_getchar+0xd8>)
		while (uart_read((Uart*)p_usart, data));
  404a76:	4629      	mov	r1, r5
  404a78:	4620      	mov	r0, r4
  404a7a:	47b0      	blx	r6
  404a7c:	2800      	cmp	r0, #0
  404a7e:	d1fa      	bne.n	404a76 <usart_serial_getchar+0x52>
}
  404a80:	b003      	add	sp, #12
  404a82:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404a84:	af01      	add	r7, sp, #4
  404a86:	4e1c      	ldr	r6, [pc, #112]	; (404af8 <usart_serial_getchar+0xd4>)
		while (usart_read(p_usart, &val));
  404a88:	4639      	mov	r1, r7
  404a8a:	4620      	mov	r0, r4
  404a8c:	47b0      	blx	r6
  404a8e:	2800      	cmp	r0, #0
  404a90:	d1fa      	bne.n	404a88 <usart_serial_getchar+0x64>
		*data = (uint8_t)(val & 0xFF);
  404a92:	9b01      	ldr	r3, [sp, #4]
  404a94:	702b      	strb	r3, [r5, #0]
  404a96:	e7eb      	b.n	404a70 <usart_serial_getchar+0x4c>
  404a98:	af01      	add	r7, sp, #4
  404a9a:	4e17      	ldr	r6, [pc, #92]	; (404af8 <usart_serial_getchar+0xd4>)
		while (usart_read(p_usart, &val));
  404a9c:	4639      	mov	r1, r7
  404a9e:	4620      	mov	r0, r4
  404aa0:	47b0      	blx	r6
  404aa2:	2800      	cmp	r0, #0
  404aa4:	d1fa      	bne.n	404a9c <usart_serial_getchar+0x78>
		*data = (uint8_t)(val & 0xFF);
  404aa6:	9b01      	ldr	r3, [sp, #4]
  404aa8:	702b      	strb	r3, [r5, #0]
  404aaa:	e7e1      	b.n	404a70 <usart_serial_getchar+0x4c>
  404aac:	4e13      	ldr	r6, [pc, #76]	; (404afc <usart_serial_getchar+0xd8>)
		while (uart_read((Uart*)p_usart, data));
  404aae:	4607      	mov	r7, r0
  404ab0:	4629      	mov	r1, r5
  404ab2:	4638      	mov	r0, r7
  404ab4:	47b0      	blx	r6
  404ab6:	2800      	cmp	r0, #0
  404ab8:	d1fa      	bne.n	404ab0 <usart_serial_getchar+0x8c>
  404aba:	e7c8      	b.n	404a4e <usart_serial_getchar+0x2a>
  404abc:	4e0f      	ldr	r6, [pc, #60]	; (404afc <usart_serial_getchar+0xd8>)
		while (uart_read((Uart*)p_usart, data));
  404abe:	4607      	mov	r7, r0
  404ac0:	4629      	mov	r1, r5
  404ac2:	4638      	mov	r0, r7
  404ac4:	47b0      	blx	r6
  404ac6:	2800      	cmp	r0, #0
  404ac8:	d1fa      	bne.n	404ac0 <usart_serial_getchar+0x9c>
  404aca:	e7c0      	b.n	404a4e <usart_serial_getchar+0x2a>
  404acc:	4e0b      	ldr	r6, [pc, #44]	; (404afc <usart_serial_getchar+0xd8>)
		while (uart_read((Uart*)p_usart, data));
  404ace:	4607      	mov	r7, r0
  404ad0:	4629      	mov	r1, r5
  404ad2:	4638      	mov	r0, r7
  404ad4:	47b0      	blx	r6
  404ad6:	2800      	cmp	r0, #0
  404ad8:	d1fa      	bne.n	404ad0 <usart_serial_getchar+0xac>
  404ada:	e7bb      	b.n	404a54 <usart_serial_getchar+0x30>
  404adc:	400e0800 	.word	0x400e0800
  404ae0:	400e0a00 	.word	0x400e0a00
  404ae4:	400e1a00 	.word	0x400e1a00
  404ae8:	400e1c00 	.word	0x400e1c00
  404aec:	40024000 	.word	0x40024000
  404af0:	40028000 	.word	0x40028000
  404af4:	4002c000 	.word	0x4002c000
  404af8:	00403e2d 	.word	0x00403e2d
  404afc:	00403d2d 	.word	0x00403d2d

00404b00 <usart_serial_putchar>:
	if (UART0 == (Uart*)p_usart) {
  404b00:	4b2a      	ldr	r3, [pc, #168]	; (404bac <usart_serial_putchar+0xac>)
  404b02:	4298      	cmp	r0, r3
{
  404b04:	b570      	push	{r4, r5, r6, lr}
  404b06:	460d      	mov	r5, r1
	if (UART0 == (Uart*)p_usart) {
  404b08:	d01c      	beq.n	404b44 <usart_serial_putchar+0x44>
	if (UART1 == (Uart*)p_usart) {
  404b0a:	4b29      	ldr	r3, [pc, #164]	; (404bb0 <usart_serial_putchar+0xb0>)
  404b0c:	4298      	cmp	r0, r3
  404b0e:	d022      	beq.n	404b56 <usart_serial_putchar+0x56>
	if (UART2 == (Uart*)p_usart) {
  404b10:	4b28      	ldr	r3, [pc, #160]	; (404bb4 <usart_serial_putchar+0xb4>)
  404b12:	4298      	cmp	r0, r3
  404b14:	d028      	beq.n	404b68 <usart_serial_putchar+0x68>
	if (UART3 == (Uart*)p_usart) {
  404b16:	4b28      	ldr	r3, [pc, #160]	; (404bb8 <usart_serial_putchar+0xb8>)
  404b18:	4298      	cmp	r0, r3
  404b1a:	d02e      	beq.n	404b7a <usart_serial_putchar+0x7a>
	if (USART0 == p_usart) {
  404b1c:	4b27      	ldr	r3, [pc, #156]	; (404bbc <usart_serial_putchar+0xbc>)
  404b1e:	4298      	cmp	r0, r3
  404b20:	d007      	beq.n	404b32 <usart_serial_putchar+0x32>
	if (USART1 == p_usart) {
  404b22:	4b27      	ldr	r3, [pc, #156]	; (404bc0 <usart_serial_putchar+0xc0>)
  404b24:	4298      	cmp	r0, r3
  404b26:	d038      	beq.n	404b9a <usart_serial_putchar+0x9a>
	if (USART2 == p_usart) {
  404b28:	4b26      	ldr	r3, [pc, #152]	; (404bc4 <usart_serial_putchar+0xc4>)
  404b2a:	4298      	cmp	r0, r3
  404b2c:	d02d      	beq.n	404b8a <usart_serial_putchar+0x8a>
	return 0;
  404b2e:	2000      	movs	r0, #0
}
  404b30:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  404b32:	4604      	mov	r4, r0
  404b34:	4e24      	ldr	r6, [pc, #144]	; (404bc8 <usart_serial_putchar+0xc8>)
  404b36:	4629      	mov	r1, r5
  404b38:	4620      	mov	r0, r4
  404b3a:	47b0      	blx	r6
  404b3c:	2800      	cmp	r0, #0
  404b3e:	d1fa      	bne.n	404b36 <usart_serial_putchar+0x36>
		return 1;
  404b40:	2001      	movs	r0, #1
  404b42:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  404b44:	4604      	mov	r4, r0
  404b46:	4e21      	ldr	r6, [pc, #132]	; (404bcc <usart_serial_putchar+0xcc>)
  404b48:	4629      	mov	r1, r5
  404b4a:	4620      	mov	r0, r4
  404b4c:	47b0      	blx	r6
  404b4e:	2800      	cmp	r0, #0
  404b50:	d1fa      	bne.n	404b48 <usart_serial_putchar+0x48>
		return 1;
  404b52:	2001      	movs	r0, #1
  404b54:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  404b56:	4604      	mov	r4, r0
  404b58:	4e1c      	ldr	r6, [pc, #112]	; (404bcc <usart_serial_putchar+0xcc>)
  404b5a:	4629      	mov	r1, r5
  404b5c:	4620      	mov	r0, r4
  404b5e:	47b0      	blx	r6
  404b60:	2800      	cmp	r0, #0
  404b62:	d1fa      	bne.n	404b5a <usart_serial_putchar+0x5a>
		return 1;
  404b64:	2001      	movs	r0, #1
  404b66:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  404b68:	4604      	mov	r4, r0
  404b6a:	4e18      	ldr	r6, [pc, #96]	; (404bcc <usart_serial_putchar+0xcc>)
  404b6c:	4629      	mov	r1, r5
  404b6e:	4620      	mov	r0, r4
  404b70:	47b0      	blx	r6
  404b72:	2800      	cmp	r0, #0
  404b74:	d1fa      	bne.n	404b6c <usart_serial_putchar+0x6c>
		return 1;
  404b76:	2001      	movs	r0, #1
  404b78:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  404b7a:	4604      	mov	r4, r0
  404b7c:	4e13      	ldr	r6, [pc, #76]	; (404bcc <usart_serial_putchar+0xcc>)
  404b7e:	4629      	mov	r1, r5
  404b80:	4620      	mov	r0, r4
  404b82:	47b0      	blx	r6
  404b84:	2800      	cmp	r0, #0
  404b86:	d1fa      	bne.n	404b7e <usart_serial_putchar+0x7e>
  404b88:	e7da      	b.n	404b40 <usart_serial_putchar+0x40>
		while (usart_write(p_usart, c)!=0);
  404b8a:	4604      	mov	r4, r0
  404b8c:	4e0e      	ldr	r6, [pc, #56]	; (404bc8 <usart_serial_putchar+0xc8>)
  404b8e:	4629      	mov	r1, r5
  404b90:	4620      	mov	r0, r4
  404b92:	47b0      	blx	r6
  404b94:	2800      	cmp	r0, #0
  404b96:	d1fa      	bne.n	404b8e <usart_serial_putchar+0x8e>
  404b98:	e7d2      	b.n	404b40 <usart_serial_putchar+0x40>
		while (usart_write(p_usart, c)!=0);
  404b9a:	4604      	mov	r4, r0
  404b9c:	4e0a      	ldr	r6, [pc, #40]	; (404bc8 <usart_serial_putchar+0xc8>)
  404b9e:	4629      	mov	r1, r5
  404ba0:	4620      	mov	r0, r4
  404ba2:	47b0      	blx	r6
  404ba4:	2800      	cmp	r0, #0
  404ba6:	d1fa      	bne.n	404b9e <usart_serial_putchar+0x9e>
  404ba8:	e7ca      	b.n	404b40 <usart_serial_putchar+0x40>
  404baa:	bf00      	nop
  404bac:	400e0800 	.word	0x400e0800
  404bb0:	400e0a00 	.word	0x400e0a00
  404bb4:	400e1a00 	.word	0x400e1a00
  404bb8:	400e1c00 	.word	0x400e1c00
  404bbc:	40024000 	.word	0x40024000
  404bc0:	40028000 	.word	0x40028000
  404bc4:	4002c000 	.word	0x4002c000
  404bc8:	00403e15 	.word	0x00403e15
  404bcc:	00403d1d 	.word	0x00403d1d

00404bd0 <main>:

static float32_t x[2*PROCESS_BUF_SIZE]; // 2*bufsize to hold past values (values are lp-filtered) 
static smpl_t workingBuffer[PROCESS_BUF_SIZE]; 

int main(void)
{
  404bd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	sysclk_init();
  404bd4:	4b8b      	ldr	r3, [pc, #556]	; (404e04 <main+0x234>)
	usart_settings.stop_bits= opt->stopbits;
  404bd6:	2400      	movs	r4, #0
  404bd8:	4e8b      	ldr	r6, [pc, #556]	; (404e08 <main+0x238>)
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  404bda:	4d8c      	ldr	r5, [pc, #560]	; (404e0c <main+0x23c>)
  404bdc:	f8df 92d4 	ldr.w	r9, [pc, #724]	; 404eb4 <main+0x2e4>
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  404be0:	f8df 82d4 	ldr.w	r8, [pc, #724]	; 404eb8 <main+0x2e8>
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  404be4:	4f8a      	ldr	r7, [pc, #552]	; (404e10 <main+0x240>)
  404be6:	f8df a2d4 	ldr.w	sl, [pc, #724]	; 404ebc <main+0x2ec>
  404bea:	f8df b2d4 	ldr.w	fp, [pc, #724]	; 404ec0 <main+0x2f0>
{
  404bee:	ed2d 8b06 	vpush	{d8-d10}
  404bf2:	b08d      	sub	sp, #52	; 0x34
		dest[j] = 0;
  404bf4:	ed9f 9a87 	vldr	s18, [pc, #540]	; 404e14 <main+0x244>
	sysclk_init();
  404bf8:	4798      	blx	r3
	board_init();
  404bfa:	4b87      	ldr	r3, [pc, #540]	; (404e18 <main+0x248>)
  404bfc:	4798      	blx	r3
	lcd_init(); 
  404bfe:	4b87      	ldr	r3, [pc, #540]	; (404e1c <main+0x24c>)
  404c00:	4798      	blx	r3
	audio_init();
  404c02:	4b87      	ldr	r3, [pc, #540]	; (404e20 <main+0x250>)
  404c04:	4798      	blx	r3
  404c06:	200e      	movs	r0, #14
  404c08:	47b0      	blx	r6
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  404c0a:	f8df c2b8 	ldr.w	ip, [pc, #696]	; 404ec4 <main+0x2f4>
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  404c0e:	f8df e2b8 	ldr.w	lr, [pc, #696]	; 404ec8 <main+0x2f8>
	usart_settings.baudrate = opt->baudrate;
  404c12:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
	usart_settings.char_length = opt->charlength;
  404c16:	22c0      	movs	r2, #192	; 0xc0
	usart_settings.parity_type = opt->paritytype;
  404c18:	f44f 6300 	mov.w	r3, #2048	; 0x800
  404c1c:	200e      	movs	r0, #14
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  404c1e:	f8cc 8000 	str.w	r8, [ip]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  404c22:	f8c7 e000 	str.w	lr, [r7]
	stdio_base = (void *)usart;
  404c26:	f8c9 5000 	str.w	r5, [r9]
	usart_settings.baudrate = opt->baudrate;
  404c2a:	9106      	str	r1, [sp, #24]
	usart_settings.char_length = opt->charlength;
  404c2c:	9207      	str	r2, [sp, #28]
	usart_settings.parity_type = opt->paritytype;
  404c2e:	9308      	str	r3, [sp, #32]
	usart_settings.stop_bits= opt->stopbits;
  404c30:	9409      	str	r4, [sp, #36]	; 0x24
	usart_settings.channel_mode= US_MR_CHMODE_NORMAL;
  404c32:	940a      	str	r4, [sp, #40]	; 0x28
  404c34:	47b0      	blx	r6
		usart_init_rs232(p_usart, &usart_settings,
  404c36:	4a7b      	ldr	r2, [pc, #492]	; (404e24 <main+0x254>)
  404c38:	a906      	add	r1, sp, #24
  404c3a:	4628      	mov	r0, r5
  404c3c:	4b7a      	ldr	r3, [pc, #488]	; (404e28 <main+0x258>)
  404c3e:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  404c40:	4e7a      	ldr	r6, [pc, #488]	; (404e2c <main+0x25c>)
		usart_enable_tx(p_usart);
  404c42:	4628      	mov	r0, r5
  404c44:	4b7a      	ldr	r3, [pc, #488]	; (404e30 <main+0x260>)
  404c46:	4798      	blx	r3
		usart_enable_rx(p_usart);
  404c48:	4628      	mov	r0, r5
  404c4a:	4b7a      	ldr	r3, [pc, #488]	; (404e34 <main+0x264>)
  404c4c:	4798      	blx	r3
  404c4e:	6833      	ldr	r3, [r6, #0]
  404c50:	4621      	mov	r1, r4
  404c52:	4d79      	ldr	r5, [pc, #484]	; (404e38 <main+0x268>)
  404c54:	6898      	ldr	r0, [r3, #8]
  404c56:	47a8      	blx	r5
	setbuf(stdin, NULL);
  404c58:	6833      	ldr	r3, [r6, #0]
  404c5a:	4621      	mov	r1, r4
  404c5c:	4f77      	ldr	r7, [pc, #476]	; (404e3c <main+0x26c>)
  404c5e:	6858      	ldr	r0, [r3, #4]
  404c60:	47a8      	blx	r5
	configure_console();
	aubio_pitchyinfast_t *yin_instance = new_aubio_pitchyinfast(PROCESS_BUF_SIZE);
  404c62:	4b77      	ldr	r3, [pc, #476]	; (404e40 <main+0x270>)
  404c64:	f44f 6080 	mov.w	r0, #1024	; 0x400
  404c68:	4e76      	ldr	r6, [pc, #472]	; (404e44 <main+0x274>)
  404c6a:	4798      	blx	r3
	PSOLA_init(PROCESS_BUF_SIZE);
  404c6c:	4b76      	ldr	r3, [pc, #472]	; (404e48 <main+0x278>)
	aubio_pitchyinfast_t *yin_instance = new_aubio_pitchyinfast(PROCESS_BUF_SIZE);
  404c6e:	4680      	mov	r8, r0
	PSOLA_init(PROCESS_BUF_SIZE);
  404c70:	f44f 6080 	mov.w	r0, #1024	; 0x400
  404c74:	4798      	blx	r3
	gfx_draw_filled_rect(0, 0, gfx_get_width(), gfx_get_height(), GFX_COLOR_BLACK);
  404c76:	4b75      	ldr	r3, [pc, #468]	; (404e4c <main+0x27c>)
  404c78:	4798      	blx	r3
  404c7a:	4605      	mov	r5, r0
  404c7c:	4b74      	ldr	r3, [pc, #464]	; (404e50 <main+0x280>)
  404c7e:	4798      	blx	r3
  404c80:	462a      	mov	r2, r5
  404c82:	4603      	mov	r3, r0
  404c84:	4621      	mov	r1, r4
  404c86:	4620      	mov	r0, r4
  404c88:	9400      	str	r4, [sp, #0]
  404c8a:	4c72      	ldr	r4, [pc, #456]	; (404e54 <main+0x284>)
  404c8c:	47a0      	blx	r4

	//q15_t input15[PROCESS_BUF_SIZE];
	uint32_t i;
	float32_t power;
	cvec_t *mags_and_phases = new_cvec(PROCESS_BUF_SIZE); 
  404c8e:	4b72      	ldr	r3, [pc, #456]	; (404e58 <main+0x288>)
  404c90:	f44f 6080 	mov.w	r0, #1024	; 0x400
		dest[j] = 0;
  404c94:	eddf aa71 	vldr	s21, [pc, #452]	; 404e5c <main+0x28c>
	cvec_t *mags_and_phases = new_cvec(PROCESS_BUF_SIZE); 
  404c98:	4798      	blx	r3
	printf("Hellooooo\n\n\n\r"); 
  404c9a:	4b71      	ldr	r3, [pc, #452]	; (404e60 <main+0x290>)
	cvec_t *mags_and_phases = new_cvec(PROCESS_BUF_SIZE); 
  404c9c:	4681      	mov	r9, r0
	printf("Hellooooo\n\n\n\r"); 
  404c9e:	4871      	ldr	r0, [pc, #452]	; (404e64 <main+0x294>)
				// debug frequency detection
				sprintf(str, "%f", inputPitch);
				printf("Freq: %s\n\r", str);
							
				float32_t desiredPitch = 440.0;
				float32_t pitch_shift = 1 + (inputPitch - desiredPitch)/desiredPitch;
  404ca0:	ed9f aa71 	vldr	s20, [pc, #452]	; 404e68 <main+0x298>
  404ca4:	eddf 9a71 	vldr	s19, [pc, #452]	; 404e6c <main+0x29c>
			// TODO: interpolate 
		
			int processIdx = 0;
			for(i = 0; i < IO_BUF_SIZE; i+=4)
			{
				outBuffer[i] = (uint16_t)(int16_t)(processBuffer[processIdx++] * INT16_MAX); // sound in / sound out
  404ca8:	ed9f 8a71 	vldr	s16, [pc, #452]	; 404e70 <main+0x2a0>
  404cac:	4d71      	ldr	r5, [pc, #452]	; (404e74 <main+0x2a4>)
	printf("Hellooooo\n\n\n\r"); 
  404cae:	4798      	blx	r3
		if (dataReceived)
  404cb0:	f89b 3000 	ldrb.w	r3, [fp]
  404cb4:	2b00      	cmp	r3, #0
  404cb6:	d0fb      	beq.n	404cb0 <main+0xe0>
			apply_lp_filter(processBuffer, &x[PROCESS_BUF_SIZE], PROCESS_BUF_SIZE);
  404cb8:	6838      	ldr	r0, [r7, #0]
  404cba:	496f      	ldr	r1, [pc, #444]	; (404e78 <main+0x2a8>)
  404cbc:	4603      	mov	r3, r0
		dest[j] = src[j];
  404cbe:	f853 2b04 	ldr.w	r2, [r3], #4
  404cc2:	f841 2b04 	str.w	r2, [r1], #4
	for (j = 0; j < lp_filter_length; j++)
  404cc6:	458a      	cmp	sl, r1
  404cc8:	d1f9      	bne.n	404cbe <main+0xee>
  404cca:	3040      	adds	r0, #64	; 0x40
  404ccc:	4b6b      	ldr	r3, [pc, #428]	; (404e7c <main+0x2ac>)
		dest[j] = 0;
  404cce:	4602      	mov	r2, r0
  404cd0:	eeb0 7a6a 	vmov.f32	s14, s21
  404cd4:	eddf 7a4f 	vldr	s15, [pc, #316]	; 404e14 <main+0x244>
  404cd8:	ed81 9a00 	vstr	s18, [r1]
  404cdc:	e001      	b.n	404ce2 <main+0x112>
  404cde:	ecb3 7a01 	vldmia	r3!, {s14}
			dest[j] += src[j-i]*lp_filter[i];
  404ce2:	ed72 6a01 	vldmdb	r2!, {s13}
		for(i = 0; i < lp_filter_length; i++)
  404ce6:	429e      	cmp	r6, r3
			dest[j] += src[j-i]*lp_filter[i];
  404ce8:	eee6 7a87 	vfma.f32	s15, s13, s14
  404cec:	edc1 7a00 	vstr	s15, [r1]
		for(i = 0; i < lp_filter_length; i++)
  404cf0:	d1f5      	bne.n	404cde <main+0x10e>
  404cf2:	3104      	adds	r1, #4
	for(j = lp_filter_length; j < sig_length; j++)
  404cf4:	4b62      	ldr	r3, [pc, #392]	; (404e80 <main+0x2b0>)
  404cf6:	3004      	adds	r0, #4
  404cf8:	428b      	cmp	r3, r1
  404cfa:	d1e7      	bne.n	404ccc <main+0xfc>
			workingVec.length = PROCESS_BUF_SIZE;
  404cfc:	f44f 6380 	mov.w	r3, #1024	; 0x400
			workingVec.data = workingBuffer; 
  404d00:	4a60      	ldr	r2, [pc, #384]	; (404e84 <main+0x2b4>)
  404d02:	461c      	mov	r4, r3
  404d04:	9205      	str	r2, [sp, #20]
			workingVec.length = PROCESS_BUF_SIZE;
  404d06:	9304      	str	r3, [sp, #16]
				for (i = 0; i < workingVec.length; i++)
  404d08:	b1ac      	cbz	r4, 404d36 <main+0x166>
  404d0a:	2300      	movs	r3, #0
  404d0c:	4a5e      	ldr	r2, [pc, #376]	; (404e88 <main+0x2b8>)
  404d0e:	eeb0 7a49 	vmov.f32	s14, s18
  404d12:	495e      	ldr	r1, [pc, #376]	; (404e8c <main+0x2bc>)
  404d14:	461c      	mov	r4, r3
  404d16:	e001      	b.n	404d1c <main+0x14c>
  404d18:	ecb1 7a01 	vldmia	r1!, {s14}
					workingVec.data[i] = temp_input[i] * hanning[i];
  404d1c:	ecf2 7a01 	vldmia	r2!, {s15}
  404d20:	9b05      	ldr	r3, [sp, #20]
  404d22:	ee67 7a87 	vmul.f32	s15, s15, s14
  404d26:	eb03 0384 	add.w	r3, r3, r4, lsl #2
				for (i = 0; i < workingVec.length; i++)
  404d2a:	3401      	adds	r4, #1
					workingVec.data[i] = temp_input[i] * hanning[i];
  404d2c:	edc3 7a00 	vstr	s15, [r3]
				for (i = 0; i < workingVec.length; i++)
  404d30:	9b04      	ldr	r3, [sp, #16]
  404d32:	42a3      	cmp	r3, r4
  404d34:	d8f0      	bhi.n	404d18 <main+0x148>
				aubio_fft_do_complex(yin_instance->fft, &workingVec, yin_instance->samples_fft);
  404d36:	f8d8 2018 	ldr.w	r2, [r8, #24]
  404d3a:	a904      	add	r1, sp, #16
  404d3c:	f8d8 0020 	ldr.w	r0, [r8, #32]
  404d40:	4b53      	ldr	r3, [pc, #332]	; (404e90 <main+0x2c0>)
  404d42:	9403      	str	r4, [sp, #12]
  404d44:	4798      	blx	r3
				aubio_fft_get_spectrum((const fvec_t *)yin_instance->samples_fft, mags_and_phases);
  404d46:	4649      	mov	r1, r9
  404d48:	f8d8 0018 	ldr.w	r0, [r8, #24]
  404d4c:	4b51      	ldr	r3, [pc, #324]	; (404e94 <main+0x2c4>)
  404d4e:	4798      	blx	r3
				float32_t inputPitch = aubio_pitchyinfast_do(yin_instance, &workingVec);
  404d50:	a904      	add	r1, sp, #16
  404d52:	4b51      	ldr	r3, [pc, #324]	; (404e98 <main+0x2c8>)
  404d54:	4640      	mov	r0, r8
  404d56:	4798      	blx	r3
				sprintf(str, "%f", inputPitch);
  404d58:	4b50      	ldr	r3, [pc, #320]	; (404e9c <main+0x2cc>)
				float32_t inputPitch = aubio_pitchyinfast_do(yin_instance, &workingVec);
  404d5a:	ee08 0a90 	vmov	s17, r0
				sprintf(str, "%f", inputPitch);
  404d5e:	4c50      	ldr	r4, [pc, #320]	; (404ea0 <main+0x2d0>)
  404d60:	4798      	blx	r3
  404d62:	4602      	mov	r2, r0
  404d64:	460b      	mov	r3, r1
  404d66:	a806      	add	r0, sp, #24
  404d68:	494e      	ldr	r1, [pc, #312]	; (404ea4 <main+0x2d4>)
				float32_t pitch_shift = 1 + (inputPitch - desiredPitch)/desiredPitch;
  404d6a:	ee78 8aca 	vsub.f32	s17, s17, s20
				sprintf(str, "%f", inputPitch);
  404d6e:	47a0      	blx	r4
				printf("Freq: %s\n\r", str);
  404d70:	a906      	add	r1, sp, #24
  404d72:	4b3b      	ldr	r3, [pc, #236]	; (404e60 <main+0x290>)
  404d74:	484c      	ldr	r0, [pc, #304]	; (404ea8 <main+0x2d8>)
  404d76:	4798      	blx	r3
				float32_t pitch_shift = 1 + (inputPitch - desiredPitch)/desiredPitch;
  404d78:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
				pitch_shift_do((float32_t *)&processBuffer, pitch_shift, mags_and_phases);
  404d7c:	4b4b      	ldr	r3, [pc, #300]	; (404eac <main+0x2dc>)
  404d7e:	464a      	mov	r2, r9
  404d80:	482e      	ldr	r0, [pc, #184]	; (404e3c <main+0x26c>)
				float32_t pitch_shift = 1 + (inputPitch - desiredPitch)/desiredPitch;
  404d82:	eee8 7aa9 	vfma.f32	s15, s17, s19
				pitch_shift_do((float32_t *)&processBuffer, pitch_shift, mags_and_phases);
  404d86:	eefc 7ae7 	vcvt.u32.f32	s15, s15
  404d8a:	ee17 1a90 	vmov	r1, s15
  404d8e:	4798      	blx	r3
			for (i = 0; i < 1; i++)
  404d90:	9b03      	ldr	r3, [sp, #12]
  404d92:	3301      	adds	r3, #1
  404d94:	d101      	bne.n	404d9a <main+0x1ca>
  404d96:	9c04      	ldr	r4, [sp, #16]
  404d98:	e7b6      	b.n	404d08 <main+0x138>
			memmove(&x[0], &x[PROCESS_BUF_SIZE], PROCESS_BUF_SIZE*sizeof(float32_t)); 
  404d9a:	4937      	ldr	r1, [pc, #220]	; (404e78 <main+0x2a8>)
  404d9c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  404da0:	4b43      	ldr	r3, [pc, #268]	; (404eb0 <main+0x2e0>)
  404da2:	f5a1 5080 	sub.w	r0, r1, #4096	; 0x1000
  404da6:	4798      	blx	r3
  404da8:	2202      	movs	r2, #2
			for(i = 0; i < IO_BUF_SIZE; i+=4)
  404daa:	2300      	movs	r3, #0
				outBuffer[i] = (uint16_t)(int16_t)(processBuffer[processIdx++] * INT16_MAX); // sound in / sound out
  404dac:	6838      	ldr	r0, [r7, #0]
				outBuffer[i+1] = outBuffer[i];
				outBuffer[i+2] = outBuffer[i];
  404dae:	f102 0e02 	add.w	lr, r2, #2
				outBuffer[i] = (uint16_t)(int16_t)(processBuffer[processIdx++] * INT16_MAX); // sound in / sound out
  404db2:	682c      	ldr	r4, [r5, #0]
				outBuffer[i+3] = outBuffer[i];
  404db4:	1d11      	adds	r1, r2, #4
				outBuffer[i] = (uint16_t)(int16_t)(processBuffer[processIdx++] * INT16_MAX); // sound in / sound out
  404db6:	4418      	add	r0, r3
  404db8:	edd0 7a00 	vldr	s15, [r0]
  404dbc:	ee67 7a88 	vmul.f32	s15, s15, s16
  404dc0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
  404dc4:	edcd 7a03 	vstr	s15, [sp, #12]
  404dc8:	f8bd 000c 	ldrh.w	r0, [sp, #12]
  404dcc:	f824 0013 	strh.w	r0, [r4, r3, lsl #1]
				outBuffer[i+1] = outBuffer[i];
  404dd0:	682c      	ldr	r4, [r5, #0]
  404dd2:	f834 0013 	ldrh.w	r0, [r4, r3, lsl #1]
  404dd6:	b280      	uxth	r0, r0
  404dd8:	52a0      	strh	r0, [r4, r2]
				outBuffer[i+3] = outBuffer[i];
  404dda:	3208      	adds	r2, #8
				outBuffer[i+2] = outBuffer[i];
  404ddc:	f8d5 c000 	ldr.w	ip, [r5]
  404de0:	f83c 4013 	ldrh.w	r4, [ip, r3, lsl #1]
  404de4:	b2a4      	uxth	r4, r4
  404de6:	f82c 400e 	strh.w	r4, [ip, lr]
				outBuffer[i+3] = outBuffer[i];
  404dea:	682c      	ldr	r4, [r5, #0]
  404dec:	f834 0013 	ldrh.w	r0, [r4, r3, lsl #1]
			for(i = 0; i < IO_BUF_SIZE; i+=4)
  404df0:	3304      	adds	r3, #4
				outBuffer[i+3] = outBuffer[i];
  404df2:	b280      	uxth	r0, r0
			for(i = 0; i < IO_BUF_SIZE; i+=4)
  404df4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
				outBuffer[i+3] = outBuffer[i];
  404df8:	5260      	strh	r0, [r4, r1]
			for(i = 0; i < IO_BUF_SIZE; i+=4)
  404dfa:	d1d7      	bne.n	404dac <main+0x1dc>
			}
			dataReceived = false; 
  404dfc:	2300      	movs	r3, #0
  404dfe:	f88b 3000 	strb.w	r3, [fp]
  404e02:	e755      	b.n	404cb0 <main+0xe0>
  404e04:	00403e81 	.word	0x00403e81
  404e08:	004046c9 	.word	0x004046c9
  404e0c:	40028000 	.word	0x40028000
  404e10:	20418da0 	.word	0x20418da0
  404e14:	00000000 	.word	0x00000000
  404e18:	00403ef1 	.word	0x00403ef1
  404e1c:	004008a9 	.word	0x004008a9
  404e20:	004003b9 	.word	0x004003b9
  404e24:	08f0d180 	.word	0x08f0d180
  404e28:	00403da1 	.word	0x00403da1
  404e2c:	20400028 	.word	0x20400028
  404e30:	00403e05 	.word	0x00403e05
  404e34:	00403e0d 	.word	0x00403e0d
  404e38:	00408d5d 	.word	0x00408d5d
  404e3c:	2040001c 	.word	0x2040001c
  404e40:	00402b95 	.word	0x00402b95
  404e44:	0040f050 	.word	0x0040f050
  404e48:	00400a69 	.word	0x00400a69
  404e4c:	0040075d 	.word	0x0040075d
  404e50:	00400769 	.word	0x00400769
  404e54:	00400775 	.word	0x00400775
  404e58:	00400df5 	.word	0x00400df5
  404e5c:	3b30f27c 	.word	0x3b30f27c
  404e60:	004084e1 	.word	0x004084e1
  404e64:	0040f050 	.word	0x0040f050
  404e68:	43dc0000 	.word	0x43dc0000
  404e6c:	3b14f209 	.word	0x3b14f209
  404e70:	46fffe00 	.word	0x46fffe00
  404e74:	20400014 	.word	0x20400014
  404e78:	2040dd60 	.word	0x2040dd60
  404e7c:	0040f018 	.word	0x0040f018
  404e80:	2040ed60 	.word	0x2040ed60
  404e84:	2040bd60 	.word	0x2040bd60
  404e88:	2040d160 	.word	0x2040d160
  404e8c:	0040e018 	.word	0x0040e018
  404e90:	00400eb1 	.word	0x00400eb1
  404e94:	00401121 	.word	0x00401121
  404e98:	00402bf1 	.word	0x00402bf1
  404e9c:	00407761 	.word	0x00407761
  404ea0:	00408efd 	.word	0x00408efd
  404ea4:	0040f060 	.word	0x0040f060
  404ea8:	0040f064 	.word	0x0040f064
  404eac:	00400ae9 	.word	0x00400ae9
  404eb0:	00408a89 	.word	0x00408a89
  404eb4:	20418da8 	.word	0x20418da8
  404eb8:	00404b01 	.word	0x00404b01
  404ebc:	2040dd9c 	.word	0x2040dd9c
  404ec0:	204009f4 	.word	0x204009f4
  404ec4:	20418da4 	.word	0x20418da4
  404ec8:	00404a25 	.word	0x00404a25

00404ecc <cos>:
  404ecc:	b530      	push	{r4, r5, lr}
  404ece:	4a22      	ldr	r2, [pc, #136]	; (404f58 <cos+0x8c>)
  404ed0:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
  404ed4:	4293      	cmp	r3, r2
  404ed6:	b087      	sub	sp, #28
  404ed8:	dd1b      	ble.n	404f12 <cos+0x46>
  404eda:	4a20      	ldr	r2, [pc, #128]	; (404f5c <cos+0x90>)
  404edc:	4293      	cmp	r3, r2
  404ede:	dd05      	ble.n	404eec <cos+0x20>
  404ee0:	4602      	mov	r2, r0
  404ee2:	460b      	mov	r3, r1
  404ee4:	f002 fadc 	bl	4074a0 <__aeabi_dsub>
  404ee8:	b007      	add	sp, #28
  404eea:	bd30      	pop	{r4, r5, pc}
  404eec:	aa02      	add	r2, sp, #8
  404eee:	f000 f8f7 	bl	4050e0 <__ieee754_rem_pio2>
  404ef2:	f000 0303 	and.w	r3, r0, #3
  404ef6:	2b01      	cmp	r3, #1
  404ef8:	d01a      	beq.n	404f30 <cos+0x64>
  404efa:	2b02      	cmp	r3, #2
  404efc:	d00f      	beq.n	404f1e <cos+0x52>
  404efe:	b31b      	cbz	r3, 404f48 <cos+0x7c>
  404f00:	2401      	movs	r4, #1
  404f02:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  404f06:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  404f0a:	9400      	str	r4, [sp, #0]
  404f0c:	f001 fa78 	bl	406400 <__kernel_sin>
  404f10:	e7ea      	b.n	404ee8 <cos+0x1c>
  404f12:	2200      	movs	r2, #0
  404f14:	2300      	movs	r3, #0
  404f16:	f000 fd07 	bl	405928 <__kernel_cos>
  404f1a:	b007      	add	sp, #28
  404f1c:	bd30      	pop	{r4, r5, pc}
  404f1e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  404f22:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  404f26:	f000 fcff 	bl	405928 <__kernel_cos>
  404f2a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
  404f2e:	e7db      	b.n	404ee8 <cos+0x1c>
  404f30:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
  404f34:	9300      	str	r3, [sp, #0]
  404f36:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  404f3a:	4622      	mov	r2, r4
  404f3c:	462b      	mov	r3, r5
  404f3e:	f001 fa5f 	bl	406400 <__kernel_sin>
  404f42:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
  404f46:	e7cf      	b.n	404ee8 <cos+0x1c>
  404f48:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  404f4c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  404f50:	f000 fcea 	bl	405928 <__kernel_cos>
  404f54:	e7c8      	b.n	404ee8 <cos+0x1c>
  404f56:	bf00      	nop
  404f58:	3fe921fb 	.word	0x3fe921fb
  404f5c:	7fefffff 	.word	0x7fefffff

00404f60 <sin>:
  404f60:	b530      	push	{r4, r5, lr}
  404f62:	4a1f      	ldr	r2, [pc, #124]	; (404fe0 <sin+0x80>)
  404f64:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
  404f68:	4293      	cmp	r3, r2
  404f6a:	b087      	sub	sp, #28
  404f6c:	dd1b      	ble.n	404fa6 <sin+0x46>
  404f6e:	4a1d      	ldr	r2, [pc, #116]	; (404fe4 <sin+0x84>)
  404f70:	4293      	cmp	r3, r2
  404f72:	dd05      	ble.n	404f80 <sin+0x20>
  404f74:	4602      	mov	r2, r0
  404f76:	460b      	mov	r3, r1
  404f78:	f002 fa92 	bl	4074a0 <__aeabi_dsub>
  404f7c:	b007      	add	sp, #28
  404f7e:	bd30      	pop	{r4, r5, pc}
  404f80:	aa02      	add	r2, sp, #8
  404f82:	f000 f8ad 	bl	4050e0 <__ieee754_rem_pio2>
  404f86:	f000 0003 	and.w	r0, r0, #3
  404f8a:	2801      	cmp	r0, #1
  404f8c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  404f90:	d01a      	beq.n	404fc8 <sin+0x68>
  404f92:	2802      	cmp	r0, #2
  404f94:	d00f      	beq.n	404fb6 <sin+0x56>
  404f96:	b1e0      	cbz	r0, 404fd2 <sin+0x72>
  404f98:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  404f9c:	f000 fcc4 	bl	405928 <__kernel_cos>
  404fa0:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
  404fa4:	e7ea      	b.n	404f7c <sin+0x1c>
  404fa6:	2300      	movs	r3, #0
  404fa8:	9300      	str	r3, [sp, #0]
  404faa:	2200      	movs	r2, #0
  404fac:	2300      	movs	r3, #0
  404fae:	f001 fa27 	bl	406400 <__kernel_sin>
  404fb2:	b007      	add	sp, #28
  404fb4:	bd30      	pop	{r4, r5, pc}
  404fb6:	2401      	movs	r4, #1
  404fb8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  404fbc:	9400      	str	r4, [sp, #0]
  404fbe:	f001 fa1f 	bl	406400 <__kernel_sin>
  404fc2:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
  404fc6:	e7d9      	b.n	404f7c <sin+0x1c>
  404fc8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  404fcc:	f000 fcac 	bl	405928 <__kernel_cos>
  404fd0:	e7d4      	b.n	404f7c <sin+0x1c>
  404fd2:	2401      	movs	r4, #1
  404fd4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  404fd8:	9400      	str	r4, [sp, #0]
  404fda:	f001 fa11 	bl	406400 <__kernel_sin>
  404fde:	e7cd      	b.n	404f7c <sin+0x1c>
  404fe0:	3fe921fb 	.word	0x3fe921fb
  404fe4:	7fefffff 	.word	0x7fefffff

00404fe8 <cosf>:
  404fe8:	b500      	push	{lr}
  404fea:	4a1c      	ldr	r2, [pc, #112]	; (40505c <cosf+0x74>)
  404fec:	f020 4300 	bic.w	r3, r0, #2147483648	; 0x80000000
  404ff0:	4293      	cmp	r3, r2
  404ff2:	b083      	sub	sp, #12
  404ff4:	dd18      	ble.n	405028 <cosf+0x40>
  404ff6:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
  404ffa:	db05      	blt.n	405008 <cosf+0x20>
  404ffc:	4601      	mov	r1, r0
  404ffe:	f002 ff19 	bl	407e34 <__aeabi_fsub>
  405002:	b003      	add	sp, #12
  405004:	f85d fb04 	ldr.w	pc, [sp], #4
  405008:	4669      	mov	r1, sp
  40500a:	f000 fb1d 	bl	405648 <__ieee754_rem_pio2f>
  40500e:	f000 0203 	and.w	r2, r0, #3
  405012:	2a01      	cmp	r2, #1
  405014:	d015      	beq.n	405042 <cosf+0x5a>
  405016:	2a02      	cmp	r2, #2
  405018:	d00c      	beq.n	405034 <cosf+0x4c>
  40501a:	b1ca      	cbz	r2, 405050 <cosf+0x68>
  40501c:	2201      	movs	r2, #1
  40501e:	9901      	ldr	r1, [sp, #4]
  405020:	9800      	ldr	r0, [sp, #0]
  405022:	f001 feed 	bl	406e00 <__kernel_sinf>
  405026:	e7ec      	b.n	405002 <cosf+0x1a>
  405028:	2100      	movs	r1, #0
  40502a:	f001 fa9f 	bl	40656c <__kernel_cosf>
  40502e:	b003      	add	sp, #12
  405030:	f85d fb04 	ldr.w	pc, [sp], #4
  405034:	9901      	ldr	r1, [sp, #4]
  405036:	9800      	ldr	r0, [sp, #0]
  405038:	f001 fa98 	bl	40656c <__kernel_cosf>
  40503c:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
  405040:	e7df      	b.n	405002 <cosf+0x1a>
  405042:	9901      	ldr	r1, [sp, #4]
  405044:	9800      	ldr	r0, [sp, #0]
  405046:	f001 fedb 	bl	406e00 <__kernel_sinf>
  40504a:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
  40504e:	e7d8      	b.n	405002 <cosf+0x1a>
  405050:	9901      	ldr	r1, [sp, #4]
  405052:	9800      	ldr	r0, [sp, #0]
  405054:	f001 fa8a 	bl	40656c <__kernel_cosf>
  405058:	e7d3      	b.n	405002 <cosf+0x1a>
  40505a:	bf00      	nop
  40505c:	3f490fd8 	.word	0x3f490fd8

00405060 <sinf>:
  405060:	b500      	push	{lr}
  405062:	4a1d      	ldr	r2, [pc, #116]	; (4050d8 <sinf+0x78>)
  405064:	f020 4300 	bic.w	r3, r0, #2147483648	; 0x80000000
  405068:	4293      	cmp	r3, r2
  40506a:	b083      	sub	sp, #12
  40506c:	dd19      	ble.n	4050a2 <sinf+0x42>
  40506e:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
  405072:	db05      	blt.n	405080 <sinf+0x20>
  405074:	4601      	mov	r1, r0
  405076:	f002 fedd 	bl	407e34 <__aeabi_fsub>
  40507a:	b003      	add	sp, #12
  40507c:	f85d fb04 	ldr.w	pc, [sp], #4
  405080:	4669      	mov	r1, sp
  405082:	f000 fae1 	bl	405648 <__ieee754_rem_pio2f>
  405086:	f000 0003 	and.w	r0, r0, #3
  40508a:	2801      	cmp	r0, #1
  40508c:	d018      	beq.n	4050c0 <sinf+0x60>
  40508e:	2802      	cmp	r0, #2
  405090:	d00e      	beq.n	4050b0 <sinf+0x50>
  405092:	b1d0      	cbz	r0, 4050ca <sinf+0x6a>
  405094:	9901      	ldr	r1, [sp, #4]
  405096:	9800      	ldr	r0, [sp, #0]
  405098:	f001 fa68 	bl	40656c <__kernel_cosf>
  40509c:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
  4050a0:	e7eb      	b.n	40507a <sinf+0x1a>
  4050a2:	2200      	movs	r2, #0
  4050a4:	2100      	movs	r1, #0
  4050a6:	f001 feab 	bl	406e00 <__kernel_sinf>
  4050aa:	b003      	add	sp, #12
  4050ac:	f85d fb04 	ldr.w	pc, [sp], #4
  4050b0:	2201      	movs	r2, #1
  4050b2:	9901      	ldr	r1, [sp, #4]
  4050b4:	9800      	ldr	r0, [sp, #0]
  4050b6:	f001 fea3 	bl	406e00 <__kernel_sinf>
  4050ba:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
  4050be:	e7dc      	b.n	40507a <sinf+0x1a>
  4050c0:	9901      	ldr	r1, [sp, #4]
  4050c2:	9800      	ldr	r0, [sp, #0]
  4050c4:	f001 fa52 	bl	40656c <__kernel_cosf>
  4050c8:	e7d7      	b.n	40507a <sinf+0x1a>
  4050ca:	2201      	movs	r2, #1
  4050cc:	9901      	ldr	r1, [sp, #4]
  4050ce:	9800      	ldr	r0, [sp, #0]
  4050d0:	f001 fe96 	bl	406e00 <__kernel_sinf>
  4050d4:	e7d1      	b.n	40507a <sinf+0x1a>
  4050d6:	bf00      	nop
  4050d8:	3f490fd8 	.word	0x3f490fd8

004050dc <atan2f>:
  4050dc:	f000 ba22 	b.w	405524 <__ieee754_atan2f>

004050e0 <__ieee754_rem_pio2>:
  4050e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4050e4:	4e9a      	ldr	r6, [pc, #616]	; (405350 <__ieee754_rem_pio2+0x270>)
  4050e6:	f021 4700 	bic.w	r7, r1, #2147483648	; 0x80000000
  4050ea:	42b7      	cmp	r7, r6
  4050ec:	b091      	sub	sp, #68	; 0x44
  4050ee:	f340 808e 	ble.w	40520e <__ieee754_rem_pio2+0x12e>
  4050f2:	4692      	mov	sl, r2
  4050f4:	4a97      	ldr	r2, [pc, #604]	; (405354 <__ieee754_rem_pio2+0x274>)
  4050f6:	4297      	cmp	r7, r2
  4050f8:	460c      	mov	r4, r1
  4050fa:	dc26      	bgt.n	40514a <__ieee754_rem_pio2+0x6a>
  4050fc:	2900      	cmp	r1, #0
  4050fe:	a38a      	add	r3, pc, #552	; (adr r3, 405328 <__ieee754_rem_pio2+0x248>)
  405100:	e9d3 2300 	ldrd	r2, r3, [r3]
  405104:	f340 81b4 	ble.w	405470 <__ieee754_rem_pio2+0x390>
  405108:	f002 f9ca 	bl	4074a0 <__aeabi_dsub>
  40510c:	4b92      	ldr	r3, [pc, #584]	; (405358 <__ieee754_rem_pio2+0x278>)
  40510e:	429f      	cmp	r7, r3
  405110:	4604      	mov	r4, r0
  405112:	460d      	mov	r5, r1
  405114:	f000 8090 	beq.w	405238 <__ieee754_rem_pio2+0x158>
  405118:	a385      	add	r3, pc, #532	; (adr r3, 405330 <__ieee754_rem_pio2+0x250>)
  40511a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40511e:	f002 f9bf 	bl	4074a0 <__aeabi_dsub>
  405122:	4602      	mov	r2, r0
  405124:	460b      	mov	r3, r1
  405126:	e9ca 2300 	strd	r2, r3, [sl]
  40512a:	4620      	mov	r0, r4
  40512c:	4629      	mov	r1, r5
  40512e:	f002 f9b7 	bl	4074a0 <__aeabi_dsub>
  405132:	a37f      	add	r3, pc, #508	; (adr r3, 405330 <__ieee754_rem_pio2+0x250>)
  405134:	e9d3 2300 	ldrd	r2, r3, [r3]
  405138:	f002 f9b2 	bl	4074a0 <__aeabi_dsub>
  40513c:	2501      	movs	r5, #1
  40513e:	e9ca 0102 	strd	r0, r1, [sl, #8]
  405142:	4628      	mov	r0, r5
  405144:	b011      	add	sp, #68	; 0x44
  405146:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40514a:	4a84      	ldr	r2, [pc, #528]	; (40535c <__ieee754_rem_pio2+0x27c>)
  40514c:	4297      	cmp	r7, r2
  40514e:	f340 8090 	ble.w	405272 <__ieee754_rem_pio2+0x192>
  405152:	4a83      	ldr	r2, [pc, #524]	; (405360 <__ieee754_rem_pio2+0x280>)
  405154:	4297      	cmp	r7, r2
  405156:	dc65      	bgt.n	405224 <__ieee754_rem_pio2+0x144>
  405158:	153d      	asrs	r5, r7, #20
  40515a:	f2a5 4516 	subw	r5, r5, #1046	; 0x416
  40515e:	eba7 5305 	sub.w	r3, r7, r5, lsl #20
  405162:	4619      	mov	r1, r3
  405164:	461f      	mov	r7, r3
  405166:	4606      	mov	r6, r0
  405168:	f002 fde8 	bl	407d3c <__aeabi_d2iz>
  40516c:	f002 fae6 	bl	40773c <__aeabi_i2d>
  405170:	4680      	mov	r8, r0
  405172:	4689      	mov	r9, r1
  405174:	4602      	mov	r2, r0
  405176:	460b      	mov	r3, r1
  405178:	4630      	mov	r0, r6
  40517a:	4639      	mov	r1, r7
  40517c:	e9cd 890a 	strd	r8, r9, [sp, #40]	; 0x28
  405180:	f002 f98e 	bl	4074a0 <__aeabi_dsub>
  405184:	2200      	movs	r2, #0
  405186:	4b77      	ldr	r3, [pc, #476]	; (405364 <__ieee754_rem_pio2+0x284>)
  405188:	f002 fb3e 	bl	407808 <__aeabi_dmul>
  40518c:	4689      	mov	r9, r1
  40518e:	4680      	mov	r8, r0
  405190:	f002 fdd4 	bl	407d3c <__aeabi_d2iz>
  405194:	f002 fad2 	bl	40773c <__aeabi_i2d>
  405198:	4602      	mov	r2, r0
  40519a:	460b      	mov	r3, r1
  40519c:	4606      	mov	r6, r0
  40519e:	460f      	mov	r7, r1
  4051a0:	4640      	mov	r0, r8
  4051a2:	4649      	mov	r1, r9
  4051a4:	e9cd 670c 	strd	r6, r7, [sp, #48]	; 0x30
  4051a8:	f002 f97a 	bl	4074a0 <__aeabi_dsub>
  4051ac:	2200      	movs	r2, #0
  4051ae:	4b6d      	ldr	r3, [pc, #436]	; (405364 <__ieee754_rem_pio2+0x284>)
  4051b0:	f002 fb2a 	bl	407808 <__aeabi_dmul>
  4051b4:	2200      	movs	r2, #0
  4051b6:	2300      	movs	r3, #0
  4051b8:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
  4051bc:	f002 fd8c 	bl	407cd8 <__aeabi_dcmpeq>
  4051c0:	2800      	cmp	r0, #0
  4051c2:	f000 8173 	beq.w	4054ac <__ieee754_rem_pio2+0x3cc>
  4051c6:	2300      	movs	r3, #0
  4051c8:	4630      	mov	r0, r6
  4051ca:	4639      	mov	r1, r7
  4051cc:	2200      	movs	r2, #0
  4051ce:	f002 fd83 	bl	407cd8 <__aeabi_dcmpeq>
  4051d2:	2800      	cmp	r0, #0
  4051d4:	bf14      	ite	ne
  4051d6:	2301      	movne	r3, #1
  4051d8:	2302      	moveq	r3, #2
  4051da:	4a63      	ldr	r2, [pc, #396]	; (405368 <__ieee754_rem_pio2+0x288>)
  4051dc:	9201      	str	r2, [sp, #4]
  4051de:	2102      	movs	r1, #2
  4051e0:	462a      	mov	r2, r5
  4051e2:	9100      	str	r1, [sp, #0]
  4051e4:	a80a      	add	r0, sp, #40	; 0x28
  4051e6:	4651      	mov	r1, sl
  4051e8:	f000 fcc2 	bl	405b70 <__kernel_rem_pio2>
  4051ec:	2c00      	cmp	r4, #0
  4051ee:	4605      	mov	r5, r0
  4051f0:	da14      	bge.n	40521c <__ieee754_rem_pio2+0x13c>
  4051f2:	f8da 2004 	ldr.w	r2, [sl, #4]
  4051f6:	f8da 300c 	ldr.w	r3, [sl, #12]
  4051fa:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
  4051fe:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
  405202:	4245      	negs	r5, r0
  405204:	f8ca 2004 	str.w	r2, [sl, #4]
  405208:	f8ca 300c 	str.w	r3, [sl, #12]
  40520c:	e006      	b.n	40521c <__ieee754_rem_pio2+0x13c>
  40520e:	e9c2 0100 	strd	r0, r1, [r2]
  405212:	2500      	movs	r5, #0
  405214:	2400      	movs	r4, #0
  405216:	e9c2 4502 	strd	r4, r5, [r2, #8]
  40521a:	2500      	movs	r5, #0
  40521c:	4628      	mov	r0, r5
  40521e:	b011      	add	sp, #68	; 0x44
  405220:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405224:	4602      	mov	r2, r0
  405226:	460b      	mov	r3, r1
  405228:	f002 f93a 	bl	4074a0 <__aeabi_dsub>
  40522c:	2500      	movs	r5, #0
  40522e:	e9ca 0102 	strd	r0, r1, [sl, #8]
  405232:	e9ca 0100 	strd	r0, r1, [sl]
  405236:	e7f1      	b.n	40521c <__ieee754_rem_pio2+0x13c>
  405238:	a33f      	add	r3, pc, #252	; (adr r3, 405338 <__ieee754_rem_pio2+0x258>)
  40523a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40523e:	f002 f92f 	bl	4074a0 <__aeabi_dsub>
  405242:	a33f      	add	r3, pc, #252	; (adr r3, 405340 <__ieee754_rem_pio2+0x260>)
  405244:	e9d3 2300 	ldrd	r2, r3, [r3]
  405248:	460d      	mov	r5, r1
  40524a:	4604      	mov	r4, r0
  40524c:	f002 f928 	bl	4074a0 <__aeabi_dsub>
  405250:	4602      	mov	r2, r0
  405252:	460b      	mov	r3, r1
  405254:	e9ca 2300 	strd	r2, r3, [sl]
  405258:	4629      	mov	r1, r5
  40525a:	4620      	mov	r0, r4
  40525c:	f002 f920 	bl	4074a0 <__aeabi_dsub>
  405260:	a337      	add	r3, pc, #220	; (adr r3, 405340 <__ieee754_rem_pio2+0x260>)
  405262:	e9d3 2300 	ldrd	r2, r3, [r3]
  405266:	f002 f91b 	bl	4074a0 <__aeabi_dsub>
  40526a:	2501      	movs	r5, #1
  40526c:	e9ca 0102 	strd	r0, r1, [sl, #8]
  405270:	e7d4      	b.n	40521c <__ieee754_rem_pio2+0x13c>
  405272:	f001 fe3b 	bl	406eec <fabs>
  405276:	a334      	add	r3, pc, #208	; (adr r3, 405348 <__ieee754_rem_pio2+0x268>)
  405278:	e9d3 2300 	ldrd	r2, r3, [r3]
  40527c:	4680      	mov	r8, r0
  40527e:	4689      	mov	r9, r1
  405280:	f002 fac2 	bl	407808 <__aeabi_dmul>
  405284:	2200      	movs	r2, #0
  405286:	4b39      	ldr	r3, [pc, #228]	; (40536c <__ieee754_rem_pio2+0x28c>)
  405288:	f002 f90c 	bl	4074a4 <__adddf3>
  40528c:	f002 fd56 	bl	407d3c <__aeabi_d2iz>
  405290:	4605      	mov	r5, r0
  405292:	f002 fa53 	bl	40773c <__aeabi_i2d>
  405296:	a324      	add	r3, pc, #144	; (adr r3, 405328 <__ieee754_rem_pio2+0x248>)
  405298:	e9d3 2300 	ldrd	r2, r3, [r3]
  40529c:	e9cd 0104 	strd	r0, r1, [sp, #16]
  4052a0:	f002 fab2 	bl	407808 <__aeabi_dmul>
  4052a4:	4602      	mov	r2, r0
  4052a6:	460b      	mov	r3, r1
  4052a8:	4640      	mov	r0, r8
  4052aa:	4649      	mov	r1, r9
  4052ac:	f002 f8f8 	bl	4074a0 <__aeabi_dsub>
  4052b0:	a31f      	add	r3, pc, #124	; (adr r3, 405330 <__ieee754_rem_pio2+0x250>)
  4052b2:	e9d3 2300 	ldrd	r2, r3, [r3]
  4052b6:	4680      	mov	r8, r0
  4052b8:	4689      	mov	r9, r1
  4052ba:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4052be:	f002 faa3 	bl	407808 <__aeabi_dmul>
  4052c2:	2d1f      	cmp	r5, #31
  4052c4:	e9cd 0102 	strd	r0, r1, [sp, #8]
  4052c8:	dc54      	bgt.n	405374 <__ieee754_rem_pio2+0x294>
  4052ca:	4b29      	ldr	r3, [pc, #164]	; (405370 <__ieee754_rem_pio2+0x290>)
  4052cc:	1e6a      	subs	r2, r5, #1
  4052ce:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
  4052d2:	429f      	cmp	r7, r3
  4052d4:	d04e      	beq.n	405374 <__ieee754_rem_pio2+0x294>
  4052d6:	4602      	mov	r2, r0
  4052d8:	460b      	mov	r3, r1
  4052da:	4640      	mov	r0, r8
  4052dc:	4649      	mov	r1, r9
  4052de:	f002 f8df 	bl	4074a0 <__aeabi_dsub>
  4052e2:	4602      	mov	r2, r0
  4052e4:	460b      	mov	r3, r1
  4052e6:	e9ca 2300 	strd	r2, r3, [sl]
  4052ea:	4683      	mov	fp, r0
  4052ec:	460e      	mov	r6, r1
  4052ee:	465a      	mov	r2, fp
  4052f0:	4633      	mov	r3, r6
  4052f2:	4640      	mov	r0, r8
  4052f4:	4649      	mov	r1, r9
  4052f6:	f002 f8d3 	bl	4074a0 <__aeabi_dsub>
  4052fa:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  4052fe:	f002 f8cf 	bl	4074a0 <__aeabi_dsub>
  405302:	2c00      	cmp	r4, #0
  405304:	4602      	mov	r2, r0
  405306:	460b      	mov	r3, r1
  405308:	e9ca 2302 	strd	r2, r3, [sl, #8]
  40530c:	da86      	bge.n	40521c <__ieee754_rem_pio2+0x13c>
  40530e:	465b      	mov	r3, fp
  405310:	f106 4600 	add.w	r6, r6, #2147483648	; 0x80000000
  405314:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
  405318:	e88a 0048 	stmia.w	sl, {r3, r6}
  40531c:	f8ca 100c 	str.w	r1, [sl, #12]
  405320:	f8ca 0008 	str.w	r0, [sl, #8]
  405324:	426d      	negs	r5, r5
  405326:	e779      	b.n	40521c <__ieee754_rem_pio2+0x13c>
  405328:	54400000 	.word	0x54400000
  40532c:	3ff921fb 	.word	0x3ff921fb
  405330:	1a626331 	.word	0x1a626331
  405334:	3dd0b461 	.word	0x3dd0b461
  405338:	1a600000 	.word	0x1a600000
  40533c:	3dd0b461 	.word	0x3dd0b461
  405340:	2e037073 	.word	0x2e037073
  405344:	3ba3198a 	.word	0x3ba3198a
  405348:	6dc9c883 	.word	0x6dc9c883
  40534c:	3fe45f30 	.word	0x3fe45f30
  405350:	3fe921fb 	.word	0x3fe921fb
  405354:	4002d97b 	.word	0x4002d97b
  405358:	3ff921fb 	.word	0x3ff921fb
  40535c:	413921fb 	.word	0x413921fb
  405360:	7fefffff 	.word	0x7fefffff
  405364:	41700000 	.word	0x41700000
  405368:	0040f0f0 	.word	0x0040f0f0
  40536c:	3fe00000 	.word	0x3fe00000
  405370:	0040f070 	.word	0x0040f070
  405374:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  405378:	4640      	mov	r0, r8
  40537a:	4649      	mov	r1, r9
  40537c:	f002 f890 	bl	4074a0 <__aeabi_dsub>
  405380:	153a      	asrs	r2, r7, #20
  405382:	f3c1 530a 	ubfx	r3, r1, #20, #11
  405386:	1ad3      	subs	r3, r2, r3
  405388:	2b10      	cmp	r3, #16
  40538a:	4683      	mov	fp, r0
  40538c:	460e      	mov	r6, r1
  40538e:	9209      	str	r2, [sp, #36]	; 0x24
  405390:	e9ca 0100 	strd	r0, r1, [sl]
  405394:	ddab      	ble.n	4052ee <__ieee754_rem_pio2+0x20e>
  405396:	a358      	add	r3, pc, #352	; (adr r3, 4054f8 <__ieee754_rem_pio2+0x418>)
  405398:	e9d3 2300 	ldrd	r2, r3, [r3]
  40539c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4053a0:	f002 fa32 	bl	407808 <__aeabi_dmul>
  4053a4:	4606      	mov	r6, r0
  4053a6:	460f      	mov	r7, r1
  4053a8:	4602      	mov	r2, r0
  4053aa:	460b      	mov	r3, r1
  4053ac:	4640      	mov	r0, r8
  4053ae:	4649      	mov	r1, r9
  4053b0:	f002 f876 	bl	4074a0 <__aeabi_dsub>
  4053b4:	e9cd 0106 	strd	r0, r1, [sp, #24]
  4053b8:	4602      	mov	r2, r0
  4053ba:	460b      	mov	r3, r1
  4053bc:	4640      	mov	r0, r8
  4053be:	4649      	mov	r1, r9
  4053c0:	f002 f86e 	bl	4074a0 <__aeabi_dsub>
  4053c4:	4632      	mov	r2, r6
  4053c6:	463b      	mov	r3, r7
  4053c8:	f002 f86a 	bl	4074a0 <__aeabi_dsub>
  4053cc:	a34c      	add	r3, pc, #304	; (adr r3, 405500 <__ieee754_rem_pio2+0x420>)
  4053ce:	e9d3 2300 	ldrd	r2, r3, [r3]
  4053d2:	4606      	mov	r6, r0
  4053d4:	460f      	mov	r7, r1
  4053d6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4053da:	f002 fa15 	bl	407808 <__aeabi_dmul>
  4053de:	4632      	mov	r2, r6
  4053e0:	463b      	mov	r3, r7
  4053e2:	f002 f85d 	bl	4074a0 <__aeabi_dsub>
  4053e6:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
  4053ea:	e9cd 0102 	strd	r0, r1, [sp, #8]
  4053ee:	4602      	mov	r2, r0
  4053f0:	460b      	mov	r3, r1
  4053f2:	4640      	mov	r0, r8
  4053f4:	4649      	mov	r1, r9
  4053f6:	f002 f853 	bl	4074a0 <__aeabi_dsub>
  4053fa:	460b      	mov	r3, r1
  4053fc:	f3c1 570a 	ubfx	r7, r1, #20, #11
  405400:	460e      	mov	r6, r1
  405402:	9909      	ldr	r1, [sp, #36]	; 0x24
  405404:	1bcf      	subs	r7, r1, r7
  405406:	4602      	mov	r2, r0
  405408:	2f31      	cmp	r7, #49	; 0x31
  40540a:	4683      	mov	fp, r0
  40540c:	e9ca 2300 	strd	r2, r3, [sl]
  405410:	dd6c      	ble.n	4054ec <__ieee754_rem_pio2+0x40c>
  405412:	a33d      	add	r3, pc, #244	; (adr r3, 405508 <__ieee754_rem_pio2+0x428>)
  405414:	e9d3 2300 	ldrd	r2, r3, [r3]
  405418:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40541c:	f002 f9f4 	bl	407808 <__aeabi_dmul>
  405420:	4606      	mov	r6, r0
  405422:	460f      	mov	r7, r1
  405424:	4602      	mov	r2, r0
  405426:	460b      	mov	r3, r1
  405428:	4640      	mov	r0, r8
  40542a:	4649      	mov	r1, r9
  40542c:	e9cd 8906 	strd	r8, r9, [sp, #24]
  405430:	f002 f836 	bl	4074a0 <__aeabi_dsub>
  405434:	4602      	mov	r2, r0
  405436:	460b      	mov	r3, r1
  405438:	4680      	mov	r8, r0
  40543a:	4689      	mov	r9, r1
  40543c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
  405440:	f002 f82e 	bl	4074a0 <__aeabi_dsub>
  405444:	4632      	mov	r2, r6
  405446:	463b      	mov	r3, r7
  405448:	f002 f82a 	bl	4074a0 <__aeabi_dsub>
  40544c:	a330      	add	r3, pc, #192	; (adr r3, 405510 <__ieee754_rem_pio2+0x430>)
  40544e:	e9d3 2300 	ldrd	r2, r3, [r3]
  405452:	4606      	mov	r6, r0
  405454:	460f      	mov	r7, r1
  405456:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40545a:	f002 f9d5 	bl	407808 <__aeabi_dmul>
  40545e:	4632      	mov	r2, r6
  405460:	463b      	mov	r3, r7
  405462:	f002 f81d 	bl	4074a0 <__aeabi_dsub>
  405466:	4602      	mov	r2, r0
  405468:	460b      	mov	r3, r1
  40546a:	e9cd 2302 	strd	r2, r3, [sp, #8]
  40546e:	e734      	b.n	4052da <__ieee754_rem_pio2+0x1fa>
  405470:	f002 f818 	bl	4074a4 <__adddf3>
  405474:	4b2a      	ldr	r3, [pc, #168]	; (405520 <__ieee754_rem_pio2+0x440>)
  405476:	429f      	cmp	r7, r3
  405478:	4604      	mov	r4, r0
  40547a:	460d      	mov	r5, r1
  40547c:	d018      	beq.n	4054b0 <__ieee754_rem_pio2+0x3d0>
  40547e:	a326      	add	r3, pc, #152	; (adr r3, 405518 <__ieee754_rem_pio2+0x438>)
  405480:	e9d3 2300 	ldrd	r2, r3, [r3]
  405484:	f002 f80e 	bl	4074a4 <__adddf3>
  405488:	4602      	mov	r2, r0
  40548a:	460b      	mov	r3, r1
  40548c:	e9ca 2300 	strd	r2, r3, [sl]
  405490:	4629      	mov	r1, r5
  405492:	4620      	mov	r0, r4
  405494:	f002 f804 	bl	4074a0 <__aeabi_dsub>
  405498:	a31f      	add	r3, pc, #124	; (adr r3, 405518 <__ieee754_rem_pio2+0x438>)
  40549a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40549e:	f002 f801 	bl	4074a4 <__adddf3>
  4054a2:	f04f 35ff 	mov.w	r5, #4294967295
  4054a6:	e9ca 0102 	strd	r0, r1, [sl, #8]
  4054aa:	e6b7      	b.n	40521c <__ieee754_rem_pio2+0x13c>
  4054ac:	2303      	movs	r3, #3
  4054ae:	e694      	b.n	4051da <__ieee754_rem_pio2+0xfa>
  4054b0:	a311      	add	r3, pc, #68	; (adr r3, 4054f8 <__ieee754_rem_pio2+0x418>)
  4054b2:	e9d3 2300 	ldrd	r2, r3, [r3]
  4054b6:	f001 fff5 	bl	4074a4 <__adddf3>
  4054ba:	a311      	add	r3, pc, #68	; (adr r3, 405500 <__ieee754_rem_pio2+0x420>)
  4054bc:	e9d3 2300 	ldrd	r2, r3, [r3]
  4054c0:	460d      	mov	r5, r1
  4054c2:	4604      	mov	r4, r0
  4054c4:	f001 ffee 	bl	4074a4 <__adddf3>
  4054c8:	4602      	mov	r2, r0
  4054ca:	460b      	mov	r3, r1
  4054cc:	e9ca 2300 	strd	r2, r3, [sl]
  4054d0:	4629      	mov	r1, r5
  4054d2:	4620      	mov	r0, r4
  4054d4:	f001 ffe4 	bl	4074a0 <__aeabi_dsub>
  4054d8:	a309      	add	r3, pc, #36	; (adr r3, 405500 <__ieee754_rem_pio2+0x420>)
  4054da:	e9d3 2300 	ldrd	r2, r3, [r3]
  4054de:	f001 ffe1 	bl	4074a4 <__adddf3>
  4054e2:	f04f 35ff 	mov.w	r5, #4294967295
  4054e6:	e9ca 0102 	strd	r0, r1, [sl, #8]
  4054ea:	e697      	b.n	40521c <__ieee754_rem_pio2+0x13c>
  4054ec:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
  4054f0:	e6fd      	b.n	4052ee <__ieee754_rem_pio2+0x20e>
  4054f2:	bf00      	nop
  4054f4:	f3af 8000 	nop.w
  4054f8:	1a600000 	.word	0x1a600000
  4054fc:	3dd0b461 	.word	0x3dd0b461
  405500:	2e037073 	.word	0x2e037073
  405504:	3ba3198a 	.word	0x3ba3198a
  405508:	2e000000 	.word	0x2e000000
  40550c:	3ba3198a 	.word	0x3ba3198a
  405510:	252049c1 	.word	0x252049c1
  405514:	397b839a 	.word	0x397b839a
  405518:	1a626331 	.word	0x1a626331
  40551c:	3dd0b461 	.word	0x3dd0b461
  405520:	3ff921fb 	.word	0x3ff921fb

00405524 <__ieee754_atan2f>:
  405524:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  405526:	460c      	mov	r4, r1
  405528:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  40552c:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
  405530:	4603      	mov	r3, r0
  405532:	dc14      	bgt.n	40555e <__ieee754_atan2f+0x3a>
  405534:	f020 4600 	bic.w	r6, r0, #2147483648	; 0x80000000
  405538:	f1b6 4fff 	cmp.w	r6, #2139095040	; 0x7f800000
  40553c:	4607      	mov	r7, r0
  40553e:	dc0e      	bgt.n	40555e <__ieee754_atan2f+0x3a>
  405540:	f1b4 5f7e 	cmp.w	r4, #1065353216	; 0x3f800000
  405544:	d03d      	beq.n	4055c2 <__ieee754_atan2f+0x9e>
  405546:	17a5      	asrs	r5, r4, #30
  405548:	f005 0502 	and.w	r5, r5, #2
  40554c:	ea45 75d0 	orr.w	r5, r5, r0, lsr #31
  405550:	b956      	cbnz	r6, 405568 <__ieee754_atan2f+0x44>
  405552:	2d02      	cmp	r5, #2
  405554:	d030      	beq.n	4055b8 <__ieee754_atan2f+0x94>
  405556:	2d03      	cmp	r5, #3
  405558:	d130      	bne.n	4055bc <__ieee754_atan2f+0x98>
  40555a:	4832      	ldr	r0, [pc, #200]	; (405624 <__ieee754_atan2f+0x100>)
  40555c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40555e:	4619      	mov	r1, r3
  405560:	4620      	mov	r0, r4
  405562:	f002 fc69 	bl	407e38 <__addsf3>
  405566:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405568:	b301      	cbz	r1, 4055ac <__ieee754_atan2f+0x88>
  40556a:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
  40556e:	d02c      	beq.n	4055ca <__ieee754_atan2f+0xa6>
  405570:	f1b6 4fff 	cmp.w	r6, #2139095040	; 0x7f800000
  405574:	d01a      	beq.n	4055ac <__ieee754_atan2f+0x88>
  405576:	1a71      	subs	r1, r6, r1
  405578:	15c9      	asrs	r1, r1, #23
  40557a:	293c      	cmp	r1, #60	; 0x3c
  40557c:	dc1a      	bgt.n	4055b4 <__ieee754_atan2f+0x90>
  40557e:	2c00      	cmp	r4, #0
  405580:	db39      	blt.n	4055f6 <__ieee754_atan2f+0xd2>
  405582:	4621      	mov	r1, r4
  405584:	4618      	mov	r0, r3
  405586:	f002 fe13 	bl	4081b0 <__aeabi_fdiv>
  40558a:	f001 fed5 	bl	407338 <fabsf>
  40558e:	f001 fdbd 	bl	40710c <atanf>
  405592:	2d01      	cmp	r5, #1
  405594:	d02c      	beq.n	4055f0 <__ieee754_atan2f+0xcc>
  405596:	2d02      	cmp	r5, #2
  405598:	d022      	beq.n	4055e0 <__ieee754_atan2f+0xbc>
  40559a:	2d00      	cmp	r5, #0
  40559c:	d02f      	beq.n	4055fe <__ieee754_atan2f+0xda>
  40559e:	4922      	ldr	r1, [pc, #136]	; (405628 <__ieee754_atan2f+0x104>)
  4055a0:	f002 fc4a 	bl	407e38 <__addsf3>
  4055a4:	4921      	ldr	r1, [pc, #132]	; (40562c <__ieee754_atan2f+0x108>)
  4055a6:	f002 fc45 	bl	407e34 <__aeabi_fsub>
  4055aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4055ac:	2f00      	cmp	r7, #0
  4055ae:	db06      	blt.n	4055be <__ieee754_atan2f+0x9a>
  4055b0:	481f      	ldr	r0, [pc, #124]	; (405630 <__ieee754_atan2f+0x10c>)
  4055b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4055b4:	481e      	ldr	r0, [pc, #120]	; (405630 <__ieee754_atan2f+0x10c>)
  4055b6:	e7ec      	b.n	405592 <__ieee754_atan2f+0x6e>
  4055b8:	481c      	ldr	r0, [pc, #112]	; (40562c <__ieee754_atan2f+0x108>)
  4055ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4055bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4055be:	481d      	ldr	r0, [pc, #116]	; (405634 <__ieee754_atan2f+0x110>)
  4055c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4055c2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
  4055c6:	f001 bda1 	b.w	40710c <atanf>
  4055ca:	f1b6 4fff 	cmp.w	r6, #2139095040	; 0x7f800000
  4055ce:	d017      	beq.n	405600 <__ieee754_atan2f+0xdc>
  4055d0:	2d02      	cmp	r5, #2
  4055d2:	d0f1      	beq.n	4055b8 <__ieee754_atan2f+0x94>
  4055d4:	2d03      	cmp	r5, #3
  4055d6:	d0c0      	beq.n	40555a <__ieee754_atan2f+0x36>
  4055d8:	2d01      	cmp	r5, #1
  4055da:	d019      	beq.n	405610 <__ieee754_atan2f+0xec>
  4055dc:	2000      	movs	r0, #0
  4055de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4055e0:	4911      	ldr	r1, [pc, #68]	; (405628 <__ieee754_atan2f+0x104>)
  4055e2:	f002 fc29 	bl	407e38 <__addsf3>
  4055e6:	4601      	mov	r1, r0
  4055e8:	4810      	ldr	r0, [pc, #64]	; (40562c <__ieee754_atan2f+0x108>)
  4055ea:	f002 fc23 	bl	407e34 <__aeabi_fsub>
  4055ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4055f0:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
  4055f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4055f6:	313c      	adds	r1, #60	; 0x3c
  4055f8:	dac3      	bge.n	405582 <__ieee754_atan2f+0x5e>
  4055fa:	2000      	movs	r0, #0
  4055fc:	e7c9      	b.n	405592 <__ieee754_atan2f+0x6e>
  4055fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405600:	2d02      	cmp	r5, #2
  405602:	d00c      	beq.n	40561e <__ieee754_atan2f+0xfa>
  405604:	2d03      	cmp	r5, #3
  405606:	d008      	beq.n	40561a <__ieee754_atan2f+0xf6>
  405608:	2d01      	cmp	r5, #1
  40560a:	d004      	beq.n	405616 <__ieee754_atan2f+0xf2>
  40560c:	480a      	ldr	r0, [pc, #40]	; (405638 <__ieee754_atan2f+0x114>)
  40560e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405610:	f04f 4000 	mov.w	r0, #2147483648	; 0x80000000
  405614:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405616:	4809      	ldr	r0, [pc, #36]	; (40563c <__ieee754_atan2f+0x118>)
  405618:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40561a:	4809      	ldr	r0, [pc, #36]	; (405640 <__ieee754_atan2f+0x11c>)
  40561c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40561e:	4809      	ldr	r0, [pc, #36]	; (405644 <__ieee754_atan2f+0x120>)
  405620:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405622:	bf00      	nop
  405624:	c0490fdb 	.word	0xc0490fdb
  405628:	33bbbd2e 	.word	0x33bbbd2e
  40562c:	40490fdb 	.word	0x40490fdb
  405630:	3fc90fdb 	.word	0x3fc90fdb
  405634:	bfc90fdb 	.word	0xbfc90fdb
  405638:	3f490fdb 	.word	0x3f490fdb
  40563c:	bf490fdb 	.word	0xbf490fdb
  405640:	c016cbe4 	.word	0xc016cbe4
  405644:	4016cbe4 	.word	0x4016cbe4

00405648 <__ieee754_rem_pio2f>:
  405648:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40564c:	4aa8      	ldr	r2, [pc, #672]	; (4058f0 <__ieee754_rem_pio2f+0x2a8>)
  40564e:	f020 4400 	bic.w	r4, r0, #2147483648	; 0x80000000
  405652:	4294      	cmp	r4, r2
  405654:	b089      	sub	sp, #36	; 0x24
  405656:	dd6e      	ble.n	405736 <__ieee754_rem_pio2f+0xee>
  405658:	4aa6      	ldr	r2, [pc, #664]	; (4058f4 <__ieee754_rem_pio2f+0x2ac>)
  40565a:	4294      	cmp	r4, r2
  40565c:	4606      	mov	r6, r0
  40565e:	460d      	mov	r5, r1
  405660:	dc1c      	bgt.n	40569c <__ieee754_rem_pio2f+0x54>
  405662:	2800      	cmp	r0, #0
  405664:	49a4      	ldr	r1, [pc, #656]	; (4058f8 <__ieee754_rem_pio2f+0x2b0>)
  405666:	f340 80fc 	ble.w	405862 <__ieee754_rem_pio2f+0x21a>
  40566a:	f002 fbe3 	bl	407e34 <__aeabi_fsub>
  40566e:	4ba3      	ldr	r3, [pc, #652]	; (4058fc <__ieee754_rem_pio2f+0x2b4>)
  405670:	f024 040f 	bic.w	r4, r4, #15
  405674:	429c      	cmp	r4, r3
  405676:	4606      	mov	r6, r0
  405678:	d06c      	beq.n	405754 <__ieee754_rem_pio2f+0x10c>
  40567a:	49a1      	ldr	r1, [pc, #644]	; (405900 <__ieee754_rem_pio2f+0x2b8>)
  40567c:	f002 fbda 	bl	407e34 <__aeabi_fsub>
  405680:	4601      	mov	r1, r0
  405682:	6028      	str	r0, [r5, #0]
  405684:	4630      	mov	r0, r6
  405686:	f002 fbd5 	bl	407e34 <__aeabi_fsub>
  40568a:	499d      	ldr	r1, [pc, #628]	; (405900 <__ieee754_rem_pio2f+0x2b8>)
  40568c:	f002 fbd2 	bl	407e34 <__aeabi_fsub>
  405690:	2701      	movs	r7, #1
  405692:	6068      	str	r0, [r5, #4]
  405694:	4638      	mov	r0, r7
  405696:	b009      	add	sp, #36	; 0x24
  405698:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40569c:	4a99      	ldr	r2, [pc, #612]	; (405904 <__ieee754_rem_pio2f+0x2bc>)
  40569e:	4294      	cmp	r4, r2
  4056a0:	dd6a      	ble.n	405778 <__ieee754_rem_pio2f+0x130>
  4056a2:	f1b4 4fff 	cmp.w	r4, #2139095040	; 0x7f800000
  4056a6:	da4e      	bge.n	405746 <__ieee754_rem_pio2f+0xfe>
  4056a8:	15e7      	asrs	r7, r4, #23
  4056aa:	3f86      	subs	r7, #134	; 0x86
  4056ac:	eba4 54c7 	sub.w	r4, r4, r7, lsl #23
  4056b0:	4620      	mov	r0, r4
  4056b2:	f002 fe8f 	bl	4083d4 <__aeabi_f2iz>
  4056b6:	f002 fc73 	bl	407fa0 <__aeabi_i2f>
  4056ba:	4603      	mov	r3, r0
  4056bc:	4601      	mov	r1, r0
  4056be:	4620      	mov	r0, r4
  4056c0:	9305      	str	r3, [sp, #20]
  4056c2:	f002 fbb7 	bl	407e34 <__aeabi_fsub>
  4056c6:	f04f 4187 	mov.w	r1, #1132462080	; 0x43800000
  4056ca:	f002 fcbd 	bl	408048 <__aeabi_fmul>
  4056ce:	4680      	mov	r8, r0
  4056d0:	f002 fe80 	bl	4083d4 <__aeabi_f2iz>
  4056d4:	f002 fc64 	bl	407fa0 <__aeabi_i2f>
  4056d8:	4601      	mov	r1, r0
  4056da:	4604      	mov	r4, r0
  4056dc:	4640      	mov	r0, r8
  4056de:	9406      	str	r4, [sp, #24]
  4056e0:	f002 fba8 	bl	407e34 <__aeabi_fsub>
  4056e4:	f04f 4187 	mov.w	r1, #1132462080	; 0x43800000
  4056e8:	f002 fcae 	bl	408048 <__aeabi_fmul>
  4056ec:	2100      	movs	r1, #0
  4056ee:	9007      	str	r0, [sp, #28]
  4056f0:	f002 fe3e 	bl	408370 <__aeabi_fcmpeq>
  4056f4:	2800      	cmp	r0, #0
  4056f6:	f000 80cb 	beq.w	405890 <__ieee754_rem_pio2f+0x248>
  4056fa:	4620      	mov	r0, r4
  4056fc:	2100      	movs	r1, #0
  4056fe:	f002 fe37 	bl	408370 <__aeabi_fcmpeq>
  405702:	2800      	cmp	r0, #0
  405704:	bf14      	ite	ne
  405706:	2301      	movne	r3, #1
  405708:	2302      	moveq	r3, #2
  40570a:	4a7f      	ldr	r2, [pc, #508]	; (405908 <__ieee754_rem_pio2f+0x2c0>)
  40570c:	9201      	str	r2, [sp, #4]
  40570e:	2102      	movs	r1, #2
  405710:	463a      	mov	r2, r7
  405712:	9100      	str	r1, [sp, #0]
  405714:	a805      	add	r0, sp, #20
  405716:	4629      	mov	r1, r5
  405718:	f000 ffec 	bl	4066f4 <__kernel_rem_pio2f>
  40571c:	2e00      	cmp	r6, #0
  40571e:	4607      	mov	r7, r0
  405720:	da0d      	bge.n	40573e <__ieee754_rem_pio2f+0xf6>
  405722:	e895 000c 	ldmia.w	r5, {r2, r3}
  405726:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
  40572a:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
  40572e:	4247      	negs	r7, r0
  405730:	602a      	str	r2, [r5, #0]
  405732:	606b      	str	r3, [r5, #4]
  405734:	e003      	b.n	40573e <__ieee754_rem_pio2f+0xf6>
  405736:	2200      	movs	r2, #0
  405738:	6008      	str	r0, [r1, #0]
  40573a:	604a      	str	r2, [r1, #4]
  40573c:	2700      	movs	r7, #0
  40573e:	4638      	mov	r0, r7
  405740:	b009      	add	sp, #36	; 0x24
  405742:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405746:	4601      	mov	r1, r0
  405748:	f002 fb74 	bl	407e34 <__aeabi_fsub>
  40574c:	2700      	movs	r7, #0
  40574e:	6068      	str	r0, [r5, #4]
  405750:	6028      	str	r0, [r5, #0]
  405752:	e7f4      	b.n	40573e <__ieee754_rem_pio2f+0xf6>
  405754:	496d      	ldr	r1, [pc, #436]	; (40590c <__ieee754_rem_pio2f+0x2c4>)
  405756:	f002 fb6d 	bl	407e34 <__aeabi_fsub>
  40575a:	496d      	ldr	r1, [pc, #436]	; (405910 <__ieee754_rem_pio2f+0x2c8>)
  40575c:	4604      	mov	r4, r0
  40575e:	f002 fb69 	bl	407e34 <__aeabi_fsub>
  405762:	4601      	mov	r1, r0
  405764:	6028      	str	r0, [r5, #0]
  405766:	4620      	mov	r0, r4
  405768:	f002 fb64 	bl	407e34 <__aeabi_fsub>
  40576c:	4968      	ldr	r1, [pc, #416]	; (405910 <__ieee754_rem_pio2f+0x2c8>)
  40576e:	f002 fb61 	bl	407e34 <__aeabi_fsub>
  405772:	2701      	movs	r7, #1
  405774:	6068      	str	r0, [r5, #4]
  405776:	e7e2      	b.n	40573e <__ieee754_rem_pio2f+0xf6>
  405778:	f001 fdde 	bl	407338 <fabsf>
  40577c:	4965      	ldr	r1, [pc, #404]	; (405914 <__ieee754_rem_pio2f+0x2cc>)
  40577e:	4680      	mov	r8, r0
  405780:	f002 fc62 	bl	408048 <__aeabi_fmul>
  405784:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
  405788:	f002 fb56 	bl	407e38 <__addsf3>
  40578c:	f002 fe22 	bl	4083d4 <__aeabi_f2iz>
  405790:	4607      	mov	r7, r0
  405792:	f002 fc05 	bl	407fa0 <__aeabi_i2f>
  405796:	4958      	ldr	r1, [pc, #352]	; (4058f8 <__ieee754_rem_pio2f+0x2b0>)
  405798:	4683      	mov	fp, r0
  40579a:	f002 fc55 	bl	408048 <__aeabi_fmul>
  40579e:	4601      	mov	r1, r0
  4057a0:	4640      	mov	r0, r8
  4057a2:	f002 fb47 	bl	407e34 <__aeabi_fsub>
  4057a6:	4956      	ldr	r1, [pc, #344]	; (405900 <__ieee754_rem_pio2f+0x2b8>)
  4057a8:	4681      	mov	r9, r0
  4057aa:	4658      	mov	r0, fp
  4057ac:	f002 fc4c 	bl	408048 <__aeabi_fmul>
  4057b0:	2f1f      	cmp	r7, #31
  4057b2:	4682      	mov	sl, r0
  4057b4:	dc21      	bgt.n	4057fa <__ieee754_rem_pio2f+0x1b2>
  4057b6:	4a58      	ldr	r2, [pc, #352]	; (405918 <__ieee754_rem_pio2f+0x2d0>)
  4057b8:	1e79      	subs	r1, r7, #1
  4057ba:	f024 03ff 	bic.w	r3, r4, #255	; 0xff
  4057be:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
  4057c2:	4293      	cmp	r3, r2
  4057c4:	d019      	beq.n	4057fa <__ieee754_rem_pio2f+0x1b2>
  4057c6:	4651      	mov	r1, sl
  4057c8:	4648      	mov	r0, r9
  4057ca:	f002 fb33 	bl	407e34 <__aeabi_fsub>
  4057ce:	4680      	mov	r8, r0
  4057d0:	f8c5 8000 	str.w	r8, [r5]
  4057d4:	4641      	mov	r1, r8
  4057d6:	4648      	mov	r0, r9
  4057d8:	f002 fb2c 	bl	407e34 <__aeabi_fsub>
  4057dc:	4651      	mov	r1, sl
  4057de:	f002 fb29 	bl	407e34 <__aeabi_fsub>
  4057e2:	2e00      	cmp	r6, #0
  4057e4:	6068      	str	r0, [r5, #4]
  4057e6:	daaa      	bge.n	40573e <__ieee754_rem_pio2f+0xf6>
  4057e8:	f108 4800 	add.w	r8, r8, #2147483648	; 0x80000000
  4057ec:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
  4057f0:	f8c5 8000 	str.w	r8, [r5]
  4057f4:	6068      	str	r0, [r5, #4]
  4057f6:	427f      	negs	r7, r7
  4057f8:	e7a1      	b.n	40573e <__ieee754_rem_pio2f+0xf6>
  4057fa:	4651      	mov	r1, sl
  4057fc:	4648      	mov	r0, r9
  4057fe:	f002 fb19 	bl	407e34 <__aeabi_fsub>
  405802:	15e2      	asrs	r2, r4, #23
  405804:	f3c0 53c7 	ubfx	r3, r0, #23, #8
  405808:	1ad3      	subs	r3, r2, r3
  40580a:	2b08      	cmp	r3, #8
  40580c:	4680      	mov	r8, r0
  40580e:	dddf      	ble.n	4057d0 <__ieee754_rem_pio2f+0x188>
  405810:	493e      	ldr	r1, [pc, #248]	; (40590c <__ieee754_rem_pio2f+0x2c4>)
  405812:	9203      	str	r2, [sp, #12]
  405814:	4658      	mov	r0, fp
  405816:	f002 fc17 	bl	408048 <__aeabi_fmul>
  40581a:	4680      	mov	r8, r0
  40581c:	4601      	mov	r1, r0
  40581e:	4648      	mov	r0, r9
  405820:	f002 fb08 	bl	407e34 <__aeabi_fsub>
  405824:	4601      	mov	r1, r0
  405826:	4604      	mov	r4, r0
  405828:	4648      	mov	r0, r9
  40582a:	f002 fb03 	bl	407e34 <__aeabi_fsub>
  40582e:	4641      	mov	r1, r8
  405830:	f002 fb00 	bl	407e34 <__aeabi_fsub>
  405834:	4936      	ldr	r1, [pc, #216]	; (405910 <__ieee754_rem_pio2f+0x2c8>)
  405836:	4680      	mov	r8, r0
  405838:	4658      	mov	r0, fp
  40583a:	f002 fc05 	bl	408048 <__aeabi_fmul>
  40583e:	4641      	mov	r1, r8
  405840:	f002 faf8 	bl	407e34 <__aeabi_fsub>
  405844:	4601      	mov	r1, r0
  405846:	4682      	mov	sl, r0
  405848:	4620      	mov	r0, r4
  40584a:	f002 faf3 	bl	407e34 <__aeabi_fsub>
  40584e:	9a03      	ldr	r2, [sp, #12]
  405850:	f3c0 53c7 	ubfx	r3, r0, #23, #8
  405854:	1ad2      	subs	r2, r2, r3
  405856:	2a19      	cmp	r2, #25
  405858:	4680      	mov	r8, r0
  40585a:	dc2e      	bgt.n	4058ba <__ieee754_rem_pio2f+0x272>
  40585c:	6028      	str	r0, [r5, #0]
  40585e:	46a1      	mov	r9, r4
  405860:	e7b8      	b.n	4057d4 <__ieee754_rem_pio2f+0x18c>
  405862:	f002 fae9 	bl	407e38 <__addsf3>
  405866:	4b25      	ldr	r3, [pc, #148]	; (4058fc <__ieee754_rem_pio2f+0x2b4>)
  405868:	f024 040f 	bic.w	r4, r4, #15
  40586c:	429c      	cmp	r4, r3
  40586e:	4606      	mov	r6, r0
  405870:	d010      	beq.n	405894 <__ieee754_rem_pio2f+0x24c>
  405872:	4923      	ldr	r1, [pc, #140]	; (405900 <__ieee754_rem_pio2f+0x2b8>)
  405874:	f002 fae0 	bl	407e38 <__addsf3>
  405878:	4601      	mov	r1, r0
  40587a:	6028      	str	r0, [r5, #0]
  40587c:	4630      	mov	r0, r6
  40587e:	f002 fad9 	bl	407e34 <__aeabi_fsub>
  405882:	491f      	ldr	r1, [pc, #124]	; (405900 <__ieee754_rem_pio2f+0x2b8>)
  405884:	f002 fad8 	bl	407e38 <__addsf3>
  405888:	f04f 37ff 	mov.w	r7, #4294967295
  40588c:	6068      	str	r0, [r5, #4]
  40588e:	e756      	b.n	40573e <__ieee754_rem_pio2f+0xf6>
  405890:	2303      	movs	r3, #3
  405892:	e73a      	b.n	40570a <__ieee754_rem_pio2f+0xc2>
  405894:	491d      	ldr	r1, [pc, #116]	; (40590c <__ieee754_rem_pio2f+0x2c4>)
  405896:	f002 facf 	bl	407e38 <__addsf3>
  40589a:	491d      	ldr	r1, [pc, #116]	; (405910 <__ieee754_rem_pio2f+0x2c8>)
  40589c:	4604      	mov	r4, r0
  40589e:	f002 facb 	bl	407e38 <__addsf3>
  4058a2:	4601      	mov	r1, r0
  4058a4:	6028      	str	r0, [r5, #0]
  4058a6:	4620      	mov	r0, r4
  4058a8:	f002 fac4 	bl	407e34 <__aeabi_fsub>
  4058ac:	4918      	ldr	r1, [pc, #96]	; (405910 <__ieee754_rem_pio2f+0x2c8>)
  4058ae:	f002 fac3 	bl	407e38 <__addsf3>
  4058b2:	f04f 37ff 	mov.w	r7, #4294967295
  4058b6:	6068      	str	r0, [r5, #4]
  4058b8:	e741      	b.n	40573e <__ieee754_rem_pio2f+0xf6>
  4058ba:	4918      	ldr	r1, [pc, #96]	; (40591c <__ieee754_rem_pio2f+0x2d4>)
  4058bc:	4658      	mov	r0, fp
  4058be:	f002 fbc3 	bl	408048 <__aeabi_fmul>
  4058c2:	4601      	mov	r1, r0
  4058c4:	4680      	mov	r8, r0
  4058c6:	4620      	mov	r0, r4
  4058c8:	f002 fab4 	bl	407e34 <__aeabi_fsub>
  4058cc:	4601      	mov	r1, r0
  4058ce:	4681      	mov	r9, r0
  4058d0:	4620      	mov	r0, r4
  4058d2:	f002 faaf 	bl	407e34 <__aeabi_fsub>
  4058d6:	4641      	mov	r1, r8
  4058d8:	f002 faac 	bl	407e34 <__aeabi_fsub>
  4058dc:	4910      	ldr	r1, [pc, #64]	; (405920 <__ieee754_rem_pio2f+0x2d8>)
  4058de:	4604      	mov	r4, r0
  4058e0:	4658      	mov	r0, fp
  4058e2:	f002 fbb1 	bl	408048 <__aeabi_fmul>
  4058e6:	4621      	mov	r1, r4
  4058e8:	f002 faa4 	bl	407e34 <__aeabi_fsub>
  4058ec:	4682      	mov	sl, r0
  4058ee:	e76a      	b.n	4057c6 <__ieee754_rem_pio2f+0x17e>
  4058f0:	3f490fd8 	.word	0x3f490fd8
  4058f4:	4016cbe3 	.word	0x4016cbe3
  4058f8:	3fc90f80 	.word	0x3fc90f80
  4058fc:	3fc90fd0 	.word	0x3fc90fd0
  405900:	37354443 	.word	0x37354443
  405904:	43490f80 	.word	0x43490f80
  405908:	0040f278 	.word	0x0040f278
  40590c:	37354400 	.word	0x37354400
  405910:	2e85a308 	.word	0x2e85a308
  405914:	3f22f984 	.word	0x3f22f984
  405918:	0040f1f8 	.word	0x0040f1f8
  40591c:	2e85a300 	.word	0x2e85a300
  405920:	248d3132 	.word	0x248d3132
  405924:	00000000 	.word	0x00000000

00405928 <__kernel_cos>:
  405928:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40592c:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
  405930:	f1b6 5f79 	cmp.w	r6, #1044381696	; 0x3e400000
  405934:	b085      	sub	sp, #20
  405936:	460c      	mov	r4, r1
  405938:	4692      	mov	sl, r2
  40593a:	469b      	mov	fp, r3
  40593c:	4605      	mov	r5, r0
  40593e:	da6b      	bge.n	405a18 <__kernel_cos+0xf0>
  405940:	f002 f9fc 	bl	407d3c <__aeabi_d2iz>
  405944:	2800      	cmp	r0, #0
  405946:	f000 80e8 	beq.w	405b1a <__kernel_cos+0x1f2>
  40594a:	462a      	mov	r2, r5
  40594c:	4623      	mov	r3, r4
  40594e:	4628      	mov	r0, r5
  405950:	4621      	mov	r1, r4
  405952:	f001 ff59 	bl	407808 <__aeabi_dmul>
  405956:	a374      	add	r3, pc, #464	; (adr r3, 405b28 <__kernel_cos+0x200>)
  405958:	e9d3 2300 	ldrd	r2, r3, [r3]
  40595c:	4680      	mov	r8, r0
  40595e:	4689      	mov	r9, r1
  405960:	f001 ff52 	bl	407808 <__aeabi_dmul>
  405964:	a372      	add	r3, pc, #456	; (adr r3, 405b30 <__kernel_cos+0x208>)
  405966:	e9d3 2300 	ldrd	r2, r3, [r3]
  40596a:	f001 fd9b 	bl	4074a4 <__adddf3>
  40596e:	4642      	mov	r2, r8
  405970:	464b      	mov	r3, r9
  405972:	f001 ff49 	bl	407808 <__aeabi_dmul>
  405976:	a370      	add	r3, pc, #448	; (adr r3, 405b38 <__kernel_cos+0x210>)
  405978:	e9d3 2300 	ldrd	r2, r3, [r3]
  40597c:	f001 fd90 	bl	4074a0 <__aeabi_dsub>
  405980:	4642      	mov	r2, r8
  405982:	464b      	mov	r3, r9
  405984:	f001 ff40 	bl	407808 <__aeabi_dmul>
  405988:	a36d      	add	r3, pc, #436	; (adr r3, 405b40 <__kernel_cos+0x218>)
  40598a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40598e:	f001 fd89 	bl	4074a4 <__adddf3>
  405992:	4642      	mov	r2, r8
  405994:	464b      	mov	r3, r9
  405996:	f001 ff37 	bl	407808 <__aeabi_dmul>
  40599a:	a36b      	add	r3, pc, #428	; (adr r3, 405b48 <__kernel_cos+0x220>)
  40599c:	e9d3 2300 	ldrd	r2, r3, [r3]
  4059a0:	f001 fd7e 	bl	4074a0 <__aeabi_dsub>
  4059a4:	4642      	mov	r2, r8
  4059a6:	464b      	mov	r3, r9
  4059a8:	f001 ff2e 	bl	407808 <__aeabi_dmul>
  4059ac:	a368      	add	r3, pc, #416	; (adr r3, 405b50 <__kernel_cos+0x228>)
  4059ae:	e9d3 2300 	ldrd	r2, r3, [r3]
  4059b2:	f001 fd77 	bl	4074a4 <__adddf3>
  4059b6:	4642      	mov	r2, r8
  4059b8:	464b      	mov	r3, r9
  4059ba:	f001 ff25 	bl	407808 <__aeabi_dmul>
  4059be:	e9cd 0100 	strd	r0, r1, [sp]
  4059c2:	2200      	movs	r2, #0
  4059c4:	4b64      	ldr	r3, [pc, #400]	; (405b58 <__kernel_cos+0x230>)
  4059c6:	4640      	mov	r0, r8
  4059c8:	4649      	mov	r1, r9
  4059ca:	f001 ff1d 	bl	407808 <__aeabi_dmul>
  4059ce:	e9dd 2300 	ldrd	r2, r3, [sp]
  4059d2:	4606      	mov	r6, r0
  4059d4:	460f      	mov	r7, r1
  4059d6:	4640      	mov	r0, r8
  4059d8:	4649      	mov	r1, r9
  4059da:	f001 ff15 	bl	407808 <__aeabi_dmul>
  4059de:	4652      	mov	r2, sl
  4059e0:	4680      	mov	r8, r0
  4059e2:	4689      	mov	r9, r1
  4059e4:	465b      	mov	r3, fp
  4059e6:	4628      	mov	r0, r5
  4059e8:	4621      	mov	r1, r4
  4059ea:	f001 ff0d 	bl	407808 <__aeabi_dmul>
  4059ee:	4602      	mov	r2, r0
  4059f0:	460b      	mov	r3, r1
  4059f2:	4640      	mov	r0, r8
  4059f4:	4649      	mov	r1, r9
  4059f6:	f001 fd53 	bl	4074a0 <__aeabi_dsub>
  4059fa:	4602      	mov	r2, r0
  4059fc:	460b      	mov	r3, r1
  4059fe:	4630      	mov	r0, r6
  405a00:	4639      	mov	r1, r7
  405a02:	f001 fd4d 	bl	4074a0 <__aeabi_dsub>
  405a06:	4602      	mov	r2, r0
  405a08:	460b      	mov	r3, r1
  405a0a:	2000      	movs	r0, #0
  405a0c:	4953      	ldr	r1, [pc, #332]	; (405b5c <__kernel_cos+0x234>)
  405a0e:	f001 fd47 	bl	4074a0 <__aeabi_dsub>
  405a12:	b005      	add	sp, #20
  405a14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405a18:	4602      	mov	r2, r0
  405a1a:	460b      	mov	r3, r1
  405a1c:	f001 fef4 	bl	407808 <__aeabi_dmul>
  405a20:	a341      	add	r3, pc, #260	; (adr r3, 405b28 <__kernel_cos+0x200>)
  405a22:	e9d3 2300 	ldrd	r2, r3, [r3]
  405a26:	4680      	mov	r8, r0
  405a28:	4689      	mov	r9, r1
  405a2a:	f001 feed 	bl	407808 <__aeabi_dmul>
  405a2e:	a340      	add	r3, pc, #256	; (adr r3, 405b30 <__kernel_cos+0x208>)
  405a30:	e9d3 2300 	ldrd	r2, r3, [r3]
  405a34:	f001 fd36 	bl	4074a4 <__adddf3>
  405a38:	4642      	mov	r2, r8
  405a3a:	464b      	mov	r3, r9
  405a3c:	f001 fee4 	bl	407808 <__aeabi_dmul>
  405a40:	a33d      	add	r3, pc, #244	; (adr r3, 405b38 <__kernel_cos+0x210>)
  405a42:	e9d3 2300 	ldrd	r2, r3, [r3]
  405a46:	f001 fd2b 	bl	4074a0 <__aeabi_dsub>
  405a4a:	4642      	mov	r2, r8
  405a4c:	464b      	mov	r3, r9
  405a4e:	f001 fedb 	bl	407808 <__aeabi_dmul>
  405a52:	a33b      	add	r3, pc, #236	; (adr r3, 405b40 <__kernel_cos+0x218>)
  405a54:	e9d3 2300 	ldrd	r2, r3, [r3]
  405a58:	f001 fd24 	bl	4074a4 <__adddf3>
  405a5c:	4642      	mov	r2, r8
  405a5e:	464b      	mov	r3, r9
  405a60:	f001 fed2 	bl	407808 <__aeabi_dmul>
  405a64:	a338      	add	r3, pc, #224	; (adr r3, 405b48 <__kernel_cos+0x220>)
  405a66:	e9d3 2300 	ldrd	r2, r3, [r3]
  405a6a:	f001 fd19 	bl	4074a0 <__aeabi_dsub>
  405a6e:	4642      	mov	r2, r8
  405a70:	464b      	mov	r3, r9
  405a72:	f001 fec9 	bl	407808 <__aeabi_dmul>
  405a76:	a336      	add	r3, pc, #216	; (adr r3, 405b50 <__kernel_cos+0x228>)
  405a78:	e9d3 2300 	ldrd	r2, r3, [r3]
  405a7c:	f001 fd12 	bl	4074a4 <__adddf3>
  405a80:	464b      	mov	r3, r9
  405a82:	4642      	mov	r2, r8
  405a84:	f001 fec0 	bl	407808 <__aeabi_dmul>
  405a88:	4b35      	ldr	r3, [pc, #212]	; (405b60 <__kernel_cos+0x238>)
  405a8a:	429e      	cmp	r6, r3
  405a8c:	e9cd 0100 	strd	r0, r1, [sp]
  405a90:	dd97      	ble.n	4059c2 <__kernel_cos+0x9a>
  405a92:	4b34      	ldr	r3, [pc, #208]	; (405b64 <__kernel_cos+0x23c>)
  405a94:	429e      	cmp	r6, r3
  405a96:	f04f 0200 	mov.w	r2, #0
  405a9a:	dc38      	bgt.n	405b0e <__kernel_cos+0x1e6>
  405a9c:	f5a6 1300 	sub.w	r3, r6, #2097152	; 0x200000
  405aa0:	2000      	movs	r0, #0
  405aa2:	492e      	ldr	r1, [pc, #184]	; (405b5c <__kernel_cos+0x234>)
  405aa4:	4616      	mov	r6, r2
  405aa6:	461f      	mov	r7, r3
  405aa8:	f001 fcfa 	bl	4074a0 <__aeabi_dsub>
  405aac:	e9cd 0102 	strd	r0, r1, [sp, #8]
  405ab0:	2200      	movs	r2, #0
  405ab2:	4b29      	ldr	r3, [pc, #164]	; (405b58 <__kernel_cos+0x230>)
  405ab4:	4640      	mov	r0, r8
  405ab6:	4649      	mov	r1, r9
  405ab8:	f001 fea6 	bl	407808 <__aeabi_dmul>
  405abc:	4632      	mov	r2, r6
  405abe:	463b      	mov	r3, r7
  405ac0:	f001 fcee 	bl	4074a0 <__aeabi_dsub>
  405ac4:	e9dd 2300 	ldrd	r2, r3, [sp]
  405ac8:	4606      	mov	r6, r0
  405aca:	460f      	mov	r7, r1
  405acc:	4640      	mov	r0, r8
  405ace:	4649      	mov	r1, r9
  405ad0:	f001 fe9a 	bl	407808 <__aeabi_dmul>
  405ad4:	4652      	mov	r2, sl
  405ad6:	4680      	mov	r8, r0
  405ad8:	4689      	mov	r9, r1
  405ada:	465b      	mov	r3, fp
  405adc:	4628      	mov	r0, r5
  405ade:	4621      	mov	r1, r4
  405ae0:	f001 fe92 	bl	407808 <__aeabi_dmul>
  405ae4:	4602      	mov	r2, r0
  405ae6:	460b      	mov	r3, r1
  405ae8:	4640      	mov	r0, r8
  405aea:	4649      	mov	r1, r9
  405aec:	f001 fcd8 	bl	4074a0 <__aeabi_dsub>
  405af0:	4602      	mov	r2, r0
  405af2:	460b      	mov	r3, r1
  405af4:	4630      	mov	r0, r6
  405af6:	4639      	mov	r1, r7
  405af8:	f001 fcd2 	bl	4074a0 <__aeabi_dsub>
  405afc:	4602      	mov	r2, r0
  405afe:	460b      	mov	r3, r1
  405b00:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  405b04:	f001 fccc 	bl	4074a0 <__aeabi_dsub>
  405b08:	b005      	add	sp, #20
  405b0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405b0e:	4b16      	ldr	r3, [pc, #88]	; (405b68 <__kernel_cos+0x240>)
  405b10:	4f16      	ldr	r7, [pc, #88]	; (405b6c <__kernel_cos+0x244>)
  405b12:	e9cd 2302 	strd	r2, r3, [sp, #8]
  405b16:	2600      	movs	r6, #0
  405b18:	e7ca      	b.n	405ab0 <__kernel_cos+0x188>
  405b1a:	4910      	ldr	r1, [pc, #64]	; (405b5c <__kernel_cos+0x234>)
  405b1c:	2000      	movs	r0, #0
  405b1e:	b005      	add	sp, #20
  405b20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405b24:	f3af 8000 	nop.w
  405b28:	be8838d4 	.word	0xbe8838d4
  405b2c:	bda8fae9 	.word	0xbda8fae9
  405b30:	bdb4b1c4 	.word	0xbdb4b1c4
  405b34:	3e21ee9e 	.word	0x3e21ee9e
  405b38:	809c52ad 	.word	0x809c52ad
  405b3c:	3e927e4f 	.word	0x3e927e4f
  405b40:	19cb1590 	.word	0x19cb1590
  405b44:	3efa01a0 	.word	0x3efa01a0
  405b48:	16c15177 	.word	0x16c15177
  405b4c:	3f56c16c 	.word	0x3f56c16c
  405b50:	5555554c 	.word	0x5555554c
  405b54:	3fa55555 	.word	0x3fa55555
  405b58:	3fe00000 	.word	0x3fe00000
  405b5c:	3ff00000 	.word	0x3ff00000
  405b60:	3fd33332 	.word	0x3fd33332
  405b64:	3fe90000 	.word	0x3fe90000
  405b68:	3fe70000 	.word	0x3fe70000
  405b6c:	3fd20000 	.word	0x3fd20000

00405b70 <__kernel_rem_pio2>:
  405b70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405b74:	f5ad 7d19 	sub.w	sp, sp, #612	; 0x264
  405b78:	4c9c      	ldr	r4, [pc, #624]	; (405dec <__kernel_rem_pio2+0x27c>)
  405b7a:	9ea2      	ldr	r6, [sp, #648]	; 0x288
  405b7c:	4d9c      	ldr	r5, [pc, #624]	; (405df0 <__kernel_rem_pio2+0x280>)
  405b7e:	f854 4026 	ldr.w	r4, [r4, r6, lsl #2]
  405b82:	9405      	str	r4, [sp, #20]
  405b84:	4626      	mov	r6, r4
  405b86:	1ed4      	subs	r4, r2, #3
  405b88:	fb85 7504 	smull	r7, r5, r5, r4
  405b8c:	17e4      	asrs	r4, r4, #31
  405b8e:	ebc4 04a5 	rsb	r4, r4, r5, asr #2
  405b92:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
  405b96:	461d      	mov	r5, r3
  405b98:	9308      	str	r3, [sp, #32]
  405b9a:	1c63      	adds	r3, r4, #1
  405b9c:	eba3 0383 	sub.w	r3, r3, r3, lsl #2
  405ba0:	3d01      	subs	r5, #1
  405ba2:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  405ba6:	9304      	str	r3, [sp, #16]
  405ba8:	462b      	mov	r3, r5
  405baa:	9409      	str	r4, [sp, #36]	; 0x24
  405bac:	9502      	str	r5, [sp, #8]
  405bae:	1b65      	subs	r5, r4, r5
  405bb0:	18f4      	adds	r4, r6, r3
  405bb2:	9003      	str	r0, [sp, #12]
  405bb4:	9106      	str	r1, [sp, #24]
  405bb6:	d41a      	bmi.n	405bee <__kernel_rem_pio2+0x7e>
  405bb8:	442c      	add	r4, r5
  405bba:	3401      	adds	r4, #1
  405bbc:	f10d 0878 	add.w	r8, sp, #120	; 0x78
  405bc0:	2600      	movs	r6, #0
  405bc2:	2700      	movs	r7, #0
  405bc4:	f8dd 928c 	ldr.w	r9, [sp, #652]	; 0x28c
  405bc8:	e008      	b.n	405bdc <__kernel_rem_pio2+0x6c>
  405bca:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
  405bce:	f001 fdb5 	bl	40773c <__aeabi_i2d>
  405bd2:	3501      	adds	r5, #1
  405bd4:	42a5      	cmp	r5, r4
  405bd6:	e9e8 0102 	strd	r0, r1, [r8, #8]!
  405bda:	d008      	beq.n	405bee <__kernel_rem_pio2+0x7e>
  405bdc:	2d00      	cmp	r5, #0
  405bde:	daf4      	bge.n	405bca <__kernel_rem_pio2+0x5a>
  405be0:	3501      	adds	r5, #1
  405be2:	4630      	mov	r0, r6
  405be4:	4639      	mov	r1, r7
  405be6:	42a5      	cmp	r5, r4
  405be8:	e9e8 0102 	strd	r0, r1, [r8, #8]!
  405bec:	d1f6      	bne.n	405bdc <__kernel_rem_pio2+0x6c>
  405bee:	9b05      	ldr	r3, [sp, #20]
  405bf0:	2b00      	cmp	r3, #0
  405bf2:	db2e      	blt.n	405c52 <__kernel_rem_pio2+0xe2>
  405bf4:	9b08      	ldr	r3, [sp, #32]
  405bf6:	ea4f 09c3 	mov.w	r9, r3, lsl #3
  405bfa:	9b03      	ldr	r3, [sp, #12]
  405bfc:	f1a9 0808 	sub.w	r8, r9, #8
  405c00:	4498      	add	r8, r3
  405c02:	ab20      	add	r3, sp, #128	; 0x80
  405c04:	4499      	add	r9, r3
  405c06:	9b05      	ldr	r3, [sp, #20]
  405c08:	aa70      	add	r2, sp, #448	; 0x1c0
  405c0a:	eb02 0bc3 	add.w	fp, r2, r3, lsl #3
  405c0e:	f50d 7adc 	add.w	sl, sp, #440	; 0x1b8
  405c12:	9b02      	ldr	r3, [sp, #8]
  405c14:	2b00      	cmp	r3, #0
  405c16:	f2c0 830f 	blt.w	406238 <__kernel_rem_pio2+0x6c8>
  405c1a:	9b03      	ldr	r3, [sp, #12]
  405c1c:	464d      	mov	r5, r9
  405c1e:	f1a3 0408 	sub.w	r4, r3, #8
  405c22:	2600      	movs	r6, #0
  405c24:	2700      	movs	r7, #0
  405c26:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
  405c2a:	e9f4 0102 	ldrd	r0, r1, [r4, #8]!
  405c2e:	f001 fdeb 	bl	407808 <__aeabi_dmul>
  405c32:	4602      	mov	r2, r0
  405c34:	460b      	mov	r3, r1
  405c36:	4630      	mov	r0, r6
  405c38:	4639      	mov	r1, r7
  405c3a:	f001 fc33 	bl	4074a4 <__adddf3>
  405c3e:	4544      	cmp	r4, r8
  405c40:	4606      	mov	r6, r0
  405c42:	460f      	mov	r7, r1
  405c44:	d1ef      	bne.n	405c26 <__kernel_rem_pio2+0xb6>
  405c46:	e9ea 6702 	strd	r6, r7, [sl, #8]!
  405c4a:	45da      	cmp	sl, fp
  405c4c:	f109 0908 	add.w	r9, r9, #8
  405c50:	d1df      	bne.n	405c12 <__kernel_rem_pio2+0xa2>
  405c52:	9805      	ldr	r0, [sp, #20]
  405c54:	9a08      	ldr	r2, [sp, #32]
  405c56:	9000      	str	r0, [sp, #0]
  405c58:	f100 4380 	add.w	r3, r0, #1073741824	; 0x40000000
  405c5c:	3b01      	subs	r3, #1
  405c5e:	009b      	lsls	r3, r3, #2
  405c60:	ac0c      	add	r4, sp, #48	; 0x30
  405c62:	1f19      	subs	r1, r3, #4
  405c64:	4423      	add	r3, r4
  405c66:	f102 5200 	add.w	r2, r2, #536870912	; 0x20000000
  405c6a:	930b      	str	r3, [sp, #44]	; 0x2c
  405c6c:	9b03      	ldr	r3, [sp, #12]
  405c6e:	3a01      	subs	r2, #1
  405c70:	4421      	add	r1, r4
  405c72:	910a      	str	r1, [sp, #40]	; 0x28
  405c74:	eb03 0bc2 	add.w	fp, r3, r2, lsl #3
  405c78:	9a00      	ldr	r2, [sp, #0]
  405c7a:	a998      	add	r1, sp, #608	; 0x260
  405c7c:	eb01 03c2 	add.w	r3, r1, r2, lsl #3
  405c80:	2a00      	cmp	r2, #0
  405c82:	e953 4528 	ldrd	r4, r5, [r3, #-160]	; 0xa0
  405c86:	4613      	mov	r3, r2
  405c88:	dd2b      	ble.n	405ce2 <__kernel_rem_pio2+0x172>
  405c8a:	eb01 08c3 	add.w	r8, r1, r3, lsl #3
  405c8e:	f1a8 08a8 	sub.w	r8, r8, #168	; 0xa8
  405c92:	f10d 092c 	add.w	r9, sp, #44	; 0x2c
  405c96:	f50d 7adc 	add.w	sl, sp, #440	; 0x1b8
  405c9a:	2200      	movs	r2, #0
  405c9c:	4b55      	ldr	r3, [pc, #340]	; (405df4 <__kernel_rem_pio2+0x284>)
  405c9e:	4620      	mov	r0, r4
  405ca0:	4629      	mov	r1, r5
  405ca2:	f001 fdb1 	bl	407808 <__aeabi_dmul>
  405ca6:	f002 f849 	bl	407d3c <__aeabi_d2iz>
  405caa:	f001 fd47 	bl	40773c <__aeabi_i2d>
  405cae:	2200      	movs	r2, #0
  405cb0:	4b51      	ldr	r3, [pc, #324]	; (405df8 <__kernel_rem_pio2+0x288>)
  405cb2:	4606      	mov	r6, r0
  405cb4:	460f      	mov	r7, r1
  405cb6:	f001 fda7 	bl	407808 <__aeabi_dmul>
  405cba:	4602      	mov	r2, r0
  405cbc:	460b      	mov	r3, r1
  405cbe:	4620      	mov	r0, r4
  405cc0:	4629      	mov	r1, r5
  405cc2:	f001 fbed 	bl	4074a0 <__aeabi_dsub>
  405cc6:	f002 f839 	bl	407d3c <__aeabi_d2iz>
  405cca:	e878 2302 	ldrd	r2, r3, [r8], #-8
  405cce:	f849 0f04 	str.w	r0, [r9, #4]!
  405cd2:	4639      	mov	r1, r7
  405cd4:	4630      	mov	r0, r6
  405cd6:	f001 fbe5 	bl	4074a4 <__adddf3>
  405cda:	45d0      	cmp	r8, sl
  405cdc:	4604      	mov	r4, r0
  405cde:	460d      	mov	r5, r1
  405ce0:	d1db      	bne.n	405c9a <__kernel_rem_pio2+0x12a>
  405ce2:	f8dd 9010 	ldr.w	r9, [sp, #16]
  405ce6:	4620      	mov	r0, r4
  405ce8:	4629      	mov	r1, r5
  405cea:	464a      	mov	r2, r9
  405cec:	f001 f990 	bl	407010 <scalbn>
  405cf0:	2200      	movs	r2, #0
  405cf2:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
  405cf6:	4604      	mov	r4, r0
  405cf8:	460d      	mov	r5, r1
  405cfa:	f001 fd85 	bl	407808 <__aeabi_dmul>
  405cfe:	f001 f8fb 	bl	406ef8 <floor>
  405d02:	2200      	movs	r2, #0
  405d04:	4b3d      	ldr	r3, [pc, #244]	; (405dfc <__kernel_rem_pio2+0x28c>)
  405d06:	f001 fd7f 	bl	407808 <__aeabi_dmul>
  405d0a:	4602      	mov	r2, r0
  405d0c:	460b      	mov	r3, r1
  405d0e:	4620      	mov	r0, r4
  405d10:	4629      	mov	r1, r5
  405d12:	f001 fbc5 	bl	4074a0 <__aeabi_dsub>
  405d16:	460d      	mov	r5, r1
  405d18:	4604      	mov	r4, r0
  405d1a:	f002 f80f 	bl	407d3c <__aeabi_d2iz>
  405d1e:	4680      	mov	r8, r0
  405d20:	f001 fd0c 	bl	40773c <__aeabi_i2d>
  405d24:	460b      	mov	r3, r1
  405d26:	4602      	mov	r2, r0
  405d28:	4629      	mov	r1, r5
  405d2a:	4620      	mov	r0, r4
  405d2c:	f001 fbb8 	bl	4074a0 <__aeabi_dsub>
  405d30:	464b      	mov	r3, r9
  405d32:	2b00      	cmp	r3, #0
  405d34:	4606      	mov	r6, r0
  405d36:	460f      	mov	r7, r1
  405d38:	f340 80f7 	ble.w	405f2a <__kernel_rem_pio2+0x3ba>
  405d3c:	9a00      	ldr	r2, [sp, #0]
  405d3e:	a90c      	add	r1, sp, #48	; 0x30
  405d40:	3a01      	subs	r2, #1
  405d42:	f1c9 0318 	rsb	r3, r9, #24
  405d46:	f851 5022 	ldr.w	r5, [r1, r2, lsl #2]
  405d4a:	fa45 f103 	asr.w	r1, r5, r3
  405d4e:	fa01 f303 	lsl.w	r3, r1, r3
  405d52:	a80c      	add	r0, sp, #48	; 0x30
  405d54:	1aeb      	subs	r3, r5, r3
  405d56:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
  405d5a:	f1c9 0517 	rsb	r5, r9, #23
  405d5e:	4488      	add	r8, r1
  405d60:	fa43 f505 	asr.w	r5, r3, r5
  405d64:	2d00      	cmp	r5, #0
  405d66:	dd63      	ble.n	405e30 <__kernel_rem_pio2+0x2c0>
  405d68:	9b00      	ldr	r3, [sp, #0]
  405d6a:	2b00      	cmp	r3, #0
  405d6c:	f108 0801 	add.w	r8, r8, #1
  405d70:	f340 8281 	ble.w	406276 <__kernel_rem_pio2+0x706>
  405d74:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  405d76:	2c00      	cmp	r4, #0
  405d78:	f000 8318 	beq.w	4063ac <__kernel_rem_pio2+0x83c>
  405d7c:	2001      	movs	r0, #1
  405d7e:	2300      	movs	r3, #0
  405d80:	aa0c      	add	r2, sp, #48	; 0x30
  405d82:	f1c4 7480 	rsb	r4, r4, #16777216	; 0x1000000
  405d86:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
  405d8a:	9a00      	ldr	r2, [sp, #0]
  405d8c:	4282      	cmp	r2, r0
  405d8e:	dd19      	ble.n	405dc4 <__kernel_rem_pio2+0x254>
  405d90:	aa0c      	add	r2, sp, #48	; 0x30
  405d92:	ac0c      	add	r4, sp, #48	; 0x30
  405d94:	f852 1020 	ldr.w	r1, [r2, r0, lsl #2]
  405d98:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
  405d9c:	1a51      	subs	r1, r2, r1
  405d9e:	f844 1020 	str.w	r1, [r4, r0, lsl #2]
  405da2:	9900      	ldr	r1, [sp, #0]
  405da4:	3302      	adds	r3, #2
  405da6:	4299      	cmp	r1, r3
  405da8:	dd0c      	ble.n	405dc4 <__kernel_rem_pio2+0x254>
  405daa:	4610      	mov	r0, r2
  405dac:	9a00      	ldr	r2, [sp, #0]
  405dae:	a90c      	add	r1, sp, #48	; 0x30
  405db0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
  405db4:	eb01 0182 	add.w	r1, r1, r2, lsl #2
  405db8:	681a      	ldr	r2, [r3, #0]
  405dba:	1a82      	subs	r2, r0, r2
  405dbc:	f843 2b04 	str.w	r2, [r3], #4
  405dc0:	428b      	cmp	r3, r1
  405dc2:	d1f9      	bne.n	405db8 <__kernel_rem_pio2+0x248>
  405dc4:	9b04      	ldr	r3, [sp, #16]
  405dc6:	2b00      	cmp	r3, #0
  405dc8:	dd1a      	ble.n	405e00 <__kernel_rem_pio2+0x290>
  405dca:	9b04      	ldr	r3, [sp, #16]
  405dcc:	2b01      	cmp	r3, #1
  405dce:	f04f 0401 	mov.w	r4, #1
  405dd2:	f040 8258 	bne.w	406286 <__kernel_rem_pio2+0x716>
  405dd6:	9b00      	ldr	r3, [sp, #0]
  405dd8:	1e5a      	subs	r2, r3, #1
  405dda:	ab0c      	add	r3, sp, #48	; 0x30
  405ddc:	a90c      	add	r1, sp, #48	; 0x30
  405dde:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
  405de2:	f3c3 0316 	ubfx	r3, r3, #0, #23
  405de6:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
  405dea:	e258      	b.n	40629e <__kernel_rem_pio2+0x72e>
  405dec:	0040f5d0 	.word	0x0040f5d0
  405df0:	2aaaaaab 	.word	0x2aaaaaab
  405df4:	3e700000 	.word	0x3e700000
  405df8:	41700000 	.word	0x41700000
  405dfc:	40200000 	.word	0x40200000
  405e00:	2d02      	cmp	r5, #2
  405e02:	d115      	bne.n	405e30 <__kernel_rem_pio2+0x2c0>
  405e04:	4632      	mov	r2, r6
  405e06:	463b      	mov	r3, r7
  405e08:	2000      	movs	r0, #0
  405e0a:	4997      	ldr	r1, [pc, #604]	; (406068 <__kernel_rem_pio2+0x4f8>)
  405e0c:	f001 fb48 	bl	4074a0 <__aeabi_dsub>
  405e10:	4606      	mov	r6, r0
  405e12:	460f      	mov	r7, r1
  405e14:	9a04      	ldr	r2, [sp, #16]
  405e16:	4994      	ldr	r1, [pc, #592]	; (406068 <__kernel_rem_pio2+0x4f8>)
  405e18:	2000      	movs	r0, #0
  405e1a:	f001 f8f9 	bl	407010 <scalbn>
  405e1e:	4602      	mov	r2, r0
  405e20:	460b      	mov	r3, r1
  405e22:	4630      	mov	r0, r6
  405e24:	4639      	mov	r1, r7
  405e26:	f001 fb3b 	bl	4074a0 <__aeabi_dsub>
  405e2a:	2502      	movs	r5, #2
  405e2c:	4606      	mov	r6, r0
  405e2e:	460f      	mov	r7, r1
  405e30:	2200      	movs	r2, #0
  405e32:	2300      	movs	r3, #0
  405e34:	4630      	mov	r0, r6
  405e36:	4639      	mov	r1, r7
  405e38:	f001 ff4e 	bl	407cd8 <__aeabi_dcmpeq>
  405e3c:	2800      	cmp	r0, #0
  405e3e:	f000 8252 	beq.w	4062e6 <__kernel_rem_pio2+0x776>
  405e42:	9a00      	ldr	r2, [sp, #0]
  405e44:	9b05      	ldr	r3, [sp, #20]
  405e46:	1e50      	subs	r0, r2, #1
  405e48:	4283      	cmp	r3, r0
  405e4a:	dc0f      	bgt.n	405e6c <__kernel_rem_pio2+0x2fc>
  405e4c:	f102 4380 	add.w	r3, r2, #1073741824	; 0x40000000
  405e50:	3b01      	subs	r3, #1
  405e52:	aa0c      	add	r2, sp, #48	; 0x30
  405e54:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  405e56:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  405e5a:	2200      	movs	r2, #0
  405e5c:	f853 1904 	ldr.w	r1, [r3], #-4
  405e60:	42a3      	cmp	r3, r4
  405e62:	ea42 0201 	orr.w	r2, r2, r1
  405e66:	d1f9      	bne.n	405e5c <__kernel_rem_pio2+0x2ec>
  405e68:	2a00      	cmp	r2, #0
  405e6a:	d16f      	bne.n	405f4c <__kernel_rem_pio2+0x3dc>
  405e6c:	9b05      	ldr	r3, [sp, #20]
  405e6e:	aa0c      	add	r2, sp, #48	; 0x30
  405e70:	3b01      	subs	r3, #1
  405e72:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  405e76:	2b00      	cmp	r3, #0
  405e78:	f040 8233 	bne.w	4062e2 <__kernel_rem_pio2+0x772>
  405e7c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  405e7e:	2301      	movs	r3, #1
  405e80:	f852 1904 	ldr.w	r1, [r2], #-4
  405e84:	3301      	adds	r3, #1
  405e86:	2900      	cmp	r1, #0
  405e88:	d0fa      	beq.n	405e80 <__kernel_rem_pio2+0x310>
  405e8a:	9a00      	ldr	r2, [sp, #0]
  405e8c:	18d3      	adds	r3, r2, r3
  405e8e:	f102 0a01 	add.w	sl, r2, #1
  405e92:	459a      	cmp	sl, r3
  405e94:	9307      	str	r3, [sp, #28]
  405e96:	dc3d      	bgt.n	405f14 <__kernel_rem_pio2+0x3a4>
  405e98:	9b00      	ldr	r3, [sp, #0]
  405e9a:	9908      	ldr	r1, [sp, #32]
  405e9c:	9a09      	ldr	r2, [sp, #36]	; 0x24
  405e9e:	440b      	add	r3, r1
  405ea0:	9907      	ldr	r1, [sp, #28]
  405ea2:	eb0a 0802 	add.w	r8, sl, r2
  405ea6:	4699      	mov	r9, r3
  405ea8:	ab20      	add	r3, sp, #128	; 0x80
  405eaa:	f108 4880 	add.w	r8, r8, #1073741824	; 0x40000000
  405eae:	eb03 09c9 	add.w	r9, r3, r9, lsl #3
  405eb2:	188b      	adds	r3, r1, r2
  405eb4:	9aa3      	ldr	r2, [sp, #652]	; 0x28c
  405eb6:	f108 38ff 	add.w	r8, r8, #4294967295
  405eba:	eb02 0888 	add.w	r8, r2, r8, lsl #2
  405ebe:	aa70      	add	r2, sp, #448	; 0x1c0
  405ec0:	eb02 0aca 	add.w	sl, r2, sl, lsl #3
  405ec4:	9aa3      	ldr	r2, [sp, #652]	; 0x28c
  405ec6:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  405eca:	9300      	str	r3, [sp, #0]
  405ecc:	f858 0f04 	ldr.w	r0, [r8, #4]!
  405ed0:	f001 fc34 	bl	40773c <__aeabi_i2d>
  405ed4:	9b02      	ldr	r3, [sp, #8]
  405ed6:	2b00      	cmp	r3, #0
  405ed8:	e8e9 0102 	strd	r0, r1, [r9], #8
  405edc:	db1d      	blt.n	405f1a <__kernel_rem_pio2+0x3aa>
  405ede:	9b03      	ldr	r3, [sp, #12]
  405ee0:	464d      	mov	r5, r9
  405ee2:	f1a3 0408 	sub.w	r4, r3, #8
  405ee6:	2600      	movs	r6, #0
  405ee8:	2700      	movs	r7, #0
  405eea:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
  405eee:	e9f4 0102 	ldrd	r0, r1, [r4, #8]!
  405ef2:	f001 fc89 	bl	407808 <__aeabi_dmul>
  405ef6:	4602      	mov	r2, r0
  405ef8:	460b      	mov	r3, r1
  405efa:	4630      	mov	r0, r6
  405efc:	4639      	mov	r1, r7
  405efe:	f001 fad1 	bl	4074a4 <__adddf3>
  405f02:	455c      	cmp	r4, fp
  405f04:	4606      	mov	r6, r0
  405f06:	460f      	mov	r7, r1
  405f08:	d1ef      	bne.n	405eea <__kernel_rem_pio2+0x37a>
  405f0a:	9b00      	ldr	r3, [sp, #0]
  405f0c:	4598      	cmp	r8, r3
  405f0e:	e8ea 6702 	strd	r6, r7, [sl], #8
  405f12:	d1db      	bne.n	405ecc <__kernel_rem_pio2+0x35c>
  405f14:	9b07      	ldr	r3, [sp, #28]
  405f16:	9300      	str	r3, [sp, #0]
  405f18:	e6ae      	b.n	405c78 <__kernel_rem_pio2+0x108>
  405f1a:	9b00      	ldr	r3, [sp, #0]
  405f1c:	2600      	movs	r6, #0
  405f1e:	2700      	movs	r7, #0
  405f20:	4598      	cmp	r8, r3
  405f22:	e8ea 6702 	strd	r6, r7, [sl], #8
  405f26:	d1d1      	bne.n	405ecc <__kernel_rem_pio2+0x35c>
  405f28:	e7f4      	b.n	405f14 <__kernel_rem_pio2+0x3a4>
  405f2a:	d106      	bne.n	405f3a <__kernel_rem_pio2+0x3ca>
  405f2c:	9b00      	ldr	r3, [sp, #0]
  405f2e:	aa0c      	add	r2, sp, #48	; 0x30
  405f30:	3b01      	subs	r3, #1
  405f32:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
  405f36:	15ed      	asrs	r5, r5, #23
  405f38:	e714      	b.n	405d64 <__kernel_rem_pio2+0x1f4>
  405f3a:	2200      	movs	r2, #0
  405f3c:	4b4b      	ldr	r3, [pc, #300]	; (40606c <__kernel_rem_pio2+0x4fc>)
  405f3e:	f001 fee9 	bl	407d14 <__aeabi_dcmpge>
  405f42:	2800      	cmp	r0, #0
  405f44:	f040 8182 	bne.w	40624c <__kernel_rem_pio2+0x6dc>
  405f48:	4605      	mov	r5, r0
  405f4a:	e771      	b.n	405e30 <__kernel_rem_pio2+0x2c0>
  405f4c:	a90c      	add	r1, sp, #48	; 0x30
  405f4e:	9502      	str	r5, [sp, #8]
  405f50:	f851 3020 	ldr.w	r3, [r1, r0, lsl #2]
  405f54:	9904      	ldr	r1, [sp, #16]
  405f56:	f8cd 801c 	str.w	r8, [sp, #28]
  405f5a:	3918      	subs	r1, #24
  405f5c:	4602      	mov	r2, r0
  405f5e:	9000      	str	r0, [sp, #0]
  405f60:	9104      	str	r1, [sp, #16]
  405f62:	b96b      	cbnz	r3, 405f80 <__kernel_rem_pio2+0x410>
  405f64:	f100 4380 	add.w	r3, r0, #1073741824	; 0x40000000
  405f68:	3b01      	subs	r3, #1
  405f6a:	a80c      	add	r0, sp, #48	; 0x30
  405f6c:	eb00 0383 	add.w	r3, r0, r3, lsl #2
  405f70:	f853 0904 	ldr.w	r0, [r3], #-4
  405f74:	3a01      	subs	r2, #1
  405f76:	3918      	subs	r1, #24
  405f78:	2800      	cmp	r0, #0
  405f7a:	d0f9      	beq.n	405f70 <__kernel_rem_pio2+0x400>
  405f7c:	9200      	str	r2, [sp, #0]
  405f7e:	9104      	str	r1, [sp, #16]
  405f80:	9a04      	ldr	r2, [sp, #16]
  405f82:	4939      	ldr	r1, [pc, #228]	; (406068 <__kernel_rem_pio2+0x4f8>)
  405f84:	2000      	movs	r0, #0
  405f86:	f001 f843 	bl	407010 <scalbn>
  405f8a:	9b00      	ldr	r3, [sp, #0]
  405f8c:	2b00      	cmp	r3, #0
  405f8e:	4604      	mov	r4, r0
  405f90:	460d      	mov	r5, r1
  405f92:	f2c0 8203 	blt.w	40639c <__kernel_rem_pio2+0x82c>
  405f96:	00da      	lsls	r2, r3, #3
  405f98:	a970      	add	r1, sp, #448	; 0x1c0
  405f9a:	eb01 0b02 	add.w	fp, r1, r2
  405f9e:	9204      	str	r2, [sp, #16]
  405fa0:	aa0c      	add	r2, sp, #48	; 0x30
  405fa2:	eb02 0683 	add.w	r6, r2, r3, lsl #2
  405fa6:	f8df 90c8 	ldr.w	r9, [pc, #200]	; 406070 <__kernel_rem_pio2+0x500>
  405faa:	f10b 0708 	add.w	r7, fp, #8
  405fae:	3604      	adds	r6, #4
  405fb0:	f04f 0800 	mov.w	r8, #0
  405fb4:	f856 0d04 	ldr.w	r0, [r6, #-4]!
  405fb8:	f001 fbc0 	bl	40773c <__aeabi_i2d>
  405fbc:	4622      	mov	r2, r4
  405fbe:	462b      	mov	r3, r5
  405fc0:	f001 fc22 	bl	407808 <__aeabi_dmul>
  405fc4:	464b      	mov	r3, r9
  405fc6:	e967 0102 	strd	r0, r1, [r7, #-8]!
  405fca:	4642      	mov	r2, r8
  405fcc:	4620      	mov	r0, r4
  405fce:	4629      	mov	r1, r5
  405fd0:	f001 fc1a 	bl	407808 <__aeabi_dmul>
  405fd4:	ab0c      	add	r3, sp, #48	; 0x30
  405fd6:	429e      	cmp	r6, r3
  405fd8:	4604      	mov	r4, r0
  405fda:	460d      	mov	r5, r1
  405fdc:	d1ea      	bne.n	405fb4 <__kernel_rem_pio2+0x444>
  405fde:	f50d 7a90 	add.w	sl, sp, #288	; 0x120
  405fe2:	f8cd a00c 	str.w	sl, [sp, #12]
  405fe6:	f8dd a014 	ldr.w	sl, [sp, #20]
  405fea:	f04f 0900 	mov.w	r9, #0
  405fee:	f1ba 0f00 	cmp.w	sl, #0
  405ff2:	f2c0 813d 	blt.w	406270 <__kernel_rem_pio2+0x700>
  405ff6:	f8df 807c 	ldr.w	r8, [pc, #124]	; 406074 <__kernel_rem_pio2+0x504>
  405ffa:	465d      	mov	r5, fp
  405ffc:	a118      	add	r1, pc, #96	; (adr r1, 406060 <__kernel_rem_pio2+0x4f0>)
  405ffe:	e9d1 0100 	ldrd	r0, r1, [r1]
  406002:	2600      	movs	r6, #0
  406004:	2700      	movs	r7, #0
  406006:	2400      	movs	r4, #0
  406008:	e003      	b.n	406012 <__kernel_rem_pio2+0x4a2>
  40600a:	454c      	cmp	r4, r9
  40600c:	dc10      	bgt.n	406030 <__kernel_rem_pio2+0x4c0>
  40600e:	e8f8 0102 	ldrd	r0, r1, [r8], #8
  406012:	e8f5 2302 	ldrd	r2, r3, [r5], #8
  406016:	f001 fbf7 	bl	407808 <__aeabi_dmul>
  40601a:	4602      	mov	r2, r0
  40601c:	460b      	mov	r3, r1
  40601e:	4630      	mov	r0, r6
  406020:	4639      	mov	r1, r7
  406022:	f001 fa3f 	bl	4074a4 <__adddf3>
  406026:	3401      	adds	r4, #1
  406028:	45a2      	cmp	sl, r4
  40602a:	4606      	mov	r6, r0
  40602c:	460f      	mov	r7, r1
  40602e:	daec      	bge.n	40600a <__kernel_rem_pio2+0x49a>
  406030:	9b03      	ldr	r3, [sp, #12]
  406032:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
  406036:	f1ab 0b08 	sub.w	fp, fp, #8
  40603a:	e9c3 6700 	strd	r6, r7, [r3]
  40603e:	ab6e      	add	r3, sp, #440	; 0x1b8
  406040:	455b      	cmp	r3, fp
  406042:	f109 0901 	add.w	r9, r9, #1
  406046:	d1d2      	bne.n	405fee <__kernel_rem_pio2+0x47e>
  406048:	9ba2      	ldr	r3, [sp, #648]	; 0x288
  40604a:	f8dd a00c 	ldr.w	sl, [sp, #12]
  40604e:	2b03      	cmp	r3, #3
  406050:	f200 808b 	bhi.w	40616a <__kernel_rem_pio2+0x5fa>
  406054:	e8df f013 	tbh	[pc, r3, lsl #1]
  406058:	009000d1 	.word	0x009000d1
  40605c:	00100090 	.word	0x00100090
  406060:	40000000 	.word	0x40000000
  406064:	3ff921fb 	.word	0x3ff921fb
  406068:	3ff00000 	.word	0x3ff00000
  40606c:	3fe00000 	.word	0x3fe00000
  406070:	3e700000 	.word	0x3e700000
  406074:	0040f598 	.word	0x0040f598
  406078:	9b00      	ldr	r3, [sp, #0]
  40607a:	2b00      	cmp	r3, #0
  40607c:	f340 81a4 	ble.w	4063c8 <__kernel_rem_pio2+0x858>
  406080:	9b04      	ldr	r3, [sp, #16]
  406082:	eb0a 0803 	add.w	r8, sl, r3
  406086:	e9d8 6700 	ldrd	r6, r7, [r8]
  40608a:	46d3      	mov	fp, sl
  40608c:	e958 9a02 	ldrd	r9, sl, [r8, #-8]
  406090:	4632      	mov	r2, r6
  406092:	463b      	mov	r3, r7
  406094:	4648      	mov	r0, r9
  406096:	4651      	mov	r1, sl
  406098:	f001 fa04 	bl	4074a4 <__adddf3>
  40609c:	4604      	mov	r4, r0
  40609e:	460d      	mov	r5, r1
  4060a0:	4602      	mov	r2, r0
  4060a2:	460b      	mov	r3, r1
  4060a4:	4648      	mov	r0, r9
  4060a6:	4651      	mov	r1, sl
  4060a8:	f001 f9fa 	bl	4074a0 <__aeabi_dsub>
  4060ac:	4632      	mov	r2, r6
  4060ae:	463b      	mov	r3, r7
  4060b0:	f001 f9f8 	bl	4074a4 <__adddf3>
  4060b4:	e9c8 0100 	strd	r0, r1, [r8]
  4060b8:	e968 4502 	strd	r4, r5, [r8, #-8]!
  4060bc:	45c3      	cmp	fp, r8
  4060be:	4626      	mov	r6, r4
  4060c0:	462f      	mov	r7, r5
  4060c2:	d1e3      	bne.n	40608c <__kernel_rem_pio2+0x51c>
  4060c4:	9b00      	ldr	r3, [sp, #0]
  4060c6:	2b01      	cmp	r3, #1
  4060c8:	46da      	mov	sl, fp
  4060ca:	f340 817d 	ble.w	4063c8 <__kernel_rem_pio2+0x858>
  4060ce:	9b04      	ldr	r3, [sp, #16]
  4060d0:	445b      	add	r3, fp
  4060d2:	e9d3 6700 	ldrd	r6, r7, [r3]
  4060d6:	4698      	mov	r8, r3
  4060d8:	4699      	mov	r9, r3
  4060da:	f50d 7b94 	add.w	fp, sp, #296	; 0x128
  4060de:	e959 3402 	ldrd	r3, r4, [r9, #-8]
  4060e2:	4632      	mov	r2, r6
  4060e4:	4618      	mov	r0, r3
  4060e6:	4621      	mov	r1, r4
  4060e8:	463b      	mov	r3, r7
  4060ea:	e9cd 0100 	strd	r0, r1, [sp]
  4060ee:	f001 f9d9 	bl	4074a4 <__adddf3>
  4060f2:	4604      	mov	r4, r0
  4060f4:	460d      	mov	r5, r1
  4060f6:	4602      	mov	r2, r0
  4060f8:	460b      	mov	r3, r1
  4060fa:	e9dd 0100 	ldrd	r0, r1, [sp]
  4060fe:	f001 f9cf 	bl	4074a0 <__aeabi_dsub>
  406102:	4632      	mov	r2, r6
  406104:	463b      	mov	r3, r7
  406106:	f001 f9cd 	bl	4074a4 <__adddf3>
  40610a:	e9c9 0100 	strd	r0, r1, [r9]
  40610e:	e969 4502 	strd	r4, r5, [r9, #-8]!
  406112:	45cb      	cmp	fp, r9
  406114:	4626      	mov	r6, r4
  406116:	462f      	mov	r7, r5
  406118:	d1e1      	bne.n	4060de <__kernel_rem_pio2+0x56e>
  40611a:	2300      	movs	r3, #0
  40611c:	f108 0808 	add.w	r8, r8, #8
  406120:	461d      	mov	r5, r3
  406122:	ac4c      	add	r4, sp, #304	; 0x130
  406124:	4618      	mov	r0, r3
  406126:	4629      	mov	r1, r5
  406128:	e978 2302 	ldrd	r2, r3, [r8, #-8]!
  40612c:	f001 f9ba 	bl	4074a4 <__adddf3>
  406130:	4544      	cmp	r4, r8
  406132:	4603      	mov	r3, r0
  406134:	460d      	mov	r5, r1
  406136:	d1f5      	bne.n	406124 <__kernel_rem_pio2+0x5b4>
  406138:	9a02      	ldr	r2, [sp, #8]
  40613a:	2a00      	cmp	r2, #0
  40613c:	f000 8120 	beq.w	406380 <__kernel_rem_pio2+0x810>
  406140:	f8da 4004 	ldr.w	r4, [sl, #4]
  406144:	f8da 200c 	ldr.w	r2, [sl, #12]
  406148:	9f06      	ldr	r7, [sp, #24]
  40614a:	f8da 1000 	ldr.w	r1, [sl]
  40614e:	f8da 0008 	ldr.w	r0, [sl, #8]
  406152:	613b      	str	r3, [r7, #16]
  406154:	f105 4500 	add.w	r5, r5, #2147483648	; 0x80000000
  406158:	f104 4400 	add.w	r4, r4, #2147483648	; 0x80000000
  40615c:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
  406160:	617d      	str	r5, [r7, #20]
  406162:	607c      	str	r4, [r7, #4]
  406164:	60fa      	str	r2, [r7, #12]
  406166:	6039      	str	r1, [r7, #0]
  406168:	60b8      	str	r0, [r7, #8]
  40616a:	9b07      	ldr	r3, [sp, #28]
  40616c:	f003 0007 	and.w	r0, r3, #7
  406170:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
  406174:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406178:	9c04      	ldr	r4, [sp, #16]
  40617a:	2600      	movs	r6, #0
  40617c:	3408      	adds	r4, #8
  40617e:	4454      	add	r4, sl
  406180:	4633      	mov	r3, r6
  406182:	4630      	mov	r0, r6
  406184:	4619      	mov	r1, r3
  406186:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
  40618a:	f001 f98b 	bl	4074a4 <__adddf3>
  40618e:	4554      	cmp	r4, sl
  406190:	4606      	mov	r6, r0
  406192:	460b      	mov	r3, r1
  406194:	d1f5      	bne.n	406182 <__kernel_rem_pio2+0x612>
  406196:	9a02      	ldr	r2, [sp, #8]
  406198:	4630      	mov	r0, r6
  40619a:	4619      	mov	r1, r3
  40619c:	2a00      	cmp	r2, #0
  40619e:	f000 80da 	beq.w	406356 <__kernel_rem_pio2+0x7e6>
  4061a2:	9806      	ldr	r0, [sp, #24]
  4061a4:	f103 4400 	add.w	r4, r3, #2147483648	; 0x80000000
  4061a8:	4632      	mov	r2, r6
  4061aa:	6044      	str	r4, [r0, #4]
  4061ac:	6006      	str	r6, [r0, #0]
  4061ae:	e9da 0100 	ldrd	r0, r1, [sl]
  4061b2:	f001 f975 	bl	4074a0 <__aeabi_dsub>
  4061b6:	460b      	mov	r3, r1
  4061b8:	9900      	ldr	r1, [sp, #0]
  4061ba:	2900      	cmp	r1, #0
  4061bc:	4602      	mov	r2, r0
  4061be:	dd0e      	ble.n	4061de <__kernel_rem_pio2+0x66e>
  4061c0:	2401      	movs	r4, #1
  4061c2:	4610      	mov	r0, r2
  4061c4:	4619      	mov	r1, r3
  4061c6:	e9fa 2302 	ldrd	r2, r3, [sl, #8]!
  4061ca:	f001 f96b 	bl	4074a4 <__adddf3>
  4061ce:	460b      	mov	r3, r1
  4061d0:	9900      	ldr	r1, [sp, #0]
  4061d2:	3401      	adds	r4, #1
  4061d4:	42a1      	cmp	r1, r4
  4061d6:	4602      	mov	r2, r0
  4061d8:	daf3      	bge.n	4061c2 <__kernel_rem_pio2+0x652>
  4061da:	9902      	ldr	r1, [sp, #8]
  4061dc:	b109      	cbz	r1, 4061e2 <__kernel_rem_pio2+0x672>
  4061de:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
  4061e2:	4619      	mov	r1, r3
  4061e4:	9b06      	ldr	r3, [sp, #24]
  4061e6:	4610      	mov	r0, r2
  4061e8:	e9c3 0102 	strd	r0, r1, [r3, #8]
  4061ec:	9b07      	ldr	r3, [sp, #28]
  4061ee:	f003 0007 	and.w	r0, r3, #7
  4061f2:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
  4061f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4061fa:	9c04      	ldr	r4, [sp, #16]
  4061fc:	2200      	movs	r2, #0
  4061fe:	3408      	adds	r4, #8
  406200:	4454      	add	r4, sl
  406202:	4613      	mov	r3, r2
  406204:	4610      	mov	r0, r2
  406206:	4619      	mov	r1, r3
  406208:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
  40620c:	f001 f94a 	bl	4074a4 <__adddf3>
  406210:	45a2      	cmp	sl, r4
  406212:	4602      	mov	r2, r0
  406214:	460b      	mov	r3, r1
  406216:	d1f5      	bne.n	406204 <__kernel_rem_pio2+0x694>
  406218:	9902      	ldr	r1, [sp, #8]
  40621a:	b109      	cbz	r1, 406220 <__kernel_rem_pio2+0x6b0>
  40621c:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
  406220:	4619      	mov	r1, r3
  406222:	9b06      	ldr	r3, [sp, #24]
  406224:	4610      	mov	r0, r2
  406226:	e9c3 0100 	strd	r0, r1, [r3]
  40622a:	9b07      	ldr	r3, [sp, #28]
  40622c:	f003 0007 	and.w	r0, r3, #7
  406230:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
  406234:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406238:	2600      	movs	r6, #0
  40623a:	2700      	movs	r7, #0
  40623c:	e9ea 6702 	strd	r6, r7, [sl, #8]!
  406240:	45da      	cmp	sl, fp
  406242:	f109 0908 	add.w	r9, r9, #8
  406246:	f47f ace4 	bne.w	405c12 <__kernel_rem_pio2+0xa2>
  40624a:	e502      	b.n	405c52 <__kernel_rem_pio2+0xe2>
  40624c:	9b00      	ldr	r3, [sp, #0]
  40624e:	2b00      	cmp	r3, #0
  406250:	f108 0801 	add.w	r8, r8, #1
  406254:	bfc8      	it	gt
  406256:	2502      	movgt	r5, #2
  406258:	f73f ad8c 	bgt.w	405d74 <__kernel_rem_pio2+0x204>
  40625c:	4632      	mov	r2, r6
  40625e:	463b      	mov	r3, r7
  406260:	2000      	movs	r0, #0
  406262:	4963      	ldr	r1, [pc, #396]	; (4063f0 <__kernel_rem_pio2+0x880>)
  406264:	f001 f91c 	bl	4074a0 <__aeabi_dsub>
  406268:	2502      	movs	r5, #2
  40626a:	4606      	mov	r6, r0
  40626c:	460f      	mov	r7, r1
  40626e:	e5df      	b.n	405e30 <__kernel_rem_pio2+0x2c0>
  406270:	2600      	movs	r6, #0
  406272:	2700      	movs	r7, #0
  406274:	e6dc      	b.n	406030 <__kernel_rem_pio2+0x4c0>
  406276:	9b04      	ldr	r3, [sp, #16]
  406278:	2b00      	cmp	r3, #0
  40627a:	dd26      	ble.n	4062ca <__kernel_rem_pio2+0x75a>
  40627c:	2400      	movs	r4, #0
  40627e:	9b04      	ldr	r3, [sp, #16]
  406280:	2b01      	cmp	r3, #1
  406282:	f43f ada8 	beq.w	405dd6 <__kernel_rem_pio2+0x266>
  406286:	2b02      	cmp	r3, #2
  406288:	d109      	bne.n	40629e <__kernel_rem_pio2+0x72e>
  40628a:	9b00      	ldr	r3, [sp, #0]
  40628c:	1e5a      	subs	r2, r3, #1
  40628e:	ab0c      	add	r3, sp, #48	; 0x30
  406290:	a90c      	add	r1, sp, #48	; 0x30
  406292:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
  406296:	f3c3 0315 	ubfx	r3, r3, #0, #22
  40629a:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
  40629e:	2d02      	cmp	r5, #2
  4062a0:	f47f adc6 	bne.w	405e30 <__kernel_rem_pio2+0x2c0>
  4062a4:	4632      	mov	r2, r6
  4062a6:	463b      	mov	r3, r7
  4062a8:	2000      	movs	r0, #0
  4062aa:	4951      	ldr	r1, [pc, #324]	; (4063f0 <__kernel_rem_pio2+0x880>)
  4062ac:	f001 f8f8 	bl	4074a0 <__aeabi_dsub>
  4062b0:	4606      	mov	r6, r0
  4062b2:	460f      	mov	r7, r1
  4062b4:	2c00      	cmp	r4, #0
  4062b6:	f43f adbb 	beq.w	405e30 <__kernel_rem_pio2+0x2c0>
  4062ba:	e5ab      	b.n	405e14 <__kernel_rem_pio2+0x2a4>
  4062bc:	9900      	ldr	r1, [sp, #0]
  4062be:	3301      	adds	r3, #1
  4062c0:	4299      	cmp	r1, r3
  4062c2:	d178      	bne.n	4063b6 <__kernel_rem_pio2+0x846>
  4062c4:	9b04      	ldr	r3, [sp, #16]
  4062c6:	2b00      	cmp	r3, #0
  4062c8:	dcd9      	bgt.n	40627e <__kernel_rem_pio2+0x70e>
  4062ca:	2d02      	cmp	r5, #2
  4062cc:	f47f adb0 	bne.w	405e30 <__kernel_rem_pio2+0x2c0>
  4062d0:	4632      	mov	r2, r6
  4062d2:	463b      	mov	r3, r7
  4062d4:	2000      	movs	r0, #0
  4062d6:	4946      	ldr	r1, [pc, #280]	; (4063f0 <__kernel_rem_pio2+0x880>)
  4062d8:	f001 f8e2 	bl	4074a0 <__aeabi_dsub>
  4062dc:	4606      	mov	r6, r0
  4062de:	460f      	mov	r7, r1
  4062e0:	e5a6      	b.n	405e30 <__kernel_rem_pio2+0x2c0>
  4062e2:	2301      	movs	r3, #1
  4062e4:	e5d1      	b.n	405e8a <__kernel_rem_pio2+0x31a>
  4062e6:	4639      	mov	r1, r7
  4062e8:	9f04      	ldr	r7, [sp, #16]
  4062ea:	9502      	str	r5, [sp, #8]
  4062ec:	427a      	negs	r2, r7
  4062ee:	4630      	mov	r0, r6
  4062f0:	f8cd 801c 	str.w	r8, [sp, #28]
  4062f4:	f000 fe8c 	bl	407010 <scalbn>
  4062f8:	2200      	movs	r2, #0
  4062fa:	4b3e      	ldr	r3, [pc, #248]	; (4063f4 <__kernel_rem_pio2+0x884>)
  4062fc:	4604      	mov	r4, r0
  4062fe:	460d      	mov	r5, r1
  406300:	f001 fd08 	bl	407d14 <__aeabi_dcmpge>
  406304:	2800      	cmp	r0, #0
  406306:	d062      	beq.n	4063ce <__kernel_rem_pio2+0x85e>
  406308:	2200      	movs	r2, #0
  40630a:	4b3b      	ldr	r3, [pc, #236]	; (4063f8 <__kernel_rem_pio2+0x888>)
  40630c:	4620      	mov	r0, r4
  40630e:	4629      	mov	r1, r5
  406310:	f001 fa7a 	bl	407808 <__aeabi_dmul>
  406314:	f001 fd12 	bl	407d3c <__aeabi_d2iz>
  406318:	4606      	mov	r6, r0
  40631a:	f001 fa0f 	bl	40773c <__aeabi_i2d>
  40631e:	2200      	movs	r2, #0
  406320:	4b34      	ldr	r3, [pc, #208]	; (4063f4 <__kernel_rem_pio2+0x884>)
  406322:	f001 fa71 	bl	407808 <__aeabi_dmul>
  406326:	4602      	mov	r2, r0
  406328:	460b      	mov	r3, r1
  40632a:	4620      	mov	r0, r4
  40632c:	4629      	mov	r1, r5
  40632e:	f001 f8b7 	bl	4074a0 <__aeabi_dsub>
  406332:	f001 fd03 	bl	407d3c <__aeabi_d2iz>
  406336:	9900      	ldr	r1, [sp, #0]
  406338:	460b      	mov	r3, r1
  40633a:	3301      	adds	r3, #1
  40633c:	461a      	mov	r2, r3
  40633e:	9300      	str	r3, [sp, #0]
  406340:	463b      	mov	r3, r7
  406342:	3318      	adds	r3, #24
  406344:	9304      	str	r3, [sp, #16]
  406346:	460b      	mov	r3, r1
  406348:	a90c      	add	r1, sp, #48	; 0x30
  40634a:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
  40634e:	4613      	mov	r3, r2
  406350:	f841 6023 	str.w	r6, [r1, r3, lsl #2]
  406354:	e614      	b.n	405f80 <__kernel_rem_pio2+0x410>
  406356:	9b06      	ldr	r3, [sp, #24]
  406358:	4632      	mov	r2, r6
  40635a:	e9c3 0100 	strd	r0, r1, [r3]
  40635e:	460b      	mov	r3, r1
  406360:	e9da 0100 	ldrd	r0, r1, [sl]
  406364:	f001 f89c 	bl	4074a0 <__aeabi_dsub>
  406368:	460b      	mov	r3, r1
  40636a:	9900      	ldr	r1, [sp, #0]
  40636c:	2900      	cmp	r1, #0
  40636e:	4602      	mov	r2, r0
  406370:	f73f af26 	bgt.w	4061c0 <__kernel_rem_pio2+0x650>
  406374:	4619      	mov	r1, r3
  406376:	9b06      	ldr	r3, [sp, #24]
  406378:	4610      	mov	r0, r2
  40637a:	e9c3 0102 	strd	r0, r1, [r3, #8]
  40637e:	e735      	b.n	4061ec <__kernel_rem_pio2+0x67c>
  406380:	4618      	mov	r0, r3
  406382:	4629      	mov	r1, r5
  406384:	e9da 2300 	ldrd	r2, r3, [sl]
  406388:	e9da 4502 	ldrd	r4, r5, [sl, #8]
  40638c:	9f06      	ldr	r7, [sp, #24]
  40638e:	e9c7 0104 	strd	r0, r1, [r7, #16]
  406392:	e9c7 2300 	strd	r2, r3, [r7]
  406396:	e9c7 4502 	strd	r4, r5, [r7, #8]
  40639a:	e6e6      	b.n	40616a <__kernel_rem_pio2+0x5fa>
  40639c:	9ba2      	ldr	r3, [sp, #648]	; 0x288
  40639e:	2b03      	cmp	r3, #3
  4063a0:	f63f aee3 	bhi.w	40616a <__kernel_rem_pio2+0x5fa>
  4063a4:	e8df f003 	tbb	[pc, r3]
  4063a8:	0e1c1c21 	.word	0x0e1c1c21
  4063ac:	9b00      	ldr	r3, [sp, #0]
  4063ae:	2b01      	cmp	r3, #1
  4063b0:	dd88      	ble.n	4062c4 <__kernel_rem_pio2+0x754>
  4063b2:	aa0c      	add	r2, sp, #48	; 0x30
  4063b4:	2301      	movs	r3, #1
  4063b6:	f852 4f04 	ldr.w	r4, [r2, #4]!
  4063ba:	2c00      	cmp	r4, #0
  4063bc:	f43f af7e 	beq.w	4062bc <__kernel_rem_pio2+0x74c>
  4063c0:	1c58      	adds	r0, r3, #1
  4063c2:	e4dd      	b.n	405d80 <__kernel_rem_pio2+0x210>
  4063c4:	f50d 7a90 	add.w	sl, sp, #288	; 0x120
  4063c8:	2300      	movs	r3, #0
  4063ca:	461d      	mov	r5, r3
  4063cc:	e6b4      	b.n	406138 <__kernel_rem_pio2+0x5c8>
  4063ce:	4629      	mov	r1, r5
  4063d0:	4620      	mov	r0, r4
  4063d2:	f001 fcb3 	bl	407d3c <__aeabi_d2iz>
  4063d6:	9a00      	ldr	r2, [sp, #0]
  4063d8:	a90c      	add	r1, sp, #48	; 0x30
  4063da:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
  4063de:	e5cf      	b.n	405f80 <__kernel_rem_pio2+0x410>
  4063e0:	2600      	movs	r6, #0
  4063e2:	4633      	mov	r3, r6
  4063e4:	f50d 7a90 	add.w	sl, sp, #288	; 0x120
  4063e8:	e6d5      	b.n	406196 <__kernel_rem_pio2+0x626>
  4063ea:	2200      	movs	r2, #0
  4063ec:	4613      	mov	r3, r2
  4063ee:	e713      	b.n	406218 <__kernel_rem_pio2+0x6a8>
  4063f0:	3ff00000 	.word	0x3ff00000
  4063f4:	41700000 	.word	0x41700000
  4063f8:	3e700000 	.word	0x3e700000
  4063fc:	00000000 	.word	0x00000000

00406400 <__kernel_sin>:
  406400:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  406404:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
  406408:	f1b6 5f79 	cmp.w	r6, #1044381696	; 0x3e400000
  40640c:	b085      	sub	sp, #20
  40640e:	460c      	mov	r4, r1
  406410:	4690      	mov	r8, r2
  406412:	4699      	mov	r9, r3
  406414:	4605      	mov	r5, r0
  406416:	da04      	bge.n	406422 <__kernel_sin+0x22>
  406418:	f001 fc90 	bl	407d3c <__aeabi_d2iz>
  40641c:	2800      	cmp	r0, #0
  40641e:	f000 8085 	beq.w	40652c <__kernel_sin+0x12c>
  406422:	462a      	mov	r2, r5
  406424:	4623      	mov	r3, r4
  406426:	4628      	mov	r0, r5
  406428:	4621      	mov	r1, r4
  40642a:	f001 f9ed 	bl	407808 <__aeabi_dmul>
  40642e:	4606      	mov	r6, r0
  406430:	460f      	mov	r7, r1
  406432:	4602      	mov	r2, r0
  406434:	460b      	mov	r3, r1
  406436:	4628      	mov	r0, r5
  406438:	4621      	mov	r1, r4
  40643a:	f001 f9e5 	bl	407808 <__aeabi_dmul>
  40643e:	a33e      	add	r3, pc, #248	; (adr r3, 406538 <__kernel_sin+0x138>)
  406440:	e9d3 2300 	ldrd	r2, r3, [r3]
  406444:	4682      	mov	sl, r0
  406446:	468b      	mov	fp, r1
  406448:	4630      	mov	r0, r6
  40644a:	4639      	mov	r1, r7
  40644c:	f001 f9dc 	bl	407808 <__aeabi_dmul>
  406450:	a33b      	add	r3, pc, #236	; (adr r3, 406540 <__kernel_sin+0x140>)
  406452:	e9d3 2300 	ldrd	r2, r3, [r3]
  406456:	f001 f823 	bl	4074a0 <__aeabi_dsub>
  40645a:	4632      	mov	r2, r6
  40645c:	463b      	mov	r3, r7
  40645e:	f001 f9d3 	bl	407808 <__aeabi_dmul>
  406462:	a339      	add	r3, pc, #228	; (adr r3, 406548 <__kernel_sin+0x148>)
  406464:	e9d3 2300 	ldrd	r2, r3, [r3]
  406468:	f001 f81c 	bl	4074a4 <__adddf3>
  40646c:	4632      	mov	r2, r6
  40646e:	463b      	mov	r3, r7
  406470:	f001 f9ca 	bl	407808 <__aeabi_dmul>
  406474:	a336      	add	r3, pc, #216	; (adr r3, 406550 <__kernel_sin+0x150>)
  406476:	e9d3 2300 	ldrd	r2, r3, [r3]
  40647a:	f001 f811 	bl	4074a0 <__aeabi_dsub>
  40647e:	4632      	mov	r2, r6
  406480:	463b      	mov	r3, r7
  406482:	f001 f9c1 	bl	407808 <__aeabi_dmul>
  406486:	a334      	add	r3, pc, #208	; (adr r3, 406558 <__kernel_sin+0x158>)
  406488:	e9d3 2300 	ldrd	r2, r3, [r3]
  40648c:	f001 f80a 	bl	4074a4 <__adddf3>
  406490:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  406492:	e9cd 0100 	strd	r0, r1, [sp]
  406496:	b39b      	cbz	r3, 406500 <__kernel_sin+0x100>
  406498:	2200      	movs	r2, #0
  40649a:	4b33      	ldr	r3, [pc, #204]	; (406568 <__kernel_sin+0x168>)
  40649c:	4640      	mov	r0, r8
  40649e:	4649      	mov	r1, r9
  4064a0:	f001 f9b2 	bl	407808 <__aeabi_dmul>
  4064a4:	e9dd 2300 	ldrd	r2, r3, [sp]
  4064a8:	e9cd 0102 	strd	r0, r1, [sp, #8]
  4064ac:	4650      	mov	r0, sl
  4064ae:	4659      	mov	r1, fp
  4064b0:	f001 f9aa 	bl	407808 <__aeabi_dmul>
  4064b4:	4602      	mov	r2, r0
  4064b6:	460b      	mov	r3, r1
  4064b8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  4064bc:	f000 fff0 	bl	4074a0 <__aeabi_dsub>
  4064c0:	4632      	mov	r2, r6
  4064c2:	463b      	mov	r3, r7
  4064c4:	f001 f9a0 	bl	407808 <__aeabi_dmul>
  4064c8:	4642      	mov	r2, r8
  4064ca:	464b      	mov	r3, r9
  4064cc:	f000 ffe8 	bl	4074a0 <__aeabi_dsub>
  4064d0:	a323      	add	r3, pc, #140	; (adr r3, 406560 <__kernel_sin+0x160>)
  4064d2:	e9d3 2300 	ldrd	r2, r3, [r3]
  4064d6:	4606      	mov	r6, r0
  4064d8:	460f      	mov	r7, r1
  4064da:	4650      	mov	r0, sl
  4064dc:	4659      	mov	r1, fp
  4064de:	f001 f993 	bl	407808 <__aeabi_dmul>
  4064e2:	4602      	mov	r2, r0
  4064e4:	460b      	mov	r3, r1
  4064e6:	4630      	mov	r0, r6
  4064e8:	4639      	mov	r1, r7
  4064ea:	f000 ffdb 	bl	4074a4 <__adddf3>
  4064ee:	4602      	mov	r2, r0
  4064f0:	460b      	mov	r3, r1
  4064f2:	4628      	mov	r0, r5
  4064f4:	4621      	mov	r1, r4
  4064f6:	f000 ffd3 	bl	4074a0 <__aeabi_dsub>
  4064fa:	b005      	add	sp, #20
  4064fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406500:	4602      	mov	r2, r0
  406502:	460b      	mov	r3, r1
  406504:	4630      	mov	r0, r6
  406506:	4639      	mov	r1, r7
  406508:	f001 f97e 	bl	407808 <__aeabi_dmul>
  40650c:	a314      	add	r3, pc, #80	; (adr r3, 406560 <__kernel_sin+0x160>)
  40650e:	e9d3 2300 	ldrd	r2, r3, [r3]
  406512:	f000 ffc5 	bl	4074a0 <__aeabi_dsub>
  406516:	4652      	mov	r2, sl
  406518:	465b      	mov	r3, fp
  40651a:	f001 f975 	bl	407808 <__aeabi_dmul>
  40651e:	462a      	mov	r2, r5
  406520:	4623      	mov	r3, r4
  406522:	f000 ffbf 	bl	4074a4 <__adddf3>
  406526:	b005      	add	sp, #20
  406528:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40652c:	4628      	mov	r0, r5
  40652e:	4621      	mov	r1, r4
  406530:	b005      	add	sp, #20
  406532:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406536:	bf00      	nop
  406538:	5acfd57c 	.word	0x5acfd57c
  40653c:	3de5d93a 	.word	0x3de5d93a
  406540:	8a2b9ceb 	.word	0x8a2b9ceb
  406544:	3e5ae5e6 	.word	0x3e5ae5e6
  406548:	57b1fe7d 	.word	0x57b1fe7d
  40654c:	3ec71de3 	.word	0x3ec71de3
  406550:	19c161d5 	.word	0x19c161d5
  406554:	3f2a01a0 	.word	0x3f2a01a0
  406558:	1110f8a6 	.word	0x1110f8a6
  40655c:	3f811111 	.word	0x3f811111
  406560:	55555549 	.word	0x55555549
  406564:	3fc55555 	.word	0x3fc55555
  406568:	3fe00000 	.word	0x3fe00000

0040656c <__kernel_cosf>:
  40656c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  406570:	f020 4400 	bic.w	r4, r0, #2147483648	; 0x80000000
  406574:	f1b4 5f48 	cmp.w	r4, #838860800	; 0x32000000
  406578:	4606      	mov	r6, r0
  40657a:	460f      	mov	r7, r1
  40657c:	da49      	bge.n	406612 <__kernel_cosf+0xa6>
  40657e:	f001 ff29 	bl	4083d4 <__aeabi_f2iz>
  406582:	2800      	cmp	r0, #0
  406584:	f000 809d 	beq.w	4066c2 <__kernel_cosf+0x156>
  406588:	4631      	mov	r1, r6
  40658a:	4630      	mov	r0, r6
  40658c:	f001 fd5c 	bl	408048 <__aeabi_fmul>
  406590:	494e      	ldr	r1, [pc, #312]	; (4066cc <__kernel_cosf+0x160>)
  406592:	4605      	mov	r5, r0
  406594:	f001 fd58 	bl	408048 <__aeabi_fmul>
  406598:	494d      	ldr	r1, [pc, #308]	; (4066d0 <__kernel_cosf+0x164>)
  40659a:	f001 fc4d 	bl	407e38 <__addsf3>
  40659e:	4629      	mov	r1, r5
  4065a0:	f001 fd52 	bl	408048 <__aeabi_fmul>
  4065a4:	494b      	ldr	r1, [pc, #300]	; (4066d4 <__kernel_cosf+0x168>)
  4065a6:	f001 fc45 	bl	407e34 <__aeabi_fsub>
  4065aa:	4629      	mov	r1, r5
  4065ac:	f001 fd4c 	bl	408048 <__aeabi_fmul>
  4065b0:	4949      	ldr	r1, [pc, #292]	; (4066d8 <__kernel_cosf+0x16c>)
  4065b2:	f001 fc41 	bl	407e38 <__addsf3>
  4065b6:	4629      	mov	r1, r5
  4065b8:	f001 fd46 	bl	408048 <__aeabi_fmul>
  4065bc:	4947      	ldr	r1, [pc, #284]	; (4066dc <__kernel_cosf+0x170>)
  4065be:	f001 fc39 	bl	407e34 <__aeabi_fsub>
  4065c2:	4629      	mov	r1, r5
  4065c4:	f001 fd40 	bl	408048 <__aeabi_fmul>
  4065c8:	4945      	ldr	r1, [pc, #276]	; (4066e0 <__kernel_cosf+0x174>)
  4065ca:	f001 fc35 	bl	407e38 <__addsf3>
  4065ce:	4629      	mov	r1, r5
  4065d0:	f001 fd3a 	bl	408048 <__aeabi_fmul>
  4065d4:	4680      	mov	r8, r0
  4065d6:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
  4065da:	4628      	mov	r0, r5
  4065dc:	f001 fd34 	bl	408048 <__aeabi_fmul>
  4065e0:	4641      	mov	r1, r8
  4065e2:	4604      	mov	r4, r0
  4065e4:	4628      	mov	r0, r5
  4065e6:	f001 fd2f 	bl	408048 <__aeabi_fmul>
  4065ea:	4639      	mov	r1, r7
  4065ec:	4605      	mov	r5, r0
  4065ee:	4630      	mov	r0, r6
  4065f0:	f001 fd2a 	bl	408048 <__aeabi_fmul>
  4065f4:	4601      	mov	r1, r0
  4065f6:	4628      	mov	r0, r5
  4065f8:	f001 fc1c 	bl	407e34 <__aeabi_fsub>
  4065fc:	4601      	mov	r1, r0
  4065fe:	4620      	mov	r0, r4
  406600:	f001 fc18 	bl	407e34 <__aeabi_fsub>
  406604:	4601      	mov	r1, r0
  406606:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  40660a:	f001 fc13 	bl	407e34 <__aeabi_fsub>
  40660e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  406612:	4601      	mov	r1, r0
  406614:	f001 fd18 	bl	408048 <__aeabi_fmul>
  406618:	492c      	ldr	r1, [pc, #176]	; (4066cc <__kernel_cosf+0x160>)
  40661a:	4605      	mov	r5, r0
  40661c:	f001 fd14 	bl	408048 <__aeabi_fmul>
  406620:	492b      	ldr	r1, [pc, #172]	; (4066d0 <__kernel_cosf+0x164>)
  406622:	f001 fc09 	bl	407e38 <__addsf3>
  406626:	4629      	mov	r1, r5
  406628:	f001 fd0e 	bl	408048 <__aeabi_fmul>
  40662c:	4929      	ldr	r1, [pc, #164]	; (4066d4 <__kernel_cosf+0x168>)
  40662e:	f001 fc01 	bl	407e34 <__aeabi_fsub>
  406632:	4629      	mov	r1, r5
  406634:	f001 fd08 	bl	408048 <__aeabi_fmul>
  406638:	4927      	ldr	r1, [pc, #156]	; (4066d8 <__kernel_cosf+0x16c>)
  40663a:	f001 fbfd 	bl	407e38 <__addsf3>
  40663e:	4629      	mov	r1, r5
  406640:	f001 fd02 	bl	408048 <__aeabi_fmul>
  406644:	4925      	ldr	r1, [pc, #148]	; (4066dc <__kernel_cosf+0x170>)
  406646:	f001 fbf5 	bl	407e34 <__aeabi_fsub>
  40664a:	4629      	mov	r1, r5
  40664c:	f001 fcfc 	bl	408048 <__aeabi_fmul>
  406650:	4923      	ldr	r1, [pc, #140]	; (4066e0 <__kernel_cosf+0x174>)
  406652:	f001 fbf1 	bl	407e38 <__addsf3>
  406656:	4629      	mov	r1, r5
  406658:	f001 fcf6 	bl	408048 <__aeabi_fmul>
  40665c:	4b21      	ldr	r3, [pc, #132]	; (4066e4 <__kernel_cosf+0x178>)
  40665e:	429c      	cmp	r4, r3
  406660:	4680      	mov	r8, r0
  406662:	ddb8      	ble.n	4065d6 <__kernel_cosf+0x6a>
  406664:	4b20      	ldr	r3, [pc, #128]	; (4066e8 <__kernel_cosf+0x17c>)
  406666:	429c      	cmp	r4, r3
  406668:	dc27      	bgt.n	4066ba <__kernel_cosf+0x14e>
  40666a:	f104 447f 	add.w	r4, r4, #4278190080	; 0xff000000
  40666e:	4621      	mov	r1, r4
  406670:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  406674:	f001 fbde 	bl	407e34 <__aeabi_fsub>
  406678:	4681      	mov	r9, r0
  40667a:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
  40667e:	4628      	mov	r0, r5
  406680:	f001 fce2 	bl	408048 <__aeabi_fmul>
  406684:	4621      	mov	r1, r4
  406686:	f001 fbd5 	bl	407e34 <__aeabi_fsub>
  40668a:	4641      	mov	r1, r8
  40668c:	4604      	mov	r4, r0
  40668e:	4628      	mov	r0, r5
  406690:	f001 fcda 	bl	408048 <__aeabi_fmul>
  406694:	4639      	mov	r1, r7
  406696:	4605      	mov	r5, r0
  406698:	4630      	mov	r0, r6
  40669a:	f001 fcd5 	bl	408048 <__aeabi_fmul>
  40669e:	4601      	mov	r1, r0
  4066a0:	4628      	mov	r0, r5
  4066a2:	f001 fbc7 	bl	407e34 <__aeabi_fsub>
  4066a6:	4601      	mov	r1, r0
  4066a8:	4620      	mov	r0, r4
  4066aa:	f001 fbc3 	bl	407e34 <__aeabi_fsub>
  4066ae:	4601      	mov	r1, r0
  4066b0:	4648      	mov	r0, r9
  4066b2:	f001 fbbf 	bl	407e34 <__aeabi_fsub>
  4066b6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4066ba:	f8df 9034 	ldr.w	r9, [pc, #52]	; 4066f0 <__kernel_cosf+0x184>
  4066be:	4c0b      	ldr	r4, [pc, #44]	; (4066ec <__kernel_cosf+0x180>)
  4066c0:	e7db      	b.n	40667a <__kernel_cosf+0x10e>
  4066c2:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  4066c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4066ca:	bf00      	nop
  4066cc:	ad47d74e 	.word	0xad47d74e
  4066d0:	310f74f6 	.word	0x310f74f6
  4066d4:	3493f27c 	.word	0x3493f27c
  4066d8:	37d00d01 	.word	0x37d00d01
  4066dc:	3ab60b61 	.word	0x3ab60b61
  4066e0:	3d2aaaab 	.word	0x3d2aaaab
  4066e4:	3e999999 	.word	0x3e999999
  4066e8:	3f480000 	.word	0x3f480000
  4066ec:	3e900000 	.word	0x3e900000
  4066f0:	3f380000 	.word	0x3f380000

004066f4 <__kernel_rem_pio2f>:
  4066f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4066f8:	b0dd      	sub	sp, #372	; 0x174
  4066fa:	4c90      	ldr	r4, [pc, #576]	; (40693c <__kernel_rem_pio2f+0x248>)
  4066fc:	9308      	str	r3, [sp, #32]
  4066fe:	3b01      	subs	r3, #1
  406700:	9301      	str	r3, [sp, #4]
  406702:	1ed3      	subs	r3, r2, #3
  406704:	bf48      	it	mi
  406706:	1d13      	addmi	r3, r2, #4
  406708:	9d66      	ldr	r5, [sp, #408]	; 0x198
  40670a:	9107      	str	r1, [sp, #28]
  40670c:	10db      	asrs	r3, r3, #3
  40670e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  406712:	f854 4025 	ldr.w	r4, [r4, r5, lsl #2]
  406716:	9309      	str	r3, [sp, #36]	; 0x24
  406718:	4619      	mov	r1, r3
  40671a:	3301      	adds	r3, #1
  40671c:	eba2 03c3 	sub.w	r3, r2, r3, lsl #3
  406720:	9405      	str	r4, [sp, #20]
  406722:	9a01      	ldr	r2, [sp, #4]
  406724:	9304      	str	r3, [sp, #16]
  406726:	9b05      	ldr	r3, [sp, #20]
  406728:	9002      	str	r0, [sp, #8]
  40672a:	189c      	adds	r4, r3, r2
  40672c:	eba1 0602 	sub.w	r6, r1, r2
  406730:	d417      	bmi.n	406762 <__kernel_rem_pio2f+0x6e>
  406732:	4434      	add	r4, r6
  406734:	2500      	movs	r5, #0
  406736:	3401      	adds	r4, #1
  406738:	af1f      	add	r7, sp, #124	; 0x7c
  40673a:	f8dd 819c 	ldr.w	r8, [sp, #412]	; 0x19c
  40673e:	e008      	b.n	406752 <__kernel_rem_pio2f+0x5e>
  406740:	f858 0026 	ldr.w	r0, [r8, r6, lsl #2]
  406744:	f001 fc2c 	bl	407fa0 <__aeabi_i2f>
  406748:	3601      	adds	r6, #1
  40674a:	42a6      	cmp	r6, r4
  40674c:	f847 0f04 	str.w	r0, [r7, #4]!
  406750:	d007      	beq.n	406762 <__kernel_rem_pio2f+0x6e>
  406752:	2e00      	cmp	r6, #0
  406754:	daf4      	bge.n	406740 <__kernel_rem_pio2f+0x4c>
  406756:	3601      	adds	r6, #1
  406758:	4628      	mov	r0, r5
  40675a:	42a6      	cmp	r6, r4
  40675c:	f847 0f04 	str.w	r0, [r7, #4]!
  406760:	d1f7      	bne.n	406752 <__kernel_rem_pio2f+0x5e>
  406762:	9b05      	ldr	r3, [sp, #20]
  406764:	2b00      	cmp	r3, #0
  406766:	db28      	blt.n	4067ba <__kernel_rem_pio2f+0xc6>
  406768:	9b08      	ldr	r3, [sp, #32]
  40676a:	009e      	lsls	r6, r3, #2
  40676c:	9b02      	ldr	r3, [sp, #8]
  40676e:	1f35      	subs	r5, r6, #4
  406770:	441d      	add	r5, r3
  406772:	ab20      	add	r3, sp, #128	; 0x80
  406774:	441e      	add	r6, r3
  406776:	9b05      	ldr	r3, [sp, #20]
  406778:	aa48      	add	r2, sp, #288	; 0x120
  40677a:	f04f 0900 	mov.w	r9, #0
  40677e:	eb02 0883 	add.w	r8, r2, r3, lsl #2
  406782:	af47      	add	r7, sp, #284	; 0x11c
  406784:	9b01      	ldr	r3, [sp, #4]
  406786:	2b00      	cmp	r3, #0
  406788:	f2c0 82b9 	blt.w	406cfe <__kernel_rem_pio2f+0x60a>
  40678c:	9b02      	ldr	r3, [sp, #8]
  40678e:	46b3      	mov	fp, r6
  406790:	1f1c      	subs	r4, r3, #4
  406792:	46ca      	mov	sl, r9
  406794:	f85b 1d04 	ldr.w	r1, [fp, #-4]!
  406798:	f854 0f04 	ldr.w	r0, [r4, #4]!
  40679c:	f001 fc54 	bl	408048 <__aeabi_fmul>
  4067a0:	4601      	mov	r1, r0
  4067a2:	4650      	mov	r0, sl
  4067a4:	f001 fb48 	bl	407e38 <__addsf3>
  4067a8:	42ac      	cmp	r4, r5
  4067aa:	4682      	mov	sl, r0
  4067ac:	d1f2      	bne.n	406794 <__kernel_rem_pio2f+0xa0>
  4067ae:	f847 af04 	str.w	sl, [r7, #4]!
  4067b2:	4547      	cmp	r7, r8
  4067b4:	f106 0604 	add.w	r6, r6, #4
  4067b8:	d1e4      	bne.n	406784 <__kernel_rem_pio2f+0x90>
  4067ba:	9805      	ldr	r0, [sp, #20]
  4067bc:	9908      	ldr	r1, [sp, #32]
  4067be:	9c02      	ldr	r4, [sp, #8]
  4067c0:	f06f 4240 	mvn.w	r2, #3221225472	; 0xc0000000
  4067c4:	4603      	mov	r3, r0
  4067c6:	4413      	add	r3, r2
  4067c8:	009b      	lsls	r3, r3, #2
  4067ca:	440a      	add	r2, r1
  4067cc:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
  4067d0:	1f19      	subs	r1, r3, #4
  4067d2:	eb04 0582 	add.w	r5, r4, r2, lsl #2
  4067d6:	4453      	add	r3, sl
  4067d8:	eb0a 0201 	add.w	r2, sl, r1
  4067dc:	920a      	str	r2, [sp, #40]	; 0x28
  4067de:	930b      	str	r3, [sp, #44]	; 0x2c
  4067e0:	4680      	mov	r8, r0
  4067e2:	ea4f 0388 	mov.w	r3, r8, lsl #2
  4067e6:	aa5c      	add	r2, sp, #368	; 0x170
  4067e8:	9303      	str	r3, [sp, #12]
  4067ea:	18d3      	adds	r3, r2, r3
  4067ec:	f1b8 0f00 	cmp.w	r8, #0
  4067f0:	f853 9c50 	ldr.w	r9, [r3, #-80]
  4067f4:	dd22      	ble.n	40683c <__kernel_rem_pio2f+0x148>
  4067f6:	eb02 0488 	add.w	r4, r2, r8, lsl #2
  4067fa:	3c54      	subs	r4, #84	; 0x54
  4067fc:	ae0b      	add	r6, sp, #44	; 0x2c
  4067fe:	af47      	add	r7, sp, #284	; 0x11c
  406800:	f04f 516e 	mov.w	r1, #998244352	; 0x3b800000
  406804:	4648      	mov	r0, r9
  406806:	f001 fc1f 	bl	408048 <__aeabi_fmul>
  40680a:	f001 fde3 	bl	4083d4 <__aeabi_f2iz>
  40680e:	f001 fbc7 	bl	407fa0 <__aeabi_i2f>
  406812:	f04f 4187 	mov.w	r1, #1132462080	; 0x43800000
  406816:	4683      	mov	fp, r0
  406818:	f001 fc16 	bl	408048 <__aeabi_fmul>
  40681c:	4601      	mov	r1, r0
  40681e:	4648      	mov	r0, r9
  406820:	f001 fb08 	bl	407e34 <__aeabi_fsub>
  406824:	f001 fdd6 	bl	4083d4 <__aeabi_f2iz>
  406828:	f854 1904 	ldr.w	r1, [r4], #-4
  40682c:	f846 0f04 	str.w	r0, [r6, #4]!
  406830:	4658      	mov	r0, fp
  406832:	f001 fb01 	bl	407e38 <__addsf3>
  406836:	42bc      	cmp	r4, r7
  406838:	4681      	mov	r9, r0
  40683a:	d1e1      	bne.n	406800 <__kernel_rem_pio2f+0x10c>
  40683c:	9e04      	ldr	r6, [sp, #16]
  40683e:	4648      	mov	r0, r9
  406840:	4631      	mov	r1, r6
  406842:	f000 fdc3 	bl	4073cc <scalbnf>
  406846:	f04f 5178 	mov.w	r1, #1040187392	; 0x3e000000
  40684a:	4604      	mov	r4, r0
  40684c:	f001 fbfc 	bl	408048 <__aeabi_fmul>
  406850:	f000 fd76 	bl	407340 <floorf>
  406854:	f04f 4182 	mov.w	r1, #1090519040	; 0x41000000
  406858:	f001 fbf6 	bl	408048 <__aeabi_fmul>
  40685c:	4601      	mov	r1, r0
  40685e:	4620      	mov	r0, r4
  406860:	f001 fae8 	bl	407e34 <__aeabi_fsub>
  406864:	4604      	mov	r4, r0
  406866:	f001 fdb5 	bl	4083d4 <__aeabi_f2iz>
  40686a:	4681      	mov	r9, r0
  40686c:	9006      	str	r0, [sp, #24]
  40686e:	f001 fb97 	bl	407fa0 <__aeabi_i2f>
  406872:	4601      	mov	r1, r0
  406874:	4620      	mov	r0, r4
  406876:	f001 fadd 	bl	407e34 <__aeabi_fsub>
  40687a:	2e00      	cmp	r6, #0
  40687c:	4607      	mov	r7, r0
  40687e:	f340 80e6 	ble.w	406a4e <__kernel_rem_pio2f+0x35a>
  406882:	f108 31ff 	add.w	r1, r8, #4294967295
  406886:	f1c6 0308 	rsb	r3, r6, #8
  40688a:	f85a 2021 	ldr.w	r2, [sl, r1, lsl #2]
  40688e:	fa42 f003 	asr.w	r0, r2, r3
  406892:	fa00 f303 	lsl.w	r3, r0, r3
  406896:	1ad3      	subs	r3, r2, r3
  406898:	464a      	mov	r2, r9
  40689a:	f1c6 0407 	rsb	r4, r6, #7
  40689e:	4402      	add	r2, r0
  4068a0:	f84a 3021 	str.w	r3, [sl, r1, lsl #2]
  4068a4:	9206      	str	r2, [sp, #24]
  4068a6:	fa43 f404 	asr.w	r4, r3, r4
  4068aa:	2c00      	cmp	r4, #0
  4068ac:	dd5b      	ble.n	406966 <__kernel_rem_pio2f+0x272>
  4068ae:	9b06      	ldr	r3, [sp, #24]
  4068b0:	f1b8 0f00 	cmp.w	r8, #0
  4068b4:	f103 0301 	add.w	r3, r3, #1
  4068b8:	9306      	str	r3, [sp, #24]
  4068ba:	f340 823b 	ble.w	406d34 <__kernel_rem_pio2f+0x640>
  4068be:	f8da 6000 	ldr.w	r6, [sl]
  4068c2:	2e00      	cmp	r6, #0
  4068c4:	f040 8294 	bne.w	406df0 <__kernel_rem_pio2f+0x6fc>
  4068c8:	f1b8 0f01 	cmp.w	r8, #1
  4068cc:	f340 8255 	ble.w	406d7a <__kernel_rem_pio2f+0x686>
  4068d0:	4652      	mov	r2, sl
  4068d2:	2301      	movs	r3, #1
  4068d4:	f852 6f04 	ldr.w	r6, [r2, #4]!
  4068d8:	2e00      	cmp	r6, #0
  4068da:	f000 824a 	beq.w	406d72 <__kernel_rem_pio2f+0x67e>
  4068de:	1c59      	adds	r1, r3, #1
  4068e0:	f5c6 7680 	rsb	r6, r6, #256	; 0x100
  4068e4:	4588      	cmp	r8, r1
  4068e6:	f84a 6023 	str.w	r6, [sl, r3, lsl #2]
  4068ea:	dd14      	ble.n	406916 <__kernel_rem_pio2f+0x222>
  4068ec:	f85a 2021 	ldr.w	r2, [sl, r1, lsl #2]
  4068f0:	3302      	adds	r3, #2
  4068f2:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
  4068f6:	4598      	cmp	r8, r3
  4068f8:	f84a 2021 	str.w	r2, [sl, r1, lsl #2]
  4068fc:	dd0b      	ble.n	406916 <__kernel_rem_pio2f+0x222>
  4068fe:	9a03      	ldr	r2, [sp, #12]
  406900:	4452      	add	r2, sl
  406902:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
  406906:	4691      	mov	r9, r2
  406908:	681a      	ldr	r2, [r3, #0]
  40690a:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
  40690e:	f843 2b04 	str.w	r2, [r3], #4
  406912:	454b      	cmp	r3, r9
  406914:	d1f8      	bne.n	406908 <__kernel_rem_pio2f+0x214>
  406916:	9b04      	ldr	r3, [sp, #16]
  406918:	2b00      	cmp	r3, #0
  40691a:	dd11      	ble.n	406940 <__kernel_rem_pio2f+0x24c>
  40691c:	9b04      	ldr	r3, [sp, #16]
  40691e:	2b01      	cmp	r3, #1
  406920:	f04f 0601 	mov.w	r6, #1
  406924:	f040 820e 	bne.w	406d44 <__kernel_rem_pio2f+0x650>
  406928:	f108 32ff 	add.w	r2, r8, #4294967295
  40692c:	f85a 3022 	ldr.w	r3, [sl, r2, lsl #2]
  406930:	f003 037f 	and.w	r3, r3, #127	; 0x7f
  406934:	f84a 3022 	str.w	r3, [sl, r2, lsl #2]
  406938:	e20e      	b.n	406d58 <__kernel_rem_pio2f+0x664>
  40693a:	bf00      	nop
  40693c:	0040f60c 	.word	0x0040f60c
  406940:	2c02      	cmp	r4, #2
  406942:	d110      	bne.n	406966 <__kernel_rem_pio2f+0x272>
  406944:	4639      	mov	r1, r7
  406946:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  40694a:	f001 fa73 	bl	407e34 <__aeabi_fsub>
  40694e:	4607      	mov	r7, r0
  406950:	9904      	ldr	r1, [sp, #16]
  406952:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  406956:	f000 fd39 	bl	4073cc <scalbnf>
  40695a:	4601      	mov	r1, r0
  40695c:	4638      	mov	r0, r7
  40695e:	f001 fa69 	bl	407e34 <__aeabi_fsub>
  406962:	2402      	movs	r4, #2
  406964:	4607      	mov	r7, r0
  406966:	2100      	movs	r1, #0
  406968:	4638      	mov	r0, r7
  40696a:	f001 fd01 	bl	408370 <__aeabi_fcmpeq>
  40696e:	2800      	cmp	r0, #0
  406970:	f000 8083 	beq.w	406a7a <__kernel_rem_pio2f+0x386>
  406974:	9b05      	ldr	r3, [sp, #20]
  406976:	f108 37ff 	add.w	r7, r8, #4294967295
  40697a:	42bb      	cmp	r3, r7
  40697c:	dc0f      	bgt.n	40699e <__kernel_rem_pio2f+0x2aa>
  40697e:	f108 4380 	add.w	r3, r8, #1073741824	; 0x40000000
  406982:	3b01      	subs	r3, #1
  406984:	980b      	ldr	r0, [sp, #44]	; 0x2c
  406986:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
  40698a:	2200      	movs	r2, #0
  40698c:	f853 1904 	ldr.w	r1, [r3], #-4
  406990:	4283      	cmp	r3, r0
  406992:	ea42 0201 	orr.w	r2, r2, r1
  406996:	d1f9      	bne.n	40698c <__kernel_rem_pio2f+0x298>
  406998:	2a00      	cmp	r2, #0
  40699a:	f040 809d 	bne.w	406ad8 <__kernel_rem_pio2f+0x3e4>
  40699e:	9b05      	ldr	r3, [sp, #20]
  4069a0:	3b01      	subs	r3, #1
  4069a2:	f85a 3023 	ldr.w	r3, [sl, r3, lsl #2]
  4069a6:	2b00      	cmp	r3, #0
  4069a8:	f040 81f4 	bne.w	406d94 <__kernel_rem_pio2f+0x6a0>
  4069ac:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4069ae:	2301      	movs	r3, #1
  4069b0:	f852 1904 	ldr.w	r1, [r2], #-4
  4069b4:	3301      	adds	r3, #1
  4069b6:	2900      	cmp	r1, #0
  4069b8:	d0fa      	beq.n	4069b0 <__kernel_rem_pio2f+0x2bc>
  4069ba:	4443      	add	r3, r8
  4069bc:	461a      	mov	r2, r3
  4069be:	9306      	str	r3, [sp, #24]
  4069c0:	f108 0301 	add.w	r3, r8, #1
  4069c4:	4293      	cmp	r3, r2
  4069c6:	dc37      	bgt.n	406a38 <__kernel_rem_pio2f+0x344>
  4069c8:	9908      	ldr	r1, [sp, #32]
  4069ca:	9a09      	ldr	r2, [sp, #36]	; 0x24
  4069cc:	eb01 0708 	add.w	r7, r1, r8
  4069d0:	a920      	add	r1, sp, #128	; 0x80
  4069d2:	eb01 0787 	add.w	r7, r1, r7, lsl #2
  4069d6:	9906      	ldr	r1, [sp, #24]
  4069d8:	189e      	adds	r6, r3, r2
  4069da:	eb01 0902 	add.w	r9, r1, r2
  4069de:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
  4069e2:	9a67      	ldr	r2, [sp, #412]	; 0x19c
  4069e4:	3e01      	subs	r6, #1
  4069e6:	eb02 0686 	add.w	r6, r2, r6, lsl #2
  4069ea:	aa48      	add	r2, sp, #288	; 0x120
  4069ec:	eb02 0883 	add.w	r8, r2, r3, lsl #2
  4069f0:	9b67      	ldr	r3, [sp, #412]	; 0x19c
  4069f2:	eb03 0389 	add.w	r3, r3, r9, lsl #2
  4069f6:	9303      	str	r3, [sp, #12]
  4069f8:	f856 0f04 	ldr.w	r0, [r6, #4]!
  4069fc:	f001 fad0 	bl	407fa0 <__aeabi_i2f>
  406a00:	9b01      	ldr	r3, [sp, #4]
  406a02:	f847 0b04 	str.w	r0, [r7], #4
  406a06:	2b00      	cmp	r3, #0
  406a08:	db19      	blt.n	406a3e <__kernel_rem_pio2f+0x34a>
  406a0a:	9b02      	ldr	r3, [sp, #8]
  406a0c:	46bb      	mov	fp, r7
  406a0e:	1f1c      	subs	r4, r3, #4
  406a10:	f04f 0900 	mov.w	r9, #0
  406a14:	f85b 1d04 	ldr.w	r1, [fp, #-4]!
  406a18:	f854 0f04 	ldr.w	r0, [r4, #4]!
  406a1c:	f001 fb14 	bl	408048 <__aeabi_fmul>
  406a20:	4601      	mov	r1, r0
  406a22:	4648      	mov	r0, r9
  406a24:	f001 fa08 	bl	407e38 <__addsf3>
  406a28:	42ac      	cmp	r4, r5
  406a2a:	4681      	mov	r9, r0
  406a2c:	d1f2      	bne.n	406a14 <__kernel_rem_pio2f+0x320>
  406a2e:	9b03      	ldr	r3, [sp, #12]
  406a30:	f848 9b04 	str.w	r9, [r8], #4
  406a34:	429e      	cmp	r6, r3
  406a36:	d1df      	bne.n	4069f8 <__kernel_rem_pio2f+0x304>
  406a38:	f8dd 8018 	ldr.w	r8, [sp, #24]
  406a3c:	e6d1      	b.n	4067e2 <__kernel_rem_pio2f+0xee>
  406a3e:	9b03      	ldr	r3, [sp, #12]
  406a40:	f04f 0900 	mov.w	r9, #0
  406a44:	429e      	cmp	r6, r3
  406a46:	f848 9b04 	str.w	r9, [r8], #4
  406a4a:	d1d5      	bne.n	4069f8 <__kernel_rem_pio2f+0x304>
  406a4c:	e7f4      	b.n	406a38 <__kernel_rem_pio2f+0x344>
  406a4e:	d105      	bne.n	406a5c <__kernel_rem_pio2f+0x368>
  406a50:	f108 33ff 	add.w	r3, r8, #4294967295
  406a54:	f85a 4023 	ldr.w	r4, [sl, r3, lsl #2]
  406a58:	1224      	asrs	r4, r4, #8
  406a5a:	e726      	b.n	4068aa <__kernel_rem_pio2f+0x1b6>
  406a5c:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
  406a60:	f001 fca4 	bl	4083ac <__aeabi_fcmpge>
  406a64:	2800      	cmp	r0, #0
  406a66:	f040 8153 	bne.w	406d10 <__kernel_rem_pio2f+0x61c>
  406a6a:	4604      	mov	r4, r0
  406a6c:	2100      	movs	r1, #0
  406a6e:	4638      	mov	r0, r7
  406a70:	f001 fc7e 	bl	408370 <__aeabi_fcmpeq>
  406a74:	2800      	cmp	r0, #0
  406a76:	f47f af7d 	bne.w	406974 <__kernel_rem_pio2f+0x280>
  406a7a:	9e04      	ldr	r6, [sp, #16]
  406a7c:	4638      	mov	r0, r7
  406a7e:	4271      	negs	r1, r6
  406a80:	f000 fca4 	bl	4073cc <scalbnf>
  406a84:	f04f 4187 	mov.w	r1, #1132462080	; 0x43800000
  406a88:	46a1      	mov	r9, r4
  406a8a:	4604      	mov	r4, r0
  406a8c:	f001 fc8e 	bl	4083ac <__aeabi_fcmpge>
  406a90:	2800      	cmp	r0, #0
  406a92:	f000 818d 	beq.w	406db0 <__kernel_rem_pio2f+0x6bc>
  406a96:	f04f 516e 	mov.w	r1, #998244352	; 0x3b800000
  406a9a:	4620      	mov	r0, r4
  406a9c:	f001 fad4 	bl	408048 <__aeabi_fmul>
  406aa0:	f001 fc98 	bl	4083d4 <__aeabi_f2iz>
  406aa4:	f001 fa7c 	bl	407fa0 <__aeabi_i2f>
  406aa8:	f04f 4187 	mov.w	r1, #1132462080	; 0x43800000
  406aac:	4605      	mov	r5, r0
  406aae:	f001 facb 	bl	408048 <__aeabi_fmul>
  406ab2:	4601      	mov	r1, r0
  406ab4:	4620      	mov	r0, r4
  406ab6:	f001 f9bd 	bl	407e34 <__aeabi_fsub>
  406aba:	f001 fc8b 	bl	4083d4 <__aeabi_f2iz>
  406abe:	f84a 0028 	str.w	r0, [sl, r8, lsl #2]
  406ac2:	4628      	mov	r0, r5
  406ac4:	f001 fc86 	bl	4083d4 <__aeabi_f2iz>
  406ac8:	f108 0701 	add.w	r7, r8, #1
  406acc:	4633      	mov	r3, r6
  406ace:	3308      	adds	r3, #8
  406ad0:	9304      	str	r3, [sp, #16]
  406ad2:	f84a 0027 	str.w	r0, [sl, r7, lsl #2]
  406ad6:	e012      	b.n	406afe <__kernel_rem_pio2f+0x40a>
  406ad8:	9a04      	ldr	r2, [sp, #16]
  406ada:	f85a 3027 	ldr.w	r3, [sl, r7, lsl #2]
  406ade:	3a08      	subs	r2, #8
  406ae0:	46a1      	mov	r9, r4
  406ae2:	9204      	str	r2, [sp, #16]
  406ae4:	b95b      	cbnz	r3, 406afe <__kernel_rem_pio2f+0x40a>
  406ae6:	f107 4380 	add.w	r3, r7, #1073741824	; 0x40000000
  406aea:	3b01      	subs	r3, #1
  406aec:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
  406af0:	f853 1904 	ldr.w	r1, [r3], #-4
  406af4:	3f01      	subs	r7, #1
  406af6:	3a08      	subs	r2, #8
  406af8:	2900      	cmp	r1, #0
  406afa:	d0f9      	beq.n	406af0 <__kernel_rem_pio2f+0x3fc>
  406afc:	9204      	str	r2, [sp, #16]
  406afe:	9904      	ldr	r1, [sp, #16]
  406b00:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  406b04:	f000 fc62 	bl	4073cc <scalbnf>
  406b08:	2f00      	cmp	r7, #0
  406b0a:	4604      	mov	r4, r0
  406b0c:	f2c0 815c 	blt.w	406dc8 <__kernel_rem_pio2f+0x6d4>
  406b10:	00bb      	lsls	r3, r7, #2
  406b12:	a948      	add	r1, sp, #288	; 0x120
  406b14:	1d1a      	adds	r2, r3, #4
  406b16:	eb01 0803 	add.w	r8, r1, r3
  406b1a:	9301      	str	r3, [sp, #4]
  406b1c:	9202      	str	r2, [sp, #8]
  406b1e:	f04f 566e 	mov.w	r6, #998244352	; 0x3b800000
  406b22:	eb0a 0b02 	add.w	fp, sl, r2
  406b26:	f108 0504 	add.w	r5, r8, #4
  406b2a:	f85b 0d04 	ldr.w	r0, [fp, #-4]!
  406b2e:	f001 fa37 	bl	407fa0 <__aeabi_i2f>
  406b32:	4621      	mov	r1, r4
  406b34:	f001 fa88 	bl	408048 <__aeabi_fmul>
  406b38:	4631      	mov	r1, r6
  406b3a:	f845 0d04 	str.w	r0, [r5, #-4]!
  406b3e:	4620      	mov	r0, r4
  406b40:	f001 fa82 	bl	408048 <__aeabi_fmul>
  406b44:	45d3      	cmp	fp, sl
  406b46:	4604      	mov	r4, r0
  406b48:	d1ef      	bne.n	406b2a <__kernel_rem_pio2f+0x436>
  406b4a:	2600      	movs	r6, #0
  406b4c:	f8dd b014 	ldr.w	fp, [sp, #20]
  406b50:	9703      	str	r7, [sp, #12]
  406b52:	f1a8 0804 	sub.w	r8, r8, #4
  406b56:	46b2      	mov	sl, r6
  406b58:	f1bb 0f00 	cmp.w	fp, #0
  406b5c:	bfb8      	it	lt
  406b5e:	2500      	movlt	r5, #0
  406b60:	db15      	blt.n	406b8e <__kernel_rem_pio2f+0x49a>
  406b62:	4ea5      	ldr	r6, [pc, #660]	; (406df8 <__kernel_rem_pio2f+0x704>)
  406b64:	48a5      	ldr	r0, [pc, #660]	; (406dfc <__kernel_rem_pio2f+0x708>)
  406b66:	4647      	mov	r7, r8
  406b68:	2500      	movs	r5, #0
  406b6a:	2400      	movs	r4, #0
  406b6c:	e003      	b.n	406b76 <__kernel_rem_pio2f+0x482>
  406b6e:	4554      	cmp	r4, sl
  406b70:	dc0d      	bgt.n	406b8e <__kernel_rem_pio2f+0x49a>
  406b72:	f856 0f04 	ldr.w	r0, [r6, #4]!
  406b76:	f857 1f04 	ldr.w	r1, [r7, #4]!
  406b7a:	f001 fa65 	bl	408048 <__aeabi_fmul>
  406b7e:	4601      	mov	r1, r0
  406b80:	4628      	mov	r0, r5
  406b82:	f001 f959 	bl	407e38 <__addsf3>
  406b86:	3401      	adds	r4, #1
  406b88:	45a3      	cmp	fp, r4
  406b8a:	4605      	mov	r5, r0
  406b8c:	daef      	bge.n	406b6e <__kernel_rem_pio2f+0x47a>
  406b8e:	ab5c      	add	r3, sp, #368	; 0x170
  406b90:	eb03 038a 	add.w	r3, r3, sl, lsl #2
  406b94:	f1a8 0804 	sub.w	r8, r8, #4
  406b98:	f843 5ca0 	str.w	r5, [r3, #-160]
  406b9c:	ab46      	add	r3, sp, #280	; 0x118
  406b9e:	4543      	cmp	r3, r8
  406ba0:	f10a 0a01 	add.w	sl, sl, #1
  406ba4:	d1d8      	bne.n	406b58 <__kernel_rem_pio2f+0x464>
  406ba6:	9b66      	ldr	r3, [sp, #408]	; 0x198
  406ba8:	9f03      	ldr	r7, [sp, #12]
  406baa:	2b03      	cmp	r3, #3
  406bac:	d85a      	bhi.n	406c64 <__kernel_rem_pio2f+0x570>
  406bae:	e8df f003 	tbb	[pc, r3]
  406bb2:	5f8e      	.short	0x5f8e
  406bb4:	025f      	.short	0x025f
  406bb6:	2f00      	cmp	r7, #0
  406bb8:	f340 8104 	ble.w	406dc4 <__kernel_rem_pio2f+0x6d0>
  406bbc:	9a01      	ldr	r2, [sp, #4]
  406bbe:	a95c      	add	r1, sp, #368	; 0x170
  406bc0:	188b      	adds	r3, r1, r2
  406bc2:	ac34      	add	r4, sp, #208	; 0xd0
  406bc4:	f853 6ca0 	ldr.w	r6, [r3, #-160]
  406bc8:	18a5      	adds	r5, r4, r2
  406bca:	f855 ac04 	ldr.w	sl, [r5, #-4]
  406bce:	4631      	mov	r1, r6
  406bd0:	4650      	mov	r0, sl
  406bd2:	f001 f931 	bl	407e38 <__addsf3>
  406bd6:	4680      	mov	r8, r0
  406bd8:	4601      	mov	r1, r0
  406bda:	4650      	mov	r0, sl
  406bdc:	f001 f92a 	bl	407e34 <__aeabi_fsub>
  406be0:	4631      	mov	r1, r6
  406be2:	f001 f929 	bl	407e38 <__addsf3>
  406be6:	6028      	str	r0, [r5, #0]
  406be8:	f845 8d04 	str.w	r8, [r5, #-4]!
  406bec:	42ac      	cmp	r4, r5
  406bee:	4646      	mov	r6, r8
  406bf0:	d1eb      	bne.n	406bca <__kernel_rem_pio2f+0x4d6>
  406bf2:	2f01      	cmp	r7, #1
  406bf4:	f340 80e6 	ble.w	406dc4 <__kernel_rem_pio2f+0x6d0>
  406bf8:	9a01      	ldr	r2, [sp, #4]
  406bfa:	a95c      	add	r1, sp, #368	; 0x170
  406bfc:	188b      	adds	r3, r1, r2
  406bfe:	4414      	add	r4, r2
  406c00:	f853 6ca0 	ldr.w	r6, [r3, #-160]
  406c04:	4625      	mov	r5, r4
  406c06:	f10d 0ad4 	add.w	sl, sp, #212	; 0xd4
  406c0a:	f855 8c04 	ldr.w	r8, [r5, #-4]
  406c0e:	4631      	mov	r1, r6
  406c10:	4640      	mov	r0, r8
  406c12:	f001 f911 	bl	407e38 <__addsf3>
  406c16:	4607      	mov	r7, r0
  406c18:	4601      	mov	r1, r0
  406c1a:	4640      	mov	r0, r8
  406c1c:	f001 f90a 	bl	407e34 <__aeabi_fsub>
  406c20:	4631      	mov	r1, r6
  406c22:	f001 f909 	bl	407e38 <__addsf3>
  406c26:	6028      	str	r0, [r5, #0]
  406c28:	f845 7d04 	str.w	r7, [r5, #-4]!
  406c2c:	45aa      	cmp	sl, r5
  406c2e:	463e      	mov	r6, r7
  406c30:	d1eb      	bne.n	406c0a <__kernel_rem_pio2f+0x516>
  406c32:	2000      	movs	r0, #0
  406c34:	3404      	adds	r4, #4
  406c36:	ad36      	add	r5, sp, #216	; 0xd8
  406c38:	f854 1d04 	ldr.w	r1, [r4, #-4]!
  406c3c:	f001 f8fc 	bl	407e38 <__addsf3>
  406c40:	42a5      	cmp	r5, r4
  406c42:	d1f9      	bne.n	406c38 <__kernel_rem_pio2f+0x544>
  406c44:	f1b9 0f00 	cmp.w	r9, #0
  406c48:	f000 80b9 	beq.w	406dbe <__kernel_rem_pio2f+0x6ca>
  406c4c:	9a34      	ldr	r2, [sp, #208]	; 0xd0
  406c4e:	9b35      	ldr	r3, [sp, #212]	; 0xd4
  406c50:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
  406c54:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
  406c58:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
  406c5c:	9c07      	ldr	r4, [sp, #28]
  406c5e:	60a0      	str	r0, [r4, #8]
  406c60:	6022      	str	r2, [r4, #0]
  406c62:	6063      	str	r3, [r4, #4]
  406c64:	9b06      	ldr	r3, [sp, #24]
  406c66:	f003 0007 	and.w	r0, r3, #7
  406c6a:	b05d      	add	sp, #372	; 0x174
  406c6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406c70:	9c01      	ldr	r4, [sp, #4]
  406c72:	ad34      	add	r5, sp, #208	; 0xd0
  406c74:	3404      	adds	r4, #4
  406c76:	442c      	add	r4, r5
  406c78:	2000      	movs	r0, #0
  406c7a:	f854 1d04 	ldr.w	r1, [r4, #-4]!
  406c7e:	f001 f8db 	bl	407e38 <__addsf3>
  406c82:	42ac      	cmp	r4, r5
  406c84:	d1f9      	bne.n	406c7a <__kernel_rem_pio2f+0x586>
  406c86:	f1b9 0f00 	cmp.w	r9, #0
  406c8a:	f000 8085 	beq.w	406d98 <__kernel_rem_pio2f+0x6a4>
  406c8e:	9a07      	ldr	r2, [sp, #28]
  406c90:	f100 4300 	add.w	r3, r0, #2147483648	; 0x80000000
  406c94:	4601      	mov	r1, r0
  406c96:	6013      	str	r3, [r2, #0]
  406c98:	9834      	ldr	r0, [sp, #208]	; 0xd0
  406c9a:	f001 f8cb 	bl	407e34 <__aeabi_fsub>
  406c9e:	2f00      	cmp	r7, #0
  406ca0:	dd0b      	ble.n	406cba <__kernel_rem_pio2f+0x5c6>
  406ca2:	ad34      	add	r5, sp, #208	; 0xd0
  406ca4:	2401      	movs	r4, #1
  406ca6:	3401      	adds	r4, #1
  406ca8:	f855 1f04 	ldr.w	r1, [r5, #4]!
  406cac:	f001 f8c4 	bl	407e38 <__addsf3>
  406cb0:	42a7      	cmp	r7, r4
  406cb2:	daf8      	bge.n	406ca6 <__kernel_rem_pio2f+0x5b2>
  406cb4:	f1b9 0f00 	cmp.w	r9, #0
  406cb8:	d001      	beq.n	406cbe <__kernel_rem_pio2f+0x5ca>
  406cba:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
  406cbe:	9b07      	ldr	r3, [sp, #28]
  406cc0:	6058      	str	r0, [r3, #4]
  406cc2:	9b06      	ldr	r3, [sp, #24]
  406cc4:	f003 0007 	and.w	r0, r3, #7
  406cc8:	b05d      	add	sp, #372	; 0x174
  406cca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406cce:	9b02      	ldr	r3, [sp, #8]
  406cd0:	ad34      	add	r5, sp, #208	; 0xd0
  406cd2:	442b      	add	r3, r5
  406cd4:	2000      	movs	r0, #0
  406cd6:	461c      	mov	r4, r3
  406cd8:	f854 1d04 	ldr.w	r1, [r4, #-4]!
  406cdc:	f001 f8ac 	bl	407e38 <__addsf3>
  406ce0:	42a5      	cmp	r5, r4
  406ce2:	d1f9      	bne.n	406cd8 <__kernel_rem_pio2f+0x5e4>
  406ce4:	f1b9 0f00 	cmp.w	r9, #0
  406ce8:	d001      	beq.n	406cee <__kernel_rem_pio2f+0x5fa>
  406cea:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
  406cee:	9b07      	ldr	r3, [sp, #28]
  406cf0:	6018      	str	r0, [r3, #0]
  406cf2:	9b06      	ldr	r3, [sp, #24]
  406cf4:	f003 0007 	and.w	r0, r3, #7
  406cf8:	b05d      	add	sp, #372	; 0x174
  406cfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406cfe:	46ca      	mov	sl, r9
  406d00:	f847 af04 	str.w	sl, [r7, #4]!
  406d04:	4547      	cmp	r7, r8
  406d06:	f106 0604 	add.w	r6, r6, #4
  406d0a:	f47f ad3b 	bne.w	406784 <__kernel_rem_pio2f+0x90>
  406d0e:	e554      	b.n	4067ba <__kernel_rem_pio2f+0xc6>
  406d10:	9b06      	ldr	r3, [sp, #24]
  406d12:	f1b8 0f00 	cmp.w	r8, #0
  406d16:	f103 0301 	add.w	r3, r3, #1
  406d1a:	9306      	str	r3, [sp, #24]
  406d1c:	bfc8      	it	gt
  406d1e:	2402      	movgt	r4, #2
  406d20:	f73f adcd 	bgt.w	4068be <__kernel_rem_pio2f+0x1ca>
  406d24:	4639      	mov	r1, r7
  406d26:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  406d2a:	f001 f883 	bl	407e34 <__aeabi_fsub>
  406d2e:	2402      	movs	r4, #2
  406d30:	4607      	mov	r7, r0
  406d32:	e618      	b.n	406966 <__kernel_rem_pio2f+0x272>
  406d34:	9b04      	ldr	r3, [sp, #16]
  406d36:	2b00      	cmp	r3, #0
  406d38:	dd22      	ble.n	406d80 <__kernel_rem_pio2f+0x68c>
  406d3a:	2600      	movs	r6, #0
  406d3c:	9b04      	ldr	r3, [sp, #16]
  406d3e:	2b01      	cmp	r3, #1
  406d40:	f43f adf2 	beq.w	406928 <__kernel_rem_pio2f+0x234>
  406d44:	2b02      	cmp	r3, #2
  406d46:	d107      	bne.n	406d58 <__kernel_rem_pio2f+0x664>
  406d48:	f108 32ff 	add.w	r2, r8, #4294967295
  406d4c:	f85a 3022 	ldr.w	r3, [sl, r2, lsl #2]
  406d50:	f003 033f 	and.w	r3, r3, #63	; 0x3f
  406d54:	f84a 3022 	str.w	r3, [sl, r2, lsl #2]
  406d58:	2c02      	cmp	r4, #2
  406d5a:	f47f ae04 	bne.w	406966 <__kernel_rem_pio2f+0x272>
  406d5e:	4639      	mov	r1, r7
  406d60:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  406d64:	f001 f866 	bl	407e34 <__aeabi_fsub>
  406d68:	4607      	mov	r7, r0
  406d6a:	2e00      	cmp	r6, #0
  406d6c:	f43f adfb 	beq.w	406966 <__kernel_rem_pio2f+0x272>
  406d70:	e5ee      	b.n	406950 <__kernel_rem_pio2f+0x25c>
  406d72:	3301      	adds	r3, #1
  406d74:	4598      	cmp	r8, r3
  406d76:	f47f adad 	bne.w	4068d4 <__kernel_rem_pio2f+0x1e0>
  406d7a:	9b04      	ldr	r3, [sp, #16]
  406d7c:	2b00      	cmp	r3, #0
  406d7e:	dcdd      	bgt.n	406d3c <__kernel_rem_pio2f+0x648>
  406d80:	2c02      	cmp	r4, #2
  406d82:	f47f adf0 	bne.w	406966 <__kernel_rem_pio2f+0x272>
  406d86:	4639      	mov	r1, r7
  406d88:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  406d8c:	f001 f852 	bl	407e34 <__aeabi_fsub>
  406d90:	4607      	mov	r7, r0
  406d92:	e5e8      	b.n	406966 <__kernel_rem_pio2f+0x272>
  406d94:	2301      	movs	r3, #1
  406d96:	e610      	b.n	4069ba <__kernel_rem_pio2f+0x2c6>
  406d98:	9b07      	ldr	r3, [sp, #28]
  406d9a:	4601      	mov	r1, r0
  406d9c:	6018      	str	r0, [r3, #0]
  406d9e:	9834      	ldr	r0, [sp, #208]	; 0xd0
  406da0:	f001 f848 	bl	407e34 <__aeabi_fsub>
  406da4:	2f00      	cmp	r7, #0
  406da6:	f73f af7c 	bgt.w	406ca2 <__kernel_rem_pio2f+0x5ae>
  406daa:	9b07      	ldr	r3, [sp, #28]
  406dac:	6058      	str	r0, [r3, #4]
  406dae:	e788      	b.n	406cc2 <__kernel_rem_pio2f+0x5ce>
  406db0:	4620      	mov	r0, r4
  406db2:	f001 fb0f 	bl	4083d4 <__aeabi_f2iz>
  406db6:	4647      	mov	r7, r8
  406db8:	f84a 0028 	str.w	r0, [sl, r8, lsl #2]
  406dbc:	e69f      	b.n	406afe <__kernel_rem_pio2f+0x40a>
  406dbe:	9a34      	ldr	r2, [sp, #208]	; 0xd0
  406dc0:	9b35      	ldr	r3, [sp, #212]	; 0xd4
  406dc2:	e74b      	b.n	406c5c <__kernel_rem_pio2f+0x568>
  406dc4:	2000      	movs	r0, #0
  406dc6:	e73d      	b.n	406c44 <__kernel_rem_pio2f+0x550>
  406dc8:	9b66      	ldr	r3, [sp, #408]	; 0x198
  406dca:	2b03      	cmp	r3, #3
  406dcc:	f63f af4a 	bhi.w	406c64 <__kernel_rem_pio2f+0x570>
  406dd0:	a201      	add	r2, pc, #4	; (adr r2, 406dd8 <__kernel_rem_pio2f+0x6e4>)
  406dd2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  406dd6:	bf00      	nop
  406dd8:	00406ded 	.word	0x00406ded
  406ddc:	00406de9 	.word	0x00406de9
  406de0:	00406de9 	.word	0x00406de9
  406de4:	00406dc5 	.word	0x00406dc5
  406de8:	2000      	movs	r0, #0
  406dea:	e74c      	b.n	406c86 <__kernel_rem_pio2f+0x592>
  406dec:	2000      	movs	r0, #0
  406dee:	e779      	b.n	406ce4 <__kernel_rem_pio2f+0x5f0>
  406df0:	2101      	movs	r1, #1
  406df2:	2300      	movs	r3, #0
  406df4:	e574      	b.n	4068e0 <__kernel_rem_pio2f+0x1ec>
  406df6:	bf00      	nop
  406df8:	0040f5e0 	.word	0x0040f5e0
  406dfc:	3fc90000 	.word	0x3fc90000

00406e00 <__kernel_sinf>:
  406e00:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  406e04:	f020 4300 	bic.w	r3, r0, #2147483648	; 0x80000000
  406e08:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
  406e0c:	4604      	mov	r4, r0
  406e0e:	460f      	mov	r7, r1
  406e10:	4690      	mov	r8, r2
  406e12:	da03      	bge.n	406e1c <__kernel_sinf+0x1c>
  406e14:	f001 fade 	bl	4083d4 <__aeabi_f2iz>
  406e18:	2800      	cmp	r0, #0
  406e1a:	d058      	beq.n	406ece <__kernel_sinf+0xce>
  406e1c:	4621      	mov	r1, r4
  406e1e:	4620      	mov	r0, r4
  406e20:	f001 f912 	bl	408048 <__aeabi_fmul>
  406e24:	4605      	mov	r5, r0
  406e26:	4601      	mov	r1, r0
  406e28:	4620      	mov	r0, r4
  406e2a:	f001 f90d 	bl	408048 <__aeabi_fmul>
  406e2e:	4929      	ldr	r1, [pc, #164]	; (406ed4 <__kernel_sinf+0xd4>)
  406e30:	4606      	mov	r6, r0
  406e32:	4628      	mov	r0, r5
  406e34:	f001 f908 	bl	408048 <__aeabi_fmul>
  406e38:	4927      	ldr	r1, [pc, #156]	; (406ed8 <__kernel_sinf+0xd8>)
  406e3a:	f000 fffb 	bl	407e34 <__aeabi_fsub>
  406e3e:	4629      	mov	r1, r5
  406e40:	f001 f902 	bl	408048 <__aeabi_fmul>
  406e44:	4925      	ldr	r1, [pc, #148]	; (406edc <__kernel_sinf+0xdc>)
  406e46:	f000 fff7 	bl	407e38 <__addsf3>
  406e4a:	4629      	mov	r1, r5
  406e4c:	f001 f8fc 	bl	408048 <__aeabi_fmul>
  406e50:	4923      	ldr	r1, [pc, #140]	; (406ee0 <__kernel_sinf+0xe0>)
  406e52:	f000 ffef 	bl	407e34 <__aeabi_fsub>
  406e56:	4629      	mov	r1, r5
  406e58:	f001 f8f6 	bl	408048 <__aeabi_fmul>
  406e5c:	4921      	ldr	r1, [pc, #132]	; (406ee4 <__kernel_sinf+0xe4>)
  406e5e:	f000 ffeb 	bl	407e38 <__addsf3>
  406e62:	4681      	mov	r9, r0
  406e64:	f1b8 0f00 	cmp.w	r8, #0
  406e68:	d022      	beq.n	406eb0 <__kernel_sinf+0xb0>
  406e6a:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
  406e6e:	4638      	mov	r0, r7
  406e70:	f001 f8ea 	bl	408048 <__aeabi_fmul>
  406e74:	4649      	mov	r1, r9
  406e76:	4680      	mov	r8, r0
  406e78:	4630      	mov	r0, r6
  406e7a:	f001 f8e5 	bl	408048 <__aeabi_fmul>
  406e7e:	4601      	mov	r1, r0
  406e80:	4640      	mov	r0, r8
  406e82:	f000 ffd7 	bl	407e34 <__aeabi_fsub>
  406e86:	4629      	mov	r1, r5
  406e88:	f001 f8de 	bl	408048 <__aeabi_fmul>
  406e8c:	4639      	mov	r1, r7
  406e8e:	f000 ffd1 	bl	407e34 <__aeabi_fsub>
  406e92:	4915      	ldr	r1, [pc, #84]	; (406ee8 <__kernel_sinf+0xe8>)
  406e94:	4605      	mov	r5, r0
  406e96:	4630      	mov	r0, r6
  406e98:	f001 f8d6 	bl	408048 <__aeabi_fmul>
  406e9c:	4601      	mov	r1, r0
  406e9e:	4628      	mov	r0, r5
  406ea0:	f000 ffca 	bl	407e38 <__addsf3>
  406ea4:	4601      	mov	r1, r0
  406ea6:	4620      	mov	r0, r4
  406ea8:	f000 ffc4 	bl	407e34 <__aeabi_fsub>
  406eac:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  406eb0:	4601      	mov	r1, r0
  406eb2:	4628      	mov	r0, r5
  406eb4:	f001 f8c8 	bl	408048 <__aeabi_fmul>
  406eb8:	490b      	ldr	r1, [pc, #44]	; (406ee8 <__kernel_sinf+0xe8>)
  406eba:	f000 ffbb 	bl	407e34 <__aeabi_fsub>
  406ebe:	4631      	mov	r1, r6
  406ec0:	f001 f8c2 	bl	408048 <__aeabi_fmul>
  406ec4:	4621      	mov	r1, r4
  406ec6:	f000 ffb7 	bl	407e38 <__addsf3>
  406eca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  406ece:	4620      	mov	r0, r4
  406ed0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  406ed4:	2f2ec9d3 	.word	0x2f2ec9d3
  406ed8:	32d72f34 	.word	0x32d72f34
  406edc:	3638ef1b 	.word	0x3638ef1b
  406ee0:	39500d01 	.word	0x39500d01
  406ee4:	3c088889 	.word	0x3c088889
  406ee8:	3e2aaaab 	.word	0x3e2aaaab

00406eec <fabs>:
  406eec:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  406ef0:	4770      	bx	lr
  406ef2:	bf00      	nop
  406ef4:	0000      	movs	r0, r0
	...

00406ef8 <floor>:
  406ef8:	f3c1 520a 	ubfx	r2, r1, #20, #11
  406efc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  406f00:	f2a2 36ff 	subw	r6, r2, #1023	; 0x3ff
  406f04:	2e13      	cmp	r6, #19
  406f06:	460b      	mov	r3, r1
  406f08:	460d      	mov	r5, r1
  406f0a:	4604      	mov	r4, r0
  406f0c:	4688      	mov	r8, r1
  406f0e:	4607      	mov	r7, r0
  406f10:	dc1d      	bgt.n	406f4e <floor+0x56>
  406f12:	2e00      	cmp	r6, #0
  406f14:	db40      	blt.n	406f98 <floor+0xa0>
  406f16:	4a3c      	ldr	r2, [pc, #240]	; (407008 <floor+0x110>)
  406f18:	fa42 f906 	asr.w	r9, r2, r6
  406f1c:	ea01 0209 	and.w	r2, r1, r9
  406f20:	4302      	orrs	r2, r0
  406f22:	4686      	mov	lr, r0
  406f24:	d018      	beq.n	406f58 <floor+0x60>
  406f26:	a336      	add	r3, pc, #216	; (adr r3, 407000 <floor+0x108>)
  406f28:	e9d3 2300 	ldrd	r2, r3, [r3]
  406f2c:	f000 faba 	bl	4074a4 <__adddf3>
  406f30:	2200      	movs	r2, #0
  406f32:	2300      	movs	r3, #0
  406f34:	f000 fef8 	bl	407d28 <__aeabi_dcmpgt>
  406f38:	b120      	cbz	r0, 406f44 <floor+0x4c>
  406f3a:	2d00      	cmp	r5, #0
  406f3c:	db42      	blt.n	406fc4 <floor+0xcc>
  406f3e:	ea28 0509 	bic.w	r5, r8, r9
  406f42:	2700      	movs	r7, #0
  406f44:	463c      	mov	r4, r7
  406f46:	4629      	mov	r1, r5
  406f48:	4620      	mov	r0, r4
  406f4a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  406f4e:	2e33      	cmp	r6, #51	; 0x33
  406f50:	dd06      	ble.n	406f60 <floor+0x68>
  406f52:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
  406f56:	d02f      	beq.n	406fb8 <floor+0xc0>
  406f58:	4619      	mov	r1, r3
  406f5a:	4620      	mov	r0, r4
  406f5c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  406f60:	f2a2 4213 	subw	r2, r2, #1043	; 0x413
  406f64:	f04f 39ff 	mov.w	r9, #4294967295
  406f68:	fa29 f902 	lsr.w	r9, r9, r2
  406f6c:	ea10 0f09 	tst.w	r0, r9
  406f70:	d0f2      	beq.n	406f58 <floor+0x60>
  406f72:	a323      	add	r3, pc, #140	; (adr r3, 407000 <floor+0x108>)
  406f74:	e9d3 2300 	ldrd	r2, r3, [r3]
  406f78:	f000 fa94 	bl	4074a4 <__adddf3>
  406f7c:	2200      	movs	r2, #0
  406f7e:	2300      	movs	r3, #0
  406f80:	f000 fed2 	bl	407d28 <__aeabi_dcmpgt>
  406f84:	2800      	cmp	r0, #0
  406f86:	d0dd      	beq.n	406f44 <floor+0x4c>
  406f88:	2d00      	cmp	r5, #0
  406f8a:	db21      	blt.n	406fd0 <floor+0xd8>
  406f8c:	4645      	mov	r5, r8
  406f8e:	ea27 0709 	bic.w	r7, r7, r9
  406f92:	463c      	mov	r4, r7
  406f94:	4629      	mov	r1, r5
  406f96:	e7d7      	b.n	406f48 <floor+0x50>
  406f98:	a319      	add	r3, pc, #100	; (adr r3, 407000 <floor+0x108>)
  406f9a:	e9d3 2300 	ldrd	r2, r3, [r3]
  406f9e:	f000 fa81 	bl	4074a4 <__adddf3>
  406fa2:	2200      	movs	r2, #0
  406fa4:	2300      	movs	r3, #0
  406fa6:	f000 febf 	bl	407d28 <__aeabi_dcmpgt>
  406faa:	2800      	cmp	r0, #0
  406fac:	d0ca      	beq.n	406f44 <floor+0x4c>
  406fae:	2d00      	cmp	r5, #0
  406fb0:	db19      	blt.n	406fe6 <floor+0xee>
  406fb2:	2700      	movs	r7, #0
  406fb4:	463d      	mov	r5, r7
  406fb6:	e7c5      	b.n	406f44 <floor+0x4c>
  406fb8:	4602      	mov	r2, r0
  406fba:	460b      	mov	r3, r1
  406fbc:	f000 fa72 	bl	4074a4 <__adddf3>
  406fc0:	4604      	mov	r4, r0
  406fc2:	e7ca      	b.n	406f5a <floor+0x62>
  406fc4:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
  406fc8:	fa43 f606 	asr.w	r6, r3, r6
  406fcc:	44b0      	add	r8, r6
  406fce:	e7b6      	b.n	406f3e <floor+0x46>
  406fd0:	2e14      	cmp	r6, #20
  406fd2:	d010      	beq.n	406ff6 <floor+0xfe>
  406fd4:	2301      	movs	r3, #1
  406fd6:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
  406fda:	fa03 f606 	lsl.w	r6, r3, r6
  406fde:	1937      	adds	r7, r6, r4
  406fe0:	bf28      	it	cs
  406fe2:	4498      	addcs	r8, r3
  406fe4:	e7d2      	b.n	406f8c <floor+0x94>
  406fe6:	f025 4200 	bic.w	r2, r5, #2147483648	; 0x80000000
  406fea:	4b08      	ldr	r3, [pc, #32]	; (40700c <floor+0x114>)
  406fec:	4322      	orrs	r2, r4
  406fee:	bf18      	it	ne
  406ff0:	461d      	movne	r5, r3
  406ff2:	2700      	movs	r7, #0
  406ff4:	e7a6      	b.n	406f44 <floor+0x4c>
  406ff6:	f105 0801 	add.w	r8, r5, #1
  406ffa:	e7c7      	b.n	406f8c <floor+0x94>
  406ffc:	f3af 8000 	nop.w
  407000:	8800759c 	.word	0x8800759c
  407004:	7e37e43c 	.word	0x7e37e43c
  407008:	000fffff 	.word	0x000fffff
  40700c:	bff00000 	.word	0xbff00000

00407010 <scalbn>:
  407010:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  407012:	f3c1 560a 	ubfx	r6, r1, #20, #11
  407016:	4604      	mov	r4, r0
  407018:	460d      	mov	r5, r1
  40701a:	460b      	mov	r3, r1
  40701c:	4617      	mov	r7, r2
  40701e:	bb0e      	cbnz	r6, 407064 <scalbn+0x54>
  407020:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
  407024:	4303      	orrs	r3, r0
  407026:	4686      	mov	lr, r0
  407028:	d025      	beq.n	407076 <scalbn+0x66>
  40702a:	2200      	movs	r2, #0
  40702c:	4b34      	ldr	r3, [pc, #208]	; (407100 <scalbn+0xf0>)
  40702e:	f000 fbeb 	bl	407808 <__aeabi_dmul>
  407032:	4a34      	ldr	r2, [pc, #208]	; (407104 <scalbn+0xf4>)
  407034:	4297      	cmp	r7, r2
  407036:	4604      	mov	r4, r0
  407038:	460d      	mov	r5, r1
  40703a:	460b      	mov	r3, r1
  40703c:	db2a      	blt.n	407094 <scalbn+0x84>
  40703e:	f3c1 560a 	ubfx	r6, r1, #20, #11
  407042:	3e36      	subs	r6, #54	; 0x36
  407044:	443e      	add	r6, r7
  407046:	f240 72fe 	movw	r2, #2046	; 0x7fe
  40704a:	4296      	cmp	r6, r2
  40704c:	dc28      	bgt.n	4070a0 <scalbn+0x90>
  40704e:	2e00      	cmp	r6, #0
  407050:	dd12      	ble.n	407078 <scalbn+0x68>
  407052:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
  407056:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
  40705a:	ea43 5506 	orr.w	r5, r3, r6, lsl #20
  40705e:	4620      	mov	r0, r4
  407060:	4629      	mov	r1, r5
  407062:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  407064:	f240 72ff 	movw	r2, #2047	; 0x7ff
  407068:	4296      	cmp	r6, r2
  40706a:	d1eb      	bne.n	407044 <scalbn+0x34>
  40706c:	4602      	mov	r2, r0
  40706e:	460b      	mov	r3, r1
  407070:	f000 fa18 	bl	4074a4 <__adddf3>
  407074:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  407076:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  407078:	f116 0f35 	cmn.w	r6, #53	; 0x35
  40707c:	da1d      	bge.n	4070ba <scalbn+0xaa>
  40707e:	f24c 3350 	movw	r3, #50000	; 0xc350
  407082:	429f      	cmp	r7, r3
  407084:	4622      	mov	r2, r4
  407086:	462b      	mov	r3, r5
  407088:	dc25      	bgt.n	4070d6 <scalbn+0xc6>
  40708a:	a119      	add	r1, pc, #100	; (adr r1, 4070f0 <scalbn+0xe0>)
  40708c:	e9d1 0100 	ldrd	r0, r1, [r1]
  407090:	f000 f9f4 	bl	40747c <copysign>
  407094:	a316      	add	r3, pc, #88	; (adr r3, 4070f0 <scalbn+0xe0>)
  407096:	e9d3 2300 	ldrd	r2, r3, [r3]
  40709a:	f000 fbb5 	bl	407808 <__aeabi_dmul>
  40709e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4070a0:	4622      	mov	r2, r4
  4070a2:	462b      	mov	r3, r5
  4070a4:	a114      	add	r1, pc, #80	; (adr r1, 4070f8 <scalbn+0xe8>)
  4070a6:	e9d1 0100 	ldrd	r0, r1, [r1]
  4070aa:	f000 f9e7 	bl	40747c <copysign>
  4070ae:	a312      	add	r3, pc, #72	; (adr r3, 4070f8 <scalbn+0xe8>)
  4070b0:	e9d3 2300 	ldrd	r2, r3, [r3]
  4070b4:	f000 fba8 	bl	407808 <__aeabi_dmul>
  4070b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4070ba:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
  4070be:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
  4070c2:	3636      	adds	r6, #54	; 0x36
  4070c4:	ea43 5506 	orr.w	r5, r3, r6, lsl #20
  4070c8:	4620      	mov	r0, r4
  4070ca:	4629      	mov	r1, r5
  4070cc:	2200      	movs	r2, #0
  4070ce:	4b0e      	ldr	r3, [pc, #56]	; (407108 <scalbn+0xf8>)
  4070d0:	f000 fb9a 	bl	407808 <__aeabi_dmul>
  4070d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4070d6:	a108      	add	r1, pc, #32	; (adr r1, 4070f8 <scalbn+0xe8>)
  4070d8:	e9d1 0100 	ldrd	r0, r1, [r1]
  4070dc:	f000 f9ce 	bl	40747c <copysign>
  4070e0:	a305      	add	r3, pc, #20	; (adr r3, 4070f8 <scalbn+0xe8>)
  4070e2:	e9d3 2300 	ldrd	r2, r3, [r3]
  4070e6:	f000 fb8f 	bl	407808 <__aeabi_dmul>
  4070ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4070ec:	f3af 8000 	nop.w
  4070f0:	c2f8f359 	.word	0xc2f8f359
  4070f4:	01a56e1f 	.word	0x01a56e1f
  4070f8:	8800759c 	.word	0x8800759c
  4070fc:	7e37e43c 	.word	0x7e37e43c
  407100:	43500000 	.word	0x43500000
  407104:	ffff3cb0 	.word	0xffff3cb0
  407108:	3c900000 	.word	0x3c900000

0040710c <atanf>:
  40710c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  407110:	f020 4500 	bic.w	r5, r0, #2147483648	; 0x80000000
  407114:	f1b5 4fa1 	cmp.w	r5, #1350565888	; 0x50800000
  407118:	4604      	mov	r4, r0
  40711a:	4606      	mov	r6, r0
  40711c:	db08      	blt.n	407130 <atanf+0x24>
  40711e:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
  407122:	dc6f      	bgt.n	407204 <atanf+0xf8>
  407124:	2800      	cmp	r0, #0
  407126:	f340 80a0 	ble.w	40726a <atanf+0x15e>
  40712a:	486f      	ldr	r0, [pc, #444]	; (4072e8 <atanf+0x1dc>)
  40712c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  407130:	4b6e      	ldr	r3, [pc, #440]	; (4072ec <atanf+0x1e0>)
  407132:	429d      	cmp	r5, r3
  407134:	dc77      	bgt.n	407226 <atanf+0x11a>
  407136:	f1b5 5f44 	cmp.w	r5, #822083584	; 0x31000000
  40713a:	db68      	blt.n	40720e <atanf+0x102>
  40713c:	f04f 37ff 	mov.w	r7, #4294967295
  407140:	4621      	mov	r1, r4
  407142:	4620      	mov	r0, r4
  407144:	f000 ff80 	bl	408048 <__aeabi_fmul>
  407148:	4601      	mov	r1, r0
  40714a:	4680      	mov	r8, r0
  40714c:	f000 ff7c 	bl	408048 <__aeabi_fmul>
  407150:	4967      	ldr	r1, [pc, #412]	; (4072f0 <atanf+0x1e4>)
  407152:	4605      	mov	r5, r0
  407154:	f000 ff78 	bl	408048 <__aeabi_fmul>
  407158:	4966      	ldr	r1, [pc, #408]	; (4072f4 <atanf+0x1e8>)
  40715a:	f000 fe6d 	bl	407e38 <__addsf3>
  40715e:	4629      	mov	r1, r5
  407160:	f000 ff72 	bl	408048 <__aeabi_fmul>
  407164:	4964      	ldr	r1, [pc, #400]	; (4072f8 <atanf+0x1ec>)
  407166:	f000 fe67 	bl	407e38 <__addsf3>
  40716a:	4629      	mov	r1, r5
  40716c:	f000 ff6c 	bl	408048 <__aeabi_fmul>
  407170:	4962      	ldr	r1, [pc, #392]	; (4072fc <atanf+0x1f0>)
  407172:	f000 fe61 	bl	407e38 <__addsf3>
  407176:	4629      	mov	r1, r5
  407178:	f000 ff66 	bl	408048 <__aeabi_fmul>
  40717c:	4960      	ldr	r1, [pc, #384]	; (407300 <atanf+0x1f4>)
  40717e:	f000 fe5b 	bl	407e38 <__addsf3>
  407182:	4629      	mov	r1, r5
  407184:	f000 ff60 	bl	408048 <__aeabi_fmul>
  407188:	495e      	ldr	r1, [pc, #376]	; (407304 <atanf+0x1f8>)
  40718a:	f000 fe55 	bl	407e38 <__addsf3>
  40718e:	4641      	mov	r1, r8
  407190:	f000 ff5a 	bl	408048 <__aeabi_fmul>
  407194:	495c      	ldr	r1, [pc, #368]	; (407308 <atanf+0x1fc>)
  407196:	4680      	mov	r8, r0
  407198:	4628      	mov	r0, r5
  40719a:	f000 ff55 	bl	408048 <__aeabi_fmul>
  40719e:	495b      	ldr	r1, [pc, #364]	; (40730c <atanf+0x200>)
  4071a0:	f000 fe48 	bl	407e34 <__aeabi_fsub>
  4071a4:	4629      	mov	r1, r5
  4071a6:	f000 ff4f 	bl	408048 <__aeabi_fmul>
  4071aa:	4959      	ldr	r1, [pc, #356]	; (407310 <atanf+0x204>)
  4071ac:	f000 fe42 	bl	407e34 <__aeabi_fsub>
  4071b0:	4629      	mov	r1, r5
  4071b2:	f000 ff49 	bl	408048 <__aeabi_fmul>
  4071b6:	4957      	ldr	r1, [pc, #348]	; (407314 <atanf+0x208>)
  4071b8:	f000 fe3c 	bl	407e34 <__aeabi_fsub>
  4071bc:	4629      	mov	r1, r5
  4071be:	f000 ff43 	bl	408048 <__aeabi_fmul>
  4071c2:	4955      	ldr	r1, [pc, #340]	; (407318 <atanf+0x20c>)
  4071c4:	f000 fe36 	bl	407e34 <__aeabi_fsub>
  4071c8:	4629      	mov	r1, r5
  4071ca:	f000 ff3d 	bl	408048 <__aeabi_fmul>
  4071ce:	1c7b      	adds	r3, r7, #1
  4071d0:	4601      	mov	r1, r0
  4071d2:	4640      	mov	r0, r8
  4071d4:	d04c      	beq.n	407270 <atanf+0x164>
  4071d6:	f000 fe2f 	bl	407e38 <__addsf3>
  4071da:	4621      	mov	r1, r4
  4071dc:	f000 ff34 	bl	408048 <__aeabi_fmul>
  4071e0:	4b4e      	ldr	r3, [pc, #312]	; (40731c <atanf+0x210>)
  4071e2:	4d4f      	ldr	r5, [pc, #316]	; (407320 <atanf+0x214>)
  4071e4:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
  4071e8:	f000 fe24 	bl	407e34 <__aeabi_fsub>
  4071ec:	4621      	mov	r1, r4
  4071ee:	f000 fe21 	bl	407e34 <__aeabi_fsub>
  4071f2:	4601      	mov	r1, r0
  4071f4:	f855 0027 	ldr.w	r0, [r5, r7, lsl #2]
  4071f8:	f000 fe1c 	bl	407e34 <__aeabi_fsub>
  4071fc:	2e00      	cmp	r6, #0
  4071fe:	db30      	blt.n	407262 <atanf+0x156>
  407200:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  407204:	4601      	mov	r1, r0
  407206:	f000 fe17 	bl	407e38 <__addsf3>
  40720a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40720e:	4945      	ldr	r1, [pc, #276]	; (407324 <atanf+0x218>)
  407210:	f000 fe12 	bl	407e38 <__addsf3>
  407214:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
  407218:	f001 f8d2 	bl	4083c0 <__aeabi_fcmpgt>
  40721c:	2800      	cmp	r0, #0
  40721e:	d08d      	beq.n	40713c <atanf+0x30>
  407220:	4620      	mov	r0, r4
  407222:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  407226:	f000 f887 	bl	407338 <fabsf>
  40722a:	4b3f      	ldr	r3, [pc, #252]	; (407328 <atanf+0x21c>)
  40722c:	429d      	cmp	r5, r3
  40722e:	4604      	mov	r4, r0
  407230:	dc29      	bgt.n	407286 <atanf+0x17a>
  407232:	f5a3 03d0 	sub.w	r3, r3, #6815744	; 0x680000
  407236:	429d      	cmp	r5, r3
  407238:	dc44      	bgt.n	4072c4 <atanf+0x1b8>
  40723a:	4601      	mov	r1, r0
  40723c:	f000 fdfc 	bl	407e38 <__addsf3>
  407240:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
  407244:	f000 fdf6 	bl	407e34 <__aeabi_fsub>
  407248:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  40724c:	4605      	mov	r5, r0
  40724e:	4620      	mov	r0, r4
  407250:	f000 fdf2 	bl	407e38 <__addsf3>
  407254:	4601      	mov	r1, r0
  407256:	4628      	mov	r0, r5
  407258:	f000 ffaa 	bl	4081b0 <__aeabi_fdiv>
  40725c:	2700      	movs	r7, #0
  40725e:	4604      	mov	r4, r0
  407260:	e76e      	b.n	407140 <atanf+0x34>
  407262:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
  407266:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40726a:	4830      	ldr	r0, [pc, #192]	; (40732c <atanf+0x220>)
  40726c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  407270:	f000 fde2 	bl	407e38 <__addsf3>
  407274:	4621      	mov	r1, r4
  407276:	f000 fee7 	bl	408048 <__aeabi_fmul>
  40727a:	4601      	mov	r1, r0
  40727c:	4620      	mov	r0, r4
  40727e:	f000 fdd9 	bl	407e34 <__aeabi_fsub>
  407282:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  407286:	4b2a      	ldr	r3, [pc, #168]	; (407330 <atanf+0x224>)
  407288:	429d      	cmp	r5, r3
  40728a:	dc14      	bgt.n	4072b6 <atanf+0x1aa>
  40728c:	f04f 517f 	mov.w	r1, #1069547520	; 0x3fc00000
  407290:	f000 fdd0 	bl	407e34 <__aeabi_fsub>
  407294:	f04f 517f 	mov.w	r1, #1069547520	; 0x3fc00000
  407298:	4605      	mov	r5, r0
  40729a:	4620      	mov	r0, r4
  40729c:	f000 fed4 	bl	408048 <__aeabi_fmul>
  4072a0:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
  4072a4:	f000 fdc8 	bl	407e38 <__addsf3>
  4072a8:	4601      	mov	r1, r0
  4072aa:	4628      	mov	r0, r5
  4072ac:	f000 ff80 	bl	4081b0 <__aeabi_fdiv>
  4072b0:	2702      	movs	r7, #2
  4072b2:	4604      	mov	r4, r0
  4072b4:	e744      	b.n	407140 <atanf+0x34>
  4072b6:	4601      	mov	r1, r0
  4072b8:	481e      	ldr	r0, [pc, #120]	; (407334 <atanf+0x228>)
  4072ba:	f000 ff79 	bl	4081b0 <__aeabi_fdiv>
  4072be:	2703      	movs	r7, #3
  4072c0:	4604      	mov	r4, r0
  4072c2:	e73d      	b.n	407140 <atanf+0x34>
  4072c4:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
  4072c8:	f000 fdb4 	bl	407e34 <__aeabi_fsub>
  4072cc:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
  4072d0:	4605      	mov	r5, r0
  4072d2:	4620      	mov	r0, r4
  4072d4:	f000 fdb0 	bl	407e38 <__addsf3>
  4072d8:	4601      	mov	r1, r0
  4072da:	4628      	mov	r0, r5
  4072dc:	f000 ff68 	bl	4081b0 <__aeabi_fdiv>
  4072e0:	2701      	movs	r7, #1
  4072e2:	4604      	mov	r4, r0
  4072e4:	e72c      	b.n	407140 <atanf+0x34>
  4072e6:	bf00      	nop
  4072e8:	3fc90fdb 	.word	0x3fc90fdb
  4072ec:	3edfffff 	.word	0x3edfffff
  4072f0:	3c8569d7 	.word	0x3c8569d7
  4072f4:	3d4bda59 	.word	0x3d4bda59
  4072f8:	3d886b35 	.word	0x3d886b35
  4072fc:	3dba2e6e 	.word	0x3dba2e6e
  407300:	3e124925 	.word	0x3e124925
  407304:	3eaaaaab 	.word	0x3eaaaaab
  407308:	bd15a221 	.word	0xbd15a221
  40730c:	3d6ef16b 	.word	0x3d6ef16b
  407310:	3d9d8795 	.word	0x3d9d8795
  407314:	3de38e38 	.word	0x3de38e38
  407318:	3e4ccccd 	.word	0x3e4ccccd
  40731c:	0040f628 	.word	0x0040f628
  407320:	0040f618 	.word	0x0040f618
  407324:	7149f2ca 	.word	0x7149f2ca
  407328:	3f97ffff 	.word	0x3f97ffff
  40732c:	bfc90fdb 	.word	0xbfc90fdb
  407330:	401bffff 	.word	0x401bffff
  407334:	bf800000 	.word	0xbf800000

00407338 <fabsf>:
  407338:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
  40733c:	4770      	bx	lr
  40733e:	bf00      	nop

00407340 <floorf>:
  407340:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  407344:	f020 4700 	bic.w	r7, r0, #2147483648	; 0x80000000
  407348:	0dfc      	lsrs	r4, r7, #23
  40734a:	3c7f      	subs	r4, #127	; 0x7f
  40734c:	2c16      	cmp	r4, #22
  40734e:	4605      	mov	r5, r0
  407350:	dc13      	bgt.n	40737a <floorf+0x3a>
  407352:	2c00      	cmp	r4, #0
  407354:	4680      	mov	r8, r0
  407356:	db1b      	blt.n	407390 <floorf+0x50>
  407358:	4f19      	ldr	r7, [pc, #100]	; (4073c0 <floorf+0x80>)
  40735a:	4127      	asrs	r7, r4
  40735c:	4238      	tst	r0, r7
  40735e:	d014      	beq.n	40738a <floorf+0x4a>
  407360:	4918      	ldr	r1, [pc, #96]	; (4073c4 <floorf+0x84>)
  407362:	f000 fd69 	bl	407e38 <__addsf3>
  407366:	2100      	movs	r1, #0
  407368:	f001 f82a 	bl	4083c0 <__aeabi_fcmpgt>
  40736c:	b168      	cbz	r0, 40738a <floorf+0x4a>
  40736e:	2d00      	cmp	r5, #0
  407370:	db1b      	blt.n	4073aa <floorf+0x6a>
  407372:	ea28 0007 	bic.w	r0, r8, r7
  407376:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40737a:	f1b7 4fff 	cmp.w	r7, #2139095040	; 0x7f800000
  40737e:	d304      	bcc.n	40738a <floorf+0x4a>
  407380:	4601      	mov	r1, r0
  407382:	f000 fd59 	bl	407e38 <__addsf3>
  407386:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40738a:	4628      	mov	r0, r5
  40738c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  407390:	490c      	ldr	r1, [pc, #48]	; (4073c4 <floorf+0x84>)
  407392:	f000 fd51 	bl	407e38 <__addsf3>
  407396:	2100      	movs	r1, #0
  407398:	f001 f812 	bl	4083c0 <__aeabi_fcmpgt>
  40739c:	2800      	cmp	r0, #0
  40739e:	d0f4      	beq.n	40738a <floorf+0x4a>
  4073a0:	2d00      	cmp	r5, #0
  4073a2:	db08      	blt.n	4073b6 <floorf+0x76>
  4073a4:	2000      	movs	r0, #0
  4073a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4073aa:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
  4073ae:	fa43 f404 	asr.w	r4, r3, r4
  4073b2:	44a0      	add	r8, r4
  4073b4:	e7dd      	b.n	407372 <floorf+0x32>
  4073b6:	2f00      	cmp	r7, #0
  4073b8:	d0e7      	beq.n	40738a <floorf+0x4a>
  4073ba:	4803      	ldr	r0, [pc, #12]	; (4073c8 <floorf+0x88>)
  4073bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4073c0:	007fffff 	.word	0x007fffff
  4073c4:	7149f2ca 	.word	0x7149f2ca
  4073c8:	bf800000 	.word	0xbf800000

004073cc <scalbnf>:
  4073cc:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
  4073d0:	b538      	push	{r3, r4, r5, lr}
  4073d2:	4603      	mov	r3, r0
  4073d4:	d016      	beq.n	407404 <scalbnf+0x38>
  4073d6:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
  4073da:	d20f      	bcs.n	4073fc <scalbnf+0x30>
  4073dc:	f5b2 0f00 	cmp.w	r2, #8388608	; 0x800000
  4073e0:	460d      	mov	r5, r1
  4073e2:	d310      	bcc.n	407406 <scalbnf+0x3a>
  4073e4:	4604      	mov	r4, r0
  4073e6:	0dd0      	lsrs	r0, r2, #23
  4073e8:	4428      	add	r0, r5
  4073ea:	28fe      	cmp	r0, #254	; 0xfe
  4073ec:	dc2e      	bgt.n	40744c <scalbnf+0x80>
  4073ee:	2800      	cmp	r0, #0
  4073f0:	dd1d      	ble.n	40742e <scalbnf+0x62>
  4073f2:	f024 44ff 	bic.w	r4, r4, #2139095040	; 0x7f800000
  4073f6:	ea44 50c0 	orr.w	r0, r4, r0, lsl #23
  4073fa:	bd38      	pop	{r3, r4, r5, pc}
  4073fc:	4601      	mov	r1, r0
  4073fe:	f000 fd1b 	bl	407e38 <__addsf3>
  407402:	bd38      	pop	{r3, r4, r5, pc}
  407404:	bd38      	pop	{r3, r4, r5, pc}
  407406:	f04f 4198 	mov.w	r1, #1275068416	; 0x4c000000
  40740a:	f000 fe1d 	bl	408048 <__aeabi_fmul>
  40740e:	4a18      	ldr	r2, [pc, #96]	; (407470 <scalbnf+0xa4>)
  407410:	4295      	cmp	r5, r2
  407412:	4603      	mov	r3, r0
  407414:	db07      	blt.n	407426 <scalbnf+0x5a>
  407416:	4604      	mov	r4, r0
  407418:	f3c0 50c7 	ubfx	r0, r0, #23, #8
  40741c:	3819      	subs	r0, #25
  40741e:	e7e3      	b.n	4073e8 <scalbnf+0x1c>
  407420:	4814      	ldr	r0, [pc, #80]	; (407474 <scalbnf+0xa8>)
  407422:	f000 f833 	bl	40748c <copysignf>
  407426:	4913      	ldr	r1, [pc, #76]	; (407474 <scalbnf+0xa8>)
  407428:	f000 fe0e 	bl	408048 <__aeabi_fmul>
  40742c:	bd38      	pop	{r3, r4, r5, pc}
  40742e:	f110 0f16 	cmn.w	r0, #22
  407432:	da13      	bge.n	40745c <scalbnf+0x90>
  407434:	f24c 3250 	movw	r2, #50000	; 0xc350
  407438:	4295      	cmp	r5, r2
  40743a:	4619      	mov	r1, r3
  40743c:	ddf0      	ble.n	407420 <scalbnf+0x54>
  40743e:	480e      	ldr	r0, [pc, #56]	; (407478 <scalbnf+0xac>)
  407440:	f000 f824 	bl	40748c <copysignf>
  407444:	490c      	ldr	r1, [pc, #48]	; (407478 <scalbnf+0xac>)
  407446:	f000 fdff 	bl	408048 <__aeabi_fmul>
  40744a:	bd38      	pop	{r3, r4, r5, pc}
  40744c:	4619      	mov	r1, r3
  40744e:	480a      	ldr	r0, [pc, #40]	; (407478 <scalbnf+0xac>)
  407450:	f000 f81c 	bl	40748c <copysignf>
  407454:	4908      	ldr	r1, [pc, #32]	; (407478 <scalbnf+0xac>)
  407456:	f000 fdf7 	bl	408048 <__aeabi_fmul>
  40745a:	bd38      	pop	{r3, r4, r5, pc}
  40745c:	f024 44ff 	bic.w	r4, r4, #2139095040	; 0x7f800000
  407460:	3019      	adds	r0, #25
  407462:	ea44 50c0 	orr.w	r0, r4, r0, lsl #23
  407466:	f04f 514c 	mov.w	r1, #855638016	; 0x33000000
  40746a:	f000 fded 	bl	408048 <__aeabi_fmul>
  40746e:	bd38      	pop	{r3, r4, r5, pc}
  407470:	ffff3cb0 	.word	0xffff3cb0
  407474:	0da24260 	.word	0x0da24260
  407478:	7149f2ca 	.word	0x7149f2ca

0040747c <copysign>:
  40747c:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
  407480:	f021 4200 	bic.w	r2, r1, #2147483648	; 0x80000000
  407484:	ea42 0103 	orr.w	r1, r2, r3
  407488:	4770      	bx	lr
  40748a:	bf00      	nop

0040748c <copysignf>:
  40748c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  407490:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
  407494:	4308      	orrs	r0, r1
  407496:	4770      	bx	lr

00407498 <__aeabi_drsub>:
  407498:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  40749c:	e002      	b.n	4074a4 <__adddf3>
  40749e:	bf00      	nop

004074a0 <__aeabi_dsub>:
  4074a0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

004074a4 <__adddf3>:
  4074a4:	b530      	push	{r4, r5, lr}
  4074a6:	ea4f 0441 	mov.w	r4, r1, lsl #1
  4074aa:	ea4f 0543 	mov.w	r5, r3, lsl #1
  4074ae:	ea94 0f05 	teq	r4, r5
  4074b2:	bf08      	it	eq
  4074b4:	ea90 0f02 	teqeq	r0, r2
  4074b8:	bf1f      	itttt	ne
  4074ba:	ea54 0c00 	orrsne.w	ip, r4, r0
  4074be:	ea55 0c02 	orrsne.w	ip, r5, r2
  4074c2:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  4074c6:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4074ca:	f000 80e2 	beq.w	407692 <__adddf3+0x1ee>
  4074ce:	ea4f 5454 	mov.w	r4, r4, lsr #21
  4074d2:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  4074d6:	bfb8      	it	lt
  4074d8:	426d      	neglt	r5, r5
  4074da:	dd0c      	ble.n	4074f6 <__adddf3+0x52>
  4074dc:	442c      	add	r4, r5
  4074de:	ea80 0202 	eor.w	r2, r0, r2
  4074e2:	ea81 0303 	eor.w	r3, r1, r3
  4074e6:	ea82 0000 	eor.w	r0, r2, r0
  4074ea:	ea83 0101 	eor.w	r1, r3, r1
  4074ee:	ea80 0202 	eor.w	r2, r0, r2
  4074f2:	ea81 0303 	eor.w	r3, r1, r3
  4074f6:	2d36      	cmp	r5, #54	; 0x36
  4074f8:	bf88      	it	hi
  4074fa:	bd30      	pophi	{r4, r5, pc}
  4074fc:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  407500:	ea4f 3101 	mov.w	r1, r1, lsl #12
  407504:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  407508:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  40750c:	d002      	beq.n	407514 <__adddf3+0x70>
  40750e:	4240      	negs	r0, r0
  407510:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  407514:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  407518:	ea4f 3303 	mov.w	r3, r3, lsl #12
  40751c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  407520:	d002      	beq.n	407528 <__adddf3+0x84>
  407522:	4252      	negs	r2, r2
  407524:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  407528:	ea94 0f05 	teq	r4, r5
  40752c:	f000 80a7 	beq.w	40767e <__adddf3+0x1da>
  407530:	f1a4 0401 	sub.w	r4, r4, #1
  407534:	f1d5 0e20 	rsbs	lr, r5, #32
  407538:	db0d      	blt.n	407556 <__adddf3+0xb2>
  40753a:	fa02 fc0e 	lsl.w	ip, r2, lr
  40753e:	fa22 f205 	lsr.w	r2, r2, r5
  407542:	1880      	adds	r0, r0, r2
  407544:	f141 0100 	adc.w	r1, r1, #0
  407548:	fa03 f20e 	lsl.w	r2, r3, lr
  40754c:	1880      	adds	r0, r0, r2
  40754e:	fa43 f305 	asr.w	r3, r3, r5
  407552:	4159      	adcs	r1, r3
  407554:	e00e      	b.n	407574 <__adddf3+0xd0>
  407556:	f1a5 0520 	sub.w	r5, r5, #32
  40755a:	f10e 0e20 	add.w	lr, lr, #32
  40755e:	2a01      	cmp	r2, #1
  407560:	fa03 fc0e 	lsl.w	ip, r3, lr
  407564:	bf28      	it	cs
  407566:	f04c 0c02 	orrcs.w	ip, ip, #2
  40756a:	fa43 f305 	asr.w	r3, r3, r5
  40756e:	18c0      	adds	r0, r0, r3
  407570:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  407574:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  407578:	d507      	bpl.n	40758a <__adddf3+0xe6>
  40757a:	f04f 0e00 	mov.w	lr, #0
  40757e:	f1dc 0c00 	rsbs	ip, ip, #0
  407582:	eb7e 0000 	sbcs.w	r0, lr, r0
  407586:	eb6e 0101 	sbc.w	r1, lr, r1
  40758a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  40758e:	d31b      	bcc.n	4075c8 <__adddf3+0x124>
  407590:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  407594:	d30c      	bcc.n	4075b0 <__adddf3+0x10c>
  407596:	0849      	lsrs	r1, r1, #1
  407598:	ea5f 0030 	movs.w	r0, r0, rrx
  40759c:	ea4f 0c3c 	mov.w	ip, ip, rrx
  4075a0:	f104 0401 	add.w	r4, r4, #1
  4075a4:	ea4f 5244 	mov.w	r2, r4, lsl #21
  4075a8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  4075ac:	f080 809a 	bcs.w	4076e4 <__adddf3+0x240>
  4075b0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  4075b4:	bf08      	it	eq
  4075b6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4075ba:	f150 0000 	adcs.w	r0, r0, #0
  4075be:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4075c2:	ea41 0105 	orr.w	r1, r1, r5
  4075c6:	bd30      	pop	{r4, r5, pc}
  4075c8:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  4075cc:	4140      	adcs	r0, r0
  4075ce:	eb41 0101 	adc.w	r1, r1, r1
  4075d2:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4075d6:	f1a4 0401 	sub.w	r4, r4, #1
  4075da:	d1e9      	bne.n	4075b0 <__adddf3+0x10c>
  4075dc:	f091 0f00 	teq	r1, #0
  4075e0:	bf04      	itt	eq
  4075e2:	4601      	moveq	r1, r0
  4075e4:	2000      	moveq	r0, #0
  4075e6:	fab1 f381 	clz	r3, r1
  4075ea:	bf08      	it	eq
  4075ec:	3320      	addeq	r3, #32
  4075ee:	f1a3 030b 	sub.w	r3, r3, #11
  4075f2:	f1b3 0220 	subs.w	r2, r3, #32
  4075f6:	da0c      	bge.n	407612 <__adddf3+0x16e>
  4075f8:	320c      	adds	r2, #12
  4075fa:	dd08      	ble.n	40760e <__adddf3+0x16a>
  4075fc:	f102 0c14 	add.w	ip, r2, #20
  407600:	f1c2 020c 	rsb	r2, r2, #12
  407604:	fa01 f00c 	lsl.w	r0, r1, ip
  407608:	fa21 f102 	lsr.w	r1, r1, r2
  40760c:	e00c      	b.n	407628 <__adddf3+0x184>
  40760e:	f102 0214 	add.w	r2, r2, #20
  407612:	bfd8      	it	le
  407614:	f1c2 0c20 	rsble	ip, r2, #32
  407618:	fa01 f102 	lsl.w	r1, r1, r2
  40761c:	fa20 fc0c 	lsr.w	ip, r0, ip
  407620:	bfdc      	itt	le
  407622:	ea41 010c 	orrle.w	r1, r1, ip
  407626:	4090      	lslle	r0, r2
  407628:	1ae4      	subs	r4, r4, r3
  40762a:	bfa2      	ittt	ge
  40762c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  407630:	4329      	orrge	r1, r5
  407632:	bd30      	popge	{r4, r5, pc}
  407634:	ea6f 0404 	mvn.w	r4, r4
  407638:	3c1f      	subs	r4, #31
  40763a:	da1c      	bge.n	407676 <__adddf3+0x1d2>
  40763c:	340c      	adds	r4, #12
  40763e:	dc0e      	bgt.n	40765e <__adddf3+0x1ba>
  407640:	f104 0414 	add.w	r4, r4, #20
  407644:	f1c4 0220 	rsb	r2, r4, #32
  407648:	fa20 f004 	lsr.w	r0, r0, r4
  40764c:	fa01 f302 	lsl.w	r3, r1, r2
  407650:	ea40 0003 	orr.w	r0, r0, r3
  407654:	fa21 f304 	lsr.w	r3, r1, r4
  407658:	ea45 0103 	orr.w	r1, r5, r3
  40765c:	bd30      	pop	{r4, r5, pc}
  40765e:	f1c4 040c 	rsb	r4, r4, #12
  407662:	f1c4 0220 	rsb	r2, r4, #32
  407666:	fa20 f002 	lsr.w	r0, r0, r2
  40766a:	fa01 f304 	lsl.w	r3, r1, r4
  40766e:	ea40 0003 	orr.w	r0, r0, r3
  407672:	4629      	mov	r1, r5
  407674:	bd30      	pop	{r4, r5, pc}
  407676:	fa21 f004 	lsr.w	r0, r1, r4
  40767a:	4629      	mov	r1, r5
  40767c:	bd30      	pop	{r4, r5, pc}
  40767e:	f094 0f00 	teq	r4, #0
  407682:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  407686:	bf06      	itte	eq
  407688:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  40768c:	3401      	addeq	r4, #1
  40768e:	3d01      	subne	r5, #1
  407690:	e74e      	b.n	407530 <__adddf3+0x8c>
  407692:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  407696:	bf18      	it	ne
  407698:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  40769c:	d029      	beq.n	4076f2 <__adddf3+0x24e>
  40769e:	ea94 0f05 	teq	r4, r5
  4076a2:	bf08      	it	eq
  4076a4:	ea90 0f02 	teqeq	r0, r2
  4076a8:	d005      	beq.n	4076b6 <__adddf3+0x212>
  4076aa:	ea54 0c00 	orrs.w	ip, r4, r0
  4076ae:	bf04      	itt	eq
  4076b0:	4619      	moveq	r1, r3
  4076b2:	4610      	moveq	r0, r2
  4076b4:	bd30      	pop	{r4, r5, pc}
  4076b6:	ea91 0f03 	teq	r1, r3
  4076ba:	bf1e      	ittt	ne
  4076bc:	2100      	movne	r1, #0
  4076be:	2000      	movne	r0, #0
  4076c0:	bd30      	popne	{r4, r5, pc}
  4076c2:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  4076c6:	d105      	bne.n	4076d4 <__adddf3+0x230>
  4076c8:	0040      	lsls	r0, r0, #1
  4076ca:	4149      	adcs	r1, r1
  4076cc:	bf28      	it	cs
  4076ce:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  4076d2:	bd30      	pop	{r4, r5, pc}
  4076d4:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  4076d8:	bf3c      	itt	cc
  4076da:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  4076de:	bd30      	popcc	{r4, r5, pc}
  4076e0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4076e4:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  4076e8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  4076ec:	f04f 0000 	mov.w	r0, #0
  4076f0:	bd30      	pop	{r4, r5, pc}
  4076f2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  4076f6:	bf1a      	itte	ne
  4076f8:	4619      	movne	r1, r3
  4076fa:	4610      	movne	r0, r2
  4076fc:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  407700:	bf1c      	itt	ne
  407702:	460b      	movne	r3, r1
  407704:	4602      	movne	r2, r0
  407706:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  40770a:	bf06      	itte	eq
  40770c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  407710:	ea91 0f03 	teqeq	r1, r3
  407714:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  407718:	bd30      	pop	{r4, r5, pc}
  40771a:	bf00      	nop

0040771c <__aeabi_ui2d>:
  40771c:	f090 0f00 	teq	r0, #0
  407720:	bf04      	itt	eq
  407722:	2100      	moveq	r1, #0
  407724:	4770      	bxeq	lr
  407726:	b530      	push	{r4, r5, lr}
  407728:	f44f 6480 	mov.w	r4, #1024	; 0x400
  40772c:	f104 0432 	add.w	r4, r4, #50	; 0x32
  407730:	f04f 0500 	mov.w	r5, #0
  407734:	f04f 0100 	mov.w	r1, #0
  407738:	e750      	b.n	4075dc <__adddf3+0x138>
  40773a:	bf00      	nop

0040773c <__aeabi_i2d>:
  40773c:	f090 0f00 	teq	r0, #0
  407740:	bf04      	itt	eq
  407742:	2100      	moveq	r1, #0
  407744:	4770      	bxeq	lr
  407746:	b530      	push	{r4, r5, lr}
  407748:	f44f 6480 	mov.w	r4, #1024	; 0x400
  40774c:	f104 0432 	add.w	r4, r4, #50	; 0x32
  407750:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  407754:	bf48      	it	mi
  407756:	4240      	negmi	r0, r0
  407758:	f04f 0100 	mov.w	r1, #0
  40775c:	e73e      	b.n	4075dc <__adddf3+0x138>
  40775e:	bf00      	nop

00407760 <__aeabi_f2d>:
  407760:	0042      	lsls	r2, r0, #1
  407762:	ea4f 01e2 	mov.w	r1, r2, asr #3
  407766:	ea4f 0131 	mov.w	r1, r1, rrx
  40776a:	ea4f 7002 	mov.w	r0, r2, lsl #28
  40776e:	bf1f      	itttt	ne
  407770:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  407774:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  407778:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  40777c:	4770      	bxne	lr
  40777e:	f092 0f00 	teq	r2, #0
  407782:	bf14      	ite	ne
  407784:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  407788:	4770      	bxeq	lr
  40778a:	b530      	push	{r4, r5, lr}
  40778c:	f44f 7460 	mov.w	r4, #896	; 0x380
  407790:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  407794:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  407798:	e720      	b.n	4075dc <__adddf3+0x138>
  40779a:	bf00      	nop

0040779c <__aeabi_ul2d>:
  40779c:	ea50 0201 	orrs.w	r2, r0, r1
  4077a0:	bf08      	it	eq
  4077a2:	4770      	bxeq	lr
  4077a4:	b530      	push	{r4, r5, lr}
  4077a6:	f04f 0500 	mov.w	r5, #0
  4077aa:	e00a      	b.n	4077c2 <__aeabi_l2d+0x16>

004077ac <__aeabi_l2d>:
  4077ac:	ea50 0201 	orrs.w	r2, r0, r1
  4077b0:	bf08      	it	eq
  4077b2:	4770      	bxeq	lr
  4077b4:	b530      	push	{r4, r5, lr}
  4077b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  4077ba:	d502      	bpl.n	4077c2 <__aeabi_l2d+0x16>
  4077bc:	4240      	negs	r0, r0
  4077be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  4077c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
  4077c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4077ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  4077ce:	f43f aedc 	beq.w	40758a <__adddf3+0xe6>
  4077d2:	f04f 0203 	mov.w	r2, #3
  4077d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  4077da:	bf18      	it	ne
  4077dc:	3203      	addne	r2, #3
  4077de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  4077e2:	bf18      	it	ne
  4077e4:	3203      	addne	r2, #3
  4077e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  4077ea:	f1c2 0320 	rsb	r3, r2, #32
  4077ee:	fa00 fc03 	lsl.w	ip, r0, r3
  4077f2:	fa20 f002 	lsr.w	r0, r0, r2
  4077f6:	fa01 fe03 	lsl.w	lr, r1, r3
  4077fa:	ea40 000e 	orr.w	r0, r0, lr
  4077fe:	fa21 f102 	lsr.w	r1, r1, r2
  407802:	4414      	add	r4, r2
  407804:	e6c1      	b.n	40758a <__adddf3+0xe6>
  407806:	bf00      	nop

00407808 <__aeabi_dmul>:
  407808:	b570      	push	{r4, r5, r6, lr}
  40780a:	f04f 0cff 	mov.w	ip, #255	; 0xff
  40780e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  407812:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  407816:	bf1d      	ittte	ne
  407818:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  40781c:	ea94 0f0c 	teqne	r4, ip
  407820:	ea95 0f0c 	teqne	r5, ip
  407824:	f000 f8de 	bleq	4079e4 <__aeabi_dmul+0x1dc>
  407828:	442c      	add	r4, r5
  40782a:	ea81 0603 	eor.w	r6, r1, r3
  40782e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  407832:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  407836:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  40783a:	bf18      	it	ne
  40783c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  407840:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  407844:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  407848:	d038      	beq.n	4078bc <__aeabi_dmul+0xb4>
  40784a:	fba0 ce02 	umull	ip, lr, r0, r2
  40784e:	f04f 0500 	mov.w	r5, #0
  407852:	fbe1 e502 	umlal	lr, r5, r1, r2
  407856:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  40785a:	fbe0 e503 	umlal	lr, r5, r0, r3
  40785e:	f04f 0600 	mov.w	r6, #0
  407862:	fbe1 5603 	umlal	r5, r6, r1, r3
  407866:	f09c 0f00 	teq	ip, #0
  40786a:	bf18      	it	ne
  40786c:	f04e 0e01 	orrne.w	lr, lr, #1
  407870:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  407874:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  407878:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  40787c:	d204      	bcs.n	407888 <__aeabi_dmul+0x80>
  40787e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  407882:	416d      	adcs	r5, r5
  407884:	eb46 0606 	adc.w	r6, r6, r6
  407888:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  40788c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  407890:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  407894:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  407898:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  40789c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  4078a0:	bf88      	it	hi
  4078a2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  4078a6:	d81e      	bhi.n	4078e6 <__aeabi_dmul+0xde>
  4078a8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  4078ac:	bf08      	it	eq
  4078ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  4078b2:	f150 0000 	adcs.w	r0, r0, #0
  4078b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4078ba:	bd70      	pop	{r4, r5, r6, pc}
  4078bc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  4078c0:	ea46 0101 	orr.w	r1, r6, r1
  4078c4:	ea40 0002 	orr.w	r0, r0, r2
  4078c8:	ea81 0103 	eor.w	r1, r1, r3
  4078cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  4078d0:	bfc2      	ittt	gt
  4078d2:	ebd4 050c 	rsbsgt	r5, r4, ip
  4078d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  4078da:	bd70      	popgt	{r4, r5, r6, pc}
  4078dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4078e0:	f04f 0e00 	mov.w	lr, #0
  4078e4:	3c01      	subs	r4, #1
  4078e6:	f300 80ab 	bgt.w	407a40 <__aeabi_dmul+0x238>
  4078ea:	f114 0f36 	cmn.w	r4, #54	; 0x36
  4078ee:	bfde      	ittt	le
  4078f0:	2000      	movle	r0, #0
  4078f2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  4078f6:	bd70      	pople	{r4, r5, r6, pc}
  4078f8:	f1c4 0400 	rsb	r4, r4, #0
  4078fc:	3c20      	subs	r4, #32
  4078fe:	da35      	bge.n	40796c <__aeabi_dmul+0x164>
  407900:	340c      	adds	r4, #12
  407902:	dc1b      	bgt.n	40793c <__aeabi_dmul+0x134>
  407904:	f104 0414 	add.w	r4, r4, #20
  407908:	f1c4 0520 	rsb	r5, r4, #32
  40790c:	fa00 f305 	lsl.w	r3, r0, r5
  407910:	fa20 f004 	lsr.w	r0, r0, r4
  407914:	fa01 f205 	lsl.w	r2, r1, r5
  407918:	ea40 0002 	orr.w	r0, r0, r2
  40791c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  407920:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  407924:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  407928:	fa21 f604 	lsr.w	r6, r1, r4
  40792c:	eb42 0106 	adc.w	r1, r2, r6
  407930:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  407934:	bf08      	it	eq
  407936:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  40793a:	bd70      	pop	{r4, r5, r6, pc}
  40793c:	f1c4 040c 	rsb	r4, r4, #12
  407940:	f1c4 0520 	rsb	r5, r4, #32
  407944:	fa00 f304 	lsl.w	r3, r0, r4
  407948:	fa20 f005 	lsr.w	r0, r0, r5
  40794c:	fa01 f204 	lsl.w	r2, r1, r4
  407950:	ea40 0002 	orr.w	r0, r0, r2
  407954:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  407958:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  40795c:	f141 0100 	adc.w	r1, r1, #0
  407960:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  407964:	bf08      	it	eq
  407966:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  40796a:	bd70      	pop	{r4, r5, r6, pc}
  40796c:	f1c4 0520 	rsb	r5, r4, #32
  407970:	fa00 f205 	lsl.w	r2, r0, r5
  407974:	ea4e 0e02 	orr.w	lr, lr, r2
  407978:	fa20 f304 	lsr.w	r3, r0, r4
  40797c:	fa01 f205 	lsl.w	r2, r1, r5
  407980:	ea43 0302 	orr.w	r3, r3, r2
  407984:	fa21 f004 	lsr.w	r0, r1, r4
  407988:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  40798c:	fa21 f204 	lsr.w	r2, r1, r4
  407990:	ea20 0002 	bic.w	r0, r0, r2
  407994:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  407998:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  40799c:	bf08      	it	eq
  40799e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4079a2:	bd70      	pop	{r4, r5, r6, pc}
  4079a4:	f094 0f00 	teq	r4, #0
  4079a8:	d10f      	bne.n	4079ca <__aeabi_dmul+0x1c2>
  4079aa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  4079ae:	0040      	lsls	r0, r0, #1
  4079b0:	eb41 0101 	adc.w	r1, r1, r1
  4079b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4079b8:	bf08      	it	eq
  4079ba:	3c01      	subeq	r4, #1
  4079bc:	d0f7      	beq.n	4079ae <__aeabi_dmul+0x1a6>
  4079be:	ea41 0106 	orr.w	r1, r1, r6
  4079c2:	f095 0f00 	teq	r5, #0
  4079c6:	bf18      	it	ne
  4079c8:	4770      	bxne	lr
  4079ca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  4079ce:	0052      	lsls	r2, r2, #1
  4079d0:	eb43 0303 	adc.w	r3, r3, r3
  4079d4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  4079d8:	bf08      	it	eq
  4079da:	3d01      	subeq	r5, #1
  4079dc:	d0f7      	beq.n	4079ce <__aeabi_dmul+0x1c6>
  4079de:	ea43 0306 	orr.w	r3, r3, r6
  4079e2:	4770      	bx	lr
  4079e4:	ea94 0f0c 	teq	r4, ip
  4079e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  4079ec:	bf18      	it	ne
  4079ee:	ea95 0f0c 	teqne	r5, ip
  4079f2:	d00c      	beq.n	407a0e <__aeabi_dmul+0x206>
  4079f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  4079f8:	bf18      	it	ne
  4079fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  4079fe:	d1d1      	bne.n	4079a4 <__aeabi_dmul+0x19c>
  407a00:	ea81 0103 	eor.w	r1, r1, r3
  407a04:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  407a08:	f04f 0000 	mov.w	r0, #0
  407a0c:	bd70      	pop	{r4, r5, r6, pc}
  407a0e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  407a12:	bf06      	itte	eq
  407a14:	4610      	moveq	r0, r2
  407a16:	4619      	moveq	r1, r3
  407a18:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  407a1c:	d019      	beq.n	407a52 <__aeabi_dmul+0x24a>
  407a1e:	ea94 0f0c 	teq	r4, ip
  407a22:	d102      	bne.n	407a2a <__aeabi_dmul+0x222>
  407a24:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  407a28:	d113      	bne.n	407a52 <__aeabi_dmul+0x24a>
  407a2a:	ea95 0f0c 	teq	r5, ip
  407a2e:	d105      	bne.n	407a3c <__aeabi_dmul+0x234>
  407a30:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  407a34:	bf1c      	itt	ne
  407a36:	4610      	movne	r0, r2
  407a38:	4619      	movne	r1, r3
  407a3a:	d10a      	bne.n	407a52 <__aeabi_dmul+0x24a>
  407a3c:	ea81 0103 	eor.w	r1, r1, r3
  407a40:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  407a44:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  407a48:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  407a4c:	f04f 0000 	mov.w	r0, #0
  407a50:	bd70      	pop	{r4, r5, r6, pc}
  407a52:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  407a56:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  407a5a:	bd70      	pop	{r4, r5, r6, pc}

00407a5c <__aeabi_ddiv>:
  407a5c:	b570      	push	{r4, r5, r6, lr}
  407a5e:	f04f 0cff 	mov.w	ip, #255	; 0xff
  407a62:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  407a66:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  407a6a:	bf1d      	ittte	ne
  407a6c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  407a70:	ea94 0f0c 	teqne	r4, ip
  407a74:	ea95 0f0c 	teqne	r5, ip
  407a78:	f000 f8a7 	bleq	407bca <__aeabi_ddiv+0x16e>
  407a7c:	eba4 0405 	sub.w	r4, r4, r5
  407a80:	ea81 0e03 	eor.w	lr, r1, r3
  407a84:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  407a88:	ea4f 3101 	mov.w	r1, r1, lsl #12
  407a8c:	f000 8088 	beq.w	407ba0 <__aeabi_ddiv+0x144>
  407a90:	ea4f 3303 	mov.w	r3, r3, lsl #12
  407a94:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  407a98:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  407a9c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  407aa0:	ea4f 2202 	mov.w	r2, r2, lsl #8
  407aa4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  407aa8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  407aac:	ea4f 2600 	mov.w	r6, r0, lsl #8
  407ab0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  407ab4:	429d      	cmp	r5, r3
  407ab6:	bf08      	it	eq
  407ab8:	4296      	cmpeq	r6, r2
  407aba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  407abe:	f504 7440 	add.w	r4, r4, #768	; 0x300
  407ac2:	d202      	bcs.n	407aca <__aeabi_ddiv+0x6e>
  407ac4:	085b      	lsrs	r3, r3, #1
  407ac6:	ea4f 0232 	mov.w	r2, r2, rrx
  407aca:	1ab6      	subs	r6, r6, r2
  407acc:	eb65 0503 	sbc.w	r5, r5, r3
  407ad0:	085b      	lsrs	r3, r3, #1
  407ad2:	ea4f 0232 	mov.w	r2, r2, rrx
  407ad6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  407ada:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  407ade:	ebb6 0e02 	subs.w	lr, r6, r2
  407ae2:	eb75 0e03 	sbcs.w	lr, r5, r3
  407ae6:	bf22      	ittt	cs
  407ae8:	1ab6      	subcs	r6, r6, r2
  407aea:	4675      	movcs	r5, lr
  407aec:	ea40 000c 	orrcs.w	r0, r0, ip
  407af0:	085b      	lsrs	r3, r3, #1
  407af2:	ea4f 0232 	mov.w	r2, r2, rrx
  407af6:	ebb6 0e02 	subs.w	lr, r6, r2
  407afa:	eb75 0e03 	sbcs.w	lr, r5, r3
  407afe:	bf22      	ittt	cs
  407b00:	1ab6      	subcs	r6, r6, r2
  407b02:	4675      	movcs	r5, lr
  407b04:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  407b08:	085b      	lsrs	r3, r3, #1
  407b0a:	ea4f 0232 	mov.w	r2, r2, rrx
  407b0e:	ebb6 0e02 	subs.w	lr, r6, r2
  407b12:	eb75 0e03 	sbcs.w	lr, r5, r3
  407b16:	bf22      	ittt	cs
  407b18:	1ab6      	subcs	r6, r6, r2
  407b1a:	4675      	movcs	r5, lr
  407b1c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  407b20:	085b      	lsrs	r3, r3, #1
  407b22:	ea4f 0232 	mov.w	r2, r2, rrx
  407b26:	ebb6 0e02 	subs.w	lr, r6, r2
  407b2a:	eb75 0e03 	sbcs.w	lr, r5, r3
  407b2e:	bf22      	ittt	cs
  407b30:	1ab6      	subcs	r6, r6, r2
  407b32:	4675      	movcs	r5, lr
  407b34:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  407b38:	ea55 0e06 	orrs.w	lr, r5, r6
  407b3c:	d018      	beq.n	407b70 <__aeabi_ddiv+0x114>
  407b3e:	ea4f 1505 	mov.w	r5, r5, lsl #4
  407b42:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  407b46:	ea4f 1606 	mov.w	r6, r6, lsl #4
  407b4a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  407b4e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  407b52:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  407b56:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  407b5a:	d1c0      	bne.n	407ade <__aeabi_ddiv+0x82>
  407b5c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  407b60:	d10b      	bne.n	407b7a <__aeabi_ddiv+0x11e>
  407b62:	ea41 0100 	orr.w	r1, r1, r0
  407b66:	f04f 0000 	mov.w	r0, #0
  407b6a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  407b6e:	e7b6      	b.n	407ade <__aeabi_ddiv+0x82>
  407b70:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  407b74:	bf04      	itt	eq
  407b76:	4301      	orreq	r1, r0
  407b78:	2000      	moveq	r0, #0
  407b7a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  407b7e:	bf88      	it	hi
  407b80:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  407b84:	f63f aeaf 	bhi.w	4078e6 <__aeabi_dmul+0xde>
  407b88:	ebb5 0c03 	subs.w	ip, r5, r3
  407b8c:	bf04      	itt	eq
  407b8e:	ebb6 0c02 	subseq.w	ip, r6, r2
  407b92:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  407b96:	f150 0000 	adcs.w	r0, r0, #0
  407b9a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  407b9e:	bd70      	pop	{r4, r5, r6, pc}
  407ba0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  407ba4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  407ba8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  407bac:	bfc2      	ittt	gt
  407bae:	ebd4 050c 	rsbsgt	r5, r4, ip
  407bb2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  407bb6:	bd70      	popgt	{r4, r5, r6, pc}
  407bb8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  407bbc:	f04f 0e00 	mov.w	lr, #0
  407bc0:	3c01      	subs	r4, #1
  407bc2:	e690      	b.n	4078e6 <__aeabi_dmul+0xde>
  407bc4:	ea45 0e06 	orr.w	lr, r5, r6
  407bc8:	e68d      	b.n	4078e6 <__aeabi_dmul+0xde>
  407bca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  407bce:	ea94 0f0c 	teq	r4, ip
  407bd2:	bf08      	it	eq
  407bd4:	ea95 0f0c 	teqeq	r5, ip
  407bd8:	f43f af3b 	beq.w	407a52 <__aeabi_dmul+0x24a>
  407bdc:	ea94 0f0c 	teq	r4, ip
  407be0:	d10a      	bne.n	407bf8 <__aeabi_ddiv+0x19c>
  407be2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  407be6:	f47f af34 	bne.w	407a52 <__aeabi_dmul+0x24a>
  407bea:	ea95 0f0c 	teq	r5, ip
  407bee:	f47f af25 	bne.w	407a3c <__aeabi_dmul+0x234>
  407bf2:	4610      	mov	r0, r2
  407bf4:	4619      	mov	r1, r3
  407bf6:	e72c      	b.n	407a52 <__aeabi_dmul+0x24a>
  407bf8:	ea95 0f0c 	teq	r5, ip
  407bfc:	d106      	bne.n	407c0c <__aeabi_ddiv+0x1b0>
  407bfe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  407c02:	f43f aefd 	beq.w	407a00 <__aeabi_dmul+0x1f8>
  407c06:	4610      	mov	r0, r2
  407c08:	4619      	mov	r1, r3
  407c0a:	e722      	b.n	407a52 <__aeabi_dmul+0x24a>
  407c0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  407c10:	bf18      	it	ne
  407c12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  407c16:	f47f aec5 	bne.w	4079a4 <__aeabi_dmul+0x19c>
  407c1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  407c1e:	f47f af0d 	bne.w	407a3c <__aeabi_dmul+0x234>
  407c22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  407c26:	f47f aeeb 	bne.w	407a00 <__aeabi_dmul+0x1f8>
  407c2a:	e712      	b.n	407a52 <__aeabi_dmul+0x24a>

00407c2c <__gedf2>:
  407c2c:	f04f 3cff 	mov.w	ip, #4294967295
  407c30:	e006      	b.n	407c40 <__cmpdf2+0x4>
  407c32:	bf00      	nop

00407c34 <__ledf2>:
  407c34:	f04f 0c01 	mov.w	ip, #1
  407c38:	e002      	b.n	407c40 <__cmpdf2+0x4>
  407c3a:	bf00      	nop

00407c3c <__cmpdf2>:
  407c3c:	f04f 0c01 	mov.w	ip, #1
  407c40:	f84d cd04 	str.w	ip, [sp, #-4]!
  407c44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  407c48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  407c4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  407c50:	bf18      	it	ne
  407c52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  407c56:	d01b      	beq.n	407c90 <__cmpdf2+0x54>
  407c58:	b001      	add	sp, #4
  407c5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  407c5e:	bf0c      	ite	eq
  407c60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  407c64:	ea91 0f03 	teqne	r1, r3
  407c68:	bf02      	ittt	eq
  407c6a:	ea90 0f02 	teqeq	r0, r2
  407c6e:	2000      	moveq	r0, #0
  407c70:	4770      	bxeq	lr
  407c72:	f110 0f00 	cmn.w	r0, #0
  407c76:	ea91 0f03 	teq	r1, r3
  407c7a:	bf58      	it	pl
  407c7c:	4299      	cmppl	r1, r3
  407c7e:	bf08      	it	eq
  407c80:	4290      	cmpeq	r0, r2
  407c82:	bf2c      	ite	cs
  407c84:	17d8      	asrcs	r0, r3, #31
  407c86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  407c8a:	f040 0001 	orr.w	r0, r0, #1
  407c8e:	4770      	bx	lr
  407c90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  407c94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  407c98:	d102      	bne.n	407ca0 <__cmpdf2+0x64>
  407c9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  407c9e:	d107      	bne.n	407cb0 <__cmpdf2+0x74>
  407ca0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  407ca4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  407ca8:	d1d6      	bne.n	407c58 <__cmpdf2+0x1c>
  407caa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  407cae:	d0d3      	beq.n	407c58 <__cmpdf2+0x1c>
  407cb0:	f85d 0b04 	ldr.w	r0, [sp], #4
  407cb4:	4770      	bx	lr
  407cb6:	bf00      	nop

00407cb8 <__aeabi_cdrcmple>:
  407cb8:	4684      	mov	ip, r0
  407cba:	4610      	mov	r0, r2
  407cbc:	4662      	mov	r2, ip
  407cbe:	468c      	mov	ip, r1
  407cc0:	4619      	mov	r1, r3
  407cc2:	4663      	mov	r3, ip
  407cc4:	e000      	b.n	407cc8 <__aeabi_cdcmpeq>
  407cc6:	bf00      	nop

00407cc8 <__aeabi_cdcmpeq>:
  407cc8:	b501      	push	{r0, lr}
  407cca:	f7ff ffb7 	bl	407c3c <__cmpdf2>
  407cce:	2800      	cmp	r0, #0
  407cd0:	bf48      	it	mi
  407cd2:	f110 0f00 	cmnmi.w	r0, #0
  407cd6:	bd01      	pop	{r0, pc}

00407cd8 <__aeabi_dcmpeq>:
  407cd8:	f84d ed08 	str.w	lr, [sp, #-8]!
  407cdc:	f7ff fff4 	bl	407cc8 <__aeabi_cdcmpeq>
  407ce0:	bf0c      	ite	eq
  407ce2:	2001      	moveq	r0, #1
  407ce4:	2000      	movne	r0, #0
  407ce6:	f85d fb08 	ldr.w	pc, [sp], #8
  407cea:	bf00      	nop

00407cec <__aeabi_dcmplt>:
  407cec:	f84d ed08 	str.w	lr, [sp, #-8]!
  407cf0:	f7ff ffea 	bl	407cc8 <__aeabi_cdcmpeq>
  407cf4:	bf34      	ite	cc
  407cf6:	2001      	movcc	r0, #1
  407cf8:	2000      	movcs	r0, #0
  407cfa:	f85d fb08 	ldr.w	pc, [sp], #8
  407cfe:	bf00      	nop

00407d00 <__aeabi_dcmple>:
  407d00:	f84d ed08 	str.w	lr, [sp, #-8]!
  407d04:	f7ff ffe0 	bl	407cc8 <__aeabi_cdcmpeq>
  407d08:	bf94      	ite	ls
  407d0a:	2001      	movls	r0, #1
  407d0c:	2000      	movhi	r0, #0
  407d0e:	f85d fb08 	ldr.w	pc, [sp], #8
  407d12:	bf00      	nop

00407d14 <__aeabi_dcmpge>:
  407d14:	f84d ed08 	str.w	lr, [sp, #-8]!
  407d18:	f7ff ffce 	bl	407cb8 <__aeabi_cdrcmple>
  407d1c:	bf94      	ite	ls
  407d1e:	2001      	movls	r0, #1
  407d20:	2000      	movhi	r0, #0
  407d22:	f85d fb08 	ldr.w	pc, [sp], #8
  407d26:	bf00      	nop

00407d28 <__aeabi_dcmpgt>:
  407d28:	f84d ed08 	str.w	lr, [sp, #-8]!
  407d2c:	f7ff ffc4 	bl	407cb8 <__aeabi_cdrcmple>
  407d30:	bf34      	ite	cc
  407d32:	2001      	movcc	r0, #1
  407d34:	2000      	movcs	r0, #0
  407d36:	f85d fb08 	ldr.w	pc, [sp], #8
  407d3a:	bf00      	nop

00407d3c <__aeabi_d2iz>:
  407d3c:	ea4f 0241 	mov.w	r2, r1, lsl #1
  407d40:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  407d44:	d215      	bcs.n	407d72 <__aeabi_d2iz+0x36>
  407d46:	d511      	bpl.n	407d6c <__aeabi_d2iz+0x30>
  407d48:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  407d4c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  407d50:	d912      	bls.n	407d78 <__aeabi_d2iz+0x3c>
  407d52:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  407d56:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  407d5a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  407d5e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  407d62:	fa23 f002 	lsr.w	r0, r3, r2
  407d66:	bf18      	it	ne
  407d68:	4240      	negne	r0, r0
  407d6a:	4770      	bx	lr
  407d6c:	f04f 0000 	mov.w	r0, #0
  407d70:	4770      	bx	lr
  407d72:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  407d76:	d105      	bne.n	407d84 <__aeabi_d2iz+0x48>
  407d78:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  407d7c:	bf08      	it	eq
  407d7e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  407d82:	4770      	bx	lr
  407d84:	f04f 0000 	mov.w	r0, #0
  407d88:	4770      	bx	lr
  407d8a:	bf00      	nop

00407d8c <__aeabi_d2f>:
  407d8c:	ea4f 0241 	mov.w	r2, r1, lsl #1
  407d90:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
  407d94:	bf24      	itt	cs
  407d96:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
  407d9a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
  407d9e:	d90d      	bls.n	407dbc <__aeabi_d2f+0x30>
  407da0:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  407da4:	ea4f 02c0 	mov.w	r2, r0, lsl #3
  407da8:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
  407dac:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
  407db0:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
  407db4:	bf08      	it	eq
  407db6:	f020 0001 	biceq.w	r0, r0, #1
  407dba:	4770      	bx	lr
  407dbc:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
  407dc0:	d121      	bne.n	407e06 <__aeabi_d2f+0x7a>
  407dc2:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
  407dc6:	bfbc      	itt	lt
  407dc8:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
  407dcc:	4770      	bxlt	lr
  407dce:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  407dd2:	ea4f 5252 	mov.w	r2, r2, lsr #21
  407dd6:	f1c2 0218 	rsb	r2, r2, #24
  407dda:	f1c2 0c20 	rsb	ip, r2, #32
  407dde:	fa10 f30c 	lsls.w	r3, r0, ip
  407de2:	fa20 f002 	lsr.w	r0, r0, r2
  407de6:	bf18      	it	ne
  407de8:	f040 0001 	orrne.w	r0, r0, #1
  407dec:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  407df0:	ea4f 23d3 	mov.w	r3, r3, lsr #11
  407df4:	fa03 fc0c 	lsl.w	ip, r3, ip
  407df8:	ea40 000c 	orr.w	r0, r0, ip
  407dfc:	fa23 f302 	lsr.w	r3, r3, r2
  407e00:	ea4f 0343 	mov.w	r3, r3, lsl #1
  407e04:	e7cc      	b.n	407da0 <__aeabi_d2f+0x14>
  407e06:	ea7f 5362 	mvns.w	r3, r2, asr #21
  407e0a:	d107      	bne.n	407e1c <__aeabi_d2f+0x90>
  407e0c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
  407e10:	bf1e      	ittt	ne
  407e12:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
  407e16:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
  407e1a:	4770      	bxne	lr
  407e1c:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
  407e20:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  407e24:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  407e28:	4770      	bx	lr
  407e2a:	bf00      	nop

00407e2c <__aeabi_frsub>:
  407e2c:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
  407e30:	e002      	b.n	407e38 <__addsf3>
  407e32:	bf00      	nop

00407e34 <__aeabi_fsub>:
  407e34:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

00407e38 <__addsf3>:
  407e38:	0042      	lsls	r2, r0, #1
  407e3a:	bf1f      	itttt	ne
  407e3c:	ea5f 0341 	movsne.w	r3, r1, lsl #1
  407e40:	ea92 0f03 	teqne	r2, r3
  407e44:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
  407e48:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  407e4c:	d06a      	beq.n	407f24 <__addsf3+0xec>
  407e4e:	ea4f 6212 	mov.w	r2, r2, lsr #24
  407e52:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
  407e56:	bfc1      	itttt	gt
  407e58:	18d2      	addgt	r2, r2, r3
  407e5a:	4041      	eorgt	r1, r0
  407e5c:	4048      	eorgt	r0, r1
  407e5e:	4041      	eorgt	r1, r0
  407e60:	bfb8      	it	lt
  407e62:	425b      	neglt	r3, r3
  407e64:	2b19      	cmp	r3, #25
  407e66:	bf88      	it	hi
  407e68:	4770      	bxhi	lr
  407e6a:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
  407e6e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  407e72:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
  407e76:	bf18      	it	ne
  407e78:	4240      	negne	r0, r0
  407e7a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  407e7e:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
  407e82:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
  407e86:	bf18      	it	ne
  407e88:	4249      	negne	r1, r1
  407e8a:	ea92 0f03 	teq	r2, r3
  407e8e:	d03f      	beq.n	407f10 <__addsf3+0xd8>
  407e90:	f1a2 0201 	sub.w	r2, r2, #1
  407e94:	fa41 fc03 	asr.w	ip, r1, r3
  407e98:	eb10 000c 	adds.w	r0, r0, ip
  407e9c:	f1c3 0320 	rsb	r3, r3, #32
  407ea0:	fa01 f103 	lsl.w	r1, r1, r3
  407ea4:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
  407ea8:	d502      	bpl.n	407eb0 <__addsf3+0x78>
  407eaa:	4249      	negs	r1, r1
  407eac:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
  407eb0:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
  407eb4:	d313      	bcc.n	407ede <__addsf3+0xa6>
  407eb6:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
  407eba:	d306      	bcc.n	407eca <__addsf3+0x92>
  407ebc:	0840      	lsrs	r0, r0, #1
  407ebe:	ea4f 0131 	mov.w	r1, r1, rrx
  407ec2:	f102 0201 	add.w	r2, r2, #1
  407ec6:	2afe      	cmp	r2, #254	; 0xfe
  407ec8:	d251      	bcs.n	407f6e <__addsf3+0x136>
  407eca:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
  407ece:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  407ed2:	bf08      	it	eq
  407ed4:	f020 0001 	biceq.w	r0, r0, #1
  407ed8:	ea40 0003 	orr.w	r0, r0, r3
  407edc:	4770      	bx	lr
  407ede:	0049      	lsls	r1, r1, #1
  407ee0:	eb40 0000 	adc.w	r0, r0, r0
  407ee4:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
  407ee8:	f1a2 0201 	sub.w	r2, r2, #1
  407eec:	d1ed      	bne.n	407eca <__addsf3+0x92>
  407eee:	fab0 fc80 	clz	ip, r0
  407ef2:	f1ac 0c08 	sub.w	ip, ip, #8
  407ef6:	ebb2 020c 	subs.w	r2, r2, ip
  407efa:	fa00 f00c 	lsl.w	r0, r0, ip
  407efe:	bfaa      	itet	ge
  407f00:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
  407f04:	4252      	neglt	r2, r2
  407f06:	4318      	orrge	r0, r3
  407f08:	bfbc      	itt	lt
  407f0a:	40d0      	lsrlt	r0, r2
  407f0c:	4318      	orrlt	r0, r3
  407f0e:	4770      	bx	lr
  407f10:	f092 0f00 	teq	r2, #0
  407f14:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
  407f18:	bf06      	itte	eq
  407f1a:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
  407f1e:	3201      	addeq	r2, #1
  407f20:	3b01      	subne	r3, #1
  407f22:	e7b5      	b.n	407e90 <__addsf3+0x58>
  407f24:	ea4f 0341 	mov.w	r3, r1, lsl #1
  407f28:	ea7f 6c22 	mvns.w	ip, r2, asr #24
  407f2c:	bf18      	it	ne
  407f2e:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  407f32:	d021      	beq.n	407f78 <__addsf3+0x140>
  407f34:	ea92 0f03 	teq	r2, r3
  407f38:	d004      	beq.n	407f44 <__addsf3+0x10c>
  407f3a:	f092 0f00 	teq	r2, #0
  407f3e:	bf08      	it	eq
  407f40:	4608      	moveq	r0, r1
  407f42:	4770      	bx	lr
  407f44:	ea90 0f01 	teq	r0, r1
  407f48:	bf1c      	itt	ne
  407f4a:	2000      	movne	r0, #0
  407f4c:	4770      	bxne	lr
  407f4e:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
  407f52:	d104      	bne.n	407f5e <__addsf3+0x126>
  407f54:	0040      	lsls	r0, r0, #1
  407f56:	bf28      	it	cs
  407f58:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
  407f5c:	4770      	bx	lr
  407f5e:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
  407f62:	bf3c      	itt	cc
  407f64:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
  407f68:	4770      	bxcc	lr
  407f6a:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
  407f6e:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
  407f72:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  407f76:	4770      	bx	lr
  407f78:	ea7f 6222 	mvns.w	r2, r2, asr #24
  407f7c:	bf16      	itet	ne
  407f7e:	4608      	movne	r0, r1
  407f80:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
  407f84:	4601      	movne	r1, r0
  407f86:	0242      	lsls	r2, r0, #9
  407f88:	bf06      	itte	eq
  407f8a:	ea5f 2341 	movseq.w	r3, r1, lsl #9
  407f8e:	ea90 0f01 	teqeq	r0, r1
  407f92:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
  407f96:	4770      	bx	lr

00407f98 <__aeabi_ui2f>:
  407f98:	f04f 0300 	mov.w	r3, #0
  407f9c:	e004      	b.n	407fa8 <__aeabi_i2f+0x8>
  407f9e:	bf00      	nop

00407fa0 <__aeabi_i2f>:
  407fa0:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
  407fa4:	bf48      	it	mi
  407fa6:	4240      	negmi	r0, r0
  407fa8:	ea5f 0c00 	movs.w	ip, r0
  407fac:	bf08      	it	eq
  407fae:	4770      	bxeq	lr
  407fb0:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
  407fb4:	4601      	mov	r1, r0
  407fb6:	f04f 0000 	mov.w	r0, #0
  407fba:	e01c      	b.n	407ff6 <__aeabi_l2f+0x2a>

00407fbc <__aeabi_ul2f>:
  407fbc:	ea50 0201 	orrs.w	r2, r0, r1
  407fc0:	bf08      	it	eq
  407fc2:	4770      	bxeq	lr
  407fc4:	f04f 0300 	mov.w	r3, #0
  407fc8:	e00a      	b.n	407fe0 <__aeabi_l2f+0x14>
  407fca:	bf00      	nop

00407fcc <__aeabi_l2f>:
  407fcc:	ea50 0201 	orrs.w	r2, r0, r1
  407fd0:	bf08      	it	eq
  407fd2:	4770      	bxeq	lr
  407fd4:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
  407fd8:	d502      	bpl.n	407fe0 <__aeabi_l2f+0x14>
  407fda:	4240      	negs	r0, r0
  407fdc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  407fe0:	ea5f 0c01 	movs.w	ip, r1
  407fe4:	bf02      	ittt	eq
  407fe6:	4684      	moveq	ip, r0
  407fe8:	4601      	moveq	r1, r0
  407fea:	2000      	moveq	r0, #0
  407fec:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
  407ff0:	bf08      	it	eq
  407ff2:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
  407ff6:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
  407ffa:	fabc f28c 	clz	r2, ip
  407ffe:	3a08      	subs	r2, #8
  408000:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
  408004:	db10      	blt.n	408028 <__aeabi_l2f+0x5c>
  408006:	fa01 fc02 	lsl.w	ip, r1, r2
  40800a:	4463      	add	r3, ip
  40800c:	fa00 fc02 	lsl.w	ip, r0, r2
  408010:	f1c2 0220 	rsb	r2, r2, #32
  408014:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  408018:	fa20 f202 	lsr.w	r2, r0, r2
  40801c:	eb43 0002 	adc.w	r0, r3, r2
  408020:	bf08      	it	eq
  408022:	f020 0001 	biceq.w	r0, r0, #1
  408026:	4770      	bx	lr
  408028:	f102 0220 	add.w	r2, r2, #32
  40802c:	fa01 fc02 	lsl.w	ip, r1, r2
  408030:	f1c2 0220 	rsb	r2, r2, #32
  408034:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
  408038:	fa21 f202 	lsr.w	r2, r1, r2
  40803c:	eb43 0002 	adc.w	r0, r3, r2
  408040:	bf08      	it	eq
  408042:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
  408046:	4770      	bx	lr

00408048 <__aeabi_fmul>:
  408048:	f04f 0cff 	mov.w	ip, #255	; 0xff
  40804c:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
  408050:	bf1e      	ittt	ne
  408052:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
  408056:	ea92 0f0c 	teqne	r2, ip
  40805a:	ea93 0f0c 	teqne	r3, ip
  40805e:	d06f      	beq.n	408140 <__aeabi_fmul+0xf8>
  408060:	441a      	add	r2, r3
  408062:	ea80 0c01 	eor.w	ip, r0, r1
  408066:	0240      	lsls	r0, r0, #9
  408068:	bf18      	it	ne
  40806a:	ea5f 2141 	movsne.w	r1, r1, lsl #9
  40806e:	d01e      	beq.n	4080ae <__aeabi_fmul+0x66>
  408070:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
  408074:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
  408078:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
  40807c:	fba0 3101 	umull	r3, r1, r0, r1
  408080:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
  408084:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
  408088:	bf3e      	ittt	cc
  40808a:	0049      	lslcc	r1, r1, #1
  40808c:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
  408090:	005b      	lslcc	r3, r3, #1
  408092:	ea40 0001 	orr.w	r0, r0, r1
  408096:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
  40809a:	2afd      	cmp	r2, #253	; 0xfd
  40809c:	d81d      	bhi.n	4080da <__aeabi_fmul+0x92>
  40809e:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
  4080a2:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  4080a6:	bf08      	it	eq
  4080a8:	f020 0001 	biceq.w	r0, r0, #1
  4080ac:	4770      	bx	lr
  4080ae:	f090 0f00 	teq	r0, #0
  4080b2:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
  4080b6:	bf08      	it	eq
  4080b8:	0249      	lsleq	r1, r1, #9
  4080ba:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
  4080be:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
  4080c2:	3a7f      	subs	r2, #127	; 0x7f
  4080c4:	bfc2      	ittt	gt
  4080c6:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
  4080ca:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
  4080ce:	4770      	bxgt	lr
  4080d0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  4080d4:	f04f 0300 	mov.w	r3, #0
  4080d8:	3a01      	subs	r2, #1
  4080da:	dc5d      	bgt.n	408198 <__aeabi_fmul+0x150>
  4080dc:	f112 0f19 	cmn.w	r2, #25
  4080e0:	bfdc      	itt	le
  4080e2:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
  4080e6:	4770      	bxle	lr
  4080e8:	f1c2 0200 	rsb	r2, r2, #0
  4080ec:	0041      	lsls	r1, r0, #1
  4080ee:	fa21 f102 	lsr.w	r1, r1, r2
  4080f2:	f1c2 0220 	rsb	r2, r2, #32
  4080f6:	fa00 fc02 	lsl.w	ip, r0, r2
  4080fa:	ea5f 0031 	movs.w	r0, r1, rrx
  4080fe:	f140 0000 	adc.w	r0, r0, #0
  408102:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
  408106:	bf08      	it	eq
  408108:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
  40810c:	4770      	bx	lr
  40810e:	f092 0f00 	teq	r2, #0
  408112:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
  408116:	bf02      	ittt	eq
  408118:	0040      	lsleq	r0, r0, #1
  40811a:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
  40811e:	3a01      	subeq	r2, #1
  408120:	d0f9      	beq.n	408116 <__aeabi_fmul+0xce>
  408122:	ea40 000c 	orr.w	r0, r0, ip
  408126:	f093 0f00 	teq	r3, #0
  40812a:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  40812e:	bf02      	ittt	eq
  408130:	0049      	lsleq	r1, r1, #1
  408132:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
  408136:	3b01      	subeq	r3, #1
  408138:	d0f9      	beq.n	40812e <__aeabi_fmul+0xe6>
  40813a:	ea41 010c 	orr.w	r1, r1, ip
  40813e:	e78f      	b.n	408060 <__aeabi_fmul+0x18>
  408140:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
  408144:	ea92 0f0c 	teq	r2, ip
  408148:	bf18      	it	ne
  40814a:	ea93 0f0c 	teqne	r3, ip
  40814e:	d00a      	beq.n	408166 <__aeabi_fmul+0x11e>
  408150:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
  408154:	bf18      	it	ne
  408156:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
  40815a:	d1d8      	bne.n	40810e <__aeabi_fmul+0xc6>
  40815c:	ea80 0001 	eor.w	r0, r0, r1
  408160:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
  408164:	4770      	bx	lr
  408166:	f090 0f00 	teq	r0, #0
  40816a:	bf17      	itett	ne
  40816c:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
  408170:	4608      	moveq	r0, r1
  408172:	f091 0f00 	teqne	r1, #0
  408176:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
  40817a:	d014      	beq.n	4081a6 <__aeabi_fmul+0x15e>
  40817c:	ea92 0f0c 	teq	r2, ip
  408180:	d101      	bne.n	408186 <__aeabi_fmul+0x13e>
  408182:	0242      	lsls	r2, r0, #9
  408184:	d10f      	bne.n	4081a6 <__aeabi_fmul+0x15e>
  408186:	ea93 0f0c 	teq	r3, ip
  40818a:	d103      	bne.n	408194 <__aeabi_fmul+0x14c>
  40818c:	024b      	lsls	r3, r1, #9
  40818e:	bf18      	it	ne
  408190:	4608      	movne	r0, r1
  408192:	d108      	bne.n	4081a6 <__aeabi_fmul+0x15e>
  408194:	ea80 0001 	eor.w	r0, r0, r1
  408198:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
  40819c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  4081a0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  4081a4:	4770      	bx	lr
  4081a6:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  4081aa:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
  4081ae:	4770      	bx	lr

004081b0 <__aeabi_fdiv>:
  4081b0:	f04f 0cff 	mov.w	ip, #255	; 0xff
  4081b4:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
  4081b8:	bf1e      	ittt	ne
  4081ba:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
  4081be:	ea92 0f0c 	teqne	r2, ip
  4081c2:	ea93 0f0c 	teqne	r3, ip
  4081c6:	d069      	beq.n	40829c <__aeabi_fdiv+0xec>
  4081c8:	eba2 0203 	sub.w	r2, r2, r3
  4081cc:	ea80 0c01 	eor.w	ip, r0, r1
  4081d0:	0249      	lsls	r1, r1, #9
  4081d2:	ea4f 2040 	mov.w	r0, r0, lsl #9
  4081d6:	d037      	beq.n	408248 <__aeabi_fdiv+0x98>
  4081d8:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
  4081dc:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
  4081e0:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
  4081e4:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
  4081e8:	428b      	cmp	r3, r1
  4081ea:	bf38      	it	cc
  4081ec:	005b      	lslcc	r3, r3, #1
  4081ee:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
  4081f2:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
  4081f6:	428b      	cmp	r3, r1
  4081f8:	bf24      	itt	cs
  4081fa:	1a5b      	subcs	r3, r3, r1
  4081fc:	ea40 000c 	orrcs.w	r0, r0, ip
  408200:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
  408204:	bf24      	itt	cs
  408206:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
  40820a:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  40820e:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
  408212:	bf24      	itt	cs
  408214:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
  408218:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  40821c:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
  408220:	bf24      	itt	cs
  408222:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
  408226:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  40822a:	011b      	lsls	r3, r3, #4
  40822c:	bf18      	it	ne
  40822e:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
  408232:	d1e0      	bne.n	4081f6 <__aeabi_fdiv+0x46>
  408234:	2afd      	cmp	r2, #253	; 0xfd
  408236:	f63f af50 	bhi.w	4080da <__aeabi_fmul+0x92>
  40823a:	428b      	cmp	r3, r1
  40823c:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  408240:	bf08      	it	eq
  408242:	f020 0001 	biceq.w	r0, r0, #1
  408246:	4770      	bx	lr
  408248:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
  40824c:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
  408250:	327f      	adds	r2, #127	; 0x7f
  408252:	bfc2      	ittt	gt
  408254:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
  408258:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
  40825c:	4770      	bxgt	lr
  40825e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  408262:	f04f 0300 	mov.w	r3, #0
  408266:	3a01      	subs	r2, #1
  408268:	e737      	b.n	4080da <__aeabi_fmul+0x92>
  40826a:	f092 0f00 	teq	r2, #0
  40826e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
  408272:	bf02      	ittt	eq
  408274:	0040      	lsleq	r0, r0, #1
  408276:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
  40827a:	3a01      	subeq	r2, #1
  40827c:	d0f9      	beq.n	408272 <__aeabi_fdiv+0xc2>
  40827e:	ea40 000c 	orr.w	r0, r0, ip
  408282:	f093 0f00 	teq	r3, #0
  408286:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  40828a:	bf02      	ittt	eq
  40828c:	0049      	lsleq	r1, r1, #1
  40828e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
  408292:	3b01      	subeq	r3, #1
  408294:	d0f9      	beq.n	40828a <__aeabi_fdiv+0xda>
  408296:	ea41 010c 	orr.w	r1, r1, ip
  40829a:	e795      	b.n	4081c8 <__aeabi_fdiv+0x18>
  40829c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
  4082a0:	ea92 0f0c 	teq	r2, ip
  4082a4:	d108      	bne.n	4082b8 <__aeabi_fdiv+0x108>
  4082a6:	0242      	lsls	r2, r0, #9
  4082a8:	f47f af7d 	bne.w	4081a6 <__aeabi_fmul+0x15e>
  4082ac:	ea93 0f0c 	teq	r3, ip
  4082b0:	f47f af70 	bne.w	408194 <__aeabi_fmul+0x14c>
  4082b4:	4608      	mov	r0, r1
  4082b6:	e776      	b.n	4081a6 <__aeabi_fmul+0x15e>
  4082b8:	ea93 0f0c 	teq	r3, ip
  4082bc:	d104      	bne.n	4082c8 <__aeabi_fdiv+0x118>
  4082be:	024b      	lsls	r3, r1, #9
  4082c0:	f43f af4c 	beq.w	40815c <__aeabi_fmul+0x114>
  4082c4:	4608      	mov	r0, r1
  4082c6:	e76e      	b.n	4081a6 <__aeabi_fmul+0x15e>
  4082c8:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
  4082cc:	bf18      	it	ne
  4082ce:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
  4082d2:	d1ca      	bne.n	40826a <__aeabi_fdiv+0xba>
  4082d4:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
  4082d8:	f47f af5c 	bne.w	408194 <__aeabi_fmul+0x14c>
  4082dc:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
  4082e0:	f47f af3c 	bne.w	40815c <__aeabi_fmul+0x114>
  4082e4:	e75f      	b.n	4081a6 <__aeabi_fmul+0x15e>
  4082e6:	bf00      	nop

004082e8 <__gesf2>:
  4082e8:	f04f 3cff 	mov.w	ip, #4294967295
  4082ec:	e006      	b.n	4082fc <__cmpsf2+0x4>
  4082ee:	bf00      	nop

004082f0 <__lesf2>:
  4082f0:	f04f 0c01 	mov.w	ip, #1
  4082f4:	e002      	b.n	4082fc <__cmpsf2+0x4>
  4082f6:	bf00      	nop

004082f8 <__cmpsf2>:
  4082f8:	f04f 0c01 	mov.w	ip, #1
  4082fc:	f84d cd04 	str.w	ip, [sp, #-4]!
  408300:	ea4f 0240 	mov.w	r2, r0, lsl #1
  408304:	ea4f 0341 	mov.w	r3, r1, lsl #1
  408308:	ea7f 6c22 	mvns.w	ip, r2, asr #24
  40830c:	bf18      	it	ne
  40830e:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  408312:	d011      	beq.n	408338 <__cmpsf2+0x40>
  408314:	b001      	add	sp, #4
  408316:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
  40831a:	bf18      	it	ne
  40831c:	ea90 0f01 	teqne	r0, r1
  408320:	bf58      	it	pl
  408322:	ebb2 0003 	subspl.w	r0, r2, r3
  408326:	bf88      	it	hi
  408328:	17c8      	asrhi	r0, r1, #31
  40832a:	bf38      	it	cc
  40832c:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
  408330:	bf18      	it	ne
  408332:	f040 0001 	orrne.w	r0, r0, #1
  408336:	4770      	bx	lr
  408338:	ea7f 6c22 	mvns.w	ip, r2, asr #24
  40833c:	d102      	bne.n	408344 <__cmpsf2+0x4c>
  40833e:	ea5f 2c40 	movs.w	ip, r0, lsl #9
  408342:	d105      	bne.n	408350 <__cmpsf2+0x58>
  408344:	ea7f 6c23 	mvns.w	ip, r3, asr #24
  408348:	d1e4      	bne.n	408314 <__cmpsf2+0x1c>
  40834a:	ea5f 2c41 	movs.w	ip, r1, lsl #9
  40834e:	d0e1      	beq.n	408314 <__cmpsf2+0x1c>
  408350:	f85d 0b04 	ldr.w	r0, [sp], #4
  408354:	4770      	bx	lr
  408356:	bf00      	nop

00408358 <__aeabi_cfrcmple>:
  408358:	4684      	mov	ip, r0
  40835a:	4608      	mov	r0, r1
  40835c:	4661      	mov	r1, ip
  40835e:	e7ff      	b.n	408360 <__aeabi_cfcmpeq>

00408360 <__aeabi_cfcmpeq>:
  408360:	b50f      	push	{r0, r1, r2, r3, lr}
  408362:	f7ff ffc9 	bl	4082f8 <__cmpsf2>
  408366:	2800      	cmp	r0, #0
  408368:	bf48      	it	mi
  40836a:	f110 0f00 	cmnmi.w	r0, #0
  40836e:	bd0f      	pop	{r0, r1, r2, r3, pc}

00408370 <__aeabi_fcmpeq>:
  408370:	f84d ed08 	str.w	lr, [sp, #-8]!
  408374:	f7ff fff4 	bl	408360 <__aeabi_cfcmpeq>
  408378:	bf0c      	ite	eq
  40837a:	2001      	moveq	r0, #1
  40837c:	2000      	movne	r0, #0
  40837e:	f85d fb08 	ldr.w	pc, [sp], #8
  408382:	bf00      	nop

00408384 <__aeabi_fcmplt>:
  408384:	f84d ed08 	str.w	lr, [sp, #-8]!
  408388:	f7ff ffea 	bl	408360 <__aeabi_cfcmpeq>
  40838c:	bf34      	ite	cc
  40838e:	2001      	movcc	r0, #1
  408390:	2000      	movcs	r0, #0
  408392:	f85d fb08 	ldr.w	pc, [sp], #8
  408396:	bf00      	nop

00408398 <__aeabi_fcmple>:
  408398:	f84d ed08 	str.w	lr, [sp, #-8]!
  40839c:	f7ff ffe0 	bl	408360 <__aeabi_cfcmpeq>
  4083a0:	bf94      	ite	ls
  4083a2:	2001      	movls	r0, #1
  4083a4:	2000      	movhi	r0, #0
  4083a6:	f85d fb08 	ldr.w	pc, [sp], #8
  4083aa:	bf00      	nop

004083ac <__aeabi_fcmpge>:
  4083ac:	f84d ed08 	str.w	lr, [sp, #-8]!
  4083b0:	f7ff ffd2 	bl	408358 <__aeabi_cfrcmple>
  4083b4:	bf94      	ite	ls
  4083b6:	2001      	movls	r0, #1
  4083b8:	2000      	movhi	r0, #0
  4083ba:	f85d fb08 	ldr.w	pc, [sp], #8
  4083be:	bf00      	nop

004083c0 <__aeabi_fcmpgt>:
  4083c0:	f84d ed08 	str.w	lr, [sp, #-8]!
  4083c4:	f7ff ffc8 	bl	408358 <__aeabi_cfrcmple>
  4083c8:	bf34      	ite	cc
  4083ca:	2001      	movcc	r0, #1
  4083cc:	2000      	movcs	r0, #0
  4083ce:	f85d fb08 	ldr.w	pc, [sp], #8
  4083d2:	bf00      	nop

004083d4 <__aeabi_f2iz>:
  4083d4:	ea4f 0240 	mov.w	r2, r0, lsl #1
  4083d8:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
  4083dc:	d30f      	bcc.n	4083fe <__aeabi_f2iz+0x2a>
  4083de:	f04f 039e 	mov.w	r3, #158	; 0x9e
  4083e2:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
  4083e6:	d90d      	bls.n	408404 <__aeabi_f2iz+0x30>
  4083e8:	ea4f 2300 	mov.w	r3, r0, lsl #8
  4083ec:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  4083f0:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
  4083f4:	fa23 f002 	lsr.w	r0, r3, r2
  4083f8:	bf18      	it	ne
  4083fa:	4240      	negne	r0, r0
  4083fc:	4770      	bx	lr
  4083fe:	f04f 0000 	mov.w	r0, #0
  408402:	4770      	bx	lr
  408404:	f112 0f61 	cmn.w	r2, #97	; 0x61
  408408:	d101      	bne.n	40840e <__aeabi_f2iz+0x3a>
  40840a:	0242      	lsls	r2, r0, #9
  40840c:	d105      	bne.n	40841a <__aeabi_f2iz+0x46>
  40840e:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
  408412:	bf08      	it	eq
  408414:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  408418:	4770      	bx	lr
  40841a:	f04f 0000 	mov.w	r0, #0
  40841e:	4770      	bx	lr

00408420 <calloc>:
  408420:	4b02      	ldr	r3, [pc, #8]	; (40842c <calloc+0xc>)
  408422:	460a      	mov	r2, r1
  408424:	4601      	mov	r1, r0
  408426:	6818      	ldr	r0, [r3, #0]
  408428:	f000 b802 	b.w	408430 <_calloc_r>
  40842c:	20400028 	.word	0x20400028

00408430 <_calloc_r>:
  408430:	b510      	push	{r4, lr}
  408432:	fb02 f101 	mul.w	r1, r2, r1
  408436:	f000 f877 	bl	408528 <_malloc_r>
  40843a:	4604      	mov	r4, r0
  40843c:	b1d8      	cbz	r0, 408476 <_calloc_r+0x46>
  40843e:	f850 2c04 	ldr.w	r2, [r0, #-4]
  408442:	f022 0203 	bic.w	r2, r2, #3
  408446:	3a04      	subs	r2, #4
  408448:	2a24      	cmp	r2, #36	; 0x24
  40844a:	d818      	bhi.n	40847e <_calloc_r+0x4e>
  40844c:	2a13      	cmp	r2, #19
  40844e:	d914      	bls.n	40847a <_calloc_r+0x4a>
  408450:	2300      	movs	r3, #0
  408452:	2a1b      	cmp	r2, #27
  408454:	6003      	str	r3, [r0, #0]
  408456:	6043      	str	r3, [r0, #4]
  408458:	d916      	bls.n	408488 <_calloc_r+0x58>
  40845a:	2a24      	cmp	r2, #36	; 0x24
  40845c:	6083      	str	r3, [r0, #8]
  40845e:	60c3      	str	r3, [r0, #12]
  408460:	bf11      	iteee	ne
  408462:	f100 0210 	addne.w	r2, r0, #16
  408466:	6103      	streq	r3, [r0, #16]
  408468:	6143      	streq	r3, [r0, #20]
  40846a:	f100 0218 	addeq.w	r2, r0, #24
  40846e:	2300      	movs	r3, #0
  408470:	6013      	str	r3, [r2, #0]
  408472:	6053      	str	r3, [r2, #4]
  408474:	6093      	str	r3, [r2, #8]
  408476:	4620      	mov	r0, r4
  408478:	bd10      	pop	{r4, pc}
  40847a:	4602      	mov	r2, r0
  40847c:	e7f7      	b.n	40846e <_calloc_r+0x3e>
  40847e:	2100      	movs	r1, #0
  408480:	f000 fc00 	bl	408c84 <memset>
  408484:	4620      	mov	r0, r4
  408486:	bd10      	pop	{r4, pc}
  408488:	f100 0208 	add.w	r2, r0, #8
  40848c:	e7ef      	b.n	40846e <_calloc_r+0x3e>
  40848e:	bf00      	nop

00408490 <__libc_init_array>:
  408490:	b570      	push	{r4, r5, r6, lr}
  408492:	4e0f      	ldr	r6, [pc, #60]	; (4084d0 <__libc_init_array+0x40>)
  408494:	4d0f      	ldr	r5, [pc, #60]	; (4084d4 <__libc_init_array+0x44>)
  408496:	1b76      	subs	r6, r6, r5
  408498:	10b6      	asrs	r6, r6, #2
  40849a:	bf18      	it	ne
  40849c:	2400      	movne	r4, #0
  40849e:	d005      	beq.n	4084ac <__libc_init_array+0x1c>
  4084a0:	3401      	adds	r4, #1
  4084a2:	f855 3b04 	ldr.w	r3, [r5], #4
  4084a6:	4798      	blx	r3
  4084a8:	42a6      	cmp	r6, r4
  4084aa:	d1f9      	bne.n	4084a0 <__libc_init_array+0x10>
  4084ac:	4e0a      	ldr	r6, [pc, #40]	; (4084d8 <__libc_init_array+0x48>)
  4084ae:	4d0b      	ldr	r5, [pc, #44]	; (4084dc <__libc_init_array+0x4c>)
  4084b0:	1b76      	subs	r6, r6, r5
  4084b2:	f007 fa15 	bl	40f8e0 <_init>
  4084b6:	10b6      	asrs	r6, r6, #2
  4084b8:	bf18      	it	ne
  4084ba:	2400      	movne	r4, #0
  4084bc:	d006      	beq.n	4084cc <__libc_init_array+0x3c>
  4084be:	3401      	adds	r4, #1
  4084c0:	f855 3b04 	ldr.w	r3, [r5], #4
  4084c4:	4798      	blx	r3
  4084c6:	42a6      	cmp	r6, r4
  4084c8:	d1f9      	bne.n	4084be <__libc_init_array+0x2e>
  4084ca:	bd70      	pop	{r4, r5, r6, pc}
  4084cc:	bd70      	pop	{r4, r5, r6, pc}
  4084ce:	bf00      	nop
  4084d0:	0040f8ec 	.word	0x0040f8ec
  4084d4:	0040f8ec 	.word	0x0040f8ec
  4084d8:	0040f8f4 	.word	0x0040f8f4
  4084dc:	0040f8ec 	.word	0x0040f8ec

004084e0 <iprintf>:
  4084e0:	b40f      	push	{r0, r1, r2, r3}
  4084e2:	b500      	push	{lr}
  4084e4:	4907      	ldr	r1, [pc, #28]	; (408504 <iprintf+0x24>)
  4084e6:	b083      	sub	sp, #12
  4084e8:	ab04      	add	r3, sp, #16
  4084ea:	6808      	ldr	r0, [r1, #0]
  4084ec:	f853 2b04 	ldr.w	r2, [r3], #4
  4084f0:	6881      	ldr	r1, [r0, #8]
  4084f2:	9301      	str	r3, [sp, #4]
  4084f4:	f001 ff96 	bl	40a424 <_vfiprintf_r>
  4084f8:	b003      	add	sp, #12
  4084fa:	f85d eb04 	ldr.w	lr, [sp], #4
  4084fe:	b004      	add	sp, #16
  408500:	4770      	bx	lr
  408502:	bf00      	nop
  408504:	20400028 	.word	0x20400028

00408508 <malloc>:
  408508:	4b02      	ldr	r3, [pc, #8]	; (408514 <malloc+0xc>)
  40850a:	4601      	mov	r1, r0
  40850c:	6818      	ldr	r0, [r3, #0]
  40850e:	f000 b80b 	b.w	408528 <_malloc_r>
  408512:	bf00      	nop
  408514:	20400028 	.word	0x20400028

00408518 <free>:
  408518:	4b02      	ldr	r3, [pc, #8]	; (408524 <free+0xc>)
  40851a:	4601      	mov	r1, r0
  40851c:	6818      	ldr	r0, [r3, #0]
  40851e:	f004 b85b 	b.w	40c5d8 <_free_r>
  408522:	bf00      	nop
  408524:	20400028 	.word	0x20400028

00408528 <_malloc_r>:
  408528:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40852c:	f101 060b 	add.w	r6, r1, #11
  408530:	2e16      	cmp	r6, #22
  408532:	b083      	sub	sp, #12
  408534:	4605      	mov	r5, r0
  408536:	f240 809e 	bls.w	408676 <_malloc_r+0x14e>
  40853a:	f036 0607 	bics.w	r6, r6, #7
  40853e:	f100 80bd 	bmi.w	4086bc <_malloc_r+0x194>
  408542:	42b1      	cmp	r1, r6
  408544:	f200 80ba 	bhi.w	4086bc <_malloc_r+0x194>
  408548:	f000 fbea 	bl	408d20 <__malloc_lock>
  40854c:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  408550:	f0c0 8293 	bcc.w	408a7a <_malloc_r+0x552>
  408554:	0a73      	lsrs	r3, r6, #9
  408556:	f000 80b8 	beq.w	4086ca <_malloc_r+0x1a2>
  40855a:	2b04      	cmp	r3, #4
  40855c:	f200 8179 	bhi.w	408852 <_malloc_r+0x32a>
  408560:	09b3      	lsrs	r3, r6, #6
  408562:	f103 0039 	add.w	r0, r3, #57	; 0x39
  408566:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  40856a:	00c3      	lsls	r3, r0, #3
  40856c:	4fbf      	ldr	r7, [pc, #764]	; (40886c <_malloc_r+0x344>)
  40856e:	443b      	add	r3, r7
  408570:	f1a3 0108 	sub.w	r1, r3, #8
  408574:	685c      	ldr	r4, [r3, #4]
  408576:	42a1      	cmp	r1, r4
  408578:	d106      	bne.n	408588 <_malloc_r+0x60>
  40857a:	e00c      	b.n	408596 <_malloc_r+0x6e>
  40857c:	2a00      	cmp	r2, #0
  40857e:	f280 80aa 	bge.w	4086d6 <_malloc_r+0x1ae>
  408582:	68e4      	ldr	r4, [r4, #12]
  408584:	42a1      	cmp	r1, r4
  408586:	d006      	beq.n	408596 <_malloc_r+0x6e>
  408588:	6863      	ldr	r3, [r4, #4]
  40858a:	f023 0303 	bic.w	r3, r3, #3
  40858e:	1b9a      	subs	r2, r3, r6
  408590:	2a0f      	cmp	r2, #15
  408592:	ddf3      	ble.n	40857c <_malloc_r+0x54>
  408594:	4670      	mov	r0, lr
  408596:	693c      	ldr	r4, [r7, #16]
  408598:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 408880 <_malloc_r+0x358>
  40859c:	4574      	cmp	r4, lr
  40859e:	f000 81ab 	beq.w	4088f8 <_malloc_r+0x3d0>
  4085a2:	6863      	ldr	r3, [r4, #4]
  4085a4:	f023 0303 	bic.w	r3, r3, #3
  4085a8:	1b9a      	subs	r2, r3, r6
  4085aa:	2a0f      	cmp	r2, #15
  4085ac:	f300 8190 	bgt.w	4088d0 <_malloc_r+0x3a8>
  4085b0:	2a00      	cmp	r2, #0
  4085b2:	f8c7 e014 	str.w	lr, [r7, #20]
  4085b6:	f8c7 e010 	str.w	lr, [r7, #16]
  4085ba:	f280 809d 	bge.w	4086f8 <_malloc_r+0x1d0>
  4085be:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4085c2:	f080 8161 	bcs.w	408888 <_malloc_r+0x360>
  4085c6:	08db      	lsrs	r3, r3, #3
  4085c8:	f103 0c01 	add.w	ip, r3, #1
  4085cc:	1099      	asrs	r1, r3, #2
  4085ce:	687a      	ldr	r2, [r7, #4]
  4085d0:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  4085d4:	f8c4 8008 	str.w	r8, [r4, #8]
  4085d8:	2301      	movs	r3, #1
  4085da:	408b      	lsls	r3, r1
  4085dc:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  4085e0:	4313      	orrs	r3, r2
  4085e2:	3908      	subs	r1, #8
  4085e4:	60e1      	str	r1, [r4, #12]
  4085e6:	607b      	str	r3, [r7, #4]
  4085e8:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  4085ec:	f8c8 400c 	str.w	r4, [r8, #12]
  4085f0:	1082      	asrs	r2, r0, #2
  4085f2:	2401      	movs	r4, #1
  4085f4:	4094      	lsls	r4, r2
  4085f6:	429c      	cmp	r4, r3
  4085f8:	f200 808b 	bhi.w	408712 <_malloc_r+0x1ea>
  4085fc:	421c      	tst	r4, r3
  4085fe:	d106      	bne.n	40860e <_malloc_r+0xe6>
  408600:	f020 0003 	bic.w	r0, r0, #3
  408604:	0064      	lsls	r4, r4, #1
  408606:	421c      	tst	r4, r3
  408608:	f100 0004 	add.w	r0, r0, #4
  40860c:	d0fa      	beq.n	408604 <_malloc_r+0xdc>
  40860e:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  408612:	46cc      	mov	ip, r9
  408614:	4680      	mov	r8, r0
  408616:	f8dc 300c 	ldr.w	r3, [ip, #12]
  40861a:	459c      	cmp	ip, r3
  40861c:	d107      	bne.n	40862e <_malloc_r+0x106>
  40861e:	e16d      	b.n	4088fc <_malloc_r+0x3d4>
  408620:	2a00      	cmp	r2, #0
  408622:	f280 817b 	bge.w	40891c <_malloc_r+0x3f4>
  408626:	68db      	ldr	r3, [r3, #12]
  408628:	459c      	cmp	ip, r3
  40862a:	f000 8167 	beq.w	4088fc <_malloc_r+0x3d4>
  40862e:	6859      	ldr	r1, [r3, #4]
  408630:	f021 0103 	bic.w	r1, r1, #3
  408634:	1b8a      	subs	r2, r1, r6
  408636:	2a0f      	cmp	r2, #15
  408638:	ddf2      	ble.n	408620 <_malloc_r+0xf8>
  40863a:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  40863e:	f8d3 8008 	ldr.w	r8, [r3, #8]
  408642:	9300      	str	r3, [sp, #0]
  408644:	199c      	adds	r4, r3, r6
  408646:	4628      	mov	r0, r5
  408648:	f046 0601 	orr.w	r6, r6, #1
  40864c:	f042 0501 	orr.w	r5, r2, #1
  408650:	605e      	str	r6, [r3, #4]
  408652:	f8c8 c00c 	str.w	ip, [r8, #12]
  408656:	f8cc 8008 	str.w	r8, [ip, #8]
  40865a:	617c      	str	r4, [r7, #20]
  40865c:	613c      	str	r4, [r7, #16]
  40865e:	f8c4 e00c 	str.w	lr, [r4, #12]
  408662:	f8c4 e008 	str.w	lr, [r4, #8]
  408666:	6065      	str	r5, [r4, #4]
  408668:	505a      	str	r2, [r3, r1]
  40866a:	f000 fb5f 	bl	408d2c <__malloc_unlock>
  40866e:	9b00      	ldr	r3, [sp, #0]
  408670:	f103 0408 	add.w	r4, r3, #8
  408674:	e01e      	b.n	4086b4 <_malloc_r+0x18c>
  408676:	2910      	cmp	r1, #16
  408678:	d820      	bhi.n	4086bc <_malloc_r+0x194>
  40867a:	f000 fb51 	bl	408d20 <__malloc_lock>
  40867e:	2610      	movs	r6, #16
  408680:	2318      	movs	r3, #24
  408682:	2002      	movs	r0, #2
  408684:	4f79      	ldr	r7, [pc, #484]	; (40886c <_malloc_r+0x344>)
  408686:	443b      	add	r3, r7
  408688:	f1a3 0208 	sub.w	r2, r3, #8
  40868c:	685c      	ldr	r4, [r3, #4]
  40868e:	4294      	cmp	r4, r2
  408690:	f000 813d 	beq.w	40890e <_malloc_r+0x3e6>
  408694:	6863      	ldr	r3, [r4, #4]
  408696:	68e1      	ldr	r1, [r4, #12]
  408698:	68a6      	ldr	r6, [r4, #8]
  40869a:	f023 0303 	bic.w	r3, r3, #3
  40869e:	4423      	add	r3, r4
  4086a0:	4628      	mov	r0, r5
  4086a2:	685a      	ldr	r2, [r3, #4]
  4086a4:	60f1      	str	r1, [r6, #12]
  4086a6:	f042 0201 	orr.w	r2, r2, #1
  4086aa:	608e      	str	r6, [r1, #8]
  4086ac:	605a      	str	r2, [r3, #4]
  4086ae:	f000 fb3d 	bl	408d2c <__malloc_unlock>
  4086b2:	3408      	adds	r4, #8
  4086b4:	4620      	mov	r0, r4
  4086b6:	b003      	add	sp, #12
  4086b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4086bc:	2400      	movs	r4, #0
  4086be:	230c      	movs	r3, #12
  4086c0:	4620      	mov	r0, r4
  4086c2:	602b      	str	r3, [r5, #0]
  4086c4:	b003      	add	sp, #12
  4086c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4086ca:	2040      	movs	r0, #64	; 0x40
  4086cc:	f44f 7300 	mov.w	r3, #512	; 0x200
  4086d0:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  4086d4:	e74a      	b.n	40856c <_malloc_r+0x44>
  4086d6:	4423      	add	r3, r4
  4086d8:	68e1      	ldr	r1, [r4, #12]
  4086da:	685a      	ldr	r2, [r3, #4]
  4086dc:	68a6      	ldr	r6, [r4, #8]
  4086de:	f042 0201 	orr.w	r2, r2, #1
  4086e2:	60f1      	str	r1, [r6, #12]
  4086e4:	4628      	mov	r0, r5
  4086e6:	608e      	str	r6, [r1, #8]
  4086e8:	605a      	str	r2, [r3, #4]
  4086ea:	f000 fb1f 	bl	408d2c <__malloc_unlock>
  4086ee:	3408      	adds	r4, #8
  4086f0:	4620      	mov	r0, r4
  4086f2:	b003      	add	sp, #12
  4086f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4086f8:	4423      	add	r3, r4
  4086fa:	4628      	mov	r0, r5
  4086fc:	685a      	ldr	r2, [r3, #4]
  4086fe:	f042 0201 	orr.w	r2, r2, #1
  408702:	605a      	str	r2, [r3, #4]
  408704:	f000 fb12 	bl	408d2c <__malloc_unlock>
  408708:	3408      	adds	r4, #8
  40870a:	4620      	mov	r0, r4
  40870c:	b003      	add	sp, #12
  40870e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  408712:	68bc      	ldr	r4, [r7, #8]
  408714:	6863      	ldr	r3, [r4, #4]
  408716:	f023 0803 	bic.w	r8, r3, #3
  40871a:	45b0      	cmp	r8, r6
  40871c:	d304      	bcc.n	408728 <_malloc_r+0x200>
  40871e:	eba8 0306 	sub.w	r3, r8, r6
  408722:	2b0f      	cmp	r3, #15
  408724:	f300 8085 	bgt.w	408832 <_malloc_r+0x30a>
  408728:	f8df 9158 	ldr.w	r9, [pc, #344]	; 408884 <_malloc_r+0x35c>
  40872c:	4b50      	ldr	r3, [pc, #320]	; (408870 <_malloc_r+0x348>)
  40872e:	f8d9 2000 	ldr.w	r2, [r9]
  408732:	681b      	ldr	r3, [r3, #0]
  408734:	3201      	adds	r2, #1
  408736:	4433      	add	r3, r6
  408738:	eb04 0a08 	add.w	sl, r4, r8
  40873c:	f000 8155 	beq.w	4089ea <_malloc_r+0x4c2>
  408740:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  408744:	330f      	adds	r3, #15
  408746:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  40874a:	f02b 0b0f 	bic.w	fp, fp, #15
  40874e:	4659      	mov	r1, fp
  408750:	4628      	mov	r0, r5
  408752:	f000 faf1 	bl	408d38 <_sbrk_r>
  408756:	1c41      	adds	r1, r0, #1
  408758:	4602      	mov	r2, r0
  40875a:	f000 80fc 	beq.w	408956 <_malloc_r+0x42e>
  40875e:	4582      	cmp	sl, r0
  408760:	f200 80f7 	bhi.w	408952 <_malloc_r+0x42a>
  408764:	4b43      	ldr	r3, [pc, #268]	; (408874 <_malloc_r+0x34c>)
  408766:	6819      	ldr	r1, [r3, #0]
  408768:	4459      	add	r1, fp
  40876a:	6019      	str	r1, [r3, #0]
  40876c:	f000 814d 	beq.w	408a0a <_malloc_r+0x4e2>
  408770:	f8d9 0000 	ldr.w	r0, [r9]
  408774:	3001      	adds	r0, #1
  408776:	bf1b      	ittet	ne
  408778:	eba2 0a0a 	subne.w	sl, r2, sl
  40877c:	4451      	addne	r1, sl
  40877e:	f8c9 2000 	streq.w	r2, [r9]
  408782:	6019      	strne	r1, [r3, #0]
  408784:	f012 0107 	ands.w	r1, r2, #7
  408788:	f000 8115 	beq.w	4089b6 <_malloc_r+0x48e>
  40878c:	f1c1 0008 	rsb	r0, r1, #8
  408790:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  408794:	4402      	add	r2, r0
  408796:	3108      	adds	r1, #8
  408798:	eb02 090b 	add.w	r9, r2, fp
  40879c:	f3c9 090b 	ubfx	r9, r9, #0, #12
  4087a0:	eba1 0909 	sub.w	r9, r1, r9
  4087a4:	4649      	mov	r1, r9
  4087a6:	4628      	mov	r0, r5
  4087a8:	9301      	str	r3, [sp, #4]
  4087aa:	9200      	str	r2, [sp, #0]
  4087ac:	f000 fac4 	bl	408d38 <_sbrk_r>
  4087b0:	1c43      	adds	r3, r0, #1
  4087b2:	e89d 000c 	ldmia.w	sp, {r2, r3}
  4087b6:	f000 8143 	beq.w	408a40 <_malloc_r+0x518>
  4087ba:	1a80      	subs	r0, r0, r2
  4087bc:	4448      	add	r0, r9
  4087be:	f040 0001 	orr.w	r0, r0, #1
  4087c2:	6819      	ldr	r1, [r3, #0]
  4087c4:	60ba      	str	r2, [r7, #8]
  4087c6:	4449      	add	r1, r9
  4087c8:	42bc      	cmp	r4, r7
  4087ca:	6050      	str	r0, [r2, #4]
  4087cc:	6019      	str	r1, [r3, #0]
  4087ce:	d017      	beq.n	408800 <_malloc_r+0x2d8>
  4087d0:	f1b8 0f0f 	cmp.w	r8, #15
  4087d4:	f240 80fb 	bls.w	4089ce <_malloc_r+0x4a6>
  4087d8:	6860      	ldr	r0, [r4, #4]
  4087da:	f1a8 020c 	sub.w	r2, r8, #12
  4087de:	f022 0207 	bic.w	r2, r2, #7
  4087e2:	eb04 0e02 	add.w	lr, r4, r2
  4087e6:	f000 0001 	and.w	r0, r0, #1
  4087ea:	f04f 0c05 	mov.w	ip, #5
  4087ee:	4310      	orrs	r0, r2
  4087f0:	2a0f      	cmp	r2, #15
  4087f2:	6060      	str	r0, [r4, #4]
  4087f4:	f8ce c004 	str.w	ip, [lr, #4]
  4087f8:	f8ce c008 	str.w	ip, [lr, #8]
  4087fc:	f200 8117 	bhi.w	408a2e <_malloc_r+0x506>
  408800:	4b1d      	ldr	r3, [pc, #116]	; (408878 <_malloc_r+0x350>)
  408802:	68bc      	ldr	r4, [r7, #8]
  408804:	681a      	ldr	r2, [r3, #0]
  408806:	4291      	cmp	r1, r2
  408808:	bf88      	it	hi
  40880a:	6019      	strhi	r1, [r3, #0]
  40880c:	4b1b      	ldr	r3, [pc, #108]	; (40887c <_malloc_r+0x354>)
  40880e:	681a      	ldr	r2, [r3, #0]
  408810:	4291      	cmp	r1, r2
  408812:	6862      	ldr	r2, [r4, #4]
  408814:	bf88      	it	hi
  408816:	6019      	strhi	r1, [r3, #0]
  408818:	f022 0203 	bic.w	r2, r2, #3
  40881c:	4296      	cmp	r6, r2
  40881e:	eba2 0306 	sub.w	r3, r2, r6
  408822:	d801      	bhi.n	408828 <_malloc_r+0x300>
  408824:	2b0f      	cmp	r3, #15
  408826:	dc04      	bgt.n	408832 <_malloc_r+0x30a>
  408828:	4628      	mov	r0, r5
  40882a:	f000 fa7f 	bl	408d2c <__malloc_unlock>
  40882e:	2400      	movs	r4, #0
  408830:	e740      	b.n	4086b4 <_malloc_r+0x18c>
  408832:	19a2      	adds	r2, r4, r6
  408834:	f043 0301 	orr.w	r3, r3, #1
  408838:	f046 0601 	orr.w	r6, r6, #1
  40883c:	6066      	str	r6, [r4, #4]
  40883e:	4628      	mov	r0, r5
  408840:	60ba      	str	r2, [r7, #8]
  408842:	6053      	str	r3, [r2, #4]
  408844:	f000 fa72 	bl	408d2c <__malloc_unlock>
  408848:	3408      	adds	r4, #8
  40884a:	4620      	mov	r0, r4
  40884c:	b003      	add	sp, #12
  40884e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  408852:	2b14      	cmp	r3, #20
  408854:	d971      	bls.n	40893a <_malloc_r+0x412>
  408856:	2b54      	cmp	r3, #84	; 0x54
  408858:	f200 80a3 	bhi.w	4089a2 <_malloc_r+0x47a>
  40885c:	0b33      	lsrs	r3, r6, #12
  40885e:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  408862:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  408866:	00c3      	lsls	r3, r0, #3
  408868:	e680      	b.n	40856c <_malloc_r+0x44>
  40886a:	bf00      	nop
  40886c:	20400458 	.word	0x20400458
  408870:	2040ed90 	.word	0x2040ed90
  408874:	2040ed60 	.word	0x2040ed60
  408878:	2040ed88 	.word	0x2040ed88
  40887c:	2040ed8c 	.word	0x2040ed8c
  408880:	20400460 	.word	0x20400460
  408884:	20400860 	.word	0x20400860
  408888:	0a5a      	lsrs	r2, r3, #9
  40888a:	2a04      	cmp	r2, #4
  40888c:	d95b      	bls.n	408946 <_malloc_r+0x41e>
  40888e:	2a14      	cmp	r2, #20
  408890:	f200 80ae 	bhi.w	4089f0 <_malloc_r+0x4c8>
  408894:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  408898:	00c9      	lsls	r1, r1, #3
  40889a:	325b      	adds	r2, #91	; 0x5b
  40889c:	eb07 0c01 	add.w	ip, r7, r1
  4088a0:	5879      	ldr	r1, [r7, r1]
  4088a2:	f1ac 0c08 	sub.w	ip, ip, #8
  4088a6:	458c      	cmp	ip, r1
  4088a8:	f000 8088 	beq.w	4089bc <_malloc_r+0x494>
  4088ac:	684a      	ldr	r2, [r1, #4]
  4088ae:	f022 0203 	bic.w	r2, r2, #3
  4088b2:	4293      	cmp	r3, r2
  4088b4:	d273      	bcs.n	40899e <_malloc_r+0x476>
  4088b6:	6889      	ldr	r1, [r1, #8]
  4088b8:	458c      	cmp	ip, r1
  4088ba:	d1f7      	bne.n	4088ac <_malloc_r+0x384>
  4088bc:	f8dc 200c 	ldr.w	r2, [ip, #12]
  4088c0:	687b      	ldr	r3, [r7, #4]
  4088c2:	60e2      	str	r2, [r4, #12]
  4088c4:	f8c4 c008 	str.w	ip, [r4, #8]
  4088c8:	6094      	str	r4, [r2, #8]
  4088ca:	f8cc 400c 	str.w	r4, [ip, #12]
  4088ce:	e68f      	b.n	4085f0 <_malloc_r+0xc8>
  4088d0:	19a1      	adds	r1, r4, r6
  4088d2:	f046 0c01 	orr.w	ip, r6, #1
  4088d6:	f042 0601 	orr.w	r6, r2, #1
  4088da:	f8c4 c004 	str.w	ip, [r4, #4]
  4088de:	4628      	mov	r0, r5
  4088e0:	6179      	str	r1, [r7, #20]
  4088e2:	6139      	str	r1, [r7, #16]
  4088e4:	f8c1 e00c 	str.w	lr, [r1, #12]
  4088e8:	f8c1 e008 	str.w	lr, [r1, #8]
  4088ec:	604e      	str	r6, [r1, #4]
  4088ee:	50e2      	str	r2, [r4, r3]
  4088f0:	f000 fa1c 	bl	408d2c <__malloc_unlock>
  4088f4:	3408      	adds	r4, #8
  4088f6:	e6dd      	b.n	4086b4 <_malloc_r+0x18c>
  4088f8:	687b      	ldr	r3, [r7, #4]
  4088fa:	e679      	b.n	4085f0 <_malloc_r+0xc8>
  4088fc:	f108 0801 	add.w	r8, r8, #1
  408900:	f018 0f03 	tst.w	r8, #3
  408904:	f10c 0c08 	add.w	ip, ip, #8
  408908:	f47f ae85 	bne.w	408616 <_malloc_r+0xee>
  40890c:	e02d      	b.n	40896a <_malloc_r+0x442>
  40890e:	68dc      	ldr	r4, [r3, #12]
  408910:	42a3      	cmp	r3, r4
  408912:	bf08      	it	eq
  408914:	3002      	addeq	r0, #2
  408916:	f43f ae3e 	beq.w	408596 <_malloc_r+0x6e>
  40891a:	e6bb      	b.n	408694 <_malloc_r+0x16c>
  40891c:	4419      	add	r1, r3
  40891e:	461c      	mov	r4, r3
  408920:	684a      	ldr	r2, [r1, #4]
  408922:	68db      	ldr	r3, [r3, #12]
  408924:	f854 6f08 	ldr.w	r6, [r4, #8]!
  408928:	f042 0201 	orr.w	r2, r2, #1
  40892c:	604a      	str	r2, [r1, #4]
  40892e:	4628      	mov	r0, r5
  408930:	60f3      	str	r3, [r6, #12]
  408932:	609e      	str	r6, [r3, #8]
  408934:	f000 f9fa 	bl	408d2c <__malloc_unlock>
  408938:	e6bc      	b.n	4086b4 <_malloc_r+0x18c>
  40893a:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  40893e:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  408942:	00c3      	lsls	r3, r0, #3
  408944:	e612      	b.n	40856c <_malloc_r+0x44>
  408946:	099a      	lsrs	r2, r3, #6
  408948:	f102 0139 	add.w	r1, r2, #57	; 0x39
  40894c:	00c9      	lsls	r1, r1, #3
  40894e:	3238      	adds	r2, #56	; 0x38
  408950:	e7a4      	b.n	40889c <_malloc_r+0x374>
  408952:	42bc      	cmp	r4, r7
  408954:	d054      	beq.n	408a00 <_malloc_r+0x4d8>
  408956:	68bc      	ldr	r4, [r7, #8]
  408958:	6862      	ldr	r2, [r4, #4]
  40895a:	f022 0203 	bic.w	r2, r2, #3
  40895e:	e75d      	b.n	40881c <_malloc_r+0x2f4>
  408960:	f859 3908 	ldr.w	r3, [r9], #-8
  408964:	4599      	cmp	r9, r3
  408966:	f040 8086 	bne.w	408a76 <_malloc_r+0x54e>
  40896a:	f010 0f03 	tst.w	r0, #3
  40896e:	f100 30ff 	add.w	r0, r0, #4294967295
  408972:	d1f5      	bne.n	408960 <_malloc_r+0x438>
  408974:	687b      	ldr	r3, [r7, #4]
  408976:	ea23 0304 	bic.w	r3, r3, r4
  40897a:	607b      	str	r3, [r7, #4]
  40897c:	0064      	lsls	r4, r4, #1
  40897e:	429c      	cmp	r4, r3
  408980:	f63f aec7 	bhi.w	408712 <_malloc_r+0x1ea>
  408984:	2c00      	cmp	r4, #0
  408986:	f43f aec4 	beq.w	408712 <_malloc_r+0x1ea>
  40898a:	421c      	tst	r4, r3
  40898c:	4640      	mov	r0, r8
  40898e:	f47f ae3e 	bne.w	40860e <_malloc_r+0xe6>
  408992:	0064      	lsls	r4, r4, #1
  408994:	421c      	tst	r4, r3
  408996:	f100 0004 	add.w	r0, r0, #4
  40899a:	d0fa      	beq.n	408992 <_malloc_r+0x46a>
  40899c:	e637      	b.n	40860e <_malloc_r+0xe6>
  40899e:	468c      	mov	ip, r1
  4089a0:	e78c      	b.n	4088bc <_malloc_r+0x394>
  4089a2:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  4089a6:	d815      	bhi.n	4089d4 <_malloc_r+0x4ac>
  4089a8:	0bf3      	lsrs	r3, r6, #15
  4089aa:	f103 0078 	add.w	r0, r3, #120	; 0x78
  4089ae:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  4089b2:	00c3      	lsls	r3, r0, #3
  4089b4:	e5da      	b.n	40856c <_malloc_r+0x44>
  4089b6:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  4089ba:	e6ed      	b.n	408798 <_malloc_r+0x270>
  4089bc:	687b      	ldr	r3, [r7, #4]
  4089be:	1092      	asrs	r2, r2, #2
  4089c0:	2101      	movs	r1, #1
  4089c2:	fa01 f202 	lsl.w	r2, r1, r2
  4089c6:	4313      	orrs	r3, r2
  4089c8:	607b      	str	r3, [r7, #4]
  4089ca:	4662      	mov	r2, ip
  4089cc:	e779      	b.n	4088c2 <_malloc_r+0x39a>
  4089ce:	2301      	movs	r3, #1
  4089d0:	6053      	str	r3, [r2, #4]
  4089d2:	e729      	b.n	408828 <_malloc_r+0x300>
  4089d4:	f240 5254 	movw	r2, #1364	; 0x554
  4089d8:	4293      	cmp	r3, r2
  4089da:	d822      	bhi.n	408a22 <_malloc_r+0x4fa>
  4089dc:	0cb3      	lsrs	r3, r6, #18
  4089de:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  4089e2:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  4089e6:	00c3      	lsls	r3, r0, #3
  4089e8:	e5c0      	b.n	40856c <_malloc_r+0x44>
  4089ea:	f103 0b10 	add.w	fp, r3, #16
  4089ee:	e6ae      	b.n	40874e <_malloc_r+0x226>
  4089f0:	2a54      	cmp	r2, #84	; 0x54
  4089f2:	d829      	bhi.n	408a48 <_malloc_r+0x520>
  4089f4:	0b1a      	lsrs	r2, r3, #12
  4089f6:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  4089fa:	00c9      	lsls	r1, r1, #3
  4089fc:	326e      	adds	r2, #110	; 0x6e
  4089fe:	e74d      	b.n	40889c <_malloc_r+0x374>
  408a00:	4b20      	ldr	r3, [pc, #128]	; (408a84 <_malloc_r+0x55c>)
  408a02:	6819      	ldr	r1, [r3, #0]
  408a04:	4459      	add	r1, fp
  408a06:	6019      	str	r1, [r3, #0]
  408a08:	e6b2      	b.n	408770 <_malloc_r+0x248>
  408a0a:	f3ca 000b 	ubfx	r0, sl, #0, #12
  408a0e:	2800      	cmp	r0, #0
  408a10:	f47f aeae 	bne.w	408770 <_malloc_r+0x248>
  408a14:	eb08 030b 	add.w	r3, r8, fp
  408a18:	68ba      	ldr	r2, [r7, #8]
  408a1a:	f043 0301 	orr.w	r3, r3, #1
  408a1e:	6053      	str	r3, [r2, #4]
  408a20:	e6ee      	b.n	408800 <_malloc_r+0x2d8>
  408a22:	207f      	movs	r0, #127	; 0x7f
  408a24:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  408a28:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  408a2c:	e59e      	b.n	40856c <_malloc_r+0x44>
  408a2e:	f104 0108 	add.w	r1, r4, #8
  408a32:	4628      	mov	r0, r5
  408a34:	9300      	str	r3, [sp, #0]
  408a36:	f003 fdcf 	bl	40c5d8 <_free_r>
  408a3a:	9b00      	ldr	r3, [sp, #0]
  408a3c:	6819      	ldr	r1, [r3, #0]
  408a3e:	e6df      	b.n	408800 <_malloc_r+0x2d8>
  408a40:	2001      	movs	r0, #1
  408a42:	f04f 0900 	mov.w	r9, #0
  408a46:	e6bc      	b.n	4087c2 <_malloc_r+0x29a>
  408a48:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  408a4c:	d805      	bhi.n	408a5a <_malloc_r+0x532>
  408a4e:	0bda      	lsrs	r2, r3, #15
  408a50:	f102 0178 	add.w	r1, r2, #120	; 0x78
  408a54:	00c9      	lsls	r1, r1, #3
  408a56:	3277      	adds	r2, #119	; 0x77
  408a58:	e720      	b.n	40889c <_malloc_r+0x374>
  408a5a:	f240 5154 	movw	r1, #1364	; 0x554
  408a5e:	428a      	cmp	r2, r1
  408a60:	d805      	bhi.n	408a6e <_malloc_r+0x546>
  408a62:	0c9a      	lsrs	r2, r3, #18
  408a64:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  408a68:	00c9      	lsls	r1, r1, #3
  408a6a:	327c      	adds	r2, #124	; 0x7c
  408a6c:	e716      	b.n	40889c <_malloc_r+0x374>
  408a6e:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  408a72:	227e      	movs	r2, #126	; 0x7e
  408a74:	e712      	b.n	40889c <_malloc_r+0x374>
  408a76:	687b      	ldr	r3, [r7, #4]
  408a78:	e780      	b.n	40897c <_malloc_r+0x454>
  408a7a:	08f0      	lsrs	r0, r6, #3
  408a7c:	f106 0308 	add.w	r3, r6, #8
  408a80:	e600      	b.n	408684 <_malloc_r+0x15c>
  408a82:	bf00      	nop
  408a84:	2040ed60 	.word	0x2040ed60

00408a88 <memcpy>:
  408a88:	4684      	mov	ip, r0
  408a8a:	ea41 0300 	orr.w	r3, r1, r0
  408a8e:	f013 0303 	ands.w	r3, r3, #3
  408a92:	d16d      	bne.n	408b70 <memcpy+0xe8>
  408a94:	3a40      	subs	r2, #64	; 0x40
  408a96:	d341      	bcc.n	408b1c <memcpy+0x94>
  408a98:	f851 3b04 	ldr.w	r3, [r1], #4
  408a9c:	f840 3b04 	str.w	r3, [r0], #4
  408aa0:	f851 3b04 	ldr.w	r3, [r1], #4
  408aa4:	f840 3b04 	str.w	r3, [r0], #4
  408aa8:	f851 3b04 	ldr.w	r3, [r1], #4
  408aac:	f840 3b04 	str.w	r3, [r0], #4
  408ab0:	f851 3b04 	ldr.w	r3, [r1], #4
  408ab4:	f840 3b04 	str.w	r3, [r0], #4
  408ab8:	f851 3b04 	ldr.w	r3, [r1], #4
  408abc:	f840 3b04 	str.w	r3, [r0], #4
  408ac0:	f851 3b04 	ldr.w	r3, [r1], #4
  408ac4:	f840 3b04 	str.w	r3, [r0], #4
  408ac8:	f851 3b04 	ldr.w	r3, [r1], #4
  408acc:	f840 3b04 	str.w	r3, [r0], #4
  408ad0:	f851 3b04 	ldr.w	r3, [r1], #4
  408ad4:	f840 3b04 	str.w	r3, [r0], #4
  408ad8:	f851 3b04 	ldr.w	r3, [r1], #4
  408adc:	f840 3b04 	str.w	r3, [r0], #4
  408ae0:	f851 3b04 	ldr.w	r3, [r1], #4
  408ae4:	f840 3b04 	str.w	r3, [r0], #4
  408ae8:	f851 3b04 	ldr.w	r3, [r1], #4
  408aec:	f840 3b04 	str.w	r3, [r0], #4
  408af0:	f851 3b04 	ldr.w	r3, [r1], #4
  408af4:	f840 3b04 	str.w	r3, [r0], #4
  408af8:	f851 3b04 	ldr.w	r3, [r1], #4
  408afc:	f840 3b04 	str.w	r3, [r0], #4
  408b00:	f851 3b04 	ldr.w	r3, [r1], #4
  408b04:	f840 3b04 	str.w	r3, [r0], #4
  408b08:	f851 3b04 	ldr.w	r3, [r1], #4
  408b0c:	f840 3b04 	str.w	r3, [r0], #4
  408b10:	f851 3b04 	ldr.w	r3, [r1], #4
  408b14:	f840 3b04 	str.w	r3, [r0], #4
  408b18:	3a40      	subs	r2, #64	; 0x40
  408b1a:	d2bd      	bcs.n	408a98 <memcpy+0x10>
  408b1c:	3230      	adds	r2, #48	; 0x30
  408b1e:	d311      	bcc.n	408b44 <memcpy+0xbc>
  408b20:	f851 3b04 	ldr.w	r3, [r1], #4
  408b24:	f840 3b04 	str.w	r3, [r0], #4
  408b28:	f851 3b04 	ldr.w	r3, [r1], #4
  408b2c:	f840 3b04 	str.w	r3, [r0], #4
  408b30:	f851 3b04 	ldr.w	r3, [r1], #4
  408b34:	f840 3b04 	str.w	r3, [r0], #4
  408b38:	f851 3b04 	ldr.w	r3, [r1], #4
  408b3c:	f840 3b04 	str.w	r3, [r0], #4
  408b40:	3a10      	subs	r2, #16
  408b42:	d2ed      	bcs.n	408b20 <memcpy+0x98>
  408b44:	320c      	adds	r2, #12
  408b46:	d305      	bcc.n	408b54 <memcpy+0xcc>
  408b48:	f851 3b04 	ldr.w	r3, [r1], #4
  408b4c:	f840 3b04 	str.w	r3, [r0], #4
  408b50:	3a04      	subs	r2, #4
  408b52:	d2f9      	bcs.n	408b48 <memcpy+0xc0>
  408b54:	3204      	adds	r2, #4
  408b56:	d008      	beq.n	408b6a <memcpy+0xe2>
  408b58:	07d2      	lsls	r2, r2, #31
  408b5a:	bf1c      	itt	ne
  408b5c:	f811 3b01 	ldrbne.w	r3, [r1], #1
  408b60:	f800 3b01 	strbne.w	r3, [r0], #1
  408b64:	d301      	bcc.n	408b6a <memcpy+0xe2>
  408b66:	880b      	ldrh	r3, [r1, #0]
  408b68:	8003      	strh	r3, [r0, #0]
  408b6a:	4660      	mov	r0, ip
  408b6c:	4770      	bx	lr
  408b6e:	bf00      	nop
  408b70:	2a08      	cmp	r2, #8
  408b72:	d313      	bcc.n	408b9c <memcpy+0x114>
  408b74:	078b      	lsls	r3, r1, #30
  408b76:	d08d      	beq.n	408a94 <memcpy+0xc>
  408b78:	f010 0303 	ands.w	r3, r0, #3
  408b7c:	d08a      	beq.n	408a94 <memcpy+0xc>
  408b7e:	f1c3 0304 	rsb	r3, r3, #4
  408b82:	1ad2      	subs	r2, r2, r3
  408b84:	07db      	lsls	r3, r3, #31
  408b86:	bf1c      	itt	ne
  408b88:	f811 3b01 	ldrbne.w	r3, [r1], #1
  408b8c:	f800 3b01 	strbne.w	r3, [r0], #1
  408b90:	d380      	bcc.n	408a94 <memcpy+0xc>
  408b92:	f831 3b02 	ldrh.w	r3, [r1], #2
  408b96:	f820 3b02 	strh.w	r3, [r0], #2
  408b9a:	e77b      	b.n	408a94 <memcpy+0xc>
  408b9c:	3a04      	subs	r2, #4
  408b9e:	d3d9      	bcc.n	408b54 <memcpy+0xcc>
  408ba0:	3a01      	subs	r2, #1
  408ba2:	f811 3b01 	ldrb.w	r3, [r1], #1
  408ba6:	f800 3b01 	strb.w	r3, [r0], #1
  408baa:	d2f9      	bcs.n	408ba0 <memcpy+0x118>
  408bac:	780b      	ldrb	r3, [r1, #0]
  408bae:	7003      	strb	r3, [r0, #0]
  408bb0:	784b      	ldrb	r3, [r1, #1]
  408bb2:	7043      	strb	r3, [r0, #1]
  408bb4:	788b      	ldrb	r3, [r1, #2]
  408bb6:	7083      	strb	r3, [r0, #2]
  408bb8:	4660      	mov	r0, ip
  408bba:	4770      	bx	lr

00408bbc <memmove>:
  408bbc:	4288      	cmp	r0, r1
  408bbe:	b5f0      	push	{r4, r5, r6, r7, lr}
  408bc0:	d90d      	bls.n	408bde <memmove+0x22>
  408bc2:	188b      	adds	r3, r1, r2
  408bc4:	4298      	cmp	r0, r3
  408bc6:	d20a      	bcs.n	408bde <memmove+0x22>
  408bc8:	1884      	adds	r4, r0, r2
  408bca:	2a00      	cmp	r2, #0
  408bcc:	d051      	beq.n	408c72 <memmove+0xb6>
  408bce:	4622      	mov	r2, r4
  408bd0:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  408bd4:	f802 4d01 	strb.w	r4, [r2, #-1]!
  408bd8:	4299      	cmp	r1, r3
  408bda:	d1f9      	bne.n	408bd0 <memmove+0x14>
  408bdc:	bdf0      	pop	{r4, r5, r6, r7, pc}
  408bde:	2a0f      	cmp	r2, #15
  408be0:	d948      	bls.n	408c74 <memmove+0xb8>
  408be2:	ea41 0300 	orr.w	r3, r1, r0
  408be6:	079b      	lsls	r3, r3, #30
  408be8:	d146      	bne.n	408c78 <memmove+0xbc>
  408bea:	f100 0410 	add.w	r4, r0, #16
  408bee:	f101 0310 	add.w	r3, r1, #16
  408bf2:	4615      	mov	r5, r2
  408bf4:	f853 6c10 	ldr.w	r6, [r3, #-16]
  408bf8:	f844 6c10 	str.w	r6, [r4, #-16]
  408bfc:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  408c00:	f844 6c0c 	str.w	r6, [r4, #-12]
  408c04:	f853 6c08 	ldr.w	r6, [r3, #-8]
  408c08:	f844 6c08 	str.w	r6, [r4, #-8]
  408c0c:	3d10      	subs	r5, #16
  408c0e:	f853 6c04 	ldr.w	r6, [r3, #-4]
  408c12:	f844 6c04 	str.w	r6, [r4, #-4]
  408c16:	2d0f      	cmp	r5, #15
  408c18:	f103 0310 	add.w	r3, r3, #16
  408c1c:	f104 0410 	add.w	r4, r4, #16
  408c20:	d8e8      	bhi.n	408bf4 <memmove+0x38>
  408c22:	f1a2 0310 	sub.w	r3, r2, #16
  408c26:	f023 030f 	bic.w	r3, r3, #15
  408c2a:	f002 0e0f 	and.w	lr, r2, #15
  408c2e:	3310      	adds	r3, #16
  408c30:	f1be 0f03 	cmp.w	lr, #3
  408c34:	4419      	add	r1, r3
  408c36:	4403      	add	r3, r0
  408c38:	d921      	bls.n	408c7e <memmove+0xc2>
  408c3a:	1f1e      	subs	r6, r3, #4
  408c3c:	460d      	mov	r5, r1
  408c3e:	4674      	mov	r4, lr
  408c40:	3c04      	subs	r4, #4
  408c42:	f855 7b04 	ldr.w	r7, [r5], #4
  408c46:	f846 7f04 	str.w	r7, [r6, #4]!
  408c4a:	2c03      	cmp	r4, #3
  408c4c:	d8f8      	bhi.n	408c40 <memmove+0x84>
  408c4e:	f1ae 0404 	sub.w	r4, lr, #4
  408c52:	f024 0403 	bic.w	r4, r4, #3
  408c56:	3404      	adds	r4, #4
  408c58:	4421      	add	r1, r4
  408c5a:	4423      	add	r3, r4
  408c5c:	f002 0203 	and.w	r2, r2, #3
  408c60:	b162      	cbz	r2, 408c7c <memmove+0xc0>
  408c62:	3b01      	subs	r3, #1
  408c64:	440a      	add	r2, r1
  408c66:	f811 4b01 	ldrb.w	r4, [r1], #1
  408c6a:	f803 4f01 	strb.w	r4, [r3, #1]!
  408c6e:	428a      	cmp	r2, r1
  408c70:	d1f9      	bne.n	408c66 <memmove+0xaa>
  408c72:	bdf0      	pop	{r4, r5, r6, r7, pc}
  408c74:	4603      	mov	r3, r0
  408c76:	e7f3      	b.n	408c60 <memmove+0xa4>
  408c78:	4603      	mov	r3, r0
  408c7a:	e7f2      	b.n	408c62 <memmove+0xa6>
  408c7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  408c7e:	4672      	mov	r2, lr
  408c80:	e7ee      	b.n	408c60 <memmove+0xa4>
  408c82:	bf00      	nop

00408c84 <memset>:
  408c84:	b470      	push	{r4, r5, r6}
  408c86:	0786      	lsls	r6, r0, #30
  408c88:	d046      	beq.n	408d18 <memset+0x94>
  408c8a:	1e54      	subs	r4, r2, #1
  408c8c:	2a00      	cmp	r2, #0
  408c8e:	d041      	beq.n	408d14 <memset+0x90>
  408c90:	b2ca      	uxtb	r2, r1
  408c92:	4603      	mov	r3, r0
  408c94:	e002      	b.n	408c9c <memset+0x18>
  408c96:	f114 34ff 	adds.w	r4, r4, #4294967295
  408c9a:	d33b      	bcc.n	408d14 <memset+0x90>
  408c9c:	f803 2b01 	strb.w	r2, [r3], #1
  408ca0:	079d      	lsls	r5, r3, #30
  408ca2:	d1f8      	bne.n	408c96 <memset+0x12>
  408ca4:	2c03      	cmp	r4, #3
  408ca6:	d92e      	bls.n	408d06 <memset+0x82>
  408ca8:	b2cd      	uxtb	r5, r1
  408caa:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  408cae:	2c0f      	cmp	r4, #15
  408cb0:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  408cb4:	d919      	bls.n	408cea <memset+0x66>
  408cb6:	f103 0210 	add.w	r2, r3, #16
  408cba:	4626      	mov	r6, r4
  408cbc:	3e10      	subs	r6, #16
  408cbe:	2e0f      	cmp	r6, #15
  408cc0:	f842 5c10 	str.w	r5, [r2, #-16]
  408cc4:	f842 5c0c 	str.w	r5, [r2, #-12]
  408cc8:	f842 5c08 	str.w	r5, [r2, #-8]
  408ccc:	f842 5c04 	str.w	r5, [r2, #-4]
  408cd0:	f102 0210 	add.w	r2, r2, #16
  408cd4:	d8f2      	bhi.n	408cbc <memset+0x38>
  408cd6:	f1a4 0210 	sub.w	r2, r4, #16
  408cda:	f022 020f 	bic.w	r2, r2, #15
  408cde:	f004 040f 	and.w	r4, r4, #15
  408ce2:	3210      	adds	r2, #16
  408ce4:	2c03      	cmp	r4, #3
  408ce6:	4413      	add	r3, r2
  408ce8:	d90d      	bls.n	408d06 <memset+0x82>
  408cea:	461e      	mov	r6, r3
  408cec:	4622      	mov	r2, r4
  408cee:	3a04      	subs	r2, #4
  408cf0:	2a03      	cmp	r2, #3
  408cf2:	f846 5b04 	str.w	r5, [r6], #4
  408cf6:	d8fa      	bhi.n	408cee <memset+0x6a>
  408cf8:	1f22      	subs	r2, r4, #4
  408cfa:	f022 0203 	bic.w	r2, r2, #3
  408cfe:	3204      	adds	r2, #4
  408d00:	4413      	add	r3, r2
  408d02:	f004 0403 	and.w	r4, r4, #3
  408d06:	b12c      	cbz	r4, 408d14 <memset+0x90>
  408d08:	b2c9      	uxtb	r1, r1
  408d0a:	441c      	add	r4, r3
  408d0c:	f803 1b01 	strb.w	r1, [r3], #1
  408d10:	429c      	cmp	r4, r3
  408d12:	d1fb      	bne.n	408d0c <memset+0x88>
  408d14:	bc70      	pop	{r4, r5, r6}
  408d16:	4770      	bx	lr
  408d18:	4614      	mov	r4, r2
  408d1a:	4603      	mov	r3, r0
  408d1c:	e7c2      	b.n	408ca4 <memset+0x20>
  408d1e:	bf00      	nop

00408d20 <__malloc_lock>:
  408d20:	4801      	ldr	r0, [pc, #4]	; (408d28 <__malloc_lock+0x8>)
  408d22:	f003 bf01 	b.w	40cb28 <__retarget_lock_acquire_recursive>
  408d26:	bf00      	nop
  408d28:	20418dbc 	.word	0x20418dbc

00408d2c <__malloc_unlock>:
  408d2c:	4801      	ldr	r0, [pc, #4]	; (408d34 <__malloc_unlock+0x8>)
  408d2e:	f003 befd 	b.w	40cb2c <__retarget_lock_release_recursive>
  408d32:	bf00      	nop
  408d34:	20418dbc 	.word	0x20418dbc

00408d38 <_sbrk_r>:
  408d38:	b538      	push	{r3, r4, r5, lr}
  408d3a:	4c07      	ldr	r4, [pc, #28]	; (408d58 <_sbrk_r+0x20>)
  408d3c:	2300      	movs	r3, #0
  408d3e:	4605      	mov	r5, r0
  408d40:	4608      	mov	r0, r1
  408d42:	6023      	str	r3, [r4, #0]
  408d44:	f7fb fe3e 	bl	4049c4 <_sbrk>
  408d48:	1c43      	adds	r3, r0, #1
  408d4a:	d000      	beq.n	408d4e <_sbrk_r+0x16>
  408d4c:	bd38      	pop	{r3, r4, r5, pc}
  408d4e:	6823      	ldr	r3, [r4, #0]
  408d50:	2b00      	cmp	r3, #0
  408d52:	d0fb      	beq.n	408d4c <_sbrk_r+0x14>
  408d54:	602b      	str	r3, [r5, #0]
  408d56:	bd38      	pop	{r3, r4, r5, pc}
  408d58:	20418dd0 	.word	0x20418dd0

00408d5c <setbuf>:
  408d5c:	2900      	cmp	r1, #0
  408d5e:	bf0c      	ite	eq
  408d60:	2202      	moveq	r2, #2
  408d62:	2200      	movne	r2, #0
  408d64:	f44f 6380 	mov.w	r3, #1024	; 0x400
  408d68:	f000 b800 	b.w	408d6c <setvbuf>

00408d6c <setvbuf>:
  408d6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  408d70:	4c61      	ldr	r4, [pc, #388]	; (408ef8 <setvbuf+0x18c>)
  408d72:	6825      	ldr	r5, [r4, #0]
  408d74:	b083      	sub	sp, #12
  408d76:	4604      	mov	r4, r0
  408d78:	460f      	mov	r7, r1
  408d7a:	4690      	mov	r8, r2
  408d7c:	461e      	mov	r6, r3
  408d7e:	b115      	cbz	r5, 408d86 <setvbuf+0x1a>
  408d80:	6bab      	ldr	r3, [r5, #56]	; 0x38
  408d82:	2b00      	cmp	r3, #0
  408d84:	d064      	beq.n	408e50 <setvbuf+0xe4>
  408d86:	f1b8 0f02 	cmp.w	r8, #2
  408d8a:	d006      	beq.n	408d9a <setvbuf+0x2e>
  408d8c:	f1b8 0f01 	cmp.w	r8, #1
  408d90:	f200 809f 	bhi.w	408ed2 <setvbuf+0x166>
  408d94:	2e00      	cmp	r6, #0
  408d96:	f2c0 809c 	blt.w	408ed2 <setvbuf+0x166>
  408d9a:	6e63      	ldr	r3, [r4, #100]	; 0x64
  408d9c:	07d8      	lsls	r0, r3, #31
  408d9e:	d534      	bpl.n	408e0a <setvbuf+0x9e>
  408da0:	4621      	mov	r1, r4
  408da2:	4628      	mov	r0, r5
  408da4:	f003 fa9a 	bl	40c2dc <_fflush_r>
  408da8:	6b21      	ldr	r1, [r4, #48]	; 0x30
  408daa:	b141      	cbz	r1, 408dbe <setvbuf+0x52>
  408dac:	f104 0340 	add.w	r3, r4, #64	; 0x40
  408db0:	4299      	cmp	r1, r3
  408db2:	d002      	beq.n	408dba <setvbuf+0x4e>
  408db4:	4628      	mov	r0, r5
  408db6:	f003 fc0f 	bl	40c5d8 <_free_r>
  408dba:	2300      	movs	r3, #0
  408dbc:	6323      	str	r3, [r4, #48]	; 0x30
  408dbe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  408dc2:	2200      	movs	r2, #0
  408dc4:	61a2      	str	r2, [r4, #24]
  408dc6:	6062      	str	r2, [r4, #4]
  408dc8:	061a      	lsls	r2, r3, #24
  408dca:	d43a      	bmi.n	408e42 <setvbuf+0xd6>
  408dcc:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  408dd0:	f023 0303 	bic.w	r3, r3, #3
  408dd4:	f1b8 0f02 	cmp.w	r8, #2
  408dd8:	81a3      	strh	r3, [r4, #12]
  408dda:	d01d      	beq.n	408e18 <setvbuf+0xac>
  408ddc:	ab01      	add	r3, sp, #4
  408dde:	466a      	mov	r2, sp
  408de0:	4621      	mov	r1, r4
  408de2:	4628      	mov	r0, r5
  408de4:	f003 fea4 	bl	40cb30 <__swhatbuf_r>
  408de8:	89a3      	ldrh	r3, [r4, #12]
  408dea:	4318      	orrs	r0, r3
  408dec:	81a0      	strh	r0, [r4, #12]
  408dee:	2e00      	cmp	r6, #0
  408df0:	d132      	bne.n	408e58 <setvbuf+0xec>
  408df2:	9e00      	ldr	r6, [sp, #0]
  408df4:	4630      	mov	r0, r6
  408df6:	f7ff fb87 	bl	408508 <malloc>
  408dfa:	4607      	mov	r7, r0
  408dfc:	2800      	cmp	r0, #0
  408dfe:	d06b      	beq.n	408ed8 <setvbuf+0x16c>
  408e00:	89a3      	ldrh	r3, [r4, #12]
  408e02:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  408e06:	81a3      	strh	r3, [r4, #12]
  408e08:	e028      	b.n	408e5c <setvbuf+0xf0>
  408e0a:	89a3      	ldrh	r3, [r4, #12]
  408e0c:	0599      	lsls	r1, r3, #22
  408e0e:	d4c7      	bmi.n	408da0 <setvbuf+0x34>
  408e10:	6da0      	ldr	r0, [r4, #88]	; 0x58
  408e12:	f003 fe89 	bl	40cb28 <__retarget_lock_acquire_recursive>
  408e16:	e7c3      	b.n	408da0 <setvbuf+0x34>
  408e18:	2500      	movs	r5, #0
  408e1a:	6e61      	ldr	r1, [r4, #100]	; 0x64
  408e1c:	2600      	movs	r6, #0
  408e1e:	f104 0243 	add.w	r2, r4, #67	; 0x43
  408e22:	f043 0302 	orr.w	r3, r3, #2
  408e26:	2001      	movs	r0, #1
  408e28:	60a6      	str	r6, [r4, #8]
  408e2a:	07ce      	lsls	r6, r1, #31
  408e2c:	81a3      	strh	r3, [r4, #12]
  408e2e:	6022      	str	r2, [r4, #0]
  408e30:	6122      	str	r2, [r4, #16]
  408e32:	6160      	str	r0, [r4, #20]
  408e34:	d401      	bmi.n	408e3a <setvbuf+0xce>
  408e36:	0598      	lsls	r0, r3, #22
  408e38:	d53e      	bpl.n	408eb8 <setvbuf+0x14c>
  408e3a:	4628      	mov	r0, r5
  408e3c:	b003      	add	sp, #12
  408e3e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  408e42:	6921      	ldr	r1, [r4, #16]
  408e44:	4628      	mov	r0, r5
  408e46:	f003 fbc7 	bl	40c5d8 <_free_r>
  408e4a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  408e4e:	e7bd      	b.n	408dcc <setvbuf+0x60>
  408e50:	4628      	mov	r0, r5
  408e52:	f003 fa9b 	bl	40c38c <__sinit>
  408e56:	e796      	b.n	408d86 <setvbuf+0x1a>
  408e58:	2f00      	cmp	r7, #0
  408e5a:	d0cb      	beq.n	408df4 <setvbuf+0x88>
  408e5c:	6bab      	ldr	r3, [r5, #56]	; 0x38
  408e5e:	2b00      	cmp	r3, #0
  408e60:	d033      	beq.n	408eca <setvbuf+0x15e>
  408e62:	9b00      	ldr	r3, [sp, #0]
  408e64:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  408e68:	6027      	str	r7, [r4, #0]
  408e6a:	429e      	cmp	r6, r3
  408e6c:	bf1c      	itt	ne
  408e6e:	f442 6200 	orrne.w	r2, r2, #2048	; 0x800
  408e72:	81a2      	strhne	r2, [r4, #12]
  408e74:	f1b8 0f01 	cmp.w	r8, #1
  408e78:	bf04      	itt	eq
  408e7a:	f042 0201 	orreq.w	r2, r2, #1
  408e7e:	81a2      	strheq	r2, [r4, #12]
  408e80:	b292      	uxth	r2, r2
  408e82:	f012 0308 	ands.w	r3, r2, #8
  408e86:	6127      	str	r7, [r4, #16]
  408e88:	6166      	str	r6, [r4, #20]
  408e8a:	d00e      	beq.n	408eaa <setvbuf+0x13e>
  408e8c:	07d1      	lsls	r1, r2, #31
  408e8e:	d51a      	bpl.n	408ec6 <setvbuf+0x15a>
  408e90:	6e65      	ldr	r5, [r4, #100]	; 0x64
  408e92:	4276      	negs	r6, r6
  408e94:	2300      	movs	r3, #0
  408e96:	f015 0501 	ands.w	r5, r5, #1
  408e9a:	61a6      	str	r6, [r4, #24]
  408e9c:	60a3      	str	r3, [r4, #8]
  408e9e:	d009      	beq.n	408eb4 <setvbuf+0x148>
  408ea0:	2500      	movs	r5, #0
  408ea2:	4628      	mov	r0, r5
  408ea4:	b003      	add	sp, #12
  408ea6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  408eaa:	60a3      	str	r3, [r4, #8]
  408eac:	6e65      	ldr	r5, [r4, #100]	; 0x64
  408eae:	f015 0501 	ands.w	r5, r5, #1
  408eb2:	d1f5      	bne.n	408ea0 <setvbuf+0x134>
  408eb4:	0593      	lsls	r3, r2, #22
  408eb6:	d4c0      	bmi.n	408e3a <setvbuf+0xce>
  408eb8:	6da0      	ldr	r0, [r4, #88]	; 0x58
  408eba:	f003 fe37 	bl	40cb2c <__retarget_lock_release_recursive>
  408ebe:	4628      	mov	r0, r5
  408ec0:	b003      	add	sp, #12
  408ec2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  408ec6:	60a6      	str	r6, [r4, #8]
  408ec8:	e7f0      	b.n	408eac <setvbuf+0x140>
  408eca:	4628      	mov	r0, r5
  408ecc:	f003 fa5e 	bl	40c38c <__sinit>
  408ed0:	e7c7      	b.n	408e62 <setvbuf+0xf6>
  408ed2:	f04f 35ff 	mov.w	r5, #4294967295
  408ed6:	e7b0      	b.n	408e3a <setvbuf+0xce>
  408ed8:	f8dd 9000 	ldr.w	r9, [sp]
  408edc:	45b1      	cmp	r9, r6
  408ede:	d004      	beq.n	408eea <setvbuf+0x17e>
  408ee0:	4648      	mov	r0, r9
  408ee2:	f7ff fb11 	bl	408508 <malloc>
  408ee6:	4607      	mov	r7, r0
  408ee8:	b920      	cbnz	r0, 408ef4 <setvbuf+0x188>
  408eea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  408eee:	f04f 35ff 	mov.w	r5, #4294967295
  408ef2:	e792      	b.n	408e1a <setvbuf+0xae>
  408ef4:	464e      	mov	r6, r9
  408ef6:	e783      	b.n	408e00 <setvbuf+0x94>
  408ef8:	20400028 	.word	0x20400028

00408efc <sprintf>:
  408efc:	b40e      	push	{r1, r2, r3}
  408efe:	b5f0      	push	{r4, r5, r6, r7, lr}
  408f00:	b09c      	sub	sp, #112	; 0x70
  408f02:	ab21      	add	r3, sp, #132	; 0x84
  408f04:	490f      	ldr	r1, [pc, #60]	; (408f44 <sprintf+0x48>)
  408f06:	f853 2b04 	ldr.w	r2, [r3], #4
  408f0a:	9301      	str	r3, [sp, #4]
  408f0c:	4605      	mov	r5, r0
  408f0e:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  408f12:	6808      	ldr	r0, [r1, #0]
  408f14:	9502      	str	r5, [sp, #8]
  408f16:	f44f 7702 	mov.w	r7, #520	; 0x208
  408f1a:	f64f 76ff 	movw	r6, #65535	; 0xffff
  408f1e:	a902      	add	r1, sp, #8
  408f20:	9506      	str	r5, [sp, #24]
  408f22:	f8ad 7014 	strh.w	r7, [sp, #20]
  408f26:	9404      	str	r4, [sp, #16]
  408f28:	9407      	str	r4, [sp, #28]
  408f2a:	f8ad 6016 	strh.w	r6, [sp, #22]
  408f2e:	f000 f80b 	bl	408f48 <_svfprintf_r>
  408f32:	9b02      	ldr	r3, [sp, #8]
  408f34:	2200      	movs	r2, #0
  408f36:	701a      	strb	r2, [r3, #0]
  408f38:	b01c      	add	sp, #112	; 0x70
  408f3a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  408f3e:	b003      	add	sp, #12
  408f40:	4770      	bx	lr
  408f42:	bf00      	nop
  408f44:	20400028 	.word	0x20400028

00408f48 <_svfprintf_r>:
  408f48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  408f4c:	b0c3      	sub	sp, #268	; 0x10c
  408f4e:	460c      	mov	r4, r1
  408f50:	910b      	str	r1, [sp, #44]	; 0x2c
  408f52:	4692      	mov	sl, r2
  408f54:	930f      	str	r3, [sp, #60]	; 0x3c
  408f56:	900c      	str	r0, [sp, #48]	; 0x30
  408f58:	f003 fdd4 	bl	40cb04 <_localeconv_r>
  408f5c:	6803      	ldr	r3, [r0, #0]
  408f5e:	931a      	str	r3, [sp, #104]	; 0x68
  408f60:	4618      	mov	r0, r3
  408f62:	f004 fbad 	bl	40d6c0 <strlen>
  408f66:	89a3      	ldrh	r3, [r4, #12]
  408f68:	9019      	str	r0, [sp, #100]	; 0x64
  408f6a:	0619      	lsls	r1, r3, #24
  408f6c:	d503      	bpl.n	408f76 <_svfprintf_r+0x2e>
  408f6e:	6923      	ldr	r3, [r4, #16]
  408f70:	2b00      	cmp	r3, #0
  408f72:	f001 8003 	beq.w	409f7c <_svfprintf_r+0x1034>
  408f76:	2300      	movs	r3, #0
  408f78:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  408f7c:	9313      	str	r3, [sp, #76]	; 0x4c
  408f7e:	9315      	str	r3, [sp, #84]	; 0x54
  408f80:	9314      	str	r3, [sp, #80]	; 0x50
  408f82:	9327      	str	r3, [sp, #156]	; 0x9c
  408f84:	9326      	str	r3, [sp, #152]	; 0x98
  408f86:	9318      	str	r3, [sp, #96]	; 0x60
  408f88:	931b      	str	r3, [sp, #108]	; 0x6c
  408f8a:	9309      	str	r3, [sp, #36]	; 0x24
  408f8c:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  408f90:	46c8      	mov	r8, r9
  408f92:	9316      	str	r3, [sp, #88]	; 0x58
  408f94:	9317      	str	r3, [sp, #92]	; 0x5c
  408f96:	f89a 3000 	ldrb.w	r3, [sl]
  408f9a:	4654      	mov	r4, sl
  408f9c:	b1e3      	cbz	r3, 408fd8 <_svfprintf_r+0x90>
  408f9e:	2b25      	cmp	r3, #37	; 0x25
  408fa0:	d102      	bne.n	408fa8 <_svfprintf_r+0x60>
  408fa2:	e019      	b.n	408fd8 <_svfprintf_r+0x90>
  408fa4:	2b25      	cmp	r3, #37	; 0x25
  408fa6:	d003      	beq.n	408fb0 <_svfprintf_r+0x68>
  408fa8:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  408fac:	2b00      	cmp	r3, #0
  408fae:	d1f9      	bne.n	408fa4 <_svfprintf_r+0x5c>
  408fb0:	eba4 050a 	sub.w	r5, r4, sl
  408fb4:	b185      	cbz	r5, 408fd8 <_svfprintf_r+0x90>
  408fb6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  408fb8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  408fba:	f8c8 a000 	str.w	sl, [r8]
  408fbe:	3301      	adds	r3, #1
  408fc0:	442a      	add	r2, r5
  408fc2:	2b07      	cmp	r3, #7
  408fc4:	f8c8 5004 	str.w	r5, [r8, #4]
  408fc8:	9227      	str	r2, [sp, #156]	; 0x9c
  408fca:	9326      	str	r3, [sp, #152]	; 0x98
  408fcc:	dc7f      	bgt.n	4090ce <_svfprintf_r+0x186>
  408fce:	f108 0808 	add.w	r8, r8, #8
  408fd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
  408fd4:	442b      	add	r3, r5
  408fd6:	9309      	str	r3, [sp, #36]	; 0x24
  408fd8:	7823      	ldrb	r3, [r4, #0]
  408fda:	2b00      	cmp	r3, #0
  408fdc:	d07f      	beq.n	4090de <_svfprintf_r+0x196>
  408fde:	2300      	movs	r3, #0
  408fe0:	461a      	mov	r2, r3
  408fe2:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  408fe6:	4619      	mov	r1, r3
  408fe8:	930d      	str	r3, [sp, #52]	; 0x34
  408fea:	469b      	mov	fp, r3
  408fec:	f04f 30ff 	mov.w	r0, #4294967295
  408ff0:	7863      	ldrb	r3, [r4, #1]
  408ff2:	900a      	str	r0, [sp, #40]	; 0x28
  408ff4:	f104 0a01 	add.w	sl, r4, #1
  408ff8:	f10a 0a01 	add.w	sl, sl, #1
  408ffc:	f1a3 0020 	sub.w	r0, r3, #32
  409000:	2858      	cmp	r0, #88	; 0x58
  409002:	f200 83c1 	bhi.w	409788 <_svfprintf_r+0x840>
  409006:	e8df f010 	tbh	[pc, r0, lsl #1]
  40900a:	0238      	.short	0x0238
  40900c:	03bf03bf 	.word	0x03bf03bf
  409010:	03bf0240 	.word	0x03bf0240
  409014:	03bf03bf 	.word	0x03bf03bf
  409018:	03bf03bf 	.word	0x03bf03bf
  40901c:	024503bf 	.word	0x024503bf
  409020:	03bf0203 	.word	0x03bf0203
  409024:	026b005d 	.word	0x026b005d
  409028:	028603bf 	.word	0x028603bf
  40902c:	039d039d 	.word	0x039d039d
  409030:	039d039d 	.word	0x039d039d
  409034:	039d039d 	.word	0x039d039d
  409038:	039d039d 	.word	0x039d039d
  40903c:	03bf039d 	.word	0x03bf039d
  409040:	03bf03bf 	.word	0x03bf03bf
  409044:	03bf03bf 	.word	0x03bf03bf
  409048:	03bf03bf 	.word	0x03bf03bf
  40904c:	03bf03bf 	.word	0x03bf03bf
  409050:	033703bf 	.word	0x033703bf
  409054:	03bf0357 	.word	0x03bf0357
  409058:	03bf0357 	.word	0x03bf0357
  40905c:	03bf03bf 	.word	0x03bf03bf
  409060:	039803bf 	.word	0x039803bf
  409064:	03bf03bf 	.word	0x03bf03bf
  409068:	03bf03ad 	.word	0x03bf03ad
  40906c:	03bf03bf 	.word	0x03bf03bf
  409070:	03bf03bf 	.word	0x03bf03bf
  409074:	03bf0259 	.word	0x03bf0259
  409078:	031e03bf 	.word	0x031e03bf
  40907c:	03bf03bf 	.word	0x03bf03bf
  409080:	03bf03bf 	.word	0x03bf03bf
  409084:	03bf03bf 	.word	0x03bf03bf
  409088:	03bf03bf 	.word	0x03bf03bf
  40908c:	03bf03bf 	.word	0x03bf03bf
  409090:	02db02c6 	.word	0x02db02c6
  409094:	03570357 	.word	0x03570357
  409098:	028b0357 	.word	0x028b0357
  40909c:	03bf02db 	.word	0x03bf02db
  4090a0:	029003bf 	.word	0x029003bf
  4090a4:	029d03bf 	.word	0x029d03bf
  4090a8:	02b401cc 	.word	0x02b401cc
  4090ac:	03bf0208 	.word	0x03bf0208
  4090b0:	03bf01e1 	.word	0x03bf01e1
  4090b4:	03bf007e 	.word	0x03bf007e
  4090b8:	020d03bf 	.word	0x020d03bf
  4090bc:	980d      	ldr	r0, [sp, #52]	; 0x34
  4090be:	930f      	str	r3, [sp, #60]	; 0x3c
  4090c0:	4240      	negs	r0, r0
  4090c2:	900d      	str	r0, [sp, #52]	; 0x34
  4090c4:	f04b 0b04 	orr.w	fp, fp, #4
  4090c8:	f89a 3000 	ldrb.w	r3, [sl]
  4090cc:	e794      	b.n	408ff8 <_svfprintf_r+0xb0>
  4090ce:	aa25      	add	r2, sp, #148	; 0x94
  4090d0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4090d2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4090d4:	f004 fb62 	bl	40d79c <__ssprint_r>
  4090d8:	b940      	cbnz	r0, 4090ec <_svfprintf_r+0x1a4>
  4090da:	46c8      	mov	r8, r9
  4090dc:	e779      	b.n	408fd2 <_svfprintf_r+0x8a>
  4090de:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  4090e0:	b123      	cbz	r3, 4090ec <_svfprintf_r+0x1a4>
  4090e2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4090e4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4090e6:	aa25      	add	r2, sp, #148	; 0x94
  4090e8:	f004 fb58 	bl	40d79c <__ssprint_r>
  4090ec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4090ee:	899b      	ldrh	r3, [r3, #12]
  4090f0:	f013 0f40 	tst.w	r3, #64	; 0x40
  4090f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4090f6:	bf18      	it	ne
  4090f8:	f04f 33ff 	movne.w	r3, #4294967295
  4090fc:	9309      	str	r3, [sp, #36]	; 0x24
  4090fe:	9809      	ldr	r0, [sp, #36]	; 0x24
  409100:	b043      	add	sp, #268	; 0x10c
  409102:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  409106:	f01b 0f20 	tst.w	fp, #32
  40910a:	9311      	str	r3, [sp, #68]	; 0x44
  40910c:	f040 81dd 	bne.w	4094ca <_svfprintf_r+0x582>
  409110:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  409112:	f01b 0f10 	tst.w	fp, #16
  409116:	4613      	mov	r3, r2
  409118:	f040 856e 	bne.w	409bf8 <_svfprintf_r+0xcb0>
  40911c:	f01b 0f40 	tst.w	fp, #64	; 0x40
  409120:	f000 856a 	beq.w	409bf8 <_svfprintf_r+0xcb0>
  409124:	8814      	ldrh	r4, [r2, #0]
  409126:	3204      	adds	r2, #4
  409128:	2500      	movs	r5, #0
  40912a:	2301      	movs	r3, #1
  40912c:	920f      	str	r2, [sp, #60]	; 0x3c
  40912e:	2700      	movs	r7, #0
  409130:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  409134:	990a      	ldr	r1, [sp, #40]	; 0x28
  409136:	1c4a      	adds	r2, r1, #1
  409138:	f000 8265 	beq.w	409606 <_svfprintf_r+0x6be>
  40913c:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  409140:	9207      	str	r2, [sp, #28]
  409142:	ea54 0205 	orrs.w	r2, r4, r5
  409146:	f040 8264 	bne.w	409612 <_svfprintf_r+0x6ca>
  40914a:	2900      	cmp	r1, #0
  40914c:	f040 843c 	bne.w	4099c8 <_svfprintf_r+0xa80>
  409150:	2b00      	cmp	r3, #0
  409152:	f040 84d7 	bne.w	409b04 <_svfprintf_r+0xbbc>
  409156:	f01b 0301 	ands.w	r3, fp, #1
  40915a:	930e      	str	r3, [sp, #56]	; 0x38
  40915c:	f000 8604 	beq.w	409d68 <_svfprintf_r+0xe20>
  409160:	ae42      	add	r6, sp, #264	; 0x108
  409162:	2330      	movs	r3, #48	; 0x30
  409164:	f806 3d41 	strb.w	r3, [r6, #-65]!
  409168:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40916a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40916c:	4293      	cmp	r3, r2
  40916e:	bfb8      	it	lt
  409170:	4613      	movlt	r3, r2
  409172:	9308      	str	r3, [sp, #32]
  409174:	2300      	movs	r3, #0
  409176:	9312      	str	r3, [sp, #72]	; 0x48
  409178:	b117      	cbz	r7, 409180 <_svfprintf_r+0x238>
  40917a:	9b08      	ldr	r3, [sp, #32]
  40917c:	3301      	adds	r3, #1
  40917e:	9308      	str	r3, [sp, #32]
  409180:	9b07      	ldr	r3, [sp, #28]
  409182:	f013 0302 	ands.w	r3, r3, #2
  409186:	9310      	str	r3, [sp, #64]	; 0x40
  409188:	d002      	beq.n	409190 <_svfprintf_r+0x248>
  40918a:	9b08      	ldr	r3, [sp, #32]
  40918c:	3302      	adds	r3, #2
  40918e:	9308      	str	r3, [sp, #32]
  409190:	9b07      	ldr	r3, [sp, #28]
  409192:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  409196:	f040 830e 	bne.w	4097b6 <_svfprintf_r+0x86e>
  40919a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40919c:	9a08      	ldr	r2, [sp, #32]
  40919e:	eba3 0b02 	sub.w	fp, r3, r2
  4091a2:	f1bb 0f00 	cmp.w	fp, #0
  4091a6:	f340 8306 	ble.w	4097b6 <_svfprintf_r+0x86e>
  4091aa:	f1bb 0f10 	cmp.w	fp, #16
  4091ae:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4091b0:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4091b2:	dd29      	ble.n	409208 <_svfprintf_r+0x2c0>
  4091b4:	4643      	mov	r3, r8
  4091b6:	4621      	mov	r1, r4
  4091b8:	46a8      	mov	r8, r5
  4091ba:	2710      	movs	r7, #16
  4091bc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4091be:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4091c0:	e006      	b.n	4091d0 <_svfprintf_r+0x288>
  4091c2:	f1ab 0b10 	sub.w	fp, fp, #16
  4091c6:	f1bb 0f10 	cmp.w	fp, #16
  4091ca:	f103 0308 	add.w	r3, r3, #8
  4091ce:	dd18      	ble.n	409202 <_svfprintf_r+0x2ba>
  4091d0:	3201      	adds	r2, #1
  4091d2:	48b7      	ldr	r0, [pc, #732]	; (4094b0 <_svfprintf_r+0x568>)
  4091d4:	9226      	str	r2, [sp, #152]	; 0x98
  4091d6:	3110      	adds	r1, #16
  4091d8:	2a07      	cmp	r2, #7
  4091da:	9127      	str	r1, [sp, #156]	; 0x9c
  4091dc:	e883 0081 	stmia.w	r3, {r0, r7}
  4091e0:	ddef      	ble.n	4091c2 <_svfprintf_r+0x27a>
  4091e2:	aa25      	add	r2, sp, #148	; 0x94
  4091e4:	4629      	mov	r1, r5
  4091e6:	4620      	mov	r0, r4
  4091e8:	f004 fad8 	bl	40d79c <__ssprint_r>
  4091ec:	2800      	cmp	r0, #0
  4091ee:	f47f af7d 	bne.w	4090ec <_svfprintf_r+0x1a4>
  4091f2:	f1ab 0b10 	sub.w	fp, fp, #16
  4091f6:	f1bb 0f10 	cmp.w	fp, #16
  4091fa:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4091fc:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4091fe:	464b      	mov	r3, r9
  409200:	dce6      	bgt.n	4091d0 <_svfprintf_r+0x288>
  409202:	4645      	mov	r5, r8
  409204:	460c      	mov	r4, r1
  409206:	4698      	mov	r8, r3
  409208:	3201      	adds	r2, #1
  40920a:	4ba9      	ldr	r3, [pc, #676]	; (4094b0 <_svfprintf_r+0x568>)
  40920c:	9226      	str	r2, [sp, #152]	; 0x98
  40920e:	445c      	add	r4, fp
  409210:	2a07      	cmp	r2, #7
  409212:	9427      	str	r4, [sp, #156]	; 0x9c
  409214:	e888 0808 	stmia.w	r8, {r3, fp}
  409218:	f300 8498 	bgt.w	409b4c <_svfprintf_r+0xc04>
  40921c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  409220:	f108 0808 	add.w	r8, r8, #8
  409224:	b177      	cbz	r7, 409244 <_svfprintf_r+0x2fc>
  409226:	9b26      	ldr	r3, [sp, #152]	; 0x98
  409228:	3301      	adds	r3, #1
  40922a:	3401      	adds	r4, #1
  40922c:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  409230:	2201      	movs	r2, #1
  409232:	2b07      	cmp	r3, #7
  409234:	9427      	str	r4, [sp, #156]	; 0x9c
  409236:	9326      	str	r3, [sp, #152]	; 0x98
  409238:	e888 0006 	stmia.w	r8, {r1, r2}
  40923c:	f300 83db 	bgt.w	4099f6 <_svfprintf_r+0xaae>
  409240:	f108 0808 	add.w	r8, r8, #8
  409244:	9b10      	ldr	r3, [sp, #64]	; 0x40
  409246:	b16b      	cbz	r3, 409264 <_svfprintf_r+0x31c>
  409248:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40924a:	3301      	adds	r3, #1
  40924c:	3402      	adds	r4, #2
  40924e:	a91e      	add	r1, sp, #120	; 0x78
  409250:	2202      	movs	r2, #2
  409252:	2b07      	cmp	r3, #7
  409254:	9427      	str	r4, [sp, #156]	; 0x9c
  409256:	9326      	str	r3, [sp, #152]	; 0x98
  409258:	e888 0006 	stmia.w	r8, {r1, r2}
  40925c:	f300 83d6 	bgt.w	409a0c <_svfprintf_r+0xac4>
  409260:	f108 0808 	add.w	r8, r8, #8
  409264:	2d80      	cmp	r5, #128	; 0x80
  409266:	f000 8315 	beq.w	409894 <_svfprintf_r+0x94c>
  40926a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40926c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40926e:	1a9f      	subs	r7, r3, r2
  409270:	2f00      	cmp	r7, #0
  409272:	dd36      	ble.n	4092e2 <_svfprintf_r+0x39a>
  409274:	2f10      	cmp	r7, #16
  409276:	9b26      	ldr	r3, [sp, #152]	; 0x98
  409278:	4d8e      	ldr	r5, [pc, #568]	; (4094b4 <_svfprintf_r+0x56c>)
  40927a:	dd27      	ble.n	4092cc <_svfprintf_r+0x384>
  40927c:	4642      	mov	r2, r8
  40927e:	4621      	mov	r1, r4
  409280:	46b0      	mov	r8, r6
  409282:	f04f 0b10 	mov.w	fp, #16
  409286:	462e      	mov	r6, r5
  409288:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40928a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  40928c:	e004      	b.n	409298 <_svfprintf_r+0x350>
  40928e:	3f10      	subs	r7, #16
  409290:	2f10      	cmp	r7, #16
  409292:	f102 0208 	add.w	r2, r2, #8
  409296:	dd15      	ble.n	4092c4 <_svfprintf_r+0x37c>
  409298:	3301      	adds	r3, #1
  40929a:	3110      	adds	r1, #16
  40929c:	2b07      	cmp	r3, #7
  40929e:	9127      	str	r1, [sp, #156]	; 0x9c
  4092a0:	9326      	str	r3, [sp, #152]	; 0x98
  4092a2:	e882 0840 	stmia.w	r2, {r6, fp}
  4092a6:	ddf2      	ble.n	40928e <_svfprintf_r+0x346>
  4092a8:	aa25      	add	r2, sp, #148	; 0x94
  4092aa:	4629      	mov	r1, r5
  4092ac:	4620      	mov	r0, r4
  4092ae:	f004 fa75 	bl	40d79c <__ssprint_r>
  4092b2:	2800      	cmp	r0, #0
  4092b4:	f47f af1a 	bne.w	4090ec <_svfprintf_r+0x1a4>
  4092b8:	3f10      	subs	r7, #16
  4092ba:	2f10      	cmp	r7, #16
  4092bc:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4092be:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4092c0:	464a      	mov	r2, r9
  4092c2:	dce9      	bgt.n	409298 <_svfprintf_r+0x350>
  4092c4:	4635      	mov	r5, r6
  4092c6:	460c      	mov	r4, r1
  4092c8:	4646      	mov	r6, r8
  4092ca:	4690      	mov	r8, r2
  4092cc:	3301      	adds	r3, #1
  4092ce:	443c      	add	r4, r7
  4092d0:	2b07      	cmp	r3, #7
  4092d2:	9427      	str	r4, [sp, #156]	; 0x9c
  4092d4:	9326      	str	r3, [sp, #152]	; 0x98
  4092d6:	e888 00a0 	stmia.w	r8, {r5, r7}
  4092da:	f300 8381 	bgt.w	4099e0 <_svfprintf_r+0xa98>
  4092de:	f108 0808 	add.w	r8, r8, #8
  4092e2:	9b07      	ldr	r3, [sp, #28]
  4092e4:	05df      	lsls	r7, r3, #23
  4092e6:	f100 8268 	bmi.w	4097ba <_svfprintf_r+0x872>
  4092ea:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4092ec:	990e      	ldr	r1, [sp, #56]	; 0x38
  4092ee:	f8c8 6000 	str.w	r6, [r8]
  4092f2:	3301      	adds	r3, #1
  4092f4:	440c      	add	r4, r1
  4092f6:	2b07      	cmp	r3, #7
  4092f8:	9427      	str	r4, [sp, #156]	; 0x9c
  4092fa:	f8c8 1004 	str.w	r1, [r8, #4]
  4092fe:	9326      	str	r3, [sp, #152]	; 0x98
  409300:	f300 834d 	bgt.w	40999e <_svfprintf_r+0xa56>
  409304:	f108 0808 	add.w	r8, r8, #8
  409308:	9b07      	ldr	r3, [sp, #28]
  40930a:	075b      	lsls	r3, r3, #29
  40930c:	d53a      	bpl.n	409384 <_svfprintf_r+0x43c>
  40930e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  409310:	9a08      	ldr	r2, [sp, #32]
  409312:	1a9d      	subs	r5, r3, r2
  409314:	2d00      	cmp	r5, #0
  409316:	dd35      	ble.n	409384 <_svfprintf_r+0x43c>
  409318:	2d10      	cmp	r5, #16
  40931a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40931c:	dd20      	ble.n	409360 <_svfprintf_r+0x418>
  40931e:	2610      	movs	r6, #16
  409320:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  409322:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  409326:	e004      	b.n	409332 <_svfprintf_r+0x3ea>
  409328:	3d10      	subs	r5, #16
  40932a:	2d10      	cmp	r5, #16
  40932c:	f108 0808 	add.w	r8, r8, #8
  409330:	dd16      	ble.n	409360 <_svfprintf_r+0x418>
  409332:	3301      	adds	r3, #1
  409334:	4a5e      	ldr	r2, [pc, #376]	; (4094b0 <_svfprintf_r+0x568>)
  409336:	9326      	str	r3, [sp, #152]	; 0x98
  409338:	3410      	adds	r4, #16
  40933a:	2b07      	cmp	r3, #7
  40933c:	9427      	str	r4, [sp, #156]	; 0x9c
  40933e:	e888 0044 	stmia.w	r8, {r2, r6}
  409342:	ddf1      	ble.n	409328 <_svfprintf_r+0x3e0>
  409344:	aa25      	add	r2, sp, #148	; 0x94
  409346:	4659      	mov	r1, fp
  409348:	4638      	mov	r0, r7
  40934a:	f004 fa27 	bl	40d79c <__ssprint_r>
  40934e:	2800      	cmp	r0, #0
  409350:	f47f aecc 	bne.w	4090ec <_svfprintf_r+0x1a4>
  409354:	3d10      	subs	r5, #16
  409356:	2d10      	cmp	r5, #16
  409358:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40935a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40935c:	46c8      	mov	r8, r9
  40935e:	dce8      	bgt.n	409332 <_svfprintf_r+0x3ea>
  409360:	3301      	adds	r3, #1
  409362:	4a53      	ldr	r2, [pc, #332]	; (4094b0 <_svfprintf_r+0x568>)
  409364:	9326      	str	r3, [sp, #152]	; 0x98
  409366:	442c      	add	r4, r5
  409368:	2b07      	cmp	r3, #7
  40936a:	9427      	str	r4, [sp, #156]	; 0x9c
  40936c:	e888 0024 	stmia.w	r8, {r2, r5}
  409370:	dd08      	ble.n	409384 <_svfprintf_r+0x43c>
  409372:	aa25      	add	r2, sp, #148	; 0x94
  409374:	990b      	ldr	r1, [sp, #44]	; 0x2c
  409376:	980c      	ldr	r0, [sp, #48]	; 0x30
  409378:	f004 fa10 	bl	40d79c <__ssprint_r>
  40937c:	2800      	cmp	r0, #0
  40937e:	f47f aeb5 	bne.w	4090ec <_svfprintf_r+0x1a4>
  409382:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  409384:	9b09      	ldr	r3, [sp, #36]	; 0x24
  409386:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  409388:	9908      	ldr	r1, [sp, #32]
  40938a:	428a      	cmp	r2, r1
  40938c:	bfac      	ite	ge
  40938e:	189b      	addge	r3, r3, r2
  409390:	185b      	addlt	r3, r3, r1
  409392:	9309      	str	r3, [sp, #36]	; 0x24
  409394:	2c00      	cmp	r4, #0
  409396:	f040 830d 	bne.w	4099b4 <_svfprintf_r+0xa6c>
  40939a:	2300      	movs	r3, #0
  40939c:	9326      	str	r3, [sp, #152]	; 0x98
  40939e:	46c8      	mov	r8, r9
  4093a0:	e5f9      	b.n	408f96 <_svfprintf_r+0x4e>
  4093a2:	9311      	str	r3, [sp, #68]	; 0x44
  4093a4:	f01b 0320 	ands.w	r3, fp, #32
  4093a8:	f040 81e3 	bne.w	409772 <_svfprintf_r+0x82a>
  4093ac:	f01b 0210 	ands.w	r2, fp, #16
  4093b0:	f040 842e 	bne.w	409c10 <_svfprintf_r+0xcc8>
  4093b4:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  4093b8:	f000 842a 	beq.w	409c10 <_svfprintf_r+0xcc8>
  4093bc:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4093be:	4613      	mov	r3, r2
  4093c0:	460a      	mov	r2, r1
  4093c2:	3204      	adds	r2, #4
  4093c4:	880c      	ldrh	r4, [r1, #0]
  4093c6:	920f      	str	r2, [sp, #60]	; 0x3c
  4093c8:	2500      	movs	r5, #0
  4093ca:	e6b0      	b.n	40912e <_svfprintf_r+0x1e6>
  4093cc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4093ce:	9311      	str	r3, [sp, #68]	; 0x44
  4093d0:	6816      	ldr	r6, [r2, #0]
  4093d2:	2400      	movs	r4, #0
  4093d4:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  4093d8:	1d15      	adds	r5, r2, #4
  4093da:	2e00      	cmp	r6, #0
  4093dc:	f000 86a7 	beq.w	40a12e <_svfprintf_r+0x11e6>
  4093e0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4093e2:	1c53      	adds	r3, r2, #1
  4093e4:	f000 8609 	beq.w	409ffa <_svfprintf_r+0x10b2>
  4093e8:	4621      	mov	r1, r4
  4093ea:	4630      	mov	r0, r6
  4093ec:	f003 fc30 	bl	40cc50 <memchr>
  4093f0:	2800      	cmp	r0, #0
  4093f2:	f000 86e1 	beq.w	40a1b8 <_svfprintf_r+0x1270>
  4093f6:	1b83      	subs	r3, r0, r6
  4093f8:	930e      	str	r3, [sp, #56]	; 0x38
  4093fa:	940a      	str	r4, [sp, #40]	; 0x28
  4093fc:	950f      	str	r5, [sp, #60]	; 0x3c
  4093fe:	f8cd b01c 	str.w	fp, [sp, #28]
  409402:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  409406:	9308      	str	r3, [sp, #32]
  409408:	9412      	str	r4, [sp, #72]	; 0x48
  40940a:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40940e:	e6b3      	b.n	409178 <_svfprintf_r+0x230>
  409410:	f89a 3000 	ldrb.w	r3, [sl]
  409414:	2201      	movs	r2, #1
  409416:	212b      	movs	r1, #43	; 0x2b
  409418:	e5ee      	b.n	408ff8 <_svfprintf_r+0xb0>
  40941a:	f04b 0b20 	orr.w	fp, fp, #32
  40941e:	f89a 3000 	ldrb.w	r3, [sl]
  409422:	e5e9      	b.n	408ff8 <_svfprintf_r+0xb0>
  409424:	9311      	str	r3, [sp, #68]	; 0x44
  409426:	2a00      	cmp	r2, #0
  409428:	f040 8795 	bne.w	40a356 <_svfprintf_r+0x140e>
  40942c:	4b22      	ldr	r3, [pc, #136]	; (4094b8 <_svfprintf_r+0x570>)
  40942e:	9318      	str	r3, [sp, #96]	; 0x60
  409430:	f01b 0f20 	tst.w	fp, #32
  409434:	f040 8111 	bne.w	40965a <_svfprintf_r+0x712>
  409438:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40943a:	f01b 0f10 	tst.w	fp, #16
  40943e:	4613      	mov	r3, r2
  409440:	f040 83e1 	bne.w	409c06 <_svfprintf_r+0xcbe>
  409444:	f01b 0f40 	tst.w	fp, #64	; 0x40
  409448:	f000 83dd 	beq.w	409c06 <_svfprintf_r+0xcbe>
  40944c:	3304      	adds	r3, #4
  40944e:	8814      	ldrh	r4, [r2, #0]
  409450:	930f      	str	r3, [sp, #60]	; 0x3c
  409452:	2500      	movs	r5, #0
  409454:	f01b 0f01 	tst.w	fp, #1
  409458:	f000 810c 	beq.w	409674 <_svfprintf_r+0x72c>
  40945c:	ea54 0305 	orrs.w	r3, r4, r5
  409460:	f000 8108 	beq.w	409674 <_svfprintf_r+0x72c>
  409464:	2330      	movs	r3, #48	; 0x30
  409466:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  40946a:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  40946e:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  409472:	f04b 0b02 	orr.w	fp, fp, #2
  409476:	2302      	movs	r3, #2
  409478:	e659      	b.n	40912e <_svfprintf_r+0x1e6>
  40947a:	f89a 3000 	ldrb.w	r3, [sl]
  40947e:	2900      	cmp	r1, #0
  409480:	f47f adba 	bne.w	408ff8 <_svfprintf_r+0xb0>
  409484:	2201      	movs	r2, #1
  409486:	2120      	movs	r1, #32
  409488:	e5b6      	b.n	408ff8 <_svfprintf_r+0xb0>
  40948a:	f04b 0b01 	orr.w	fp, fp, #1
  40948e:	f89a 3000 	ldrb.w	r3, [sl]
  409492:	e5b1      	b.n	408ff8 <_svfprintf_r+0xb0>
  409494:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  409496:	6823      	ldr	r3, [r4, #0]
  409498:	930d      	str	r3, [sp, #52]	; 0x34
  40949a:	4618      	mov	r0, r3
  40949c:	2800      	cmp	r0, #0
  40949e:	4623      	mov	r3, r4
  4094a0:	f103 0304 	add.w	r3, r3, #4
  4094a4:	f6ff ae0a 	blt.w	4090bc <_svfprintf_r+0x174>
  4094a8:	930f      	str	r3, [sp, #60]	; 0x3c
  4094aa:	f89a 3000 	ldrb.w	r3, [sl]
  4094ae:	e5a3      	b.n	408ff8 <_svfprintf_r+0xb0>
  4094b0:	0040f680 	.word	0x0040f680
  4094b4:	0040f690 	.word	0x0040f690
  4094b8:	0040f660 	.word	0x0040f660
  4094bc:	f04b 0b10 	orr.w	fp, fp, #16
  4094c0:	f01b 0f20 	tst.w	fp, #32
  4094c4:	9311      	str	r3, [sp, #68]	; 0x44
  4094c6:	f43f ae23 	beq.w	409110 <_svfprintf_r+0x1c8>
  4094ca:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4094cc:	3507      	adds	r5, #7
  4094ce:	f025 0307 	bic.w	r3, r5, #7
  4094d2:	f103 0208 	add.w	r2, r3, #8
  4094d6:	e9d3 4500 	ldrd	r4, r5, [r3]
  4094da:	920f      	str	r2, [sp, #60]	; 0x3c
  4094dc:	2301      	movs	r3, #1
  4094de:	e626      	b.n	40912e <_svfprintf_r+0x1e6>
  4094e0:	f89a 3000 	ldrb.w	r3, [sl]
  4094e4:	2b2a      	cmp	r3, #42	; 0x2a
  4094e6:	f10a 0401 	add.w	r4, sl, #1
  4094ea:	f000 8727 	beq.w	40a33c <_svfprintf_r+0x13f4>
  4094ee:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4094f2:	2809      	cmp	r0, #9
  4094f4:	46a2      	mov	sl, r4
  4094f6:	f200 86ad 	bhi.w	40a254 <_svfprintf_r+0x130c>
  4094fa:	2300      	movs	r3, #0
  4094fc:	461c      	mov	r4, r3
  4094fe:	f81a 3b01 	ldrb.w	r3, [sl], #1
  409502:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  409506:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  40950a:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40950e:	2809      	cmp	r0, #9
  409510:	d9f5      	bls.n	4094fe <_svfprintf_r+0x5b6>
  409512:	940a      	str	r4, [sp, #40]	; 0x28
  409514:	e572      	b.n	408ffc <_svfprintf_r+0xb4>
  409516:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  40951a:	f89a 3000 	ldrb.w	r3, [sl]
  40951e:	e56b      	b.n	408ff8 <_svfprintf_r+0xb0>
  409520:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  409524:	f89a 3000 	ldrb.w	r3, [sl]
  409528:	e566      	b.n	408ff8 <_svfprintf_r+0xb0>
  40952a:	f89a 3000 	ldrb.w	r3, [sl]
  40952e:	2b6c      	cmp	r3, #108	; 0x6c
  409530:	bf03      	ittte	eq
  409532:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  409536:	f04b 0b20 	orreq.w	fp, fp, #32
  40953a:	f10a 0a01 	addeq.w	sl, sl, #1
  40953e:	f04b 0b10 	orrne.w	fp, fp, #16
  409542:	e559      	b.n	408ff8 <_svfprintf_r+0xb0>
  409544:	2a00      	cmp	r2, #0
  409546:	f040 8711 	bne.w	40a36c <_svfprintf_r+0x1424>
  40954a:	f01b 0f20 	tst.w	fp, #32
  40954e:	f040 84f9 	bne.w	409f44 <_svfprintf_r+0xffc>
  409552:	f01b 0f10 	tst.w	fp, #16
  409556:	f040 84ac 	bne.w	409eb2 <_svfprintf_r+0xf6a>
  40955a:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40955e:	f000 84a8 	beq.w	409eb2 <_svfprintf_r+0xf6a>
  409562:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  409564:	6813      	ldr	r3, [r2, #0]
  409566:	3204      	adds	r2, #4
  409568:	920f      	str	r2, [sp, #60]	; 0x3c
  40956a:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  40956e:	801a      	strh	r2, [r3, #0]
  409570:	e511      	b.n	408f96 <_svfprintf_r+0x4e>
  409572:	990f      	ldr	r1, [sp, #60]	; 0x3c
  409574:	4bb3      	ldr	r3, [pc, #716]	; (409844 <_svfprintf_r+0x8fc>)
  409576:	680c      	ldr	r4, [r1, #0]
  409578:	9318      	str	r3, [sp, #96]	; 0x60
  40957a:	2230      	movs	r2, #48	; 0x30
  40957c:	2378      	movs	r3, #120	; 0x78
  40957e:	3104      	adds	r1, #4
  409580:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  409584:	9311      	str	r3, [sp, #68]	; 0x44
  409586:	f04b 0b02 	orr.w	fp, fp, #2
  40958a:	910f      	str	r1, [sp, #60]	; 0x3c
  40958c:	2500      	movs	r5, #0
  40958e:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  409592:	2302      	movs	r3, #2
  409594:	e5cb      	b.n	40912e <_svfprintf_r+0x1e6>
  409596:	990f      	ldr	r1, [sp, #60]	; 0x3c
  409598:	9311      	str	r3, [sp, #68]	; 0x44
  40959a:	680a      	ldr	r2, [r1, #0]
  40959c:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  4095a0:	2300      	movs	r3, #0
  4095a2:	460a      	mov	r2, r1
  4095a4:	461f      	mov	r7, r3
  4095a6:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4095aa:	3204      	adds	r2, #4
  4095ac:	2301      	movs	r3, #1
  4095ae:	9308      	str	r3, [sp, #32]
  4095b0:	f8cd b01c 	str.w	fp, [sp, #28]
  4095b4:	970a      	str	r7, [sp, #40]	; 0x28
  4095b6:	9712      	str	r7, [sp, #72]	; 0x48
  4095b8:	920f      	str	r2, [sp, #60]	; 0x3c
  4095ba:	930e      	str	r3, [sp, #56]	; 0x38
  4095bc:	ae28      	add	r6, sp, #160	; 0xa0
  4095be:	e5df      	b.n	409180 <_svfprintf_r+0x238>
  4095c0:	9311      	str	r3, [sp, #68]	; 0x44
  4095c2:	2a00      	cmp	r2, #0
  4095c4:	f040 86ea 	bne.w	40a39c <_svfprintf_r+0x1454>
  4095c8:	f01b 0f20 	tst.w	fp, #32
  4095cc:	d15d      	bne.n	40968a <_svfprintf_r+0x742>
  4095ce:	f01b 0f10 	tst.w	fp, #16
  4095d2:	f040 8308 	bne.w	409be6 <_svfprintf_r+0xc9e>
  4095d6:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4095da:	f000 8304 	beq.w	409be6 <_svfprintf_r+0xc9e>
  4095de:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4095e0:	f9b1 4000 	ldrsh.w	r4, [r1]
  4095e4:	3104      	adds	r1, #4
  4095e6:	17e5      	asrs	r5, r4, #31
  4095e8:	4622      	mov	r2, r4
  4095ea:	462b      	mov	r3, r5
  4095ec:	910f      	str	r1, [sp, #60]	; 0x3c
  4095ee:	2a00      	cmp	r2, #0
  4095f0:	f173 0300 	sbcs.w	r3, r3, #0
  4095f4:	db58      	blt.n	4096a8 <_svfprintf_r+0x760>
  4095f6:	990a      	ldr	r1, [sp, #40]	; 0x28
  4095f8:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4095fc:	1c4a      	adds	r2, r1, #1
  4095fe:	f04f 0301 	mov.w	r3, #1
  409602:	f47f ad9b 	bne.w	40913c <_svfprintf_r+0x1f4>
  409606:	ea54 0205 	orrs.w	r2, r4, r5
  40960a:	f000 81df 	beq.w	4099cc <_svfprintf_r+0xa84>
  40960e:	f8cd b01c 	str.w	fp, [sp, #28]
  409612:	2b01      	cmp	r3, #1
  409614:	f000 827b 	beq.w	409b0e <_svfprintf_r+0xbc6>
  409618:	2b02      	cmp	r3, #2
  40961a:	f040 8206 	bne.w	409a2a <_svfprintf_r+0xae2>
  40961e:	9818      	ldr	r0, [sp, #96]	; 0x60
  409620:	464e      	mov	r6, r9
  409622:	0923      	lsrs	r3, r4, #4
  409624:	f004 010f 	and.w	r1, r4, #15
  409628:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  40962c:	092a      	lsrs	r2, r5, #4
  40962e:	461c      	mov	r4, r3
  409630:	4615      	mov	r5, r2
  409632:	5c43      	ldrb	r3, [r0, r1]
  409634:	f806 3d01 	strb.w	r3, [r6, #-1]!
  409638:	ea54 0305 	orrs.w	r3, r4, r5
  40963c:	d1f1      	bne.n	409622 <_svfprintf_r+0x6da>
  40963e:	eba9 0306 	sub.w	r3, r9, r6
  409642:	930e      	str	r3, [sp, #56]	; 0x38
  409644:	e590      	b.n	409168 <_svfprintf_r+0x220>
  409646:	9311      	str	r3, [sp, #68]	; 0x44
  409648:	2a00      	cmp	r2, #0
  40964a:	f040 86a3 	bne.w	40a394 <_svfprintf_r+0x144c>
  40964e:	4b7e      	ldr	r3, [pc, #504]	; (409848 <_svfprintf_r+0x900>)
  409650:	9318      	str	r3, [sp, #96]	; 0x60
  409652:	f01b 0f20 	tst.w	fp, #32
  409656:	f43f aeef 	beq.w	409438 <_svfprintf_r+0x4f0>
  40965a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40965c:	3507      	adds	r5, #7
  40965e:	f025 0307 	bic.w	r3, r5, #7
  409662:	f103 0208 	add.w	r2, r3, #8
  409666:	f01b 0f01 	tst.w	fp, #1
  40966a:	920f      	str	r2, [sp, #60]	; 0x3c
  40966c:	e9d3 4500 	ldrd	r4, r5, [r3]
  409670:	f47f aef4 	bne.w	40945c <_svfprintf_r+0x514>
  409674:	2302      	movs	r3, #2
  409676:	e55a      	b.n	40912e <_svfprintf_r+0x1e6>
  409678:	9311      	str	r3, [sp, #68]	; 0x44
  40967a:	2a00      	cmp	r2, #0
  40967c:	f040 8686 	bne.w	40a38c <_svfprintf_r+0x1444>
  409680:	f04b 0b10 	orr.w	fp, fp, #16
  409684:	f01b 0f20 	tst.w	fp, #32
  409688:	d0a1      	beq.n	4095ce <_svfprintf_r+0x686>
  40968a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40968c:	3507      	adds	r5, #7
  40968e:	f025 0507 	bic.w	r5, r5, #7
  409692:	e9d5 2300 	ldrd	r2, r3, [r5]
  409696:	2a00      	cmp	r2, #0
  409698:	f105 0108 	add.w	r1, r5, #8
  40969c:	461d      	mov	r5, r3
  40969e:	f173 0300 	sbcs.w	r3, r3, #0
  4096a2:	910f      	str	r1, [sp, #60]	; 0x3c
  4096a4:	4614      	mov	r4, r2
  4096a6:	daa6      	bge.n	4095f6 <_svfprintf_r+0x6ae>
  4096a8:	272d      	movs	r7, #45	; 0x2d
  4096aa:	4264      	negs	r4, r4
  4096ac:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  4096b0:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4096b4:	2301      	movs	r3, #1
  4096b6:	e53d      	b.n	409134 <_svfprintf_r+0x1ec>
  4096b8:	9311      	str	r3, [sp, #68]	; 0x44
  4096ba:	2a00      	cmp	r2, #0
  4096bc:	f040 8662 	bne.w	40a384 <_svfprintf_r+0x143c>
  4096c0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4096c2:	3507      	adds	r5, #7
  4096c4:	f025 0307 	bic.w	r3, r5, #7
  4096c8:	f103 0208 	add.w	r2, r3, #8
  4096cc:	920f      	str	r2, [sp, #60]	; 0x3c
  4096ce:	681a      	ldr	r2, [r3, #0]
  4096d0:	9215      	str	r2, [sp, #84]	; 0x54
  4096d2:	685b      	ldr	r3, [r3, #4]
  4096d4:	9314      	str	r3, [sp, #80]	; 0x50
  4096d6:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4096d8:	9d15      	ldr	r5, [sp, #84]	; 0x54
  4096da:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  4096de:	4628      	mov	r0, r5
  4096e0:	4621      	mov	r1, r4
  4096e2:	f04f 32ff 	mov.w	r2, #4294967295
  4096e6:	4b59      	ldr	r3, [pc, #356]	; (40984c <_svfprintf_r+0x904>)
  4096e8:	f004 faa4 	bl	40dc34 <__aeabi_dcmpun>
  4096ec:	2800      	cmp	r0, #0
  4096ee:	f040 834a 	bne.w	409d86 <_svfprintf_r+0xe3e>
  4096f2:	4628      	mov	r0, r5
  4096f4:	4621      	mov	r1, r4
  4096f6:	f04f 32ff 	mov.w	r2, #4294967295
  4096fa:	4b54      	ldr	r3, [pc, #336]	; (40984c <_svfprintf_r+0x904>)
  4096fc:	f7fe fb00 	bl	407d00 <__aeabi_dcmple>
  409700:	2800      	cmp	r0, #0
  409702:	f040 8340 	bne.w	409d86 <_svfprintf_r+0xe3e>
  409706:	a815      	add	r0, sp, #84	; 0x54
  409708:	c80d      	ldmia	r0, {r0, r2, r3}
  40970a:	9914      	ldr	r1, [sp, #80]	; 0x50
  40970c:	f7fe faee 	bl	407cec <__aeabi_dcmplt>
  409710:	2800      	cmp	r0, #0
  409712:	f040 8530 	bne.w	40a176 <_svfprintf_r+0x122e>
  409716:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40971a:	4e4d      	ldr	r6, [pc, #308]	; (409850 <_svfprintf_r+0x908>)
  40971c:	4b4d      	ldr	r3, [pc, #308]	; (409854 <_svfprintf_r+0x90c>)
  40971e:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  409722:	9007      	str	r0, [sp, #28]
  409724:	9811      	ldr	r0, [sp, #68]	; 0x44
  409726:	2203      	movs	r2, #3
  409728:	2100      	movs	r1, #0
  40972a:	9208      	str	r2, [sp, #32]
  40972c:	910a      	str	r1, [sp, #40]	; 0x28
  40972e:	2847      	cmp	r0, #71	; 0x47
  409730:	bfd8      	it	le
  409732:	461e      	movle	r6, r3
  409734:	920e      	str	r2, [sp, #56]	; 0x38
  409736:	9112      	str	r1, [sp, #72]	; 0x48
  409738:	e51e      	b.n	409178 <_svfprintf_r+0x230>
  40973a:	f04b 0b08 	orr.w	fp, fp, #8
  40973e:	f89a 3000 	ldrb.w	r3, [sl]
  409742:	e459      	b.n	408ff8 <_svfprintf_r+0xb0>
  409744:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  409748:	2300      	movs	r3, #0
  40974a:	461c      	mov	r4, r3
  40974c:	f81a 3b01 	ldrb.w	r3, [sl], #1
  409750:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  409754:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  409758:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40975c:	2809      	cmp	r0, #9
  40975e:	d9f5      	bls.n	40974c <_svfprintf_r+0x804>
  409760:	940d      	str	r4, [sp, #52]	; 0x34
  409762:	e44b      	b.n	408ffc <_svfprintf_r+0xb4>
  409764:	f04b 0b10 	orr.w	fp, fp, #16
  409768:	9311      	str	r3, [sp, #68]	; 0x44
  40976a:	f01b 0320 	ands.w	r3, fp, #32
  40976e:	f43f ae1d 	beq.w	4093ac <_svfprintf_r+0x464>
  409772:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  409774:	3507      	adds	r5, #7
  409776:	f025 0307 	bic.w	r3, r5, #7
  40977a:	f103 0208 	add.w	r2, r3, #8
  40977e:	e9d3 4500 	ldrd	r4, r5, [r3]
  409782:	920f      	str	r2, [sp, #60]	; 0x3c
  409784:	2300      	movs	r3, #0
  409786:	e4d2      	b.n	40912e <_svfprintf_r+0x1e6>
  409788:	9311      	str	r3, [sp, #68]	; 0x44
  40978a:	2a00      	cmp	r2, #0
  40978c:	f040 85e7 	bne.w	40a35e <_svfprintf_r+0x1416>
  409790:	9a11      	ldr	r2, [sp, #68]	; 0x44
  409792:	2a00      	cmp	r2, #0
  409794:	f43f aca3 	beq.w	4090de <_svfprintf_r+0x196>
  409798:	2300      	movs	r3, #0
  40979a:	2101      	movs	r1, #1
  40979c:	461f      	mov	r7, r3
  40979e:	9108      	str	r1, [sp, #32]
  4097a0:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  4097a4:	f8cd b01c 	str.w	fp, [sp, #28]
  4097a8:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4097ac:	930a      	str	r3, [sp, #40]	; 0x28
  4097ae:	9312      	str	r3, [sp, #72]	; 0x48
  4097b0:	910e      	str	r1, [sp, #56]	; 0x38
  4097b2:	ae28      	add	r6, sp, #160	; 0xa0
  4097b4:	e4e4      	b.n	409180 <_svfprintf_r+0x238>
  4097b6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4097b8:	e534      	b.n	409224 <_svfprintf_r+0x2dc>
  4097ba:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4097bc:	2b65      	cmp	r3, #101	; 0x65
  4097be:	f340 80a7 	ble.w	409910 <_svfprintf_r+0x9c8>
  4097c2:	a815      	add	r0, sp, #84	; 0x54
  4097c4:	c80d      	ldmia	r0, {r0, r2, r3}
  4097c6:	9914      	ldr	r1, [sp, #80]	; 0x50
  4097c8:	f7fe fa86 	bl	407cd8 <__aeabi_dcmpeq>
  4097cc:	2800      	cmp	r0, #0
  4097ce:	f000 8150 	beq.w	409a72 <_svfprintf_r+0xb2a>
  4097d2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4097d4:	4a20      	ldr	r2, [pc, #128]	; (409858 <_svfprintf_r+0x910>)
  4097d6:	f8c8 2000 	str.w	r2, [r8]
  4097da:	3301      	adds	r3, #1
  4097dc:	3401      	adds	r4, #1
  4097de:	2201      	movs	r2, #1
  4097e0:	2b07      	cmp	r3, #7
  4097e2:	9427      	str	r4, [sp, #156]	; 0x9c
  4097e4:	9326      	str	r3, [sp, #152]	; 0x98
  4097e6:	f8c8 2004 	str.w	r2, [r8, #4]
  4097ea:	f300 836a 	bgt.w	409ec2 <_svfprintf_r+0xf7a>
  4097ee:	f108 0808 	add.w	r8, r8, #8
  4097f2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4097f4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4097f6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4097f8:	4293      	cmp	r3, r2
  4097fa:	db03      	blt.n	409804 <_svfprintf_r+0x8bc>
  4097fc:	9b07      	ldr	r3, [sp, #28]
  4097fe:	07dd      	lsls	r5, r3, #31
  409800:	f57f ad82 	bpl.w	409308 <_svfprintf_r+0x3c0>
  409804:	9b26      	ldr	r3, [sp, #152]	; 0x98
  409806:	9919      	ldr	r1, [sp, #100]	; 0x64
  409808:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  40980a:	f8c8 2000 	str.w	r2, [r8]
  40980e:	3301      	adds	r3, #1
  409810:	440c      	add	r4, r1
  409812:	2b07      	cmp	r3, #7
  409814:	f8c8 1004 	str.w	r1, [r8, #4]
  409818:	9427      	str	r4, [sp, #156]	; 0x9c
  40981a:	9326      	str	r3, [sp, #152]	; 0x98
  40981c:	f300 839e 	bgt.w	409f5c <_svfprintf_r+0x1014>
  409820:	f108 0808 	add.w	r8, r8, #8
  409824:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  409826:	1e5e      	subs	r6, r3, #1
  409828:	2e00      	cmp	r6, #0
  40982a:	f77f ad6d 	ble.w	409308 <_svfprintf_r+0x3c0>
  40982e:	2e10      	cmp	r6, #16
  409830:	9b26      	ldr	r3, [sp, #152]	; 0x98
  409832:	4d0a      	ldr	r5, [pc, #40]	; (40985c <_svfprintf_r+0x914>)
  409834:	f340 81f5 	ble.w	409c22 <_svfprintf_r+0xcda>
  409838:	4622      	mov	r2, r4
  40983a:	2710      	movs	r7, #16
  40983c:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  409840:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  409842:	e013      	b.n	40986c <_svfprintf_r+0x924>
  409844:	0040f660 	.word	0x0040f660
  409848:	0040f64c 	.word	0x0040f64c
  40984c:	7fefffff 	.word	0x7fefffff
  409850:	0040f640 	.word	0x0040f640
  409854:	0040f63c 	.word	0x0040f63c
  409858:	0040f67c 	.word	0x0040f67c
  40985c:	0040f690 	.word	0x0040f690
  409860:	f108 0808 	add.w	r8, r8, #8
  409864:	3e10      	subs	r6, #16
  409866:	2e10      	cmp	r6, #16
  409868:	f340 81da 	ble.w	409c20 <_svfprintf_r+0xcd8>
  40986c:	3301      	adds	r3, #1
  40986e:	3210      	adds	r2, #16
  409870:	2b07      	cmp	r3, #7
  409872:	9227      	str	r2, [sp, #156]	; 0x9c
  409874:	9326      	str	r3, [sp, #152]	; 0x98
  409876:	e888 00a0 	stmia.w	r8, {r5, r7}
  40987a:	ddf1      	ble.n	409860 <_svfprintf_r+0x918>
  40987c:	aa25      	add	r2, sp, #148	; 0x94
  40987e:	4621      	mov	r1, r4
  409880:	4658      	mov	r0, fp
  409882:	f003 ff8b 	bl	40d79c <__ssprint_r>
  409886:	2800      	cmp	r0, #0
  409888:	f47f ac30 	bne.w	4090ec <_svfprintf_r+0x1a4>
  40988c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40988e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  409890:	46c8      	mov	r8, r9
  409892:	e7e7      	b.n	409864 <_svfprintf_r+0x91c>
  409894:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  409896:	9a08      	ldr	r2, [sp, #32]
  409898:	1a9f      	subs	r7, r3, r2
  40989a:	2f00      	cmp	r7, #0
  40989c:	f77f ace5 	ble.w	40926a <_svfprintf_r+0x322>
  4098a0:	2f10      	cmp	r7, #16
  4098a2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4098a4:	4db6      	ldr	r5, [pc, #728]	; (409b80 <_svfprintf_r+0xc38>)
  4098a6:	dd27      	ble.n	4098f8 <_svfprintf_r+0x9b0>
  4098a8:	4642      	mov	r2, r8
  4098aa:	4621      	mov	r1, r4
  4098ac:	46b0      	mov	r8, r6
  4098ae:	f04f 0b10 	mov.w	fp, #16
  4098b2:	462e      	mov	r6, r5
  4098b4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4098b6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4098b8:	e004      	b.n	4098c4 <_svfprintf_r+0x97c>
  4098ba:	3f10      	subs	r7, #16
  4098bc:	2f10      	cmp	r7, #16
  4098be:	f102 0208 	add.w	r2, r2, #8
  4098c2:	dd15      	ble.n	4098f0 <_svfprintf_r+0x9a8>
  4098c4:	3301      	adds	r3, #1
  4098c6:	3110      	adds	r1, #16
  4098c8:	2b07      	cmp	r3, #7
  4098ca:	9127      	str	r1, [sp, #156]	; 0x9c
  4098cc:	9326      	str	r3, [sp, #152]	; 0x98
  4098ce:	e882 0840 	stmia.w	r2, {r6, fp}
  4098d2:	ddf2      	ble.n	4098ba <_svfprintf_r+0x972>
  4098d4:	aa25      	add	r2, sp, #148	; 0x94
  4098d6:	4629      	mov	r1, r5
  4098d8:	4620      	mov	r0, r4
  4098da:	f003 ff5f 	bl	40d79c <__ssprint_r>
  4098de:	2800      	cmp	r0, #0
  4098e0:	f47f ac04 	bne.w	4090ec <_svfprintf_r+0x1a4>
  4098e4:	3f10      	subs	r7, #16
  4098e6:	2f10      	cmp	r7, #16
  4098e8:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4098ea:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4098ec:	464a      	mov	r2, r9
  4098ee:	dce9      	bgt.n	4098c4 <_svfprintf_r+0x97c>
  4098f0:	4635      	mov	r5, r6
  4098f2:	460c      	mov	r4, r1
  4098f4:	4646      	mov	r6, r8
  4098f6:	4690      	mov	r8, r2
  4098f8:	3301      	adds	r3, #1
  4098fa:	443c      	add	r4, r7
  4098fc:	2b07      	cmp	r3, #7
  4098fe:	9427      	str	r4, [sp, #156]	; 0x9c
  409900:	9326      	str	r3, [sp, #152]	; 0x98
  409902:	e888 00a0 	stmia.w	r8, {r5, r7}
  409906:	f300 8232 	bgt.w	409d6e <_svfprintf_r+0xe26>
  40990a:	f108 0808 	add.w	r8, r8, #8
  40990e:	e4ac      	b.n	40926a <_svfprintf_r+0x322>
  409910:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  409912:	9f26      	ldr	r7, [sp, #152]	; 0x98
  409914:	2b01      	cmp	r3, #1
  409916:	f340 81fe 	ble.w	409d16 <_svfprintf_r+0xdce>
  40991a:	3701      	adds	r7, #1
  40991c:	3401      	adds	r4, #1
  40991e:	2301      	movs	r3, #1
  409920:	2f07      	cmp	r7, #7
  409922:	9427      	str	r4, [sp, #156]	; 0x9c
  409924:	9726      	str	r7, [sp, #152]	; 0x98
  409926:	f8c8 6000 	str.w	r6, [r8]
  40992a:	f8c8 3004 	str.w	r3, [r8, #4]
  40992e:	f300 8203 	bgt.w	409d38 <_svfprintf_r+0xdf0>
  409932:	f108 0808 	add.w	r8, r8, #8
  409936:	9a19      	ldr	r2, [sp, #100]	; 0x64
  409938:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  40993a:	f8c8 3000 	str.w	r3, [r8]
  40993e:	3701      	adds	r7, #1
  409940:	4414      	add	r4, r2
  409942:	2f07      	cmp	r7, #7
  409944:	9427      	str	r4, [sp, #156]	; 0x9c
  409946:	9726      	str	r7, [sp, #152]	; 0x98
  409948:	f8c8 2004 	str.w	r2, [r8, #4]
  40994c:	f300 8200 	bgt.w	409d50 <_svfprintf_r+0xe08>
  409950:	f108 0808 	add.w	r8, r8, #8
  409954:	a815      	add	r0, sp, #84	; 0x54
  409956:	c80d      	ldmia	r0, {r0, r2, r3}
  409958:	9914      	ldr	r1, [sp, #80]	; 0x50
  40995a:	f7fe f9bd 	bl	407cd8 <__aeabi_dcmpeq>
  40995e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  409960:	2800      	cmp	r0, #0
  409962:	f040 8101 	bne.w	409b68 <_svfprintf_r+0xc20>
  409966:	3b01      	subs	r3, #1
  409968:	3701      	adds	r7, #1
  40996a:	3601      	adds	r6, #1
  40996c:	441c      	add	r4, r3
  40996e:	2f07      	cmp	r7, #7
  409970:	9726      	str	r7, [sp, #152]	; 0x98
  409972:	9427      	str	r4, [sp, #156]	; 0x9c
  409974:	f8c8 6000 	str.w	r6, [r8]
  409978:	f8c8 3004 	str.w	r3, [r8, #4]
  40997c:	f300 8127 	bgt.w	409bce <_svfprintf_r+0xc86>
  409980:	f108 0808 	add.w	r8, r8, #8
  409984:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  409986:	f8c8 2004 	str.w	r2, [r8, #4]
  40998a:	3701      	adds	r7, #1
  40998c:	4414      	add	r4, r2
  40998e:	ab21      	add	r3, sp, #132	; 0x84
  409990:	2f07      	cmp	r7, #7
  409992:	9427      	str	r4, [sp, #156]	; 0x9c
  409994:	9726      	str	r7, [sp, #152]	; 0x98
  409996:	f8c8 3000 	str.w	r3, [r8]
  40999a:	f77f acb3 	ble.w	409304 <_svfprintf_r+0x3bc>
  40999e:	aa25      	add	r2, sp, #148	; 0x94
  4099a0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4099a2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4099a4:	f003 fefa 	bl	40d79c <__ssprint_r>
  4099a8:	2800      	cmp	r0, #0
  4099aa:	f47f ab9f 	bne.w	4090ec <_svfprintf_r+0x1a4>
  4099ae:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4099b0:	46c8      	mov	r8, r9
  4099b2:	e4a9      	b.n	409308 <_svfprintf_r+0x3c0>
  4099b4:	aa25      	add	r2, sp, #148	; 0x94
  4099b6:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4099b8:	980c      	ldr	r0, [sp, #48]	; 0x30
  4099ba:	f003 feef 	bl	40d79c <__ssprint_r>
  4099be:	2800      	cmp	r0, #0
  4099c0:	f43f aceb 	beq.w	40939a <_svfprintf_r+0x452>
  4099c4:	f7ff bb92 	b.w	4090ec <_svfprintf_r+0x1a4>
  4099c8:	f8dd b01c 	ldr.w	fp, [sp, #28]
  4099cc:	2b01      	cmp	r3, #1
  4099ce:	f000 8134 	beq.w	409c3a <_svfprintf_r+0xcf2>
  4099d2:	2b02      	cmp	r3, #2
  4099d4:	d125      	bne.n	409a22 <_svfprintf_r+0xada>
  4099d6:	f8cd b01c 	str.w	fp, [sp, #28]
  4099da:	2400      	movs	r4, #0
  4099dc:	2500      	movs	r5, #0
  4099de:	e61e      	b.n	40961e <_svfprintf_r+0x6d6>
  4099e0:	aa25      	add	r2, sp, #148	; 0x94
  4099e2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4099e4:	980c      	ldr	r0, [sp, #48]	; 0x30
  4099e6:	f003 fed9 	bl	40d79c <__ssprint_r>
  4099ea:	2800      	cmp	r0, #0
  4099ec:	f47f ab7e 	bne.w	4090ec <_svfprintf_r+0x1a4>
  4099f0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4099f2:	46c8      	mov	r8, r9
  4099f4:	e475      	b.n	4092e2 <_svfprintf_r+0x39a>
  4099f6:	aa25      	add	r2, sp, #148	; 0x94
  4099f8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4099fa:	980c      	ldr	r0, [sp, #48]	; 0x30
  4099fc:	f003 fece 	bl	40d79c <__ssprint_r>
  409a00:	2800      	cmp	r0, #0
  409a02:	f47f ab73 	bne.w	4090ec <_svfprintf_r+0x1a4>
  409a06:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  409a08:	46c8      	mov	r8, r9
  409a0a:	e41b      	b.n	409244 <_svfprintf_r+0x2fc>
  409a0c:	aa25      	add	r2, sp, #148	; 0x94
  409a0e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  409a10:	980c      	ldr	r0, [sp, #48]	; 0x30
  409a12:	f003 fec3 	bl	40d79c <__ssprint_r>
  409a16:	2800      	cmp	r0, #0
  409a18:	f47f ab68 	bne.w	4090ec <_svfprintf_r+0x1a4>
  409a1c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  409a1e:	46c8      	mov	r8, r9
  409a20:	e420      	b.n	409264 <_svfprintf_r+0x31c>
  409a22:	f8cd b01c 	str.w	fp, [sp, #28]
  409a26:	2400      	movs	r4, #0
  409a28:	2500      	movs	r5, #0
  409a2a:	4649      	mov	r1, r9
  409a2c:	e000      	b.n	409a30 <_svfprintf_r+0xae8>
  409a2e:	4631      	mov	r1, r6
  409a30:	08e2      	lsrs	r2, r4, #3
  409a32:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  409a36:	08e8      	lsrs	r0, r5, #3
  409a38:	f004 0307 	and.w	r3, r4, #7
  409a3c:	4605      	mov	r5, r0
  409a3e:	4614      	mov	r4, r2
  409a40:	3330      	adds	r3, #48	; 0x30
  409a42:	ea54 0205 	orrs.w	r2, r4, r5
  409a46:	f801 3c01 	strb.w	r3, [r1, #-1]
  409a4a:	f101 36ff 	add.w	r6, r1, #4294967295
  409a4e:	d1ee      	bne.n	409a2e <_svfprintf_r+0xae6>
  409a50:	9a07      	ldr	r2, [sp, #28]
  409a52:	07d2      	lsls	r2, r2, #31
  409a54:	f57f adf3 	bpl.w	40963e <_svfprintf_r+0x6f6>
  409a58:	2b30      	cmp	r3, #48	; 0x30
  409a5a:	f43f adf0 	beq.w	40963e <_svfprintf_r+0x6f6>
  409a5e:	3902      	subs	r1, #2
  409a60:	2330      	movs	r3, #48	; 0x30
  409a62:	f806 3c01 	strb.w	r3, [r6, #-1]
  409a66:	eba9 0301 	sub.w	r3, r9, r1
  409a6a:	930e      	str	r3, [sp, #56]	; 0x38
  409a6c:	460e      	mov	r6, r1
  409a6e:	f7ff bb7b 	b.w	409168 <_svfprintf_r+0x220>
  409a72:	991f      	ldr	r1, [sp, #124]	; 0x7c
  409a74:	2900      	cmp	r1, #0
  409a76:	f340 822e 	ble.w	409ed6 <_svfprintf_r+0xf8e>
  409a7a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  409a7c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  409a7e:	4293      	cmp	r3, r2
  409a80:	bfa8      	it	ge
  409a82:	4613      	movge	r3, r2
  409a84:	2b00      	cmp	r3, #0
  409a86:	461f      	mov	r7, r3
  409a88:	dd0d      	ble.n	409aa6 <_svfprintf_r+0xb5e>
  409a8a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  409a8c:	f8c8 6000 	str.w	r6, [r8]
  409a90:	3301      	adds	r3, #1
  409a92:	443c      	add	r4, r7
  409a94:	2b07      	cmp	r3, #7
  409a96:	9427      	str	r4, [sp, #156]	; 0x9c
  409a98:	f8c8 7004 	str.w	r7, [r8, #4]
  409a9c:	9326      	str	r3, [sp, #152]	; 0x98
  409a9e:	f300 831f 	bgt.w	40a0e0 <_svfprintf_r+0x1198>
  409aa2:	f108 0808 	add.w	r8, r8, #8
  409aa6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  409aa8:	2f00      	cmp	r7, #0
  409aaa:	bfa8      	it	ge
  409aac:	1bdb      	subge	r3, r3, r7
  409aae:	2b00      	cmp	r3, #0
  409ab0:	461f      	mov	r7, r3
  409ab2:	f340 80d6 	ble.w	409c62 <_svfprintf_r+0xd1a>
  409ab6:	2f10      	cmp	r7, #16
  409ab8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  409aba:	4d31      	ldr	r5, [pc, #196]	; (409b80 <_svfprintf_r+0xc38>)
  409abc:	f340 81ed 	ble.w	409e9a <_svfprintf_r+0xf52>
  409ac0:	4642      	mov	r2, r8
  409ac2:	4621      	mov	r1, r4
  409ac4:	46b0      	mov	r8, r6
  409ac6:	f04f 0b10 	mov.w	fp, #16
  409aca:	462e      	mov	r6, r5
  409acc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  409ace:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  409ad0:	e004      	b.n	409adc <_svfprintf_r+0xb94>
  409ad2:	3208      	adds	r2, #8
  409ad4:	3f10      	subs	r7, #16
  409ad6:	2f10      	cmp	r7, #16
  409ad8:	f340 81db 	ble.w	409e92 <_svfprintf_r+0xf4a>
  409adc:	3301      	adds	r3, #1
  409ade:	3110      	adds	r1, #16
  409ae0:	2b07      	cmp	r3, #7
  409ae2:	9127      	str	r1, [sp, #156]	; 0x9c
  409ae4:	9326      	str	r3, [sp, #152]	; 0x98
  409ae6:	e882 0840 	stmia.w	r2, {r6, fp}
  409aea:	ddf2      	ble.n	409ad2 <_svfprintf_r+0xb8a>
  409aec:	aa25      	add	r2, sp, #148	; 0x94
  409aee:	4629      	mov	r1, r5
  409af0:	4620      	mov	r0, r4
  409af2:	f003 fe53 	bl	40d79c <__ssprint_r>
  409af6:	2800      	cmp	r0, #0
  409af8:	f47f aaf8 	bne.w	4090ec <_svfprintf_r+0x1a4>
  409afc:	9927      	ldr	r1, [sp, #156]	; 0x9c
  409afe:	9b26      	ldr	r3, [sp, #152]	; 0x98
  409b00:	464a      	mov	r2, r9
  409b02:	e7e7      	b.n	409ad4 <_svfprintf_r+0xb8c>
  409b04:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  409b06:	930e      	str	r3, [sp, #56]	; 0x38
  409b08:	464e      	mov	r6, r9
  409b0a:	f7ff bb2d 	b.w	409168 <_svfprintf_r+0x220>
  409b0e:	2d00      	cmp	r5, #0
  409b10:	bf08      	it	eq
  409b12:	2c0a      	cmpeq	r4, #10
  409b14:	f0c0 808f 	bcc.w	409c36 <_svfprintf_r+0xcee>
  409b18:	464e      	mov	r6, r9
  409b1a:	4620      	mov	r0, r4
  409b1c:	4629      	mov	r1, r5
  409b1e:	220a      	movs	r2, #10
  409b20:	2300      	movs	r3, #0
  409b22:	f004 f89d 	bl	40dc60 <__aeabi_uldivmod>
  409b26:	3230      	adds	r2, #48	; 0x30
  409b28:	f806 2d01 	strb.w	r2, [r6, #-1]!
  409b2c:	4620      	mov	r0, r4
  409b2e:	4629      	mov	r1, r5
  409b30:	2300      	movs	r3, #0
  409b32:	220a      	movs	r2, #10
  409b34:	f004 f894 	bl	40dc60 <__aeabi_uldivmod>
  409b38:	4604      	mov	r4, r0
  409b3a:	460d      	mov	r5, r1
  409b3c:	ea54 0305 	orrs.w	r3, r4, r5
  409b40:	d1eb      	bne.n	409b1a <_svfprintf_r+0xbd2>
  409b42:	eba9 0306 	sub.w	r3, r9, r6
  409b46:	930e      	str	r3, [sp, #56]	; 0x38
  409b48:	f7ff bb0e 	b.w	409168 <_svfprintf_r+0x220>
  409b4c:	aa25      	add	r2, sp, #148	; 0x94
  409b4e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  409b50:	980c      	ldr	r0, [sp, #48]	; 0x30
  409b52:	f003 fe23 	bl	40d79c <__ssprint_r>
  409b56:	2800      	cmp	r0, #0
  409b58:	f47f aac8 	bne.w	4090ec <_svfprintf_r+0x1a4>
  409b5c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  409b60:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  409b62:	46c8      	mov	r8, r9
  409b64:	f7ff bb5e 	b.w	409224 <_svfprintf_r+0x2dc>
  409b68:	1e5e      	subs	r6, r3, #1
  409b6a:	2e00      	cmp	r6, #0
  409b6c:	f77f af0a 	ble.w	409984 <_svfprintf_r+0xa3c>
  409b70:	2e10      	cmp	r6, #16
  409b72:	4d03      	ldr	r5, [pc, #12]	; (409b80 <_svfprintf_r+0xc38>)
  409b74:	dd22      	ble.n	409bbc <_svfprintf_r+0xc74>
  409b76:	4622      	mov	r2, r4
  409b78:	f04f 0b10 	mov.w	fp, #16
  409b7c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  409b7e:	e006      	b.n	409b8e <_svfprintf_r+0xc46>
  409b80:	0040f690 	.word	0x0040f690
  409b84:	3e10      	subs	r6, #16
  409b86:	2e10      	cmp	r6, #16
  409b88:	f108 0808 	add.w	r8, r8, #8
  409b8c:	dd15      	ble.n	409bba <_svfprintf_r+0xc72>
  409b8e:	3701      	adds	r7, #1
  409b90:	3210      	adds	r2, #16
  409b92:	2f07      	cmp	r7, #7
  409b94:	9227      	str	r2, [sp, #156]	; 0x9c
  409b96:	9726      	str	r7, [sp, #152]	; 0x98
  409b98:	e888 0820 	stmia.w	r8, {r5, fp}
  409b9c:	ddf2      	ble.n	409b84 <_svfprintf_r+0xc3c>
  409b9e:	aa25      	add	r2, sp, #148	; 0x94
  409ba0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  409ba2:	4620      	mov	r0, r4
  409ba4:	f003 fdfa 	bl	40d79c <__ssprint_r>
  409ba8:	2800      	cmp	r0, #0
  409baa:	f47f aa9f 	bne.w	4090ec <_svfprintf_r+0x1a4>
  409bae:	3e10      	subs	r6, #16
  409bb0:	2e10      	cmp	r6, #16
  409bb2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  409bb4:	9f26      	ldr	r7, [sp, #152]	; 0x98
  409bb6:	46c8      	mov	r8, r9
  409bb8:	dce9      	bgt.n	409b8e <_svfprintf_r+0xc46>
  409bba:	4614      	mov	r4, r2
  409bbc:	3701      	adds	r7, #1
  409bbe:	4434      	add	r4, r6
  409bc0:	2f07      	cmp	r7, #7
  409bc2:	9427      	str	r4, [sp, #156]	; 0x9c
  409bc4:	9726      	str	r7, [sp, #152]	; 0x98
  409bc6:	e888 0060 	stmia.w	r8, {r5, r6}
  409bca:	f77f aed9 	ble.w	409980 <_svfprintf_r+0xa38>
  409bce:	aa25      	add	r2, sp, #148	; 0x94
  409bd0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  409bd2:	980c      	ldr	r0, [sp, #48]	; 0x30
  409bd4:	f003 fde2 	bl	40d79c <__ssprint_r>
  409bd8:	2800      	cmp	r0, #0
  409bda:	f47f aa87 	bne.w	4090ec <_svfprintf_r+0x1a4>
  409bde:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  409be0:	9f26      	ldr	r7, [sp, #152]	; 0x98
  409be2:	46c8      	mov	r8, r9
  409be4:	e6ce      	b.n	409984 <_svfprintf_r+0xa3c>
  409be6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  409be8:	6814      	ldr	r4, [r2, #0]
  409bea:	4613      	mov	r3, r2
  409bec:	3304      	adds	r3, #4
  409bee:	17e5      	asrs	r5, r4, #31
  409bf0:	930f      	str	r3, [sp, #60]	; 0x3c
  409bf2:	4622      	mov	r2, r4
  409bf4:	462b      	mov	r3, r5
  409bf6:	e4fa      	b.n	4095ee <_svfprintf_r+0x6a6>
  409bf8:	3204      	adds	r2, #4
  409bfa:	681c      	ldr	r4, [r3, #0]
  409bfc:	920f      	str	r2, [sp, #60]	; 0x3c
  409bfe:	2301      	movs	r3, #1
  409c00:	2500      	movs	r5, #0
  409c02:	f7ff ba94 	b.w	40912e <_svfprintf_r+0x1e6>
  409c06:	681c      	ldr	r4, [r3, #0]
  409c08:	3304      	adds	r3, #4
  409c0a:	930f      	str	r3, [sp, #60]	; 0x3c
  409c0c:	2500      	movs	r5, #0
  409c0e:	e421      	b.n	409454 <_svfprintf_r+0x50c>
  409c10:	990f      	ldr	r1, [sp, #60]	; 0x3c
  409c12:	460a      	mov	r2, r1
  409c14:	3204      	adds	r2, #4
  409c16:	680c      	ldr	r4, [r1, #0]
  409c18:	920f      	str	r2, [sp, #60]	; 0x3c
  409c1a:	2500      	movs	r5, #0
  409c1c:	f7ff ba87 	b.w	40912e <_svfprintf_r+0x1e6>
  409c20:	4614      	mov	r4, r2
  409c22:	3301      	adds	r3, #1
  409c24:	4434      	add	r4, r6
  409c26:	2b07      	cmp	r3, #7
  409c28:	9427      	str	r4, [sp, #156]	; 0x9c
  409c2a:	9326      	str	r3, [sp, #152]	; 0x98
  409c2c:	e888 0060 	stmia.w	r8, {r5, r6}
  409c30:	f77f ab68 	ble.w	409304 <_svfprintf_r+0x3bc>
  409c34:	e6b3      	b.n	40999e <_svfprintf_r+0xa56>
  409c36:	f8dd b01c 	ldr.w	fp, [sp, #28]
  409c3a:	f8cd b01c 	str.w	fp, [sp, #28]
  409c3e:	ae42      	add	r6, sp, #264	; 0x108
  409c40:	3430      	adds	r4, #48	; 0x30
  409c42:	2301      	movs	r3, #1
  409c44:	f806 4d41 	strb.w	r4, [r6, #-65]!
  409c48:	930e      	str	r3, [sp, #56]	; 0x38
  409c4a:	f7ff ba8d 	b.w	409168 <_svfprintf_r+0x220>
  409c4e:	aa25      	add	r2, sp, #148	; 0x94
  409c50:	990b      	ldr	r1, [sp, #44]	; 0x2c
  409c52:	980c      	ldr	r0, [sp, #48]	; 0x30
  409c54:	f003 fda2 	bl	40d79c <__ssprint_r>
  409c58:	2800      	cmp	r0, #0
  409c5a:	f47f aa47 	bne.w	4090ec <_svfprintf_r+0x1a4>
  409c5e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  409c60:	46c8      	mov	r8, r9
  409c62:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  409c64:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  409c66:	429a      	cmp	r2, r3
  409c68:	db44      	blt.n	409cf4 <_svfprintf_r+0xdac>
  409c6a:	9b07      	ldr	r3, [sp, #28]
  409c6c:	07d9      	lsls	r1, r3, #31
  409c6e:	d441      	bmi.n	409cf4 <_svfprintf_r+0xdac>
  409c70:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  409c72:	9812      	ldr	r0, [sp, #72]	; 0x48
  409c74:	1a9a      	subs	r2, r3, r2
  409c76:	1a1d      	subs	r5, r3, r0
  409c78:	4295      	cmp	r5, r2
  409c7a:	bfa8      	it	ge
  409c7c:	4615      	movge	r5, r2
  409c7e:	2d00      	cmp	r5, #0
  409c80:	dd0e      	ble.n	409ca0 <_svfprintf_r+0xd58>
  409c82:	9926      	ldr	r1, [sp, #152]	; 0x98
  409c84:	f8c8 5004 	str.w	r5, [r8, #4]
  409c88:	3101      	adds	r1, #1
  409c8a:	4406      	add	r6, r0
  409c8c:	442c      	add	r4, r5
  409c8e:	2907      	cmp	r1, #7
  409c90:	f8c8 6000 	str.w	r6, [r8]
  409c94:	9427      	str	r4, [sp, #156]	; 0x9c
  409c96:	9126      	str	r1, [sp, #152]	; 0x98
  409c98:	f300 823b 	bgt.w	40a112 <_svfprintf_r+0x11ca>
  409c9c:	f108 0808 	add.w	r8, r8, #8
  409ca0:	2d00      	cmp	r5, #0
  409ca2:	bfac      	ite	ge
  409ca4:	1b56      	subge	r6, r2, r5
  409ca6:	4616      	movlt	r6, r2
  409ca8:	2e00      	cmp	r6, #0
  409caa:	f77f ab2d 	ble.w	409308 <_svfprintf_r+0x3c0>
  409cae:	2e10      	cmp	r6, #16
  409cb0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  409cb2:	4db0      	ldr	r5, [pc, #704]	; (409f74 <_svfprintf_r+0x102c>)
  409cb4:	ddb5      	ble.n	409c22 <_svfprintf_r+0xcda>
  409cb6:	4622      	mov	r2, r4
  409cb8:	2710      	movs	r7, #16
  409cba:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  409cbe:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  409cc0:	e004      	b.n	409ccc <_svfprintf_r+0xd84>
  409cc2:	f108 0808 	add.w	r8, r8, #8
  409cc6:	3e10      	subs	r6, #16
  409cc8:	2e10      	cmp	r6, #16
  409cca:	dda9      	ble.n	409c20 <_svfprintf_r+0xcd8>
  409ccc:	3301      	adds	r3, #1
  409cce:	3210      	adds	r2, #16
  409cd0:	2b07      	cmp	r3, #7
  409cd2:	9227      	str	r2, [sp, #156]	; 0x9c
  409cd4:	9326      	str	r3, [sp, #152]	; 0x98
  409cd6:	e888 00a0 	stmia.w	r8, {r5, r7}
  409cda:	ddf2      	ble.n	409cc2 <_svfprintf_r+0xd7a>
  409cdc:	aa25      	add	r2, sp, #148	; 0x94
  409cde:	4621      	mov	r1, r4
  409ce0:	4658      	mov	r0, fp
  409ce2:	f003 fd5b 	bl	40d79c <__ssprint_r>
  409ce6:	2800      	cmp	r0, #0
  409ce8:	f47f aa00 	bne.w	4090ec <_svfprintf_r+0x1a4>
  409cec:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  409cee:	9b26      	ldr	r3, [sp, #152]	; 0x98
  409cf0:	46c8      	mov	r8, r9
  409cf2:	e7e8      	b.n	409cc6 <_svfprintf_r+0xd7e>
  409cf4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  409cf6:	9819      	ldr	r0, [sp, #100]	; 0x64
  409cf8:	991a      	ldr	r1, [sp, #104]	; 0x68
  409cfa:	f8c8 1000 	str.w	r1, [r8]
  409cfe:	3301      	adds	r3, #1
  409d00:	4404      	add	r4, r0
  409d02:	2b07      	cmp	r3, #7
  409d04:	9427      	str	r4, [sp, #156]	; 0x9c
  409d06:	f8c8 0004 	str.w	r0, [r8, #4]
  409d0a:	9326      	str	r3, [sp, #152]	; 0x98
  409d0c:	f300 81f5 	bgt.w	40a0fa <_svfprintf_r+0x11b2>
  409d10:	f108 0808 	add.w	r8, r8, #8
  409d14:	e7ac      	b.n	409c70 <_svfprintf_r+0xd28>
  409d16:	9b07      	ldr	r3, [sp, #28]
  409d18:	07da      	lsls	r2, r3, #31
  409d1a:	f53f adfe 	bmi.w	40991a <_svfprintf_r+0x9d2>
  409d1e:	3701      	adds	r7, #1
  409d20:	3401      	adds	r4, #1
  409d22:	2301      	movs	r3, #1
  409d24:	2f07      	cmp	r7, #7
  409d26:	9427      	str	r4, [sp, #156]	; 0x9c
  409d28:	9726      	str	r7, [sp, #152]	; 0x98
  409d2a:	f8c8 6000 	str.w	r6, [r8]
  409d2e:	f8c8 3004 	str.w	r3, [r8, #4]
  409d32:	f77f ae25 	ble.w	409980 <_svfprintf_r+0xa38>
  409d36:	e74a      	b.n	409bce <_svfprintf_r+0xc86>
  409d38:	aa25      	add	r2, sp, #148	; 0x94
  409d3a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  409d3c:	980c      	ldr	r0, [sp, #48]	; 0x30
  409d3e:	f003 fd2d 	bl	40d79c <__ssprint_r>
  409d42:	2800      	cmp	r0, #0
  409d44:	f47f a9d2 	bne.w	4090ec <_svfprintf_r+0x1a4>
  409d48:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  409d4a:	9f26      	ldr	r7, [sp, #152]	; 0x98
  409d4c:	46c8      	mov	r8, r9
  409d4e:	e5f2      	b.n	409936 <_svfprintf_r+0x9ee>
  409d50:	aa25      	add	r2, sp, #148	; 0x94
  409d52:	990b      	ldr	r1, [sp, #44]	; 0x2c
  409d54:	980c      	ldr	r0, [sp, #48]	; 0x30
  409d56:	f003 fd21 	bl	40d79c <__ssprint_r>
  409d5a:	2800      	cmp	r0, #0
  409d5c:	f47f a9c6 	bne.w	4090ec <_svfprintf_r+0x1a4>
  409d60:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  409d62:	9f26      	ldr	r7, [sp, #152]	; 0x98
  409d64:	46c8      	mov	r8, r9
  409d66:	e5f5      	b.n	409954 <_svfprintf_r+0xa0c>
  409d68:	464e      	mov	r6, r9
  409d6a:	f7ff b9fd 	b.w	409168 <_svfprintf_r+0x220>
  409d6e:	aa25      	add	r2, sp, #148	; 0x94
  409d70:	990b      	ldr	r1, [sp, #44]	; 0x2c
  409d72:	980c      	ldr	r0, [sp, #48]	; 0x30
  409d74:	f003 fd12 	bl	40d79c <__ssprint_r>
  409d78:	2800      	cmp	r0, #0
  409d7a:	f47f a9b7 	bne.w	4090ec <_svfprintf_r+0x1a4>
  409d7e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  409d80:	46c8      	mov	r8, r9
  409d82:	f7ff ba72 	b.w	40926a <_svfprintf_r+0x322>
  409d86:	9c15      	ldr	r4, [sp, #84]	; 0x54
  409d88:	4622      	mov	r2, r4
  409d8a:	4620      	mov	r0, r4
  409d8c:	9c14      	ldr	r4, [sp, #80]	; 0x50
  409d8e:	4623      	mov	r3, r4
  409d90:	4621      	mov	r1, r4
  409d92:	f003 ff4f 	bl	40dc34 <__aeabi_dcmpun>
  409d96:	2800      	cmp	r0, #0
  409d98:	f040 8286 	bne.w	40a2a8 <_svfprintf_r+0x1360>
  409d9c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  409d9e:	3301      	adds	r3, #1
  409da0:	9b11      	ldr	r3, [sp, #68]	; 0x44
  409da2:	f023 0320 	bic.w	r3, r3, #32
  409da6:	930e      	str	r3, [sp, #56]	; 0x38
  409da8:	f000 81e2 	beq.w	40a170 <_svfprintf_r+0x1228>
  409dac:	2b47      	cmp	r3, #71	; 0x47
  409dae:	f000 811e 	beq.w	409fee <_svfprintf_r+0x10a6>
  409db2:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  409db6:	9307      	str	r3, [sp, #28]
  409db8:	9b14      	ldr	r3, [sp, #80]	; 0x50
  409dba:	1e1f      	subs	r7, r3, #0
  409dbc:	9b15      	ldr	r3, [sp, #84]	; 0x54
  409dbe:	9308      	str	r3, [sp, #32]
  409dc0:	bfbb      	ittet	lt
  409dc2:	463b      	movlt	r3, r7
  409dc4:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  409dc8:	2300      	movge	r3, #0
  409dca:	232d      	movlt	r3, #45	; 0x2d
  409dcc:	9310      	str	r3, [sp, #64]	; 0x40
  409dce:	9b11      	ldr	r3, [sp, #68]	; 0x44
  409dd0:	2b66      	cmp	r3, #102	; 0x66
  409dd2:	f000 81bb 	beq.w	40a14c <_svfprintf_r+0x1204>
  409dd6:	2b46      	cmp	r3, #70	; 0x46
  409dd8:	f000 80df 	beq.w	409f9a <_svfprintf_r+0x1052>
  409ddc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  409dde:	9a08      	ldr	r2, [sp, #32]
  409de0:	2b45      	cmp	r3, #69	; 0x45
  409de2:	bf0c      	ite	eq
  409de4:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  409de6:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  409de8:	a823      	add	r0, sp, #140	; 0x8c
  409dea:	a920      	add	r1, sp, #128	; 0x80
  409dec:	bf08      	it	eq
  409dee:	1c5d      	addeq	r5, r3, #1
  409df0:	9004      	str	r0, [sp, #16]
  409df2:	9103      	str	r1, [sp, #12]
  409df4:	a81f      	add	r0, sp, #124	; 0x7c
  409df6:	2102      	movs	r1, #2
  409df8:	463b      	mov	r3, r7
  409dfa:	9002      	str	r0, [sp, #8]
  409dfc:	9501      	str	r5, [sp, #4]
  409dfe:	9100      	str	r1, [sp, #0]
  409e00:	980c      	ldr	r0, [sp, #48]	; 0x30
  409e02:	f001 faa1 	bl	40b348 <_dtoa_r>
  409e06:	9b11      	ldr	r3, [sp, #68]	; 0x44
  409e08:	2b67      	cmp	r3, #103	; 0x67
  409e0a:	4606      	mov	r6, r0
  409e0c:	f040 81e0 	bne.w	40a1d0 <_svfprintf_r+0x1288>
  409e10:	f01b 0f01 	tst.w	fp, #1
  409e14:	f000 8246 	beq.w	40a2a4 <_svfprintf_r+0x135c>
  409e18:	1974      	adds	r4, r6, r5
  409e1a:	9a16      	ldr	r2, [sp, #88]	; 0x58
  409e1c:	9808      	ldr	r0, [sp, #32]
  409e1e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  409e20:	4639      	mov	r1, r7
  409e22:	f7fd ff59 	bl	407cd8 <__aeabi_dcmpeq>
  409e26:	2800      	cmp	r0, #0
  409e28:	f040 8165 	bne.w	40a0f6 <_svfprintf_r+0x11ae>
  409e2c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  409e2e:	42a3      	cmp	r3, r4
  409e30:	d206      	bcs.n	409e40 <_svfprintf_r+0xef8>
  409e32:	2130      	movs	r1, #48	; 0x30
  409e34:	1c5a      	adds	r2, r3, #1
  409e36:	9223      	str	r2, [sp, #140]	; 0x8c
  409e38:	7019      	strb	r1, [r3, #0]
  409e3a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  409e3c:	429c      	cmp	r4, r3
  409e3e:	d8f9      	bhi.n	409e34 <_svfprintf_r+0xeec>
  409e40:	1b9b      	subs	r3, r3, r6
  409e42:	9313      	str	r3, [sp, #76]	; 0x4c
  409e44:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  409e46:	2b47      	cmp	r3, #71	; 0x47
  409e48:	f000 80e9 	beq.w	40a01e <_svfprintf_r+0x10d6>
  409e4c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  409e4e:	2b65      	cmp	r3, #101	; 0x65
  409e50:	f340 81cd 	ble.w	40a1ee <_svfprintf_r+0x12a6>
  409e54:	9b11      	ldr	r3, [sp, #68]	; 0x44
  409e56:	2b66      	cmp	r3, #102	; 0x66
  409e58:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  409e5a:	9312      	str	r3, [sp, #72]	; 0x48
  409e5c:	f000 819e 	beq.w	40a19c <_svfprintf_r+0x1254>
  409e60:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  409e62:	9a12      	ldr	r2, [sp, #72]	; 0x48
  409e64:	4619      	mov	r1, r3
  409e66:	4291      	cmp	r1, r2
  409e68:	f300 818a 	bgt.w	40a180 <_svfprintf_r+0x1238>
  409e6c:	f01b 0f01 	tst.w	fp, #1
  409e70:	f040 8213 	bne.w	40a29a <_svfprintf_r+0x1352>
  409e74:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  409e78:	9308      	str	r3, [sp, #32]
  409e7a:	2367      	movs	r3, #103	; 0x67
  409e7c:	920e      	str	r2, [sp, #56]	; 0x38
  409e7e:	9311      	str	r3, [sp, #68]	; 0x44
  409e80:	9b10      	ldr	r3, [sp, #64]	; 0x40
  409e82:	2b00      	cmp	r3, #0
  409e84:	f040 80c4 	bne.w	40a010 <_svfprintf_r+0x10c8>
  409e88:	930a      	str	r3, [sp, #40]	; 0x28
  409e8a:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  409e8e:	f7ff b973 	b.w	409178 <_svfprintf_r+0x230>
  409e92:	4635      	mov	r5, r6
  409e94:	460c      	mov	r4, r1
  409e96:	4646      	mov	r6, r8
  409e98:	4690      	mov	r8, r2
  409e9a:	3301      	adds	r3, #1
  409e9c:	443c      	add	r4, r7
  409e9e:	2b07      	cmp	r3, #7
  409ea0:	9427      	str	r4, [sp, #156]	; 0x9c
  409ea2:	9326      	str	r3, [sp, #152]	; 0x98
  409ea4:	e888 00a0 	stmia.w	r8, {r5, r7}
  409ea8:	f73f aed1 	bgt.w	409c4e <_svfprintf_r+0xd06>
  409eac:	f108 0808 	add.w	r8, r8, #8
  409eb0:	e6d7      	b.n	409c62 <_svfprintf_r+0xd1a>
  409eb2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  409eb4:	6813      	ldr	r3, [r2, #0]
  409eb6:	3204      	adds	r2, #4
  409eb8:	920f      	str	r2, [sp, #60]	; 0x3c
  409eba:	9a09      	ldr	r2, [sp, #36]	; 0x24
  409ebc:	601a      	str	r2, [r3, #0]
  409ebe:	f7ff b86a 	b.w	408f96 <_svfprintf_r+0x4e>
  409ec2:	aa25      	add	r2, sp, #148	; 0x94
  409ec4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  409ec6:	980c      	ldr	r0, [sp, #48]	; 0x30
  409ec8:	f003 fc68 	bl	40d79c <__ssprint_r>
  409ecc:	2800      	cmp	r0, #0
  409ece:	f47f a90d 	bne.w	4090ec <_svfprintf_r+0x1a4>
  409ed2:	46c8      	mov	r8, r9
  409ed4:	e48d      	b.n	4097f2 <_svfprintf_r+0x8aa>
  409ed6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  409ed8:	4a27      	ldr	r2, [pc, #156]	; (409f78 <_svfprintf_r+0x1030>)
  409eda:	f8c8 2000 	str.w	r2, [r8]
  409ede:	3301      	adds	r3, #1
  409ee0:	3401      	adds	r4, #1
  409ee2:	2201      	movs	r2, #1
  409ee4:	2b07      	cmp	r3, #7
  409ee6:	9427      	str	r4, [sp, #156]	; 0x9c
  409ee8:	9326      	str	r3, [sp, #152]	; 0x98
  409eea:	f8c8 2004 	str.w	r2, [r8, #4]
  409eee:	dc72      	bgt.n	409fd6 <_svfprintf_r+0x108e>
  409ef0:	f108 0808 	add.w	r8, r8, #8
  409ef4:	b929      	cbnz	r1, 409f02 <_svfprintf_r+0xfba>
  409ef6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  409ef8:	b91b      	cbnz	r3, 409f02 <_svfprintf_r+0xfba>
  409efa:	9b07      	ldr	r3, [sp, #28]
  409efc:	07d8      	lsls	r0, r3, #31
  409efe:	f57f aa03 	bpl.w	409308 <_svfprintf_r+0x3c0>
  409f02:	9b26      	ldr	r3, [sp, #152]	; 0x98
  409f04:	9819      	ldr	r0, [sp, #100]	; 0x64
  409f06:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  409f08:	f8c8 2000 	str.w	r2, [r8]
  409f0c:	3301      	adds	r3, #1
  409f0e:	4602      	mov	r2, r0
  409f10:	4422      	add	r2, r4
  409f12:	2b07      	cmp	r3, #7
  409f14:	9227      	str	r2, [sp, #156]	; 0x9c
  409f16:	f8c8 0004 	str.w	r0, [r8, #4]
  409f1a:	9326      	str	r3, [sp, #152]	; 0x98
  409f1c:	f300 818d 	bgt.w	40a23a <_svfprintf_r+0x12f2>
  409f20:	f108 0808 	add.w	r8, r8, #8
  409f24:	2900      	cmp	r1, #0
  409f26:	f2c0 8165 	blt.w	40a1f4 <_svfprintf_r+0x12ac>
  409f2a:	9913      	ldr	r1, [sp, #76]	; 0x4c
  409f2c:	f8c8 6000 	str.w	r6, [r8]
  409f30:	3301      	adds	r3, #1
  409f32:	188c      	adds	r4, r1, r2
  409f34:	2b07      	cmp	r3, #7
  409f36:	9427      	str	r4, [sp, #156]	; 0x9c
  409f38:	9326      	str	r3, [sp, #152]	; 0x98
  409f3a:	f8c8 1004 	str.w	r1, [r8, #4]
  409f3e:	f77f a9e1 	ble.w	409304 <_svfprintf_r+0x3bc>
  409f42:	e52c      	b.n	40999e <_svfprintf_r+0xa56>
  409f44:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  409f46:	9909      	ldr	r1, [sp, #36]	; 0x24
  409f48:	6813      	ldr	r3, [r2, #0]
  409f4a:	17cd      	asrs	r5, r1, #31
  409f4c:	4608      	mov	r0, r1
  409f4e:	3204      	adds	r2, #4
  409f50:	4629      	mov	r1, r5
  409f52:	920f      	str	r2, [sp, #60]	; 0x3c
  409f54:	e9c3 0100 	strd	r0, r1, [r3]
  409f58:	f7ff b81d 	b.w	408f96 <_svfprintf_r+0x4e>
  409f5c:	aa25      	add	r2, sp, #148	; 0x94
  409f5e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  409f60:	980c      	ldr	r0, [sp, #48]	; 0x30
  409f62:	f003 fc1b 	bl	40d79c <__ssprint_r>
  409f66:	2800      	cmp	r0, #0
  409f68:	f47f a8c0 	bne.w	4090ec <_svfprintf_r+0x1a4>
  409f6c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  409f6e:	46c8      	mov	r8, r9
  409f70:	e458      	b.n	409824 <_svfprintf_r+0x8dc>
  409f72:	bf00      	nop
  409f74:	0040f690 	.word	0x0040f690
  409f78:	0040f67c 	.word	0x0040f67c
  409f7c:	2140      	movs	r1, #64	; 0x40
  409f7e:	980c      	ldr	r0, [sp, #48]	; 0x30
  409f80:	f7fe fad2 	bl	408528 <_malloc_r>
  409f84:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  409f86:	6010      	str	r0, [r2, #0]
  409f88:	6110      	str	r0, [r2, #16]
  409f8a:	2800      	cmp	r0, #0
  409f8c:	f000 81f2 	beq.w	40a374 <_svfprintf_r+0x142c>
  409f90:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  409f92:	2340      	movs	r3, #64	; 0x40
  409f94:	6153      	str	r3, [r2, #20]
  409f96:	f7fe bfee 	b.w	408f76 <_svfprintf_r+0x2e>
  409f9a:	a823      	add	r0, sp, #140	; 0x8c
  409f9c:	a920      	add	r1, sp, #128	; 0x80
  409f9e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  409fa0:	9004      	str	r0, [sp, #16]
  409fa2:	9103      	str	r1, [sp, #12]
  409fa4:	a81f      	add	r0, sp, #124	; 0x7c
  409fa6:	2103      	movs	r1, #3
  409fa8:	9002      	str	r0, [sp, #8]
  409faa:	9a08      	ldr	r2, [sp, #32]
  409fac:	9401      	str	r4, [sp, #4]
  409fae:	463b      	mov	r3, r7
  409fb0:	9100      	str	r1, [sp, #0]
  409fb2:	980c      	ldr	r0, [sp, #48]	; 0x30
  409fb4:	f001 f9c8 	bl	40b348 <_dtoa_r>
  409fb8:	4625      	mov	r5, r4
  409fba:	4606      	mov	r6, r0
  409fbc:	9b11      	ldr	r3, [sp, #68]	; 0x44
  409fbe:	2b46      	cmp	r3, #70	; 0x46
  409fc0:	eb06 0405 	add.w	r4, r6, r5
  409fc4:	f47f af29 	bne.w	409e1a <_svfprintf_r+0xed2>
  409fc8:	7833      	ldrb	r3, [r6, #0]
  409fca:	2b30      	cmp	r3, #48	; 0x30
  409fcc:	f000 8178 	beq.w	40a2c0 <_svfprintf_r+0x1378>
  409fd0:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  409fd2:	442c      	add	r4, r5
  409fd4:	e721      	b.n	409e1a <_svfprintf_r+0xed2>
  409fd6:	aa25      	add	r2, sp, #148	; 0x94
  409fd8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  409fda:	980c      	ldr	r0, [sp, #48]	; 0x30
  409fdc:	f003 fbde 	bl	40d79c <__ssprint_r>
  409fe0:	2800      	cmp	r0, #0
  409fe2:	f47f a883 	bne.w	4090ec <_svfprintf_r+0x1a4>
  409fe6:	991f      	ldr	r1, [sp, #124]	; 0x7c
  409fe8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  409fea:	46c8      	mov	r8, r9
  409fec:	e782      	b.n	409ef4 <_svfprintf_r+0xfac>
  409fee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  409ff0:	2b00      	cmp	r3, #0
  409ff2:	bf08      	it	eq
  409ff4:	2301      	moveq	r3, #1
  409ff6:	930a      	str	r3, [sp, #40]	; 0x28
  409ff8:	e6db      	b.n	409db2 <_svfprintf_r+0xe6a>
  409ffa:	4630      	mov	r0, r6
  409ffc:	940a      	str	r4, [sp, #40]	; 0x28
  409ffe:	f003 fb5f 	bl	40d6c0 <strlen>
  40a002:	950f      	str	r5, [sp, #60]	; 0x3c
  40a004:	900e      	str	r0, [sp, #56]	; 0x38
  40a006:	f8cd b01c 	str.w	fp, [sp, #28]
  40a00a:	4603      	mov	r3, r0
  40a00c:	f7ff b9f9 	b.w	409402 <_svfprintf_r+0x4ba>
  40a010:	272d      	movs	r7, #45	; 0x2d
  40a012:	2300      	movs	r3, #0
  40a014:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  40a018:	930a      	str	r3, [sp, #40]	; 0x28
  40a01a:	f7ff b8ae 	b.w	40917a <_svfprintf_r+0x232>
  40a01e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  40a020:	9312      	str	r3, [sp, #72]	; 0x48
  40a022:	461a      	mov	r2, r3
  40a024:	3303      	adds	r3, #3
  40a026:	db04      	blt.n	40a032 <_svfprintf_r+0x10ea>
  40a028:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40a02a:	4619      	mov	r1, r3
  40a02c:	4291      	cmp	r1, r2
  40a02e:	f6bf af17 	bge.w	409e60 <_svfprintf_r+0xf18>
  40a032:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40a034:	3b02      	subs	r3, #2
  40a036:	9311      	str	r3, [sp, #68]	; 0x44
  40a038:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  40a03c:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  40a040:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40a042:	3b01      	subs	r3, #1
  40a044:	2b00      	cmp	r3, #0
  40a046:	931f      	str	r3, [sp, #124]	; 0x7c
  40a048:	bfbd      	ittte	lt
  40a04a:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  40a04c:	f1c3 0301 	rsblt	r3, r3, #1
  40a050:	222d      	movlt	r2, #45	; 0x2d
  40a052:	222b      	movge	r2, #43	; 0x2b
  40a054:	2b09      	cmp	r3, #9
  40a056:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  40a05a:	f340 8116 	ble.w	40a28a <_svfprintf_r+0x1342>
  40a05e:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  40a062:	4620      	mov	r0, r4
  40a064:	4dab      	ldr	r5, [pc, #684]	; (40a314 <_svfprintf_r+0x13cc>)
  40a066:	e000      	b.n	40a06a <_svfprintf_r+0x1122>
  40a068:	4610      	mov	r0, r2
  40a06a:	fb85 1203 	smull	r1, r2, r5, r3
  40a06e:	17d9      	asrs	r1, r3, #31
  40a070:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  40a074:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  40a078:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  40a07c:	3230      	adds	r2, #48	; 0x30
  40a07e:	2909      	cmp	r1, #9
  40a080:	f800 2c01 	strb.w	r2, [r0, #-1]
  40a084:	460b      	mov	r3, r1
  40a086:	f100 32ff 	add.w	r2, r0, #4294967295
  40a08a:	dced      	bgt.n	40a068 <_svfprintf_r+0x1120>
  40a08c:	3330      	adds	r3, #48	; 0x30
  40a08e:	3802      	subs	r0, #2
  40a090:	b2d9      	uxtb	r1, r3
  40a092:	4284      	cmp	r4, r0
  40a094:	f802 1c01 	strb.w	r1, [r2, #-1]
  40a098:	f240 8165 	bls.w	40a366 <_svfprintf_r+0x141e>
  40a09c:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  40a0a0:	4613      	mov	r3, r2
  40a0a2:	e001      	b.n	40a0a8 <_svfprintf_r+0x1160>
  40a0a4:	f813 1b01 	ldrb.w	r1, [r3], #1
  40a0a8:	f800 1b01 	strb.w	r1, [r0], #1
  40a0ac:	42a3      	cmp	r3, r4
  40a0ae:	d1f9      	bne.n	40a0a4 <_svfprintf_r+0x115c>
  40a0b0:	3301      	adds	r3, #1
  40a0b2:	1a9b      	subs	r3, r3, r2
  40a0b4:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  40a0b8:	4413      	add	r3, r2
  40a0ba:	aa21      	add	r2, sp, #132	; 0x84
  40a0bc:	1a9b      	subs	r3, r3, r2
  40a0be:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  40a0c0:	931b      	str	r3, [sp, #108]	; 0x6c
  40a0c2:	2a01      	cmp	r2, #1
  40a0c4:	4413      	add	r3, r2
  40a0c6:	930e      	str	r3, [sp, #56]	; 0x38
  40a0c8:	f340 8119 	ble.w	40a2fe <_svfprintf_r+0x13b6>
  40a0cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40a0ce:	9a19      	ldr	r2, [sp, #100]	; 0x64
  40a0d0:	4413      	add	r3, r2
  40a0d2:	930e      	str	r3, [sp, #56]	; 0x38
  40a0d4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40a0d8:	9308      	str	r3, [sp, #32]
  40a0da:	2300      	movs	r3, #0
  40a0dc:	9312      	str	r3, [sp, #72]	; 0x48
  40a0de:	e6cf      	b.n	409e80 <_svfprintf_r+0xf38>
  40a0e0:	aa25      	add	r2, sp, #148	; 0x94
  40a0e2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40a0e4:	980c      	ldr	r0, [sp, #48]	; 0x30
  40a0e6:	f003 fb59 	bl	40d79c <__ssprint_r>
  40a0ea:	2800      	cmp	r0, #0
  40a0ec:	f47e affe 	bne.w	4090ec <_svfprintf_r+0x1a4>
  40a0f0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40a0f2:	46c8      	mov	r8, r9
  40a0f4:	e4d7      	b.n	409aa6 <_svfprintf_r+0xb5e>
  40a0f6:	4623      	mov	r3, r4
  40a0f8:	e6a2      	b.n	409e40 <_svfprintf_r+0xef8>
  40a0fa:	aa25      	add	r2, sp, #148	; 0x94
  40a0fc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40a0fe:	980c      	ldr	r0, [sp, #48]	; 0x30
  40a100:	f003 fb4c 	bl	40d79c <__ssprint_r>
  40a104:	2800      	cmp	r0, #0
  40a106:	f47e aff1 	bne.w	4090ec <_svfprintf_r+0x1a4>
  40a10a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  40a10c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40a10e:	46c8      	mov	r8, r9
  40a110:	e5ae      	b.n	409c70 <_svfprintf_r+0xd28>
  40a112:	aa25      	add	r2, sp, #148	; 0x94
  40a114:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40a116:	980c      	ldr	r0, [sp, #48]	; 0x30
  40a118:	f003 fb40 	bl	40d79c <__ssprint_r>
  40a11c:	2800      	cmp	r0, #0
  40a11e:	f47e afe5 	bne.w	4090ec <_svfprintf_r+0x1a4>
  40a122:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  40a124:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40a126:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40a128:	1a9a      	subs	r2, r3, r2
  40a12a:	46c8      	mov	r8, r9
  40a12c:	e5b8      	b.n	409ca0 <_svfprintf_r+0xd58>
  40a12e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40a130:	9612      	str	r6, [sp, #72]	; 0x48
  40a132:	2b06      	cmp	r3, #6
  40a134:	bf28      	it	cs
  40a136:	2306      	movcs	r3, #6
  40a138:	960a      	str	r6, [sp, #40]	; 0x28
  40a13a:	4637      	mov	r7, r6
  40a13c:	9308      	str	r3, [sp, #32]
  40a13e:	950f      	str	r5, [sp, #60]	; 0x3c
  40a140:	f8cd b01c 	str.w	fp, [sp, #28]
  40a144:	930e      	str	r3, [sp, #56]	; 0x38
  40a146:	4e74      	ldr	r6, [pc, #464]	; (40a318 <_svfprintf_r+0x13d0>)
  40a148:	f7ff b816 	b.w	409178 <_svfprintf_r+0x230>
  40a14c:	a823      	add	r0, sp, #140	; 0x8c
  40a14e:	a920      	add	r1, sp, #128	; 0x80
  40a150:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  40a152:	9004      	str	r0, [sp, #16]
  40a154:	9103      	str	r1, [sp, #12]
  40a156:	a81f      	add	r0, sp, #124	; 0x7c
  40a158:	2103      	movs	r1, #3
  40a15a:	9002      	str	r0, [sp, #8]
  40a15c:	9a08      	ldr	r2, [sp, #32]
  40a15e:	9501      	str	r5, [sp, #4]
  40a160:	463b      	mov	r3, r7
  40a162:	9100      	str	r1, [sp, #0]
  40a164:	980c      	ldr	r0, [sp, #48]	; 0x30
  40a166:	f001 f8ef 	bl	40b348 <_dtoa_r>
  40a16a:	4606      	mov	r6, r0
  40a16c:	1944      	adds	r4, r0, r5
  40a16e:	e72b      	b.n	409fc8 <_svfprintf_r+0x1080>
  40a170:	2306      	movs	r3, #6
  40a172:	930a      	str	r3, [sp, #40]	; 0x28
  40a174:	e61d      	b.n	409db2 <_svfprintf_r+0xe6a>
  40a176:	272d      	movs	r7, #45	; 0x2d
  40a178:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  40a17c:	f7ff bacd 	b.w	40971a <_svfprintf_r+0x7d2>
  40a180:	9a19      	ldr	r2, [sp, #100]	; 0x64
  40a182:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40a184:	4413      	add	r3, r2
  40a186:	9a12      	ldr	r2, [sp, #72]	; 0x48
  40a188:	930e      	str	r3, [sp, #56]	; 0x38
  40a18a:	2a00      	cmp	r2, #0
  40a18c:	f340 80b0 	ble.w	40a2f0 <_svfprintf_r+0x13a8>
  40a190:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40a194:	9308      	str	r3, [sp, #32]
  40a196:	2367      	movs	r3, #103	; 0x67
  40a198:	9311      	str	r3, [sp, #68]	; 0x44
  40a19a:	e671      	b.n	409e80 <_svfprintf_r+0xf38>
  40a19c:	2b00      	cmp	r3, #0
  40a19e:	f340 80c3 	ble.w	40a328 <_svfprintf_r+0x13e0>
  40a1a2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40a1a4:	2a00      	cmp	r2, #0
  40a1a6:	f040 8099 	bne.w	40a2dc <_svfprintf_r+0x1394>
  40a1aa:	f01b 0f01 	tst.w	fp, #1
  40a1ae:	f040 8095 	bne.w	40a2dc <_svfprintf_r+0x1394>
  40a1b2:	9308      	str	r3, [sp, #32]
  40a1b4:	930e      	str	r3, [sp, #56]	; 0x38
  40a1b6:	e663      	b.n	409e80 <_svfprintf_r+0xf38>
  40a1b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40a1ba:	9308      	str	r3, [sp, #32]
  40a1bc:	930e      	str	r3, [sp, #56]	; 0x38
  40a1be:	900a      	str	r0, [sp, #40]	; 0x28
  40a1c0:	950f      	str	r5, [sp, #60]	; 0x3c
  40a1c2:	f8cd b01c 	str.w	fp, [sp, #28]
  40a1c6:	9012      	str	r0, [sp, #72]	; 0x48
  40a1c8:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40a1cc:	f7fe bfd4 	b.w	409178 <_svfprintf_r+0x230>
  40a1d0:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40a1d2:	2b47      	cmp	r3, #71	; 0x47
  40a1d4:	f47f ae20 	bne.w	409e18 <_svfprintf_r+0xed0>
  40a1d8:	f01b 0f01 	tst.w	fp, #1
  40a1dc:	f47f aeee 	bne.w	409fbc <_svfprintf_r+0x1074>
  40a1e0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40a1e2:	1b9b      	subs	r3, r3, r6
  40a1e4:	9313      	str	r3, [sp, #76]	; 0x4c
  40a1e6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40a1e8:	2b47      	cmp	r3, #71	; 0x47
  40a1ea:	f43f af18 	beq.w	40a01e <_svfprintf_r+0x10d6>
  40a1ee:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  40a1f0:	9312      	str	r3, [sp, #72]	; 0x48
  40a1f2:	e721      	b.n	40a038 <_svfprintf_r+0x10f0>
  40a1f4:	424f      	negs	r7, r1
  40a1f6:	3110      	adds	r1, #16
  40a1f8:	4d48      	ldr	r5, [pc, #288]	; (40a31c <_svfprintf_r+0x13d4>)
  40a1fa:	da2f      	bge.n	40a25c <_svfprintf_r+0x1314>
  40a1fc:	2410      	movs	r4, #16
  40a1fe:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  40a202:	e004      	b.n	40a20e <_svfprintf_r+0x12c6>
  40a204:	f108 0808 	add.w	r8, r8, #8
  40a208:	3f10      	subs	r7, #16
  40a20a:	2f10      	cmp	r7, #16
  40a20c:	dd26      	ble.n	40a25c <_svfprintf_r+0x1314>
  40a20e:	3301      	adds	r3, #1
  40a210:	3210      	adds	r2, #16
  40a212:	2b07      	cmp	r3, #7
  40a214:	9227      	str	r2, [sp, #156]	; 0x9c
  40a216:	9326      	str	r3, [sp, #152]	; 0x98
  40a218:	f8c8 5000 	str.w	r5, [r8]
  40a21c:	f8c8 4004 	str.w	r4, [r8, #4]
  40a220:	ddf0      	ble.n	40a204 <_svfprintf_r+0x12bc>
  40a222:	aa25      	add	r2, sp, #148	; 0x94
  40a224:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40a226:	4658      	mov	r0, fp
  40a228:	f003 fab8 	bl	40d79c <__ssprint_r>
  40a22c:	2800      	cmp	r0, #0
  40a22e:	f47e af5d 	bne.w	4090ec <_svfprintf_r+0x1a4>
  40a232:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40a234:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40a236:	46c8      	mov	r8, r9
  40a238:	e7e6      	b.n	40a208 <_svfprintf_r+0x12c0>
  40a23a:	aa25      	add	r2, sp, #148	; 0x94
  40a23c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40a23e:	980c      	ldr	r0, [sp, #48]	; 0x30
  40a240:	f003 faac 	bl	40d79c <__ssprint_r>
  40a244:	2800      	cmp	r0, #0
  40a246:	f47e af51 	bne.w	4090ec <_svfprintf_r+0x1a4>
  40a24a:	991f      	ldr	r1, [sp, #124]	; 0x7c
  40a24c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40a24e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40a250:	46c8      	mov	r8, r9
  40a252:	e667      	b.n	409f24 <_svfprintf_r+0xfdc>
  40a254:	2000      	movs	r0, #0
  40a256:	900a      	str	r0, [sp, #40]	; 0x28
  40a258:	f7fe bed0 	b.w	408ffc <_svfprintf_r+0xb4>
  40a25c:	3301      	adds	r3, #1
  40a25e:	443a      	add	r2, r7
  40a260:	2b07      	cmp	r3, #7
  40a262:	e888 00a0 	stmia.w	r8, {r5, r7}
  40a266:	9227      	str	r2, [sp, #156]	; 0x9c
  40a268:	9326      	str	r3, [sp, #152]	; 0x98
  40a26a:	f108 0808 	add.w	r8, r8, #8
  40a26e:	f77f ae5c 	ble.w	409f2a <_svfprintf_r+0xfe2>
  40a272:	aa25      	add	r2, sp, #148	; 0x94
  40a274:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40a276:	980c      	ldr	r0, [sp, #48]	; 0x30
  40a278:	f003 fa90 	bl	40d79c <__ssprint_r>
  40a27c:	2800      	cmp	r0, #0
  40a27e:	f47e af35 	bne.w	4090ec <_svfprintf_r+0x1a4>
  40a282:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40a284:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40a286:	46c8      	mov	r8, r9
  40a288:	e64f      	b.n	409f2a <_svfprintf_r+0xfe2>
  40a28a:	3330      	adds	r3, #48	; 0x30
  40a28c:	2230      	movs	r2, #48	; 0x30
  40a28e:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  40a292:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  40a296:	ab22      	add	r3, sp, #136	; 0x88
  40a298:	e70f      	b.n	40a0ba <_svfprintf_r+0x1172>
  40a29a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40a29c:	9a19      	ldr	r2, [sp, #100]	; 0x64
  40a29e:	4413      	add	r3, r2
  40a2a0:	930e      	str	r3, [sp, #56]	; 0x38
  40a2a2:	e775      	b.n	40a190 <_svfprintf_r+0x1248>
  40a2a4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40a2a6:	e5cb      	b.n	409e40 <_svfprintf_r+0xef8>
  40a2a8:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40a2aa:	4e1d      	ldr	r6, [pc, #116]	; (40a320 <_svfprintf_r+0x13d8>)
  40a2ac:	2b00      	cmp	r3, #0
  40a2ae:	bfb6      	itet	lt
  40a2b0:	272d      	movlt	r7, #45	; 0x2d
  40a2b2:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  40a2b6:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  40a2ba:	4b1a      	ldr	r3, [pc, #104]	; (40a324 <_svfprintf_r+0x13dc>)
  40a2bc:	f7ff ba2f 	b.w	40971e <_svfprintf_r+0x7d6>
  40a2c0:	9a16      	ldr	r2, [sp, #88]	; 0x58
  40a2c2:	9808      	ldr	r0, [sp, #32]
  40a2c4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  40a2c6:	4639      	mov	r1, r7
  40a2c8:	f7fd fd06 	bl	407cd8 <__aeabi_dcmpeq>
  40a2cc:	2800      	cmp	r0, #0
  40a2ce:	f47f ae7f 	bne.w	409fd0 <_svfprintf_r+0x1088>
  40a2d2:	f1c5 0501 	rsb	r5, r5, #1
  40a2d6:	951f      	str	r5, [sp, #124]	; 0x7c
  40a2d8:	442c      	add	r4, r5
  40a2da:	e59e      	b.n	409e1a <_svfprintf_r+0xed2>
  40a2dc:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40a2de:	9a19      	ldr	r2, [sp, #100]	; 0x64
  40a2e0:	4413      	add	r3, r2
  40a2e2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40a2e4:	441a      	add	r2, r3
  40a2e6:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  40a2ea:	920e      	str	r2, [sp, #56]	; 0x38
  40a2ec:	9308      	str	r3, [sp, #32]
  40a2ee:	e5c7      	b.n	409e80 <_svfprintf_r+0xf38>
  40a2f0:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40a2f2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40a2f4:	f1c3 0301 	rsb	r3, r3, #1
  40a2f8:	441a      	add	r2, r3
  40a2fa:	4613      	mov	r3, r2
  40a2fc:	e7d0      	b.n	40a2a0 <_svfprintf_r+0x1358>
  40a2fe:	f01b 0301 	ands.w	r3, fp, #1
  40a302:	9312      	str	r3, [sp, #72]	; 0x48
  40a304:	f47f aee2 	bne.w	40a0cc <_svfprintf_r+0x1184>
  40a308:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40a30a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40a30e:	9308      	str	r3, [sp, #32]
  40a310:	e5b6      	b.n	409e80 <_svfprintf_r+0xf38>
  40a312:	bf00      	nop
  40a314:	66666667 	.word	0x66666667
  40a318:	0040f674 	.word	0x0040f674
  40a31c:	0040f690 	.word	0x0040f690
  40a320:	0040f648 	.word	0x0040f648
  40a324:	0040f644 	.word	0x0040f644
  40a328:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40a32a:	b913      	cbnz	r3, 40a332 <_svfprintf_r+0x13ea>
  40a32c:	f01b 0f01 	tst.w	fp, #1
  40a330:	d002      	beq.n	40a338 <_svfprintf_r+0x13f0>
  40a332:	9b19      	ldr	r3, [sp, #100]	; 0x64
  40a334:	3301      	adds	r3, #1
  40a336:	e7d4      	b.n	40a2e2 <_svfprintf_r+0x139a>
  40a338:	2301      	movs	r3, #1
  40a33a:	e73a      	b.n	40a1b2 <_svfprintf_r+0x126a>
  40a33c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40a33e:	f89a 3001 	ldrb.w	r3, [sl, #1]
  40a342:	6828      	ldr	r0, [r5, #0]
  40a344:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  40a348:	900a      	str	r0, [sp, #40]	; 0x28
  40a34a:	4628      	mov	r0, r5
  40a34c:	3004      	adds	r0, #4
  40a34e:	46a2      	mov	sl, r4
  40a350:	900f      	str	r0, [sp, #60]	; 0x3c
  40a352:	f7fe be51 	b.w	408ff8 <_svfprintf_r+0xb0>
  40a356:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40a35a:	f7ff b867 	b.w	40942c <_svfprintf_r+0x4e4>
  40a35e:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40a362:	f7ff ba15 	b.w	409790 <_svfprintf_r+0x848>
  40a366:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  40a36a:	e6a6      	b.n	40a0ba <_svfprintf_r+0x1172>
  40a36c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40a370:	f7ff b8eb 	b.w	40954a <_svfprintf_r+0x602>
  40a374:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  40a376:	230c      	movs	r3, #12
  40a378:	6013      	str	r3, [r2, #0]
  40a37a:	f04f 33ff 	mov.w	r3, #4294967295
  40a37e:	9309      	str	r3, [sp, #36]	; 0x24
  40a380:	f7fe bebd 	b.w	4090fe <_svfprintf_r+0x1b6>
  40a384:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40a388:	f7ff b99a 	b.w	4096c0 <_svfprintf_r+0x778>
  40a38c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40a390:	f7ff b976 	b.w	409680 <_svfprintf_r+0x738>
  40a394:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40a398:	f7ff b959 	b.w	40964e <_svfprintf_r+0x706>
  40a39c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40a3a0:	f7ff b912 	b.w	4095c8 <_svfprintf_r+0x680>

0040a3a4 <__sprint_r.part.0>:
  40a3a4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40a3a8:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  40a3aa:	049c      	lsls	r4, r3, #18
  40a3ac:	4693      	mov	fp, r2
  40a3ae:	d52f      	bpl.n	40a410 <__sprint_r.part.0+0x6c>
  40a3b0:	6893      	ldr	r3, [r2, #8]
  40a3b2:	6812      	ldr	r2, [r2, #0]
  40a3b4:	b353      	cbz	r3, 40a40c <__sprint_r.part.0+0x68>
  40a3b6:	460e      	mov	r6, r1
  40a3b8:	4607      	mov	r7, r0
  40a3ba:	f102 0908 	add.w	r9, r2, #8
  40a3be:	e919 0420 	ldmdb	r9, {r5, sl}
  40a3c2:	ea5f 089a 	movs.w	r8, sl, lsr #2
  40a3c6:	d017      	beq.n	40a3f8 <__sprint_r.part.0+0x54>
  40a3c8:	3d04      	subs	r5, #4
  40a3ca:	2400      	movs	r4, #0
  40a3cc:	e001      	b.n	40a3d2 <__sprint_r.part.0+0x2e>
  40a3ce:	45a0      	cmp	r8, r4
  40a3d0:	d010      	beq.n	40a3f4 <__sprint_r.part.0+0x50>
  40a3d2:	4632      	mov	r2, r6
  40a3d4:	f855 1f04 	ldr.w	r1, [r5, #4]!
  40a3d8:	4638      	mov	r0, r7
  40a3da:	f002 f879 	bl	40c4d0 <_fputwc_r>
  40a3de:	1c43      	adds	r3, r0, #1
  40a3e0:	f104 0401 	add.w	r4, r4, #1
  40a3e4:	d1f3      	bne.n	40a3ce <__sprint_r.part.0+0x2a>
  40a3e6:	2300      	movs	r3, #0
  40a3e8:	f8cb 3008 	str.w	r3, [fp, #8]
  40a3ec:	f8cb 3004 	str.w	r3, [fp, #4]
  40a3f0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40a3f4:	f8db 3008 	ldr.w	r3, [fp, #8]
  40a3f8:	f02a 0a03 	bic.w	sl, sl, #3
  40a3fc:	eba3 030a 	sub.w	r3, r3, sl
  40a400:	f8cb 3008 	str.w	r3, [fp, #8]
  40a404:	f109 0908 	add.w	r9, r9, #8
  40a408:	2b00      	cmp	r3, #0
  40a40a:	d1d8      	bne.n	40a3be <__sprint_r.part.0+0x1a>
  40a40c:	2000      	movs	r0, #0
  40a40e:	e7ea      	b.n	40a3e6 <__sprint_r.part.0+0x42>
  40a410:	f002 f9c8 	bl	40c7a4 <__sfvwrite_r>
  40a414:	2300      	movs	r3, #0
  40a416:	f8cb 3008 	str.w	r3, [fp, #8]
  40a41a:	f8cb 3004 	str.w	r3, [fp, #4]
  40a41e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40a422:	bf00      	nop

0040a424 <_vfiprintf_r>:
  40a424:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40a428:	b0ad      	sub	sp, #180	; 0xb4
  40a42a:	461d      	mov	r5, r3
  40a42c:	468b      	mov	fp, r1
  40a42e:	4690      	mov	r8, r2
  40a430:	9307      	str	r3, [sp, #28]
  40a432:	9006      	str	r0, [sp, #24]
  40a434:	b118      	cbz	r0, 40a43e <_vfiprintf_r+0x1a>
  40a436:	6b83      	ldr	r3, [r0, #56]	; 0x38
  40a438:	2b00      	cmp	r3, #0
  40a43a:	f000 80f3 	beq.w	40a624 <_vfiprintf_r+0x200>
  40a43e:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  40a442:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
  40a446:	07df      	lsls	r7, r3, #31
  40a448:	b281      	uxth	r1, r0
  40a44a:	d402      	bmi.n	40a452 <_vfiprintf_r+0x2e>
  40a44c:	058e      	lsls	r6, r1, #22
  40a44e:	f140 80fc 	bpl.w	40a64a <_vfiprintf_r+0x226>
  40a452:	048c      	lsls	r4, r1, #18
  40a454:	d40a      	bmi.n	40a46c <_vfiprintf_r+0x48>
  40a456:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  40a45a:	f440 5100 	orr.w	r1, r0, #8192	; 0x2000
  40a45e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  40a462:	f8ab 100c 	strh.w	r1, [fp, #12]
  40a466:	f8cb 3064 	str.w	r3, [fp, #100]	; 0x64
  40a46a:	b289      	uxth	r1, r1
  40a46c:	0708      	lsls	r0, r1, #28
  40a46e:	f140 80b3 	bpl.w	40a5d8 <_vfiprintf_r+0x1b4>
  40a472:	f8db 3010 	ldr.w	r3, [fp, #16]
  40a476:	2b00      	cmp	r3, #0
  40a478:	f000 80ae 	beq.w	40a5d8 <_vfiprintf_r+0x1b4>
  40a47c:	f001 031a 	and.w	r3, r1, #26
  40a480:	2b0a      	cmp	r3, #10
  40a482:	f000 80b5 	beq.w	40a5f0 <_vfiprintf_r+0x1cc>
  40a486:	2300      	movs	r3, #0
  40a488:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  40a48c:	930b      	str	r3, [sp, #44]	; 0x2c
  40a48e:	9311      	str	r3, [sp, #68]	; 0x44
  40a490:	9310      	str	r3, [sp, #64]	; 0x40
  40a492:	9303      	str	r3, [sp, #12]
  40a494:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  40a498:	46ca      	mov	sl, r9
  40a49a:	f8cd b010 	str.w	fp, [sp, #16]
  40a49e:	f898 3000 	ldrb.w	r3, [r8]
  40a4a2:	4644      	mov	r4, r8
  40a4a4:	b1fb      	cbz	r3, 40a4e6 <_vfiprintf_r+0xc2>
  40a4a6:	2b25      	cmp	r3, #37	; 0x25
  40a4a8:	d102      	bne.n	40a4b0 <_vfiprintf_r+0x8c>
  40a4aa:	e01c      	b.n	40a4e6 <_vfiprintf_r+0xc2>
  40a4ac:	2b25      	cmp	r3, #37	; 0x25
  40a4ae:	d003      	beq.n	40a4b8 <_vfiprintf_r+0x94>
  40a4b0:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  40a4b4:	2b00      	cmp	r3, #0
  40a4b6:	d1f9      	bne.n	40a4ac <_vfiprintf_r+0x88>
  40a4b8:	eba4 0508 	sub.w	r5, r4, r8
  40a4bc:	b19d      	cbz	r5, 40a4e6 <_vfiprintf_r+0xc2>
  40a4be:	9b10      	ldr	r3, [sp, #64]	; 0x40
  40a4c0:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40a4c2:	f8ca 8000 	str.w	r8, [sl]
  40a4c6:	3301      	adds	r3, #1
  40a4c8:	442a      	add	r2, r5
  40a4ca:	2b07      	cmp	r3, #7
  40a4cc:	f8ca 5004 	str.w	r5, [sl, #4]
  40a4d0:	9211      	str	r2, [sp, #68]	; 0x44
  40a4d2:	9310      	str	r3, [sp, #64]	; 0x40
  40a4d4:	dd7a      	ble.n	40a5cc <_vfiprintf_r+0x1a8>
  40a4d6:	2a00      	cmp	r2, #0
  40a4d8:	f040 84b0 	bne.w	40ae3c <_vfiprintf_r+0xa18>
  40a4dc:	9b03      	ldr	r3, [sp, #12]
  40a4de:	9210      	str	r2, [sp, #64]	; 0x40
  40a4e0:	442b      	add	r3, r5
  40a4e2:	46ca      	mov	sl, r9
  40a4e4:	9303      	str	r3, [sp, #12]
  40a4e6:	7823      	ldrb	r3, [r4, #0]
  40a4e8:	2b00      	cmp	r3, #0
  40a4ea:	f000 83e0 	beq.w	40acae <_vfiprintf_r+0x88a>
  40a4ee:	2000      	movs	r0, #0
  40a4f0:	f04f 0300 	mov.w	r3, #0
  40a4f4:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
  40a4f8:	f104 0801 	add.w	r8, r4, #1
  40a4fc:	7862      	ldrb	r2, [r4, #1]
  40a4fe:	4605      	mov	r5, r0
  40a500:	4606      	mov	r6, r0
  40a502:	4603      	mov	r3, r0
  40a504:	f04f 34ff 	mov.w	r4, #4294967295
  40a508:	f108 0801 	add.w	r8, r8, #1
  40a50c:	f1a2 0120 	sub.w	r1, r2, #32
  40a510:	2958      	cmp	r1, #88	; 0x58
  40a512:	f200 82de 	bhi.w	40aad2 <_vfiprintf_r+0x6ae>
  40a516:	e8df f011 	tbh	[pc, r1, lsl #1]
  40a51a:	0221      	.short	0x0221
  40a51c:	02dc02dc 	.word	0x02dc02dc
  40a520:	02dc0229 	.word	0x02dc0229
  40a524:	02dc02dc 	.word	0x02dc02dc
  40a528:	02dc02dc 	.word	0x02dc02dc
  40a52c:	028902dc 	.word	0x028902dc
  40a530:	02dc0295 	.word	0x02dc0295
  40a534:	02bd00a2 	.word	0x02bd00a2
  40a538:	019f02dc 	.word	0x019f02dc
  40a53c:	01a401a4 	.word	0x01a401a4
  40a540:	01a401a4 	.word	0x01a401a4
  40a544:	01a401a4 	.word	0x01a401a4
  40a548:	01a401a4 	.word	0x01a401a4
  40a54c:	02dc01a4 	.word	0x02dc01a4
  40a550:	02dc02dc 	.word	0x02dc02dc
  40a554:	02dc02dc 	.word	0x02dc02dc
  40a558:	02dc02dc 	.word	0x02dc02dc
  40a55c:	02dc02dc 	.word	0x02dc02dc
  40a560:	01b202dc 	.word	0x01b202dc
  40a564:	02dc02dc 	.word	0x02dc02dc
  40a568:	02dc02dc 	.word	0x02dc02dc
  40a56c:	02dc02dc 	.word	0x02dc02dc
  40a570:	02dc02dc 	.word	0x02dc02dc
  40a574:	02dc02dc 	.word	0x02dc02dc
  40a578:	02dc0197 	.word	0x02dc0197
  40a57c:	02dc02dc 	.word	0x02dc02dc
  40a580:	02dc02dc 	.word	0x02dc02dc
  40a584:	02dc019b 	.word	0x02dc019b
  40a588:	025302dc 	.word	0x025302dc
  40a58c:	02dc02dc 	.word	0x02dc02dc
  40a590:	02dc02dc 	.word	0x02dc02dc
  40a594:	02dc02dc 	.word	0x02dc02dc
  40a598:	02dc02dc 	.word	0x02dc02dc
  40a59c:	02dc02dc 	.word	0x02dc02dc
  40a5a0:	021b025a 	.word	0x021b025a
  40a5a4:	02dc02dc 	.word	0x02dc02dc
  40a5a8:	026e02dc 	.word	0x026e02dc
  40a5ac:	02dc021b 	.word	0x02dc021b
  40a5b0:	027302dc 	.word	0x027302dc
  40a5b4:	01f502dc 	.word	0x01f502dc
  40a5b8:	02090182 	.word	0x02090182
  40a5bc:	02dc02d7 	.word	0x02dc02d7
  40a5c0:	02dc029a 	.word	0x02dc029a
  40a5c4:	02dc00a7 	.word	0x02dc00a7
  40a5c8:	022e02dc 	.word	0x022e02dc
  40a5cc:	f10a 0a08 	add.w	sl, sl, #8
  40a5d0:	9b03      	ldr	r3, [sp, #12]
  40a5d2:	442b      	add	r3, r5
  40a5d4:	9303      	str	r3, [sp, #12]
  40a5d6:	e786      	b.n	40a4e6 <_vfiprintf_r+0xc2>
  40a5d8:	4659      	mov	r1, fp
  40a5da:	9806      	ldr	r0, [sp, #24]
  40a5dc:	f000 fdac 	bl	40b138 <__swsetup_r>
  40a5e0:	bb18      	cbnz	r0, 40a62a <_vfiprintf_r+0x206>
  40a5e2:	f8bb 100c 	ldrh.w	r1, [fp, #12]
  40a5e6:	f001 031a 	and.w	r3, r1, #26
  40a5ea:	2b0a      	cmp	r3, #10
  40a5ec:	f47f af4b 	bne.w	40a486 <_vfiprintf_r+0x62>
  40a5f0:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
  40a5f4:	2b00      	cmp	r3, #0
  40a5f6:	f6ff af46 	blt.w	40a486 <_vfiprintf_r+0x62>
  40a5fa:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  40a5fe:	07db      	lsls	r3, r3, #31
  40a600:	d405      	bmi.n	40a60e <_vfiprintf_r+0x1ea>
  40a602:	058f      	lsls	r7, r1, #22
  40a604:	d403      	bmi.n	40a60e <_vfiprintf_r+0x1ea>
  40a606:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  40a60a:	f002 fa8f 	bl	40cb2c <__retarget_lock_release_recursive>
  40a60e:	462b      	mov	r3, r5
  40a610:	4642      	mov	r2, r8
  40a612:	4659      	mov	r1, fp
  40a614:	9806      	ldr	r0, [sp, #24]
  40a616:	f000 fd4d 	bl	40b0b4 <__sbprintf>
  40a61a:	9003      	str	r0, [sp, #12]
  40a61c:	9803      	ldr	r0, [sp, #12]
  40a61e:	b02d      	add	sp, #180	; 0xb4
  40a620:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40a624:	f001 feb2 	bl	40c38c <__sinit>
  40a628:	e709      	b.n	40a43e <_vfiprintf_r+0x1a>
  40a62a:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  40a62e:	07d9      	lsls	r1, r3, #31
  40a630:	d404      	bmi.n	40a63c <_vfiprintf_r+0x218>
  40a632:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  40a636:	059a      	lsls	r2, r3, #22
  40a638:	f140 84aa 	bpl.w	40af90 <_vfiprintf_r+0xb6c>
  40a63c:	f04f 33ff 	mov.w	r3, #4294967295
  40a640:	9303      	str	r3, [sp, #12]
  40a642:	9803      	ldr	r0, [sp, #12]
  40a644:	b02d      	add	sp, #180	; 0xb4
  40a646:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40a64a:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  40a64e:	f002 fa6b 	bl	40cb28 <__retarget_lock_acquire_recursive>
  40a652:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
  40a656:	b281      	uxth	r1, r0
  40a658:	e6fb      	b.n	40a452 <_vfiprintf_r+0x2e>
  40a65a:	4276      	negs	r6, r6
  40a65c:	9207      	str	r2, [sp, #28]
  40a65e:	f043 0304 	orr.w	r3, r3, #4
  40a662:	f898 2000 	ldrb.w	r2, [r8]
  40a666:	e74f      	b.n	40a508 <_vfiprintf_r+0xe4>
  40a668:	9608      	str	r6, [sp, #32]
  40a66a:	069e      	lsls	r6, r3, #26
  40a66c:	f100 8450 	bmi.w	40af10 <_vfiprintf_r+0xaec>
  40a670:	9907      	ldr	r1, [sp, #28]
  40a672:	06dd      	lsls	r5, r3, #27
  40a674:	460a      	mov	r2, r1
  40a676:	f100 83ef 	bmi.w	40ae58 <_vfiprintf_r+0xa34>
  40a67a:	0658      	lsls	r0, r3, #25
  40a67c:	f140 83ec 	bpl.w	40ae58 <_vfiprintf_r+0xa34>
  40a680:	880e      	ldrh	r6, [r1, #0]
  40a682:	3104      	adds	r1, #4
  40a684:	2700      	movs	r7, #0
  40a686:	2201      	movs	r2, #1
  40a688:	9107      	str	r1, [sp, #28]
  40a68a:	f04f 0100 	mov.w	r1, #0
  40a68e:	f88d 1037 	strb.w	r1, [sp, #55]	; 0x37
  40a692:	2500      	movs	r5, #0
  40a694:	1c61      	adds	r1, r4, #1
  40a696:	f000 8116 	beq.w	40a8c6 <_vfiprintf_r+0x4a2>
  40a69a:	f023 0180 	bic.w	r1, r3, #128	; 0x80
  40a69e:	9102      	str	r1, [sp, #8]
  40a6a0:	ea56 0107 	orrs.w	r1, r6, r7
  40a6a4:	f040 8114 	bne.w	40a8d0 <_vfiprintf_r+0x4ac>
  40a6a8:	2c00      	cmp	r4, #0
  40a6aa:	f040 835c 	bne.w	40ad66 <_vfiprintf_r+0x942>
  40a6ae:	2a00      	cmp	r2, #0
  40a6b0:	f040 83b7 	bne.w	40ae22 <_vfiprintf_r+0x9fe>
  40a6b4:	f013 0301 	ands.w	r3, r3, #1
  40a6b8:	9305      	str	r3, [sp, #20]
  40a6ba:	f000 8457 	beq.w	40af6c <_vfiprintf_r+0xb48>
  40a6be:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
  40a6c2:	2330      	movs	r3, #48	; 0x30
  40a6c4:	f80b 3d41 	strb.w	r3, [fp, #-65]!
  40a6c8:	9b05      	ldr	r3, [sp, #20]
  40a6ca:	42a3      	cmp	r3, r4
  40a6cc:	bfb8      	it	lt
  40a6ce:	4623      	movlt	r3, r4
  40a6d0:	9301      	str	r3, [sp, #4]
  40a6d2:	b10d      	cbz	r5, 40a6d8 <_vfiprintf_r+0x2b4>
  40a6d4:	3301      	adds	r3, #1
  40a6d6:	9301      	str	r3, [sp, #4]
  40a6d8:	9b02      	ldr	r3, [sp, #8]
  40a6da:	f013 0302 	ands.w	r3, r3, #2
  40a6de:	9309      	str	r3, [sp, #36]	; 0x24
  40a6e0:	d002      	beq.n	40a6e8 <_vfiprintf_r+0x2c4>
  40a6e2:	9b01      	ldr	r3, [sp, #4]
  40a6e4:	3302      	adds	r3, #2
  40a6e6:	9301      	str	r3, [sp, #4]
  40a6e8:	9b02      	ldr	r3, [sp, #8]
  40a6ea:	f013 0384 	ands.w	r3, r3, #132	; 0x84
  40a6ee:	930a      	str	r3, [sp, #40]	; 0x28
  40a6f0:	f040 8217 	bne.w	40ab22 <_vfiprintf_r+0x6fe>
  40a6f4:	9b08      	ldr	r3, [sp, #32]
  40a6f6:	9a01      	ldr	r2, [sp, #4]
  40a6f8:	1a9d      	subs	r5, r3, r2
  40a6fa:	2d00      	cmp	r5, #0
  40a6fc:	f340 8211 	ble.w	40ab22 <_vfiprintf_r+0x6fe>
  40a700:	2d10      	cmp	r5, #16
  40a702:	f340 8490 	ble.w	40b026 <_vfiprintf_r+0xc02>
  40a706:	9b10      	ldr	r3, [sp, #64]	; 0x40
  40a708:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40a70a:	4ec4      	ldr	r6, [pc, #784]	; (40aa1c <_vfiprintf_r+0x5f8>)
  40a70c:	46d6      	mov	lr, sl
  40a70e:	2710      	movs	r7, #16
  40a710:	46a2      	mov	sl, r4
  40a712:	4619      	mov	r1, r3
  40a714:	9c06      	ldr	r4, [sp, #24]
  40a716:	e007      	b.n	40a728 <_vfiprintf_r+0x304>
  40a718:	f101 0c02 	add.w	ip, r1, #2
  40a71c:	f10e 0e08 	add.w	lr, lr, #8
  40a720:	4601      	mov	r1, r0
  40a722:	3d10      	subs	r5, #16
  40a724:	2d10      	cmp	r5, #16
  40a726:	dd11      	ble.n	40a74c <_vfiprintf_r+0x328>
  40a728:	1c48      	adds	r0, r1, #1
  40a72a:	3210      	adds	r2, #16
  40a72c:	2807      	cmp	r0, #7
  40a72e:	9211      	str	r2, [sp, #68]	; 0x44
  40a730:	e88e 00c0 	stmia.w	lr, {r6, r7}
  40a734:	9010      	str	r0, [sp, #64]	; 0x40
  40a736:	ddef      	ble.n	40a718 <_vfiprintf_r+0x2f4>
  40a738:	2a00      	cmp	r2, #0
  40a73a:	f040 81e4 	bne.w	40ab06 <_vfiprintf_r+0x6e2>
  40a73e:	3d10      	subs	r5, #16
  40a740:	2d10      	cmp	r5, #16
  40a742:	4611      	mov	r1, r2
  40a744:	f04f 0c01 	mov.w	ip, #1
  40a748:	46ce      	mov	lr, r9
  40a74a:	dced      	bgt.n	40a728 <_vfiprintf_r+0x304>
  40a74c:	4654      	mov	r4, sl
  40a74e:	4661      	mov	r1, ip
  40a750:	46f2      	mov	sl, lr
  40a752:	442a      	add	r2, r5
  40a754:	2907      	cmp	r1, #7
  40a756:	9211      	str	r2, [sp, #68]	; 0x44
  40a758:	f8ca 6000 	str.w	r6, [sl]
  40a75c:	f8ca 5004 	str.w	r5, [sl, #4]
  40a760:	9110      	str	r1, [sp, #64]	; 0x40
  40a762:	f300 82ec 	bgt.w	40ad3e <_vfiprintf_r+0x91a>
  40a766:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  40a76a:	f10a 0a08 	add.w	sl, sl, #8
  40a76e:	1c48      	adds	r0, r1, #1
  40a770:	2d00      	cmp	r5, #0
  40a772:	f040 81de 	bne.w	40ab32 <_vfiprintf_r+0x70e>
  40a776:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40a778:	2b00      	cmp	r3, #0
  40a77a:	f000 81f8 	beq.w	40ab6e <_vfiprintf_r+0x74a>
  40a77e:	3202      	adds	r2, #2
  40a780:	a90e      	add	r1, sp, #56	; 0x38
  40a782:	2302      	movs	r3, #2
  40a784:	2807      	cmp	r0, #7
  40a786:	9211      	str	r2, [sp, #68]	; 0x44
  40a788:	9010      	str	r0, [sp, #64]	; 0x40
  40a78a:	e88a 000a 	stmia.w	sl, {r1, r3}
  40a78e:	f340 81ea 	ble.w	40ab66 <_vfiprintf_r+0x742>
  40a792:	2a00      	cmp	r2, #0
  40a794:	f040 838c 	bne.w	40aeb0 <_vfiprintf_r+0xa8c>
  40a798:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40a79a:	2b80      	cmp	r3, #128	; 0x80
  40a79c:	f04f 0001 	mov.w	r0, #1
  40a7a0:	4611      	mov	r1, r2
  40a7a2:	46ca      	mov	sl, r9
  40a7a4:	f040 81e7 	bne.w	40ab76 <_vfiprintf_r+0x752>
  40a7a8:	9b08      	ldr	r3, [sp, #32]
  40a7aa:	9d01      	ldr	r5, [sp, #4]
  40a7ac:	1b5e      	subs	r6, r3, r5
  40a7ae:	2e00      	cmp	r6, #0
  40a7b0:	f340 81e1 	ble.w	40ab76 <_vfiprintf_r+0x752>
  40a7b4:	2e10      	cmp	r6, #16
  40a7b6:	4d9a      	ldr	r5, [pc, #616]	; (40aa20 <_vfiprintf_r+0x5fc>)
  40a7b8:	f340 8450 	ble.w	40b05c <_vfiprintf_r+0xc38>
  40a7bc:	46d4      	mov	ip, sl
  40a7be:	2710      	movs	r7, #16
  40a7c0:	46a2      	mov	sl, r4
  40a7c2:	9c06      	ldr	r4, [sp, #24]
  40a7c4:	e007      	b.n	40a7d6 <_vfiprintf_r+0x3b2>
  40a7c6:	f101 0e02 	add.w	lr, r1, #2
  40a7ca:	f10c 0c08 	add.w	ip, ip, #8
  40a7ce:	4601      	mov	r1, r0
  40a7d0:	3e10      	subs	r6, #16
  40a7d2:	2e10      	cmp	r6, #16
  40a7d4:	dd11      	ble.n	40a7fa <_vfiprintf_r+0x3d6>
  40a7d6:	1c48      	adds	r0, r1, #1
  40a7d8:	3210      	adds	r2, #16
  40a7da:	2807      	cmp	r0, #7
  40a7dc:	9211      	str	r2, [sp, #68]	; 0x44
  40a7de:	e88c 00a0 	stmia.w	ip, {r5, r7}
  40a7e2:	9010      	str	r0, [sp, #64]	; 0x40
  40a7e4:	ddef      	ble.n	40a7c6 <_vfiprintf_r+0x3a2>
  40a7e6:	2a00      	cmp	r2, #0
  40a7e8:	f040 829d 	bne.w	40ad26 <_vfiprintf_r+0x902>
  40a7ec:	3e10      	subs	r6, #16
  40a7ee:	2e10      	cmp	r6, #16
  40a7f0:	f04f 0e01 	mov.w	lr, #1
  40a7f4:	4611      	mov	r1, r2
  40a7f6:	46cc      	mov	ip, r9
  40a7f8:	dced      	bgt.n	40a7d6 <_vfiprintf_r+0x3b2>
  40a7fa:	4654      	mov	r4, sl
  40a7fc:	46e2      	mov	sl, ip
  40a7fe:	4432      	add	r2, r6
  40a800:	f1be 0f07 	cmp.w	lr, #7
  40a804:	9211      	str	r2, [sp, #68]	; 0x44
  40a806:	e88a 0060 	stmia.w	sl, {r5, r6}
  40a80a:	f8cd e040 	str.w	lr, [sp, #64]	; 0x40
  40a80e:	f300 8369 	bgt.w	40aee4 <_vfiprintf_r+0xac0>
  40a812:	f10a 0a08 	add.w	sl, sl, #8
  40a816:	f10e 0001 	add.w	r0, lr, #1
  40a81a:	4671      	mov	r1, lr
  40a81c:	e1ab      	b.n	40ab76 <_vfiprintf_r+0x752>
  40a81e:	9608      	str	r6, [sp, #32]
  40a820:	f013 0220 	ands.w	r2, r3, #32
  40a824:	f040 838c 	bne.w	40af40 <_vfiprintf_r+0xb1c>
  40a828:	f013 0110 	ands.w	r1, r3, #16
  40a82c:	f040 831a 	bne.w	40ae64 <_vfiprintf_r+0xa40>
  40a830:	f013 0240 	ands.w	r2, r3, #64	; 0x40
  40a834:	f000 8316 	beq.w	40ae64 <_vfiprintf_r+0xa40>
  40a838:	9807      	ldr	r0, [sp, #28]
  40a83a:	460a      	mov	r2, r1
  40a83c:	4601      	mov	r1, r0
  40a83e:	3104      	adds	r1, #4
  40a840:	8806      	ldrh	r6, [r0, #0]
  40a842:	9107      	str	r1, [sp, #28]
  40a844:	2700      	movs	r7, #0
  40a846:	e720      	b.n	40a68a <_vfiprintf_r+0x266>
  40a848:	9608      	str	r6, [sp, #32]
  40a84a:	f043 0310 	orr.w	r3, r3, #16
  40a84e:	e7e7      	b.n	40a820 <_vfiprintf_r+0x3fc>
  40a850:	9608      	str	r6, [sp, #32]
  40a852:	f043 0310 	orr.w	r3, r3, #16
  40a856:	e708      	b.n	40a66a <_vfiprintf_r+0x246>
  40a858:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40a85c:	f898 2000 	ldrb.w	r2, [r8]
  40a860:	e652      	b.n	40a508 <_vfiprintf_r+0xe4>
  40a862:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  40a866:	2600      	movs	r6, #0
  40a868:	f818 2b01 	ldrb.w	r2, [r8], #1
  40a86c:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  40a870:	eb01 0646 	add.w	r6, r1, r6, lsl #1
  40a874:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  40a878:	2909      	cmp	r1, #9
  40a87a:	d9f5      	bls.n	40a868 <_vfiprintf_r+0x444>
  40a87c:	e646      	b.n	40a50c <_vfiprintf_r+0xe8>
  40a87e:	9608      	str	r6, [sp, #32]
  40a880:	2800      	cmp	r0, #0
  40a882:	f040 8408 	bne.w	40b096 <_vfiprintf_r+0xc72>
  40a886:	f043 0310 	orr.w	r3, r3, #16
  40a88a:	069e      	lsls	r6, r3, #26
  40a88c:	f100 834c 	bmi.w	40af28 <_vfiprintf_r+0xb04>
  40a890:	06dd      	lsls	r5, r3, #27
  40a892:	f100 82f3 	bmi.w	40ae7c <_vfiprintf_r+0xa58>
  40a896:	0658      	lsls	r0, r3, #25
  40a898:	f140 82f0 	bpl.w	40ae7c <_vfiprintf_r+0xa58>
  40a89c:	9d07      	ldr	r5, [sp, #28]
  40a89e:	f9b5 6000 	ldrsh.w	r6, [r5]
  40a8a2:	462a      	mov	r2, r5
  40a8a4:	17f7      	asrs	r7, r6, #31
  40a8a6:	3204      	adds	r2, #4
  40a8a8:	4630      	mov	r0, r6
  40a8aa:	4639      	mov	r1, r7
  40a8ac:	9207      	str	r2, [sp, #28]
  40a8ae:	2800      	cmp	r0, #0
  40a8b0:	f171 0200 	sbcs.w	r2, r1, #0
  40a8b4:	f2c0 835d 	blt.w	40af72 <_vfiprintf_r+0xb4e>
  40a8b8:	1c61      	adds	r1, r4, #1
  40a8ba:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  40a8be:	f04f 0201 	mov.w	r2, #1
  40a8c2:	f47f aeea 	bne.w	40a69a <_vfiprintf_r+0x276>
  40a8c6:	ea56 0107 	orrs.w	r1, r6, r7
  40a8ca:	f000 824d 	beq.w	40ad68 <_vfiprintf_r+0x944>
  40a8ce:	9302      	str	r3, [sp, #8]
  40a8d0:	2a01      	cmp	r2, #1
  40a8d2:	f000 828c 	beq.w	40adee <_vfiprintf_r+0x9ca>
  40a8d6:	2a02      	cmp	r2, #2
  40a8d8:	f040 825c 	bne.w	40ad94 <_vfiprintf_r+0x970>
  40a8dc:	980b      	ldr	r0, [sp, #44]	; 0x2c
  40a8de:	46cb      	mov	fp, r9
  40a8e0:	0933      	lsrs	r3, r6, #4
  40a8e2:	f006 010f 	and.w	r1, r6, #15
  40a8e6:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
  40a8ea:	093a      	lsrs	r2, r7, #4
  40a8ec:	461e      	mov	r6, r3
  40a8ee:	4617      	mov	r7, r2
  40a8f0:	5c43      	ldrb	r3, [r0, r1]
  40a8f2:	f80b 3d01 	strb.w	r3, [fp, #-1]!
  40a8f6:	ea56 0307 	orrs.w	r3, r6, r7
  40a8fa:	d1f1      	bne.n	40a8e0 <_vfiprintf_r+0x4bc>
  40a8fc:	eba9 030b 	sub.w	r3, r9, fp
  40a900:	9305      	str	r3, [sp, #20]
  40a902:	e6e1      	b.n	40a6c8 <_vfiprintf_r+0x2a4>
  40a904:	2800      	cmp	r0, #0
  40a906:	f040 83c0 	bne.w	40b08a <_vfiprintf_r+0xc66>
  40a90a:	0699      	lsls	r1, r3, #26
  40a90c:	f100 8367 	bmi.w	40afde <_vfiprintf_r+0xbba>
  40a910:	06da      	lsls	r2, r3, #27
  40a912:	f100 80f1 	bmi.w	40aaf8 <_vfiprintf_r+0x6d4>
  40a916:	065b      	lsls	r3, r3, #25
  40a918:	f140 80ee 	bpl.w	40aaf8 <_vfiprintf_r+0x6d4>
  40a91c:	9a07      	ldr	r2, [sp, #28]
  40a91e:	6813      	ldr	r3, [r2, #0]
  40a920:	3204      	adds	r2, #4
  40a922:	9207      	str	r2, [sp, #28]
  40a924:	f8bd 200c 	ldrh.w	r2, [sp, #12]
  40a928:	801a      	strh	r2, [r3, #0]
  40a92a:	e5b8      	b.n	40a49e <_vfiprintf_r+0x7a>
  40a92c:	9807      	ldr	r0, [sp, #28]
  40a92e:	4a3d      	ldr	r2, [pc, #244]	; (40aa24 <_vfiprintf_r+0x600>)
  40a930:	9608      	str	r6, [sp, #32]
  40a932:	920b      	str	r2, [sp, #44]	; 0x2c
  40a934:	6806      	ldr	r6, [r0, #0]
  40a936:	2278      	movs	r2, #120	; 0x78
  40a938:	2130      	movs	r1, #48	; 0x30
  40a93a:	3004      	adds	r0, #4
  40a93c:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  40a940:	f043 0302 	orr.w	r3, r3, #2
  40a944:	9007      	str	r0, [sp, #28]
  40a946:	2700      	movs	r7, #0
  40a948:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  40a94c:	2202      	movs	r2, #2
  40a94e:	e69c      	b.n	40a68a <_vfiprintf_r+0x266>
  40a950:	9608      	str	r6, [sp, #32]
  40a952:	2800      	cmp	r0, #0
  40a954:	d099      	beq.n	40a88a <_vfiprintf_r+0x466>
  40a956:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  40a95a:	e796      	b.n	40a88a <_vfiprintf_r+0x466>
  40a95c:	f898 2000 	ldrb.w	r2, [r8]
  40a960:	2d00      	cmp	r5, #0
  40a962:	f47f add1 	bne.w	40a508 <_vfiprintf_r+0xe4>
  40a966:	2001      	movs	r0, #1
  40a968:	2520      	movs	r5, #32
  40a96a:	e5cd      	b.n	40a508 <_vfiprintf_r+0xe4>
  40a96c:	f043 0301 	orr.w	r3, r3, #1
  40a970:	f898 2000 	ldrb.w	r2, [r8]
  40a974:	e5c8      	b.n	40a508 <_vfiprintf_r+0xe4>
  40a976:	9608      	str	r6, [sp, #32]
  40a978:	2800      	cmp	r0, #0
  40a97a:	f040 8393 	bne.w	40b0a4 <_vfiprintf_r+0xc80>
  40a97e:	4929      	ldr	r1, [pc, #164]	; (40aa24 <_vfiprintf_r+0x600>)
  40a980:	910b      	str	r1, [sp, #44]	; 0x2c
  40a982:	069f      	lsls	r7, r3, #26
  40a984:	f100 82e8 	bmi.w	40af58 <_vfiprintf_r+0xb34>
  40a988:	9807      	ldr	r0, [sp, #28]
  40a98a:	06de      	lsls	r6, r3, #27
  40a98c:	4601      	mov	r1, r0
  40a98e:	f100 8270 	bmi.w	40ae72 <_vfiprintf_r+0xa4e>
  40a992:	065d      	lsls	r5, r3, #25
  40a994:	f140 826d 	bpl.w	40ae72 <_vfiprintf_r+0xa4e>
  40a998:	3104      	adds	r1, #4
  40a99a:	8806      	ldrh	r6, [r0, #0]
  40a99c:	9107      	str	r1, [sp, #28]
  40a99e:	2700      	movs	r7, #0
  40a9a0:	07d8      	lsls	r0, r3, #31
  40a9a2:	f140 8222 	bpl.w	40adea <_vfiprintf_r+0x9c6>
  40a9a6:	ea56 0107 	orrs.w	r1, r6, r7
  40a9aa:	f000 821e 	beq.w	40adea <_vfiprintf_r+0x9c6>
  40a9ae:	2130      	movs	r1, #48	; 0x30
  40a9b0:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  40a9b4:	f043 0302 	orr.w	r3, r3, #2
  40a9b8:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  40a9bc:	2202      	movs	r2, #2
  40a9be:	e664      	b.n	40a68a <_vfiprintf_r+0x266>
  40a9c0:	9608      	str	r6, [sp, #32]
  40a9c2:	2800      	cmp	r0, #0
  40a9c4:	f040 836b 	bne.w	40b09e <_vfiprintf_r+0xc7a>
  40a9c8:	4917      	ldr	r1, [pc, #92]	; (40aa28 <_vfiprintf_r+0x604>)
  40a9ca:	910b      	str	r1, [sp, #44]	; 0x2c
  40a9cc:	e7d9      	b.n	40a982 <_vfiprintf_r+0x55e>
  40a9ce:	9907      	ldr	r1, [sp, #28]
  40a9d0:	9608      	str	r6, [sp, #32]
  40a9d2:	680a      	ldr	r2, [r1, #0]
  40a9d4:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  40a9d8:	f04f 0000 	mov.w	r0, #0
  40a9dc:	460a      	mov	r2, r1
  40a9de:	f88d 0037 	strb.w	r0, [sp, #55]	; 0x37
  40a9e2:	3204      	adds	r2, #4
  40a9e4:	2001      	movs	r0, #1
  40a9e6:	9001      	str	r0, [sp, #4]
  40a9e8:	9207      	str	r2, [sp, #28]
  40a9ea:	9005      	str	r0, [sp, #20]
  40a9ec:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
  40a9f0:	9302      	str	r3, [sp, #8]
  40a9f2:	2400      	movs	r4, #0
  40a9f4:	e670      	b.n	40a6d8 <_vfiprintf_r+0x2b4>
  40a9f6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40a9fa:	f898 2000 	ldrb.w	r2, [r8]
  40a9fe:	e583      	b.n	40a508 <_vfiprintf_r+0xe4>
  40aa00:	f898 2000 	ldrb.w	r2, [r8]
  40aa04:	2a6c      	cmp	r2, #108	; 0x6c
  40aa06:	bf03      	ittte	eq
  40aa08:	f898 2001 	ldrbeq.w	r2, [r8, #1]
  40aa0c:	f043 0320 	orreq.w	r3, r3, #32
  40aa10:	f108 0801 	addeq.w	r8, r8, #1
  40aa14:	f043 0310 	orrne.w	r3, r3, #16
  40aa18:	e576      	b.n	40a508 <_vfiprintf_r+0xe4>
  40aa1a:	bf00      	nop
  40aa1c:	0040f6a0 	.word	0x0040f6a0
  40aa20:	0040f6b0 	.word	0x0040f6b0
  40aa24:	0040f660 	.word	0x0040f660
  40aa28:	0040f64c 	.word	0x0040f64c
  40aa2c:	9907      	ldr	r1, [sp, #28]
  40aa2e:	680e      	ldr	r6, [r1, #0]
  40aa30:	460a      	mov	r2, r1
  40aa32:	2e00      	cmp	r6, #0
  40aa34:	f102 0204 	add.w	r2, r2, #4
  40aa38:	f6ff ae0f 	blt.w	40a65a <_vfiprintf_r+0x236>
  40aa3c:	9207      	str	r2, [sp, #28]
  40aa3e:	f898 2000 	ldrb.w	r2, [r8]
  40aa42:	e561      	b.n	40a508 <_vfiprintf_r+0xe4>
  40aa44:	f898 2000 	ldrb.w	r2, [r8]
  40aa48:	2001      	movs	r0, #1
  40aa4a:	252b      	movs	r5, #43	; 0x2b
  40aa4c:	e55c      	b.n	40a508 <_vfiprintf_r+0xe4>
  40aa4e:	9907      	ldr	r1, [sp, #28]
  40aa50:	9608      	str	r6, [sp, #32]
  40aa52:	f8d1 b000 	ldr.w	fp, [r1]
  40aa56:	f04f 0200 	mov.w	r2, #0
  40aa5a:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  40aa5e:	1d0e      	adds	r6, r1, #4
  40aa60:	f1bb 0f00 	cmp.w	fp, #0
  40aa64:	f000 82e5 	beq.w	40b032 <_vfiprintf_r+0xc0e>
  40aa68:	1c67      	adds	r7, r4, #1
  40aa6a:	f000 82c4 	beq.w	40aff6 <_vfiprintf_r+0xbd2>
  40aa6e:	4622      	mov	r2, r4
  40aa70:	2100      	movs	r1, #0
  40aa72:	4658      	mov	r0, fp
  40aa74:	9301      	str	r3, [sp, #4]
  40aa76:	f002 f8eb 	bl	40cc50 <memchr>
  40aa7a:	9b01      	ldr	r3, [sp, #4]
  40aa7c:	2800      	cmp	r0, #0
  40aa7e:	f000 82e5 	beq.w	40b04c <_vfiprintf_r+0xc28>
  40aa82:	eba0 020b 	sub.w	r2, r0, fp
  40aa86:	9205      	str	r2, [sp, #20]
  40aa88:	9607      	str	r6, [sp, #28]
  40aa8a:	9302      	str	r3, [sp, #8]
  40aa8c:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  40aa90:	2400      	movs	r4, #0
  40aa92:	e619      	b.n	40a6c8 <_vfiprintf_r+0x2a4>
  40aa94:	f898 2000 	ldrb.w	r2, [r8]
  40aa98:	2a2a      	cmp	r2, #42	; 0x2a
  40aa9a:	f108 0701 	add.w	r7, r8, #1
  40aa9e:	f000 82e9 	beq.w	40b074 <_vfiprintf_r+0xc50>
  40aaa2:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  40aaa6:	2909      	cmp	r1, #9
  40aaa8:	46b8      	mov	r8, r7
  40aaaa:	f04f 0400 	mov.w	r4, #0
  40aaae:	f63f ad2d 	bhi.w	40a50c <_vfiprintf_r+0xe8>
  40aab2:	f818 2b01 	ldrb.w	r2, [r8], #1
  40aab6:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  40aaba:	eb01 0444 	add.w	r4, r1, r4, lsl #1
  40aabe:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  40aac2:	2909      	cmp	r1, #9
  40aac4:	d9f5      	bls.n	40aab2 <_vfiprintf_r+0x68e>
  40aac6:	e521      	b.n	40a50c <_vfiprintf_r+0xe8>
  40aac8:	f043 0320 	orr.w	r3, r3, #32
  40aacc:	f898 2000 	ldrb.w	r2, [r8]
  40aad0:	e51a      	b.n	40a508 <_vfiprintf_r+0xe4>
  40aad2:	9608      	str	r6, [sp, #32]
  40aad4:	2800      	cmp	r0, #0
  40aad6:	f040 82db 	bne.w	40b090 <_vfiprintf_r+0xc6c>
  40aada:	2a00      	cmp	r2, #0
  40aadc:	f000 80e7 	beq.w	40acae <_vfiprintf_r+0x88a>
  40aae0:	2101      	movs	r1, #1
  40aae2:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  40aae6:	f04f 0200 	mov.w	r2, #0
  40aaea:	9101      	str	r1, [sp, #4]
  40aaec:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  40aaf0:	9105      	str	r1, [sp, #20]
  40aaf2:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
  40aaf6:	e77b      	b.n	40a9f0 <_vfiprintf_r+0x5cc>
  40aaf8:	9a07      	ldr	r2, [sp, #28]
  40aafa:	6813      	ldr	r3, [r2, #0]
  40aafc:	3204      	adds	r2, #4
  40aafe:	9207      	str	r2, [sp, #28]
  40ab00:	9a03      	ldr	r2, [sp, #12]
  40ab02:	601a      	str	r2, [r3, #0]
  40ab04:	e4cb      	b.n	40a49e <_vfiprintf_r+0x7a>
  40ab06:	aa0f      	add	r2, sp, #60	; 0x3c
  40ab08:	9904      	ldr	r1, [sp, #16]
  40ab0a:	4620      	mov	r0, r4
  40ab0c:	f7ff fc4a 	bl	40a3a4 <__sprint_r.part.0>
  40ab10:	2800      	cmp	r0, #0
  40ab12:	f040 8139 	bne.w	40ad88 <_vfiprintf_r+0x964>
  40ab16:	9910      	ldr	r1, [sp, #64]	; 0x40
  40ab18:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40ab1a:	f101 0c01 	add.w	ip, r1, #1
  40ab1e:	46ce      	mov	lr, r9
  40ab20:	e5ff      	b.n	40a722 <_vfiprintf_r+0x2fe>
  40ab22:	9910      	ldr	r1, [sp, #64]	; 0x40
  40ab24:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40ab26:	1c48      	adds	r0, r1, #1
  40ab28:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  40ab2c:	2d00      	cmp	r5, #0
  40ab2e:	f43f ae22 	beq.w	40a776 <_vfiprintf_r+0x352>
  40ab32:	3201      	adds	r2, #1
  40ab34:	f10d 0537 	add.w	r5, sp, #55	; 0x37
  40ab38:	2101      	movs	r1, #1
  40ab3a:	2807      	cmp	r0, #7
  40ab3c:	9211      	str	r2, [sp, #68]	; 0x44
  40ab3e:	9010      	str	r0, [sp, #64]	; 0x40
  40ab40:	f8ca 5000 	str.w	r5, [sl]
  40ab44:	f8ca 1004 	str.w	r1, [sl, #4]
  40ab48:	f340 8108 	ble.w	40ad5c <_vfiprintf_r+0x938>
  40ab4c:	2a00      	cmp	r2, #0
  40ab4e:	f040 81bc 	bne.w	40aeca <_vfiprintf_r+0xaa6>
  40ab52:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40ab54:	2b00      	cmp	r3, #0
  40ab56:	f43f ae1f 	beq.w	40a798 <_vfiprintf_r+0x374>
  40ab5a:	ab0e      	add	r3, sp, #56	; 0x38
  40ab5c:	2202      	movs	r2, #2
  40ab5e:	4608      	mov	r0, r1
  40ab60:	931c      	str	r3, [sp, #112]	; 0x70
  40ab62:	921d      	str	r2, [sp, #116]	; 0x74
  40ab64:	46ca      	mov	sl, r9
  40ab66:	4601      	mov	r1, r0
  40ab68:	f10a 0a08 	add.w	sl, sl, #8
  40ab6c:	3001      	adds	r0, #1
  40ab6e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40ab70:	2b80      	cmp	r3, #128	; 0x80
  40ab72:	f43f ae19 	beq.w	40a7a8 <_vfiprintf_r+0x384>
  40ab76:	9b05      	ldr	r3, [sp, #20]
  40ab78:	1ae4      	subs	r4, r4, r3
  40ab7a:	2c00      	cmp	r4, #0
  40ab7c:	dd2e      	ble.n	40abdc <_vfiprintf_r+0x7b8>
  40ab7e:	2c10      	cmp	r4, #16
  40ab80:	4db3      	ldr	r5, [pc, #716]	; (40ae50 <_vfiprintf_r+0xa2c>)
  40ab82:	dd1e      	ble.n	40abc2 <_vfiprintf_r+0x79e>
  40ab84:	46d6      	mov	lr, sl
  40ab86:	2610      	movs	r6, #16
  40ab88:	9f06      	ldr	r7, [sp, #24]
  40ab8a:	f8dd a010 	ldr.w	sl, [sp, #16]
  40ab8e:	e006      	b.n	40ab9e <_vfiprintf_r+0x77a>
  40ab90:	1c88      	adds	r0, r1, #2
  40ab92:	f10e 0e08 	add.w	lr, lr, #8
  40ab96:	4619      	mov	r1, r3
  40ab98:	3c10      	subs	r4, #16
  40ab9a:	2c10      	cmp	r4, #16
  40ab9c:	dd10      	ble.n	40abc0 <_vfiprintf_r+0x79c>
  40ab9e:	1c4b      	adds	r3, r1, #1
  40aba0:	3210      	adds	r2, #16
  40aba2:	2b07      	cmp	r3, #7
  40aba4:	9211      	str	r2, [sp, #68]	; 0x44
  40aba6:	e88e 0060 	stmia.w	lr, {r5, r6}
  40abaa:	9310      	str	r3, [sp, #64]	; 0x40
  40abac:	ddf0      	ble.n	40ab90 <_vfiprintf_r+0x76c>
  40abae:	2a00      	cmp	r2, #0
  40abb0:	d165      	bne.n	40ac7e <_vfiprintf_r+0x85a>
  40abb2:	3c10      	subs	r4, #16
  40abb4:	2c10      	cmp	r4, #16
  40abb6:	f04f 0001 	mov.w	r0, #1
  40abba:	4611      	mov	r1, r2
  40abbc:	46ce      	mov	lr, r9
  40abbe:	dcee      	bgt.n	40ab9e <_vfiprintf_r+0x77a>
  40abc0:	46f2      	mov	sl, lr
  40abc2:	4422      	add	r2, r4
  40abc4:	2807      	cmp	r0, #7
  40abc6:	9211      	str	r2, [sp, #68]	; 0x44
  40abc8:	f8ca 5000 	str.w	r5, [sl]
  40abcc:	f8ca 4004 	str.w	r4, [sl, #4]
  40abd0:	9010      	str	r0, [sp, #64]	; 0x40
  40abd2:	f300 8085 	bgt.w	40ace0 <_vfiprintf_r+0x8bc>
  40abd6:	f10a 0a08 	add.w	sl, sl, #8
  40abda:	3001      	adds	r0, #1
  40abdc:	9905      	ldr	r1, [sp, #20]
  40abde:	f8ca b000 	str.w	fp, [sl]
  40abe2:	440a      	add	r2, r1
  40abe4:	2807      	cmp	r0, #7
  40abe6:	9211      	str	r2, [sp, #68]	; 0x44
  40abe8:	f8ca 1004 	str.w	r1, [sl, #4]
  40abec:	9010      	str	r0, [sp, #64]	; 0x40
  40abee:	f340 8082 	ble.w	40acf6 <_vfiprintf_r+0x8d2>
  40abf2:	2a00      	cmp	r2, #0
  40abf4:	f040 8118 	bne.w	40ae28 <_vfiprintf_r+0xa04>
  40abf8:	9b02      	ldr	r3, [sp, #8]
  40abfa:	9210      	str	r2, [sp, #64]	; 0x40
  40abfc:	0758      	lsls	r0, r3, #29
  40abfe:	d535      	bpl.n	40ac6c <_vfiprintf_r+0x848>
  40ac00:	9b08      	ldr	r3, [sp, #32]
  40ac02:	9901      	ldr	r1, [sp, #4]
  40ac04:	1a5c      	subs	r4, r3, r1
  40ac06:	2c00      	cmp	r4, #0
  40ac08:	f340 80e7 	ble.w	40adda <_vfiprintf_r+0x9b6>
  40ac0c:	46ca      	mov	sl, r9
  40ac0e:	2c10      	cmp	r4, #16
  40ac10:	f340 8218 	ble.w	40b044 <_vfiprintf_r+0xc20>
  40ac14:	9910      	ldr	r1, [sp, #64]	; 0x40
  40ac16:	4e8f      	ldr	r6, [pc, #572]	; (40ae54 <_vfiprintf_r+0xa30>)
  40ac18:	9f06      	ldr	r7, [sp, #24]
  40ac1a:	f8dd b010 	ldr.w	fp, [sp, #16]
  40ac1e:	2510      	movs	r5, #16
  40ac20:	e006      	b.n	40ac30 <_vfiprintf_r+0x80c>
  40ac22:	1c88      	adds	r0, r1, #2
  40ac24:	f10a 0a08 	add.w	sl, sl, #8
  40ac28:	4619      	mov	r1, r3
  40ac2a:	3c10      	subs	r4, #16
  40ac2c:	2c10      	cmp	r4, #16
  40ac2e:	dd11      	ble.n	40ac54 <_vfiprintf_r+0x830>
  40ac30:	1c4b      	adds	r3, r1, #1
  40ac32:	3210      	adds	r2, #16
  40ac34:	2b07      	cmp	r3, #7
  40ac36:	9211      	str	r2, [sp, #68]	; 0x44
  40ac38:	f8ca 6000 	str.w	r6, [sl]
  40ac3c:	f8ca 5004 	str.w	r5, [sl, #4]
  40ac40:	9310      	str	r3, [sp, #64]	; 0x40
  40ac42:	ddee      	ble.n	40ac22 <_vfiprintf_r+0x7fe>
  40ac44:	bb42      	cbnz	r2, 40ac98 <_vfiprintf_r+0x874>
  40ac46:	3c10      	subs	r4, #16
  40ac48:	2c10      	cmp	r4, #16
  40ac4a:	f04f 0001 	mov.w	r0, #1
  40ac4e:	4611      	mov	r1, r2
  40ac50:	46ca      	mov	sl, r9
  40ac52:	dced      	bgt.n	40ac30 <_vfiprintf_r+0x80c>
  40ac54:	4422      	add	r2, r4
  40ac56:	2807      	cmp	r0, #7
  40ac58:	9211      	str	r2, [sp, #68]	; 0x44
  40ac5a:	f8ca 6000 	str.w	r6, [sl]
  40ac5e:	f8ca 4004 	str.w	r4, [sl, #4]
  40ac62:	9010      	str	r0, [sp, #64]	; 0x40
  40ac64:	dd51      	ble.n	40ad0a <_vfiprintf_r+0x8e6>
  40ac66:	2a00      	cmp	r2, #0
  40ac68:	f040 819b 	bne.w	40afa2 <_vfiprintf_r+0xb7e>
  40ac6c:	9b03      	ldr	r3, [sp, #12]
  40ac6e:	9a08      	ldr	r2, [sp, #32]
  40ac70:	9901      	ldr	r1, [sp, #4]
  40ac72:	428a      	cmp	r2, r1
  40ac74:	bfac      	ite	ge
  40ac76:	189b      	addge	r3, r3, r2
  40ac78:	185b      	addlt	r3, r3, r1
  40ac7a:	9303      	str	r3, [sp, #12]
  40ac7c:	e04e      	b.n	40ad1c <_vfiprintf_r+0x8f8>
  40ac7e:	aa0f      	add	r2, sp, #60	; 0x3c
  40ac80:	4651      	mov	r1, sl
  40ac82:	4638      	mov	r0, r7
  40ac84:	f7ff fb8e 	bl	40a3a4 <__sprint_r.part.0>
  40ac88:	2800      	cmp	r0, #0
  40ac8a:	f040 813f 	bne.w	40af0c <_vfiprintf_r+0xae8>
  40ac8e:	9910      	ldr	r1, [sp, #64]	; 0x40
  40ac90:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40ac92:	1c48      	adds	r0, r1, #1
  40ac94:	46ce      	mov	lr, r9
  40ac96:	e77f      	b.n	40ab98 <_vfiprintf_r+0x774>
  40ac98:	aa0f      	add	r2, sp, #60	; 0x3c
  40ac9a:	4659      	mov	r1, fp
  40ac9c:	4638      	mov	r0, r7
  40ac9e:	f7ff fb81 	bl	40a3a4 <__sprint_r.part.0>
  40aca2:	b960      	cbnz	r0, 40acbe <_vfiprintf_r+0x89a>
  40aca4:	9910      	ldr	r1, [sp, #64]	; 0x40
  40aca6:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40aca8:	1c48      	adds	r0, r1, #1
  40acaa:	46ca      	mov	sl, r9
  40acac:	e7bd      	b.n	40ac2a <_vfiprintf_r+0x806>
  40acae:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40acb0:	f8dd b010 	ldr.w	fp, [sp, #16]
  40acb4:	2b00      	cmp	r3, #0
  40acb6:	f040 81d4 	bne.w	40b062 <_vfiprintf_r+0xc3e>
  40acba:	2300      	movs	r3, #0
  40acbc:	9310      	str	r3, [sp, #64]	; 0x40
  40acbe:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  40acc2:	f013 0f01 	tst.w	r3, #1
  40acc6:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  40acca:	d102      	bne.n	40acd2 <_vfiprintf_r+0x8ae>
  40accc:	059a      	lsls	r2, r3, #22
  40acce:	f140 80de 	bpl.w	40ae8e <_vfiprintf_r+0xa6a>
  40acd2:	065b      	lsls	r3, r3, #25
  40acd4:	f53f acb2 	bmi.w	40a63c <_vfiprintf_r+0x218>
  40acd8:	9803      	ldr	r0, [sp, #12]
  40acda:	b02d      	add	sp, #180	; 0xb4
  40acdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40ace0:	2a00      	cmp	r2, #0
  40ace2:	f040 8106 	bne.w	40aef2 <_vfiprintf_r+0xace>
  40ace6:	9a05      	ldr	r2, [sp, #20]
  40ace8:	921d      	str	r2, [sp, #116]	; 0x74
  40acea:	2301      	movs	r3, #1
  40acec:	9211      	str	r2, [sp, #68]	; 0x44
  40acee:	f8cd b070 	str.w	fp, [sp, #112]	; 0x70
  40acf2:	9310      	str	r3, [sp, #64]	; 0x40
  40acf4:	46ca      	mov	sl, r9
  40acf6:	f10a 0a08 	add.w	sl, sl, #8
  40acfa:	9b02      	ldr	r3, [sp, #8]
  40acfc:	0759      	lsls	r1, r3, #29
  40acfe:	d504      	bpl.n	40ad0a <_vfiprintf_r+0x8e6>
  40ad00:	9b08      	ldr	r3, [sp, #32]
  40ad02:	9901      	ldr	r1, [sp, #4]
  40ad04:	1a5c      	subs	r4, r3, r1
  40ad06:	2c00      	cmp	r4, #0
  40ad08:	dc81      	bgt.n	40ac0e <_vfiprintf_r+0x7ea>
  40ad0a:	9b03      	ldr	r3, [sp, #12]
  40ad0c:	9908      	ldr	r1, [sp, #32]
  40ad0e:	9801      	ldr	r0, [sp, #4]
  40ad10:	4281      	cmp	r1, r0
  40ad12:	bfac      	ite	ge
  40ad14:	185b      	addge	r3, r3, r1
  40ad16:	181b      	addlt	r3, r3, r0
  40ad18:	9303      	str	r3, [sp, #12]
  40ad1a:	bb72      	cbnz	r2, 40ad7a <_vfiprintf_r+0x956>
  40ad1c:	2300      	movs	r3, #0
  40ad1e:	9310      	str	r3, [sp, #64]	; 0x40
  40ad20:	46ca      	mov	sl, r9
  40ad22:	f7ff bbbc 	b.w	40a49e <_vfiprintf_r+0x7a>
  40ad26:	aa0f      	add	r2, sp, #60	; 0x3c
  40ad28:	9904      	ldr	r1, [sp, #16]
  40ad2a:	4620      	mov	r0, r4
  40ad2c:	f7ff fb3a 	bl	40a3a4 <__sprint_r.part.0>
  40ad30:	bb50      	cbnz	r0, 40ad88 <_vfiprintf_r+0x964>
  40ad32:	9910      	ldr	r1, [sp, #64]	; 0x40
  40ad34:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40ad36:	f101 0e01 	add.w	lr, r1, #1
  40ad3a:	46cc      	mov	ip, r9
  40ad3c:	e548      	b.n	40a7d0 <_vfiprintf_r+0x3ac>
  40ad3e:	2a00      	cmp	r2, #0
  40ad40:	f040 8140 	bne.w	40afc4 <_vfiprintf_r+0xba0>
  40ad44:	f89d 1037 	ldrb.w	r1, [sp, #55]	; 0x37
  40ad48:	2900      	cmp	r1, #0
  40ad4a:	f000 811b 	beq.w	40af84 <_vfiprintf_r+0xb60>
  40ad4e:	2201      	movs	r2, #1
  40ad50:	f10d 0137 	add.w	r1, sp, #55	; 0x37
  40ad54:	4610      	mov	r0, r2
  40ad56:	921d      	str	r2, [sp, #116]	; 0x74
  40ad58:	911c      	str	r1, [sp, #112]	; 0x70
  40ad5a:	46ca      	mov	sl, r9
  40ad5c:	4601      	mov	r1, r0
  40ad5e:	f10a 0a08 	add.w	sl, sl, #8
  40ad62:	3001      	adds	r0, #1
  40ad64:	e507      	b.n	40a776 <_vfiprintf_r+0x352>
  40ad66:	9b02      	ldr	r3, [sp, #8]
  40ad68:	2a01      	cmp	r2, #1
  40ad6a:	f000 8098 	beq.w	40ae9e <_vfiprintf_r+0xa7a>
  40ad6e:	2a02      	cmp	r2, #2
  40ad70:	d10d      	bne.n	40ad8e <_vfiprintf_r+0x96a>
  40ad72:	9302      	str	r3, [sp, #8]
  40ad74:	2600      	movs	r6, #0
  40ad76:	2700      	movs	r7, #0
  40ad78:	e5b0      	b.n	40a8dc <_vfiprintf_r+0x4b8>
  40ad7a:	aa0f      	add	r2, sp, #60	; 0x3c
  40ad7c:	9904      	ldr	r1, [sp, #16]
  40ad7e:	9806      	ldr	r0, [sp, #24]
  40ad80:	f7ff fb10 	bl	40a3a4 <__sprint_r.part.0>
  40ad84:	2800      	cmp	r0, #0
  40ad86:	d0c9      	beq.n	40ad1c <_vfiprintf_r+0x8f8>
  40ad88:	f8dd b010 	ldr.w	fp, [sp, #16]
  40ad8c:	e797      	b.n	40acbe <_vfiprintf_r+0x89a>
  40ad8e:	9302      	str	r3, [sp, #8]
  40ad90:	2600      	movs	r6, #0
  40ad92:	2700      	movs	r7, #0
  40ad94:	4649      	mov	r1, r9
  40ad96:	e000      	b.n	40ad9a <_vfiprintf_r+0x976>
  40ad98:	4659      	mov	r1, fp
  40ad9a:	08f2      	lsrs	r2, r6, #3
  40ad9c:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
  40ada0:	08f8      	lsrs	r0, r7, #3
  40ada2:	f006 0307 	and.w	r3, r6, #7
  40ada6:	4607      	mov	r7, r0
  40ada8:	4616      	mov	r6, r2
  40adaa:	3330      	adds	r3, #48	; 0x30
  40adac:	ea56 0207 	orrs.w	r2, r6, r7
  40adb0:	f801 3c01 	strb.w	r3, [r1, #-1]
  40adb4:	f101 3bff 	add.w	fp, r1, #4294967295
  40adb8:	d1ee      	bne.n	40ad98 <_vfiprintf_r+0x974>
  40adba:	9a02      	ldr	r2, [sp, #8]
  40adbc:	07d6      	lsls	r6, r2, #31
  40adbe:	f57f ad9d 	bpl.w	40a8fc <_vfiprintf_r+0x4d8>
  40adc2:	2b30      	cmp	r3, #48	; 0x30
  40adc4:	f43f ad9a 	beq.w	40a8fc <_vfiprintf_r+0x4d8>
  40adc8:	3902      	subs	r1, #2
  40adca:	2330      	movs	r3, #48	; 0x30
  40adcc:	f80b 3c01 	strb.w	r3, [fp, #-1]
  40add0:	eba9 0301 	sub.w	r3, r9, r1
  40add4:	9305      	str	r3, [sp, #20]
  40add6:	468b      	mov	fp, r1
  40add8:	e476      	b.n	40a6c8 <_vfiprintf_r+0x2a4>
  40adda:	9b03      	ldr	r3, [sp, #12]
  40addc:	9a08      	ldr	r2, [sp, #32]
  40adde:	428a      	cmp	r2, r1
  40ade0:	bfac      	ite	ge
  40ade2:	189b      	addge	r3, r3, r2
  40ade4:	185b      	addlt	r3, r3, r1
  40ade6:	9303      	str	r3, [sp, #12]
  40ade8:	e798      	b.n	40ad1c <_vfiprintf_r+0x8f8>
  40adea:	2202      	movs	r2, #2
  40adec:	e44d      	b.n	40a68a <_vfiprintf_r+0x266>
  40adee:	2f00      	cmp	r7, #0
  40adf0:	bf08      	it	eq
  40adf2:	2e0a      	cmpeq	r6, #10
  40adf4:	d352      	bcc.n	40ae9c <_vfiprintf_r+0xa78>
  40adf6:	46cb      	mov	fp, r9
  40adf8:	4630      	mov	r0, r6
  40adfa:	4639      	mov	r1, r7
  40adfc:	220a      	movs	r2, #10
  40adfe:	2300      	movs	r3, #0
  40ae00:	f002 ff2e 	bl	40dc60 <__aeabi_uldivmod>
  40ae04:	3230      	adds	r2, #48	; 0x30
  40ae06:	f80b 2d01 	strb.w	r2, [fp, #-1]!
  40ae0a:	4630      	mov	r0, r6
  40ae0c:	4639      	mov	r1, r7
  40ae0e:	2300      	movs	r3, #0
  40ae10:	220a      	movs	r2, #10
  40ae12:	f002 ff25 	bl	40dc60 <__aeabi_uldivmod>
  40ae16:	4606      	mov	r6, r0
  40ae18:	460f      	mov	r7, r1
  40ae1a:	ea56 0307 	orrs.w	r3, r6, r7
  40ae1e:	d1eb      	bne.n	40adf8 <_vfiprintf_r+0x9d4>
  40ae20:	e56c      	b.n	40a8fc <_vfiprintf_r+0x4d8>
  40ae22:	9405      	str	r4, [sp, #20]
  40ae24:	46cb      	mov	fp, r9
  40ae26:	e44f      	b.n	40a6c8 <_vfiprintf_r+0x2a4>
  40ae28:	aa0f      	add	r2, sp, #60	; 0x3c
  40ae2a:	9904      	ldr	r1, [sp, #16]
  40ae2c:	9806      	ldr	r0, [sp, #24]
  40ae2e:	f7ff fab9 	bl	40a3a4 <__sprint_r.part.0>
  40ae32:	2800      	cmp	r0, #0
  40ae34:	d1a8      	bne.n	40ad88 <_vfiprintf_r+0x964>
  40ae36:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40ae38:	46ca      	mov	sl, r9
  40ae3a:	e75e      	b.n	40acfa <_vfiprintf_r+0x8d6>
  40ae3c:	aa0f      	add	r2, sp, #60	; 0x3c
  40ae3e:	9904      	ldr	r1, [sp, #16]
  40ae40:	9806      	ldr	r0, [sp, #24]
  40ae42:	f7ff faaf 	bl	40a3a4 <__sprint_r.part.0>
  40ae46:	2800      	cmp	r0, #0
  40ae48:	d19e      	bne.n	40ad88 <_vfiprintf_r+0x964>
  40ae4a:	46ca      	mov	sl, r9
  40ae4c:	f7ff bbc0 	b.w	40a5d0 <_vfiprintf_r+0x1ac>
  40ae50:	0040f6b0 	.word	0x0040f6b0
  40ae54:	0040f6a0 	.word	0x0040f6a0
  40ae58:	3104      	adds	r1, #4
  40ae5a:	6816      	ldr	r6, [r2, #0]
  40ae5c:	9107      	str	r1, [sp, #28]
  40ae5e:	2201      	movs	r2, #1
  40ae60:	2700      	movs	r7, #0
  40ae62:	e412      	b.n	40a68a <_vfiprintf_r+0x266>
  40ae64:	9807      	ldr	r0, [sp, #28]
  40ae66:	4601      	mov	r1, r0
  40ae68:	3104      	adds	r1, #4
  40ae6a:	6806      	ldr	r6, [r0, #0]
  40ae6c:	9107      	str	r1, [sp, #28]
  40ae6e:	2700      	movs	r7, #0
  40ae70:	e40b      	b.n	40a68a <_vfiprintf_r+0x266>
  40ae72:	680e      	ldr	r6, [r1, #0]
  40ae74:	3104      	adds	r1, #4
  40ae76:	9107      	str	r1, [sp, #28]
  40ae78:	2700      	movs	r7, #0
  40ae7a:	e591      	b.n	40a9a0 <_vfiprintf_r+0x57c>
  40ae7c:	9907      	ldr	r1, [sp, #28]
  40ae7e:	680e      	ldr	r6, [r1, #0]
  40ae80:	460a      	mov	r2, r1
  40ae82:	17f7      	asrs	r7, r6, #31
  40ae84:	3204      	adds	r2, #4
  40ae86:	9207      	str	r2, [sp, #28]
  40ae88:	4630      	mov	r0, r6
  40ae8a:	4639      	mov	r1, r7
  40ae8c:	e50f      	b.n	40a8ae <_vfiprintf_r+0x48a>
  40ae8e:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  40ae92:	f001 fe4b 	bl	40cb2c <__retarget_lock_release_recursive>
  40ae96:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  40ae9a:	e71a      	b.n	40acd2 <_vfiprintf_r+0x8ae>
  40ae9c:	9b02      	ldr	r3, [sp, #8]
  40ae9e:	9302      	str	r3, [sp, #8]
  40aea0:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
  40aea4:	3630      	adds	r6, #48	; 0x30
  40aea6:	2301      	movs	r3, #1
  40aea8:	f80b 6d41 	strb.w	r6, [fp, #-65]!
  40aeac:	9305      	str	r3, [sp, #20]
  40aeae:	e40b      	b.n	40a6c8 <_vfiprintf_r+0x2a4>
  40aeb0:	aa0f      	add	r2, sp, #60	; 0x3c
  40aeb2:	9904      	ldr	r1, [sp, #16]
  40aeb4:	9806      	ldr	r0, [sp, #24]
  40aeb6:	f7ff fa75 	bl	40a3a4 <__sprint_r.part.0>
  40aeba:	2800      	cmp	r0, #0
  40aebc:	f47f af64 	bne.w	40ad88 <_vfiprintf_r+0x964>
  40aec0:	9910      	ldr	r1, [sp, #64]	; 0x40
  40aec2:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40aec4:	1c48      	adds	r0, r1, #1
  40aec6:	46ca      	mov	sl, r9
  40aec8:	e651      	b.n	40ab6e <_vfiprintf_r+0x74a>
  40aeca:	aa0f      	add	r2, sp, #60	; 0x3c
  40aecc:	9904      	ldr	r1, [sp, #16]
  40aece:	9806      	ldr	r0, [sp, #24]
  40aed0:	f7ff fa68 	bl	40a3a4 <__sprint_r.part.0>
  40aed4:	2800      	cmp	r0, #0
  40aed6:	f47f af57 	bne.w	40ad88 <_vfiprintf_r+0x964>
  40aeda:	9910      	ldr	r1, [sp, #64]	; 0x40
  40aedc:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40aede:	1c48      	adds	r0, r1, #1
  40aee0:	46ca      	mov	sl, r9
  40aee2:	e448      	b.n	40a776 <_vfiprintf_r+0x352>
  40aee4:	2a00      	cmp	r2, #0
  40aee6:	f040 8091 	bne.w	40b00c <_vfiprintf_r+0xbe8>
  40aeea:	2001      	movs	r0, #1
  40aeec:	4611      	mov	r1, r2
  40aeee:	46ca      	mov	sl, r9
  40aef0:	e641      	b.n	40ab76 <_vfiprintf_r+0x752>
  40aef2:	aa0f      	add	r2, sp, #60	; 0x3c
  40aef4:	9904      	ldr	r1, [sp, #16]
  40aef6:	9806      	ldr	r0, [sp, #24]
  40aef8:	f7ff fa54 	bl	40a3a4 <__sprint_r.part.0>
  40aefc:	2800      	cmp	r0, #0
  40aefe:	f47f af43 	bne.w	40ad88 <_vfiprintf_r+0x964>
  40af02:	9810      	ldr	r0, [sp, #64]	; 0x40
  40af04:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40af06:	3001      	adds	r0, #1
  40af08:	46ca      	mov	sl, r9
  40af0a:	e667      	b.n	40abdc <_vfiprintf_r+0x7b8>
  40af0c:	46d3      	mov	fp, sl
  40af0e:	e6d6      	b.n	40acbe <_vfiprintf_r+0x89a>
  40af10:	9e07      	ldr	r6, [sp, #28]
  40af12:	3607      	adds	r6, #7
  40af14:	f026 0207 	bic.w	r2, r6, #7
  40af18:	f102 0108 	add.w	r1, r2, #8
  40af1c:	e9d2 6700 	ldrd	r6, r7, [r2]
  40af20:	9107      	str	r1, [sp, #28]
  40af22:	2201      	movs	r2, #1
  40af24:	f7ff bbb1 	b.w	40a68a <_vfiprintf_r+0x266>
  40af28:	9e07      	ldr	r6, [sp, #28]
  40af2a:	3607      	adds	r6, #7
  40af2c:	f026 0607 	bic.w	r6, r6, #7
  40af30:	e9d6 0100 	ldrd	r0, r1, [r6]
  40af34:	f106 0208 	add.w	r2, r6, #8
  40af38:	9207      	str	r2, [sp, #28]
  40af3a:	4606      	mov	r6, r0
  40af3c:	460f      	mov	r7, r1
  40af3e:	e4b6      	b.n	40a8ae <_vfiprintf_r+0x48a>
  40af40:	9e07      	ldr	r6, [sp, #28]
  40af42:	3607      	adds	r6, #7
  40af44:	f026 0207 	bic.w	r2, r6, #7
  40af48:	f102 0108 	add.w	r1, r2, #8
  40af4c:	e9d2 6700 	ldrd	r6, r7, [r2]
  40af50:	9107      	str	r1, [sp, #28]
  40af52:	2200      	movs	r2, #0
  40af54:	f7ff bb99 	b.w	40a68a <_vfiprintf_r+0x266>
  40af58:	9e07      	ldr	r6, [sp, #28]
  40af5a:	3607      	adds	r6, #7
  40af5c:	f026 0107 	bic.w	r1, r6, #7
  40af60:	f101 0008 	add.w	r0, r1, #8
  40af64:	9007      	str	r0, [sp, #28]
  40af66:	e9d1 6700 	ldrd	r6, r7, [r1]
  40af6a:	e519      	b.n	40a9a0 <_vfiprintf_r+0x57c>
  40af6c:	46cb      	mov	fp, r9
  40af6e:	f7ff bbab 	b.w	40a6c8 <_vfiprintf_r+0x2a4>
  40af72:	252d      	movs	r5, #45	; 0x2d
  40af74:	4276      	negs	r6, r6
  40af76:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
  40af7a:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  40af7e:	2201      	movs	r2, #1
  40af80:	f7ff bb88 	b.w	40a694 <_vfiprintf_r+0x270>
  40af84:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40af86:	b9b3      	cbnz	r3, 40afb6 <_vfiprintf_r+0xb92>
  40af88:	4611      	mov	r1, r2
  40af8a:	2001      	movs	r0, #1
  40af8c:	46ca      	mov	sl, r9
  40af8e:	e5f2      	b.n	40ab76 <_vfiprintf_r+0x752>
  40af90:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  40af94:	f001 fdca 	bl	40cb2c <__retarget_lock_release_recursive>
  40af98:	f04f 33ff 	mov.w	r3, #4294967295
  40af9c:	9303      	str	r3, [sp, #12]
  40af9e:	f7ff bb50 	b.w	40a642 <_vfiprintf_r+0x21e>
  40afa2:	aa0f      	add	r2, sp, #60	; 0x3c
  40afa4:	9904      	ldr	r1, [sp, #16]
  40afa6:	9806      	ldr	r0, [sp, #24]
  40afa8:	f7ff f9fc 	bl	40a3a4 <__sprint_r.part.0>
  40afac:	2800      	cmp	r0, #0
  40afae:	f47f aeeb 	bne.w	40ad88 <_vfiprintf_r+0x964>
  40afb2:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40afb4:	e6a9      	b.n	40ad0a <_vfiprintf_r+0x8e6>
  40afb6:	ab0e      	add	r3, sp, #56	; 0x38
  40afb8:	2202      	movs	r2, #2
  40afba:	931c      	str	r3, [sp, #112]	; 0x70
  40afbc:	921d      	str	r2, [sp, #116]	; 0x74
  40afbe:	2001      	movs	r0, #1
  40afc0:	46ca      	mov	sl, r9
  40afc2:	e5d0      	b.n	40ab66 <_vfiprintf_r+0x742>
  40afc4:	aa0f      	add	r2, sp, #60	; 0x3c
  40afc6:	9904      	ldr	r1, [sp, #16]
  40afc8:	9806      	ldr	r0, [sp, #24]
  40afca:	f7ff f9eb 	bl	40a3a4 <__sprint_r.part.0>
  40afce:	2800      	cmp	r0, #0
  40afd0:	f47f aeda 	bne.w	40ad88 <_vfiprintf_r+0x964>
  40afd4:	9910      	ldr	r1, [sp, #64]	; 0x40
  40afd6:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40afd8:	1c48      	adds	r0, r1, #1
  40afda:	46ca      	mov	sl, r9
  40afdc:	e5a4      	b.n	40ab28 <_vfiprintf_r+0x704>
  40afde:	9a07      	ldr	r2, [sp, #28]
  40afe0:	9903      	ldr	r1, [sp, #12]
  40afe2:	6813      	ldr	r3, [r2, #0]
  40afe4:	17cd      	asrs	r5, r1, #31
  40afe6:	4608      	mov	r0, r1
  40afe8:	3204      	adds	r2, #4
  40afea:	4629      	mov	r1, r5
  40afec:	9207      	str	r2, [sp, #28]
  40afee:	e9c3 0100 	strd	r0, r1, [r3]
  40aff2:	f7ff ba54 	b.w	40a49e <_vfiprintf_r+0x7a>
  40aff6:	4658      	mov	r0, fp
  40aff8:	9607      	str	r6, [sp, #28]
  40affa:	9302      	str	r3, [sp, #8]
  40affc:	f002 fb60 	bl	40d6c0 <strlen>
  40b000:	2400      	movs	r4, #0
  40b002:	9005      	str	r0, [sp, #20]
  40b004:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  40b008:	f7ff bb5e 	b.w	40a6c8 <_vfiprintf_r+0x2a4>
  40b00c:	aa0f      	add	r2, sp, #60	; 0x3c
  40b00e:	9904      	ldr	r1, [sp, #16]
  40b010:	9806      	ldr	r0, [sp, #24]
  40b012:	f7ff f9c7 	bl	40a3a4 <__sprint_r.part.0>
  40b016:	2800      	cmp	r0, #0
  40b018:	f47f aeb6 	bne.w	40ad88 <_vfiprintf_r+0x964>
  40b01c:	9910      	ldr	r1, [sp, #64]	; 0x40
  40b01e:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40b020:	1c48      	adds	r0, r1, #1
  40b022:	46ca      	mov	sl, r9
  40b024:	e5a7      	b.n	40ab76 <_vfiprintf_r+0x752>
  40b026:	9910      	ldr	r1, [sp, #64]	; 0x40
  40b028:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40b02a:	4e20      	ldr	r6, [pc, #128]	; (40b0ac <_vfiprintf_r+0xc88>)
  40b02c:	3101      	adds	r1, #1
  40b02e:	f7ff bb90 	b.w	40a752 <_vfiprintf_r+0x32e>
  40b032:	2c06      	cmp	r4, #6
  40b034:	bf28      	it	cs
  40b036:	2406      	movcs	r4, #6
  40b038:	9405      	str	r4, [sp, #20]
  40b03a:	9607      	str	r6, [sp, #28]
  40b03c:	9401      	str	r4, [sp, #4]
  40b03e:	f8df b070 	ldr.w	fp, [pc, #112]	; 40b0b0 <_vfiprintf_r+0xc8c>
  40b042:	e4d5      	b.n	40a9f0 <_vfiprintf_r+0x5cc>
  40b044:	9810      	ldr	r0, [sp, #64]	; 0x40
  40b046:	4e19      	ldr	r6, [pc, #100]	; (40b0ac <_vfiprintf_r+0xc88>)
  40b048:	3001      	adds	r0, #1
  40b04a:	e603      	b.n	40ac54 <_vfiprintf_r+0x830>
  40b04c:	9405      	str	r4, [sp, #20]
  40b04e:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  40b052:	9607      	str	r6, [sp, #28]
  40b054:	9302      	str	r3, [sp, #8]
  40b056:	4604      	mov	r4, r0
  40b058:	f7ff bb36 	b.w	40a6c8 <_vfiprintf_r+0x2a4>
  40b05c:	4686      	mov	lr, r0
  40b05e:	f7ff bbce 	b.w	40a7fe <_vfiprintf_r+0x3da>
  40b062:	9806      	ldr	r0, [sp, #24]
  40b064:	aa0f      	add	r2, sp, #60	; 0x3c
  40b066:	4659      	mov	r1, fp
  40b068:	f7ff f99c 	bl	40a3a4 <__sprint_r.part.0>
  40b06c:	2800      	cmp	r0, #0
  40b06e:	f43f ae24 	beq.w	40acba <_vfiprintf_r+0x896>
  40b072:	e624      	b.n	40acbe <_vfiprintf_r+0x89a>
  40b074:	9907      	ldr	r1, [sp, #28]
  40b076:	f898 2001 	ldrb.w	r2, [r8, #1]
  40b07a:	680c      	ldr	r4, [r1, #0]
  40b07c:	3104      	adds	r1, #4
  40b07e:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
  40b082:	46b8      	mov	r8, r7
  40b084:	9107      	str	r1, [sp, #28]
  40b086:	f7ff ba3f 	b.w	40a508 <_vfiprintf_r+0xe4>
  40b08a:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  40b08e:	e43c      	b.n	40a90a <_vfiprintf_r+0x4e6>
  40b090:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  40b094:	e521      	b.n	40aada <_vfiprintf_r+0x6b6>
  40b096:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  40b09a:	f7ff bbf4 	b.w	40a886 <_vfiprintf_r+0x462>
  40b09e:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  40b0a2:	e491      	b.n	40a9c8 <_vfiprintf_r+0x5a4>
  40b0a4:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  40b0a8:	e469      	b.n	40a97e <_vfiprintf_r+0x55a>
  40b0aa:	bf00      	nop
  40b0ac:	0040f6a0 	.word	0x0040f6a0
  40b0b0:	0040f674 	.word	0x0040f674

0040b0b4 <__sbprintf>:
  40b0b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40b0b8:	460c      	mov	r4, r1
  40b0ba:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
  40b0be:	8989      	ldrh	r1, [r1, #12]
  40b0c0:	6e66      	ldr	r6, [r4, #100]	; 0x64
  40b0c2:	89e5      	ldrh	r5, [r4, #14]
  40b0c4:	9619      	str	r6, [sp, #100]	; 0x64
  40b0c6:	f021 0102 	bic.w	r1, r1, #2
  40b0ca:	4606      	mov	r6, r0
  40b0cc:	69e0      	ldr	r0, [r4, #28]
  40b0ce:	f8ad 100c 	strh.w	r1, [sp, #12]
  40b0d2:	4617      	mov	r7, r2
  40b0d4:	f44f 6180 	mov.w	r1, #1024	; 0x400
  40b0d8:	6a62      	ldr	r2, [r4, #36]	; 0x24
  40b0da:	f8ad 500e 	strh.w	r5, [sp, #14]
  40b0de:	4698      	mov	r8, r3
  40b0e0:	ad1a      	add	r5, sp, #104	; 0x68
  40b0e2:	2300      	movs	r3, #0
  40b0e4:	9007      	str	r0, [sp, #28]
  40b0e6:	a816      	add	r0, sp, #88	; 0x58
  40b0e8:	9209      	str	r2, [sp, #36]	; 0x24
  40b0ea:	9306      	str	r3, [sp, #24]
  40b0ec:	9500      	str	r5, [sp, #0]
  40b0ee:	9504      	str	r5, [sp, #16]
  40b0f0:	9102      	str	r1, [sp, #8]
  40b0f2:	9105      	str	r1, [sp, #20]
  40b0f4:	f001 fd14 	bl	40cb20 <__retarget_lock_init_recursive>
  40b0f8:	4643      	mov	r3, r8
  40b0fa:	463a      	mov	r2, r7
  40b0fc:	4669      	mov	r1, sp
  40b0fe:	4630      	mov	r0, r6
  40b100:	f7ff f990 	bl	40a424 <_vfiprintf_r>
  40b104:	1e05      	subs	r5, r0, #0
  40b106:	db07      	blt.n	40b118 <__sbprintf+0x64>
  40b108:	4630      	mov	r0, r6
  40b10a:	4669      	mov	r1, sp
  40b10c:	f001 f8e6 	bl	40c2dc <_fflush_r>
  40b110:	2800      	cmp	r0, #0
  40b112:	bf18      	it	ne
  40b114:	f04f 35ff 	movne.w	r5, #4294967295
  40b118:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  40b11c:	065b      	lsls	r3, r3, #25
  40b11e:	d503      	bpl.n	40b128 <__sbprintf+0x74>
  40b120:	89a3      	ldrh	r3, [r4, #12]
  40b122:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40b126:	81a3      	strh	r3, [r4, #12]
  40b128:	9816      	ldr	r0, [sp, #88]	; 0x58
  40b12a:	f001 fcfb 	bl	40cb24 <__retarget_lock_close_recursive>
  40b12e:	4628      	mov	r0, r5
  40b130:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
  40b134:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0040b138 <__swsetup_r>:
  40b138:	b538      	push	{r3, r4, r5, lr}
  40b13a:	4b30      	ldr	r3, [pc, #192]	; (40b1fc <__swsetup_r+0xc4>)
  40b13c:	681b      	ldr	r3, [r3, #0]
  40b13e:	4605      	mov	r5, r0
  40b140:	460c      	mov	r4, r1
  40b142:	b113      	cbz	r3, 40b14a <__swsetup_r+0x12>
  40b144:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  40b146:	2a00      	cmp	r2, #0
  40b148:	d038      	beq.n	40b1bc <__swsetup_r+0x84>
  40b14a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40b14e:	b293      	uxth	r3, r2
  40b150:	0718      	lsls	r0, r3, #28
  40b152:	d50c      	bpl.n	40b16e <__swsetup_r+0x36>
  40b154:	6920      	ldr	r0, [r4, #16]
  40b156:	b1a8      	cbz	r0, 40b184 <__swsetup_r+0x4c>
  40b158:	f013 0201 	ands.w	r2, r3, #1
  40b15c:	d01e      	beq.n	40b19c <__swsetup_r+0x64>
  40b15e:	6963      	ldr	r3, [r4, #20]
  40b160:	2200      	movs	r2, #0
  40b162:	425b      	negs	r3, r3
  40b164:	61a3      	str	r3, [r4, #24]
  40b166:	60a2      	str	r2, [r4, #8]
  40b168:	b1f0      	cbz	r0, 40b1a8 <__swsetup_r+0x70>
  40b16a:	2000      	movs	r0, #0
  40b16c:	bd38      	pop	{r3, r4, r5, pc}
  40b16e:	06d9      	lsls	r1, r3, #27
  40b170:	d53c      	bpl.n	40b1ec <__swsetup_r+0xb4>
  40b172:	0758      	lsls	r0, r3, #29
  40b174:	d426      	bmi.n	40b1c4 <__swsetup_r+0x8c>
  40b176:	6920      	ldr	r0, [r4, #16]
  40b178:	f042 0308 	orr.w	r3, r2, #8
  40b17c:	81a3      	strh	r3, [r4, #12]
  40b17e:	b29b      	uxth	r3, r3
  40b180:	2800      	cmp	r0, #0
  40b182:	d1e9      	bne.n	40b158 <__swsetup_r+0x20>
  40b184:	f403 7220 	and.w	r2, r3, #640	; 0x280
  40b188:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  40b18c:	d0e4      	beq.n	40b158 <__swsetup_r+0x20>
  40b18e:	4628      	mov	r0, r5
  40b190:	4621      	mov	r1, r4
  40b192:	f001 fcfb 	bl	40cb8c <__smakebuf_r>
  40b196:	89a3      	ldrh	r3, [r4, #12]
  40b198:	6920      	ldr	r0, [r4, #16]
  40b19a:	e7dd      	b.n	40b158 <__swsetup_r+0x20>
  40b19c:	0799      	lsls	r1, r3, #30
  40b19e:	bf58      	it	pl
  40b1a0:	6962      	ldrpl	r2, [r4, #20]
  40b1a2:	60a2      	str	r2, [r4, #8]
  40b1a4:	2800      	cmp	r0, #0
  40b1a6:	d1e0      	bne.n	40b16a <__swsetup_r+0x32>
  40b1a8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40b1ac:	061a      	lsls	r2, r3, #24
  40b1ae:	d5dd      	bpl.n	40b16c <__swsetup_r+0x34>
  40b1b0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40b1b4:	81a3      	strh	r3, [r4, #12]
  40b1b6:	f04f 30ff 	mov.w	r0, #4294967295
  40b1ba:	bd38      	pop	{r3, r4, r5, pc}
  40b1bc:	4618      	mov	r0, r3
  40b1be:	f001 f8e5 	bl	40c38c <__sinit>
  40b1c2:	e7c2      	b.n	40b14a <__swsetup_r+0x12>
  40b1c4:	6b21      	ldr	r1, [r4, #48]	; 0x30
  40b1c6:	b151      	cbz	r1, 40b1de <__swsetup_r+0xa6>
  40b1c8:	f104 0340 	add.w	r3, r4, #64	; 0x40
  40b1cc:	4299      	cmp	r1, r3
  40b1ce:	d004      	beq.n	40b1da <__swsetup_r+0xa2>
  40b1d0:	4628      	mov	r0, r5
  40b1d2:	f001 fa01 	bl	40c5d8 <_free_r>
  40b1d6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40b1da:	2300      	movs	r3, #0
  40b1dc:	6323      	str	r3, [r4, #48]	; 0x30
  40b1de:	2300      	movs	r3, #0
  40b1e0:	6920      	ldr	r0, [r4, #16]
  40b1e2:	6063      	str	r3, [r4, #4]
  40b1e4:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  40b1e8:	6020      	str	r0, [r4, #0]
  40b1ea:	e7c5      	b.n	40b178 <__swsetup_r+0x40>
  40b1ec:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  40b1f0:	2309      	movs	r3, #9
  40b1f2:	602b      	str	r3, [r5, #0]
  40b1f4:	f04f 30ff 	mov.w	r0, #4294967295
  40b1f8:	81a2      	strh	r2, [r4, #12]
  40b1fa:	bd38      	pop	{r3, r4, r5, pc}
  40b1fc:	20400028 	.word	0x20400028

0040b200 <register_fini>:
  40b200:	4b02      	ldr	r3, [pc, #8]	; (40b20c <register_fini+0xc>)
  40b202:	b113      	cbz	r3, 40b20a <register_fini+0xa>
  40b204:	4802      	ldr	r0, [pc, #8]	; (40b210 <register_fini+0x10>)
  40b206:	f000 b805 	b.w	40b214 <atexit>
  40b20a:	4770      	bx	lr
  40b20c:	00000000 	.word	0x00000000
  40b210:	0040c3fd 	.word	0x0040c3fd

0040b214 <atexit>:
  40b214:	2300      	movs	r3, #0
  40b216:	4601      	mov	r1, r0
  40b218:	461a      	mov	r2, r3
  40b21a:	4618      	mov	r0, r3
  40b21c:	f002 bbe2 	b.w	40d9e4 <__register_exitproc>

0040b220 <quorem>:
  40b220:	6902      	ldr	r2, [r0, #16]
  40b222:	690b      	ldr	r3, [r1, #16]
  40b224:	4293      	cmp	r3, r2
  40b226:	f300 808d 	bgt.w	40b344 <quorem+0x124>
  40b22a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40b22e:	f103 38ff 	add.w	r8, r3, #4294967295
  40b232:	f101 0714 	add.w	r7, r1, #20
  40b236:	f100 0b14 	add.w	fp, r0, #20
  40b23a:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  40b23e:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  40b242:	ea4f 0488 	mov.w	r4, r8, lsl #2
  40b246:	b083      	sub	sp, #12
  40b248:	3201      	adds	r2, #1
  40b24a:	fbb3 f9f2 	udiv	r9, r3, r2
  40b24e:	eb0b 0304 	add.w	r3, fp, r4
  40b252:	9400      	str	r4, [sp, #0]
  40b254:	eb07 0a04 	add.w	sl, r7, r4
  40b258:	9301      	str	r3, [sp, #4]
  40b25a:	f1b9 0f00 	cmp.w	r9, #0
  40b25e:	d039      	beq.n	40b2d4 <quorem+0xb4>
  40b260:	2500      	movs	r5, #0
  40b262:	462e      	mov	r6, r5
  40b264:	46bc      	mov	ip, r7
  40b266:	46de      	mov	lr, fp
  40b268:	f85c 4b04 	ldr.w	r4, [ip], #4
  40b26c:	f8de 3000 	ldr.w	r3, [lr]
  40b270:	b2a2      	uxth	r2, r4
  40b272:	fb09 5502 	mla	r5, r9, r2, r5
  40b276:	0c22      	lsrs	r2, r4, #16
  40b278:	0c2c      	lsrs	r4, r5, #16
  40b27a:	fb09 4202 	mla	r2, r9, r2, r4
  40b27e:	b2ad      	uxth	r5, r5
  40b280:	1b75      	subs	r5, r6, r5
  40b282:	b296      	uxth	r6, r2
  40b284:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  40b288:	fa15 f383 	uxtah	r3, r5, r3
  40b28c:	eb06 4623 	add.w	r6, r6, r3, asr #16
  40b290:	b29b      	uxth	r3, r3
  40b292:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  40b296:	45e2      	cmp	sl, ip
  40b298:	ea4f 4512 	mov.w	r5, r2, lsr #16
  40b29c:	f84e 3b04 	str.w	r3, [lr], #4
  40b2a0:	ea4f 4626 	mov.w	r6, r6, asr #16
  40b2a4:	d2e0      	bcs.n	40b268 <quorem+0x48>
  40b2a6:	9b00      	ldr	r3, [sp, #0]
  40b2a8:	f85b 3003 	ldr.w	r3, [fp, r3]
  40b2ac:	b993      	cbnz	r3, 40b2d4 <quorem+0xb4>
  40b2ae:	9c01      	ldr	r4, [sp, #4]
  40b2b0:	1f23      	subs	r3, r4, #4
  40b2b2:	459b      	cmp	fp, r3
  40b2b4:	d20c      	bcs.n	40b2d0 <quorem+0xb0>
  40b2b6:	f854 3c04 	ldr.w	r3, [r4, #-4]
  40b2ba:	b94b      	cbnz	r3, 40b2d0 <quorem+0xb0>
  40b2bc:	f1a4 0308 	sub.w	r3, r4, #8
  40b2c0:	e002      	b.n	40b2c8 <quorem+0xa8>
  40b2c2:	681a      	ldr	r2, [r3, #0]
  40b2c4:	3b04      	subs	r3, #4
  40b2c6:	b91a      	cbnz	r2, 40b2d0 <quorem+0xb0>
  40b2c8:	459b      	cmp	fp, r3
  40b2ca:	f108 38ff 	add.w	r8, r8, #4294967295
  40b2ce:	d3f8      	bcc.n	40b2c2 <quorem+0xa2>
  40b2d0:	f8c0 8010 	str.w	r8, [r0, #16]
  40b2d4:	4604      	mov	r4, r0
  40b2d6:	f001 ff09 	bl	40d0ec <__mcmp>
  40b2da:	2800      	cmp	r0, #0
  40b2dc:	db2e      	blt.n	40b33c <quorem+0x11c>
  40b2de:	f109 0901 	add.w	r9, r9, #1
  40b2e2:	465d      	mov	r5, fp
  40b2e4:	2300      	movs	r3, #0
  40b2e6:	f857 1b04 	ldr.w	r1, [r7], #4
  40b2ea:	6828      	ldr	r0, [r5, #0]
  40b2ec:	b28a      	uxth	r2, r1
  40b2ee:	1a9a      	subs	r2, r3, r2
  40b2f0:	0c0b      	lsrs	r3, r1, #16
  40b2f2:	fa12 f280 	uxtah	r2, r2, r0
  40b2f6:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  40b2fa:	eb03 4322 	add.w	r3, r3, r2, asr #16
  40b2fe:	b292      	uxth	r2, r2
  40b300:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  40b304:	45ba      	cmp	sl, r7
  40b306:	f845 2b04 	str.w	r2, [r5], #4
  40b30a:	ea4f 4323 	mov.w	r3, r3, asr #16
  40b30e:	d2ea      	bcs.n	40b2e6 <quorem+0xc6>
  40b310:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  40b314:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  40b318:	b982      	cbnz	r2, 40b33c <quorem+0x11c>
  40b31a:	1f1a      	subs	r2, r3, #4
  40b31c:	4593      	cmp	fp, r2
  40b31e:	d20b      	bcs.n	40b338 <quorem+0x118>
  40b320:	f853 2c04 	ldr.w	r2, [r3, #-4]
  40b324:	b942      	cbnz	r2, 40b338 <quorem+0x118>
  40b326:	3b08      	subs	r3, #8
  40b328:	e002      	b.n	40b330 <quorem+0x110>
  40b32a:	681a      	ldr	r2, [r3, #0]
  40b32c:	3b04      	subs	r3, #4
  40b32e:	b91a      	cbnz	r2, 40b338 <quorem+0x118>
  40b330:	459b      	cmp	fp, r3
  40b332:	f108 38ff 	add.w	r8, r8, #4294967295
  40b336:	d3f8      	bcc.n	40b32a <quorem+0x10a>
  40b338:	f8c4 8010 	str.w	r8, [r4, #16]
  40b33c:	4648      	mov	r0, r9
  40b33e:	b003      	add	sp, #12
  40b340:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40b344:	2000      	movs	r0, #0
  40b346:	4770      	bx	lr

0040b348 <_dtoa_r>:
  40b348:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40b34c:	6c01      	ldr	r1, [r0, #64]	; 0x40
  40b34e:	b09b      	sub	sp, #108	; 0x6c
  40b350:	4604      	mov	r4, r0
  40b352:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  40b354:	4692      	mov	sl, r2
  40b356:	469b      	mov	fp, r3
  40b358:	b141      	cbz	r1, 40b36c <_dtoa_r+0x24>
  40b35a:	6c42      	ldr	r2, [r0, #68]	; 0x44
  40b35c:	604a      	str	r2, [r1, #4]
  40b35e:	2301      	movs	r3, #1
  40b360:	4093      	lsls	r3, r2
  40b362:	608b      	str	r3, [r1, #8]
  40b364:	f001 fcea 	bl	40cd3c <_Bfree>
  40b368:	2300      	movs	r3, #0
  40b36a:	6423      	str	r3, [r4, #64]	; 0x40
  40b36c:	f1bb 0f00 	cmp.w	fp, #0
  40b370:	465d      	mov	r5, fp
  40b372:	db35      	blt.n	40b3e0 <_dtoa_r+0x98>
  40b374:	2300      	movs	r3, #0
  40b376:	6033      	str	r3, [r6, #0]
  40b378:	4b9d      	ldr	r3, [pc, #628]	; (40b5f0 <_dtoa_r+0x2a8>)
  40b37a:	43ab      	bics	r3, r5
  40b37c:	d015      	beq.n	40b3aa <_dtoa_r+0x62>
  40b37e:	4650      	mov	r0, sl
  40b380:	4659      	mov	r1, fp
  40b382:	2200      	movs	r2, #0
  40b384:	2300      	movs	r3, #0
  40b386:	f7fc fca7 	bl	407cd8 <__aeabi_dcmpeq>
  40b38a:	4680      	mov	r8, r0
  40b38c:	2800      	cmp	r0, #0
  40b38e:	d02d      	beq.n	40b3ec <_dtoa_r+0xa4>
  40b390:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40b392:	2301      	movs	r3, #1
  40b394:	6013      	str	r3, [r2, #0]
  40b396:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  40b398:	2b00      	cmp	r3, #0
  40b39a:	f000 80bd 	beq.w	40b518 <_dtoa_r+0x1d0>
  40b39e:	4895      	ldr	r0, [pc, #596]	; (40b5f4 <_dtoa_r+0x2ac>)
  40b3a0:	6018      	str	r0, [r3, #0]
  40b3a2:	3801      	subs	r0, #1
  40b3a4:	b01b      	add	sp, #108	; 0x6c
  40b3a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40b3aa:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40b3ac:	f242 730f 	movw	r3, #9999	; 0x270f
  40b3b0:	6013      	str	r3, [r2, #0]
  40b3b2:	f1ba 0f00 	cmp.w	sl, #0
  40b3b6:	d10d      	bne.n	40b3d4 <_dtoa_r+0x8c>
  40b3b8:	f3c5 0513 	ubfx	r5, r5, #0, #20
  40b3bc:	b955      	cbnz	r5, 40b3d4 <_dtoa_r+0x8c>
  40b3be:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  40b3c0:	488d      	ldr	r0, [pc, #564]	; (40b5f8 <_dtoa_r+0x2b0>)
  40b3c2:	2b00      	cmp	r3, #0
  40b3c4:	d0ee      	beq.n	40b3a4 <_dtoa_r+0x5c>
  40b3c6:	f100 0308 	add.w	r3, r0, #8
  40b3ca:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  40b3cc:	6013      	str	r3, [r2, #0]
  40b3ce:	b01b      	add	sp, #108	; 0x6c
  40b3d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40b3d4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  40b3d6:	4889      	ldr	r0, [pc, #548]	; (40b5fc <_dtoa_r+0x2b4>)
  40b3d8:	2b00      	cmp	r3, #0
  40b3da:	d0e3      	beq.n	40b3a4 <_dtoa_r+0x5c>
  40b3dc:	1cc3      	adds	r3, r0, #3
  40b3de:	e7f4      	b.n	40b3ca <_dtoa_r+0x82>
  40b3e0:	2301      	movs	r3, #1
  40b3e2:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  40b3e6:	6033      	str	r3, [r6, #0]
  40b3e8:	46ab      	mov	fp, r5
  40b3ea:	e7c5      	b.n	40b378 <_dtoa_r+0x30>
  40b3ec:	aa18      	add	r2, sp, #96	; 0x60
  40b3ee:	ab19      	add	r3, sp, #100	; 0x64
  40b3f0:	9201      	str	r2, [sp, #4]
  40b3f2:	9300      	str	r3, [sp, #0]
  40b3f4:	4652      	mov	r2, sl
  40b3f6:	465b      	mov	r3, fp
  40b3f8:	4620      	mov	r0, r4
  40b3fa:	f001 ff17 	bl	40d22c <__d2b>
  40b3fe:	0d2b      	lsrs	r3, r5, #20
  40b400:	4681      	mov	r9, r0
  40b402:	d071      	beq.n	40b4e8 <_dtoa_r+0x1a0>
  40b404:	f3cb 0213 	ubfx	r2, fp, #0, #20
  40b408:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  40b40c:	9f18      	ldr	r7, [sp, #96]	; 0x60
  40b40e:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  40b412:	4650      	mov	r0, sl
  40b414:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  40b418:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  40b41c:	2200      	movs	r2, #0
  40b41e:	4b78      	ldr	r3, [pc, #480]	; (40b600 <_dtoa_r+0x2b8>)
  40b420:	f7fc f83e 	bl	4074a0 <__aeabi_dsub>
  40b424:	a36c      	add	r3, pc, #432	; (adr r3, 40b5d8 <_dtoa_r+0x290>)
  40b426:	e9d3 2300 	ldrd	r2, r3, [r3]
  40b42a:	f7fc f9ed 	bl	407808 <__aeabi_dmul>
  40b42e:	a36c      	add	r3, pc, #432	; (adr r3, 40b5e0 <_dtoa_r+0x298>)
  40b430:	e9d3 2300 	ldrd	r2, r3, [r3]
  40b434:	f7fc f836 	bl	4074a4 <__adddf3>
  40b438:	e9cd 0102 	strd	r0, r1, [sp, #8]
  40b43c:	4630      	mov	r0, r6
  40b43e:	f7fc f97d 	bl	40773c <__aeabi_i2d>
  40b442:	a369      	add	r3, pc, #420	; (adr r3, 40b5e8 <_dtoa_r+0x2a0>)
  40b444:	e9d3 2300 	ldrd	r2, r3, [r3]
  40b448:	f7fc f9de 	bl	407808 <__aeabi_dmul>
  40b44c:	4602      	mov	r2, r0
  40b44e:	460b      	mov	r3, r1
  40b450:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  40b454:	f7fc f826 	bl	4074a4 <__adddf3>
  40b458:	e9cd 0104 	strd	r0, r1, [sp, #16]
  40b45c:	f7fc fc6e 	bl	407d3c <__aeabi_d2iz>
  40b460:	2200      	movs	r2, #0
  40b462:	9002      	str	r0, [sp, #8]
  40b464:	2300      	movs	r3, #0
  40b466:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40b46a:	f7fc fc3f 	bl	407cec <__aeabi_dcmplt>
  40b46e:	2800      	cmp	r0, #0
  40b470:	f040 8173 	bne.w	40b75a <_dtoa_r+0x412>
  40b474:	9d02      	ldr	r5, [sp, #8]
  40b476:	2d16      	cmp	r5, #22
  40b478:	f200 815d 	bhi.w	40b736 <_dtoa_r+0x3ee>
  40b47c:	4b61      	ldr	r3, [pc, #388]	; (40b604 <_dtoa_r+0x2bc>)
  40b47e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  40b482:	e9d3 0100 	ldrd	r0, r1, [r3]
  40b486:	4652      	mov	r2, sl
  40b488:	465b      	mov	r3, fp
  40b48a:	f7fc fc4d 	bl	407d28 <__aeabi_dcmpgt>
  40b48e:	2800      	cmp	r0, #0
  40b490:	f000 81c5 	beq.w	40b81e <_dtoa_r+0x4d6>
  40b494:	1e6b      	subs	r3, r5, #1
  40b496:	9302      	str	r3, [sp, #8]
  40b498:	2300      	movs	r3, #0
  40b49a:	930e      	str	r3, [sp, #56]	; 0x38
  40b49c:	1bbf      	subs	r7, r7, r6
  40b49e:	1e7b      	subs	r3, r7, #1
  40b4a0:	9306      	str	r3, [sp, #24]
  40b4a2:	f100 8154 	bmi.w	40b74e <_dtoa_r+0x406>
  40b4a6:	2300      	movs	r3, #0
  40b4a8:	9308      	str	r3, [sp, #32]
  40b4aa:	9b02      	ldr	r3, [sp, #8]
  40b4ac:	2b00      	cmp	r3, #0
  40b4ae:	f2c0 8145 	blt.w	40b73c <_dtoa_r+0x3f4>
  40b4b2:	9a06      	ldr	r2, [sp, #24]
  40b4b4:	930d      	str	r3, [sp, #52]	; 0x34
  40b4b6:	4611      	mov	r1, r2
  40b4b8:	4419      	add	r1, r3
  40b4ba:	2300      	movs	r3, #0
  40b4bc:	9106      	str	r1, [sp, #24]
  40b4be:	930c      	str	r3, [sp, #48]	; 0x30
  40b4c0:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40b4c2:	2b09      	cmp	r3, #9
  40b4c4:	d82a      	bhi.n	40b51c <_dtoa_r+0x1d4>
  40b4c6:	2b05      	cmp	r3, #5
  40b4c8:	f340 865b 	ble.w	40c182 <_dtoa_r+0xe3a>
  40b4cc:	3b04      	subs	r3, #4
  40b4ce:	9324      	str	r3, [sp, #144]	; 0x90
  40b4d0:	2500      	movs	r5, #0
  40b4d2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40b4d4:	3b02      	subs	r3, #2
  40b4d6:	2b03      	cmp	r3, #3
  40b4d8:	f200 8642 	bhi.w	40c160 <_dtoa_r+0xe18>
  40b4dc:	e8df f013 	tbh	[pc, r3, lsl #1]
  40b4e0:	02c903d4 	.word	0x02c903d4
  40b4e4:	046103df 	.word	0x046103df
  40b4e8:	9f18      	ldr	r7, [sp, #96]	; 0x60
  40b4ea:	9e19      	ldr	r6, [sp, #100]	; 0x64
  40b4ec:	443e      	add	r6, r7
  40b4ee:	f206 4332 	addw	r3, r6, #1074	; 0x432
  40b4f2:	2b20      	cmp	r3, #32
  40b4f4:	f340 818e 	ble.w	40b814 <_dtoa_r+0x4cc>
  40b4f8:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  40b4fc:	f206 4012 	addw	r0, r6, #1042	; 0x412
  40b500:	409d      	lsls	r5, r3
  40b502:	fa2a f000 	lsr.w	r0, sl, r0
  40b506:	4328      	orrs	r0, r5
  40b508:	f7fc f908 	bl	40771c <__aeabi_ui2d>
  40b50c:	2301      	movs	r3, #1
  40b50e:	3e01      	subs	r6, #1
  40b510:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  40b514:	9314      	str	r3, [sp, #80]	; 0x50
  40b516:	e781      	b.n	40b41c <_dtoa_r+0xd4>
  40b518:	483b      	ldr	r0, [pc, #236]	; (40b608 <_dtoa_r+0x2c0>)
  40b51a:	e743      	b.n	40b3a4 <_dtoa_r+0x5c>
  40b51c:	2100      	movs	r1, #0
  40b51e:	6461      	str	r1, [r4, #68]	; 0x44
  40b520:	4620      	mov	r0, r4
  40b522:	9125      	str	r1, [sp, #148]	; 0x94
  40b524:	f001 fbe4 	bl	40ccf0 <_Balloc>
  40b528:	f04f 33ff 	mov.w	r3, #4294967295
  40b52c:	930a      	str	r3, [sp, #40]	; 0x28
  40b52e:	9a25      	ldr	r2, [sp, #148]	; 0x94
  40b530:	930f      	str	r3, [sp, #60]	; 0x3c
  40b532:	2301      	movs	r3, #1
  40b534:	9004      	str	r0, [sp, #16]
  40b536:	6420      	str	r0, [r4, #64]	; 0x40
  40b538:	9224      	str	r2, [sp, #144]	; 0x90
  40b53a:	930b      	str	r3, [sp, #44]	; 0x2c
  40b53c:	9b19      	ldr	r3, [sp, #100]	; 0x64
  40b53e:	2b00      	cmp	r3, #0
  40b540:	f2c0 80d9 	blt.w	40b6f6 <_dtoa_r+0x3ae>
  40b544:	9a02      	ldr	r2, [sp, #8]
  40b546:	2a0e      	cmp	r2, #14
  40b548:	f300 80d5 	bgt.w	40b6f6 <_dtoa_r+0x3ae>
  40b54c:	4b2d      	ldr	r3, [pc, #180]	; (40b604 <_dtoa_r+0x2bc>)
  40b54e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40b552:	e9d3 2300 	ldrd	r2, r3, [r3]
  40b556:	e9cd 2308 	strd	r2, r3, [sp, #32]
  40b55a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40b55c:	2b00      	cmp	r3, #0
  40b55e:	f2c0 83ba 	blt.w	40bcd6 <_dtoa_r+0x98e>
  40b562:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  40b566:	4650      	mov	r0, sl
  40b568:	462a      	mov	r2, r5
  40b56a:	4633      	mov	r3, r6
  40b56c:	4659      	mov	r1, fp
  40b56e:	f7fc fa75 	bl	407a5c <__aeabi_ddiv>
  40b572:	f7fc fbe3 	bl	407d3c <__aeabi_d2iz>
  40b576:	4680      	mov	r8, r0
  40b578:	f7fc f8e0 	bl	40773c <__aeabi_i2d>
  40b57c:	462a      	mov	r2, r5
  40b57e:	4633      	mov	r3, r6
  40b580:	f7fc f942 	bl	407808 <__aeabi_dmul>
  40b584:	460b      	mov	r3, r1
  40b586:	4602      	mov	r2, r0
  40b588:	4659      	mov	r1, fp
  40b58a:	4650      	mov	r0, sl
  40b58c:	f7fb ff88 	bl	4074a0 <__aeabi_dsub>
  40b590:	9d04      	ldr	r5, [sp, #16]
  40b592:	f108 0330 	add.w	r3, r8, #48	; 0x30
  40b596:	702b      	strb	r3, [r5, #0]
  40b598:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40b59a:	2b01      	cmp	r3, #1
  40b59c:	4606      	mov	r6, r0
  40b59e:	460f      	mov	r7, r1
  40b5a0:	f105 0501 	add.w	r5, r5, #1
  40b5a4:	d068      	beq.n	40b678 <_dtoa_r+0x330>
  40b5a6:	2200      	movs	r2, #0
  40b5a8:	4b18      	ldr	r3, [pc, #96]	; (40b60c <_dtoa_r+0x2c4>)
  40b5aa:	f7fc f92d 	bl	407808 <__aeabi_dmul>
  40b5ae:	2200      	movs	r2, #0
  40b5b0:	2300      	movs	r3, #0
  40b5b2:	4606      	mov	r6, r0
  40b5b4:	460f      	mov	r7, r1
  40b5b6:	f7fc fb8f 	bl	407cd8 <__aeabi_dcmpeq>
  40b5ba:	2800      	cmp	r0, #0
  40b5bc:	f040 8088 	bne.w	40b6d0 <_dtoa_r+0x388>
  40b5c0:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  40b5c4:	f04f 0a00 	mov.w	sl, #0
  40b5c8:	f8df b040 	ldr.w	fp, [pc, #64]	; 40b60c <_dtoa_r+0x2c4>
  40b5cc:	940c      	str	r4, [sp, #48]	; 0x30
  40b5ce:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  40b5d2:	e028      	b.n	40b626 <_dtoa_r+0x2de>
  40b5d4:	f3af 8000 	nop.w
  40b5d8:	636f4361 	.word	0x636f4361
  40b5dc:	3fd287a7 	.word	0x3fd287a7
  40b5e0:	8b60c8b3 	.word	0x8b60c8b3
  40b5e4:	3fc68a28 	.word	0x3fc68a28
  40b5e8:	509f79fb 	.word	0x509f79fb
  40b5ec:	3fd34413 	.word	0x3fd34413
  40b5f0:	7ff00000 	.word	0x7ff00000
  40b5f4:	0040f67d 	.word	0x0040f67d
  40b5f8:	0040f6c0 	.word	0x0040f6c0
  40b5fc:	0040f6cc 	.word	0x0040f6cc
  40b600:	3ff80000 	.word	0x3ff80000
  40b604:	0040f708 	.word	0x0040f708
  40b608:	0040f67c 	.word	0x0040f67c
  40b60c:	40240000 	.word	0x40240000
  40b610:	f7fc f8fa 	bl	407808 <__aeabi_dmul>
  40b614:	2200      	movs	r2, #0
  40b616:	2300      	movs	r3, #0
  40b618:	4606      	mov	r6, r0
  40b61a:	460f      	mov	r7, r1
  40b61c:	f7fc fb5c 	bl	407cd8 <__aeabi_dcmpeq>
  40b620:	2800      	cmp	r0, #0
  40b622:	f040 83c1 	bne.w	40bda8 <_dtoa_r+0xa60>
  40b626:	4642      	mov	r2, r8
  40b628:	464b      	mov	r3, r9
  40b62a:	4630      	mov	r0, r6
  40b62c:	4639      	mov	r1, r7
  40b62e:	f7fc fa15 	bl	407a5c <__aeabi_ddiv>
  40b632:	f7fc fb83 	bl	407d3c <__aeabi_d2iz>
  40b636:	4604      	mov	r4, r0
  40b638:	f7fc f880 	bl	40773c <__aeabi_i2d>
  40b63c:	4642      	mov	r2, r8
  40b63e:	464b      	mov	r3, r9
  40b640:	f7fc f8e2 	bl	407808 <__aeabi_dmul>
  40b644:	4602      	mov	r2, r0
  40b646:	460b      	mov	r3, r1
  40b648:	4630      	mov	r0, r6
  40b64a:	4639      	mov	r1, r7
  40b64c:	f7fb ff28 	bl	4074a0 <__aeabi_dsub>
  40b650:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  40b654:	9e04      	ldr	r6, [sp, #16]
  40b656:	f805 eb01 	strb.w	lr, [r5], #1
  40b65a:	eba5 0e06 	sub.w	lr, r5, r6
  40b65e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  40b660:	45b6      	cmp	lr, r6
  40b662:	e9cd 0106 	strd	r0, r1, [sp, #24]
  40b666:	4652      	mov	r2, sl
  40b668:	465b      	mov	r3, fp
  40b66a:	d1d1      	bne.n	40b610 <_dtoa_r+0x2c8>
  40b66c:	46a0      	mov	r8, r4
  40b66e:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  40b672:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40b674:	4606      	mov	r6, r0
  40b676:	460f      	mov	r7, r1
  40b678:	4632      	mov	r2, r6
  40b67a:	463b      	mov	r3, r7
  40b67c:	4630      	mov	r0, r6
  40b67e:	4639      	mov	r1, r7
  40b680:	f7fb ff10 	bl	4074a4 <__adddf3>
  40b684:	4606      	mov	r6, r0
  40b686:	460f      	mov	r7, r1
  40b688:	4602      	mov	r2, r0
  40b68a:	460b      	mov	r3, r1
  40b68c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  40b690:	f7fc fb2c 	bl	407cec <__aeabi_dcmplt>
  40b694:	b948      	cbnz	r0, 40b6aa <_dtoa_r+0x362>
  40b696:	4632      	mov	r2, r6
  40b698:	463b      	mov	r3, r7
  40b69a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  40b69e:	f7fc fb1b 	bl	407cd8 <__aeabi_dcmpeq>
  40b6a2:	b1a8      	cbz	r0, 40b6d0 <_dtoa_r+0x388>
  40b6a4:	f018 0f01 	tst.w	r8, #1
  40b6a8:	d012      	beq.n	40b6d0 <_dtoa_r+0x388>
  40b6aa:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  40b6ae:	9a04      	ldr	r2, [sp, #16]
  40b6b0:	1e6b      	subs	r3, r5, #1
  40b6b2:	e004      	b.n	40b6be <_dtoa_r+0x376>
  40b6b4:	429a      	cmp	r2, r3
  40b6b6:	f000 8401 	beq.w	40bebc <_dtoa_r+0xb74>
  40b6ba:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  40b6be:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  40b6c2:	f103 0501 	add.w	r5, r3, #1
  40b6c6:	d0f5      	beq.n	40b6b4 <_dtoa_r+0x36c>
  40b6c8:	f108 0801 	add.w	r8, r8, #1
  40b6cc:	f883 8000 	strb.w	r8, [r3]
  40b6d0:	4649      	mov	r1, r9
  40b6d2:	4620      	mov	r0, r4
  40b6d4:	f001 fb32 	bl	40cd3c <_Bfree>
  40b6d8:	2200      	movs	r2, #0
  40b6da:	9b02      	ldr	r3, [sp, #8]
  40b6dc:	702a      	strb	r2, [r5, #0]
  40b6de:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40b6e0:	3301      	adds	r3, #1
  40b6e2:	6013      	str	r3, [r2, #0]
  40b6e4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  40b6e6:	2b00      	cmp	r3, #0
  40b6e8:	f000 839e 	beq.w	40be28 <_dtoa_r+0xae0>
  40b6ec:	9804      	ldr	r0, [sp, #16]
  40b6ee:	601d      	str	r5, [r3, #0]
  40b6f0:	b01b      	add	sp, #108	; 0x6c
  40b6f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40b6f6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  40b6f8:	2a00      	cmp	r2, #0
  40b6fa:	d03e      	beq.n	40b77a <_dtoa_r+0x432>
  40b6fc:	9a24      	ldr	r2, [sp, #144]	; 0x90
  40b6fe:	2a01      	cmp	r2, #1
  40b700:	f340 8311 	ble.w	40bd26 <_dtoa_r+0x9de>
  40b704:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40b706:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  40b708:	1e5f      	subs	r7, r3, #1
  40b70a:	42ba      	cmp	r2, r7
  40b70c:	f2c0 838f 	blt.w	40be2e <_dtoa_r+0xae6>
  40b710:	1bd7      	subs	r7, r2, r7
  40b712:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40b714:	2b00      	cmp	r3, #0
  40b716:	f2c0 848b 	blt.w	40c030 <_dtoa_r+0xce8>
  40b71a:	9d08      	ldr	r5, [sp, #32]
  40b71c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40b71e:	9a08      	ldr	r2, [sp, #32]
  40b720:	441a      	add	r2, r3
  40b722:	9208      	str	r2, [sp, #32]
  40b724:	9a06      	ldr	r2, [sp, #24]
  40b726:	2101      	movs	r1, #1
  40b728:	441a      	add	r2, r3
  40b72a:	4620      	mov	r0, r4
  40b72c:	9206      	str	r2, [sp, #24]
  40b72e:	f001 fb9f 	bl	40ce70 <__i2b>
  40b732:	4606      	mov	r6, r0
  40b734:	e024      	b.n	40b780 <_dtoa_r+0x438>
  40b736:	2301      	movs	r3, #1
  40b738:	930e      	str	r3, [sp, #56]	; 0x38
  40b73a:	e6af      	b.n	40b49c <_dtoa_r+0x154>
  40b73c:	9a08      	ldr	r2, [sp, #32]
  40b73e:	9b02      	ldr	r3, [sp, #8]
  40b740:	1ad2      	subs	r2, r2, r3
  40b742:	425b      	negs	r3, r3
  40b744:	930c      	str	r3, [sp, #48]	; 0x30
  40b746:	2300      	movs	r3, #0
  40b748:	9208      	str	r2, [sp, #32]
  40b74a:	930d      	str	r3, [sp, #52]	; 0x34
  40b74c:	e6b8      	b.n	40b4c0 <_dtoa_r+0x178>
  40b74e:	f1c7 0301 	rsb	r3, r7, #1
  40b752:	9308      	str	r3, [sp, #32]
  40b754:	2300      	movs	r3, #0
  40b756:	9306      	str	r3, [sp, #24]
  40b758:	e6a7      	b.n	40b4aa <_dtoa_r+0x162>
  40b75a:	9d02      	ldr	r5, [sp, #8]
  40b75c:	4628      	mov	r0, r5
  40b75e:	f7fb ffed 	bl	40773c <__aeabi_i2d>
  40b762:	4602      	mov	r2, r0
  40b764:	460b      	mov	r3, r1
  40b766:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40b76a:	f7fc fab5 	bl	407cd8 <__aeabi_dcmpeq>
  40b76e:	2800      	cmp	r0, #0
  40b770:	f47f ae80 	bne.w	40b474 <_dtoa_r+0x12c>
  40b774:	1e6b      	subs	r3, r5, #1
  40b776:	9302      	str	r3, [sp, #8]
  40b778:	e67c      	b.n	40b474 <_dtoa_r+0x12c>
  40b77a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  40b77c:	9d08      	ldr	r5, [sp, #32]
  40b77e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  40b780:	2d00      	cmp	r5, #0
  40b782:	dd0c      	ble.n	40b79e <_dtoa_r+0x456>
  40b784:	9906      	ldr	r1, [sp, #24]
  40b786:	2900      	cmp	r1, #0
  40b788:	460b      	mov	r3, r1
  40b78a:	dd08      	ble.n	40b79e <_dtoa_r+0x456>
  40b78c:	42a9      	cmp	r1, r5
  40b78e:	9a08      	ldr	r2, [sp, #32]
  40b790:	bfa8      	it	ge
  40b792:	462b      	movge	r3, r5
  40b794:	1ad2      	subs	r2, r2, r3
  40b796:	1aed      	subs	r5, r5, r3
  40b798:	1acb      	subs	r3, r1, r3
  40b79a:	9208      	str	r2, [sp, #32]
  40b79c:	9306      	str	r3, [sp, #24]
  40b79e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40b7a0:	b1d3      	cbz	r3, 40b7d8 <_dtoa_r+0x490>
  40b7a2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40b7a4:	2b00      	cmp	r3, #0
  40b7a6:	f000 82b7 	beq.w	40bd18 <_dtoa_r+0x9d0>
  40b7aa:	2f00      	cmp	r7, #0
  40b7ac:	dd10      	ble.n	40b7d0 <_dtoa_r+0x488>
  40b7ae:	4631      	mov	r1, r6
  40b7b0:	463a      	mov	r2, r7
  40b7b2:	4620      	mov	r0, r4
  40b7b4:	f001 fbf8 	bl	40cfa8 <__pow5mult>
  40b7b8:	464a      	mov	r2, r9
  40b7ba:	4601      	mov	r1, r0
  40b7bc:	4606      	mov	r6, r0
  40b7be:	4620      	mov	r0, r4
  40b7c0:	f001 fb60 	bl	40ce84 <__multiply>
  40b7c4:	4649      	mov	r1, r9
  40b7c6:	4680      	mov	r8, r0
  40b7c8:	4620      	mov	r0, r4
  40b7ca:	f001 fab7 	bl	40cd3c <_Bfree>
  40b7ce:	46c1      	mov	r9, r8
  40b7d0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40b7d2:	1bda      	subs	r2, r3, r7
  40b7d4:	f040 82a1 	bne.w	40bd1a <_dtoa_r+0x9d2>
  40b7d8:	2101      	movs	r1, #1
  40b7da:	4620      	mov	r0, r4
  40b7dc:	f001 fb48 	bl	40ce70 <__i2b>
  40b7e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40b7e2:	2b00      	cmp	r3, #0
  40b7e4:	4680      	mov	r8, r0
  40b7e6:	dd1c      	ble.n	40b822 <_dtoa_r+0x4da>
  40b7e8:	4601      	mov	r1, r0
  40b7ea:	461a      	mov	r2, r3
  40b7ec:	4620      	mov	r0, r4
  40b7ee:	f001 fbdb 	bl	40cfa8 <__pow5mult>
  40b7f2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40b7f4:	2b01      	cmp	r3, #1
  40b7f6:	4680      	mov	r8, r0
  40b7f8:	f340 8254 	ble.w	40bca4 <_dtoa_r+0x95c>
  40b7fc:	2300      	movs	r3, #0
  40b7fe:	930c      	str	r3, [sp, #48]	; 0x30
  40b800:	f8d8 3010 	ldr.w	r3, [r8, #16]
  40b804:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  40b808:	6918      	ldr	r0, [r3, #16]
  40b80a:	f001 fae1 	bl	40cdd0 <__hi0bits>
  40b80e:	f1c0 0020 	rsb	r0, r0, #32
  40b812:	e010      	b.n	40b836 <_dtoa_r+0x4ee>
  40b814:	f1c3 0520 	rsb	r5, r3, #32
  40b818:	fa0a f005 	lsl.w	r0, sl, r5
  40b81c:	e674      	b.n	40b508 <_dtoa_r+0x1c0>
  40b81e:	900e      	str	r0, [sp, #56]	; 0x38
  40b820:	e63c      	b.n	40b49c <_dtoa_r+0x154>
  40b822:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40b824:	2b01      	cmp	r3, #1
  40b826:	f340 8287 	ble.w	40bd38 <_dtoa_r+0x9f0>
  40b82a:	2300      	movs	r3, #0
  40b82c:	930c      	str	r3, [sp, #48]	; 0x30
  40b82e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40b830:	2001      	movs	r0, #1
  40b832:	2b00      	cmp	r3, #0
  40b834:	d1e4      	bne.n	40b800 <_dtoa_r+0x4b8>
  40b836:	9a06      	ldr	r2, [sp, #24]
  40b838:	4410      	add	r0, r2
  40b83a:	f010 001f 	ands.w	r0, r0, #31
  40b83e:	f000 80a1 	beq.w	40b984 <_dtoa_r+0x63c>
  40b842:	f1c0 0320 	rsb	r3, r0, #32
  40b846:	2b04      	cmp	r3, #4
  40b848:	f340 849e 	ble.w	40c188 <_dtoa_r+0xe40>
  40b84c:	9b08      	ldr	r3, [sp, #32]
  40b84e:	f1c0 001c 	rsb	r0, r0, #28
  40b852:	4403      	add	r3, r0
  40b854:	9308      	str	r3, [sp, #32]
  40b856:	4613      	mov	r3, r2
  40b858:	4403      	add	r3, r0
  40b85a:	4405      	add	r5, r0
  40b85c:	9306      	str	r3, [sp, #24]
  40b85e:	9b08      	ldr	r3, [sp, #32]
  40b860:	2b00      	cmp	r3, #0
  40b862:	dd05      	ble.n	40b870 <_dtoa_r+0x528>
  40b864:	4649      	mov	r1, r9
  40b866:	461a      	mov	r2, r3
  40b868:	4620      	mov	r0, r4
  40b86a:	f001 fbed 	bl	40d048 <__lshift>
  40b86e:	4681      	mov	r9, r0
  40b870:	9b06      	ldr	r3, [sp, #24]
  40b872:	2b00      	cmp	r3, #0
  40b874:	dd05      	ble.n	40b882 <_dtoa_r+0x53a>
  40b876:	4641      	mov	r1, r8
  40b878:	461a      	mov	r2, r3
  40b87a:	4620      	mov	r0, r4
  40b87c:	f001 fbe4 	bl	40d048 <__lshift>
  40b880:	4680      	mov	r8, r0
  40b882:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40b884:	2b00      	cmp	r3, #0
  40b886:	f040 8086 	bne.w	40b996 <_dtoa_r+0x64e>
  40b88a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40b88c:	2b00      	cmp	r3, #0
  40b88e:	f340 8266 	ble.w	40bd5e <_dtoa_r+0xa16>
  40b892:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40b894:	2b00      	cmp	r3, #0
  40b896:	f000 8098 	beq.w	40b9ca <_dtoa_r+0x682>
  40b89a:	2d00      	cmp	r5, #0
  40b89c:	dd05      	ble.n	40b8aa <_dtoa_r+0x562>
  40b89e:	4631      	mov	r1, r6
  40b8a0:	462a      	mov	r2, r5
  40b8a2:	4620      	mov	r0, r4
  40b8a4:	f001 fbd0 	bl	40d048 <__lshift>
  40b8a8:	4606      	mov	r6, r0
  40b8aa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40b8ac:	2b00      	cmp	r3, #0
  40b8ae:	f040 8337 	bne.w	40bf20 <_dtoa_r+0xbd8>
  40b8b2:	9606      	str	r6, [sp, #24]
  40b8b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40b8b6:	9a04      	ldr	r2, [sp, #16]
  40b8b8:	f8dd b018 	ldr.w	fp, [sp, #24]
  40b8bc:	3b01      	subs	r3, #1
  40b8be:	18d3      	adds	r3, r2, r3
  40b8c0:	930b      	str	r3, [sp, #44]	; 0x2c
  40b8c2:	f00a 0301 	and.w	r3, sl, #1
  40b8c6:	930c      	str	r3, [sp, #48]	; 0x30
  40b8c8:	4617      	mov	r7, r2
  40b8ca:	46c2      	mov	sl, r8
  40b8cc:	4651      	mov	r1, sl
  40b8ce:	4648      	mov	r0, r9
  40b8d0:	f7ff fca6 	bl	40b220 <quorem>
  40b8d4:	4631      	mov	r1, r6
  40b8d6:	4605      	mov	r5, r0
  40b8d8:	4648      	mov	r0, r9
  40b8da:	f001 fc07 	bl	40d0ec <__mcmp>
  40b8de:	465a      	mov	r2, fp
  40b8e0:	900a      	str	r0, [sp, #40]	; 0x28
  40b8e2:	4651      	mov	r1, sl
  40b8e4:	4620      	mov	r0, r4
  40b8e6:	f001 fc1d 	bl	40d124 <__mdiff>
  40b8ea:	68c2      	ldr	r2, [r0, #12]
  40b8ec:	4680      	mov	r8, r0
  40b8ee:	f105 0330 	add.w	r3, r5, #48	; 0x30
  40b8f2:	2a00      	cmp	r2, #0
  40b8f4:	f040 822b 	bne.w	40bd4e <_dtoa_r+0xa06>
  40b8f8:	4601      	mov	r1, r0
  40b8fa:	4648      	mov	r0, r9
  40b8fc:	9308      	str	r3, [sp, #32]
  40b8fe:	f001 fbf5 	bl	40d0ec <__mcmp>
  40b902:	4641      	mov	r1, r8
  40b904:	9006      	str	r0, [sp, #24]
  40b906:	4620      	mov	r0, r4
  40b908:	f001 fa18 	bl	40cd3c <_Bfree>
  40b90c:	9a06      	ldr	r2, [sp, #24]
  40b90e:	9b08      	ldr	r3, [sp, #32]
  40b910:	b932      	cbnz	r2, 40b920 <_dtoa_r+0x5d8>
  40b912:	9924      	ldr	r1, [sp, #144]	; 0x90
  40b914:	b921      	cbnz	r1, 40b920 <_dtoa_r+0x5d8>
  40b916:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  40b918:	2a00      	cmp	r2, #0
  40b91a:	f000 83ef 	beq.w	40c0fc <_dtoa_r+0xdb4>
  40b91e:	9a24      	ldr	r2, [sp, #144]	; 0x90
  40b920:	990a      	ldr	r1, [sp, #40]	; 0x28
  40b922:	2900      	cmp	r1, #0
  40b924:	f2c0 829f 	blt.w	40be66 <_dtoa_r+0xb1e>
  40b928:	d105      	bne.n	40b936 <_dtoa_r+0x5ee>
  40b92a:	9924      	ldr	r1, [sp, #144]	; 0x90
  40b92c:	b919      	cbnz	r1, 40b936 <_dtoa_r+0x5ee>
  40b92e:	990c      	ldr	r1, [sp, #48]	; 0x30
  40b930:	2900      	cmp	r1, #0
  40b932:	f000 8298 	beq.w	40be66 <_dtoa_r+0xb1e>
  40b936:	2a00      	cmp	r2, #0
  40b938:	f300 8306 	bgt.w	40bf48 <_dtoa_r+0xc00>
  40b93c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  40b93e:	703b      	strb	r3, [r7, #0]
  40b940:	f107 0801 	add.w	r8, r7, #1
  40b944:	4297      	cmp	r7, r2
  40b946:	4645      	mov	r5, r8
  40b948:	f000 830c 	beq.w	40bf64 <_dtoa_r+0xc1c>
  40b94c:	4649      	mov	r1, r9
  40b94e:	2300      	movs	r3, #0
  40b950:	220a      	movs	r2, #10
  40b952:	4620      	mov	r0, r4
  40b954:	f001 f9fc 	bl	40cd50 <__multadd>
  40b958:	455e      	cmp	r6, fp
  40b95a:	4681      	mov	r9, r0
  40b95c:	4631      	mov	r1, r6
  40b95e:	f04f 0300 	mov.w	r3, #0
  40b962:	f04f 020a 	mov.w	r2, #10
  40b966:	4620      	mov	r0, r4
  40b968:	f000 81eb 	beq.w	40bd42 <_dtoa_r+0x9fa>
  40b96c:	f001 f9f0 	bl	40cd50 <__multadd>
  40b970:	4659      	mov	r1, fp
  40b972:	4606      	mov	r6, r0
  40b974:	2300      	movs	r3, #0
  40b976:	220a      	movs	r2, #10
  40b978:	4620      	mov	r0, r4
  40b97a:	f001 f9e9 	bl	40cd50 <__multadd>
  40b97e:	4647      	mov	r7, r8
  40b980:	4683      	mov	fp, r0
  40b982:	e7a3      	b.n	40b8cc <_dtoa_r+0x584>
  40b984:	201c      	movs	r0, #28
  40b986:	9b08      	ldr	r3, [sp, #32]
  40b988:	4403      	add	r3, r0
  40b98a:	9308      	str	r3, [sp, #32]
  40b98c:	9b06      	ldr	r3, [sp, #24]
  40b98e:	4403      	add	r3, r0
  40b990:	4405      	add	r5, r0
  40b992:	9306      	str	r3, [sp, #24]
  40b994:	e763      	b.n	40b85e <_dtoa_r+0x516>
  40b996:	4641      	mov	r1, r8
  40b998:	4648      	mov	r0, r9
  40b99a:	f001 fba7 	bl	40d0ec <__mcmp>
  40b99e:	2800      	cmp	r0, #0
  40b9a0:	f6bf af73 	bge.w	40b88a <_dtoa_r+0x542>
  40b9a4:	9f02      	ldr	r7, [sp, #8]
  40b9a6:	4649      	mov	r1, r9
  40b9a8:	2300      	movs	r3, #0
  40b9aa:	220a      	movs	r2, #10
  40b9ac:	4620      	mov	r0, r4
  40b9ae:	3f01      	subs	r7, #1
  40b9b0:	9702      	str	r7, [sp, #8]
  40b9b2:	f001 f9cd 	bl	40cd50 <__multadd>
  40b9b6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40b9b8:	4681      	mov	r9, r0
  40b9ba:	2b00      	cmp	r3, #0
  40b9bc:	f040 83b6 	bne.w	40c12c <_dtoa_r+0xde4>
  40b9c0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40b9c2:	2b00      	cmp	r3, #0
  40b9c4:	f340 83bf 	ble.w	40c146 <_dtoa_r+0xdfe>
  40b9c8:	930a      	str	r3, [sp, #40]	; 0x28
  40b9ca:	f8dd b010 	ldr.w	fp, [sp, #16]
  40b9ce:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  40b9d0:	465d      	mov	r5, fp
  40b9d2:	e002      	b.n	40b9da <_dtoa_r+0x692>
  40b9d4:	f001 f9bc 	bl	40cd50 <__multadd>
  40b9d8:	4681      	mov	r9, r0
  40b9da:	4641      	mov	r1, r8
  40b9dc:	4648      	mov	r0, r9
  40b9de:	f7ff fc1f 	bl	40b220 <quorem>
  40b9e2:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  40b9e6:	f805 ab01 	strb.w	sl, [r5], #1
  40b9ea:	eba5 030b 	sub.w	r3, r5, fp
  40b9ee:	42bb      	cmp	r3, r7
  40b9f0:	f04f 020a 	mov.w	r2, #10
  40b9f4:	f04f 0300 	mov.w	r3, #0
  40b9f8:	4649      	mov	r1, r9
  40b9fa:	4620      	mov	r0, r4
  40b9fc:	dbea      	blt.n	40b9d4 <_dtoa_r+0x68c>
  40b9fe:	9b04      	ldr	r3, [sp, #16]
  40ba00:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40ba02:	2a01      	cmp	r2, #1
  40ba04:	bfac      	ite	ge
  40ba06:	189b      	addge	r3, r3, r2
  40ba08:	3301      	addlt	r3, #1
  40ba0a:	461d      	mov	r5, r3
  40ba0c:	f04f 0b00 	mov.w	fp, #0
  40ba10:	4649      	mov	r1, r9
  40ba12:	2201      	movs	r2, #1
  40ba14:	4620      	mov	r0, r4
  40ba16:	f001 fb17 	bl	40d048 <__lshift>
  40ba1a:	4641      	mov	r1, r8
  40ba1c:	4681      	mov	r9, r0
  40ba1e:	f001 fb65 	bl	40d0ec <__mcmp>
  40ba22:	2800      	cmp	r0, #0
  40ba24:	f340 823d 	ble.w	40bea2 <_dtoa_r+0xb5a>
  40ba28:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  40ba2c:	9904      	ldr	r1, [sp, #16]
  40ba2e:	1e6b      	subs	r3, r5, #1
  40ba30:	e004      	b.n	40ba3c <_dtoa_r+0x6f4>
  40ba32:	428b      	cmp	r3, r1
  40ba34:	f000 81ae 	beq.w	40bd94 <_dtoa_r+0xa4c>
  40ba38:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  40ba3c:	2a39      	cmp	r2, #57	; 0x39
  40ba3e:	f103 0501 	add.w	r5, r3, #1
  40ba42:	d0f6      	beq.n	40ba32 <_dtoa_r+0x6ea>
  40ba44:	3201      	adds	r2, #1
  40ba46:	701a      	strb	r2, [r3, #0]
  40ba48:	4641      	mov	r1, r8
  40ba4a:	4620      	mov	r0, r4
  40ba4c:	f001 f976 	bl	40cd3c <_Bfree>
  40ba50:	2e00      	cmp	r6, #0
  40ba52:	f43f ae3d 	beq.w	40b6d0 <_dtoa_r+0x388>
  40ba56:	f1bb 0f00 	cmp.w	fp, #0
  40ba5a:	d005      	beq.n	40ba68 <_dtoa_r+0x720>
  40ba5c:	45b3      	cmp	fp, r6
  40ba5e:	d003      	beq.n	40ba68 <_dtoa_r+0x720>
  40ba60:	4659      	mov	r1, fp
  40ba62:	4620      	mov	r0, r4
  40ba64:	f001 f96a 	bl	40cd3c <_Bfree>
  40ba68:	4631      	mov	r1, r6
  40ba6a:	4620      	mov	r0, r4
  40ba6c:	f001 f966 	bl	40cd3c <_Bfree>
  40ba70:	e62e      	b.n	40b6d0 <_dtoa_r+0x388>
  40ba72:	2300      	movs	r3, #0
  40ba74:	930b      	str	r3, [sp, #44]	; 0x2c
  40ba76:	9b02      	ldr	r3, [sp, #8]
  40ba78:	9a25      	ldr	r2, [sp, #148]	; 0x94
  40ba7a:	4413      	add	r3, r2
  40ba7c:	930f      	str	r3, [sp, #60]	; 0x3c
  40ba7e:	3301      	adds	r3, #1
  40ba80:	2b01      	cmp	r3, #1
  40ba82:	461f      	mov	r7, r3
  40ba84:	461e      	mov	r6, r3
  40ba86:	930a      	str	r3, [sp, #40]	; 0x28
  40ba88:	bfb8      	it	lt
  40ba8a:	2701      	movlt	r7, #1
  40ba8c:	2100      	movs	r1, #0
  40ba8e:	2f17      	cmp	r7, #23
  40ba90:	6461      	str	r1, [r4, #68]	; 0x44
  40ba92:	d90a      	bls.n	40baaa <_dtoa_r+0x762>
  40ba94:	2201      	movs	r2, #1
  40ba96:	2304      	movs	r3, #4
  40ba98:	005b      	lsls	r3, r3, #1
  40ba9a:	f103 0014 	add.w	r0, r3, #20
  40ba9e:	4287      	cmp	r7, r0
  40baa0:	4611      	mov	r1, r2
  40baa2:	f102 0201 	add.w	r2, r2, #1
  40baa6:	d2f7      	bcs.n	40ba98 <_dtoa_r+0x750>
  40baa8:	6461      	str	r1, [r4, #68]	; 0x44
  40baaa:	4620      	mov	r0, r4
  40baac:	f001 f920 	bl	40ccf0 <_Balloc>
  40bab0:	2e0e      	cmp	r6, #14
  40bab2:	9004      	str	r0, [sp, #16]
  40bab4:	6420      	str	r0, [r4, #64]	; 0x40
  40bab6:	f63f ad41 	bhi.w	40b53c <_dtoa_r+0x1f4>
  40baba:	2d00      	cmp	r5, #0
  40babc:	f43f ad3e 	beq.w	40b53c <_dtoa_r+0x1f4>
  40bac0:	9902      	ldr	r1, [sp, #8]
  40bac2:	2900      	cmp	r1, #0
  40bac4:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  40bac8:	f340 8202 	ble.w	40bed0 <_dtoa_r+0xb88>
  40bacc:	4bb8      	ldr	r3, [pc, #736]	; (40bdb0 <_dtoa_r+0xa68>)
  40bace:	f001 020f 	and.w	r2, r1, #15
  40bad2:	110d      	asrs	r5, r1, #4
  40bad4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40bad8:	06e9      	lsls	r1, r5, #27
  40bada:	e9d3 6700 	ldrd	r6, r7, [r3]
  40bade:	f140 81ae 	bpl.w	40be3e <_dtoa_r+0xaf6>
  40bae2:	4bb4      	ldr	r3, [pc, #720]	; (40bdb4 <_dtoa_r+0xa6c>)
  40bae4:	4650      	mov	r0, sl
  40bae6:	4659      	mov	r1, fp
  40bae8:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  40baec:	f7fb ffb6 	bl	407a5c <__aeabi_ddiv>
  40baf0:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  40baf4:	f005 050f 	and.w	r5, r5, #15
  40baf8:	f04f 0a03 	mov.w	sl, #3
  40bafc:	b18d      	cbz	r5, 40bb22 <_dtoa_r+0x7da>
  40bafe:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 40bdb4 <_dtoa_r+0xa6c>
  40bb02:	07ea      	lsls	r2, r5, #31
  40bb04:	d509      	bpl.n	40bb1a <_dtoa_r+0x7d2>
  40bb06:	4630      	mov	r0, r6
  40bb08:	4639      	mov	r1, r7
  40bb0a:	e9d8 2300 	ldrd	r2, r3, [r8]
  40bb0e:	f7fb fe7b 	bl	407808 <__aeabi_dmul>
  40bb12:	f10a 0a01 	add.w	sl, sl, #1
  40bb16:	4606      	mov	r6, r0
  40bb18:	460f      	mov	r7, r1
  40bb1a:	106d      	asrs	r5, r5, #1
  40bb1c:	f108 0808 	add.w	r8, r8, #8
  40bb20:	d1ef      	bne.n	40bb02 <_dtoa_r+0x7ba>
  40bb22:	463b      	mov	r3, r7
  40bb24:	4632      	mov	r2, r6
  40bb26:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  40bb2a:	f7fb ff97 	bl	407a5c <__aeabi_ddiv>
  40bb2e:	4607      	mov	r7, r0
  40bb30:	4688      	mov	r8, r1
  40bb32:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40bb34:	b143      	cbz	r3, 40bb48 <_dtoa_r+0x800>
  40bb36:	2200      	movs	r2, #0
  40bb38:	4b9f      	ldr	r3, [pc, #636]	; (40bdb8 <_dtoa_r+0xa70>)
  40bb3a:	4638      	mov	r0, r7
  40bb3c:	4641      	mov	r1, r8
  40bb3e:	f7fc f8d5 	bl	407cec <__aeabi_dcmplt>
  40bb42:	2800      	cmp	r0, #0
  40bb44:	f040 8286 	bne.w	40c054 <_dtoa_r+0xd0c>
  40bb48:	4650      	mov	r0, sl
  40bb4a:	f7fb fdf7 	bl	40773c <__aeabi_i2d>
  40bb4e:	463a      	mov	r2, r7
  40bb50:	4643      	mov	r3, r8
  40bb52:	f7fb fe59 	bl	407808 <__aeabi_dmul>
  40bb56:	4b99      	ldr	r3, [pc, #612]	; (40bdbc <_dtoa_r+0xa74>)
  40bb58:	2200      	movs	r2, #0
  40bb5a:	f7fb fca3 	bl	4074a4 <__adddf3>
  40bb5e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40bb60:	4605      	mov	r5, r0
  40bb62:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  40bb66:	2b00      	cmp	r3, #0
  40bb68:	f000 813e 	beq.w	40bde8 <_dtoa_r+0xaa0>
  40bb6c:	9b02      	ldr	r3, [sp, #8]
  40bb6e:	9315      	str	r3, [sp, #84]	; 0x54
  40bb70:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40bb72:	9312      	str	r3, [sp, #72]	; 0x48
  40bb74:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40bb76:	2b00      	cmp	r3, #0
  40bb78:	f000 81fa 	beq.w	40bf70 <_dtoa_r+0xc28>
  40bb7c:	9a12      	ldr	r2, [sp, #72]	; 0x48
  40bb7e:	4b8c      	ldr	r3, [pc, #560]	; (40bdb0 <_dtoa_r+0xa68>)
  40bb80:	498f      	ldr	r1, [pc, #572]	; (40bdc0 <_dtoa_r+0xa78>)
  40bb82:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40bb86:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  40bb8a:	2000      	movs	r0, #0
  40bb8c:	f7fb ff66 	bl	407a5c <__aeabi_ddiv>
  40bb90:	462a      	mov	r2, r5
  40bb92:	4633      	mov	r3, r6
  40bb94:	f7fb fc84 	bl	4074a0 <__aeabi_dsub>
  40bb98:	4682      	mov	sl, r0
  40bb9a:	468b      	mov	fp, r1
  40bb9c:	4638      	mov	r0, r7
  40bb9e:	4641      	mov	r1, r8
  40bba0:	f7fc f8cc 	bl	407d3c <__aeabi_d2iz>
  40bba4:	4605      	mov	r5, r0
  40bba6:	f7fb fdc9 	bl	40773c <__aeabi_i2d>
  40bbaa:	4602      	mov	r2, r0
  40bbac:	460b      	mov	r3, r1
  40bbae:	4638      	mov	r0, r7
  40bbb0:	4641      	mov	r1, r8
  40bbb2:	f7fb fc75 	bl	4074a0 <__aeabi_dsub>
  40bbb6:	3530      	adds	r5, #48	; 0x30
  40bbb8:	fa5f f885 	uxtb.w	r8, r5
  40bbbc:	9d04      	ldr	r5, [sp, #16]
  40bbbe:	4606      	mov	r6, r0
  40bbc0:	460f      	mov	r7, r1
  40bbc2:	f885 8000 	strb.w	r8, [r5]
  40bbc6:	4602      	mov	r2, r0
  40bbc8:	460b      	mov	r3, r1
  40bbca:	4650      	mov	r0, sl
  40bbcc:	4659      	mov	r1, fp
  40bbce:	3501      	adds	r5, #1
  40bbd0:	f7fc f8aa 	bl	407d28 <__aeabi_dcmpgt>
  40bbd4:	2800      	cmp	r0, #0
  40bbd6:	d154      	bne.n	40bc82 <_dtoa_r+0x93a>
  40bbd8:	4632      	mov	r2, r6
  40bbda:	463b      	mov	r3, r7
  40bbdc:	2000      	movs	r0, #0
  40bbde:	4976      	ldr	r1, [pc, #472]	; (40bdb8 <_dtoa_r+0xa70>)
  40bbe0:	f7fb fc5e 	bl	4074a0 <__aeabi_dsub>
  40bbe4:	4602      	mov	r2, r0
  40bbe6:	460b      	mov	r3, r1
  40bbe8:	4650      	mov	r0, sl
  40bbea:	4659      	mov	r1, fp
  40bbec:	f7fc f89c 	bl	407d28 <__aeabi_dcmpgt>
  40bbf0:	2800      	cmp	r0, #0
  40bbf2:	f040 8270 	bne.w	40c0d6 <_dtoa_r+0xd8e>
  40bbf6:	9a12      	ldr	r2, [sp, #72]	; 0x48
  40bbf8:	2a01      	cmp	r2, #1
  40bbfa:	f000 8111 	beq.w	40be20 <_dtoa_r+0xad8>
  40bbfe:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40bc00:	9a04      	ldr	r2, [sp, #16]
  40bc02:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  40bc06:	4413      	add	r3, r2
  40bc08:	4699      	mov	r9, r3
  40bc0a:	e00d      	b.n	40bc28 <_dtoa_r+0x8e0>
  40bc0c:	2000      	movs	r0, #0
  40bc0e:	496a      	ldr	r1, [pc, #424]	; (40bdb8 <_dtoa_r+0xa70>)
  40bc10:	f7fb fc46 	bl	4074a0 <__aeabi_dsub>
  40bc14:	4652      	mov	r2, sl
  40bc16:	465b      	mov	r3, fp
  40bc18:	f7fc f868 	bl	407cec <__aeabi_dcmplt>
  40bc1c:	2800      	cmp	r0, #0
  40bc1e:	f040 8258 	bne.w	40c0d2 <_dtoa_r+0xd8a>
  40bc22:	454d      	cmp	r5, r9
  40bc24:	f000 80fa 	beq.w	40be1c <_dtoa_r+0xad4>
  40bc28:	4650      	mov	r0, sl
  40bc2a:	4659      	mov	r1, fp
  40bc2c:	2200      	movs	r2, #0
  40bc2e:	4b65      	ldr	r3, [pc, #404]	; (40bdc4 <_dtoa_r+0xa7c>)
  40bc30:	f7fb fdea 	bl	407808 <__aeabi_dmul>
  40bc34:	2200      	movs	r2, #0
  40bc36:	4b63      	ldr	r3, [pc, #396]	; (40bdc4 <_dtoa_r+0xa7c>)
  40bc38:	4682      	mov	sl, r0
  40bc3a:	468b      	mov	fp, r1
  40bc3c:	4630      	mov	r0, r6
  40bc3e:	4639      	mov	r1, r7
  40bc40:	f7fb fde2 	bl	407808 <__aeabi_dmul>
  40bc44:	460f      	mov	r7, r1
  40bc46:	4606      	mov	r6, r0
  40bc48:	f7fc f878 	bl	407d3c <__aeabi_d2iz>
  40bc4c:	4680      	mov	r8, r0
  40bc4e:	f7fb fd75 	bl	40773c <__aeabi_i2d>
  40bc52:	4602      	mov	r2, r0
  40bc54:	460b      	mov	r3, r1
  40bc56:	4630      	mov	r0, r6
  40bc58:	4639      	mov	r1, r7
  40bc5a:	f7fb fc21 	bl	4074a0 <__aeabi_dsub>
  40bc5e:	f108 0830 	add.w	r8, r8, #48	; 0x30
  40bc62:	fa5f f888 	uxtb.w	r8, r8
  40bc66:	4652      	mov	r2, sl
  40bc68:	465b      	mov	r3, fp
  40bc6a:	f805 8b01 	strb.w	r8, [r5], #1
  40bc6e:	4606      	mov	r6, r0
  40bc70:	460f      	mov	r7, r1
  40bc72:	f7fc f83b 	bl	407cec <__aeabi_dcmplt>
  40bc76:	4632      	mov	r2, r6
  40bc78:	463b      	mov	r3, r7
  40bc7a:	2800      	cmp	r0, #0
  40bc7c:	d0c6      	beq.n	40bc0c <_dtoa_r+0x8c4>
  40bc7e:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  40bc82:	9b15      	ldr	r3, [sp, #84]	; 0x54
  40bc84:	9302      	str	r3, [sp, #8]
  40bc86:	e523      	b.n	40b6d0 <_dtoa_r+0x388>
  40bc88:	2300      	movs	r3, #0
  40bc8a:	930b      	str	r3, [sp, #44]	; 0x2c
  40bc8c:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40bc8e:	2b00      	cmp	r3, #0
  40bc90:	f340 80dc 	ble.w	40be4c <_dtoa_r+0xb04>
  40bc94:	461f      	mov	r7, r3
  40bc96:	461e      	mov	r6, r3
  40bc98:	930f      	str	r3, [sp, #60]	; 0x3c
  40bc9a:	930a      	str	r3, [sp, #40]	; 0x28
  40bc9c:	e6f6      	b.n	40ba8c <_dtoa_r+0x744>
  40bc9e:	2301      	movs	r3, #1
  40bca0:	930b      	str	r3, [sp, #44]	; 0x2c
  40bca2:	e7f3      	b.n	40bc8c <_dtoa_r+0x944>
  40bca4:	f1ba 0f00 	cmp.w	sl, #0
  40bca8:	f47f ada8 	bne.w	40b7fc <_dtoa_r+0x4b4>
  40bcac:	f3cb 0313 	ubfx	r3, fp, #0, #20
  40bcb0:	2b00      	cmp	r3, #0
  40bcb2:	f47f adba 	bne.w	40b82a <_dtoa_r+0x4e2>
  40bcb6:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  40bcba:	0d3f      	lsrs	r7, r7, #20
  40bcbc:	053f      	lsls	r7, r7, #20
  40bcbe:	2f00      	cmp	r7, #0
  40bcc0:	f000 820d 	beq.w	40c0de <_dtoa_r+0xd96>
  40bcc4:	9b08      	ldr	r3, [sp, #32]
  40bcc6:	3301      	adds	r3, #1
  40bcc8:	9308      	str	r3, [sp, #32]
  40bcca:	9b06      	ldr	r3, [sp, #24]
  40bccc:	3301      	adds	r3, #1
  40bcce:	9306      	str	r3, [sp, #24]
  40bcd0:	2301      	movs	r3, #1
  40bcd2:	930c      	str	r3, [sp, #48]	; 0x30
  40bcd4:	e5ab      	b.n	40b82e <_dtoa_r+0x4e6>
  40bcd6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40bcd8:	2b00      	cmp	r3, #0
  40bcda:	f73f ac42 	bgt.w	40b562 <_dtoa_r+0x21a>
  40bcde:	f040 8221 	bne.w	40c124 <_dtoa_r+0xddc>
  40bce2:	2200      	movs	r2, #0
  40bce4:	4b38      	ldr	r3, [pc, #224]	; (40bdc8 <_dtoa_r+0xa80>)
  40bce6:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  40bcea:	f7fb fd8d 	bl	407808 <__aeabi_dmul>
  40bcee:	4652      	mov	r2, sl
  40bcf0:	465b      	mov	r3, fp
  40bcf2:	f7fc f80f 	bl	407d14 <__aeabi_dcmpge>
  40bcf6:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  40bcfa:	4646      	mov	r6, r8
  40bcfc:	2800      	cmp	r0, #0
  40bcfe:	d041      	beq.n	40bd84 <_dtoa_r+0xa3c>
  40bd00:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40bd02:	9d04      	ldr	r5, [sp, #16]
  40bd04:	43db      	mvns	r3, r3
  40bd06:	9302      	str	r3, [sp, #8]
  40bd08:	4641      	mov	r1, r8
  40bd0a:	4620      	mov	r0, r4
  40bd0c:	f001 f816 	bl	40cd3c <_Bfree>
  40bd10:	2e00      	cmp	r6, #0
  40bd12:	f43f acdd 	beq.w	40b6d0 <_dtoa_r+0x388>
  40bd16:	e6a7      	b.n	40ba68 <_dtoa_r+0x720>
  40bd18:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  40bd1a:	4649      	mov	r1, r9
  40bd1c:	4620      	mov	r0, r4
  40bd1e:	f001 f943 	bl	40cfa8 <__pow5mult>
  40bd22:	4681      	mov	r9, r0
  40bd24:	e558      	b.n	40b7d8 <_dtoa_r+0x490>
  40bd26:	9a14      	ldr	r2, [sp, #80]	; 0x50
  40bd28:	2a00      	cmp	r2, #0
  40bd2a:	f000 8187 	beq.w	40c03c <_dtoa_r+0xcf4>
  40bd2e:	f203 4333 	addw	r3, r3, #1075	; 0x433
  40bd32:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  40bd34:	9d08      	ldr	r5, [sp, #32]
  40bd36:	e4f2      	b.n	40b71e <_dtoa_r+0x3d6>
  40bd38:	f1ba 0f00 	cmp.w	sl, #0
  40bd3c:	f47f ad75 	bne.w	40b82a <_dtoa_r+0x4e2>
  40bd40:	e7b4      	b.n	40bcac <_dtoa_r+0x964>
  40bd42:	f001 f805 	bl	40cd50 <__multadd>
  40bd46:	4647      	mov	r7, r8
  40bd48:	4606      	mov	r6, r0
  40bd4a:	4683      	mov	fp, r0
  40bd4c:	e5be      	b.n	40b8cc <_dtoa_r+0x584>
  40bd4e:	4601      	mov	r1, r0
  40bd50:	4620      	mov	r0, r4
  40bd52:	9306      	str	r3, [sp, #24]
  40bd54:	f000 fff2 	bl	40cd3c <_Bfree>
  40bd58:	2201      	movs	r2, #1
  40bd5a:	9b06      	ldr	r3, [sp, #24]
  40bd5c:	e5e0      	b.n	40b920 <_dtoa_r+0x5d8>
  40bd5e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40bd60:	2b02      	cmp	r3, #2
  40bd62:	f77f ad96 	ble.w	40b892 <_dtoa_r+0x54a>
  40bd66:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40bd68:	2b00      	cmp	r3, #0
  40bd6a:	d1c9      	bne.n	40bd00 <_dtoa_r+0x9b8>
  40bd6c:	4641      	mov	r1, r8
  40bd6e:	2205      	movs	r2, #5
  40bd70:	4620      	mov	r0, r4
  40bd72:	f000 ffed 	bl	40cd50 <__multadd>
  40bd76:	4601      	mov	r1, r0
  40bd78:	4680      	mov	r8, r0
  40bd7a:	4648      	mov	r0, r9
  40bd7c:	f001 f9b6 	bl	40d0ec <__mcmp>
  40bd80:	2800      	cmp	r0, #0
  40bd82:	ddbd      	ble.n	40bd00 <_dtoa_r+0x9b8>
  40bd84:	9a02      	ldr	r2, [sp, #8]
  40bd86:	9904      	ldr	r1, [sp, #16]
  40bd88:	2331      	movs	r3, #49	; 0x31
  40bd8a:	3201      	adds	r2, #1
  40bd8c:	9202      	str	r2, [sp, #8]
  40bd8e:	700b      	strb	r3, [r1, #0]
  40bd90:	1c4d      	adds	r5, r1, #1
  40bd92:	e7b9      	b.n	40bd08 <_dtoa_r+0x9c0>
  40bd94:	9a02      	ldr	r2, [sp, #8]
  40bd96:	3201      	adds	r2, #1
  40bd98:	9202      	str	r2, [sp, #8]
  40bd9a:	9a04      	ldr	r2, [sp, #16]
  40bd9c:	2331      	movs	r3, #49	; 0x31
  40bd9e:	7013      	strb	r3, [r2, #0]
  40bda0:	e652      	b.n	40ba48 <_dtoa_r+0x700>
  40bda2:	2301      	movs	r3, #1
  40bda4:	930b      	str	r3, [sp, #44]	; 0x2c
  40bda6:	e666      	b.n	40ba76 <_dtoa_r+0x72e>
  40bda8:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  40bdac:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40bdae:	e48f      	b.n	40b6d0 <_dtoa_r+0x388>
  40bdb0:	0040f708 	.word	0x0040f708
  40bdb4:	0040f6e0 	.word	0x0040f6e0
  40bdb8:	3ff00000 	.word	0x3ff00000
  40bdbc:	401c0000 	.word	0x401c0000
  40bdc0:	3fe00000 	.word	0x3fe00000
  40bdc4:	40240000 	.word	0x40240000
  40bdc8:	40140000 	.word	0x40140000
  40bdcc:	4650      	mov	r0, sl
  40bdce:	f7fb fcb5 	bl	40773c <__aeabi_i2d>
  40bdd2:	463a      	mov	r2, r7
  40bdd4:	4643      	mov	r3, r8
  40bdd6:	f7fb fd17 	bl	407808 <__aeabi_dmul>
  40bdda:	2200      	movs	r2, #0
  40bddc:	4bc1      	ldr	r3, [pc, #772]	; (40c0e4 <_dtoa_r+0xd9c>)
  40bdde:	f7fb fb61 	bl	4074a4 <__adddf3>
  40bde2:	4605      	mov	r5, r0
  40bde4:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  40bde8:	4641      	mov	r1, r8
  40bdea:	2200      	movs	r2, #0
  40bdec:	4bbe      	ldr	r3, [pc, #760]	; (40c0e8 <_dtoa_r+0xda0>)
  40bdee:	4638      	mov	r0, r7
  40bdf0:	f7fb fb56 	bl	4074a0 <__aeabi_dsub>
  40bdf4:	462a      	mov	r2, r5
  40bdf6:	4633      	mov	r3, r6
  40bdf8:	4682      	mov	sl, r0
  40bdfa:	468b      	mov	fp, r1
  40bdfc:	f7fb ff94 	bl	407d28 <__aeabi_dcmpgt>
  40be00:	4680      	mov	r8, r0
  40be02:	2800      	cmp	r0, #0
  40be04:	f040 8110 	bne.w	40c028 <_dtoa_r+0xce0>
  40be08:	462a      	mov	r2, r5
  40be0a:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  40be0e:	4650      	mov	r0, sl
  40be10:	4659      	mov	r1, fp
  40be12:	f7fb ff6b 	bl	407cec <__aeabi_dcmplt>
  40be16:	b118      	cbz	r0, 40be20 <_dtoa_r+0xad8>
  40be18:	4646      	mov	r6, r8
  40be1a:	e771      	b.n	40bd00 <_dtoa_r+0x9b8>
  40be1c:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  40be20:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  40be24:	f7ff bb8a 	b.w	40b53c <_dtoa_r+0x1f4>
  40be28:	9804      	ldr	r0, [sp, #16]
  40be2a:	f7ff babb 	b.w	40b3a4 <_dtoa_r+0x5c>
  40be2e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40be30:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  40be32:	970c      	str	r7, [sp, #48]	; 0x30
  40be34:	1afb      	subs	r3, r7, r3
  40be36:	441a      	add	r2, r3
  40be38:	920d      	str	r2, [sp, #52]	; 0x34
  40be3a:	2700      	movs	r7, #0
  40be3c:	e469      	b.n	40b712 <_dtoa_r+0x3ca>
  40be3e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  40be42:	f04f 0a02 	mov.w	sl, #2
  40be46:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  40be4a:	e657      	b.n	40bafc <_dtoa_r+0x7b4>
  40be4c:	2100      	movs	r1, #0
  40be4e:	2301      	movs	r3, #1
  40be50:	6461      	str	r1, [r4, #68]	; 0x44
  40be52:	4620      	mov	r0, r4
  40be54:	9325      	str	r3, [sp, #148]	; 0x94
  40be56:	f000 ff4b 	bl	40ccf0 <_Balloc>
  40be5a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40be5c:	9004      	str	r0, [sp, #16]
  40be5e:	6420      	str	r0, [r4, #64]	; 0x40
  40be60:	930a      	str	r3, [sp, #40]	; 0x28
  40be62:	930f      	str	r3, [sp, #60]	; 0x3c
  40be64:	e629      	b.n	40baba <_dtoa_r+0x772>
  40be66:	2a00      	cmp	r2, #0
  40be68:	46d0      	mov	r8, sl
  40be6a:	f8cd b018 	str.w	fp, [sp, #24]
  40be6e:	469a      	mov	sl, r3
  40be70:	dd11      	ble.n	40be96 <_dtoa_r+0xb4e>
  40be72:	4649      	mov	r1, r9
  40be74:	2201      	movs	r2, #1
  40be76:	4620      	mov	r0, r4
  40be78:	f001 f8e6 	bl	40d048 <__lshift>
  40be7c:	4641      	mov	r1, r8
  40be7e:	4681      	mov	r9, r0
  40be80:	f001 f934 	bl	40d0ec <__mcmp>
  40be84:	2800      	cmp	r0, #0
  40be86:	f340 8146 	ble.w	40c116 <_dtoa_r+0xdce>
  40be8a:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  40be8e:	f000 8106 	beq.w	40c09e <_dtoa_r+0xd56>
  40be92:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  40be96:	46b3      	mov	fp, r6
  40be98:	f887 a000 	strb.w	sl, [r7]
  40be9c:	1c7d      	adds	r5, r7, #1
  40be9e:	9e06      	ldr	r6, [sp, #24]
  40bea0:	e5d2      	b.n	40ba48 <_dtoa_r+0x700>
  40bea2:	d104      	bne.n	40beae <_dtoa_r+0xb66>
  40bea4:	f01a 0f01 	tst.w	sl, #1
  40bea8:	d001      	beq.n	40beae <_dtoa_r+0xb66>
  40beaa:	e5bd      	b.n	40ba28 <_dtoa_r+0x6e0>
  40beac:	4615      	mov	r5, r2
  40beae:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  40beb2:	2b30      	cmp	r3, #48	; 0x30
  40beb4:	f105 32ff 	add.w	r2, r5, #4294967295
  40beb8:	d0f8      	beq.n	40beac <_dtoa_r+0xb64>
  40beba:	e5c5      	b.n	40ba48 <_dtoa_r+0x700>
  40bebc:	9904      	ldr	r1, [sp, #16]
  40bebe:	2230      	movs	r2, #48	; 0x30
  40bec0:	700a      	strb	r2, [r1, #0]
  40bec2:	9a02      	ldr	r2, [sp, #8]
  40bec4:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  40bec8:	3201      	adds	r2, #1
  40beca:	9202      	str	r2, [sp, #8]
  40becc:	f7ff bbfc 	b.w	40b6c8 <_dtoa_r+0x380>
  40bed0:	f000 80bb 	beq.w	40c04a <_dtoa_r+0xd02>
  40bed4:	9b02      	ldr	r3, [sp, #8]
  40bed6:	425d      	negs	r5, r3
  40bed8:	4b84      	ldr	r3, [pc, #528]	; (40c0ec <_dtoa_r+0xda4>)
  40beda:	f005 020f 	and.w	r2, r5, #15
  40bede:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40bee2:	e9d3 2300 	ldrd	r2, r3, [r3]
  40bee6:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  40beea:	f7fb fc8d 	bl	407808 <__aeabi_dmul>
  40beee:	112d      	asrs	r5, r5, #4
  40bef0:	4607      	mov	r7, r0
  40bef2:	4688      	mov	r8, r1
  40bef4:	f000 812c 	beq.w	40c150 <_dtoa_r+0xe08>
  40bef8:	4e7d      	ldr	r6, [pc, #500]	; (40c0f0 <_dtoa_r+0xda8>)
  40befa:	f04f 0a02 	mov.w	sl, #2
  40befe:	07eb      	lsls	r3, r5, #31
  40bf00:	d509      	bpl.n	40bf16 <_dtoa_r+0xbce>
  40bf02:	4638      	mov	r0, r7
  40bf04:	4641      	mov	r1, r8
  40bf06:	e9d6 2300 	ldrd	r2, r3, [r6]
  40bf0a:	f7fb fc7d 	bl	407808 <__aeabi_dmul>
  40bf0e:	f10a 0a01 	add.w	sl, sl, #1
  40bf12:	4607      	mov	r7, r0
  40bf14:	4688      	mov	r8, r1
  40bf16:	106d      	asrs	r5, r5, #1
  40bf18:	f106 0608 	add.w	r6, r6, #8
  40bf1c:	d1ef      	bne.n	40befe <_dtoa_r+0xbb6>
  40bf1e:	e608      	b.n	40bb32 <_dtoa_r+0x7ea>
  40bf20:	6871      	ldr	r1, [r6, #4]
  40bf22:	4620      	mov	r0, r4
  40bf24:	f000 fee4 	bl	40ccf0 <_Balloc>
  40bf28:	6933      	ldr	r3, [r6, #16]
  40bf2a:	3302      	adds	r3, #2
  40bf2c:	009a      	lsls	r2, r3, #2
  40bf2e:	4605      	mov	r5, r0
  40bf30:	f106 010c 	add.w	r1, r6, #12
  40bf34:	300c      	adds	r0, #12
  40bf36:	f7fc fda7 	bl	408a88 <memcpy>
  40bf3a:	4629      	mov	r1, r5
  40bf3c:	2201      	movs	r2, #1
  40bf3e:	4620      	mov	r0, r4
  40bf40:	f001 f882 	bl	40d048 <__lshift>
  40bf44:	9006      	str	r0, [sp, #24]
  40bf46:	e4b5      	b.n	40b8b4 <_dtoa_r+0x56c>
  40bf48:	2b39      	cmp	r3, #57	; 0x39
  40bf4a:	f8cd b018 	str.w	fp, [sp, #24]
  40bf4e:	46d0      	mov	r8, sl
  40bf50:	f000 80a5 	beq.w	40c09e <_dtoa_r+0xd56>
  40bf54:	f103 0a01 	add.w	sl, r3, #1
  40bf58:	46b3      	mov	fp, r6
  40bf5a:	f887 a000 	strb.w	sl, [r7]
  40bf5e:	1c7d      	adds	r5, r7, #1
  40bf60:	9e06      	ldr	r6, [sp, #24]
  40bf62:	e571      	b.n	40ba48 <_dtoa_r+0x700>
  40bf64:	465a      	mov	r2, fp
  40bf66:	46d0      	mov	r8, sl
  40bf68:	46b3      	mov	fp, r6
  40bf6a:	469a      	mov	sl, r3
  40bf6c:	4616      	mov	r6, r2
  40bf6e:	e54f      	b.n	40ba10 <_dtoa_r+0x6c8>
  40bf70:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40bf72:	495e      	ldr	r1, [pc, #376]	; (40c0ec <_dtoa_r+0xda4>)
  40bf74:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  40bf78:	462a      	mov	r2, r5
  40bf7a:	4633      	mov	r3, r6
  40bf7c:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  40bf80:	f7fb fc42 	bl	407808 <__aeabi_dmul>
  40bf84:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  40bf88:	4638      	mov	r0, r7
  40bf8a:	4641      	mov	r1, r8
  40bf8c:	f7fb fed6 	bl	407d3c <__aeabi_d2iz>
  40bf90:	4605      	mov	r5, r0
  40bf92:	f7fb fbd3 	bl	40773c <__aeabi_i2d>
  40bf96:	460b      	mov	r3, r1
  40bf98:	4602      	mov	r2, r0
  40bf9a:	4641      	mov	r1, r8
  40bf9c:	4638      	mov	r0, r7
  40bf9e:	f7fb fa7f 	bl	4074a0 <__aeabi_dsub>
  40bfa2:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40bfa4:	460f      	mov	r7, r1
  40bfa6:	9904      	ldr	r1, [sp, #16]
  40bfa8:	3530      	adds	r5, #48	; 0x30
  40bfaa:	2b01      	cmp	r3, #1
  40bfac:	700d      	strb	r5, [r1, #0]
  40bfae:	4606      	mov	r6, r0
  40bfb0:	f101 0501 	add.w	r5, r1, #1
  40bfb4:	d026      	beq.n	40c004 <_dtoa_r+0xcbc>
  40bfb6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40bfb8:	9a04      	ldr	r2, [sp, #16]
  40bfba:	f8df b13c 	ldr.w	fp, [pc, #316]	; 40c0f8 <_dtoa_r+0xdb0>
  40bfbe:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  40bfc2:	4413      	add	r3, r2
  40bfc4:	f04f 0a00 	mov.w	sl, #0
  40bfc8:	4699      	mov	r9, r3
  40bfca:	4652      	mov	r2, sl
  40bfcc:	465b      	mov	r3, fp
  40bfce:	4630      	mov	r0, r6
  40bfd0:	4639      	mov	r1, r7
  40bfd2:	f7fb fc19 	bl	407808 <__aeabi_dmul>
  40bfd6:	460f      	mov	r7, r1
  40bfd8:	4606      	mov	r6, r0
  40bfda:	f7fb feaf 	bl	407d3c <__aeabi_d2iz>
  40bfde:	4680      	mov	r8, r0
  40bfe0:	f7fb fbac 	bl	40773c <__aeabi_i2d>
  40bfe4:	f108 0830 	add.w	r8, r8, #48	; 0x30
  40bfe8:	4602      	mov	r2, r0
  40bfea:	460b      	mov	r3, r1
  40bfec:	4630      	mov	r0, r6
  40bfee:	4639      	mov	r1, r7
  40bff0:	f7fb fa56 	bl	4074a0 <__aeabi_dsub>
  40bff4:	f805 8b01 	strb.w	r8, [r5], #1
  40bff8:	454d      	cmp	r5, r9
  40bffa:	4606      	mov	r6, r0
  40bffc:	460f      	mov	r7, r1
  40bffe:	d1e4      	bne.n	40bfca <_dtoa_r+0xc82>
  40c000:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  40c004:	4b3b      	ldr	r3, [pc, #236]	; (40c0f4 <_dtoa_r+0xdac>)
  40c006:	2200      	movs	r2, #0
  40c008:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  40c00c:	f7fb fa4a 	bl	4074a4 <__adddf3>
  40c010:	4632      	mov	r2, r6
  40c012:	463b      	mov	r3, r7
  40c014:	f7fb fe6a 	bl	407cec <__aeabi_dcmplt>
  40c018:	2800      	cmp	r0, #0
  40c01a:	d046      	beq.n	40c0aa <_dtoa_r+0xd62>
  40c01c:	9b15      	ldr	r3, [sp, #84]	; 0x54
  40c01e:	9302      	str	r3, [sp, #8]
  40c020:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  40c024:	f7ff bb43 	b.w	40b6ae <_dtoa_r+0x366>
  40c028:	f04f 0800 	mov.w	r8, #0
  40c02c:	4646      	mov	r6, r8
  40c02e:	e6a9      	b.n	40bd84 <_dtoa_r+0xa3c>
  40c030:	9b08      	ldr	r3, [sp, #32]
  40c032:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40c034:	1a9d      	subs	r5, r3, r2
  40c036:	2300      	movs	r3, #0
  40c038:	f7ff bb71 	b.w	40b71e <_dtoa_r+0x3d6>
  40c03c:	9b18      	ldr	r3, [sp, #96]	; 0x60
  40c03e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  40c040:	9d08      	ldr	r5, [sp, #32]
  40c042:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  40c046:	f7ff bb6a 	b.w	40b71e <_dtoa_r+0x3d6>
  40c04a:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  40c04e:	f04f 0a02 	mov.w	sl, #2
  40c052:	e56e      	b.n	40bb32 <_dtoa_r+0x7ea>
  40c054:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40c056:	2b00      	cmp	r3, #0
  40c058:	f43f aeb8 	beq.w	40bdcc <_dtoa_r+0xa84>
  40c05c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40c05e:	2b00      	cmp	r3, #0
  40c060:	f77f aede 	ble.w	40be20 <_dtoa_r+0xad8>
  40c064:	2200      	movs	r2, #0
  40c066:	4b24      	ldr	r3, [pc, #144]	; (40c0f8 <_dtoa_r+0xdb0>)
  40c068:	4638      	mov	r0, r7
  40c06a:	4641      	mov	r1, r8
  40c06c:	f7fb fbcc 	bl	407808 <__aeabi_dmul>
  40c070:	4607      	mov	r7, r0
  40c072:	4688      	mov	r8, r1
  40c074:	f10a 0001 	add.w	r0, sl, #1
  40c078:	f7fb fb60 	bl	40773c <__aeabi_i2d>
  40c07c:	463a      	mov	r2, r7
  40c07e:	4643      	mov	r3, r8
  40c080:	f7fb fbc2 	bl	407808 <__aeabi_dmul>
  40c084:	2200      	movs	r2, #0
  40c086:	4b17      	ldr	r3, [pc, #92]	; (40c0e4 <_dtoa_r+0xd9c>)
  40c088:	f7fb fa0c 	bl	4074a4 <__adddf3>
  40c08c:	9a02      	ldr	r2, [sp, #8]
  40c08e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40c090:	9312      	str	r3, [sp, #72]	; 0x48
  40c092:	3a01      	subs	r2, #1
  40c094:	4605      	mov	r5, r0
  40c096:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  40c09a:	9215      	str	r2, [sp, #84]	; 0x54
  40c09c:	e56a      	b.n	40bb74 <_dtoa_r+0x82c>
  40c09e:	2239      	movs	r2, #57	; 0x39
  40c0a0:	46b3      	mov	fp, r6
  40c0a2:	703a      	strb	r2, [r7, #0]
  40c0a4:	9e06      	ldr	r6, [sp, #24]
  40c0a6:	1c7d      	adds	r5, r7, #1
  40c0a8:	e4c0      	b.n	40ba2c <_dtoa_r+0x6e4>
  40c0aa:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  40c0ae:	2000      	movs	r0, #0
  40c0b0:	4910      	ldr	r1, [pc, #64]	; (40c0f4 <_dtoa_r+0xdac>)
  40c0b2:	f7fb f9f5 	bl	4074a0 <__aeabi_dsub>
  40c0b6:	4632      	mov	r2, r6
  40c0b8:	463b      	mov	r3, r7
  40c0ba:	f7fb fe35 	bl	407d28 <__aeabi_dcmpgt>
  40c0be:	b908      	cbnz	r0, 40c0c4 <_dtoa_r+0xd7c>
  40c0c0:	e6ae      	b.n	40be20 <_dtoa_r+0xad8>
  40c0c2:	4615      	mov	r5, r2
  40c0c4:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  40c0c8:	2b30      	cmp	r3, #48	; 0x30
  40c0ca:	f105 32ff 	add.w	r2, r5, #4294967295
  40c0ce:	d0f8      	beq.n	40c0c2 <_dtoa_r+0xd7a>
  40c0d0:	e5d7      	b.n	40bc82 <_dtoa_r+0x93a>
  40c0d2:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  40c0d6:	9b15      	ldr	r3, [sp, #84]	; 0x54
  40c0d8:	9302      	str	r3, [sp, #8]
  40c0da:	f7ff bae8 	b.w	40b6ae <_dtoa_r+0x366>
  40c0de:	970c      	str	r7, [sp, #48]	; 0x30
  40c0e0:	f7ff bba5 	b.w	40b82e <_dtoa_r+0x4e6>
  40c0e4:	401c0000 	.word	0x401c0000
  40c0e8:	40140000 	.word	0x40140000
  40c0ec:	0040f708 	.word	0x0040f708
  40c0f0:	0040f6e0 	.word	0x0040f6e0
  40c0f4:	3fe00000 	.word	0x3fe00000
  40c0f8:	40240000 	.word	0x40240000
  40c0fc:	2b39      	cmp	r3, #57	; 0x39
  40c0fe:	f8cd b018 	str.w	fp, [sp, #24]
  40c102:	46d0      	mov	r8, sl
  40c104:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  40c108:	469a      	mov	sl, r3
  40c10a:	d0c8      	beq.n	40c09e <_dtoa_r+0xd56>
  40c10c:	f1bb 0f00 	cmp.w	fp, #0
  40c110:	f73f aebf 	bgt.w	40be92 <_dtoa_r+0xb4a>
  40c114:	e6bf      	b.n	40be96 <_dtoa_r+0xb4e>
  40c116:	f47f aebe 	bne.w	40be96 <_dtoa_r+0xb4e>
  40c11a:	f01a 0f01 	tst.w	sl, #1
  40c11e:	f43f aeba 	beq.w	40be96 <_dtoa_r+0xb4e>
  40c122:	e6b2      	b.n	40be8a <_dtoa_r+0xb42>
  40c124:	f04f 0800 	mov.w	r8, #0
  40c128:	4646      	mov	r6, r8
  40c12a:	e5e9      	b.n	40bd00 <_dtoa_r+0x9b8>
  40c12c:	4631      	mov	r1, r6
  40c12e:	2300      	movs	r3, #0
  40c130:	220a      	movs	r2, #10
  40c132:	4620      	mov	r0, r4
  40c134:	f000 fe0c 	bl	40cd50 <__multadd>
  40c138:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40c13a:	2b00      	cmp	r3, #0
  40c13c:	4606      	mov	r6, r0
  40c13e:	dd0a      	ble.n	40c156 <_dtoa_r+0xe0e>
  40c140:	930a      	str	r3, [sp, #40]	; 0x28
  40c142:	f7ff bbaa 	b.w	40b89a <_dtoa_r+0x552>
  40c146:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40c148:	2b02      	cmp	r3, #2
  40c14a:	dc23      	bgt.n	40c194 <_dtoa_r+0xe4c>
  40c14c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40c14e:	e43b      	b.n	40b9c8 <_dtoa_r+0x680>
  40c150:	f04f 0a02 	mov.w	sl, #2
  40c154:	e4ed      	b.n	40bb32 <_dtoa_r+0x7ea>
  40c156:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40c158:	2b02      	cmp	r3, #2
  40c15a:	dc1b      	bgt.n	40c194 <_dtoa_r+0xe4c>
  40c15c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40c15e:	e7ef      	b.n	40c140 <_dtoa_r+0xdf8>
  40c160:	2500      	movs	r5, #0
  40c162:	6465      	str	r5, [r4, #68]	; 0x44
  40c164:	4629      	mov	r1, r5
  40c166:	4620      	mov	r0, r4
  40c168:	f000 fdc2 	bl	40ccf0 <_Balloc>
  40c16c:	f04f 33ff 	mov.w	r3, #4294967295
  40c170:	930a      	str	r3, [sp, #40]	; 0x28
  40c172:	930f      	str	r3, [sp, #60]	; 0x3c
  40c174:	2301      	movs	r3, #1
  40c176:	9004      	str	r0, [sp, #16]
  40c178:	9525      	str	r5, [sp, #148]	; 0x94
  40c17a:	6420      	str	r0, [r4, #64]	; 0x40
  40c17c:	930b      	str	r3, [sp, #44]	; 0x2c
  40c17e:	f7ff b9dd 	b.w	40b53c <_dtoa_r+0x1f4>
  40c182:	2501      	movs	r5, #1
  40c184:	f7ff b9a5 	b.w	40b4d2 <_dtoa_r+0x18a>
  40c188:	f43f ab69 	beq.w	40b85e <_dtoa_r+0x516>
  40c18c:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  40c190:	f7ff bbf9 	b.w	40b986 <_dtoa_r+0x63e>
  40c194:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40c196:	930a      	str	r3, [sp, #40]	; 0x28
  40c198:	e5e5      	b.n	40bd66 <_dtoa_r+0xa1e>
  40c19a:	bf00      	nop

0040c19c <__sflush_r>:
  40c19c:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  40c1a0:	b29a      	uxth	r2, r3
  40c1a2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40c1a6:	460d      	mov	r5, r1
  40c1a8:	0711      	lsls	r1, r2, #28
  40c1aa:	4680      	mov	r8, r0
  40c1ac:	d43a      	bmi.n	40c224 <__sflush_r+0x88>
  40c1ae:	686a      	ldr	r2, [r5, #4]
  40c1b0:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  40c1b4:	2a00      	cmp	r2, #0
  40c1b6:	81ab      	strh	r3, [r5, #12]
  40c1b8:	dd6f      	ble.n	40c29a <__sflush_r+0xfe>
  40c1ba:	6aac      	ldr	r4, [r5, #40]	; 0x28
  40c1bc:	2c00      	cmp	r4, #0
  40c1be:	d049      	beq.n	40c254 <__sflush_r+0xb8>
  40c1c0:	2200      	movs	r2, #0
  40c1c2:	b29b      	uxth	r3, r3
  40c1c4:	f8d8 6000 	ldr.w	r6, [r8]
  40c1c8:	f8c8 2000 	str.w	r2, [r8]
  40c1cc:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
  40c1d0:	d067      	beq.n	40c2a2 <__sflush_r+0x106>
  40c1d2:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  40c1d4:	075f      	lsls	r7, r3, #29
  40c1d6:	d505      	bpl.n	40c1e4 <__sflush_r+0x48>
  40c1d8:	6869      	ldr	r1, [r5, #4]
  40c1da:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  40c1dc:	1a52      	subs	r2, r2, r1
  40c1de:	b10b      	cbz	r3, 40c1e4 <__sflush_r+0x48>
  40c1e0:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  40c1e2:	1ad2      	subs	r2, r2, r3
  40c1e4:	2300      	movs	r3, #0
  40c1e6:	69e9      	ldr	r1, [r5, #28]
  40c1e8:	4640      	mov	r0, r8
  40c1ea:	47a0      	blx	r4
  40c1ec:	1c44      	adds	r4, r0, #1
  40c1ee:	d03c      	beq.n	40c26a <__sflush_r+0xce>
  40c1f0:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  40c1f4:	692a      	ldr	r2, [r5, #16]
  40c1f6:	602a      	str	r2, [r5, #0]
  40c1f8:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  40c1fc:	2200      	movs	r2, #0
  40c1fe:	81ab      	strh	r3, [r5, #12]
  40c200:	04db      	lsls	r3, r3, #19
  40c202:	606a      	str	r2, [r5, #4]
  40c204:	d447      	bmi.n	40c296 <__sflush_r+0xfa>
  40c206:	6b29      	ldr	r1, [r5, #48]	; 0x30
  40c208:	f8c8 6000 	str.w	r6, [r8]
  40c20c:	b311      	cbz	r1, 40c254 <__sflush_r+0xb8>
  40c20e:	f105 0340 	add.w	r3, r5, #64	; 0x40
  40c212:	4299      	cmp	r1, r3
  40c214:	d002      	beq.n	40c21c <__sflush_r+0x80>
  40c216:	4640      	mov	r0, r8
  40c218:	f000 f9de 	bl	40c5d8 <_free_r>
  40c21c:	2000      	movs	r0, #0
  40c21e:	6328      	str	r0, [r5, #48]	; 0x30
  40c220:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40c224:	692e      	ldr	r6, [r5, #16]
  40c226:	b1ae      	cbz	r6, 40c254 <__sflush_r+0xb8>
  40c228:	682c      	ldr	r4, [r5, #0]
  40c22a:	602e      	str	r6, [r5, #0]
  40c22c:	0791      	lsls	r1, r2, #30
  40c22e:	bf0c      	ite	eq
  40c230:	696b      	ldreq	r3, [r5, #20]
  40c232:	2300      	movne	r3, #0
  40c234:	1ba4      	subs	r4, r4, r6
  40c236:	60ab      	str	r3, [r5, #8]
  40c238:	e00a      	b.n	40c250 <__sflush_r+0xb4>
  40c23a:	4623      	mov	r3, r4
  40c23c:	4632      	mov	r2, r6
  40c23e:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  40c240:	69e9      	ldr	r1, [r5, #28]
  40c242:	4640      	mov	r0, r8
  40c244:	47b8      	blx	r7
  40c246:	2800      	cmp	r0, #0
  40c248:	eba4 0400 	sub.w	r4, r4, r0
  40c24c:	4406      	add	r6, r0
  40c24e:	dd04      	ble.n	40c25a <__sflush_r+0xbe>
  40c250:	2c00      	cmp	r4, #0
  40c252:	dcf2      	bgt.n	40c23a <__sflush_r+0x9e>
  40c254:	2000      	movs	r0, #0
  40c256:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40c25a:	89ab      	ldrh	r3, [r5, #12]
  40c25c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40c260:	81ab      	strh	r3, [r5, #12]
  40c262:	f04f 30ff 	mov.w	r0, #4294967295
  40c266:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40c26a:	f8d8 4000 	ldr.w	r4, [r8]
  40c26e:	2c1d      	cmp	r4, #29
  40c270:	d8f3      	bhi.n	40c25a <__sflush_r+0xbe>
  40c272:	4b19      	ldr	r3, [pc, #100]	; (40c2d8 <__sflush_r+0x13c>)
  40c274:	40e3      	lsrs	r3, r4
  40c276:	43db      	mvns	r3, r3
  40c278:	f013 0301 	ands.w	r3, r3, #1
  40c27c:	d1ed      	bne.n	40c25a <__sflush_r+0xbe>
  40c27e:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
  40c282:	606b      	str	r3, [r5, #4]
  40c284:	f422 6300 	bic.w	r3, r2, #2048	; 0x800
  40c288:	6929      	ldr	r1, [r5, #16]
  40c28a:	81ab      	strh	r3, [r5, #12]
  40c28c:	04da      	lsls	r2, r3, #19
  40c28e:	6029      	str	r1, [r5, #0]
  40c290:	d5b9      	bpl.n	40c206 <__sflush_r+0x6a>
  40c292:	2c00      	cmp	r4, #0
  40c294:	d1b7      	bne.n	40c206 <__sflush_r+0x6a>
  40c296:	6528      	str	r0, [r5, #80]	; 0x50
  40c298:	e7b5      	b.n	40c206 <__sflush_r+0x6a>
  40c29a:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  40c29c:	2a00      	cmp	r2, #0
  40c29e:	dc8c      	bgt.n	40c1ba <__sflush_r+0x1e>
  40c2a0:	e7d8      	b.n	40c254 <__sflush_r+0xb8>
  40c2a2:	2301      	movs	r3, #1
  40c2a4:	69e9      	ldr	r1, [r5, #28]
  40c2a6:	4640      	mov	r0, r8
  40c2a8:	47a0      	blx	r4
  40c2aa:	1c43      	adds	r3, r0, #1
  40c2ac:	4602      	mov	r2, r0
  40c2ae:	d002      	beq.n	40c2b6 <__sflush_r+0x11a>
  40c2b0:	89ab      	ldrh	r3, [r5, #12]
  40c2b2:	6aac      	ldr	r4, [r5, #40]	; 0x28
  40c2b4:	e78e      	b.n	40c1d4 <__sflush_r+0x38>
  40c2b6:	f8d8 3000 	ldr.w	r3, [r8]
  40c2ba:	2b00      	cmp	r3, #0
  40c2bc:	d0f8      	beq.n	40c2b0 <__sflush_r+0x114>
  40c2be:	2b1d      	cmp	r3, #29
  40c2c0:	d001      	beq.n	40c2c6 <__sflush_r+0x12a>
  40c2c2:	2b16      	cmp	r3, #22
  40c2c4:	d102      	bne.n	40c2cc <__sflush_r+0x130>
  40c2c6:	f8c8 6000 	str.w	r6, [r8]
  40c2ca:	e7c3      	b.n	40c254 <__sflush_r+0xb8>
  40c2cc:	89ab      	ldrh	r3, [r5, #12]
  40c2ce:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40c2d2:	81ab      	strh	r3, [r5, #12]
  40c2d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40c2d8:	20400001 	.word	0x20400001

0040c2dc <_fflush_r>:
  40c2dc:	b538      	push	{r3, r4, r5, lr}
  40c2de:	460d      	mov	r5, r1
  40c2e0:	4604      	mov	r4, r0
  40c2e2:	b108      	cbz	r0, 40c2e8 <_fflush_r+0xc>
  40c2e4:	6b83      	ldr	r3, [r0, #56]	; 0x38
  40c2e6:	b1bb      	cbz	r3, 40c318 <_fflush_r+0x3c>
  40c2e8:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
  40c2ec:	b188      	cbz	r0, 40c312 <_fflush_r+0x36>
  40c2ee:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  40c2f0:	07db      	lsls	r3, r3, #31
  40c2f2:	d401      	bmi.n	40c2f8 <_fflush_r+0x1c>
  40c2f4:	0581      	lsls	r1, r0, #22
  40c2f6:	d517      	bpl.n	40c328 <_fflush_r+0x4c>
  40c2f8:	4620      	mov	r0, r4
  40c2fa:	4629      	mov	r1, r5
  40c2fc:	f7ff ff4e 	bl	40c19c <__sflush_r>
  40c300:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  40c302:	07da      	lsls	r2, r3, #31
  40c304:	4604      	mov	r4, r0
  40c306:	d402      	bmi.n	40c30e <_fflush_r+0x32>
  40c308:	89ab      	ldrh	r3, [r5, #12]
  40c30a:	059b      	lsls	r3, r3, #22
  40c30c:	d507      	bpl.n	40c31e <_fflush_r+0x42>
  40c30e:	4620      	mov	r0, r4
  40c310:	bd38      	pop	{r3, r4, r5, pc}
  40c312:	4604      	mov	r4, r0
  40c314:	4620      	mov	r0, r4
  40c316:	bd38      	pop	{r3, r4, r5, pc}
  40c318:	f000 f838 	bl	40c38c <__sinit>
  40c31c:	e7e4      	b.n	40c2e8 <_fflush_r+0xc>
  40c31e:	6da8      	ldr	r0, [r5, #88]	; 0x58
  40c320:	f000 fc04 	bl	40cb2c <__retarget_lock_release_recursive>
  40c324:	4620      	mov	r0, r4
  40c326:	bd38      	pop	{r3, r4, r5, pc}
  40c328:	6da8      	ldr	r0, [r5, #88]	; 0x58
  40c32a:	f000 fbfd 	bl	40cb28 <__retarget_lock_acquire_recursive>
  40c32e:	e7e3      	b.n	40c2f8 <_fflush_r+0x1c>

0040c330 <_cleanup_r>:
  40c330:	4901      	ldr	r1, [pc, #4]	; (40c338 <_cleanup_r+0x8>)
  40c332:	f000 bbaf 	b.w	40ca94 <_fwalk_reent>
  40c336:	bf00      	nop
  40c338:	0040dacd 	.word	0x0040dacd

0040c33c <std.isra.0>:
  40c33c:	b510      	push	{r4, lr}
  40c33e:	2300      	movs	r3, #0
  40c340:	4604      	mov	r4, r0
  40c342:	8181      	strh	r1, [r0, #12]
  40c344:	81c2      	strh	r2, [r0, #14]
  40c346:	6003      	str	r3, [r0, #0]
  40c348:	6043      	str	r3, [r0, #4]
  40c34a:	6083      	str	r3, [r0, #8]
  40c34c:	6643      	str	r3, [r0, #100]	; 0x64
  40c34e:	6103      	str	r3, [r0, #16]
  40c350:	6143      	str	r3, [r0, #20]
  40c352:	6183      	str	r3, [r0, #24]
  40c354:	4619      	mov	r1, r3
  40c356:	2208      	movs	r2, #8
  40c358:	305c      	adds	r0, #92	; 0x5c
  40c35a:	f7fc fc93 	bl	408c84 <memset>
  40c35e:	4807      	ldr	r0, [pc, #28]	; (40c37c <std.isra.0+0x40>)
  40c360:	4907      	ldr	r1, [pc, #28]	; (40c380 <std.isra.0+0x44>)
  40c362:	4a08      	ldr	r2, [pc, #32]	; (40c384 <std.isra.0+0x48>)
  40c364:	4b08      	ldr	r3, [pc, #32]	; (40c388 <std.isra.0+0x4c>)
  40c366:	6220      	str	r0, [r4, #32]
  40c368:	61e4      	str	r4, [r4, #28]
  40c36a:	6261      	str	r1, [r4, #36]	; 0x24
  40c36c:	62a2      	str	r2, [r4, #40]	; 0x28
  40c36e:	62e3      	str	r3, [r4, #44]	; 0x2c
  40c370:	f104 0058 	add.w	r0, r4, #88	; 0x58
  40c374:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40c378:	f000 bbd2 	b.w	40cb20 <__retarget_lock_init_recursive>
  40c37c:	0040d631 	.word	0x0040d631
  40c380:	0040d655 	.word	0x0040d655
  40c384:	0040d691 	.word	0x0040d691
  40c388:	0040d6b1 	.word	0x0040d6b1

0040c38c <__sinit>:
  40c38c:	b510      	push	{r4, lr}
  40c38e:	4604      	mov	r4, r0
  40c390:	4812      	ldr	r0, [pc, #72]	; (40c3dc <__sinit+0x50>)
  40c392:	f000 fbc9 	bl	40cb28 <__retarget_lock_acquire_recursive>
  40c396:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  40c398:	b9d2      	cbnz	r2, 40c3d0 <__sinit+0x44>
  40c39a:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
  40c39e:	4810      	ldr	r0, [pc, #64]	; (40c3e0 <__sinit+0x54>)
  40c3a0:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
  40c3a4:	2103      	movs	r1, #3
  40c3a6:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
  40c3aa:	63e0      	str	r0, [r4, #60]	; 0x3c
  40c3ac:	f8c4 12e4 	str.w	r1, [r4, #740]	; 0x2e4
  40c3b0:	6860      	ldr	r0, [r4, #4]
  40c3b2:	2104      	movs	r1, #4
  40c3b4:	f7ff ffc2 	bl	40c33c <std.isra.0>
  40c3b8:	2201      	movs	r2, #1
  40c3ba:	2109      	movs	r1, #9
  40c3bc:	68a0      	ldr	r0, [r4, #8]
  40c3be:	f7ff ffbd 	bl	40c33c <std.isra.0>
  40c3c2:	2202      	movs	r2, #2
  40c3c4:	2112      	movs	r1, #18
  40c3c6:	68e0      	ldr	r0, [r4, #12]
  40c3c8:	f7ff ffb8 	bl	40c33c <std.isra.0>
  40c3cc:	2301      	movs	r3, #1
  40c3ce:	63a3      	str	r3, [r4, #56]	; 0x38
  40c3d0:	4802      	ldr	r0, [pc, #8]	; (40c3dc <__sinit+0x50>)
  40c3d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40c3d6:	f000 bba9 	b.w	40cb2c <__retarget_lock_release_recursive>
  40c3da:	bf00      	nop
  40c3dc:	20418db8 	.word	0x20418db8
  40c3e0:	0040c331 	.word	0x0040c331

0040c3e4 <__sfp_lock_acquire>:
  40c3e4:	4801      	ldr	r0, [pc, #4]	; (40c3ec <__sfp_lock_acquire+0x8>)
  40c3e6:	f000 bb9f 	b.w	40cb28 <__retarget_lock_acquire_recursive>
  40c3ea:	bf00      	nop
  40c3ec:	20418dcc 	.word	0x20418dcc

0040c3f0 <__sfp_lock_release>:
  40c3f0:	4801      	ldr	r0, [pc, #4]	; (40c3f8 <__sfp_lock_release+0x8>)
  40c3f2:	f000 bb9b 	b.w	40cb2c <__retarget_lock_release_recursive>
  40c3f6:	bf00      	nop
  40c3f8:	20418dcc 	.word	0x20418dcc

0040c3fc <__libc_fini_array>:
  40c3fc:	b538      	push	{r3, r4, r5, lr}
  40c3fe:	4c0a      	ldr	r4, [pc, #40]	; (40c428 <__libc_fini_array+0x2c>)
  40c400:	4d0a      	ldr	r5, [pc, #40]	; (40c42c <__libc_fini_array+0x30>)
  40c402:	1b64      	subs	r4, r4, r5
  40c404:	10a4      	asrs	r4, r4, #2
  40c406:	d00a      	beq.n	40c41e <__libc_fini_array+0x22>
  40c408:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  40c40c:	3b01      	subs	r3, #1
  40c40e:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  40c412:	3c01      	subs	r4, #1
  40c414:	f855 3904 	ldr.w	r3, [r5], #-4
  40c418:	4798      	blx	r3
  40c41a:	2c00      	cmp	r4, #0
  40c41c:	d1f9      	bne.n	40c412 <__libc_fini_array+0x16>
  40c41e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  40c422:	f003 ba67 	b.w	40f8f4 <_fini>
  40c426:	bf00      	nop
  40c428:	0040f904 	.word	0x0040f904
  40c42c:	0040f900 	.word	0x0040f900

0040c430 <__fputwc>:
  40c430:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  40c434:	b082      	sub	sp, #8
  40c436:	4680      	mov	r8, r0
  40c438:	4689      	mov	r9, r1
  40c43a:	4614      	mov	r4, r2
  40c43c:	f000 fb54 	bl	40cae8 <__locale_mb_cur_max>
  40c440:	2801      	cmp	r0, #1
  40c442:	d036      	beq.n	40c4b2 <__fputwc+0x82>
  40c444:	464a      	mov	r2, r9
  40c446:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  40c44a:	a901      	add	r1, sp, #4
  40c44c:	4640      	mov	r0, r8
  40c44e:	f001 fa7b 	bl	40d948 <_wcrtomb_r>
  40c452:	1c42      	adds	r2, r0, #1
  40c454:	4606      	mov	r6, r0
  40c456:	d025      	beq.n	40c4a4 <__fputwc+0x74>
  40c458:	b3a8      	cbz	r0, 40c4c6 <__fputwc+0x96>
  40c45a:	f89d e004 	ldrb.w	lr, [sp, #4]
  40c45e:	2500      	movs	r5, #0
  40c460:	f10d 0a04 	add.w	sl, sp, #4
  40c464:	e009      	b.n	40c47a <__fputwc+0x4a>
  40c466:	6823      	ldr	r3, [r4, #0]
  40c468:	1c5a      	adds	r2, r3, #1
  40c46a:	6022      	str	r2, [r4, #0]
  40c46c:	f883 e000 	strb.w	lr, [r3]
  40c470:	3501      	adds	r5, #1
  40c472:	42b5      	cmp	r5, r6
  40c474:	d227      	bcs.n	40c4c6 <__fputwc+0x96>
  40c476:	f815 e00a 	ldrb.w	lr, [r5, sl]
  40c47a:	68a3      	ldr	r3, [r4, #8]
  40c47c:	3b01      	subs	r3, #1
  40c47e:	2b00      	cmp	r3, #0
  40c480:	60a3      	str	r3, [r4, #8]
  40c482:	daf0      	bge.n	40c466 <__fputwc+0x36>
  40c484:	69a7      	ldr	r7, [r4, #24]
  40c486:	42bb      	cmp	r3, r7
  40c488:	4671      	mov	r1, lr
  40c48a:	4622      	mov	r2, r4
  40c48c:	4640      	mov	r0, r8
  40c48e:	db02      	blt.n	40c496 <__fputwc+0x66>
  40c490:	f1be 0f0a 	cmp.w	lr, #10
  40c494:	d1e7      	bne.n	40c466 <__fputwc+0x36>
  40c496:	f001 f9ff 	bl	40d898 <__swbuf_r>
  40c49a:	1c43      	adds	r3, r0, #1
  40c49c:	d1e8      	bne.n	40c470 <__fputwc+0x40>
  40c49e:	b002      	add	sp, #8
  40c4a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40c4a4:	89a3      	ldrh	r3, [r4, #12]
  40c4a6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40c4aa:	81a3      	strh	r3, [r4, #12]
  40c4ac:	b002      	add	sp, #8
  40c4ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40c4b2:	f109 33ff 	add.w	r3, r9, #4294967295
  40c4b6:	2bfe      	cmp	r3, #254	; 0xfe
  40c4b8:	d8c4      	bhi.n	40c444 <__fputwc+0x14>
  40c4ba:	fa5f fe89 	uxtb.w	lr, r9
  40c4be:	4606      	mov	r6, r0
  40c4c0:	f88d e004 	strb.w	lr, [sp, #4]
  40c4c4:	e7cb      	b.n	40c45e <__fputwc+0x2e>
  40c4c6:	4648      	mov	r0, r9
  40c4c8:	b002      	add	sp, #8
  40c4ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40c4ce:	bf00      	nop

0040c4d0 <_fputwc_r>:
  40c4d0:	b530      	push	{r4, r5, lr}
  40c4d2:	6e53      	ldr	r3, [r2, #100]	; 0x64
  40c4d4:	f013 0f01 	tst.w	r3, #1
  40c4d8:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
  40c4dc:	4614      	mov	r4, r2
  40c4de:	b083      	sub	sp, #12
  40c4e0:	4605      	mov	r5, r0
  40c4e2:	b29a      	uxth	r2, r3
  40c4e4:	d101      	bne.n	40c4ea <_fputwc_r+0x1a>
  40c4e6:	0590      	lsls	r0, r2, #22
  40c4e8:	d51c      	bpl.n	40c524 <_fputwc_r+0x54>
  40c4ea:	0490      	lsls	r0, r2, #18
  40c4ec:	d406      	bmi.n	40c4fc <_fputwc_r+0x2c>
  40c4ee:	6e62      	ldr	r2, [r4, #100]	; 0x64
  40c4f0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  40c4f4:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  40c4f8:	81a3      	strh	r3, [r4, #12]
  40c4fa:	6662      	str	r2, [r4, #100]	; 0x64
  40c4fc:	4628      	mov	r0, r5
  40c4fe:	4622      	mov	r2, r4
  40c500:	f7ff ff96 	bl	40c430 <__fputwc>
  40c504:	6e63      	ldr	r3, [r4, #100]	; 0x64
  40c506:	07da      	lsls	r2, r3, #31
  40c508:	4605      	mov	r5, r0
  40c50a:	d402      	bmi.n	40c512 <_fputwc_r+0x42>
  40c50c:	89a3      	ldrh	r3, [r4, #12]
  40c50e:	059b      	lsls	r3, r3, #22
  40c510:	d502      	bpl.n	40c518 <_fputwc_r+0x48>
  40c512:	4628      	mov	r0, r5
  40c514:	b003      	add	sp, #12
  40c516:	bd30      	pop	{r4, r5, pc}
  40c518:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40c51a:	f000 fb07 	bl	40cb2c <__retarget_lock_release_recursive>
  40c51e:	4628      	mov	r0, r5
  40c520:	b003      	add	sp, #12
  40c522:	bd30      	pop	{r4, r5, pc}
  40c524:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40c526:	9101      	str	r1, [sp, #4]
  40c528:	f000 fafe 	bl	40cb28 <__retarget_lock_acquire_recursive>
  40c52c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40c530:	9901      	ldr	r1, [sp, #4]
  40c532:	b29a      	uxth	r2, r3
  40c534:	e7d9      	b.n	40c4ea <_fputwc_r+0x1a>
  40c536:	bf00      	nop

0040c538 <_malloc_trim_r>:
  40c538:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40c53a:	4f24      	ldr	r7, [pc, #144]	; (40c5cc <_malloc_trim_r+0x94>)
  40c53c:	460c      	mov	r4, r1
  40c53e:	4606      	mov	r6, r0
  40c540:	f7fc fbee 	bl	408d20 <__malloc_lock>
  40c544:	68bb      	ldr	r3, [r7, #8]
  40c546:	685d      	ldr	r5, [r3, #4]
  40c548:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  40c54c:	310f      	adds	r1, #15
  40c54e:	f025 0503 	bic.w	r5, r5, #3
  40c552:	4429      	add	r1, r5
  40c554:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  40c558:	f021 010f 	bic.w	r1, r1, #15
  40c55c:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  40c560:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  40c564:	db07      	blt.n	40c576 <_malloc_trim_r+0x3e>
  40c566:	2100      	movs	r1, #0
  40c568:	4630      	mov	r0, r6
  40c56a:	f7fc fbe5 	bl	408d38 <_sbrk_r>
  40c56e:	68bb      	ldr	r3, [r7, #8]
  40c570:	442b      	add	r3, r5
  40c572:	4298      	cmp	r0, r3
  40c574:	d004      	beq.n	40c580 <_malloc_trim_r+0x48>
  40c576:	4630      	mov	r0, r6
  40c578:	f7fc fbd8 	bl	408d2c <__malloc_unlock>
  40c57c:	2000      	movs	r0, #0
  40c57e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40c580:	4261      	negs	r1, r4
  40c582:	4630      	mov	r0, r6
  40c584:	f7fc fbd8 	bl	408d38 <_sbrk_r>
  40c588:	3001      	adds	r0, #1
  40c58a:	d00d      	beq.n	40c5a8 <_malloc_trim_r+0x70>
  40c58c:	4b10      	ldr	r3, [pc, #64]	; (40c5d0 <_malloc_trim_r+0x98>)
  40c58e:	68ba      	ldr	r2, [r7, #8]
  40c590:	6819      	ldr	r1, [r3, #0]
  40c592:	1b2d      	subs	r5, r5, r4
  40c594:	f045 0501 	orr.w	r5, r5, #1
  40c598:	4630      	mov	r0, r6
  40c59a:	1b09      	subs	r1, r1, r4
  40c59c:	6055      	str	r5, [r2, #4]
  40c59e:	6019      	str	r1, [r3, #0]
  40c5a0:	f7fc fbc4 	bl	408d2c <__malloc_unlock>
  40c5a4:	2001      	movs	r0, #1
  40c5a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40c5a8:	2100      	movs	r1, #0
  40c5aa:	4630      	mov	r0, r6
  40c5ac:	f7fc fbc4 	bl	408d38 <_sbrk_r>
  40c5b0:	68ba      	ldr	r2, [r7, #8]
  40c5b2:	1a83      	subs	r3, r0, r2
  40c5b4:	2b0f      	cmp	r3, #15
  40c5b6:	ddde      	ble.n	40c576 <_malloc_trim_r+0x3e>
  40c5b8:	4c06      	ldr	r4, [pc, #24]	; (40c5d4 <_malloc_trim_r+0x9c>)
  40c5ba:	4905      	ldr	r1, [pc, #20]	; (40c5d0 <_malloc_trim_r+0x98>)
  40c5bc:	6824      	ldr	r4, [r4, #0]
  40c5be:	f043 0301 	orr.w	r3, r3, #1
  40c5c2:	1b00      	subs	r0, r0, r4
  40c5c4:	6053      	str	r3, [r2, #4]
  40c5c6:	6008      	str	r0, [r1, #0]
  40c5c8:	e7d5      	b.n	40c576 <_malloc_trim_r+0x3e>
  40c5ca:	bf00      	nop
  40c5cc:	20400458 	.word	0x20400458
  40c5d0:	2040ed60 	.word	0x2040ed60
  40c5d4:	20400860 	.word	0x20400860

0040c5d8 <_free_r>:
  40c5d8:	2900      	cmp	r1, #0
  40c5da:	d044      	beq.n	40c666 <_free_r+0x8e>
  40c5dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40c5e0:	460d      	mov	r5, r1
  40c5e2:	4680      	mov	r8, r0
  40c5e4:	f7fc fb9c 	bl	408d20 <__malloc_lock>
  40c5e8:	f855 7c04 	ldr.w	r7, [r5, #-4]
  40c5ec:	4969      	ldr	r1, [pc, #420]	; (40c794 <_free_r+0x1bc>)
  40c5ee:	f027 0301 	bic.w	r3, r7, #1
  40c5f2:	f1a5 0408 	sub.w	r4, r5, #8
  40c5f6:	18e2      	adds	r2, r4, r3
  40c5f8:	688e      	ldr	r6, [r1, #8]
  40c5fa:	6850      	ldr	r0, [r2, #4]
  40c5fc:	42b2      	cmp	r2, r6
  40c5fe:	f020 0003 	bic.w	r0, r0, #3
  40c602:	d05e      	beq.n	40c6c2 <_free_r+0xea>
  40c604:	07fe      	lsls	r6, r7, #31
  40c606:	6050      	str	r0, [r2, #4]
  40c608:	d40b      	bmi.n	40c622 <_free_r+0x4a>
  40c60a:	f855 7c08 	ldr.w	r7, [r5, #-8]
  40c60e:	1be4      	subs	r4, r4, r7
  40c610:	f101 0e08 	add.w	lr, r1, #8
  40c614:	68a5      	ldr	r5, [r4, #8]
  40c616:	4575      	cmp	r5, lr
  40c618:	443b      	add	r3, r7
  40c61a:	d06d      	beq.n	40c6f8 <_free_r+0x120>
  40c61c:	68e7      	ldr	r7, [r4, #12]
  40c61e:	60ef      	str	r7, [r5, #12]
  40c620:	60bd      	str	r5, [r7, #8]
  40c622:	1815      	adds	r5, r2, r0
  40c624:	686d      	ldr	r5, [r5, #4]
  40c626:	07ed      	lsls	r5, r5, #31
  40c628:	d53e      	bpl.n	40c6a8 <_free_r+0xd0>
  40c62a:	f043 0201 	orr.w	r2, r3, #1
  40c62e:	6062      	str	r2, [r4, #4]
  40c630:	50e3      	str	r3, [r4, r3]
  40c632:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40c636:	d217      	bcs.n	40c668 <_free_r+0x90>
  40c638:	08db      	lsrs	r3, r3, #3
  40c63a:	1c58      	adds	r0, r3, #1
  40c63c:	109a      	asrs	r2, r3, #2
  40c63e:	684d      	ldr	r5, [r1, #4]
  40c640:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  40c644:	60a7      	str	r7, [r4, #8]
  40c646:	2301      	movs	r3, #1
  40c648:	4093      	lsls	r3, r2
  40c64a:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  40c64e:	432b      	orrs	r3, r5
  40c650:	3a08      	subs	r2, #8
  40c652:	60e2      	str	r2, [r4, #12]
  40c654:	604b      	str	r3, [r1, #4]
  40c656:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  40c65a:	60fc      	str	r4, [r7, #12]
  40c65c:	4640      	mov	r0, r8
  40c65e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  40c662:	f7fc bb63 	b.w	408d2c <__malloc_unlock>
  40c666:	4770      	bx	lr
  40c668:	0a5a      	lsrs	r2, r3, #9
  40c66a:	2a04      	cmp	r2, #4
  40c66c:	d852      	bhi.n	40c714 <_free_r+0x13c>
  40c66e:	099a      	lsrs	r2, r3, #6
  40c670:	f102 0739 	add.w	r7, r2, #57	; 0x39
  40c674:	00ff      	lsls	r7, r7, #3
  40c676:	f102 0538 	add.w	r5, r2, #56	; 0x38
  40c67a:	19c8      	adds	r0, r1, r7
  40c67c:	59ca      	ldr	r2, [r1, r7]
  40c67e:	3808      	subs	r0, #8
  40c680:	4290      	cmp	r0, r2
  40c682:	d04f      	beq.n	40c724 <_free_r+0x14c>
  40c684:	6851      	ldr	r1, [r2, #4]
  40c686:	f021 0103 	bic.w	r1, r1, #3
  40c68a:	428b      	cmp	r3, r1
  40c68c:	d232      	bcs.n	40c6f4 <_free_r+0x11c>
  40c68e:	6892      	ldr	r2, [r2, #8]
  40c690:	4290      	cmp	r0, r2
  40c692:	d1f7      	bne.n	40c684 <_free_r+0xac>
  40c694:	68c3      	ldr	r3, [r0, #12]
  40c696:	60a0      	str	r0, [r4, #8]
  40c698:	60e3      	str	r3, [r4, #12]
  40c69a:	609c      	str	r4, [r3, #8]
  40c69c:	60c4      	str	r4, [r0, #12]
  40c69e:	4640      	mov	r0, r8
  40c6a0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  40c6a4:	f7fc bb42 	b.w	408d2c <__malloc_unlock>
  40c6a8:	6895      	ldr	r5, [r2, #8]
  40c6aa:	4f3b      	ldr	r7, [pc, #236]	; (40c798 <_free_r+0x1c0>)
  40c6ac:	42bd      	cmp	r5, r7
  40c6ae:	4403      	add	r3, r0
  40c6b0:	d040      	beq.n	40c734 <_free_r+0x15c>
  40c6b2:	68d0      	ldr	r0, [r2, #12]
  40c6b4:	60e8      	str	r0, [r5, #12]
  40c6b6:	f043 0201 	orr.w	r2, r3, #1
  40c6ba:	6085      	str	r5, [r0, #8]
  40c6bc:	6062      	str	r2, [r4, #4]
  40c6be:	50e3      	str	r3, [r4, r3]
  40c6c0:	e7b7      	b.n	40c632 <_free_r+0x5a>
  40c6c2:	07ff      	lsls	r7, r7, #31
  40c6c4:	4403      	add	r3, r0
  40c6c6:	d407      	bmi.n	40c6d8 <_free_r+0x100>
  40c6c8:	f855 2c08 	ldr.w	r2, [r5, #-8]
  40c6cc:	1aa4      	subs	r4, r4, r2
  40c6ce:	4413      	add	r3, r2
  40c6d0:	68a0      	ldr	r0, [r4, #8]
  40c6d2:	68e2      	ldr	r2, [r4, #12]
  40c6d4:	60c2      	str	r2, [r0, #12]
  40c6d6:	6090      	str	r0, [r2, #8]
  40c6d8:	4a30      	ldr	r2, [pc, #192]	; (40c79c <_free_r+0x1c4>)
  40c6da:	6812      	ldr	r2, [r2, #0]
  40c6dc:	f043 0001 	orr.w	r0, r3, #1
  40c6e0:	4293      	cmp	r3, r2
  40c6e2:	6060      	str	r0, [r4, #4]
  40c6e4:	608c      	str	r4, [r1, #8]
  40c6e6:	d3b9      	bcc.n	40c65c <_free_r+0x84>
  40c6e8:	4b2d      	ldr	r3, [pc, #180]	; (40c7a0 <_free_r+0x1c8>)
  40c6ea:	4640      	mov	r0, r8
  40c6ec:	6819      	ldr	r1, [r3, #0]
  40c6ee:	f7ff ff23 	bl	40c538 <_malloc_trim_r>
  40c6f2:	e7b3      	b.n	40c65c <_free_r+0x84>
  40c6f4:	4610      	mov	r0, r2
  40c6f6:	e7cd      	b.n	40c694 <_free_r+0xbc>
  40c6f8:	1811      	adds	r1, r2, r0
  40c6fa:	6849      	ldr	r1, [r1, #4]
  40c6fc:	07c9      	lsls	r1, r1, #31
  40c6fe:	d444      	bmi.n	40c78a <_free_r+0x1b2>
  40c700:	6891      	ldr	r1, [r2, #8]
  40c702:	68d2      	ldr	r2, [r2, #12]
  40c704:	60ca      	str	r2, [r1, #12]
  40c706:	4403      	add	r3, r0
  40c708:	f043 0001 	orr.w	r0, r3, #1
  40c70c:	6091      	str	r1, [r2, #8]
  40c70e:	6060      	str	r0, [r4, #4]
  40c710:	50e3      	str	r3, [r4, r3]
  40c712:	e7a3      	b.n	40c65c <_free_r+0x84>
  40c714:	2a14      	cmp	r2, #20
  40c716:	d816      	bhi.n	40c746 <_free_r+0x16e>
  40c718:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  40c71c:	00ff      	lsls	r7, r7, #3
  40c71e:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  40c722:	e7aa      	b.n	40c67a <_free_r+0xa2>
  40c724:	10aa      	asrs	r2, r5, #2
  40c726:	2301      	movs	r3, #1
  40c728:	684d      	ldr	r5, [r1, #4]
  40c72a:	4093      	lsls	r3, r2
  40c72c:	432b      	orrs	r3, r5
  40c72e:	604b      	str	r3, [r1, #4]
  40c730:	4603      	mov	r3, r0
  40c732:	e7b0      	b.n	40c696 <_free_r+0xbe>
  40c734:	f043 0201 	orr.w	r2, r3, #1
  40c738:	614c      	str	r4, [r1, #20]
  40c73a:	610c      	str	r4, [r1, #16]
  40c73c:	60e5      	str	r5, [r4, #12]
  40c73e:	60a5      	str	r5, [r4, #8]
  40c740:	6062      	str	r2, [r4, #4]
  40c742:	50e3      	str	r3, [r4, r3]
  40c744:	e78a      	b.n	40c65c <_free_r+0x84>
  40c746:	2a54      	cmp	r2, #84	; 0x54
  40c748:	d806      	bhi.n	40c758 <_free_r+0x180>
  40c74a:	0b1a      	lsrs	r2, r3, #12
  40c74c:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  40c750:	00ff      	lsls	r7, r7, #3
  40c752:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  40c756:	e790      	b.n	40c67a <_free_r+0xa2>
  40c758:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  40c75c:	d806      	bhi.n	40c76c <_free_r+0x194>
  40c75e:	0bda      	lsrs	r2, r3, #15
  40c760:	f102 0778 	add.w	r7, r2, #120	; 0x78
  40c764:	00ff      	lsls	r7, r7, #3
  40c766:	f102 0577 	add.w	r5, r2, #119	; 0x77
  40c76a:	e786      	b.n	40c67a <_free_r+0xa2>
  40c76c:	f240 5054 	movw	r0, #1364	; 0x554
  40c770:	4282      	cmp	r2, r0
  40c772:	d806      	bhi.n	40c782 <_free_r+0x1aa>
  40c774:	0c9a      	lsrs	r2, r3, #18
  40c776:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  40c77a:	00ff      	lsls	r7, r7, #3
  40c77c:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  40c780:	e77b      	b.n	40c67a <_free_r+0xa2>
  40c782:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  40c786:	257e      	movs	r5, #126	; 0x7e
  40c788:	e777      	b.n	40c67a <_free_r+0xa2>
  40c78a:	f043 0101 	orr.w	r1, r3, #1
  40c78e:	6061      	str	r1, [r4, #4]
  40c790:	6013      	str	r3, [r2, #0]
  40c792:	e763      	b.n	40c65c <_free_r+0x84>
  40c794:	20400458 	.word	0x20400458
  40c798:	20400460 	.word	0x20400460
  40c79c:	20400864 	.word	0x20400864
  40c7a0:	2040ed90 	.word	0x2040ed90

0040c7a4 <__sfvwrite_r>:
  40c7a4:	6893      	ldr	r3, [r2, #8]
  40c7a6:	2b00      	cmp	r3, #0
  40c7a8:	d073      	beq.n	40c892 <__sfvwrite_r+0xee>
  40c7aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40c7ae:	898b      	ldrh	r3, [r1, #12]
  40c7b0:	b083      	sub	sp, #12
  40c7b2:	460c      	mov	r4, r1
  40c7b4:	0719      	lsls	r1, r3, #28
  40c7b6:	9000      	str	r0, [sp, #0]
  40c7b8:	4616      	mov	r6, r2
  40c7ba:	d526      	bpl.n	40c80a <__sfvwrite_r+0x66>
  40c7bc:	6922      	ldr	r2, [r4, #16]
  40c7be:	b322      	cbz	r2, 40c80a <__sfvwrite_r+0x66>
  40c7c0:	f013 0002 	ands.w	r0, r3, #2
  40c7c4:	6835      	ldr	r5, [r6, #0]
  40c7c6:	d02c      	beq.n	40c822 <__sfvwrite_r+0x7e>
  40c7c8:	f04f 0900 	mov.w	r9, #0
  40c7cc:	4fb0      	ldr	r7, [pc, #704]	; (40ca90 <__sfvwrite_r+0x2ec>)
  40c7ce:	46c8      	mov	r8, r9
  40c7d0:	46b2      	mov	sl, r6
  40c7d2:	45b8      	cmp	r8, r7
  40c7d4:	4643      	mov	r3, r8
  40c7d6:	464a      	mov	r2, r9
  40c7d8:	bf28      	it	cs
  40c7da:	463b      	movcs	r3, r7
  40c7dc:	9800      	ldr	r0, [sp, #0]
  40c7de:	f1b8 0f00 	cmp.w	r8, #0
  40c7e2:	d050      	beq.n	40c886 <__sfvwrite_r+0xe2>
  40c7e4:	69e1      	ldr	r1, [r4, #28]
  40c7e6:	6a66      	ldr	r6, [r4, #36]	; 0x24
  40c7e8:	47b0      	blx	r6
  40c7ea:	2800      	cmp	r0, #0
  40c7ec:	dd58      	ble.n	40c8a0 <__sfvwrite_r+0xfc>
  40c7ee:	f8da 3008 	ldr.w	r3, [sl, #8]
  40c7f2:	1a1b      	subs	r3, r3, r0
  40c7f4:	4481      	add	r9, r0
  40c7f6:	eba8 0800 	sub.w	r8, r8, r0
  40c7fa:	f8ca 3008 	str.w	r3, [sl, #8]
  40c7fe:	2b00      	cmp	r3, #0
  40c800:	d1e7      	bne.n	40c7d2 <__sfvwrite_r+0x2e>
  40c802:	2000      	movs	r0, #0
  40c804:	b003      	add	sp, #12
  40c806:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40c80a:	4621      	mov	r1, r4
  40c80c:	9800      	ldr	r0, [sp, #0]
  40c80e:	f7fe fc93 	bl	40b138 <__swsetup_r>
  40c812:	2800      	cmp	r0, #0
  40c814:	f040 8133 	bne.w	40ca7e <__sfvwrite_r+0x2da>
  40c818:	89a3      	ldrh	r3, [r4, #12]
  40c81a:	6835      	ldr	r5, [r6, #0]
  40c81c:	f013 0002 	ands.w	r0, r3, #2
  40c820:	d1d2      	bne.n	40c7c8 <__sfvwrite_r+0x24>
  40c822:	f013 0901 	ands.w	r9, r3, #1
  40c826:	d145      	bne.n	40c8b4 <__sfvwrite_r+0x110>
  40c828:	464f      	mov	r7, r9
  40c82a:	9601      	str	r6, [sp, #4]
  40c82c:	b337      	cbz	r7, 40c87c <__sfvwrite_r+0xd8>
  40c82e:	059a      	lsls	r2, r3, #22
  40c830:	f8d4 8008 	ldr.w	r8, [r4, #8]
  40c834:	f140 8083 	bpl.w	40c93e <__sfvwrite_r+0x19a>
  40c838:	4547      	cmp	r7, r8
  40c83a:	46c3      	mov	fp, r8
  40c83c:	f0c0 80ab 	bcc.w	40c996 <__sfvwrite_r+0x1f2>
  40c840:	f413 6f90 	tst.w	r3, #1152	; 0x480
  40c844:	f040 80ac 	bne.w	40c9a0 <__sfvwrite_r+0x1fc>
  40c848:	6820      	ldr	r0, [r4, #0]
  40c84a:	46ba      	mov	sl, r7
  40c84c:	465a      	mov	r2, fp
  40c84e:	4649      	mov	r1, r9
  40c850:	f7fc f9b4 	bl	408bbc <memmove>
  40c854:	68a2      	ldr	r2, [r4, #8]
  40c856:	6823      	ldr	r3, [r4, #0]
  40c858:	eba2 0208 	sub.w	r2, r2, r8
  40c85c:	445b      	add	r3, fp
  40c85e:	60a2      	str	r2, [r4, #8]
  40c860:	6023      	str	r3, [r4, #0]
  40c862:	9a01      	ldr	r2, [sp, #4]
  40c864:	6893      	ldr	r3, [r2, #8]
  40c866:	eba3 030a 	sub.w	r3, r3, sl
  40c86a:	44d1      	add	r9, sl
  40c86c:	eba7 070a 	sub.w	r7, r7, sl
  40c870:	6093      	str	r3, [r2, #8]
  40c872:	2b00      	cmp	r3, #0
  40c874:	d0c5      	beq.n	40c802 <__sfvwrite_r+0x5e>
  40c876:	89a3      	ldrh	r3, [r4, #12]
  40c878:	2f00      	cmp	r7, #0
  40c87a:	d1d8      	bne.n	40c82e <__sfvwrite_r+0x8a>
  40c87c:	f8d5 9000 	ldr.w	r9, [r5]
  40c880:	686f      	ldr	r7, [r5, #4]
  40c882:	3508      	adds	r5, #8
  40c884:	e7d2      	b.n	40c82c <__sfvwrite_r+0x88>
  40c886:	f8d5 9000 	ldr.w	r9, [r5]
  40c88a:	f8d5 8004 	ldr.w	r8, [r5, #4]
  40c88e:	3508      	adds	r5, #8
  40c890:	e79f      	b.n	40c7d2 <__sfvwrite_r+0x2e>
  40c892:	2000      	movs	r0, #0
  40c894:	4770      	bx	lr
  40c896:	4621      	mov	r1, r4
  40c898:	9800      	ldr	r0, [sp, #0]
  40c89a:	f7ff fd1f 	bl	40c2dc <_fflush_r>
  40c89e:	b370      	cbz	r0, 40c8fe <__sfvwrite_r+0x15a>
  40c8a0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40c8a4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40c8a8:	f04f 30ff 	mov.w	r0, #4294967295
  40c8ac:	81a3      	strh	r3, [r4, #12]
  40c8ae:	b003      	add	sp, #12
  40c8b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40c8b4:	4681      	mov	r9, r0
  40c8b6:	4633      	mov	r3, r6
  40c8b8:	464e      	mov	r6, r9
  40c8ba:	46a8      	mov	r8, r5
  40c8bc:	469a      	mov	sl, r3
  40c8be:	464d      	mov	r5, r9
  40c8c0:	b34e      	cbz	r6, 40c916 <__sfvwrite_r+0x172>
  40c8c2:	b380      	cbz	r0, 40c926 <__sfvwrite_r+0x182>
  40c8c4:	6820      	ldr	r0, [r4, #0]
  40c8c6:	6923      	ldr	r3, [r4, #16]
  40c8c8:	6962      	ldr	r2, [r4, #20]
  40c8ca:	45b1      	cmp	r9, r6
  40c8cc:	46cb      	mov	fp, r9
  40c8ce:	bf28      	it	cs
  40c8d0:	46b3      	movcs	fp, r6
  40c8d2:	4298      	cmp	r0, r3
  40c8d4:	465f      	mov	r7, fp
  40c8d6:	d904      	bls.n	40c8e2 <__sfvwrite_r+0x13e>
  40c8d8:	68a3      	ldr	r3, [r4, #8]
  40c8da:	4413      	add	r3, r2
  40c8dc:	459b      	cmp	fp, r3
  40c8de:	f300 80a6 	bgt.w	40ca2e <__sfvwrite_r+0x28a>
  40c8e2:	4593      	cmp	fp, r2
  40c8e4:	db4b      	blt.n	40c97e <__sfvwrite_r+0x1da>
  40c8e6:	4613      	mov	r3, r2
  40c8e8:	6a67      	ldr	r7, [r4, #36]	; 0x24
  40c8ea:	69e1      	ldr	r1, [r4, #28]
  40c8ec:	9800      	ldr	r0, [sp, #0]
  40c8ee:	462a      	mov	r2, r5
  40c8f0:	47b8      	blx	r7
  40c8f2:	1e07      	subs	r7, r0, #0
  40c8f4:	ddd4      	ble.n	40c8a0 <__sfvwrite_r+0xfc>
  40c8f6:	ebb9 0907 	subs.w	r9, r9, r7
  40c8fa:	d0cc      	beq.n	40c896 <__sfvwrite_r+0xf2>
  40c8fc:	2001      	movs	r0, #1
  40c8fe:	f8da 3008 	ldr.w	r3, [sl, #8]
  40c902:	1bdb      	subs	r3, r3, r7
  40c904:	443d      	add	r5, r7
  40c906:	1bf6      	subs	r6, r6, r7
  40c908:	f8ca 3008 	str.w	r3, [sl, #8]
  40c90c:	2b00      	cmp	r3, #0
  40c90e:	f43f af78 	beq.w	40c802 <__sfvwrite_r+0x5e>
  40c912:	2e00      	cmp	r6, #0
  40c914:	d1d5      	bne.n	40c8c2 <__sfvwrite_r+0x11e>
  40c916:	f108 0308 	add.w	r3, r8, #8
  40c91a:	e913 0060 	ldmdb	r3, {r5, r6}
  40c91e:	4698      	mov	r8, r3
  40c920:	3308      	adds	r3, #8
  40c922:	2e00      	cmp	r6, #0
  40c924:	d0f9      	beq.n	40c91a <__sfvwrite_r+0x176>
  40c926:	4632      	mov	r2, r6
  40c928:	210a      	movs	r1, #10
  40c92a:	4628      	mov	r0, r5
  40c92c:	f000 f990 	bl	40cc50 <memchr>
  40c930:	2800      	cmp	r0, #0
  40c932:	f000 80a1 	beq.w	40ca78 <__sfvwrite_r+0x2d4>
  40c936:	3001      	adds	r0, #1
  40c938:	eba0 0905 	sub.w	r9, r0, r5
  40c93c:	e7c2      	b.n	40c8c4 <__sfvwrite_r+0x120>
  40c93e:	6820      	ldr	r0, [r4, #0]
  40c940:	6923      	ldr	r3, [r4, #16]
  40c942:	4298      	cmp	r0, r3
  40c944:	d802      	bhi.n	40c94c <__sfvwrite_r+0x1a8>
  40c946:	6963      	ldr	r3, [r4, #20]
  40c948:	429f      	cmp	r7, r3
  40c94a:	d25d      	bcs.n	40ca08 <__sfvwrite_r+0x264>
  40c94c:	45b8      	cmp	r8, r7
  40c94e:	bf28      	it	cs
  40c950:	46b8      	movcs	r8, r7
  40c952:	4642      	mov	r2, r8
  40c954:	4649      	mov	r1, r9
  40c956:	f7fc f931 	bl	408bbc <memmove>
  40c95a:	68a3      	ldr	r3, [r4, #8]
  40c95c:	6822      	ldr	r2, [r4, #0]
  40c95e:	eba3 0308 	sub.w	r3, r3, r8
  40c962:	4442      	add	r2, r8
  40c964:	60a3      	str	r3, [r4, #8]
  40c966:	6022      	str	r2, [r4, #0]
  40c968:	b10b      	cbz	r3, 40c96e <__sfvwrite_r+0x1ca>
  40c96a:	46c2      	mov	sl, r8
  40c96c:	e779      	b.n	40c862 <__sfvwrite_r+0xbe>
  40c96e:	4621      	mov	r1, r4
  40c970:	9800      	ldr	r0, [sp, #0]
  40c972:	f7ff fcb3 	bl	40c2dc <_fflush_r>
  40c976:	2800      	cmp	r0, #0
  40c978:	d192      	bne.n	40c8a0 <__sfvwrite_r+0xfc>
  40c97a:	46c2      	mov	sl, r8
  40c97c:	e771      	b.n	40c862 <__sfvwrite_r+0xbe>
  40c97e:	465a      	mov	r2, fp
  40c980:	4629      	mov	r1, r5
  40c982:	f7fc f91b 	bl	408bbc <memmove>
  40c986:	68a2      	ldr	r2, [r4, #8]
  40c988:	6823      	ldr	r3, [r4, #0]
  40c98a:	eba2 020b 	sub.w	r2, r2, fp
  40c98e:	445b      	add	r3, fp
  40c990:	60a2      	str	r2, [r4, #8]
  40c992:	6023      	str	r3, [r4, #0]
  40c994:	e7af      	b.n	40c8f6 <__sfvwrite_r+0x152>
  40c996:	6820      	ldr	r0, [r4, #0]
  40c998:	46b8      	mov	r8, r7
  40c99a:	46ba      	mov	sl, r7
  40c99c:	46bb      	mov	fp, r7
  40c99e:	e755      	b.n	40c84c <__sfvwrite_r+0xa8>
  40c9a0:	6962      	ldr	r2, [r4, #20]
  40c9a2:	6820      	ldr	r0, [r4, #0]
  40c9a4:	6921      	ldr	r1, [r4, #16]
  40c9a6:	eb02 0842 	add.w	r8, r2, r2, lsl #1
  40c9aa:	eba0 0a01 	sub.w	sl, r0, r1
  40c9ae:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
  40c9b2:	f10a 0001 	add.w	r0, sl, #1
  40c9b6:	ea4f 0868 	mov.w	r8, r8, asr #1
  40c9ba:	4438      	add	r0, r7
  40c9bc:	4540      	cmp	r0, r8
  40c9be:	4642      	mov	r2, r8
  40c9c0:	bf84      	itt	hi
  40c9c2:	4680      	movhi	r8, r0
  40c9c4:	4642      	movhi	r2, r8
  40c9c6:	055b      	lsls	r3, r3, #21
  40c9c8:	d544      	bpl.n	40ca54 <__sfvwrite_r+0x2b0>
  40c9ca:	4611      	mov	r1, r2
  40c9cc:	9800      	ldr	r0, [sp, #0]
  40c9ce:	f7fb fdab 	bl	408528 <_malloc_r>
  40c9d2:	4683      	mov	fp, r0
  40c9d4:	2800      	cmp	r0, #0
  40c9d6:	d055      	beq.n	40ca84 <__sfvwrite_r+0x2e0>
  40c9d8:	4652      	mov	r2, sl
  40c9da:	6921      	ldr	r1, [r4, #16]
  40c9dc:	f7fc f854 	bl	408a88 <memcpy>
  40c9e0:	89a3      	ldrh	r3, [r4, #12]
  40c9e2:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
  40c9e6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40c9ea:	81a3      	strh	r3, [r4, #12]
  40c9ec:	eb0b 000a 	add.w	r0, fp, sl
  40c9f0:	eba8 030a 	sub.w	r3, r8, sl
  40c9f4:	f8c4 b010 	str.w	fp, [r4, #16]
  40c9f8:	f8c4 8014 	str.w	r8, [r4, #20]
  40c9fc:	6020      	str	r0, [r4, #0]
  40c9fe:	60a3      	str	r3, [r4, #8]
  40ca00:	46b8      	mov	r8, r7
  40ca02:	46ba      	mov	sl, r7
  40ca04:	46bb      	mov	fp, r7
  40ca06:	e721      	b.n	40c84c <__sfvwrite_r+0xa8>
  40ca08:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
  40ca0c:	42b9      	cmp	r1, r7
  40ca0e:	bf28      	it	cs
  40ca10:	4639      	movcs	r1, r7
  40ca12:	464a      	mov	r2, r9
  40ca14:	fb91 f1f3 	sdiv	r1, r1, r3
  40ca18:	9800      	ldr	r0, [sp, #0]
  40ca1a:	6a66      	ldr	r6, [r4, #36]	; 0x24
  40ca1c:	fb03 f301 	mul.w	r3, r3, r1
  40ca20:	69e1      	ldr	r1, [r4, #28]
  40ca22:	47b0      	blx	r6
  40ca24:	f1b0 0a00 	subs.w	sl, r0, #0
  40ca28:	f73f af1b 	bgt.w	40c862 <__sfvwrite_r+0xbe>
  40ca2c:	e738      	b.n	40c8a0 <__sfvwrite_r+0xfc>
  40ca2e:	461a      	mov	r2, r3
  40ca30:	4629      	mov	r1, r5
  40ca32:	9301      	str	r3, [sp, #4]
  40ca34:	f7fc f8c2 	bl	408bbc <memmove>
  40ca38:	6822      	ldr	r2, [r4, #0]
  40ca3a:	9b01      	ldr	r3, [sp, #4]
  40ca3c:	9800      	ldr	r0, [sp, #0]
  40ca3e:	441a      	add	r2, r3
  40ca40:	6022      	str	r2, [r4, #0]
  40ca42:	4621      	mov	r1, r4
  40ca44:	f7ff fc4a 	bl	40c2dc <_fflush_r>
  40ca48:	9b01      	ldr	r3, [sp, #4]
  40ca4a:	2800      	cmp	r0, #0
  40ca4c:	f47f af28 	bne.w	40c8a0 <__sfvwrite_r+0xfc>
  40ca50:	461f      	mov	r7, r3
  40ca52:	e750      	b.n	40c8f6 <__sfvwrite_r+0x152>
  40ca54:	9800      	ldr	r0, [sp, #0]
  40ca56:	f000 fc45 	bl	40d2e4 <_realloc_r>
  40ca5a:	4683      	mov	fp, r0
  40ca5c:	2800      	cmp	r0, #0
  40ca5e:	d1c5      	bne.n	40c9ec <__sfvwrite_r+0x248>
  40ca60:	9d00      	ldr	r5, [sp, #0]
  40ca62:	6921      	ldr	r1, [r4, #16]
  40ca64:	4628      	mov	r0, r5
  40ca66:	f7ff fdb7 	bl	40c5d8 <_free_r>
  40ca6a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40ca6e:	220c      	movs	r2, #12
  40ca70:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  40ca74:	602a      	str	r2, [r5, #0]
  40ca76:	e715      	b.n	40c8a4 <__sfvwrite_r+0x100>
  40ca78:	f106 0901 	add.w	r9, r6, #1
  40ca7c:	e722      	b.n	40c8c4 <__sfvwrite_r+0x120>
  40ca7e:	f04f 30ff 	mov.w	r0, #4294967295
  40ca82:	e6bf      	b.n	40c804 <__sfvwrite_r+0x60>
  40ca84:	9a00      	ldr	r2, [sp, #0]
  40ca86:	230c      	movs	r3, #12
  40ca88:	6013      	str	r3, [r2, #0]
  40ca8a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40ca8e:	e709      	b.n	40c8a4 <__sfvwrite_r+0x100>
  40ca90:	7ffffc00 	.word	0x7ffffc00

0040ca94 <_fwalk_reent>:
  40ca94:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40ca98:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  40ca9c:	d01f      	beq.n	40cade <_fwalk_reent+0x4a>
  40ca9e:	4688      	mov	r8, r1
  40caa0:	4606      	mov	r6, r0
  40caa2:	f04f 0900 	mov.w	r9, #0
  40caa6:	687d      	ldr	r5, [r7, #4]
  40caa8:	68bc      	ldr	r4, [r7, #8]
  40caaa:	3d01      	subs	r5, #1
  40caac:	d411      	bmi.n	40cad2 <_fwalk_reent+0x3e>
  40caae:	89a3      	ldrh	r3, [r4, #12]
  40cab0:	2b01      	cmp	r3, #1
  40cab2:	f105 35ff 	add.w	r5, r5, #4294967295
  40cab6:	d908      	bls.n	40caca <_fwalk_reent+0x36>
  40cab8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  40cabc:	3301      	adds	r3, #1
  40cabe:	4621      	mov	r1, r4
  40cac0:	4630      	mov	r0, r6
  40cac2:	d002      	beq.n	40caca <_fwalk_reent+0x36>
  40cac4:	47c0      	blx	r8
  40cac6:	ea49 0900 	orr.w	r9, r9, r0
  40caca:	1c6b      	adds	r3, r5, #1
  40cacc:	f104 0468 	add.w	r4, r4, #104	; 0x68
  40cad0:	d1ed      	bne.n	40caae <_fwalk_reent+0x1a>
  40cad2:	683f      	ldr	r7, [r7, #0]
  40cad4:	2f00      	cmp	r7, #0
  40cad6:	d1e6      	bne.n	40caa6 <_fwalk_reent+0x12>
  40cad8:	4648      	mov	r0, r9
  40cada:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40cade:	46b9      	mov	r9, r7
  40cae0:	4648      	mov	r0, r9
  40cae2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40cae6:	bf00      	nop

0040cae8 <__locale_mb_cur_max>:
  40cae8:	4b04      	ldr	r3, [pc, #16]	; (40cafc <__locale_mb_cur_max+0x14>)
  40caea:	4a05      	ldr	r2, [pc, #20]	; (40cb00 <__locale_mb_cur_max+0x18>)
  40caec:	681b      	ldr	r3, [r3, #0]
  40caee:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  40caf0:	2b00      	cmp	r3, #0
  40caf2:	bf08      	it	eq
  40caf4:	4613      	moveq	r3, r2
  40caf6:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
  40cafa:	4770      	bx	lr
  40cafc:	20400028 	.word	0x20400028
  40cb00:	2040086c 	.word	0x2040086c

0040cb04 <_localeconv_r>:
  40cb04:	4a04      	ldr	r2, [pc, #16]	; (40cb18 <_localeconv_r+0x14>)
  40cb06:	4b05      	ldr	r3, [pc, #20]	; (40cb1c <_localeconv_r+0x18>)
  40cb08:	6812      	ldr	r2, [r2, #0]
  40cb0a:	6b50      	ldr	r0, [r2, #52]	; 0x34
  40cb0c:	2800      	cmp	r0, #0
  40cb0e:	bf08      	it	eq
  40cb10:	4618      	moveq	r0, r3
  40cb12:	30f0      	adds	r0, #240	; 0xf0
  40cb14:	4770      	bx	lr
  40cb16:	bf00      	nop
  40cb18:	20400028 	.word	0x20400028
  40cb1c:	2040086c 	.word	0x2040086c

0040cb20 <__retarget_lock_init_recursive>:
  40cb20:	4770      	bx	lr
  40cb22:	bf00      	nop

0040cb24 <__retarget_lock_close_recursive>:
  40cb24:	4770      	bx	lr
  40cb26:	bf00      	nop

0040cb28 <__retarget_lock_acquire_recursive>:
  40cb28:	4770      	bx	lr
  40cb2a:	bf00      	nop

0040cb2c <__retarget_lock_release_recursive>:
  40cb2c:	4770      	bx	lr
  40cb2e:	bf00      	nop

0040cb30 <__swhatbuf_r>:
  40cb30:	b570      	push	{r4, r5, r6, lr}
  40cb32:	460c      	mov	r4, r1
  40cb34:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40cb38:	2900      	cmp	r1, #0
  40cb3a:	b090      	sub	sp, #64	; 0x40
  40cb3c:	4615      	mov	r5, r2
  40cb3e:	461e      	mov	r6, r3
  40cb40:	db14      	blt.n	40cb6c <__swhatbuf_r+0x3c>
  40cb42:	aa01      	add	r2, sp, #4
  40cb44:	f001 f824 	bl	40db90 <_fstat_r>
  40cb48:	2800      	cmp	r0, #0
  40cb4a:	db0f      	blt.n	40cb6c <__swhatbuf_r+0x3c>
  40cb4c:	9a02      	ldr	r2, [sp, #8]
  40cb4e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  40cb52:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  40cb56:	fab2 f282 	clz	r2, r2
  40cb5a:	0952      	lsrs	r2, r2, #5
  40cb5c:	f44f 6380 	mov.w	r3, #1024	; 0x400
  40cb60:	f44f 6000 	mov.w	r0, #2048	; 0x800
  40cb64:	6032      	str	r2, [r6, #0]
  40cb66:	602b      	str	r3, [r5, #0]
  40cb68:	b010      	add	sp, #64	; 0x40
  40cb6a:	bd70      	pop	{r4, r5, r6, pc}
  40cb6c:	89a2      	ldrh	r2, [r4, #12]
  40cb6e:	2300      	movs	r3, #0
  40cb70:	f012 0080 	ands.w	r0, r2, #128	; 0x80
  40cb74:	6033      	str	r3, [r6, #0]
  40cb76:	d004      	beq.n	40cb82 <__swhatbuf_r+0x52>
  40cb78:	2240      	movs	r2, #64	; 0x40
  40cb7a:	4618      	mov	r0, r3
  40cb7c:	602a      	str	r2, [r5, #0]
  40cb7e:	b010      	add	sp, #64	; 0x40
  40cb80:	bd70      	pop	{r4, r5, r6, pc}
  40cb82:	f44f 6380 	mov.w	r3, #1024	; 0x400
  40cb86:	602b      	str	r3, [r5, #0]
  40cb88:	b010      	add	sp, #64	; 0x40
  40cb8a:	bd70      	pop	{r4, r5, r6, pc}

0040cb8c <__smakebuf_r>:
  40cb8c:	898a      	ldrh	r2, [r1, #12]
  40cb8e:	0792      	lsls	r2, r2, #30
  40cb90:	460b      	mov	r3, r1
  40cb92:	d506      	bpl.n	40cba2 <__smakebuf_r+0x16>
  40cb94:	f101 0243 	add.w	r2, r1, #67	; 0x43
  40cb98:	2101      	movs	r1, #1
  40cb9a:	601a      	str	r2, [r3, #0]
  40cb9c:	611a      	str	r2, [r3, #16]
  40cb9e:	6159      	str	r1, [r3, #20]
  40cba0:	4770      	bx	lr
  40cba2:	b5f0      	push	{r4, r5, r6, r7, lr}
  40cba4:	b083      	sub	sp, #12
  40cba6:	ab01      	add	r3, sp, #4
  40cba8:	466a      	mov	r2, sp
  40cbaa:	460c      	mov	r4, r1
  40cbac:	4606      	mov	r6, r0
  40cbae:	f7ff ffbf 	bl	40cb30 <__swhatbuf_r>
  40cbb2:	9900      	ldr	r1, [sp, #0]
  40cbb4:	4605      	mov	r5, r0
  40cbb6:	4630      	mov	r0, r6
  40cbb8:	f7fb fcb6 	bl	408528 <_malloc_r>
  40cbbc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40cbc0:	b1d8      	cbz	r0, 40cbfa <__smakebuf_r+0x6e>
  40cbc2:	9a01      	ldr	r2, [sp, #4]
  40cbc4:	4f15      	ldr	r7, [pc, #84]	; (40cc1c <__smakebuf_r+0x90>)
  40cbc6:	9900      	ldr	r1, [sp, #0]
  40cbc8:	63f7      	str	r7, [r6, #60]	; 0x3c
  40cbca:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40cbce:	81a3      	strh	r3, [r4, #12]
  40cbd0:	6020      	str	r0, [r4, #0]
  40cbd2:	6120      	str	r0, [r4, #16]
  40cbd4:	6161      	str	r1, [r4, #20]
  40cbd6:	b91a      	cbnz	r2, 40cbe0 <__smakebuf_r+0x54>
  40cbd8:	432b      	orrs	r3, r5
  40cbda:	81a3      	strh	r3, [r4, #12]
  40cbdc:	b003      	add	sp, #12
  40cbde:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40cbe0:	4630      	mov	r0, r6
  40cbe2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  40cbe6:	f000 ffe7 	bl	40dbb8 <_isatty_r>
  40cbea:	b1a0      	cbz	r0, 40cc16 <__smakebuf_r+0x8a>
  40cbec:	89a3      	ldrh	r3, [r4, #12]
  40cbee:	f023 0303 	bic.w	r3, r3, #3
  40cbf2:	f043 0301 	orr.w	r3, r3, #1
  40cbf6:	b21b      	sxth	r3, r3
  40cbf8:	e7ee      	b.n	40cbd8 <__smakebuf_r+0x4c>
  40cbfa:	059a      	lsls	r2, r3, #22
  40cbfc:	d4ee      	bmi.n	40cbdc <__smakebuf_r+0x50>
  40cbfe:	f023 0303 	bic.w	r3, r3, #3
  40cc02:	f104 0243 	add.w	r2, r4, #67	; 0x43
  40cc06:	f043 0302 	orr.w	r3, r3, #2
  40cc0a:	2101      	movs	r1, #1
  40cc0c:	81a3      	strh	r3, [r4, #12]
  40cc0e:	6022      	str	r2, [r4, #0]
  40cc10:	6122      	str	r2, [r4, #16]
  40cc12:	6161      	str	r1, [r4, #20]
  40cc14:	e7e2      	b.n	40cbdc <__smakebuf_r+0x50>
  40cc16:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40cc1a:	e7dd      	b.n	40cbd8 <__smakebuf_r+0x4c>
  40cc1c:	0040c331 	.word	0x0040c331

0040cc20 <__ascii_mbtowc>:
  40cc20:	b082      	sub	sp, #8
  40cc22:	b149      	cbz	r1, 40cc38 <__ascii_mbtowc+0x18>
  40cc24:	b15a      	cbz	r2, 40cc3e <__ascii_mbtowc+0x1e>
  40cc26:	b16b      	cbz	r3, 40cc44 <__ascii_mbtowc+0x24>
  40cc28:	7813      	ldrb	r3, [r2, #0]
  40cc2a:	600b      	str	r3, [r1, #0]
  40cc2c:	7812      	ldrb	r2, [r2, #0]
  40cc2e:	1c10      	adds	r0, r2, #0
  40cc30:	bf18      	it	ne
  40cc32:	2001      	movne	r0, #1
  40cc34:	b002      	add	sp, #8
  40cc36:	4770      	bx	lr
  40cc38:	a901      	add	r1, sp, #4
  40cc3a:	2a00      	cmp	r2, #0
  40cc3c:	d1f3      	bne.n	40cc26 <__ascii_mbtowc+0x6>
  40cc3e:	4610      	mov	r0, r2
  40cc40:	b002      	add	sp, #8
  40cc42:	4770      	bx	lr
  40cc44:	f06f 0001 	mvn.w	r0, #1
  40cc48:	e7f4      	b.n	40cc34 <__ascii_mbtowc+0x14>
  40cc4a:	bf00      	nop
  40cc4c:	0000      	movs	r0, r0
	...

0040cc50 <memchr>:
  40cc50:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  40cc54:	2a10      	cmp	r2, #16
  40cc56:	db2b      	blt.n	40ccb0 <memchr+0x60>
  40cc58:	f010 0f07 	tst.w	r0, #7
  40cc5c:	d008      	beq.n	40cc70 <memchr+0x20>
  40cc5e:	f810 3b01 	ldrb.w	r3, [r0], #1
  40cc62:	3a01      	subs	r2, #1
  40cc64:	428b      	cmp	r3, r1
  40cc66:	d02d      	beq.n	40ccc4 <memchr+0x74>
  40cc68:	f010 0f07 	tst.w	r0, #7
  40cc6c:	b342      	cbz	r2, 40ccc0 <memchr+0x70>
  40cc6e:	d1f6      	bne.n	40cc5e <memchr+0xe>
  40cc70:	b4f0      	push	{r4, r5, r6, r7}
  40cc72:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  40cc76:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40cc7a:	f022 0407 	bic.w	r4, r2, #7
  40cc7e:	f07f 0700 	mvns.w	r7, #0
  40cc82:	2300      	movs	r3, #0
  40cc84:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  40cc88:	3c08      	subs	r4, #8
  40cc8a:	ea85 0501 	eor.w	r5, r5, r1
  40cc8e:	ea86 0601 	eor.w	r6, r6, r1
  40cc92:	fa85 f547 	uadd8	r5, r5, r7
  40cc96:	faa3 f587 	sel	r5, r3, r7
  40cc9a:	fa86 f647 	uadd8	r6, r6, r7
  40cc9e:	faa5 f687 	sel	r6, r5, r7
  40cca2:	b98e      	cbnz	r6, 40ccc8 <memchr+0x78>
  40cca4:	d1ee      	bne.n	40cc84 <memchr+0x34>
  40cca6:	bcf0      	pop	{r4, r5, r6, r7}
  40cca8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  40ccac:	f002 0207 	and.w	r2, r2, #7
  40ccb0:	b132      	cbz	r2, 40ccc0 <memchr+0x70>
  40ccb2:	f810 3b01 	ldrb.w	r3, [r0], #1
  40ccb6:	3a01      	subs	r2, #1
  40ccb8:	ea83 0301 	eor.w	r3, r3, r1
  40ccbc:	b113      	cbz	r3, 40ccc4 <memchr+0x74>
  40ccbe:	d1f8      	bne.n	40ccb2 <memchr+0x62>
  40ccc0:	2000      	movs	r0, #0
  40ccc2:	4770      	bx	lr
  40ccc4:	3801      	subs	r0, #1
  40ccc6:	4770      	bx	lr
  40ccc8:	2d00      	cmp	r5, #0
  40ccca:	bf06      	itte	eq
  40cccc:	4635      	moveq	r5, r6
  40ccce:	3803      	subeq	r0, #3
  40ccd0:	3807      	subne	r0, #7
  40ccd2:	f015 0f01 	tst.w	r5, #1
  40ccd6:	d107      	bne.n	40cce8 <memchr+0x98>
  40ccd8:	3001      	adds	r0, #1
  40ccda:	f415 7f80 	tst.w	r5, #256	; 0x100
  40ccde:	bf02      	ittt	eq
  40cce0:	3001      	addeq	r0, #1
  40cce2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  40cce6:	3001      	addeq	r0, #1
  40cce8:	bcf0      	pop	{r4, r5, r6, r7}
  40ccea:	3801      	subs	r0, #1
  40ccec:	4770      	bx	lr
  40ccee:	bf00      	nop

0040ccf0 <_Balloc>:
  40ccf0:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40ccf2:	b570      	push	{r4, r5, r6, lr}
  40ccf4:	4605      	mov	r5, r0
  40ccf6:	460c      	mov	r4, r1
  40ccf8:	b14b      	cbz	r3, 40cd0e <_Balloc+0x1e>
  40ccfa:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  40ccfe:	b180      	cbz	r0, 40cd22 <_Balloc+0x32>
  40cd00:	6802      	ldr	r2, [r0, #0]
  40cd02:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  40cd06:	2300      	movs	r3, #0
  40cd08:	6103      	str	r3, [r0, #16]
  40cd0a:	60c3      	str	r3, [r0, #12]
  40cd0c:	bd70      	pop	{r4, r5, r6, pc}
  40cd0e:	2221      	movs	r2, #33	; 0x21
  40cd10:	2104      	movs	r1, #4
  40cd12:	f7fb fb8d 	bl	408430 <_calloc_r>
  40cd16:	64e8      	str	r0, [r5, #76]	; 0x4c
  40cd18:	4603      	mov	r3, r0
  40cd1a:	2800      	cmp	r0, #0
  40cd1c:	d1ed      	bne.n	40ccfa <_Balloc+0xa>
  40cd1e:	2000      	movs	r0, #0
  40cd20:	bd70      	pop	{r4, r5, r6, pc}
  40cd22:	2101      	movs	r1, #1
  40cd24:	fa01 f604 	lsl.w	r6, r1, r4
  40cd28:	1d72      	adds	r2, r6, #5
  40cd2a:	4628      	mov	r0, r5
  40cd2c:	0092      	lsls	r2, r2, #2
  40cd2e:	f7fb fb7f 	bl	408430 <_calloc_r>
  40cd32:	2800      	cmp	r0, #0
  40cd34:	d0f3      	beq.n	40cd1e <_Balloc+0x2e>
  40cd36:	6044      	str	r4, [r0, #4]
  40cd38:	6086      	str	r6, [r0, #8]
  40cd3a:	e7e4      	b.n	40cd06 <_Balloc+0x16>

0040cd3c <_Bfree>:
  40cd3c:	b131      	cbz	r1, 40cd4c <_Bfree+0x10>
  40cd3e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40cd40:	684a      	ldr	r2, [r1, #4]
  40cd42:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  40cd46:	6008      	str	r0, [r1, #0]
  40cd48:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  40cd4c:	4770      	bx	lr
  40cd4e:	bf00      	nop

0040cd50 <__multadd>:
  40cd50:	b5f0      	push	{r4, r5, r6, r7, lr}
  40cd52:	690c      	ldr	r4, [r1, #16]
  40cd54:	b083      	sub	sp, #12
  40cd56:	460d      	mov	r5, r1
  40cd58:	4606      	mov	r6, r0
  40cd5a:	f101 0e14 	add.w	lr, r1, #20
  40cd5e:	2700      	movs	r7, #0
  40cd60:	f8de 0000 	ldr.w	r0, [lr]
  40cd64:	b281      	uxth	r1, r0
  40cd66:	fb02 3301 	mla	r3, r2, r1, r3
  40cd6a:	0c01      	lsrs	r1, r0, #16
  40cd6c:	0c18      	lsrs	r0, r3, #16
  40cd6e:	fb02 0101 	mla	r1, r2, r1, r0
  40cd72:	b29b      	uxth	r3, r3
  40cd74:	3701      	adds	r7, #1
  40cd76:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  40cd7a:	42bc      	cmp	r4, r7
  40cd7c:	f84e 3b04 	str.w	r3, [lr], #4
  40cd80:	ea4f 4311 	mov.w	r3, r1, lsr #16
  40cd84:	dcec      	bgt.n	40cd60 <__multadd+0x10>
  40cd86:	b13b      	cbz	r3, 40cd98 <__multadd+0x48>
  40cd88:	68aa      	ldr	r2, [r5, #8]
  40cd8a:	4294      	cmp	r4, r2
  40cd8c:	da07      	bge.n	40cd9e <__multadd+0x4e>
  40cd8e:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  40cd92:	3401      	adds	r4, #1
  40cd94:	6153      	str	r3, [r2, #20]
  40cd96:	612c      	str	r4, [r5, #16]
  40cd98:	4628      	mov	r0, r5
  40cd9a:	b003      	add	sp, #12
  40cd9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40cd9e:	6869      	ldr	r1, [r5, #4]
  40cda0:	9301      	str	r3, [sp, #4]
  40cda2:	3101      	adds	r1, #1
  40cda4:	4630      	mov	r0, r6
  40cda6:	f7ff ffa3 	bl	40ccf0 <_Balloc>
  40cdaa:	692a      	ldr	r2, [r5, #16]
  40cdac:	3202      	adds	r2, #2
  40cdae:	f105 010c 	add.w	r1, r5, #12
  40cdb2:	4607      	mov	r7, r0
  40cdb4:	0092      	lsls	r2, r2, #2
  40cdb6:	300c      	adds	r0, #12
  40cdb8:	f7fb fe66 	bl	408a88 <memcpy>
  40cdbc:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  40cdbe:	6869      	ldr	r1, [r5, #4]
  40cdc0:	9b01      	ldr	r3, [sp, #4]
  40cdc2:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  40cdc6:	6028      	str	r0, [r5, #0]
  40cdc8:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  40cdcc:	463d      	mov	r5, r7
  40cdce:	e7de      	b.n	40cd8e <__multadd+0x3e>

0040cdd0 <__hi0bits>:
  40cdd0:	0c02      	lsrs	r2, r0, #16
  40cdd2:	0412      	lsls	r2, r2, #16
  40cdd4:	4603      	mov	r3, r0
  40cdd6:	b9b2      	cbnz	r2, 40ce06 <__hi0bits+0x36>
  40cdd8:	0403      	lsls	r3, r0, #16
  40cdda:	2010      	movs	r0, #16
  40cddc:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  40cde0:	bf04      	itt	eq
  40cde2:	021b      	lsleq	r3, r3, #8
  40cde4:	3008      	addeq	r0, #8
  40cde6:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  40cdea:	bf04      	itt	eq
  40cdec:	011b      	lsleq	r3, r3, #4
  40cdee:	3004      	addeq	r0, #4
  40cdf0:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  40cdf4:	bf04      	itt	eq
  40cdf6:	009b      	lsleq	r3, r3, #2
  40cdf8:	3002      	addeq	r0, #2
  40cdfa:	2b00      	cmp	r3, #0
  40cdfc:	db02      	blt.n	40ce04 <__hi0bits+0x34>
  40cdfe:	005b      	lsls	r3, r3, #1
  40ce00:	d403      	bmi.n	40ce0a <__hi0bits+0x3a>
  40ce02:	2020      	movs	r0, #32
  40ce04:	4770      	bx	lr
  40ce06:	2000      	movs	r0, #0
  40ce08:	e7e8      	b.n	40cddc <__hi0bits+0xc>
  40ce0a:	3001      	adds	r0, #1
  40ce0c:	4770      	bx	lr
  40ce0e:	bf00      	nop

0040ce10 <__lo0bits>:
  40ce10:	6803      	ldr	r3, [r0, #0]
  40ce12:	f013 0207 	ands.w	r2, r3, #7
  40ce16:	4601      	mov	r1, r0
  40ce18:	d007      	beq.n	40ce2a <__lo0bits+0x1a>
  40ce1a:	07da      	lsls	r2, r3, #31
  40ce1c:	d421      	bmi.n	40ce62 <__lo0bits+0x52>
  40ce1e:	0798      	lsls	r0, r3, #30
  40ce20:	d421      	bmi.n	40ce66 <__lo0bits+0x56>
  40ce22:	089b      	lsrs	r3, r3, #2
  40ce24:	600b      	str	r3, [r1, #0]
  40ce26:	2002      	movs	r0, #2
  40ce28:	4770      	bx	lr
  40ce2a:	b298      	uxth	r0, r3
  40ce2c:	b198      	cbz	r0, 40ce56 <__lo0bits+0x46>
  40ce2e:	4610      	mov	r0, r2
  40ce30:	f013 0fff 	tst.w	r3, #255	; 0xff
  40ce34:	bf04      	itt	eq
  40ce36:	0a1b      	lsreq	r3, r3, #8
  40ce38:	3008      	addeq	r0, #8
  40ce3a:	071a      	lsls	r2, r3, #28
  40ce3c:	bf04      	itt	eq
  40ce3e:	091b      	lsreq	r3, r3, #4
  40ce40:	3004      	addeq	r0, #4
  40ce42:	079a      	lsls	r2, r3, #30
  40ce44:	bf04      	itt	eq
  40ce46:	089b      	lsreq	r3, r3, #2
  40ce48:	3002      	addeq	r0, #2
  40ce4a:	07da      	lsls	r2, r3, #31
  40ce4c:	d407      	bmi.n	40ce5e <__lo0bits+0x4e>
  40ce4e:	085b      	lsrs	r3, r3, #1
  40ce50:	d104      	bne.n	40ce5c <__lo0bits+0x4c>
  40ce52:	2020      	movs	r0, #32
  40ce54:	4770      	bx	lr
  40ce56:	0c1b      	lsrs	r3, r3, #16
  40ce58:	2010      	movs	r0, #16
  40ce5a:	e7e9      	b.n	40ce30 <__lo0bits+0x20>
  40ce5c:	3001      	adds	r0, #1
  40ce5e:	600b      	str	r3, [r1, #0]
  40ce60:	4770      	bx	lr
  40ce62:	2000      	movs	r0, #0
  40ce64:	4770      	bx	lr
  40ce66:	085b      	lsrs	r3, r3, #1
  40ce68:	600b      	str	r3, [r1, #0]
  40ce6a:	2001      	movs	r0, #1
  40ce6c:	4770      	bx	lr
  40ce6e:	bf00      	nop

0040ce70 <__i2b>:
  40ce70:	b510      	push	{r4, lr}
  40ce72:	460c      	mov	r4, r1
  40ce74:	2101      	movs	r1, #1
  40ce76:	f7ff ff3b 	bl	40ccf0 <_Balloc>
  40ce7a:	2201      	movs	r2, #1
  40ce7c:	6144      	str	r4, [r0, #20]
  40ce7e:	6102      	str	r2, [r0, #16]
  40ce80:	bd10      	pop	{r4, pc}
  40ce82:	bf00      	nop

0040ce84 <__multiply>:
  40ce84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40ce88:	690c      	ldr	r4, [r1, #16]
  40ce8a:	6915      	ldr	r5, [r2, #16]
  40ce8c:	42ac      	cmp	r4, r5
  40ce8e:	b083      	sub	sp, #12
  40ce90:	468b      	mov	fp, r1
  40ce92:	4616      	mov	r6, r2
  40ce94:	da04      	bge.n	40cea0 <__multiply+0x1c>
  40ce96:	4622      	mov	r2, r4
  40ce98:	46b3      	mov	fp, r6
  40ce9a:	462c      	mov	r4, r5
  40ce9c:	460e      	mov	r6, r1
  40ce9e:	4615      	mov	r5, r2
  40cea0:	f8db 3008 	ldr.w	r3, [fp, #8]
  40cea4:	f8db 1004 	ldr.w	r1, [fp, #4]
  40cea8:	eb04 0805 	add.w	r8, r4, r5
  40ceac:	4598      	cmp	r8, r3
  40ceae:	bfc8      	it	gt
  40ceb0:	3101      	addgt	r1, #1
  40ceb2:	f7ff ff1d 	bl	40ccf0 <_Balloc>
  40ceb6:	f100 0914 	add.w	r9, r0, #20
  40ceba:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  40cebe:	45d1      	cmp	r9, sl
  40cec0:	9000      	str	r0, [sp, #0]
  40cec2:	d205      	bcs.n	40ced0 <__multiply+0x4c>
  40cec4:	464b      	mov	r3, r9
  40cec6:	2100      	movs	r1, #0
  40cec8:	f843 1b04 	str.w	r1, [r3], #4
  40cecc:	459a      	cmp	sl, r3
  40cece:	d8fb      	bhi.n	40cec8 <__multiply+0x44>
  40ced0:	f106 0c14 	add.w	ip, r6, #20
  40ced4:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  40ced8:	f10b 0b14 	add.w	fp, fp, #20
  40cedc:	459c      	cmp	ip, r3
  40cede:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  40cee2:	d24c      	bcs.n	40cf7e <__multiply+0xfa>
  40cee4:	f8cd a004 	str.w	sl, [sp, #4]
  40cee8:	469a      	mov	sl, r3
  40ceea:	f8dc 5000 	ldr.w	r5, [ip]
  40ceee:	b2af      	uxth	r7, r5
  40cef0:	b1ef      	cbz	r7, 40cf2e <__multiply+0xaa>
  40cef2:	2100      	movs	r1, #0
  40cef4:	464d      	mov	r5, r9
  40cef6:	465e      	mov	r6, fp
  40cef8:	460c      	mov	r4, r1
  40cefa:	f856 2b04 	ldr.w	r2, [r6], #4
  40cefe:	6828      	ldr	r0, [r5, #0]
  40cf00:	b293      	uxth	r3, r2
  40cf02:	b281      	uxth	r1, r0
  40cf04:	fb07 1303 	mla	r3, r7, r3, r1
  40cf08:	0c12      	lsrs	r2, r2, #16
  40cf0a:	0c01      	lsrs	r1, r0, #16
  40cf0c:	4423      	add	r3, r4
  40cf0e:	fb07 1102 	mla	r1, r7, r2, r1
  40cf12:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  40cf16:	b29b      	uxth	r3, r3
  40cf18:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  40cf1c:	45b6      	cmp	lr, r6
  40cf1e:	f845 3b04 	str.w	r3, [r5], #4
  40cf22:	ea4f 4411 	mov.w	r4, r1, lsr #16
  40cf26:	d8e8      	bhi.n	40cefa <__multiply+0x76>
  40cf28:	602c      	str	r4, [r5, #0]
  40cf2a:	f8dc 5000 	ldr.w	r5, [ip]
  40cf2e:	0c2d      	lsrs	r5, r5, #16
  40cf30:	d01d      	beq.n	40cf6e <__multiply+0xea>
  40cf32:	f8d9 3000 	ldr.w	r3, [r9]
  40cf36:	4648      	mov	r0, r9
  40cf38:	461c      	mov	r4, r3
  40cf3a:	4659      	mov	r1, fp
  40cf3c:	2200      	movs	r2, #0
  40cf3e:	880e      	ldrh	r6, [r1, #0]
  40cf40:	0c24      	lsrs	r4, r4, #16
  40cf42:	fb05 4406 	mla	r4, r5, r6, r4
  40cf46:	4422      	add	r2, r4
  40cf48:	b29b      	uxth	r3, r3
  40cf4a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  40cf4e:	f840 3b04 	str.w	r3, [r0], #4
  40cf52:	f851 3b04 	ldr.w	r3, [r1], #4
  40cf56:	6804      	ldr	r4, [r0, #0]
  40cf58:	0c1b      	lsrs	r3, r3, #16
  40cf5a:	b2a6      	uxth	r6, r4
  40cf5c:	fb05 6303 	mla	r3, r5, r3, r6
  40cf60:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  40cf64:	458e      	cmp	lr, r1
  40cf66:	ea4f 4213 	mov.w	r2, r3, lsr #16
  40cf6a:	d8e8      	bhi.n	40cf3e <__multiply+0xba>
  40cf6c:	6003      	str	r3, [r0, #0]
  40cf6e:	f10c 0c04 	add.w	ip, ip, #4
  40cf72:	45e2      	cmp	sl, ip
  40cf74:	f109 0904 	add.w	r9, r9, #4
  40cf78:	d8b7      	bhi.n	40ceea <__multiply+0x66>
  40cf7a:	f8dd a004 	ldr.w	sl, [sp, #4]
  40cf7e:	f1b8 0f00 	cmp.w	r8, #0
  40cf82:	dd0b      	ble.n	40cf9c <__multiply+0x118>
  40cf84:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  40cf88:	f1aa 0a04 	sub.w	sl, sl, #4
  40cf8c:	b11b      	cbz	r3, 40cf96 <__multiply+0x112>
  40cf8e:	e005      	b.n	40cf9c <__multiply+0x118>
  40cf90:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  40cf94:	b913      	cbnz	r3, 40cf9c <__multiply+0x118>
  40cf96:	f1b8 0801 	subs.w	r8, r8, #1
  40cf9a:	d1f9      	bne.n	40cf90 <__multiply+0x10c>
  40cf9c:	9800      	ldr	r0, [sp, #0]
  40cf9e:	f8c0 8010 	str.w	r8, [r0, #16]
  40cfa2:	b003      	add	sp, #12
  40cfa4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0040cfa8 <__pow5mult>:
  40cfa8:	f012 0303 	ands.w	r3, r2, #3
  40cfac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40cfb0:	4614      	mov	r4, r2
  40cfb2:	4607      	mov	r7, r0
  40cfb4:	d12e      	bne.n	40d014 <__pow5mult+0x6c>
  40cfb6:	460d      	mov	r5, r1
  40cfb8:	10a4      	asrs	r4, r4, #2
  40cfba:	d01c      	beq.n	40cff6 <__pow5mult+0x4e>
  40cfbc:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  40cfbe:	b396      	cbz	r6, 40d026 <__pow5mult+0x7e>
  40cfc0:	07e3      	lsls	r3, r4, #31
  40cfc2:	f04f 0800 	mov.w	r8, #0
  40cfc6:	d406      	bmi.n	40cfd6 <__pow5mult+0x2e>
  40cfc8:	1064      	asrs	r4, r4, #1
  40cfca:	d014      	beq.n	40cff6 <__pow5mult+0x4e>
  40cfcc:	6830      	ldr	r0, [r6, #0]
  40cfce:	b1a8      	cbz	r0, 40cffc <__pow5mult+0x54>
  40cfd0:	4606      	mov	r6, r0
  40cfd2:	07e3      	lsls	r3, r4, #31
  40cfd4:	d5f8      	bpl.n	40cfc8 <__pow5mult+0x20>
  40cfd6:	4632      	mov	r2, r6
  40cfd8:	4629      	mov	r1, r5
  40cfda:	4638      	mov	r0, r7
  40cfdc:	f7ff ff52 	bl	40ce84 <__multiply>
  40cfe0:	b1b5      	cbz	r5, 40d010 <__pow5mult+0x68>
  40cfe2:	686a      	ldr	r2, [r5, #4]
  40cfe4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  40cfe6:	1064      	asrs	r4, r4, #1
  40cfe8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  40cfec:	6029      	str	r1, [r5, #0]
  40cfee:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  40cff2:	4605      	mov	r5, r0
  40cff4:	d1ea      	bne.n	40cfcc <__pow5mult+0x24>
  40cff6:	4628      	mov	r0, r5
  40cff8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40cffc:	4632      	mov	r2, r6
  40cffe:	4631      	mov	r1, r6
  40d000:	4638      	mov	r0, r7
  40d002:	f7ff ff3f 	bl	40ce84 <__multiply>
  40d006:	6030      	str	r0, [r6, #0]
  40d008:	f8c0 8000 	str.w	r8, [r0]
  40d00c:	4606      	mov	r6, r0
  40d00e:	e7e0      	b.n	40cfd2 <__pow5mult+0x2a>
  40d010:	4605      	mov	r5, r0
  40d012:	e7d9      	b.n	40cfc8 <__pow5mult+0x20>
  40d014:	1e5a      	subs	r2, r3, #1
  40d016:	4d0b      	ldr	r5, [pc, #44]	; (40d044 <__pow5mult+0x9c>)
  40d018:	2300      	movs	r3, #0
  40d01a:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  40d01e:	f7ff fe97 	bl	40cd50 <__multadd>
  40d022:	4605      	mov	r5, r0
  40d024:	e7c8      	b.n	40cfb8 <__pow5mult+0x10>
  40d026:	2101      	movs	r1, #1
  40d028:	4638      	mov	r0, r7
  40d02a:	f7ff fe61 	bl	40ccf0 <_Balloc>
  40d02e:	f240 2171 	movw	r1, #625	; 0x271
  40d032:	2201      	movs	r2, #1
  40d034:	2300      	movs	r3, #0
  40d036:	6141      	str	r1, [r0, #20]
  40d038:	6102      	str	r2, [r0, #16]
  40d03a:	4606      	mov	r6, r0
  40d03c:	64b8      	str	r0, [r7, #72]	; 0x48
  40d03e:	6003      	str	r3, [r0, #0]
  40d040:	e7be      	b.n	40cfc0 <__pow5mult+0x18>
  40d042:	bf00      	nop
  40d044:	0040f7d0 	.word	0x0040f7d0

0040d048 <__lshift>:
  40d048:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40d04c:	4691      	mov	r9, r2
  40d04e:	690a      	ldr	r2, [r1, #16]
  40d050:	688b      	ldr	r3, [r1, #8]
  40d052:	ea4f 1469 	mov.w	r4, r9, asr #5
  40d056:	eb04 0802 	add.w	r8, r4, r2
  40d05a:	f108 0501 	add.w	r5, r8, #1
  40d05e:	429d      	cmp	r5, r3
  40d060:	460e      	mov	r6, r1
  40d062:	4607      	mov	r7, r0
  40d064:	6849      	ldr	r1, [r1, #4]
  40d066:	dd04      	ble.n	40d072 <__lshift+0x2a>
  40d068:	005b      	lsls	r3, r3, #1
  40d06a:	429d      	cmp	r5, r3
  40d06c:	f101 0101 	add.w	r1, r1, #1
  40d070:	dcfa      	bgt.n	40d068 <__lshift+0x20>
  40d072:	4638      	mov	r0, r7
  40d074:	f7ff fe3c 	bl	40ccf0 <_Balloc>
  40d078:	2c00      	cmp	r4, #0
  40d07a:	f100 0314 	add.w	r3, r0, #20
  40d07e:	dd06      	ble.n	40d08e <__lshift+0x46>
  40d080:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  40d084:	2100      	movs	r1, #0
  40d086:	f843 1b04 	str.w	r1, [r3], #4
  40d08a:	429a      	cmp	r2, r3
  40d08c:	d1fb      	bne.n	40d086 <__lshift+0x3e>
  40d08e:	6934      	ldr	r4, [r6, #16]
  40d090:	f106 0114 	add.w	r1, r6, #20
  40d094:	f019 091f 	ands.w	r9, r9, #31
  40d098:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  40d09c:	d01d      	beq.n	40d0da <__lshift+0x92>
  40d09e:	f1c9 0c20 	rsb	ip, r9, #32
  40d0a2:	2200      	movs	r2, #0
  40d0a4:	680c      	ldr	r4, [r1, #0]
  40d0a6:	fa04 f409 	lsl.w	r4, r4, r9
  40d0aa:	4314      	orrs	r4, r2
  40d0ac:	f843 4b04 	str.w	r4, [r3], #4
  40d0b0:	f851 2b04 	ldr.w	r2, [r1], #4
  40d0b4:	458e      	cmp	lr, r1
  40d0b6:	fa22 f20c 	lsr.w	r2, r2, ip
  40d0ba:	d8f3      	bhi.n	40d0a4 <__lshift+0x5c>
  40d0bc:	601a      	str	r2, [r3, #0]
  40d0be:	b10a      	cbz	r2, 40d0c4 <__lshift+0x7c>
  40d0c0:	f108 0502 	add.w	r5, r8, #2
  40d0c4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  40d0c6:	6872      	ldr	r2, [r6, #4]
  40d0c8:	3d01      	subs	r5, #1
  40d0ca:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  40d0ce:	6105      	str	r5, [r0, #16]
  40d0d0:	6031      	str	r1, [r6, #0]
  40d0d2:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  40d0d6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40d0da:	3b04      	subs	r3, #4
  40d0dc:	f851 2b04 	ldr.w	r2, [r1], #4
  40d0e0:	f843 2f04 	str.w	r2, [r3, #4]!
  40d0e4:	458e      	cmp	lr, r1
  40d0e6:	d8f9      	bhi.n	40d0dc <__lshift+0x94>
  40d0e8:	e7ec      	b.n	40d0c4 <__lshift+0x7c>
  40d0ea:	bf00      	nop

0040d0ec <__mcmp>:
  40d0ec:	b430      	push	{r4, r5}
  40d0ee:	690b      	ldr	r3, [r1, #16]
  40d0f0:	4605      	mov	r5, r0
  40d0f2:	6900      	ldr	r0, [r0, #16]
  40d0f4:	1ac0      	subs	r0, r0, r3
  40d0f6:	d10f      	bne.n	40d118 <__mcmp+0x2c>
  40d0f8:	009b      	lsls	r3, r3, #2
  40d0fa:	3514      	adds	r5, #20
  40d0fc:	3114      	adds	r1, #20
  40d0fe:	4419      	add	r1, r3
  40d100:	442b      	add	r3, r5
  40d102:	e001      	b.n	40d108 <__mcmp+0x1c>
  40d104:	429d      	cmp	r5, r3
  40d106:	d207      	bcs.n	40d118 <__mcmp+0x2c>
  40d108:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  40d10c:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  40d110:	4294      	cmp	r4, r2
  40d112:	d0f7      	beq.n	40d104 <__mcmp+0x18>
  40d114:	d302      	bcc.n	40d11c <__mcmp+0x30>
  40d116:	2001      	movs	r0, #1
  40d118:	bc30      	pop	{r4, r5}
  40d11a:	4770      	bx	lr
  40d11c:	f04f 30ff 	mov.w	r0, #4294967295
  40d120:	e7fa      	b.n	40d118 <__mcmp+0x2c>
  40d122:	bf00      	nop

0040d124 <__mdiff>:
  40d124:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40d128:	690f      	ldr	r7, [r1, #16]
  40d12a:	460e      	mov	r6, r1
  40d12c:	6911      	ldr	r1, [r2, #16]
  40d12e:	1a7f      	subs	r7, r7, r1
  40d130:	2f00      	cmp	r7, #0
  40d132:	4690      	mov	r8, r2
  40d134:	d117      	bne.n	40d166 <__mdiff+0x42>
  40d136:	0089      	lsls	r1, r1, #2
  40d138:	f106 0514 	add.w	r5, r6, #20
  40d13c:	f102 0e14 	add.w	lr, r2, #20
  40d140:	186b      	adds	r3, r5, r1
  40d142:	4471      	add	r1, lr
  40d144:	e001      	b.n	40d14a <__mdiff+0x26>
  40d146:	429d      	cmp	r5, r3
  40d148:	d25c      	bcs.n	40d204 <__mdiff+0xe0>
  40d14a:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  40d14e:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  40d152:	42a2      	cmp	r2, r4
  40d154:	d0f7      	beq.n	40d146 <__mdiff+0x22>
  40d156:	d25e      	bcs.n	40d216 <__mdiff+0xf2>
  40d158:	4633      	mov	r3, r6
  40d15a:	462c      	mov	r4, r5
  40d15c:	4646      	mov	r6, r8
  40d15e:	4675      	mov	r5, lr
  40d160:	4698      	mov	r8, r3
  40d162:	2701      	movs	r7, #1
  40d164:	e005      	b.n	40d172 <__mdiff+0x4e>
  40d166:	db58      	blt.n	40d21a <__mdiff+0xf6>
  40d168:	f106 0514 	add.w	r5, r6, #20
  40d16c:	f108 0414 	add.w	r4, r8, #20
  40d170:	2700      	movs	r7, #0
  40d172:	6871      	ldr	r1, [r6, #4]
  40d174:	f7ff fdbc 	bl	40ccf0 <_Balloc>
  40d178:	f8d8 3010 	ldr.w	r3, [r8, #16]
  40d17c:	6936      	ldr	r6, [r6, #16]
  40d17e:	60c7      	str	r7, [r0, #12]
  40d180:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  40d184:	46a6      	mov	lr, r4
  40d186:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  40d18a:	f100 0414 	add.w	r4, r0, #20
  40d18e:	2300      	movs	r3, #0
  40d190:	f85e 1b04 	ldr.w	r1, [lr], #4
  40d194:	f855 8b04 	ldr.w	r8, [r5], #4
  40d198:	b28a      	uxth	r2, r1
  40d19a:	fa13 f388 	uxtah	r3, r3, r8
  40d19e:	0c09      	lsrs	r1, r1, #16
  40d1a0:	1a9a      	subs	r2, r3, r2
  40d1a2:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  40d1a6:	eb03 4322 	add.w	r3, r3, r2, asr #16
  40d1aa:	b292      	uxth	r2, r2
  40d1ac:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  40d1b0:	45f4      	cmp	ip, lr
  40d1b2:	f844 2b04 	str.w	r2, [r4], #4
  40d1b6:	ea4f 4323 	mov.w	r3, r3, asr #16
  40d1ba:	d8e9      	bhi.n	40d190 <__mdiff+0x6c>
  40d1bc:	42af      	cmp	r7, r5
  40d1be:	d917      	bls.n	40d1f0 <__mdiff+0xcc>
  40d1c0:	46a4      	mov	ip, r4
  40d1c2:	46ae      	mov	lr, r5
  40d1c4:	f85e 2b04 	ldr.w	r2, [lr], #4
  40d1c8:	fa13 f382 	uxtah	r3, r3, r2
  40d1cc:	1419      	asrs	r1, r3, #16
  40d1ce:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  40d1d2:	b29b      	uxth	r3, r3
  40d1d4:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  40d1d8:	4577      	cmp	r7, lr
  40d1da:	f84c 2b04 	str.w	r2, [ip], #4
  40d1de:	ea4f 4321 	mov.w	r3, r1, asr #16
  40d1e2:	d8ef      	bhi.n	40d1c4 <__mdiff+0xa0>
  40d1e4:	43ed      	mvns	r5, r5
  40d1e6:	442f      	add	r7, r5
  40d1e8:	f027 0703 	bic.w	r7, r7, #3
  40d1ec:	3704      	adds	r7, #4
  40d1ee:	443c      	add	r4, r7
  40d1f0:	3c04      	subs	r4, #4
  40d1f2:	b922      	cbnz	r2, 40d1fe <__mdiff+0xda>
  40d1f4:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  40d1f8:	3e01      	subs	r6, #1
  40d1fa:	2b00      	cmp	r3, #0
  40d1fc:	d0fa      	beq.n	40d1f4 <__mdiff+0xd0>
  40d1fe:	6106      	str	r6, [r0, #16]
  40d200:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40d204:	2100      	movs	r1, #0
  40d206:	f7ff fd73 	bl	40ccf0 <_Balloc>
  40d20a:	2201      	movs	r2, #1
  40d20c:	2300      	movs	r3, #0
  40d20e:	6102      	str	r2, [r0, #16]
  40d210:	6143      	str	r3, [r0, #20]
  40d212:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40d216:	4674      	mov	r4, lr
  40d218:	e7ab      	b.n	40d172 <__mdiff+0x4e>
  40d21a:	4633      	mov	r3, r6
  40d21c:	f106 0414 	add.w	r4, r6, #20
  40d220:	f102 0514 	add.w	r5, r2, #20
  40d224:	4616      	mov	r6, r2
  40d226:	2701      	movs	r7, #1
  40d228:	4698      	mov	r8, r3
  40d22a:	e7a2      	b.n	40d172 <__mdiff+0x4e>

0040d22c <__d2b>:
  40d22c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40d230:	b082      	sub	sp, #8
  40d232:	2101      	movs	r1, #1
  40d234:	461c      	mov	r4, r3
  40d236:	f3c3 570a 	ubfx	r7, r3, #20, #11
  40d23a:	4615      	mov	r5, r2
  40d23c:	9e08      	ldr	r6, [sp, #32]
  40d23e:	f7ff fd57 	bl	40ccf0 <_Balloc>
  40d242:	f3c4 0413 	ubfx	r4, r4, #0, #20
  40d246:	4680      	mov	r8, r0
  40d248:	b10f      	cbz	r7, 40d24e <__d2b+0x22>
  40d24a:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  40d24e:	9401      	str	r4, [sp, #4]
  40d250:	b31d      	cbz	r5, 40d29a <__d2b+0x6e>
  40d252:	a802      	add	r0, sp, #8
  40d254:	f840 5d08 	str.w	r5, [r0, #-8]!
  40d258:	f7ff fdda 	bl	40ce10 <__lo0bits>
  40d25c:	2800      	cmp	r0, #0
  40d25e:	d134      	bne.n	40d2ca <__d2b+0x9e>
  40d260:	e89d 000c 	ldmia.w	sp, {r2, r3}
  40d264:	f8c8 2014 	str.w	r2, [r8, #20]
  40d268:	2b00      	cmp	r3, #0
  40d26a:	bf0c      	ite	eq
  40d26c:	2101      	moveq	r1, #1
  40d26e:	2102      	movne	r1, #2
  40d270:	f8c8 3018 	str.w	r3, [r8, #24]
  40d274:	f8c8 1010 	str.w	r1, [r8, #16]
  40d278:	b9df      	cbnz	r7, 40d2b2 <__d2b+0x86>
  40d27a:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  40d27e:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  40d282:	6030      	str	r0, [r6, #0]
  40d284:	6918      	ldr	r0, [r3, #16]
  40d286:	f7ff fda3 	bl	40cdd0 <__hi0bits>
  40d28a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40d28c:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  40d290:	6018      	str	r0, [r3, #0]
  40d292:	4640      	mov	r0, r8
  40d294:	b002      	add	sp, #8
  40d296:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40d29a:	a801      	add	r0, sp, #4
  40d29c:	f7ff fdb8 	bl	40ce10 <__lo0bits>
  40d2a0:	9b01      	ldr	r3, [sp, #4]
  40d2a2:	f8c8 3014 	str.w	r3, [r8, #20]
  40d2a6:	2101      	movs	r1, #1
  40d2a8:	3020      	adds	r0, #32
  40d2aa:	f8c8 1010 	str.w	r1, [r8, #16]
  40d2ae:	2f00      	cmp	r7, #0
  40d2b0:	d0e3      	beq.n	40d27a <__d2b+0x4e>
  40d2b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40d2b4:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  40d2b8:	4407      	add	r7, r0
  40d2ba:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  40d2be:	6037      	str	r7, [r6, #0]
  40d2c0:	6018      	str	r0, [r3, #0]
  40d2c2:	4640      	mov	r0, r8
  40d2c4:	b002      	add	sp, #8
  40d2c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40d2ca:	e89d 000a 	ldmia.w	sp, {r1, r3}
  40d2ce:	f1c0 0220 	rsb	r2, r0, #32
  40d2d2:	fa03 f202 	lsl.w	r2, r3, r2
  40d2d6:	430a      	orrs	r2, r1
  40d2d8:	40c3      	lsrs	r3, r0
  40d2da:	9301      	str	r3, [sp, #4]
  40d2dc:	f8c8 2014 	str.w	r2, [r8, #20]
  40d2e0:	e7c2      	b.n	40d268 <__d2b+0x3c>
  40d2e2:	bf00      	nop

0040d2e4 <_realloc_r>:
  40d2e4:	2900      	cmp	r1, #0
  40d2e6:	f000 8095 	beq.w	40d414 <_realloc_r+0x130>
  40d2ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40d2ee:	460d      	mov	r5, r1
  40d2f0:	4616      	mov	r6, r2
  40d2f2:	b083      	sub	sp, #12
  40d2f4:	4680      	mov	r8, r0
  40d2f6:	f106 070b 	add.w	r7, r6, #11
  40d2fa:	f7fb fd11 	bl	408d20 <__malloc_lock>
  40d2fe:	f855 ec04 	ldr.w	lr, [r5, #-4]
  40d302:	2f16      	cmp	r7, #22
  40d304:	f02e 0403 	bic.w	r4, lr, #3
  40d308:	f1a5 0908 	sub.w	r9, r5, #8
  40d30c:	d83c      	bhi.n	40d388 <_realloc_r+0xa4>
  40d30e:	2210      	movs	r2, #16
  40d310:	4617      	mov	r7, r2
  40d312:	42be      	cmp	r6, r7
  40d314:	d83d      	bhi.n	40d392 <_realloc_r+0xae>
  40d316:	4294      	cmp	r4, r2
  40d318:	da43      	bge.n	40d3a2 <_realloc_r+0xbe>
  40d31a:	4bc4      	ldr	r3, [pc, #784]	; (40d62c <_realloc_r+0x348>)
  40d31c:	6899      	ldr	r1, [r3, #8]
  40d31e:	eb09 0004 	add.w	r0, r9, r4
  40d322:	4288      	cmp	r0, r1
  40d324:	f000 80b4 	beq.w	40d490 <_realloc_r+0x1ac>
  40d328:	6843      	ldr	r3, [r0, #4]
  40d32a:	f023 0101 	bic.w	r1, r3, #1
  40d32e:	4401      	add	r1, r0
  40d330:	6849      	ldr	r1, [r1, #4]
  40d332:	07c9      	lsls	r1, r1, #31
  40d334:	d54c      	bpl.n	40d3d0 <_realloc_r+0xec>
  40d336:	f01e 0f01 	tst.w	lr, #1
  40d33a:	f000 809b 	beq.w	40d474 <_realloc_r+0x190>
  40d33e:	4631      	mov	r1, r6
  40d340:	4640      	mov	r0, r8
  40d342:	f7fb f8f1 	bl	408528 <_malloc_r>
  40d346:	4606      	mov	r6, r0
  40d348:	2800      	cmp	r0, #0
  40d34a:	d03a      	beq.n	40d3c2 <_realloc_r+0xde>
  40d34c:	f855 3c04 	ldr.w	r3, [r5, #-4]
  40d350:	f023 0301 	bic.w	r3, r3, #1
  40d354:	444b      	add	r3, r9
  40d356:	f1a0 0208 	sub.w	r2, r0, #8
  40d35a:	429a      	cmp	r2, r3
  40d35c:	f000 8121 	beq.w	40d5a2 <_realloc_r+0x2be>
  40d360:	1f22      	subs	r2, r4, #4
  40d362:	2a24      	cmp	r2, #36	; 0x24
  40d364:	f200 8107 	bhi.w	40d576 <_realloc_r+0x292>
  40d368:	2a13      	cmp	r2, #19
  40d36a:	f200 80db 	bhi.w	40d524 <_realloc_r+0x240>
  40d36e:	4603      	mov	r3, r0
  40d370:	462a      	mov	r2, r5
  40d372:	6811      	ldr	r1, [r2, #0]
  40d374:	6019      	str	r1, [r3, #0]
  40d376:	6851      	ldr	r1, [r2, #4]
  40d378:	6059      	str	r1, [r3, #4]
  40d37a:	6892      	ldr	r2, [r2, #8]
  40d37c:	609a      	str	r2, [r3, #8]
  40d37e:	4629      	mov	r1, r5
  40d380:	4640      	mov	r0, r8
  40d382:	f7ff f929 	bl	40c5d8 <_free_r>
  40d386:	e01c      	b.n	40d3c2 <_realloc_r+0xde>
  40d388:	f027 0707 	bic.w	r7, r7, #7
  40d38c:	2f00      	cmp	r7, #0
  40d38e:	463a      	mov	r2, r7
  40d390:	dabf      	bge.n	40d312 <_realloc_r+0x2e>
  40d392:	2600      	movs	r6, #0
  40d394:	230c      	movs	r3, #12
  40d396:	4630      	mov	r0, r6
  40d398:	f8c8 3000 	str.w	r3, [r8]
  40d39c:	b003      	add	sp, #12
  40d39e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40d3a2:	462e      	mov	r6, r5
  40d3a4:	1be3      	subs	r3, r4, r7
  40d3a6:	2b0f      	cmp	r3, #15
  40d3a8:	d81e      	bhi.n	40d3e8 <_realloc_r+0x104>
  40d3aa:	f8d9 3004 	ldr.w	r3, [r9, #4]
  40d3ae:	f003 0301 	and.w	r3, r3, #1
  40d3b2:	4323      	orrs	r3, r4
  40d3b4:	444c      	add	r4, r9
  40d3b6:	f8c9 3004 	str.w	r3, [r9, #4]
  40d3ba:	6863      	ldr	r3, [r4, #4]
  40d3bc:	f043 0301 	orr.w	r3, r3, #1
  40d3c0:	6063      	str	r3, [r4, #4]
  40d3c2:	4640      	mov	r0, r8
  40d3c4:	f7fb fcb2 	bl	408d2c <__malloc_unlock>
  40d3c8:	4630      	mov	r0, r6
  40d3ca:	b003      	add	sp, #12
  40d3cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40d3d0:	f023 0303 	bic.w	r3, r3, #3
  40d3d4:	18e1      	adds	r1, r4, r3
  40d3d6:	4291      	cmp	r1, r2
  40d3d8:	db1f      	blt.n	40d41a <_realloc_r+0x136>
  40d3da:	68c3      	ldr	r3, [r0, #12]
  40d3dc:	6882      	ldr	r2, [r0, #8]
  40d3de:	462e      	mov	r6, r5
  40d3e0:	60d3      	str	r3, [r2, #12]
  40d3e2:	460c      	mov	r4, r1
  40d3e4:	609a      	str	r2, [r3, #8]
  40d3e6:	e7dd      	b.n	40d3a4 <_realloc_r+0xc0>
  40d3e8:	f8d9 2004 	ldr.w	r2, [r9, #4]
  40d3ec:	eb09 0107 	add.w	r1, r9, r7
  40d3f0:	f002 0201 	and.w	r2, r2, #1
  40d3f4:	444c      	add	r4, r9
  40d3f6:	f043 0301 	orr.w	r3, r3, #1
  40d3fa:	4317      	orrs	r7, r2
  40d3fc:	f8c9 7004 	str.w	r7, [r9, #4]
  40d400:	604b      	str	r3, [r1, #4]
  40d402:	6863      	ldr	r3, [r4, #4]
  40d404:	f043 0301 	orr.w	r3, r3, #1
  40d408:	3108      	adds	r1, #8
  40d40a:	6063      	str	r3, [r4, #4]
  40d40c:	4640      	mov	r0, r8
  40d40e:	f7ff f8e3 	bl	40c5d8 <_free_r>
  40d412:	e7d6      	b.n	40d3c2 <_realloc_r+0xde>
  40d414:	4611      	mov	r1, r2
  40d416:	f7fb b887 	b.w	408528 <_malloc_r>
  40d41a:	f01e 0f01 	tst.w	lr, #1
  40d41e:	d18e      	bne.n	40d33e <_realloc_r+0x5a>
  40d420:	f855 1c08 	ldr.w	r1, [r5, #-8]
  40d424:	eba9 0a01 	sub.w	sl, r9, r1
  40d428:	f8da 1004 	ldr.w	r1, [sl, #4]
  40d42c:	f021 0103 	bic.w	r1, r1, #3
  40d430:	440b      	add	r3, r1
  40d432:	4423      	add	r3, r4
  40d434:	4293      	cmp	r3, r2
  40d436:	db25      	blt.n	40d484 <_realloc_r+0x1a0>
  40d438:	68c2      	ldr	r2, [r0, #12]
  40d43a:	6881      	ldr	r1, [r0, #8]
  40d43c:	4656      	mov	r6, sl
  40d43e:	60ca      	str	r2, [r1, #12]
  40d440:	6091      	str	r1, [r2, #8]
  40d442:	f8da 100c 	ldr.w	r1, [sl, #12]
  40d446:	f856 0f08 	ldr.w	r0, [r6, #8]!
  40d44a:	1f22      	subs	r2, r4, #4
  40d44c:	2a24      	cmp	r2, #36	; 0x24
  40d44e:	60c1      	str	r1, [r0, #12]
  40d450:	6088      	str	r0, [r1, #8]
  40d452:	f200 8094 	bhi.w	40d57e <_realloc_r+0x29a>
  40d456:	2a13      	cmp	r2, #19
  40d458:	d96f      	bls.n	40d53a <_realloc_r+0x256>
  40d45a:	6829      	ldr	r1, [r5, #0]
  40d45c:	f8ca 1008 	str.w	r1, [sl, #8]
  40d460:	6869      	ldr	r1, [r5, #4]
  40d462:	f8ca 100c 	str.w	r1, [sl, #12]
  40d466:	2a1b      	cmp	r2, #27
  40d468:	f200 80a2 	bhi.w	40d5b0 <_realloc_r+0x2cc>
  40d46c:	3508      	adds	r5, #8
  40d46e:	f10a 0210 	add.w	r2, sl, #16
  40d472:	e063      	b.n	40d53c <_realloc_r+0x258>
  40d474:	f855 3c08 	ldr.w	r3, [r5, #-8]
  40d478:	eba9 0a03 	sub.w	sl, r9, r3
  40d47c:	f8da 1004 	ldr.w	r1, [sl, #4]
  40d480:	f021 0103 	bic.w	r1, r1, #3
  40d484:	1863      	adds	r3, r4, r1
  40d486:	4293      	cmp	r3, r2
  40d488:	f6ff af59 	blt.w	40d33e <_realloc_r+0x5a>
  40d48c:	4656      	mov	r6, sl
  40d48e:	e7d8      	b.n	40d442 <_realloc_r+0x15e>
  40d490:	6841      	ldr	r1, [r0, #4]
  40d492:	f021 0b03 	bic.w	fp, r1, #3
  40d496:	44a3      	add	fp, r4
  40d498:	f107 0010 	add.w	r0, r7, #16
  40d49c:	4583      	cmp	fp, r0
  40d49e:	da56      	bge.n	40d54e <_realloc_r+0x26a>
  40d4a0:	f01e 0f01 	tst.w	lr, #1
  40d4a4:	f47f af4b 	bne.w	40d33e <_realloc_r+0x5a>
  40d4a8:	f855 1c08 	ldr.w	r1, [r5, #-8]
  40d4ac:	eba9 0a01 	sub.w	sl, r9, r1
  40d4b0:	f8da 1004 	ldr.w	r1, [sl, #4]
  40d4b4:	f021 0103 	bic.w	r1, r1, #3
  40d4b8:	448b      	add	fp, r1
  40d4ba:	4558      	cmp	r0, fp
  40d4bc:	dce2      	bgt.n	40d484 <_realloc_r+0x1a0>
  40d4be:	4656      	mov	r6, sl
  40d4c0:	f8da 100c 	ldr.w	r1, [sl, #12]
  40d4c4:	f856 0f08 	ldr.w	r0, [r6, #8]!
  40d4c8:	1f22      	subs	r2, r4, #4
  40d4ca:	2a24      	cmp	r2, #36	; 0x24
  40d4cc:	60c1      	str	r1, [r0, #12]
  40d4ce:	6088      	str	r0, [r1, #8]
  40d4d0:	f200 808f 	bhi.w	40d5f2 <_realloc_r+0x30e>
  40d4d4:	2a13      	cmp	r2, #19
  40d4d6:	f240 808a 	bls.w	40d5ee <_realloc_r+0x30a>
  40d4da:	6829      	ldr	r1, [r5, #0]
  40d4dc:	f8ca 1008 	str.w	r1, [sl, #8]
  40d4e0:	6869      	ldr	r1, [r5, #4]
  40d4e2:	f8ca 100c 	str.w	r1, [sl, #12]
  40d4e6:	2a1b      	cmp	r2, #27
  40d4e8:	f200 808a 	bhi.w	40d600 <_realloc_r+0x31c>
  40d4ec:	3508      	adds	r5, #8
  40d4ee:	f10a 0210 	add.w	r2, sl, #16
  40d4f2:	6829      	ldr	r1, [r5, #0]
  40d4f4:	6011      	str	r1, [r2, #0]
  40d4f6:	6869      	ldr	r1, [r5, #4]
  40d4f8:	6051      	str	r1, [r2, #4]
  40d4fa:	68a9      	ldr	r1, [r5, #8]
  40d4fc:	6091      	str	r1, [r2, #8]
  40d4fe:	eb0a 0107 	add.w	r1, sl, r7
  40d502:	ebab 0207 	sub.w	r2, fp, r7
  40d506:	f042 0201 	orr.w	r2, r2, #1
  40d50a:	6099      	str	r1, [r3, #8]
  40d50c:	604a      	str	r2, [r1, #4]
  40d50e:	f8da 3004 	ldr.w	r3, [sl, #4]
  40d512:	f003 0301 	and.w	r3, r3, #1
  40d516:	431f      	orrs	r7, r3
  40d518:	4640      	mov	r0, r8
  40d51a:	f8ca 7004 	str.w	r7, [sl, #4]
  40d51e:	f7fb fc05 	bl	408d2c <__malloc_unlock>
  40d522:	e751      	b.n	40d3c8 <_realloc_r+0xe4>
  40d524:	682b      	ldr	r3, [r5, #0]
  40d526:	6003      	str	r3, [r0, #0]
  40d528:	686b      	ldr	r3, [r5, #4]
  40d52a:	6043      	str	r3, [r0, #4]
  40d52c:	2a1b      	cmp	r2, #27
  40d52e:	d82d      	bhi.n	40d58c <_realloc_r+0x2a8>
  40d530:	f100 0308 	add.w	r3, r0, #8
  40d534:	f105 0208 	add.w	r2, r5, #8
  40d538:	e71b      	b.n	40d372 <_realloc_r+0x8e>
  40d53a:	4632      	mov	r2, r6
  40d53c:	6829      	ldr	r1, [r5, #0]
  40d53e:	6011      	str	r1, [r2, #0]
  40d540:	6869      	ldr	r1, [r5, #4]
  40d542:	6051      	str	r1, [r2, #4]
  40d544:	68a9      	ldr	r1, [r5, #8]
  40d546:	6091      	str	r1, [r2, #8]
  40d548:	461c      	mov	r4, r3
  40d54a:	46d1      	mov	r9, sl
  40d54c:	e72a      	b.n	40d3a4 <_realloc_r+0xc0>
  40d54e:	eb09 0107 	add.w	r1, r9, r7
  40d552:	ebab 0b07 	sub.w	fp, fp, r7
  40d556:	f04b 0201 	orr.w	r2, fp, #1
  40d55a:	6099      	str	r1, [r3, #8]
  40d55c:	604a      	str	r2, [r1, #4]
  40d55e:	f855 3c04 	ldr.w	r3, [r5, #-4]
  40d562:	f003 0301 	and.w	r3, r3, #1
  40d566:	431f      	orrs	r7, r3
  40d568:	4640      	mov	r0, r8
  40d56a:	f845 7c04 	str.w	r7, [r5, #-4]
  40d56e:	f7fb fbdd 	bl	408d2c <__malloc_unlock>
  40d572:	462e      	mov	r6, r5
  40d574:	e728      	b.n	40d3c8 <_realloc_r+0xe4>
  40d576:	4629      	mov	r1, r5
  40d578:	f7fb fb20 	bl	408bbc <memmove>
  40d57c:	e6ff      	b.n	40d37e <_realloc_r+0x9a>
  40d57e:	4629      	mov	r1, r5
  40d580:	4630      	mov	r0, r6
  40d582:	461c      	mov	r4, r3
  40d584:	46d1      	mov	r9, sl
  40d586:	f7fb fb19 	bl	408bbc <memmove>
  40d58a:	e70b      	b.n	40d3a4 <_realloc_r+0xc0>
  40d58c:	68ab      	ldr	r3, [r5, #8]
  40d58e:	6083      	str	r3, [r0, #8]
  40d590:	68eb      	ldr	r3, [r5, #12]
  40d592:	60c3      	str	r3, [r0, #12]
  40d594:	2a24      	cmp	r2, #36	; 0x24
  40d596:	d017      	beq.n	40d5c8 <_realloc_r+0x2e4>
  40d598:	f100 0310 	add.w	r3, r0, #16
  40d59c:	f105 0210 	add.w	r2, r5, #16
  40d5a0:	e6e7      	b.n	40d372 <_realloc_r+0x8e>
  40d5a2:	f850 3c04 	ldr.w	r3, [r0, #-4]
  40d5a6:	f023 0303 	bic.w	r3, r3, #3
  40d5aa:	441c      	add	r4, r3
  40d5ac:	462e      	mov	r6, r5
  40d5ae:	e6f9      	b.n	40d3a4 <_realloc_r+0xc0>
  40d5b0:	68a9      	ldr	r1, [r5, #8]
  40d5b2:	f8ca 1010 	str.w	r1, [sl, #16]
  40d5b6:	68e9      	ldr	r1, [r5, #12]
  40d5b8:	f8ca 1014 	str.w	r1, [sl, #20]
  40d5bc:	2a24      	cmp	r2, #36	; 0x24
  40d5be:	d00c      	beq.n	40d5da <_realloc_r+0x2f6>
  40d5c0:	3510      	adds	r5, #16
  40d5c2:	f10a 0218 	add.w	r2, sl, #24
  40d5c6:	e7b9      	b.n	40d53c <_realloc_r+0x258>
  40d5c8:	692b      	ldr	r3, [r5, #16]
  40d5ca:	6103      	str	r3, [r0, #16]
  40d5cc:	696b      	ldr	r3, [r5, #20]
  40d5ce:	6143      	str	r3, [r0, #20]
  40d5d0:	f105 0218 	add.w	r2, r5, #24
  40d5d4:	f100 0318 	add.w	r3, r0, #24
  40d5d8:	e6cb      	b.n	40d372 <_realloc_r+0x8e>
  40d5da:	692a      	ldr	r2, [r5, #16]
  40d5dc:	f8ca 2018 	str.w	r2, [sl, #24]
  40d5e0:	696a      	ldr	r2, [r5, #20]
  40d5e2:	f8ca 201c 	str.w	r2, [sl, #28]
  40d5e6:	3518      	adds	r5, #24
  40d5e8:	f10a 0220 	add.w	r2, sl, #32
  40d5ec:	e7a6      	b.n	40d53c <_realloc_r+0x258>
  40d5ee:	4632      	mov	r2, r6
  40d5f0:	e77f      	b.n	40d4f2 <_realloc_r+0x20e>
  40d5f2:	4629      	mov	r1, r5
  40d5f4:	4630      	mov	r0, r6
  40d5f6:	9301      	str	r3, [sp, #4]
  40d5f8:	f7fb fae0 	bl	408bbc <memmove>
  40d5fc:	9b01      	ldr	r3, [sp, #4]
  40d5fe:	e77e      	b.n	40d4fe <_realloc_r+0x21a>
  40d600:	68a9      	ldr	r1, [r5, #8]
  40d602:	f8ca 1010 	str.w	r1, [sl, #16]
  40d606:	68e9      	ldr	r1, [r5, #12]
  40d608:	f8ca 1014 	str.w	r1, [sl, #20]
  40d60c:	2a24      	cmp	r2, #36	; 0x24
  40d60e:	d003      	beq.n	40d618 <_realloc_r+0x334>
  40d610:	3510      	adds	r5, #16
  40d612:	f10a 0218 	add.w	r2, sl, #24
  40d616:	e76c      	b.n	40d4f2 <_realloc_r+0x20e>
  40d618:	692a      	ldr	r2, [r5, #16]
  40d61a:	f8ca 2018 	str.w	r2, [sl, #24]
  40d61e:	696a      	ldr	r2, [r5, #20]
  40d620:	f8ca 201c 	str.w	r2, [sl, #28]
  40d624:	3518      	adds	r5, #24
  40d626:	f10a 0220 	add.w	r2, sl, #32
  40d62a:	e762      	b.n	40d4f2 <_realloc_r+0x20e>
  40d62c:	20400458 	.word	0x20400458

0040d630 <__sread>:
  40d630:	b510      	push	{r4, lr}
  40d632:	460c      	mov	r4, r1
  40d634:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40d638:	f000 fae6 	bl	40dc08 <_read_r>
  40d63c:	2800      	cmp	r0, #0
  40d63e:	db03      	blt.n	40d648 <__sread+0x18>
  40d640:	6d23      	ldr	r3, [r4, #80]	; 0x50
  40d642:	4403      	add	r3, r0
  40d644:	6523      	str	r3, [r4, #80]	; 0x50
  40d646:	bd10      	pop	{r4, pc}
  40d648:	89a3      	ldrh	r3, [r4, #12]
  40d64a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  40d64e:	81a3      	strh	r3, [r4, #12]
  40d650:	bd10      	pop	{r4, pc}
  40d652:	bf00      	nop

0040d654 <__swrite>:
  40d654:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40d658:	4616      	mov	r6, r2
  40d65a:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
  40d65e:	461f      	mov	r7, r3
  40d660:	05d3      	lsls	r3, r2, #23
  40d662:	460c      	mov	r4, r1
  40d664:	4605      	mov	r5, r0
  40d666:	d507      	bpl.n	40d678 <__swrite+0x24>
  40d668:	2200      	movs	r2, #0
  40d66a:	2302      	movs	r3, #2
  40d66c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40d670:	f000 fab4 	bl	40dbdc <_lseek_r>
  40d674:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40d678:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  40d67c:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  40d680:	81a2      	strh	r2, [r4, #12]
  40d682:	463b      	mov	r3, r7
  40d684:	4632      	mov	r2, r6
  40d686:	4628      	mov	r0, r5
  40d688:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  40d68c:	f000 b994 	b.w	40d9b8 <_write_r>

0040d690 <__sseek>:
  40d690:	b510      	push	{r4, lr}
  40d692:	460c      	mov	r4, r1
  40d694:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40d698:	f000 faa0 	bl	40dbdc <_lseek_r>
  40d69c:	89a3      	ldrh	r3, [r4, #12]
  40d69e:	1c42      	adds	r2, r0, #1
  40d6a0:	bf0e      	itee	eq
  40d6a2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  40d6a6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  40d6aa:	6520      	strne	r0, [r4, #80]	; 0x50
  40d6ac:	81a3      	strh	r3, [r4, #12]
  40d6ae:	bd10      	pop	{r4, pc}

0040d6b0 <__sclose>:
  40d6b0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40d6b4:	f000 b9f8 	b.w	40daa8 <_close_r>
	...

0040d6c0 <strlen>:
  40d6c0:	f890 f000 	pld	[r0]
  40d6c4:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  40d6c8:	f020 0107 	bic.w	r1, r0, #7
  40d6cc:	f06f 0c00 	mvn.w	ip, #0
  40d6d0:	f010 0407 	ands.w	r4, r0, #7
  40d6d4:	f891 f020 	pld	[r1, #32]
  40d6d8:	f040 8049 	bne.w	40d76e <strlen+0xae>
  40d6dc:	f04f 0400 	mov.w	r4, #0
  40d6e0:	f06f 0007 	mvn.w	r0, #7
  40d6e4:	e9d1 2300 	ldrd	r2, r3, [r1]
  40d6e8:	f891 f040 	pld	[r1, #64]	; 0x40
  40d6ec:	f100 0008 	add.w	r0, r0, #8
  40d6f0:	fa82 f24c 	uadd8	r2, r2, ip
  40d6f4:	faa4 f28c 	sel	r2, r4, ip
  40d6f8:	fa83 f34c 	uadd8	r3, r3, ip
  40d6fc:	faa2 f38c 	sel	r3, r2, ip
  40d700:	bb4b      	cbnz	r3, 40d756 <strlen+0x96>
  40d702:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  40d706:	fa82 f24c 	uadd8	r2, r2, ip
  40d70a:	f100 0008 	add.w	r0, r0, #8
  40d70e:	faa4 f28c 	sel	r2, r4, ip
  40d712:	fa83 f34c 	uadd8	r3, r3, ip
  40d716:	faa2 f38c 	sel	r3, r2, ip
  40d71a:	b9e3      	cbnz	r3, 40d756 <strlen+0x96>
  40d71c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  40d720:	fa82 f24c 	uadd8	r2, r2, ip
  40d724:	f100 0008 	add.w	r0, r0, #8
  40d728:	faa4 f28c 	sel	r2, r4, ip
  40d72c:	fa83 f34c 	uadd8	r3, r3, ip
  40d730:	faa2 f38c 	sel	r3, r2, ip
  40d734:	b97b      	cbnz	r3, 40d756 <strlen+0x96>
  40d736:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  40d73a:	f101 0120 	add.w	r1, r1, #32
  40d73e:	fa82 f24c 	uadd8	r2, r2, ip
  40d742:	f100 0008 	add.w	r0, r0, #8
  40d746:	faa4 f28c 	sel	r2, r4, ip
  40d74a:	fa83 f34c 	uadd8	r3, r3, ip
  40d74e:	faa2 f38c 	sel	r3, r2, ip
  40d752:	2b00      	cmp	r3, #0
  40d754:	d0c6      	beq.n	40d6e4 <strlen+0x24>
  40d756:	2a00      	cmp	r2, #0
  40d758:	bf04      	itt	eq
  40d75a:	3004      	addeq	r0, #4
  40d75c:	461a      	moveq	r2, r3
  40d75e:	ba12      	rev	r2, r2
  40d760:	fab2 f282 	clz	r2, r2
  40d764:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  40d768:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  40d76c:	4770      	bx	lr
  40d76e:	e9d1 2300 	ldrd	r2, r3, [r1]
  40d772:	f004 0503 	and.w	r5, r4, #3
  40d776:	f1c4 0000 	rsb	r0, r4, #0
  40d77a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  40d77e:	f014 0f04 	tst.w	r4, #4
  40d782:	f891 f040 	pld	[r1, #64]	; 0x40
  40d786:	fa0c f505 	lsl.w	r5, ip, r5
  40d78a:	ea62 0205 	orn	r2, r2, r5
  40d78e:	bf1c      	itt	ne
  40d790:	ea63 0305 	ornne	r3, r3, r5
  40d794:	4662      	movne	r2, ip
  40d796:	f04f 0400 	mov.w	r4, #0
  40d79a:	e7a9      	b.n	40d6f0 <strlen+0x30>

0040d79c <__ssprint_r>:
  40d79c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40d7a0:	6893      	ldr	r3, [r2, #8]
  40d7a2:	b083      	sub	sp, #12
  40d7a4:	4690      	mov	r8, r2
  40d7a6:	2b00      	cmp	r3, #0
  40d7a8:	d070      	beq.n	40d88c <__ssprint_r+0xf0>
  40d7aa:	4682      	mov	sl, r0
  40d7ac:	460c      	mov	r4, r1
  40d7ae:	6817      	ldr	r7, [r2, #0]
  40d7b0:	688d      	ldr	r5, [r1, #8]
  40d7b2:	6808      	ldr	r0, [r1, #0]
  40d7b4:	e042      	b.n	40d83c <__ssprint_r+0xa0>
  40d7b6:	89a3      	ldrh	r3, [r4, #12]
  40d7b8:	f413 6f90 	tst.w	r3, #1152	; 0x480
  40d7bc:	d02e      	beq.n	40d81c <__ssprint_r+0x80>
  40d7be:	6965      	ldr	r5, [r4, #20]
  40d7c0:	6921      	ldr	r1, [r4, #16]
  40d7c2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  40d7c6:	eba0 0b01 	sub.w	fp, r0, r1
  40d7ca:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  40d7ce:	f10b 0001 	add.w	r0, fp, #1
  40d7d2:	106d      	asrs	r5, r5, #1
  40d7d4:	4430      	add	r0, r6
  40d7d6:	42a8      	cmp	r0, r5
  40d7d8:	462a      	mov	r2, r5
  40d7da:	bf84      	itt	hi
  40d7dc:	4605      	movhi	r5, r0
  40d7de:	462a      	movhi	r2, r5
  40d7e0:	055b      	lsls	r3, r3, #21
  40d7e2:	d538      	bpl.n	40d856 <__ssprint_r+0xba>
  40d7e4:	4611      	mov	r1, r2
  40d7e6:	4650      	mov	r0, sl
  40d7e8:	f7fa fe9e 	bl	408528 <_malloc_r>
  40d7ec:	2800      	cmp	r0, #0
  40d7ee:	d03c      	beq.n	40d86a <__ssprint_r+0xce>
  40d7f0:	465a      	mov	r2, fp
  40d7f2:	6921      	ldr	r1, [r4, #16]
  40d7f4:	9001      	str	r0, [sp, #4]
  40d7f6:	f7fb f947 	bl	408a88 <memcpy>
  40d7fa:	89a2      	ldrh	r2, [r4, #12]
  40d7fc:	9b01      	ldr	r3, [sp, #4]
  40d7fe:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  40d802:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  40d806:	81a2      	strh	r2, [r4, #12]
  40d808:	eba5 020b 	sub.w	r2, r5, fp
  40d80c:	eb03 000b 	add.w	r0, r3, fp
  40d810:	6165      	str	r5, [r4, #20]
  40d812:	6123      	str	r3, [r4, #16]
  40d814:	6020      	str	r0, [r4, #0]
  40d816:	60a2      	str	r2, [r4, #8]
  40d818:	4635      	mov	r5, r6
  40d81a:	46b3      	mov	fp, r6
  40d81c:	465a      	mov	r2, fp
  40d81e:	4649      	mov	r1, r9
  40d820:	f7fb f9cc 	bl	408bbc <memmove>
  40d824:	f8d8 3008 	ldr.w	r3, [r8, #8]
  40d828:	68a2      	ldr	r2, [r4, #8]
  40d82a:	6820      	ldr	r0, [r4, #0]
  40d82c:	1b55      	subs	r5, r2, r5
  40d82e:	4458      	add	r0, fp
  40d830:	1b9e      	subs	r6, r3, r6
  40d832:	60a5      	str	r5, [r4, #8]
  40d834:	6020      	str	r0, [r4, #0]
  40d836:	f8c8 6008 	str.w	r6, [r8, #8]
  40d83a:	b33e      	cbz	r6, 40d88c <__ssprint_r+0xf0>
  40d83c:	687e      	ldr	r6, [r7, #4]
  40d83e:	463b      	mov	r3, r7
  40d840:	3708      	adds	r7, #8
  40d842:	2e00      	cmp	r6, #0
  40d844:	d0fa      	beq.n	40d83c <__ssprint_r+0xa0>
  40d846:	42ae      	cmp	r6, r5
  40d848:	f8d3 9000 	ldr.w	r9, [r3]
  40d84c:	46ab      	mov	fp, r5
  40d84e:	d2b2      	bcs.n	40d7b6 <__ssprint_r+0x1a>
  40d850:	4635      	mov	r5, r6
  40d852:	46b3      	mov	fp, r6
  40d854:	e7e2      	b.n	40d81c <__ssprint_r+0x80>
  40d856:	4650      	mov	r0, sl
  40d858:	f7ff fd44 	bl	40d2e4 <_realloc_r>
  40d85c:	4603      	mov	r3, r0
  40d85e:	2800      	cmp	r0, #0
  40d860:	d1d2      	bne.n	40d808 <__ssprint_r+0x6c>
  40d862:	6921      	ldr	r1, [r4, #16]
  40d864:	4650      	mov	r0, sl
  40d866:	f7fe feb7 	bl	40c5d8 <_free_r>
  40d86a:	230c      	movs	r3, #12
  40d86c:	f8ca 3000 	str.w	r3, [sl]
  40d870:	89a3      	ldrh	r3, [r4, #12]
  40d872:	2200      	movs	r2, #0
  40d874:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40d878:	f04f 30ff 	mov.w	r0, #4294967295
  40d87c:	81a3      	strh	r3, [r4, #12]
  40d87e:	f8c8 2008 	str.w	r2, [r8, #8]
  40d882:	f8c8 2004 	str.w	r2, [r8, #4]
  40d886:	b003      	add	sp, #12
  40d888:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40d88c:	2000      	movs	r0, #0
  40d88e:	f8c8 0004 	str.w	r0, [r8, #4]
  40d892:	b003      	add	sp, #12
  40d894:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0040d898 <__swbuf_r>:
  40d898:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40d89a:	460d      	mov	r5, r1
  40d89c:	4614      	mov	r4, r2
  40d89e:	4606      	mov	r6, r0
  40d8a0:	b110      	cbz	r0, 40d8a8 <__swbuf_r+0x10>
  40d8a2:	6b83      	ldr	r3, [r0, #56]	; 0x38
  40d8a4:	2b00      	cmp	r3, #0
  40d8a6:	d04b      	beq.n	40d940 <__swbuf_r+0xa8>
  40d8a8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40d8ac:	69a3      	ldr	r3, [r4, #24]
  40d8ae:	60a3      	str	r3, [r4, #8]
  40d8b0:	b291      	uxth	r1, r2
  40d8b2:	0708      	lsls	r0, r1, #28
  40d8b4:	d539      	bpl.n	40d92a <__swbuf_r+0x92>
  40d8b6:	6923      	ldr	r3, [r4, #16]
  40d8b8:	2b00      	cmp	r3, #0
  40d8ba:	d036      	beq.n	40d92a <__swbuf_r+0x92>
  40d8bc:	b2ed      	uxtb	r5, r5
  40d8be:	0489      	lsls	r1, r1, #18
  40d8c0:	462f      	mov	r7, r5
  40d8c2:	d515      	bpl.n	40d8f0 <__swbuf_r+0x58>
  40d8c4:	6822      	ldr	r2, [r4, #0]
  40d8c6:	6961      	ldr	r1, [r4, #20]
  40d8c8:	1ad3      	subs	r3, r2, r3
  40d8ca:	428b      	cmp	r3, r1
  40d8cc:	da1c      	bge.n	40d908 <__swbuf_r+0x70>
  40d8ce:	3301      	adds	r3, #1
  40d8d0:	68a1      	ldr	r1, [r4, #8]
  40d8d2:	1c50      	adds	r0, r2, #1
  40d8d4:	3901      	subs	r1, #1
  40d8d6:	60a1      	str	r1, [r4, #8]
  40d8d8:	6020      	str	r0, [r4, #0]
  40d8da:	7015      	strb	r5, [r2, #0]
  40d8dc:	6962      	ldr	r2, [r4, #20]
  40d8de:	429a      	cmp	r2, r3
  40d8e0:	d01a      	beq.n	40d918 <__swbuf_r+0x80>
  40d8e2:	89a3      	ldrh	r3, [r4, #12]
  40d8e4:	07db      	lsls	r3, r3, #31
  40d8e6:	d501      	bpl.n	40d8ec <__swbuf_r+0x54>
  40d8e8:	2d0a      	cmp	r5, #10
  40d8ea:	d015      	beq.n	40d918 <__swbuf_r+0x80>
  40d8ec:	4638      	mov	r0, r7
  40d8ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40d8f0:	6e61      	ldr	r1, [r4, #100]	; 0x64
  40d8f2:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  40d8f6:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  40d8fa:	81a2      	strh	r2, [r4, #12]
  40d8fc:	6822      	ldr	r2, [r4, #0]
  40d8fe:	6661      	str	r1, [r4, #100]	; 0x64
  40d900:	6961      	ldr	r1, [r4, #20]
  40d902:	1ad3      	subs	r3, r2, r3
  40d904:	428b      	cmp	r3, r1
  40d906:	dbe2      	blt.n	40d8ce <__swbuf_r+0x36>
  40d908:	4621      	mov	r1, r4
  40d90a:	4630      	mov	r0, r6
  40d90c:	f7fe fce6 	bl	40c2dc <_fflush_r>
  40d910:	b940      	cbnz	r0, 40d924 <__swbuf_r+0x8c>
  40d912:	6822      	ldr	r2, [r4, #0]
  40d914:	2301      	movs	r3, #1
  40d916:	e7db      	b.n	40d8d0 <__swbuf_r+0x38>
  40d918:	4621      	mov	r1, r4
  40d91a:	4630      	mov	r0, r6
  40d91c:	f7fe fcde 	bl	40c2dc <_fflush_r>
  40d920:	2800      	cmp	r0, #0
  40d922:	d0e3      	beq.n	40d8ec <__swbuf_r+0x54>
  40d924:	f04f 37ff 	mov.w	r7, #4294967295
  40d928:	e7e0      	b.n	40d8ec <__swbuf_r+0x54>
  40d92a:	4621      	mov	r1, r4
  40d92c:	4630      	mov	r0, r6
  40d92e:	f7fd fc03 	bl	40b138 <__swsetup_r>
  40d932:	2800      	cmp	r0, #0
  40d934:	d1f6      	bne.n	40d924 <__swbuf_r+0x8c>
  40d936:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40d93a:	6923      	ldr	r3, [r4, #16]
  40d93c:	b291      	uxth	r1, r2
  40d93e:	e7bd      	b.n	40d8bc <__swbuf_r+0x24>
  40d940:	f7fe fd24 	bl	40c38c <__sinit>
  40d944:	e7b0      	b.n	40d8a8 <__swbuf_r+0x10>
  40d946:	bf00      	nop

0040d948 <_wcrtomb_r>:
  40d948:	b5f0      	push	{r4, r5, r6, r7, lr}
  40d94a:	4606      	mov	r6, r0
  40d94c:	b085      	sub	sp, #20
  40d94e:	461f      	mov	r7, r3
  40d950:	b189      	cbz	r1, 40d976 <_wcrtomb_r+0x2e>
  40d952:	4c10      	ldr	r4, [pc, #64]	; (40d994 <_wcrtomb_r+0x4c>)
  40d954:	4d10      	ldr	r5, [pc, #64]	; (40d998 <_wcrtomb_r+0x50>)
  40d956:	6824      	ldr	r4, [r4, #0]
  40d958:	6b64      	ldr	r4, [r4, #52]	; 0x34
  40d95a:	2c00      	cmp	r4, #0
  40d95c:	bf08      	it	eq
  40d95e:	462c      	moveq	r4, r5
  40d960:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
  40d964:	47a0      	blx	r4
  40d966:	1c43      	adds	r3, r0, #1
  40d968:	d103      	bne.n	40d972 <_wcrtomb_r+0x2a>
  40d96a:	2200      	movs	r2, #0
  40d96c:	238a      	movs	r3, #138	; 0x8a
  40d96e:	603a      	str	r2, [r7, #0]
  40d970:	6033      	str	r3, [r6, #0]
  40d972:	b005      	add	sp, #20
  40d974:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40d976:	460c      	mov	r4, r1
  40d978:	4906      	ldr	r1, [pc, #24]	; (40d994 <_wcrtomb_r+0x4c>)
  40d97a:	4a07      	ldr	r2, [pc, #28]	; (40d998 <_wcrtomb_r+0x50>)
  40d97c:	6809      	ldr	r1, [r1, #0]
  40d97e:	6b49      	ldr	r1, [r1, #52]	; 0x34
  40d980:	2900      	cmp	r1, #0
  40d982:	bf08      	it	eq
  40d984:	4611      	moveq	r1, r2
  40d986:	4622      	mov	r2, r4
  40d988:	f8d1 40e0 	ldr.w	r4, [r1, #224]	; 0xe0
  40d98c:	a901      	add	r1, sp, #4
  40d98e:	47a0      	blx	r4
  40d990:	e7e9      	b.n	40d966 <_wcrtomb_r+0x1e>
  40d992:	bf00      	nop
  40d994:	20400028 	.word	0x20400028
  40d998:	2040086c 	.word	0x2040086c

0040d99c <__ascii_wctomb>:
  40d99c:	b121      	cbz	r1, 40d9a8 <__ascii_wctomb+0xc>
  40d99e:	2aff      	cmp	r2, #255	; 0xff
  40d9a0:	d804      	bhi.n	40d9ac <__ascii_wctomb+0x10>
  40d9a2:	700a      	strb	r2, [r1, #0]
  40d9a4:	2001      	movs	r0, #1
  40d9a6:	4770      	bx	lr
  40d9a8:	4608      	mov	r0, r1
  40d9aa:	4770      	bx	lr
  40d9ac:	238a      	movs	r3, #138	; 0x8a
  40d9ae:	6003      	str	r3, [r0, #0]
  40d9b0:	f04f 30ff 	mov.w	r0, #4294967295
  40d9b4:	4770      	bx	lr
  40d9b6:	bf00      	nop

0040d9b8 <_write_r>:
  40d9b8:	b570      	push	{r4, r5, r6, lr}
  40d9ba:	460d      	mov	r5, r1
  40d9bc:	4c08      	ldr	r4, [pc, #32]	; (40d9e0 <_write_r+0x28>)
  40d9be:	4611      	mov	r1, r2
  40d9c0:	4606      	mov	r6, r0
  40d9c2:	461a      	mov	r2, r3
  40d9c4:	4628      	mov	r0, r5
  40d9c6:	2300      	movs	r3, #0
  40d9c8:	6023      	str	r3, [r4, #0]
  40d9ca:	f7f5 fd03 	bl	4033d4 <_write>
  40d9ce:	1c43      	adds	r3, r0, #1
  40d9d0:	d000      	beq.n	40d9d4 <_write_r+0x1c>
  40d9d2:	bd70      	pop	{r4, r5, r6, pc}
  40d9d4:	6823      	ldr	r3, [r4, #0]
  40d9d6:	2b00      	cmp	r3, #0
  40d9d8:	d0fb      	beq.n	40d9d2 <_write_r+0x1a>
  40d9da:	6033      	str	r3, [r6, #0]
  40d9dc:	bd70      	pop	{r4, r5, r6, pc}
  40d9de:	bf00      	nop
  40d9e0:	20418dd0 	.word	0x20418dd0

0040d9e4 <__register_exitproc>:
  40d9e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40d9e8:	4d2c      	ldr	r5, [pc, #176]	; (40da9c <__register_exitproc+0xb8>)
  40d9ea:	4606      	mov	r6, r0
  40d9ec:	6828      	ldr	r0, [r5, #0]
  40d9ee:	4698      	mov	r8, r3
  40d9f0:	460f      	mov	r7, r1
  40d9f2:	4691      	mov	r9, r2
  40d9f4:	f7ff f898 	bl	40cb28 <__retarget_lock_acquire_recursive>
  40d9f8:	4b29      	ldr	r3, [pc, #164]	; (40daa0 <__register_exitproc+0xbc>)
  40d9fa:	681c      	ldr	r4, [r3, #0]
  40d9fc:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  40da00:	2b00      	cmp	r3, #0
  40da02:	d03e      	beq.n	40da82 <__register_exitproc+0x9e>
  40da04:	685a      	ldr	r2, [r3, #4]
  40da06:	2a1f      	cmp	r2, #31
  40da08:	dc1c      	bgt.n	40da44 <__register_exitproc+0x60>
  40da0a:	f102 0e01 	add.w	lr, r2, #1
  40da0e:	b176      	cbz	r6, 40da2e <__register_exitproc+0x4a>
  40da10:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  40da14:	2401      	movs	r4, #1
  40da16:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  40da1a:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  40da1e:	4094      	lsls	r4, r2
  40da20:	4320      	orrs	r0, r4
  40da22:	2e02      	cmp	r6, #2
  40da24:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  40da28:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  40da2c:	d023      	beq.n	40da76 <__register_exitproc+0x92>
  40da2e:	3202      	adds	r2, #2
  40da30:	f8c3 e004 	str.w	lr, [r3, #4]
  40da34:	6828      	ldr	r0, [r5, #0]
  40da36:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  40da3a:	f7ff f877 	bl	40cb2c <__retarget_lock_release_recursive>
  40da3e:	2000      	movs	r0, #0
  40da40:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40da44:	4b17      	ldr	r3, [pc, #92]	; (40daa4 <__register_exitproc+0xc0>)
  40da46:	b30b      	cbz	r3, 40da8c <__register_exitproc+0xa8>
  40da48:	f44f 70c8 	mov.w	r0, #400	; 0x190
  40da4c:	f7fa fd5c 	bl	408508 <malloc>
  40da50:	4603      	mov	r3, r0
  40da52:	b1d8      	cbz	r0, 40da8c <__register_exitproc+0xa8>
  40da54:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  40da58:	6002      	str	r2, [r0, #0]
  40da5a:	2100      	movs	r1, #0
  40da5c:	6041      	str	r1, [r0, #4]
  40da5e:	460a      	mov	r2, r1
  40da60:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  40da64:	f04f 0e01 	mov.w	lr, #1
  40da68:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  40da6c:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  40da70:	2e00      	cmp	r6, #0
  40da72:	d0dc      	beq.n	40da2e <__register_exitproc+0x4a>
  40da74:	e7cc      	b.n	40da10 <__register_exitproc+0x2c>
  40da76:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  40da7a:	430c      	orrs	r4, r1
  40da7c:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  40da80:	e7d5      	b.n	40da2e <__register_exitproc+0x4a>
  40da82:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  40da86:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  40da8a:	e7bb      	b.n	40da04 <__register_exitproc+0x20>
  40da8c:	6828      	ldr	r0, [r5, #0]
  40da8e:	f7ff f84d 	bl	40cb2c <__retarget_lock_release_recursive>
  40da92:	f04f 30ff 	mov.w	r0, #4294967295
  40da96:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40da9a:	bf00      	nop
  40da9c:	20400868 	.word	0x20400868
  40daa0:	0040f638 	.word	0x0040f638
  40daa4:	00408509 	.word	0x00408509

0040daa8 <_close_r>:
  40daa8:	b538      	push	{r3, r4, r5, lr}
  40daaa:	4c07      	ldr	r4, [pc, #28]	; (40dac8 <_close_r+0x20>)
  40daac:	2300      	movs	r3, #0
  40daae:	4605      	mov	r5, r0
  40dab0:	4608      	mov	r0, r1
  40dab2:	6023      	str	r3, [r4, #0]
  40dab4:	f7f6 ffa8 	bl	404a08 <_close>
  40dab8:	1c43      	adds	r3, r0, #1
  40daba:	d000      	beq.n	40dabe <_close_r+0x16>
  40dabc:	bd38      	pop	{r3, r4, r5, pc}
  40dabe:	6823      	ldr	r3, [r4, #0]
  40dac0:	2b00      	cmp	r3, #0
  40dac2:	d0fb      	beq.n	40dabc <_close_r+0x14>
  40dac4:	602b      	str	r3, [r5, #0]
  40dac6:	bd38      	pop	{r3, r4, r5, pc}
  40dac8:	20418dd0 	.word	0x20418dd0

0040dacc <_fclose_r>:
  40dacc:	b570      	push	{r4, r5, r6, lr}
  40dace:	b159      	cbz	r1, 40dae8 <_fclose_r+0x1c>
  40dad0:	4605      	mov	r5, r0
  40dad2:	460c      	mov	r4, r1
  40dad4:	b110      	cbz	r0, 40dadc <_fclose_r+0x10>
  40dad6:	6b83      	ldr	r3, [r0, #56]	; 0x38
  40dad8:	2b00      	cmp	r3, #0
  40dada:	d03c      	beq.n	40db56 <_fclose_r+0x8a>
  40dadc:	6e63      	ldr	r3, [r4, #100]	; 0x64
  40dade:	07d8      	lsls	r0, r3, #31
  40dae0:	d505      	bpl.n	40daee <_fclose_r+0x22>
  40dae2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40dae6:	b92b      	cbnz	r3, 40daf4 <_fclose_r+0x28>
  40dae8:	2600      	movs	r6, #0
  40daea:	4630      	mov	r0, r6
  40daec:	bd70      	pop	{r4, r5, r6, pc}
  40daee:	89a3      	ldrh	r3, [r4, #12]
  40daf0:	0599      	lsls	r1, r3, #22
  40daf2:	d53c      	bpl.n	40db6e <_fclose_r+0xa2>
  40daf4:	4621      	mov	r1, r4
  40daf6:	4628      	mov	r0, r5
  40daf8:	f7fe fb50 	bl	40c19c <__sflush_r>
  40dafc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  40dafe:	4606      	mov	r6, r0
  40db00:	b133      	cbz	r3, 40db10 <_fclose_r+0x44>
  40db02:	69e1      	ldr	r1, [r4, #28]
  40db04:	4628      	mov	r0, r5
  40db06:	4798      	blx	r3
  40db08:	2800      	cmp	r0, #0
  40db0a:	bfb8      	it	lt
  40db0c:	f04f 36ff 	movlt.w	r6, #4294967295
  40db10:	89a3      	ldrh	r3, [r4, #12]
  40db12:	061a      	lsls	r2, r3, #24
  40db14:	d422      	bmi.n	40db5c <_fclose_r+0x90>
  40db16:	6b21      	ldr	r1, [r4, #48]	; 0x30
  40db18:	b141      	cbz	r1, 40db2c <_fclose_r+0x60>
  40db1a:	f104 0340 	add.w	r3, r4, #64	; 0x40
  40db1e:	4299      	cmp	r1, r3
  40db20:	d002      	beq.n	40db28 <_fclose_r+0x5c>
  40db22:	4628      	mov	r0, r5
  40db24:	f7fe fd58 	bl	40c5d8 <_free_r>
  40db28:	2300      	movs	r3, #0
  40db2a:	6323      	str	r3, [r4, #48]	; 0x30
  40db2c:	6c61      	ldr	r1, [r4, #68]	; 0x44
  40db2e:	b121      	cbz	r1, 40db3a <_fclose_r+0x6e>
  40db30:	4628      	mov	r0, r5
  40db32:	f7fe fd51 	bl	40c5d8 <_free_r>
  40db36:	2300      	movs	r3, #0
  40db38:	6463      	str	r3, [r4, #68]	; 0x44
  40db3a:	f7fe fc53 	bl	40c3e4 <__sfp_lock_acquire>
  40db3e:	6e63      	ldr	r3, [r4, #100]	; 0x64
  40db40:	2200      	movs	r2, #0
  40db42:	07db      	lsls	r3, r3, #31
  40db44:	81a2      	strh	r2, [r4, #12]
  40db46:	d50e      	bpl.n	40db66 <_fclose_r+0x9a>
  40db48:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40db4a:	f7fe ffeb 	bl	40cb24 <__retarget_lock_close_recursive>
  40db4e:	f7fe fc4f 	bl	40c3f0 <__sfp_lock_release>
  40db52:	4630      	mov	r0, r6
  40db54:	bd70      	pop	{r4, r5, r6, pc}
  40db56:	f7fe fc19 	bl	40c38c <__sinit>
  40db5a:	e7bf      	b.n	40dadc <_fclose_r+0x10>
  40db5c:	6921      	ldr	r1, [r4, #16]
  40db5e:	4628      	mov	r0, r5
  40db60:	f7fe fd3a 	bl	40c5d8 <_free_r>
  40db64:	e7d7      	b.n	40db16 <_fclose_r+0x4a>
  40db66:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40db68:	f7fe ffe0 	bl	40cb2c <__retarget_lock_release_recursive>
  40db6c:	e7ec      	b.n	40db48 <_fclose_r+0x7c>
  40db6e:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40db70:	f7fe ffda 	bl	40cb28 <__retarget_lock_acquire_recursive>
  40db74:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40db78:	2b00      	cmp	r3, #0
  40db7a:	d1bb      	bne.n	40daf4 <_fclose_r+0x28>
  40db7c:	6e66      	ldr	r6, [r4, #100]	; 0x64
  40db7e:	f016 0601 	ands.w	r6, r6, #1
  40db82:	d1b1      	bne.n	40dae8 <_fclose_r+0x1c>
  40db84:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40db86:	f7fe ffd1 	bl	40cb2c <__retarget_lock_release_recursive>
  40db8a:	4630      	mov	r0, r6
  40db8c:	bd70      	pop	{r4, r5, r6, pc}
  40db8e:	bf00      	nop

0040db90 <_fstat_r>:
  40db90:	b538      	push	{r3, r4, r5, lr}
  40db92:	460b      	mov	r3, r1
  40db94:	4c07      	ldr	r4, [pc, #28]	; (40dbb4 <_fstat_r+0x24>)
  40db96:	4605      	mov	r5, r0
  40db98:	4611      	mov	r1, r2
  40db9a:	4618      	mov	r0, r3
  40db9c:	2300      	movs	r3, #0
  40db9e:	6023      	str	r3, [r4, #0]
  40dba0:	f7f6 ff36 	bl	404a10 <_fstat>
  40dba4:	1c43      	adds	r3, r0, #1
  40dba6:	d000      	beq.n	40dbaa <_fstat_r+0x1a>
  40dba8:	bd38      	pop	{r3, r4, r5, pc}
  40dbaa:	6823      	ldr	r3, [r4, #0]
  40dbac:	2b00      	cmp	r3, #0
  40dbae:	d0fb      	beq.n	40dba8 <_fstat_r+0x18>
  40dbb0:	602b      	str	r3, [r5, #0]
  40dbb2:	bd38      	pop	{r3, r4, r5, pc}
  40dbb4:	20418dd0 	.word	0x20418dd0

0040dbb8 <_isatty_r>:
  40dbb8:	b538      	push	{r3, r4, r5, lr}
  40dbba:	4c07      	ldr	r4, [pc, #28]	; (40dbd8 <_isatty_r+0x20>)
  40dbbc:	2300      	movs	r3, #0
  40dbbe:	4605      	mov	r5, r0
  40dbc0:	4608      	mov	r0, r1
  40dbc2:	6023      	str	r3, [r4, #0]
  40dbc4:	f7f6 ff2a 	bl	404a1c <_isatty>
  40dbc8:	1c43      	adds	r3, r0, #1
  40dbca:	d000      	beq.n	40dbce <_isatty_r+0x16>
  40dbcc:	bd38      	pop	{r3, r4, r5, pc}
  40dbce:	6823      	ldr	r3, [r4, #0]
  40dbd0:	2b00      	cmp	r3, #0
  40dbd2:	d0fb      	beq.n	40dbcc <_isatty_r+0x14>
  40dbd4:	602b      	str	r3, [r5, #0]
  40dbd6:	bd38      	pop	{r3, r4, r5, pc}
  40dbd8:	20418dd0 	.word	0x20418dd0

0040dbdc <_lseek_r>:
  40dbdc:	b570      	push	{r4, r5, r6, lr}
  40dbde:	460d      	mov	r5, r1
  40dbe0:	4c08      	ldr	r4, [pc, #32]	; (40dc04 <_lseek_r+0x28>)
  40dbe2:	4611      	mov	r1, r2
  40dbe4:	4606      	mov	r6, r0
  40dbe6:	461a      	mov	r2, r3
  40dbe8:	4628      	mov	r0, r5
  40dbea:	2300      	movs	r3, #0
  40dbec:	6023      	str	r3, [r4, #0]
  40dbee:	f7f6 ff17 	bl	404a20 <_lseek>
  40dbf2:	1c43      	adds	r3, r0, #1
  40dbf4:	d000      	beq.n	40dbf8 <_lseek_r+0x1c>
  40dbf6:	bd70      	pop	{r4, r5, r6, pc}
  40dbf8:	6823      	ldr	r3, [r4, #0]
  40dbfa:	2b00      	cmp	r3, #0
  40dbfc:	d0fb      	beq.n	40dbf6 <_lseek_r+0x1a>
  40dbfe:	6033      	str	r3, [r6, #0]
  40dc00:	bd70      	pop	{r4, r5, r6, pc}
  40dc02:	bf00      	nop
  40dc04:	20418dd0 	.word	0x20418dd0

0040dc08 <_read_r>:
  40dc08:	b570      	push	{r4, r5, r6, lr}
  40dc0a:	460d      	mov	r5, r1
  40dc0c:	4c08      	ldr	r4, [pc, #32]	; (40dc30 <_read_r+0x28>)
  40dc0e:	4611      	mov	r1, r2
  40dc10:	4606      	mov	r6, r0
  40dc12:	461a      	mov	r2, r3
  40dc14:	4628      	mov	r0, r5
  40dc16:	2300      	movs	r3, #0
  40dc18:	6023      	str	r3, [r4, #0]
  40dc1a:	f7f5 fbbd 	bl	403398 <_read>
  40dc1e:	1c43      	adds	r3, r0, #1
  40dc20:	d000      	beq.n	40dc24 <_read_r+0x1c>
  40dc22:	bd70      	pop	{r4, r5, r6, pc}
  40dc24:	6823      	ldr	r3, [r4, #0]
  40dc26:	2b00      	cmp	r3, #0
  40dc28:	d0fb      	beq.n	40dc22 <_read_r+0x1a>
  40dc2a:	6033      	str	r3, [r6, #0]
  40dc2c:	bd70      	pop	{r4, r5, r6, pc}
  40dc2e:	bf00      	nop
  40dc30:	20418dd0 	.word	0x20418dd0

0040dc34 <__aeabi_dcmpun>:
  40dc34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  40dc38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  40dc3c:	d102      	bne.n	40dc44 <__aeabi_dcmpun+0x10>
  40dc3e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  40dc42:	d10a      	bne.n	40dc5a <__aeabi_dcmpun+0x26>
  40dc44:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  40dc48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  40dc4c:	d102      	bne.n	40dc54 <__aeabi_dcmpun+0x20>
  40dc4e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  40dc52:	d102      	bne.n	40dc5a <__aeabi_dcmpun+0x26>
  40dc54:	f04f 0000 	mov.w	r0, #0
  40dc58:	4770      	bx	lr
  40dc5a:	f04f 0001 	mov.w	r0, #1
  40dc5e:	4770      	bx	lr

0040dc60 <__aeabi_uldivmod>:
  40dc60:	b953      	cbnz	r3, 40dc78 <__aeabi_uldivmod+0x18>
  40dc62:	b94a      	cbnz	r2, 40dc78 <__aeabi_uldivmod+0x18>
  40dc64:	2900      	cmp	r1, #0
  40dc66:	bf08      	it	eq
  40dc68:	2800      	cmpeq	r0, #0
  40dc6a:	bf1c      	itt	ne
  40dc6c:	f04f 31ff 	movne.w	r1, #4294967295
  40dc70:	f04f 30ff 	movne.w	r0, #4294967295
  40dc74:	f000 b97a 	b.w	40df6c <__aeabi_idiv0>
  40dc78:	f1ad 0c08 	sub.w	ip, sp, #8
  40dc7c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  40dc80:	f000 f806 	bl	40dc90 <__udivmoddi4>
  40dc84:	f8dd e004 	ldr.w	lr, [sp, #4]
  40dc88:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  40dc8c:	b004      	add	sp, #16
  40dc8e:	4770      	bx	lr

0040dc90 <__udivmoddi4>:
  40dc90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  40dc94:	468c      	mov	ip, r1
  40dc96:	460d      	mov	r5, r1
  40dc98:	4604      	mov	r4, r0
  40dc9a:	9e08      	ldr	r6, [sp, #32]
  40dc9c:	2b00      	cmp	r3, #0
  40dc9e:	d151      	bne.n	40dd44 <__udivmoddi4+0xb4>
  40dca0:	428a      	cmp	r2, r1
  40dca2:	4617      	mov	r7, r2
  40dca4:	d96d      	bls.n	40dd82 <__udivmoddi4+0xf2>
  40dca6:	fab2 fe82 	clz	lr, r2
  40dcaa:	f1be 0f00 	cmp.w	lr, #0
  40dcae:	d00b      	beq.n	40dcc8 <__udivmoddi4+0x38>
  40dcb0:	f1ce 0c20 	rsb	ip, lr, #32
  40dcb4:	fa01 f50e 	lsl.w	r5, r1, lr
  40dcb8:	fa20 fc0c 	lsr.w	ip, r0, ip
  40dcbc:	fa02 f70e 	lsl.w	r7, r2, lr
  40dcc0:	ea4c 0c05 	orr.w	ip, ip, r5
  40dcc4:	fa00 f40e 	lsl.w	r4, r0, lr
  40dcc8:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  40dccc:	0c25      	lsrs	r5, r4, #16
  40dcce:	fbbc f8fa 	udiv	r8, ip, sl
  40dcd2:	fa1f f987 	uxth.w	r9, r7
  40dcd6:	fb0a cc18 	mls	ip, sl, r8, ip
  40dcda:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  40dcde:	fb08 f309 	mul.w	r3, r8, r9
  40dce2:	42ab      	cmp	r3, r5
  40dce4:	d90a      	bls.n	40dcfc <__udivmoddi4+0x6c>
  40dce6:	19ed      	adds	r5, r5, r7
  40dce8:	f108 32ff 	add.w	r2, r8, #4294967295
  40dcec:	f080 8123 	bcs.w	40df36 <__udivmoddi4+0x2a6>
  40dcf0:	42ab      	cmp	r3, r5
  40dcf2:	f240 8120 	bls.w	40df36 <__udivmoddi4+0x2a6>
  40dcf6:	f1a8 0802 	sub.w	r8, r8, #2
  40dcfa:	443d      	add	r5, r7
  40dcfc:	1aed      	subs	r5, r5, r3
  40dcfe:	b2a4      	uxth	r4, r4
  40dd00:	fbb5 f0fa 	udiv	r0, r5, sl
  40dd04:	fb0a 5510 	mls	r5, sl, r0, r5
  40dd08:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  40dd0c:	fb00 f909 	mul.w	r9, r0, r9
  40dd10:	45a1      	cmp	r9, r4
  40dd12:	d909      	bls.n	40dd28 <__udivmoddi4+0x98>
  40dd14:	19e4      	adds	r4, r4, r7
  40dd16:	f100 33ff 	add.w	r3, r0, #4294967295
  40dd1a:	f080 810a 	bcs.w	40df32 <__udivmoddi4+0x2a2>
  40dd1e:	45a1      	cmp	r9, r4
  40dd20:	f240 8107 	bls.w	40df32 <__udivmoddi4+0x2a2>
  40dd24:	3802      	subs	r0, #2
  40dd26:	443c      	add	r4, r7
  40dd28:	eba4 0409 	sub.w	r4, r4, r9
  40dd2c:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  40dd30:	2100      	movs	r1, #0
  40dd32:	2e00      	cmp	r6, #0
  40dd34:	d061      	beq.n	40ddfa <__udivmoddi4+0x16a>
  40dd36:	fa24 f40e 	lsr.w	r4, r4, lr
  40dd3a:	2300      	movs	r3, #0
  40dd3c:	6034      	str	r4, [r6, #0]
  40dd3e:	6073      	str	r3, [r6, #4]
  40dd40:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40dd44:	428b      	cmp	r3, r1
  40dd46:	d907      	bls.n	40dd58 <__udivmoddi4+0xc8>
  40dd48:	2e00      	cmp	r6, #0
  40dd4a:	d054      	beq.n	40ddf6 <__udivmoddi4+0x166>
  40dd4c:	2100      	movs	r1, #0
  40dd4e:	e886 0021 	stmia.w	r6, {r0, r5}
  40dd52:	4608      	mov	r0, r1
  40dd54:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40dd58:	fab3 f183 	clz	r1, r3
  40dd5c:	2900      	cmp	r1, #0
  40dd5e:	f040 808e 	bne.w	40de7e <__udivmoddi4+0x1ee>
  40dd62:	42ab      	cmp	r3, r5
  40dd64:	d302      	bcc.n	40dd6c <__udivmoddi4+0xdc>
  40dd66:	4282      	cmp	r2, r0
  40dd68:	f200 80fa 	bhi.w	40df60 <__udivmoddi4+0x2d0>
  40dd6c:	1a84      	subs	r4, r0, r2
  40dd6e:	eb65 0503 	sbc.w	r5, r5, r3
  40dd72:	2001      	movs	r0, #1
  40dd74:	46ac      	mov	ip, r5
  40dd76:	2e00      	cmp	r6, #0
  40dd78:	d03f      	beq.n	40ddfa <__udivmoddi4+0x16a>
  40dd7a:	e886 1010 	stmia.w	r6, {r4, ip}
  40dd7e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40dd82:	b912      	cbnz	r2, 40dd8a <__udivmoddi4+0xfa>
  40dd84:	2701      	movs	r7, #1
  40dd86:	fbb7 f7f2 	udiv	r7, r7, r2
  40dd8a:	fab7 fe87 	clz	lr, r7
  40dd8e:	f1be 0f00 	cmp.w	lr, #0
  40dd92:	d134      	bne.n	40ddfe <__udivmoddi4+0x16e>
  40dd94:	1beb      	subs	r3, r5, r7
  40dd96:	0c3a      	lsrs	r2, r7, #16
  40dd98:	fa1f fc87 	uxth.w	ip, r7
  40dd9c:	2101      	movs	r1, #1
  40dd9e:	fbb3 f8f2 	udiv	r8, r3, r2
  40dda2:	0c25      	lsrs	r5, r4, #16
  40dda4:	fb02 3318 	mls	r3, r2, r8, r3
  40dda8:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  40ddac:	fb0c f308 	mul.w	r3, ip, r8
  40ddb0:	42ab      	cmp	r3, r5
  40ddb2:	d907      	bls.n	40ddc4 <__udivmoddi4+0x134>
  40ddb4:	19ed      	adds	r5, r5, r7
  40ddb6:	f108 30ff 	add.w	r0, r8, #4294967295
  40ddba:	d202      	bcs.n	40ddc2 <__udivmoddi4+0x132>
  40ddbc:	42ab      	cmp	r3, r5
  40ddbe:	f200 80d1 	bhi.w	40df64 <__udivmoddi4+0x2d4>
  40ddc2:	4680      	mov	r8, r0
  40ddc4:	1aed      	subs	r5, r5, r3
  40ddc6:	b2a3      	uxth	r3, r4
  40ddc8:	fbb5 f0f2 	udiv	r0, r5, r2
  40ddcc:	fb02 5510 	mls	r5, r2, r0, r5
  40ddd0:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  40ddd4:	fb0c fc00 	mul.w	ip, ip, r0
  40ddd8:	45a4      	cmp	ip, r4
  40ddda:	d907      	bls.n	40ddec <__udivmoddi4+0x15c>
  40dddc:	19e4      	adds	r4, r4, r7
  40ddde:	f100 33ff 	add.w	r3, r0, #4294967295
  40dde2:	d202      	bcs.n	40ddea <__udivmoddi4+0x15a>
  40dde4:	45a4      	cmp	ip, r4
  40dde6:	f200 80b8 	bhi.w	40df5a <__udivmoddi4+0x2ca>
  40ddea:	4618      	mov	r0, r3
  40ddec:	eba4 040c 	sub.w	r4, r4, ip
  40ddf0:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  40ddf4:	e79d      	b.n	40dd32 <__udivmoddi4+0xa2>
  40ddf6:	4631      	mov	r1, r6
  40ddf8:	4630      	mov	r0, r6
  40ddfa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40ddfe:	f1ce 0420 	rsb	r4, lr, #32
  40de02:	fa05 f30e 	lsl.w	r3, r5, lr
  40de06:	fa07 f70e 	lsl.w	r7, r7, lr
  40de0a:	fa20 f804 	lsr.w	r8, r0, r4
  40de0e:	0c3a      	lsrs	r2, r7, #16
  40de10:	fa25 f404 	lsr.w	r4, r5, r4
  40de14:	ea48 0803 	orr.w	r8, r8, r3
  40de18:	fbb4 f1f2 	udiv	r1, r4, r2
  40de1c:	ea4f 4518 	mov.w	r5, r8, lsr #16
  40de20:	fb02 4411 	mls	r4, r2, r1, r4
  40de24:	fa1f fc87 	uxth.w	ip, r7
  40de28:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  40de2c:	fb01 f30c 	mul.w	r3, r1, ip
  40de30:	42ab      	cmp	r3, r5
  40de32:	fa00 f40e 	lsl.w	r4, r0, lr
  40de36:	d909      	bls.n	40de4c <__udivmoddi4+0x1bc>
  40de38:	19ed      	adds	r5, r5, r7
  40de3a:	f101 30ff 	add.w	r0, r1, #4294967295
  40de3e:	f080 808a 	bcs.w	40df56 <__udivmoddi4+0x2c6>
  40de42:	42ab      	cmp	r3, r5
  40de44:	f240 8087 	bls.w	40df56 <__udivmoddi4+0x2c6>
  40de48:	3902      	subs	r1, #2
  40de4a:	443d      	add	r5, r7
  40de4c:	1aeb      	subs	r3, r5, r3
  40de4e:	fa1f f588 	uxth.w	r5, r8
  40de52:	fbb3 f0f2 	udiv	r0, r3, r2
  40de56:	fb02 3310 	mls	r3, r2, r0, r3
  40de5a:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  40de5e:	fb00 f30c 	mul.w	r3, r0, ip
  40de62:	42ab      	cmp	r3, r5
  40de64:	d907      	bls.n	40de76 <__udivmoddi4+0x1e6>
  40de66:	19ed      	adds	r5, r5, r7
  40de68:	f100 38ff 	add.w	r8, r0, #4294967295
  40de6c:	d26f      	bcs.n	40df4e <__udivmoddi4+0x2be>
  40de6e:	42ab      	cmp	r3, r5
  40de70:	d96d      	bls.n	40df4e <__udivmoddi4+0x2be>
  40de72:	3802      	subs	r0, #2
  40de74:	443d      	add	r5, r7
  40de76:	1aeb      	subs	r3, r5, r3
  40de78:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  40de7c:	e78f      	b.n	40dd9e <__udivmoddi4+0x10e>
  40de7e:	f1c1 0720 	rsb	r7, r1, #32
  40de82:	fa22 f807 	lsr.w	r8, r2, r7
  40de86:	408b      	lsls	r3, r1
  40de88:	fa05 f401 	lsl.w	r4, r5, r1
  40de8c:	ea48 0303 	orr.w	r3, r8, r3
  40de90:	fa20 fe07 	lsr.w	lr, r0, r7
  40de94:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  40de98:	40fd      	lsrs	r5, r7
  40de9a:	ea4e 0e04 	orr.w	lr, lr, r4
  40de9e:	fbb5 f9fc 	udiv	r9, r5, ip
  40dea2:	ea4f 441e 	mov.w	r4, lr, lsr #16
  40dea6:	fb0c 5519 	mls	r5, ip, r9, r5
  40deaa:	fa1f f883 	uxth.w	r8, r3
  40deae:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  40deb2:	fb09 f408 	mul.w	r4, r9, r8
  40deb6:	42ac      	cmp	r4, r5
  40deb8:	fa02 f201 	lsl.w	r2, r2, r1
  40debc:	fa00 fa01 	lsl.w	sl, r0, r1
  40dec0:	d908      	bls.n	40ded4 <__udivmoddi4+0x244>
  40dec2:	18ed      	adds	r5, r5, r3
  40dec4:	f109 30ff 	add.w	r0, r9, #4294967295
  40dec8:	d243      	bcs.n	40df52 <__udivmoddi4+0x2c2>
  40deca:	42ac      	cmp	r4, r5
  40decc:	d941      	bls.n	40df52 <__udivmoddi4+0x2c2>
  40dece:	f1a9 0902 	sub.w	r9, r9, #2
  40ded2:	441d      	add	r5, r3
  40ded4:	1b2d      	subs	r5, r5, r4
  40ded6:	fa1f fe8e 	uxth.w	lr, lr
  40deda:	fbb5 f0fc 	udiv	r0, r5, ip
  40dede:	fb0c 5510 	mls	r5, ip, r0, r5
  40dee2:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  40dee6:	fb00 f808 	mul.w	r8, r0, r8
  40deea:	45a0      	cmp	r8, r4
  40deec:	d907      	bls.n	40defe <__udivmoddi4+0x26e>
  40deee:	18e4      	adds	r4, r4, r3
  40def0:	f100 35ff 	add.w	r5, r0, #4294967295
  40def4:	d229      	bcs.n	40df4a <__udivmoddi4+0x2ba>
  40def6:	45a0      	cmp	r8, r4
  40def8:	d927      	bls.n	40df4a <__udivmoddi4+0x2ba>
  40defa:	3802      	subs	r0, #2
  40defc:	441c      	add	r4, r3
  40defe:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  40df02:	eba4 0408 	sub.w	r4, r4, r8
  40df06:	fba0 8902 	umull	r8, r9, r0, r2
  40df0a:	454c      	cmp	r4, r9
  40df0c:	46c6      	mov	lr, r8
  40df0e:	464d      	mov	r5, r9
  40df10:	d315      	bcc.n	40df3e <__udivmoddi4+0x2ae>
  40df12:	d012      	beq.n	40df3a <__udivmoddi4+0x2aa>
  40df14:	b156      	cbz	r6, 40df2c <__udivmoddi4+0x29c>
  40df16:	ebba 030e 	subs.w	r3, sl, lr
  40df1a:	eb64 0405 	sbc.w	r4, r4, r5
  40df1e:	fa04 f707 	lsl.w	r7, r4, r7
  40df22:	40cb      	lsrs	r3, r1
  40df24:	431f      	orrs	r7, r3
  40df26:	40cc      	lsrs	r4, r1
  40df28:	6037      	str	r7, [r6, #0]
  40df2a:	6074      	str	r4, [r6, #4]
  40df2c:	2100      	movs	r1, #0
  40df2e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40df32:	4618      	mov	r0, r3
  40df34:	e6f8      	b.n	40dd28 <__udivmoddi4+0x98>
  40df36:	4690      	mov	r8, r2
  40df38:	e6e0      	b.n	40dcfc <__udivmoddi4+0x6c>
  40df3a:	45c2      	cmp	sl, r8
  40df3c:	d2ea      	bcs.n	40df14 <__udivmoddi4+0x284>
  40df3e:	ebb8 0e02 	subs.w	lr, r8, r2
  40df42:	eb69 0503 	sbc.w	r5, r9, r3
  40df46:	3801      	subs	r0, #1
  40df48:	e7e4      	b.n	40df14 <__udivmoddi4+0x284>
  40df4a:	4628      	mov	r0, r5
  40df4c:	e7d7      	b.n	40defe <__udivmoddi4+0x26e>
  40df4e:	4640      	mov	r0, r8
  40df50:	e791      	b.n	40de76 <__udivmoddi4+0x1e6>
  40df52:	4681      	mov	r9, r0
  40df54:	e7be      	b.n	40ded4 <__udivmoddi4+0x244>
  40df56:	4601      	mov	r1, r0
  40df58:	e778      	b.n	40de4c <__udivmoddi4+0x1bc>
  40df5a:	3802      	subs	r0, #2
  40df5c:	443c      	add	r4, r7
  40df5e:	e745      	b.n	40ddec <__udivmoddi4+0x15c>
  40df60:	4608      	mov	r0, r1
  40df62:	e708      	b.n	40dd76 <__udivmoddi4+0xe6>
  40df64:	f1a8 0802 	sub.w	r8, r8, #2
  40df68:	443d      	add	r5, r7
  40df6a:	e72b      	b.n	40ddc4 <__udivmoddi4+0x134>

0040df6c <__aeabi_idiv0>:
  40df6c:	4770      	bx	lr
  40df6e:	bf00      	nop
  40df70:	092d452d 	.word	0x092d452d
  40df74:	39384d57 	.word	0x39384d57
  40df78:	69203430 	.word	0x69203430
  40df7c:	6974696e 	.word	0x6974696e
  40df80:	7a696c61 	.word	0x7a696c61
  40df84:	6f697461 	.word	0x6f697461
  40df88:	6166206e 	.word	0x6166206e
  40df8c:	64656c69 	.word	0x64656c69
  40df90:	00000d2e 	.word	0x00000d2e
  40df94:	39384d57 	.word	0x39384d57
  40df98:	6e203430 	.word	0x6e203430
  40df9c:	6620746f 	.word	0x6620746f
  40dfa0:	646e756f 	.word	0x646e756f
  40dfa4:	000d0a21 	.word	0x000d0a21
  40dfa8:	0a05000d 	.word	0x0a05000d
  40dfac:	0000004b 	.word	0x0000004b
  40dfb0:	00001932 	.word	0x00001932
  40dfb4:	0e00008b 	.word	0x0e00008b
  40dfb8:	32800008 	.word	0x32800008
  40dfbc:	030a0205 	.word	0x030a0205
  40dfc0:	0f022003 	.word	0x0f022003
  40dfc4:	00000a0f 	.word	0x00000a0f
  40dfc8:	18180000 	.word	0x18180000
  40dfcc:	00002020 	.word	0x00002020
  40dfd0:	0a000000 	.word	0x0a000000
  40dfd4:	02020000 	.word	0x02020000
  40dfd8:	18180000 	.word	0x18180000
  40dfdc:	00030000 	.word	0x00030000
  40dfe0:	00000000 	.word	0x00000000
  40dfe4:	18010002 	.word	0x18010002
  40dfe8:	1e1e1e1e 	.word	0x1e1e1e1e
  40dfec:	1e1e1e1e 	.word	0x1e1e1e1e
  40dff0:	1e1e1e1e 	.word	0x1e1e1e1e
  40dff4:	00001e1e 	.word	0x00001e1e
	...

0040e008 <CSWTCH.7>:
  40e008:	00000100 00000300 00000200              ............

0040e014 <hanning>:
  40e014:	00000000 371e38d8 381e3877 38b1fece     .....8.7w8.8...8
  40e024:	391e36ef 3977340c 39b1faf0 39f23daf     .6.9.4w9...9.=.9
  40e034:	3a1e30d3 3a48330e 3a772520 3a95834b     .0.:.3H: %w:K..:
  40e044:	3ab1eb78 3ad0cad1 3af22108 3b0af6e6     x..:...:.!.:...;
  40e054:	3b1e1863 3b3274ca 3b480bea 3b5edd8d     c..;.t2;..H;..^;
  40e064:	3b76e97a 3b8817bb 3b9557a2 3ba33451     z.v;...;.W.;Q4.;
  40e074:	3bb1ada5 3bc0c37a 3bd075ac 3be0c413     ...;z..;.u.;...;
  40e084:	3bf1ae87 3c019a6f 3c0aab77 3c140a45     ...;o..<w..<E..<
  40e094:	3c1db6c1 3c27b0d3 3c31f863 3c3c8d58     ...<..'<c.1<X.<<
  40e0a4:	3c476f97 3c529f05 3c5e1b88 3c69e501     .oG<..R<..^<..i<
  40e0b4:	3c75fb56 3c812f32 3c878709 3c8e051f     V.u<2/.<...<...<
  40e0c4:	3c94a964 3c9b73c8 3ca26439 3ca97aa8     d..<.s.<9d.<.z.<
  40e0d4:	3cb0b701 3cb81934 3cbfa12e 3cc74edd     ...<4..<...<.N.<
  40e0e4:	3ccf222d 3cd71b0b 3cdf3963 3ce77d22     -".<...<c9.<"}.<
  40e0f4:	3cefe633 3cf87481 3d0093fb 3d050040     3..<.t.<...=@..=
  40e104:	3d097f02 3d0e1038 3d12b3d5 3d1769cf     ...=8..=...=.i.=
  40e114:	3d1c321a 3d210caa 3d25f972 3d2af868     .2.=..!=r.%=h.*=
  40e124:	3d30097e 3d352ca8 3d3a61d8 3d3fa904     ~.0=.,5=.a:=..?=
  40e134:	3d45021c 3d4a6d15 3d4fe9e0 3d557871     ..E=.mJ=..O=qxU=
  40e144:	3d5b18b9 3d60caaa 3d668e36 3d6c6350     ..[=..`=6.f=Pcl=
  40e154:	3d7249e8 3d7841f1 3d7e4b5b 3d82330c     .Ir=.Ax=[K~=.3.=
  40e164:	3d85490b 3d8867a5 3d8b8ed2 3d8ebe88     .I.=.g.=...=...=
  40e174:	3d91f6c2 3d953776 3d98809d 3d9bd22e     ...=v7.=...=...=
  40e184:	3d9f2c21 3da28e6f 3da5f90e 3da96bf7     !,.=o..=...=.k.=
  40e194:	3dace720 3db06a82 3db3f612 3db789ca      ..=.j.=...=...=
  40e1a4:	3dbb259f 3dbec989 3dc2757f 3dc62978     .%.=...=.u.=x).=
  40e1b4:	3dc9e56b 3dcda94d 3dd17517 3dd548bf     k..=M..=.u.=.H.=
  40e1c4:	3dd9243c 3ddd0783 3de0f28a 3de4e549     <$.=...=...=I..=
  40e1d4:	3de8dfb5 3dece1c7 3df0eb71 3df4fcac     ...=...=q..=...=
  40e1e4:	3df9156d 3dfd35a8 3e00aeab 3e02c636     m..=.5.=...>6..>
  40e1f4:	3e04e16f 3e070051 3e0922d8 3e0b48fd     o..>Q..>.".>.H.>
  40e204:	3e0d72bb 3e0fa00e 3e11d0ef 3e14055a     .r.>...>...>Z..>
  40e214:	3e163d48 3e1878b5 3e1ab79b 3e1cf9f4     H=.>.x.>...>...>
  40e224:	3e1f3fba 3e2188e9 3e23d57a 3e262568     .?.>..!>z.#>h%&>
  40e234:	3e2878ad 3e2acf43 3e2d2925 3e2f864c     .x(>C.*>%)->L./>
  40e244:	3e31e6b3 3e344a54 3e36b12a 3e391b2d     ..1>TJ4>*.6>-.9>
  40e254:	3e3b8858 3e3df8a6 3e406c10 3e42e290     X.;>..=>.l@>..B>
  40e264:	3e455c1f 3e47d8b9 3e4a5856 3e4cdaf1     .\E>..G>VXJ>..L>
  40e274:	3e4f6084 3e51e907 3e547475 3e5702c8     .`O>..Q>utT>..W>
  40e284:	3e5993f9 3e5c2802 3e5ebedc 3e615881     ..Y>.(\>..^>.Xa>
  40e294:	3e63f4eb 3e669414 3e6935f4 3e6bda85     ..c>..f>.5i>..k>
  40e2a4:	3e6e81c1 3e712ba1 3e73d81f 3e768733     ..n>.+q>..s>3.v>
  40e2b4:	3e7938d8 3e7bed07 3e7ea3b8 3e80ae73     .8y>..{>..~>s..>
  40e2c4:	3e820c45 3e836b4e 3e84cb8b 3e862cf8     E..>Nk.>...>.,.>
  40e2d4:	3e878f93 3e88f358 3e8a5842 3e8bbe50     ...>X..>BX.>P..>
  40e2e4:	3e8d257d 3e8e8dc6 3e8ff728 3e91619e     }%.>...>(..>.a.>
  40e2f4:	3e92cd26 3e9439bc 3e95a75d 3e971604     &..>.9.>]..>...>
  40e304:	3e9885af 3e99f659 3e9b6800 3e9cda9f     ...>Y..>.h.>...>
  40e314:	3e9e4e34 3e9fc2ba 3ea1382e 3ea2ae8c     4N.>...>.8.>...>
  40e324:	3ea425d1 3ea59df9 3ea71701 3ea890e4     .%.>...>...>...>
  40e334:	3eaa0ba0 3eab8730 3ead0390 3eae80be     ...>0..>...>...>
  40e344:	3eaffeb6 3eb17d73 3eb2fcf2 3eb47d30     ...>s}.>...>0}.>
  40e354:	3eb5fe29 3eb77fd8 3eb9023b 3eba854d     )..>...>;..>M..>
  40e364:	3ebc090b 3ebd8d71 3ebf127b 3ec09826     ...>q..>{..>&..>
  40e374:	3ec21e6d 3ec3a54d 3ec52cc3 3ec6b4ca     m..>M..>.,.>...>
  40e384:	3ec83d5f 3ec9c67d 3ecb5022 3eccda49     _=.>}..>"P.>I..>
  40e394:	3ece64ee 3ecff00e 3ed17ba5 3ed307af     .d.>...>.{.>...>
  40e3a4:	3ed49428 3ed6210c 3ed7ae58 3ed93c07     (..>.!.>X..>.<.>
  40e3b4:	3edaca17 3edc5882 3edde746 3edf765d     ...>.X.>F..>]v.>
  40e3c4:	3ee105c6 3ee2957a 3ee42578 3ee5b5ba     ...>z..>x%.>...>
  40e3d4:	3ee7463e 3ee8d6fe 3eea67f8 3eebf927     >F.>...>.g.>'..>
  40e3e4:	3eed8a88 3eef1c16 3ef0adce 3ef23fac     ...>...>...>.?.>
  40e3f4:	3ef3d1ac 3ef563ca 3ef6f602 3ef88851     ...>.c.>...>Q..>
  40e404:	3efa1ab2 3efbad22 3efd3f9c 3efed21d     ...>"..>.?.>...>
  40e414:	3f003251 3f00fb92 3f01c4d1 3f028e0c     Q2.?...?...?...?
  40e424:	3f035740 3f04206d 3f04e98e 3f05b2a4     @W.?m .?...?...?
  40e434:	3f067bac 3f0744a4 3f080d89 3f08d65b     .{.?.D.?...?[..?
  40e444:	3f099f17 3f0a67bb 3f0b3046 3f0bf8b5     ...?.g.?F0.?...?
  40e454:	3f0cc106 3f0d8938 3f0e5148 3f0f1935     ...?8..?HQ.?5..?
  40e464:	3f0fe0fc 3f10a89c 3f117013 3f12375f     ...?...?.p.?_7.?
  40e474:	3f12fe7e 3f13c56e 3f148c2d 3f1552ba     ~..?n..?-..?.R.?
  40e484:	3f161911 3f16df32 3f17a51a 3f186ac8     ...?2..?...?.j.?
  40e494:	3f19303a 3f19f56d 3f1aba60 3f1b7f11     :0.?m..?`..?...?
  40e4a4:	3f1c437e 3f1d07a6 3f1dcb85 3f1e8f1b     ~C.?...?...?...?
  40e4b4:	3f1f5265 3f201562 3f20d80f 3f219a6c     eR.?b. ?.. ?l.!?
  40e4c4:	3f225c75 3f231e29 3f23df86 3f24a08b     u\"?).#?..#?..$?
  40e4d4:	3f256135 3f262183 3f26e173 3f27a102     5a%?.!&?s.&?..'?
  40e4e4:	3f28602f 3f291ef9 3f29dd5d 3f2a9b59     /`(?..)?].)?Y.*?
  40e4f4:	3f2b58ec 3f2c1614 3f2cd2cf 3f2d8f1b     .X+?..,?..,?..-?
  40e504:	3f2e4af7 3f2f0660 3f2fc155 3f307bd4     .J.?`./?U./?.{0?
  40e514:	3f3135da 3f31ef68 3f32a879 3f33610e     .51?h.1?y.2?.a3?
  40e524:	3f341923 3f34d0b8 3f3587ca 3f363e58     #.4?..4?..5?X>6?
  40e534:	3f36f460 3f37a9e0 3f385ed6 3f391341     `.6?..7?.^8?A.9?
  40e544:	3f39c71f 3f3a7a6d 3f3b2d2c 3f3bdf58     ..9?mz:?,-;?X.;?
  40e554:	3f3c90f0 3f3d41f2 3f3df25d 3f3ea22f     ..<?.A=?].=?/.>?
  40e564:	3f3f5166 3f400000 3f40adfc 3f415b58     fQ??..@?..@?X[A?
  40e574:	3f420813 3f42b42a 3f435f9d 3f440a69     ..B?*.B?._C?i.D?
  40e584:	3f44b48c 3f455e06 3f4606d5 3f46aef6     ..D?.^E?..F?..F?
  40e594:	3f475668 3f47fd2b 3f48a33b 3f494897     hVG?+.G?;.H?.HI?
  40e5a4:	3f49ed3f 3f4a912f 3f4b3468 3f4bd6e6     ?.I?/.J?h4K?..K?
  40e5b4:	3f4c78a9 3f4d19af 3f4db9f6 3f4e597d     .xL?..M?..M?}YN?
  40e5c4:	3f4ef843 3f4f9645 3f503382 3f50cff9     C.N?E.O?.3P?..P?
  40e5d4:	3f516ba8 3f52068f 3f52a0aa 3f5339f9     .kQ?..R?..R?.9S?
  40e5e4:	3f53d27a 3f546a2c 3f55010d 3f55971c     z.S?,jT?..U?..U?
  40e5f4:	3f562c58 3f56c0bf 3f57544f 3f57e707     X,V?..V?OTW?..W?
  40e604:	3f5878e6 3f5909ea 3f599a12 3f5a295c     .xX?..Y?..Y?\)Z?
  40e614:	3f5ab7c8 3f5b4553 3f5bd1fd 3f5c5dc3     ..Z?SE[?..[?.]\?
  40e624:	3f5ce8a6 3f5d72a2 3f5dfbb8 3f5e83e5     ..\?.r]?..]?..^?
  40e634:	3f5f0b29 3f5f9181 3f6016ee 3f609b6c     )._?.._?..`?l.`?
  40e644:	3f611efc 3f61a19c 3f62234b 3f62a407     ..a?..a?K#b?..b?
  40e654:	3f6323cf 3f63a2a2 3f64207e 3f649d63     .#c?..c?~ d?c.d?
  40e664:	3f651950 3f659442 3f660e39 3f668734     P.e?B.e?9.f?4.f?
  40e674:	3f66ff32 3f677631 3f67ec30 3f68612e     2.f?1vg?0.g?.ah?
  40e684:	3f68d52a 3f694823 3f69ba17 3f6a2b07     *.h?#Hi?..i?.+j?
  40e694:	3f6a9aef 3f6b09d1 3f6b77a9 3f6be478     ..j?..k?.wk?x.k?
  40e6a4:	3f6c503d 3f6cbaf5 3f6d24a1 3f6d8d3e     =Pl?..l?.$m?>.m?
  40e6b4:	3f6df4cd 3f6e5b4c 3f6ec0bb 3f6f2517     ..m?L[n?..n?.%o?
  40e6c4:	3f6f8861 3f6fea97 3f704bb8 3f70abc4     a.o?..o?.Kp?..p?
  40e6d4:	3f710ab9 3f716897 3f71c55c 3f722108     ..q?.hq?\.q?.!r?
  40e6e4:	3f727b9a 3f72d511 3f732d6c 3f7384aa     .{r?..r?l-s?..s?
  40e6f4:	3f73dacb 3f742fcd 3f7483b0 3f74d673     ..s?./t?..t?s.t?
  40e704:	3f752815 3f757895 3f75c7f4 3f76162e     .(u?.xu?..u?..v?
  40e714:	3f766345 3f76af38 3f76fa04 3f7743ab     Ecv?8.v?..v?.Cw?
  40e724:	3f778c2b 3f77d383 3f7819b3 3f785eba     +.w?..w?..x?.^x?
  40e734:	3f78a298 3f78e54b 3f7926d4 3f796731     ..x?K.x?.&y?1gy?
  40e744:	3f79a661 3f79e465 3f7a213c 3f7a5ce5     a.y?e.y?<!z?.\z?
  40e754:	3f7a975f 3f7ad0aa 3f7b08c6 3f7b3fb1     _.z?..z?..{?.?{?
  40e764:	3f7b756c 3f7ba9f6 3f7bdd4d 3f7c0f73     lu{?..{?M.{?s.|?
  40e774:	3f7c4066 3f7c7025 3f7c9eb1 3f7ccc09     f@|?%p|?..|?..|?
  40e784:	3f7cf82d 3f7d231b 3f7d4cd4 3f7d7558     -.|?.#}?.L}?Xu}?
  40e794:	3f7d9ca5 3f7dc2bb 3f7de79b 3f7e0b44     ..}?..}?..}?D.~?
  40e7a4:	3f7e2db4 3f7e4eed 3f7e6eee 3f7e8db6     .-~?.N~?.n~?..~?
  40e7b4:	3f7eab45 3f7ec79b 3f7ee2b8 3f7efc9b     E.~?..~?..~?..~?
  40e7c4:	3f7f1544 3f7f2cb3 3f7f42e7 3f7f57e1     D..?.,.?.B.?.W.?
  40e7d4:	3f7f6ba0 3f7f7e24 3f7f8f6c 3f7f9f7a     .k.?$~.?l..?z..?
  40e7e4:	3f7fae4c 3f7fbbe2 3f7fc83c 3f7fd35b     L..?...?<..?[..?
  40e7f4:	3f7fdd3e 3f7fe5e4 3f7fed4e 3f7ff37c     >..?...?N..?|..?
  40e804:	3f7ff86e 3f7ffc23 3f7ffe9c 3f7fffd8     n..?#..?...?...?
  40e814:	3f7fffd8 3f7ffe9c 3f7ffc23 3f7ff86e     ...?...?#..?n..?
  40e824:	3f7ff37c 3f7fed4e 3f7fe5e4 3f7fdd3e     |..?N..?...?>..?
  40e834:	3f7fd35b 3f7fc83c 3f7fbbe2 3f7fae4c     [..?<..?...?L..?
  40e844:	3f7f9f7a 3f7f8f6c 3f7f7e24 3f7f6ba0     z..?l..?$~.?.k.?
  40e854:	3f7f57e1 3f7f42e7 3f7f2cb3 3f7f1544     .W.?.B.?.,.?D..?
  40e864:	3f7efc9b 3f7ee2b8 3f7ec79b 3f7eab45     ..~?..~?..~?E.~?
  40e874:	3f7e8db6 3f7e6eee 3f7e4eed 3f7e2db4     ..~?.n~?.N~?.-~?
  40e884:	3f7e0b44 3f7de79b 3f7dc2bb 3f7d9ca5     D.~?..}?..}?..}?
  40e894:	3f7d7558 3f7d4cd4 3f7d231b 3f7cf82d     Xu}?.L}?.#}?-.|?
  40e8a4:	3f7ccc09 3f7c9eb1 3f7c7025 3f7c4066     ..|?..|?%p|?f@|?
  40e8b4:	3f7c0f73 3f7bdd4d 3f7ba9f6 3f7b756c     s.|?M.{?..{?lu{?
  40e8c4:	3f7b3fb1 3f7b08c6 3f7ad0aa 3f7a975f     .?{?..{?..z?_.z?
  40e8d4:	3f7a5ce5 3f7a213c 3f79e465 3f79a661     .\z?<!z?e.y?a.y?
  40e8e4:	3f796731 3f7926d4 3f78e54b 3f78a298     1gy?.&y?K.x?..x?
  40e8f4:	3f785eba 3f7819b3 3f77d383 3f778c2b     .^x?..x?..w?+.w?
  40e904:	3f7743ab 3f76fa04 3f76af38 3f766345     .Cw?..v?8.v?Ecv?
  40e914:	3f76162e 3f75c7f4 3f757895 3f752815     ..v?..u?.xu?.(u?
  40e924:	3f74d673 3f7483b0 3f742fcd 3f73dacb     s.t?..t?./t?..s?
  40e934:	3f7384aa 3f732d6c 3f72d511 3f727b9a     ..s?l-s?..r?.{r?
  40e944:	3f722108 3f71c55c 3f716897 3f710ab9     .!r?\.q?.hq?..q?
  40e954:	3f70abc4 3f704bb8 3f6fea97 3f6f8861     ..p?.Kp?..o?a.o?
  40e964:	3f6f2517 3f6ec0bb 3f6e5b4c 3f6df4cd     .%o?..n?L[n?..m?
  40e974:	3f6d8d3e 3f6d24a1 3f6cbaf5 3f6c503d     >.m?.$m?..l?=Pl?
  40e984:	3f6be478 3f6b77a9 3f6b09d1 3f6a9aef     x.k?.wk?..k?..j?
  40e994:	3f6a2b07 3f69ba17 3f694823 3f68d52a     .+j?..i?#Hi?*.h?
  40e9a4:	3f68612e 3f67ec30 3f677631 3f66ff32     .ah?0.g?1vg?2.f?
  40e9b4:	3f668734 3f660e39 3f659442 3f651950     4.f?9.f?B.e?P.e?
  40e9c4:	3f649d63 3f64207e 3f63a2a2 3f6323cf     c.d?~ d?..c?.#c?
  40e9d4:	3f62a407 3f62234b 3f61a19c 3f611efc     ..b?K#b?..a?..a?
  40e9e4:	3f609b6c 3f6016ee 3f5f9181 3f5f0b29     l.`?..`?.._?)._?
  40e9f4:	3f5e83e5 3f5dfbb8 3f5d72a2 3f5ce8a6     ..^?..]?.r]?..\?
  40ea04:	3f5c5dc3 3f5bd1fd 3f5b4553 3f5ab7c8     .]\?..[?SE[?..Z?
  40ea14:	3f5a295c 3f599a12 3f5909ea 3f5878e6     \)Z?..Y?..Y?.xX?
  40ea24:	3f57e707 3f57544f 3f56c0bf 3f562c58     ..W?OTW?..V?X,V?
  40ea34:	3f55971c 3f55010d 3f546a2c 3f53d27a     ..U?..U?,jT?z.S?
  40ea44:	3f5339f9 3f52a0aa 3f52068f 3f516ba8     .9S?..R?..R?.kQ?
  40ea54:	3f50cff9 3f503382 3f4f9645 3f4ef843     ..P?.3P?E.O?C.N?
  40ea64:	3f4e597d 3f4db9f6 3f4d19af 3f4c78a9     }YN?..M?..M?.xL?
  40ea74:	3f4bd6e6 3f4b3468 3f4a912f 3f49ed3f     ..K?h4K?/.J??.I?
  40ea84:	3f494897 3f48a33b 3f47fd2b 3f475668     .HI?;.H?+.G?hVG?
  40ea94:	3f46aef6 3f4606d5 3f455e06 3f44b48c     ..F?..F?.^E?..D?
  40eaa4:	3f440a69 3f435f9d 3f42b42a 3f420813     i.D?._C?*.B?..B?
  40eab4:	3f415b58 3f40adfc 3f400000 3f3f5166     X[A?..@?..@?fQ??
  40eac4:	3f3ea22f 3f3df25d 3f3d41f2 3f3c90f0     /.>?].=?.A=?..<?
  40ead4:	3f3bdf58 3f3b2d2c 3f3a7a6d 3f39c71f     X.;?,-;?mz:?..9?
  40eae4:	3f391341 3f385ed6 3f37a9e0 3f36f460     A.9?.^8?..7?`.6?
  40eaf4:	3f363e58 3f3587ca 3f34d0b8 3f341923     X>6?..5?..4?#.4?
  40eb04:	3f33610e 3f32a879 3f31ef68 3f3135da     .a3?y.2?h.1?.51?
  40eb14:	3f307bd4 3f2fc155 3f2f0660 3f2e4af7     .{0?U./?`./?.J.?
  40eb24:	3f2d8f1b 3f2cd2cf 3f2c1614 3f2b58ec     ..-?..,?..,?.X+?
  40eb34:	3f2a9b59 3f29dd5d 3f291ef9 3f28602f     Y.*?].)?..)?/`(?
  40eb44:	3f27a102 3f26e173 3f262183 3f256135     ..'?s.&?.!&?5a%?
  40eb54:	3f24a08b 3f23df86 3f231e29 3f225c75     ..$?..#?).#?u\"?
  40eb64:	3f219a6c 3f20d80f 3f201562 3f1f5265     l.!?.. ?b. ?eR.?
  40eb74:	3f1e8f1b 3f1dcb85 3f1d07a6 3f1c437e     ...?...?...?~C.?
  40eb84:	3f1b7f11 3f1aba60 3f19f56d 3f19303a     ...?`..?m..?:0.?
  40eb94:	3f186ac8 3f17a51a 3f16df32 3f161911     .j.?...?2..?...?
  40eba4:	3f1552ba 3f148c2d 3f13c56e 3f12fe7e     .R.?-..?n..?~..?
  40ebb4:	3f12375f 3f117013 3f10a89c 3f0fe0fc     _7.?.p.?...?...?
  40ebc4:	3f0f1935 3f0e5148 3f0d8938 3f0cc106     5..?HQ.?8..?...?
  40ebd4:	3f0bf8b5 3f0b3046 3f0a67bb 3f099f17     ...?F0.?.g.?...?
  40ebe4:	3f08d65b 3f080d89 3f0744a4 3f067bac     [..?...?.D.?.{.?
  40ebf4:	3f05b2a4 3f04e98e 3f04206d 3f035740     ...?...?m .?@W.?
  40ec04:	3f028e0c 3f01c4d1 3f00fb92 3f003251     ...?...?...?Q2.?
  40ec14:	3efed21d 3efd3f9c 3efbad22 3efa1ab2     ...>.?.>"..>...>
  40ec24:	3ef88851 3ef6f602 3ef563ca 3ef3d1ac     Q..>...>.c.>...>
  40ec34:	3ef23fac 3ef0adce 3eef1c16 3eed8a88     .?.>...>...>...>
  40ec44:	3eebf927 3eea67f8 3ee8d6fe 3ee7463e     '..>.g.>...>>F.>
  40ec54:	3ee5b5ba 3ee42578 3ee2957a 3ee105c6     ...>x%.>z..>...>
  40ec64:	3edf765d 3edde746 3edc5882 3edaca17     ]v.>F..>.X.>...>
  40ec74:	3ed93c07 3ed7ae58 3ed6210c 3ed49428     .<.>X..>.!.>(..>
  40ec84:	3ed307af 3ed17ba5 3ecff00e 3ece64ee     ...>.{.>...>.d.>
  40ec94:	3eccda49 3ecb5022 3ec9c67d 3ec83d5f     I..>"P.>}..>_=.>
  40eca4:	3ec6b4ca 3ec52cc3 3ec3a54d 3ec21e6d     ...>.,.>M..>m..>
  40ecb4:	3ec09826 3ebf127b 3ebd8d71 3ebc090b     &..>{..>q..>...>
  40ecc4:	3eba854d 3eb9023b 3eb77fd8 3eb5fe29     M..>;..>...>)..>
  40ecd4:	3eb47d30 3eb2fcf2 3eb17d73 3eaffeb6     0}.>...>s}.>...>
  40ece4:	3eae80be 3ead0390 3eab8730 3eaa0ba0     ...>...>0..>...>
  40ecf4:	3ea890e4 3ea71701 3ea59df9 3ea425d1     ...>...>...>.%.>
  40ed04:	3ea2ae8c 3ea1382e 3e9fc2ba 3e9e4e34     ...>.8.>...>4N.>
  40ed14:	3e9cda9f 3e9b6800 3e99f659 3e9885af     ...>.h.>Y..>...>
  40ed24:	3e971604 3e95a75d 3e9439bc 3e92cd26     ...>]..>.9.>&..>
  40ed34:	3e91619e 3e8ff728 3e8e8dc6 3e8d257d     .a.>(..>...>}%.>
  40ed44:	3e8bbe50 3e8a5842 3e88f358 3e878f93     P..>BX.>X..>...>
  40ed54:	3e862cf8 3e84cb8b 3e836b4e 3e820c45     .,.>...>Nk.>E..>
  40ed64:	3e80ae73 3e7ea3b8 3e7bed07 3e7938d8     s..>..~>..{>.8y>
  40ed74:	3e768733 3e73d81f 3e712ba1 3e6e81c1     3.v>..s>.+q>..n>
  40ed84:	3e6bda85 3e6935f4 3e669414 3e63f4eb     ..k>.5i>..f>..c>
  40ed94:	3e615881 3e5ebedc 3e5c2802 3e5993f9     .Xa>..^>.(\>..Y>
  40eda4:	3e5702c8 3e547475 3e51e907 3e4f6084     ..W>utT>..Q>.`O>
  40edb4:	3e4cdaf1 3e4a5856 3e47d8b9 3e455c1f     ..L>VXJ>..G>.\E>
  40edc4:	3e42e290 3e406c10 3e3df8a6 3e3b8858     ..B>.l@>..=>X.;>
  40edd4:	3e391b2d 3e36b12a 3e344a54 3e31e6b3     -.9>*.6>TJ4>..1>
  40ede4:	3e2f864c 3e2d2925 3e2acf43 3e2878ad     L./>%)->C.*>.x(>
  40edf4:	3e262568 3e23d57a 3e2188e9 3e1f3fba     h%&>z.#>..!>.?.>
  40ee04:	3e1cf9f4 3e1ab79b 3e1878b5 3e163d48     ...>...>.x.>H=.>
  40ee14:	3e14055a 3e11d0ef 3e0fa00e 3e0d72bb     Z..>...>...>.r.>
  40ee24:	3e0b48fd 3e0922d8 3e070051 3e04e16f     .H.>.".>Q..>o..>
  40ee34:	3e02c636 3e00aeab 3dfd35a8 3df9156d     6..>...>.5.=m..=
  40ee44:	3df4fcac 3df0eb71 3dece1c7 3de8dfb5     ...=q..=...=...=
  40ee54:	3de4e549 3de0f28a 3ddd0783 3dd9243c     I..=...=...=<$.=
  40ee64:	3dd548bf 3dd17517 3dcda94d 3dc9e56b     .H.=.u.=M..=k..=
  40ee74:	3dc62978 3dc2757f 3dbec989 3dbb259f     x).=.u.=...=.%.=
  40ee84:	3db789ca 3db3f612 3db06a82 3dace720     ...=...=.j.= ..=
  40ee94:	3da96bf7 3da5f90e 3da28e6f 3d9f2c21     .k.=...=o..=!,.=
  40eea4:	3d9bd22e 3d98809d 3d953776 3d91f6c2     ...=...=v7.=...=
  40eeb4:	3d8ebe88 3d8b8ed2 3d8867a5 3d85490b     ...=...=.g.=.I.=
  40eec4:	3d82330c 3d7e4b5b 3d7841f1 3d7249e8     .3.=[K~=.Ax=.Ir=
  40eed4:	3d6c6350 3d668e36 3d60caaa 3d5b18b9     Pcl=6.f=..`=..[=
  40eee4:	3d557871 3d4fe9e0 3d4a6d15 3d45021c     qxU=..O=.mJ=..E=
  40eef4:	3d3fa904 3d3a61d8 3d352ca8 3d30097e     ..?=.a:=.,5=~.0=
  40ef04:	3d2af868 3d25f972 3d210caa 3d1c321a     h.*=r.%=..!=.2.=
  40ef14:	3d1769cf 3d12b3d5 3d0e1038 3d097f02     .i.=...=8..=...=
  40ef24:	3d050040 3d0093fb 3cf87481 3cefe633     @..=...=.t.<3..<
  40ef34:	3ce77d22 3cdf3963 3cd71b0b 3ccf222d     "}.<c9.<...<-".<
  40ef44:	3cc74edd 3cbfa12e 3cb81934 3cb0b701     .N.<...<4..<...<
  40ef54:	3ca97aa8 3ca26439 3c9b73c8 3c94a964     .z.<9d.<.s.<d..<
  40ef64:	3c8e051f 3c878709 3c812f32 3c75fb56     ...<...<2/.<V.u<
  40ef74:	3c69e501 3c5e1b88 3c529f05 3c476f97     ..i<..^<..R<.oG<
  40ef84:	3c3c8d58 3c31f863 3c27b0d3 3c1db6c1     X.<<c.1<..'<...<
  40ef94:	3c140a45 3c0aab77 3c019a6f 3bf1ae87     E..<w..<o..<...;
  40efa4:	3be0c413 3bd075ac 3bc0c37a 3bb1ada5     ...;.u.;z..;...;
  40efb4:	3ba33451 3b9557a2 3b8817bb 3b76e97a     Q4.;.W.;...;z.v;
  40efc4:	3b5edd8d 3b480bea 3b3274ca 3b1e1863     ..^;..H;.t2;c..;
  40efd4:	3b0af6e6 3af22108 3ad0cad1 3ab1eb78     ...;.!.:...:x..:
  40efe4:	3a95834b 3a772520 3a48330e 3a1e30d3     K..: %w:.3H:.0.:
  40eff4:	39f23daf 39b1faf0 3977340c 391e36ef     .=.9...9.4w9.6.9
  40f004:	38b1fece 381e3877 371e38d8 00000000     ...8w8.8.8.7....

0040f014 <lp_filter>:
  40f014:	3b30f27c 3c28c155 3cd35a86 3d4c63f1     |.0;U.(<.Z.<.cL=
  40f024:	3da40b78 3de24dd3 3e086595 3e10ff97     x..=.M.=.e.>...>
  40f034:	3e086595 3de24dd3 3da40b78 3d4c63f1     .e.>.M.=x..=.cL=
  40f044:	3cd35a86 3c28c155 3b30f27c 6c6c6548     .Z.<U.(<|.0;Hell
  40f054:	6f6f6f6f 0a0a0a6f 0000000d 00006625     ooooo.......%f..
  40f064:	71657246 7325203a 00000d0a              Freq: %s....

0040f070 <npio2_hw>:
  40f070:	3ff921fb 400921fb 4012d97c 401921fb     .!.?.!.@|..@.!.@
  40f080:	401f6a7a 4022d97c 4025fdbb 402921fb     zj.@|."@..%@.!)@
  40f090:	402c463a 402f6a7a 4031475c 4032d97c     :F,@zj/@\G1@|.2@
  40f0a0:	40346b9c 4035fdbb 40378fdb 403921fb     .k4@..5@..7@.!9@
  40f0b0:	403ab41b 403c463a 403dd85a 403f6a7a     ..:@:F<@Z.=@zj?@
  40f0c0:	40407e4c 4041475c 4042106c 4042d97c     L~@@\GA@l.B@|.B@
  40f0d0:	4043a28c 40446b9c 404534ac 4045fdbb     ..C@.kD@.4E@..E@
  40f0e0:	4046c6cb 40478fdb 404858eb 404921fb     ..F@..G@.XH@.!I@

0040f0f0 <two_over_pi>:
  40f0f0:	00a2f983 006e4e44 001529fc 002757d1     ....DNn..)...W'.
  40f100:	00f534dd 00c0db62 0095993c 00439041     .4..b...<...A.C.
  40f110:	00fe5163 00abdebb 00c561b7 00246e3a     cQ.......a..:n$.
  40f120:	00424dd2 00e00649 002eea09 00d1921c     .MB.I...........
  40f130:	00fe1deb 001cb129 00a73ee8 008235f5     ....)....>...5..
  40f140:	002ebb44 0084e99c 007026b4 005f7e41     D........&p.A~_.
  40f150:	003991d6 00398353 0039f49c 00845f8b     ..9.S.9...9.._..
  40f160:	00bdf928 003b1ff8 0097ffde 0005980f     (.....;.........
  40f170:	00ef2f11 008b5a0a 006d1f6d 00367ecf     ./...Z..m.m..~6.
  40f180:	0027cb09 00b74f46 003f669e 005fea2d     ..'.FO...f?.-._.
  40f190:	007527ba 00c7ebe5 00f17b3d 000739f7     .'u.....={...9..
  40f1a0:	008a5292 00ea6bfb 005fb11f 008d5d08     .R...k...._..]..
  40f1b0:	00560330 0046fc7b 006babf0 00cfbc20     0.V.{.F...k. ...
  40f1c0:	009af436 001da9e3 0091615e 00e61b08     6.......^a......
  40f1d0:	00659985 005f14a0 0068408d 00ffd880     ..e..._..@h.....
  40f1e0:	004d7327 00310606 001556ca 0073a8c9     'sM...1..V....s.
  40f1f0:	0060e27b 00c08c6b                       {.`.k...

0040f1f8 <npio2_hw>:
  40f1f8:	3fc90f00 40490f00 4096cb00 40c90f00     ...?..I@...@...@
  40f208:	40fb5300 4116cb00 412fed00 41490f00     .S.@...A../A..IA
  40f218:	41623100 417b5300 418a3a00 4196cb00     .1bA.S{A.:.A...A
  40f228:	41a35c00 41afed00 41bc7e00 41c90f00     .\.A...A.~.A...A
  40f238:	41d5a000 41e23100 41eec200 41fb5300     ...A.1.A...A.S.A
  40f248:	4203f200 420a3a00 42108300 4216cb00     ...B.:.B...B...B
  40f258:	421d1400 42235c00 4229a500 422fed00     ...B.\#B..)B../B
  40f268:	42363600 423c7e00 4242c700 42490f00     .66B.~<B..BB..IB

0040f278 <two_over_pi>:
  40f278:	000000a2 000000f9 00000083 0000006e     ............n...
  40f288:	0000004e 00000044 00000015 00000029     N...D.......)...
  40f298:	000000fc 00000027 00000057 000000d1     ....'...W.......
  40f2a8:	000000f5 00000034 000000dd 000000c0     ....4...........
  40f2b8:	000000db 00000062 00000095 00000099     ....b...........
  40f2c8:	0000003c 00000043 00000090 00000041     <...C.......A...
  40f2d8:	000000fe 00000051 00000063 000000ab     ....Q...c.......
  40f2e8:	000000de 000000bb 000000c5 00000061     ............a...
  40f2f8:	000000b7 00000024 0000006e 0000003a     ....$...n...:...
  40f308:	00000042 0000004d 000000d2 000000e0     B...M...........
  40f318:	00000006 00000049 0000002e 000000ea     ....I...........
  40f328:	00000009 000000d1 00000092 0000001c     ................
  40f338:	000000fe 0000001d 000000eb 0000001c     ................
  40f348:	000000b1 00000029 000000a7 0000003e     ....).......>...
  40f358:	000000e8 00000082 00000035 000000f5     ........5.......
  40f368:	0000002e 000000bb 00000044 00000084     ........D.......
  40f378:	000000e9 0000009c 00000070 00000026     ........p...&...
  40f388:	000000b4 0000005f 0000007e 00000041     ...._...~...A...
  40f398:	00000039 00000091 000000d6 00000039     9...........9...
  40f3a8:	00000083 00000053 00000039 000000f4     ....S...9.......
  40f3b8:	0000009c 00000084 0000005f 0000008b     ........_.......
  40f3c8:	000000bd 000000f9 00000028 0000003b     ........(...;...
  40f3d8:	0000001f 000000f8 00000097 000000ff     ................
  40f3e8:	000000de 00000005 00000098 0000000f     ................
  40f3f8:	000000ef 0000002f 00000011 0000008b     ..../...........
  40f408:	0000005a 0000000a 0000006d 0000001f     Z.......m.......
  40f418:	0000006d 00000036 0000007e 000000cf     m...6...~.......
  40f428:	00000027 000000cb 00000009 000000b7     '...............
  40f438:	0000004f 00000046 0000003f 00000066     O...F...?...f...
  40f448:	0000009e 0000005f 000000ea 0000002d     ...._.......-...
  40f458:	00000075 00000027 000000ba 000000c7     u...'...........
  40f468:	000000eb 000000e5 000000f1 0000007b     ............{...
  40f478:	0000003d 00000007 00000039 000000f7     =.......9.......
  40f488:	0000008a 00000052 00000092 000000ea     ....R...........
  40f498:	0000006b 000000fb 0000005f 000000b1     k......._.......
  40f4a8:	0000001f 0000008d 0000005d 00000008     ........].......
  40f4b8:	00000056 00000003 00000030 00000046     V.......0...F...
  40f4c8:	000000fc 0000007b 0000006b 000000ab     ....{...k.......
  40f4d8:	000000f0 000000cf 000000bc 00000020     ............ ...
  40f4e8:	0000009a 000000f4 00000036 0000001d     ........6.......
  40f4f8:	000000a9 000000e3 00000091 00000061     ............a...
  40f508:	0000005e 000000e6 0000001b 00000008     ^...............
  40f518:	00000065 00000099 00000085 0000005f     e..........._...
  40f528:	00000014 000000a0 00000068 00000040     ........h...@...
  40f538:	0000008d 000000ff 000000d8 00000080     ................
  40f548:	0000004d 00000073 00000027 00000031     M...s...'...1...
  40f558:	00000006 00000006 00000015 00000056     ............V...
  40f568:	000000ca 00000073 000000a8 000000c9     ....s...........
  40f578:	00000060 000000e2 0000007b 000000c0     `.......{.......
  40f588:	0000008c 0000006b                       ....k...

0040f590 <PIo2>:
  40f590:	40000000 3ff921fb 00000000 3e74442d     ...@.!.?....-Dt>
  40f5a0:	80000000 3cf84698 60000000 3b78cc51     .....F.<...`Q.x;
  40f5b0:	80000000 39f01b83 40000000 387a2520     .......9...@ %z8
  40f5c0:	80000000 36e38222 00000000 3569f31d     ...."..6......i5

0040f5d0 <init_jk>:
  40f5d0:	00000002 00000003 00000004 00000006     ................

0040f5e0 <PIo2>:
  40f5e0:	3fc90000 39f00000 37da0000 33a20000     ...?...9...7...3
  40f5f0:	2e840000 2b500000 27c20000 22d00000     ......P+...'..."
  40f600:	1fc40000 1bc60000 17440000              ..........D.

0040f60c <init_jk>:
  40f60c:	00000004 00000007 00000009              ............

0040f618 <atanhi>:
  40f618:	3eed6338 3f490fda 3f7b985e 3fc90fda     8c.>..I?^.{?...?

0040f628 <atanlo>:
  40f628:	31ac3769 33222168 33140fb4 33a22168     i7.1h!"3...3h!.3

0040f638 <_global_impure_ptr>:
  40f638:	20400030 00464e49 00666e69 004e414e     0.@ INF.inf.NAN.
  40f648:	006e616e 33323130 37363534 42413938     nan.0123456789AB
  40f658:	46454443 00000000 33323130 37363534     CDEF....01234567
  40f668:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
  40f678:	0000296c 00000030                       l)..0...

0040f680 <blanks.7223>:
  40f680:	20202020 20202020 20202020 20202020                     

0040f690 <zeroes.7224>:
  40f690:	30303030 30303030 30303030 30303030     0000000000000000

0040f6a0 <blanks.7217>:
  40f6a0:	20202020 20202020 20202020 20202020                     

0040f6b0 <zeroes.7218>:
  40f6b0:	30303030 30303030 30303030 30303030     0000000000000000
  40f6c0:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
  40f6d0:	00000043 49534f50 00000058 0000002e     C...POSIX.......

0040f6e0 <__mprec_bigtens>:
  40f6e0:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
  40f6f0:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
  40f700:	7f73bf3c 75154fdd                       <.s..O.u

0040f708 <__mprec_tens>:
  40f708:	00000000 3ff00000 00000000 40240000     .......?......$@
  40f718:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
  40f728:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
  40f738:	00000000 412e8480 00000000 416312d0     .......A......cA
  40f748:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
  40f758:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
  40f768:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
  40f778:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
  40f788:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
  40f798:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
  40f7a8:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
  40f7b8:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
  40f7c8:	79d99db4 44ea7843                       ...yCx.D

0040f7d0 <p05.6055>:
  40f7d0:	00000005 00000019 0000007d              ........}...

0040f7dc <_ctype_>:
  40f7dc:	20202000 20202020 28282020 20282828     .         ((((( 
  40f7ec:	20202020 20202020 20202020 20202020                     
  40f7fc:	10108820 10101010 10101010 10101010      ...............
  40f80c:	04040410 04040404 10040404 10101010     ................
  40f81c:	41411010 41414141 01010101 01010101     ..AAAAAA........
  40f82c:	01010101 01010101 01010101 10101010     ................
  40f83c:	42421010 42424242 02020202 02020202     ..BBBBBB........
  40f84c:	02020202 02020202 02020202 10101010     ................
  40f85c:	00000020 00000000 00000000 00000000      ...............
	...

0040f8e0 <_init>:
  40f8e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40f8e2:	bf00      	nop
  40f8e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40f8e6:	bc08      	pop	{r3}
  40f8e8:	469e      	mov	lr, r3
  40f8ea:	4770      	bx	lr

0040f8ec <__init_array_start>:
  40f8ec:	0040b201 	.word	0x0040b201

0040f8f0 <__frame_dummy_init_array_entry>:
  40f8f0:	00400165                                e.@.

0040f8f4 <_fini>:
  40f8f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40f8f6:	bf00      	nop
  40f8f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40f8fa:	bc08      	pop	{r3}
  40f8fc:	469e      	mov	lr, r3
  40f8fe:	4770      	bx	lr

0040f900 <__fini_array_start>:
  40f900:	00400141 	.word	0x00400141

Disassembly of section .relocate:

20400000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20400000:	f3bf 8f5f 	dmb	sy
20400004:	3801      	subs	r0, #1
20400006:	d1fb      	bne.n	20400000 <portable_delay_cycles>
20400008:	4770      	bx	lr
	...

2040000c <inBuffer>:
2040000c:	6d94 2041                                   .mA 

20400010 <inPingMode>:
20400010:	0001 0000                                   ....

20400014 <outBuffer>:
20400014:	1d94 2041                                   ..A 

20400018 <outPingMode>:
20400018:	0001 0000                                   ....

2040001c <processBuffer>:
2040001c:	ed94 2040                                   ..@ 

20400020 <g_interrupt_enabled>:
20400020:	0001 0000                                   ....

20400024 <SystemCoreClock>:
20400024:	0900 003d                                   ..=.

20400028 <_impure_ptr>:
20400028:	0030 2040 0000 0000                         0.@ ....

20400030 <impure_data>:
20400030:	0000 0000 031c 2040 0384 2040 03ec 2040     ......@ ..@ ..@ 
	...
204000d8:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
204000e8:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20400458 <__malloc_av_>:
	...
20400460:	0458 2040 0458 2040 0460 2040 0460 2040     X.@ X.@ `.@ `.@ 
20400470:	0468 2040 0468 2040 0470 2040 0470 2040     h.@ h.@ p.@ p.@ 
20400480:	0478 2040 0478 2040 0480 2040 0480 2040     x.@ x.@ ..@ ..@ 
20400490:	0488 2040 0488 2040 0490 2040 0490 2040     ..@ ..@ ..@ ..@ 
204004a0:	0498 2040 0498 2040 04a0 2040 04a0 2040     ..@ ..@ ..@ ..@ 
204004b0:	04a8 2040 04a8 2040 04b0 2040 04b0 2040     ..@ ..@ ..@ ..@ 
204004c0:	04b8 2040 04b8 2040 04c0 2040 04c0 2040     ..@ ..@ ..@ ..@ 
204004d0:	04c8 2040 04c8 2040 04d0 2040 04d0 2040     ..@ ..@ ..@ ..@ 
204004e0:	04d8 2040 04d8 2040 04e0 2040 04e0 2040     ..@ ..@ ..@ ..@ 
204004f0:	04e8 2040 04e8 2040 04f0 2040 04f0 2040     ..@ ..@ ..@ ..@ 
20400500:	04f8 2040 04f8 2040 0500 2040 0500 2040     ..@ ..@ ..@ ..@ 
20400510:	0508 2040 0508 2040 0510 2040 0510 2040     ..@ ..@ ..@ ..@ 
20400520:	0518 2040 0518 2040 0520 2040 0520 2040     ..@ ..@  .@  .@ 
20400530:	0528 2040 0528 2040 0530 2040 0530 2040     (.@ (.@ 0.@ 0.@ 
20400540:	0538 2040 0538 2040 0540 2040 0540 2040     8.@ 8.@ @.@ @.@ 
20400550:	0548 2040 0548 2040 0550 2040 0550 2040     H.@ H.@ P.@ P.@ 
20400560:	0558 2040 0558 2040 0560 2040 0560 2040     X.@ X.@ `.@ `.@ 
20400570:	0568 2040 0568 2040 0570 2040 0570 2040     h.@ h.@ p.@ p.@ 
20400580:	0578 2040 0578 2040 0580 2040 0580 2040     x.@ x.@ ..@ ..@ 
20400590:	0588 2040 0588 2040 0590 2040 0590 2040     ..@ ..@ ..@ ..@ 
204005a0:	0598 2040 0598 2040 05a0 2040 05a0 2040     ..@ ..@ ..@ ..@ 
204005b0:	05a8 2040 05a8 2040 05b0 2040 05b0 2040     ..@ ..@ ..@ ..@ 
204005c0:	05b8 2040 05b8 2040 05c0 2040 05c0 2040     ..@ ..@ ..@ ..@ 
204005d0:	05c8 2040 05c8 2040 05d0 2040 05d0 2040     ..@ ..@ ..@ ..@ 
204005e0:	05d8 2040 05d8 2040 05e0 2040 05e0 2040     ..@ ..@ ..@ ..@ 
204005f0:	05e8 2040 05e8 2040 05f0 2040 05f0 2040     ..@ ..@ ..@ ..@ 
20400600:	05f8 2040 05f8 2040 0600 2040 0600 2040     ..@ ..@ ..@ ..@ 
20400610:	0608 2040 0608 2040 0610 2040 0610 2040     ..@ ..@ ..@ ..@ 
20400620:	0618 2040 0618 2040 0620 2040 0620 2040     ..@ ..@  .@  .@ 
20400630:	0628 2040 0628 2040 0630 2040 0630 2040     (.@ (.@ 0.@ 0.@ 
20400640:	0638 2040 0638 2040 0640 2040 0640 2040     8.@ 8.@ @.@ @.@ 
20400650:	0648 2040 0648 2040 0650 2040 0650 2040     H.@ H.@ P.@ P.@ 
20400660:	0658 2040 0658 2040 0660 2040 0660 2040     X.@ X.@ `.@ `.@ 
20400670:	0668 2040 0668 2040 0670 2040 0670 2040     h.@ h.@ p.@ p.@ 
20400680:	0678 2040 0678 2040 0680 2040 0680 2040     x.@ x.@ ..@ ..@ 
20400690:	0688 2040 0688 2040 0690 2040 0690 2040     ..@ ..@ ..@ ..@ 
204006a0:	0698 2040 0698 2040 06a0 2040 06a0 2040     ..@ ..@ ..@ ..@ 
204006b0:	06a8 2040 06a8 2040 06b0 2040 06b0 2040     ..@ ..@ ..@ ..@ 
204006c0:	06b8 2040 06b8 2040 06c0 2040 06c0 2040     ..@ ..@ ..@ ..@ 
204006d0:	06c8 2040 06c8 2040 06d0 2040 06d0 2040     ..@ ..@ ..@ ..@ 
204006e0:	06d8 2040 06d8 2040 06e0 2040 06e0 2040     ..@ ..@ ..@ ..@ 
204006f0:	06e8 2040 06e8 2040 06f0 2040 06f0 2040     ..@ ..@ ..@ ..@ 
20400700:	06f8 2040 06f8 2040 0700 2040 0700 2040     ..@ ..@ ..@ ..@ 
20400710:	0708 2040 0708 2040 0710 2040 0710 2040     ..@ ..@ ..@ ..@ 
20400720:	0718 2040 0718 2040 0720 2040 0720 2040     ..@ ..@  .@  .@ 
20400730:	0728 2040 0728 2040 0730 2040 0730 2040     (.@ (.@ 0.@ 0.@ 
20400740:	0738 2040 0738 2040 0740 2040 0740 2040     8.@ 8.@ @.@ @.@ 
20400750:	0748 2040 0748 2040 0750 2040 0750 2040     H.@ H.@ P.@ P.@ 
20400760:	0758 2040 0758 2040 0760 2040 0760 2040     X.@ X.@ `.@ `.@ 
20400770:	0768 2040 0768 2040 0770 2040 0770 2040     h.@ h.@ p.@ p.@ 
20400780:	0778 2040 0778 2040 0780 2040 0780 2040     x.@ x.@ ..@ ..@ 
20400790:	0788 2040 0788 2040 0790 2040 0790 2040     ..@ ..@ ..@ ..@ 
204007a0:	0798 2040 0798 2040 07a0 2040 07a0 2040     ..@ ..@ ..@ ..@ 
204007b0:	07a8 2040 07a8 2040 07b0 2040 07b0 2040     ..@ ..@ ..@ ..@ 
204007c0:	07b8 2040 07b8 2040 07c0 2040 07c0 2040     ..@ ..@ ..@ ..@ 
204007d0:	07c8 2040 07c8 2040 07d0 2040 07d0 2040     ..@ ..@ ..@ ..@ 
204007e0:	07d8 2040 07d8 2040 07e0 2040 07e0 2040     ..@ ..@ ..@ ..@ 
204007f0:	07e8 2040 07e8 2040 07f0 2040 07f0 2040     ..@ ..@ ..@ ..@ 
20400800:	07f8 2040 07f8 2040 0800 2040 0800 2040     ..@ ..@ ..@ ..@ 
20400810:	0808 2040 0808 2040 0810 2040 0810 2040     ..@ ..@ ..@ ..@ 
20400820:	0818 2040 0818 2040 0820 2040 0820 2040     ..@ ..@  .@  .@ 
20400830:	0828 2040 0828 2040 0830 2040 0830 2040     (.@ (.@ 0.@ 0.@ 
20400840:	0838 2040 0838 2040 0840 2040 0840 2040     8.@ 8.@ @.@ @.@ 
20400850:	0848 2040 0848 2040 0850 2040 0850 2040     H.@ H.@ P.@ P.@ 

20400860 <__malloc_sbrk_base>:
20400860:	ffff ffff                                   ....

20400864 <__malloc_trim_threshold>:
20400864:	0000 0002                                   ....

20400868 <__atexit_recursive_mutex>:
20400868:	8dac 2041                                   ..A 

2040086c <__global_locale>:
2040086c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040088c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008ac:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008cc:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008ec:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040090c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040092c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040094c:	d99d 0040 cc21 0040 0000 0000 f7dc 0040     ..@.!.@.......@.
2040095c:	f6dc 0040 f65c 0040 f65c 0040 f65c 0040     ..@.\.@.\.@.\.@.
2040096c:	f65c 0040 f65c 0040 f65c 0040 f65c 0040     \.@.\.@.\.@.\.@.
2040097c:	f65c 0040 f65c 0040 ffff ffff ffff ffff     \.@.\.@.........
2040098c:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
204009b4:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
