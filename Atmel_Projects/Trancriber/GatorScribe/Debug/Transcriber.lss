
Transcriber.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000f1b8  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0040f1b8  0040f1b8  0001f1b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009e8  20400000  0040f1c0  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          000415a4  20401000  00410800  00021000  2**11
                  ALLOC
  4 .stack        00002004  204425a4  00451da4  00021000  2**0
                  ALLOC
  5 .heap         00000200  204445a8  00453da8  00021000  2**0
                  ALLOC
  6 .ARM.attributes 0000002c  00000000  00000000  000209e8  2**0
                  CONTENTS, READONLY
  7 .comment      000000b4  00000000  00000000  00020a14  2**0
                  CONTENTS, READONLY
  8 .debug_info   00025ea5  00000000  00000000  00020ac8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00005903  00000000  00000000  0004696d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000094f2  00000000  00000000  0004c270  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000e48  00000000  00000000  00055762  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00002250  00000000  00000000  000565aa  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00028a03  00000000  00000000  000587fa  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   000195e9  00000000  00000000  000811fd  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    0009d794  00000000  00000000  0009a7e6  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00002eb8  00000000  00000000  00137f7c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	a8 45 44 20 75 23 40 00 6d 23 40 00 71 23 40 00     .ED u#@.m#@.q#@.
  400010:	6d 23 40 00 6d 23 40 00 6d 23 40 00 00 00 00 00     m#@.m#@.m#@.....
	...
  40002c:	6d 23 40 00 6d 23 40 00 00 00 00 00 6d 23 40 00     m#@.m#@.....m#@.
  40003c:	9d 0c 40 00 6d 23 40 00 6d 23 40 00 6d 23 40 00     ..@.m#@.m#@.m#@.
  40004c:	f5 12 40 00 6d 23 40 00 6d 23 40 00 6d 23 40 00     ..@.m#@.m#@.m#@.
  40005c:	6d 23 40 00 6d 23 40 00 00 00 00 00 59 21 40 00     m#@.m#@.....Y!@.
  40006c:	69 21 40 00 79 21 40 00 6d 23 40 00 05 28 40 00     i!@.y!@.m#@..(@.
  40007c:	6d 23 40 00 89 21 40 00 99 21 40 00 6d 23 40 00     m#@..!@..!@.m#@.
  40008c:	6d 23 40 00 6d 23 40 00 6d 23 40 00 6d 23 40 00     m#@.m#@.m#@.m#@.
  40009c:	6d 23 40 00 6d 23 40 00 6d 23 40 00 6d 23 40 00     m#@.m#@.m#@.m#@.
  4000ac:	6d 23 40 00 6d 23 40 00 6d 23 40 00 6d 23 40 00     m#@.m#@.m#@.m#@.
  4000bc:	6d 23 40 00 6d 23 40 00 6d 23 40 00 6d 23 40 00     m#@.m#@.m#@.m#@.
  4000cc:	6d 23 40 00 00 00 00 00 6d 23 40 00 00 00 00 00     m#@.....m#@.....
  4000dc:	6d 23 40 00 6d 23 40 00 6d 23 40 00 6d 23 40 00     m#@.m#@.m#@.m#@.
  4000ec:	6d 23 40 00 6d 23 40 00 6d 23 40 00 6d 23 40 00     m#@.m#@.m#@.m#@.
  4000fc:	6d 23 40 00 6d 23 40 00 6d 23 40 00 6d 23 40 00     m#@.m#@.m#@.m#@.
  40010c:	6d 23 40 00 6d 23 40 00 6d 23 40 00 00 00 00 00     m#@.m#@.m#@.....
  40011c:	00 00 00 00 6d 23 40 00 6d 23 40 00 ad 01 40 00     ....m#@.m#@...@.
  40012c:	6d 23 40 00 6d 23 40 00 00 00 00 00 6d 23 40 00     m#@.m#@.....m#@.
  40013c:	6d 23 40 00                                         m#@.

00400140 <__do_global_dtors_aux>:
  400140:	b510      	push	{r4, lr}
  400142:	4c05      	ldr	r4, [pc, #20]	; (400158 <__do_global_dtors_aux+0x18>)
  400144:	7823      	ldrb	r3, [r4, #0]
  400146:	b933      	cbnz	r3, 400156 <__do_global_dtors_aux+0x16>
  400148:	4b04      	ldr	r3, [pc, #16]	; (40015c <__do_global_dtors_aux+0x1c>)
  40014a:	b113      	cbz	r3, 400152 <__do_global_dtors_aux+0x12>
  40014c:	4804      	ldr	r0, [pc, #16]	; (400160 <__do_global_dtors_aux+0x20>)
  40014e:	f3af 8000 	nop.w
  400152:	2301      	movs	r3, #1
  400154:	7023      	strb	r3, [r4, #0]
  400156:	bd10      	pop	{r4, pc}
  400158:	20401000 	.word	0x20401000
  40015c:	00000000 	.word	0x00000000
  400160:	0040f1c0 	.word	0x0040f1c0

00400164 <frame_dummy>:
  400164:	4b0c      	ldr	r3, [pc, #48]	; (400198 <frame_dummy+0x34>)
  400166:	b143      	cbz	r3, 40017a <frame_dummy+0x16>
  400168:	480c      	ldr	r0, [pc, #48]	; (40019c <frame_dummy+0x38>)
  40016a:	490d      	ldr	r1, [pc, #52]	; (4001a0 <frame_dummy+0x3c>)
  40016c:	b510      	push	{r4, lr}
  40016e:	f3af 8000 	nop.w
  400172:	480c      	ldr	r0, [pc, #48]	; (4001a4 <frame_dummy+0x40>)
  400174:	6803      	ldr	r3, [r0, #0]
  400176:	b923      	cbnz	r3, 400182 <frame_dummy+0x1e>
  400178:	bd10      	pop	{r4, pc}
  40017a:	480a      	ldr	r0, [pc, #40]	; (4001a4 <frame_dummy+0x40>)
  40017c:	6803      	ldr	r3, [r0, #0]
  40017e:	b933      	cbnz	r3, 40018e <frame_dummy+0x2a>
  400180:	4770      	bx	lr
  400182:	4b09      	ldr	r3, [pc, #36]	; (4001a8 <frame_dummy+0x44>)
  400184:	2b00      	cmp	r3, #0
  400186:	d0f7      	beq.n	400178 <frame_dummy+0x14>
  400188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40018c:	4718      	bx	r3
  40018e:	4b06      	ldr	r3, [pc, #24]	; (4001a8 <frame_dummy+0x44>)
  400190:	2b00      	cmp	r3, #0
  400192:	d0f5      	beq.n	400180 <frame_dummy+0x1c>
  400194:	4718      	bx	r3
  400196:	bf00      	nop
  400198:	00000000 	.word	0x00000000
  40019c:	0040f1c0 	.word	0x0040f1c0
  4001a0:	20401004 	.word	0x20401004
  4001a4:	0040f1c0 	.word	0x0040f1c0
  4001a8:	00000000 	.word	0x00000000

004001ac <XDMAC_Handler>:
 */
static inline uint32_t xdmac_channel_get_interrupt_status(Xdmac *xdmac, uint32_t channel_num)
{
	Assert(xdmac);
	Assert(channel_num < XDMACCHID_NUMBER);
	return xdmac->XDMAC_CHID[channel_num].XDMAC_CIS;
  4001ac:	4b87      	ldr	r3, [pc, #540]	; (4003cc <XDMAC_Handler+0x220>)
  4001ae:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
void XDMAC_Handler(void)
{
    uint32_t dma_status;
    
    dma_status = xdmac_channel_get_interrupt_status(XDMAC, XDMA_CH_SSC_RX);
    if (dma_status & XDMAC_CIS_BIS)
  4001b0:	07d8      	lsls	r0, r3, #31
  4001b2:	d556      	bpl.n	400262 <XDMAC_Handler+0xb6>
    {
		if(inPingMode)
  4001b4:	4a86      	ldr	r2, [pc, #536]	; (4003d0 <XDMAC_Handler+0x224>)
{
  4001b6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		if(inPingMode)
  4001ba:	7813      	ldrb	r3, [r2, #0]
  4001bc:	2b00      	cmp	r3, #0
  4001be:	d162      	bne.n	400286 <XDMAC_Handler+0xda>
		{
			inBuffer = inPingBuffer; 
		}
		else 
		{
			inBuffer = inPongBuffer; 
  4001c0:	4984      	ldr	r1, [pc, #528]	; (4003d4 <XDMAC_Handler+0x228>)
  4001c2:	4885      	ldr	r0, [pc, #532]	; (4003d8 <XDMAC_Handler+0x22c>)
  4001c4:	460b      	mov	r3, r1
  4001c6:	6001      	str	r1, [r0, #0]
		}
		inPingMode = !inPingMode; 
  4001c8:	7811      	ldrb	r1, [r2, #0]
  4001ca:	f081 0101 	eor.w	r1, r1, #1
  4001ce:	7011      	strb	r1, [r2, #0]
		int processIdx = 0; 
		if (metronome_on)
  4001d0:	4a82      	ldr	r2, [pc, #520]	; (4003dc <XDMAC_Handler+0x230>)
  4001d2:	7811      	ldrb	r1, [r2, #0]
  4001d4:	f001 02ff 	and.w	r2, r1, #255	; 0xff
  4001d8:	2900      	cmp	r1, #0
  4001da:	d15d      	bne.n	400298 <XDMAC_Handler+0xec>
  4001dc:	4c80      	ldr	r4, [pc, #512]	; (4003e0 <XDMAC_Handler+0x234>)
  4001de:	e000      	b.n	4001e2 <XDMAC_Handler+0x36>
  4001e0:	6803      	ldr	r3, [r0, #0]
			}
		}
		else 
		{
			for(int i = 0; i < BUF_SIZE; i++)
				outBuffer[i] = (uint16_t)((int16_t)inBuffer[i] / 2);	
  4001e2:	5a9b      	ldrh	r3, [r3, r2]
  4001e4:	6821      	ldr	r1, [r4, #0]
  4001e6:	b21b      	sxth	r3, r3
  4001e8:	4411      	add	r1, r2
  4001ea:	3202      	adds	r2, #2
  4001ec:	2b00      	cmp	r3, #0
  4001ee:	bfb8      	it	lt
  4001f0:	3301      	addlt	r3, #1
			for(int i = 0; i < BUF_SIZE; i++)
  4001f2:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
				outBuffer[i] = (uint16_t)((int16_t)inBuffer[i] / 2);	
  4001f6:	f3c3 034f 	ubfx	r3, r3, #1, #16
  4001fa:	800b      	strh	r3, [r1, #0]
			for(int i = 0; i < BUF_SIZE; i++)
  4001fc:	d1f0      	bne.n	4001e0 <XDMAC_Handler+0x34>
  4001fe:	2300      	movs	r3, #0
  400200:	4d78      	ldr	r5, [pc, #480]	; (4003e4 <XDMAC_Handler+0x238>)
  400202:	461c      	mov	r4, r3
		
		// Fill process buffer 
		for(int i = 0; i < BUF_SIZE; i++)
		{
			/* Check if divisible by 4 for decimation by 2 */
			if ((i & 0x03) == 0)
  400204:	0799      	lsls	r1, r3, #30
  400206:	d10d      	bne.n	400224 <XDMAC_Handler+0x78>
				fillBuffer[processIdx++] = (float32_t)((int16_t)inBuffer[i]);
  400208:	6802      	ldr	r2, [r0, #0]
  40020a:	6829      	ldr	r1, [r5, #0]
  40020c:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
  400210:	eb01 0184 	add.w	r1, r1, r4, lsl #2
  400214:	3401      	adds	r4, #1
  400216:	b212      	sxth	r2, r2
  400218:	ee07 2a90 	vmov	s15, r2
  40021c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
  400220:	edc1 7a00 	vstr	s15, [r1]
		for(int i = 0; i < BUF_SIZE; i++)
  400224:	3301      	adds	r3, #1
  400226:	2b80      	cmp	r3, #128	; 0x80
  400228:	d1ec      	bne.n	400204 <XDMAC_Handler+0x58>
		}
		
		if (processPingMode)
  40022a:	4b6f      	ldr	r3, [pc, #444]	; (4003e8 <XDMAC_Handler+0x23c>)
  40022c:	781b      	ldrb	r3, [r3, #0]
  40022e:	2b00      	cmp	r3, #0
  400230:	d02d      	beq.n	40028e <XDMAC_Handler+0xe2>
		{
			if (fillBuffer == &processPingBuffer[PROCESS_BUF_SIZE - (BUF_SIZE >> 1)])
  400232:	682b      	ldr	r3, [r5, #0]
  400234:	4a6d      	ldr	r2, [pc, #436]	; (4003ec <XDMAC_Handler+0x240>)
  400236:	4293      	cmp	r3, r2
  400238:	d001      	beq.n	40023e <XDMAC_Handler+0x92>
			{
				// out of time 
			}
			else
			{
				fillBuffer += PROCESS_BUF_SIZE_INCREMENT;
  40023a:	3380      	adds	r3, #128	; 0x80
  40023c:	602b      	str	r3, [r5, #0]
  40023e:	4b63      	ldr	r3, [pc, #396]	; (4003cc <XDMAC_Handler+0x220>)
  400240:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
			}
		}
    }
	
	dma_status = xdmac_channel_get_interrupt_status(XDMAC, XDMA_CH_SSC_TX);
	if (dma_status & XDMAC_CIS_BIS)
  400244:	07da      	lsls	r2, r3, #31
  400246:	d50a      	bpl.n	40025e <XDMAC_Handler+0xb2>
	{
		if(outPingMode)
  400248:	4b69      	ldr	r3, [pc, #420]	; (4003f0 <XDMAC_Handler+0x244>)
  40024a:	781a      	ldrb	r2, [r3, #0]
  40024c:	2a00      	cmp	r2, #0
  40024e:	d152      	bne.n	4002f6 <XDMAC_Handler+0x14a>
		{
			outBuffer = outPingBuffer; 
		}
		else
		{
			outBuffer = outPongBuffer; 
  400250:	4a63      	ldr	r2, [pc, #396]	; (4003e0 <XDMAC_Handler+0x234>)
  400252:	4968      	ldr	r1, [pc, #416]	; (4003f4 <XDMAC_Handler+0x248>)
  400254:	6011      	str	r1, [r2, #0]
		}
		outPingMode = !outPingMode; 
  400256:	781a      	ldrb	r2, [r3, #0]
  400258:	f082 0201 	eor.w	r2, r2, #1
  40025c:	701a      	strb	r2, [r3, #0]
  40025e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  400262:	4b5a      	ldr	r3, [pc, #360]	; (4003cc <XDMAC_Handler+0x220>)
  400264:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
	if (dma_status & XDMAC_CIS_BIS)
  400268:	07db      	lsls	r3, r3, #31
  40026a:	d50b      	bpl.n	400284 <XDMAC_Handler+0xd8>
		if(outPingMode)
  40026c:	4b60      	ldr	r3, [pc, #384]	; (4003f0 <XDMAC_Handler+0x244>)
  40026e:	781a      	ldrb	r2, [r3, #0]
  400270:	2a00      	cmp	r2, #0
  400272:	d144      	bne.n	4002fe <XDMAC_Handler+0x152>
			outBuffer = outPongBuffer; 
  400274:	4a5a      	ldr	r2, [pc, #360]	; (4003e0 <XDMAC_Handler+0x234>)
  400276:	495f      	ldr	r1, [pc, #380]	; (4003f4 <XDMAC_Handler+0x248>)
  400278:	6011      	str	r1, [r2, #0]
		outPingMode = !outPingMode; 
  40027a:	781a      	ldrb	r2, [r3, #0]
  40027c:	f082 0201 	eor.w	r2, r2, #1
  400280:	701a      	strb	r2, [r3, #0]
  400282:	4770      	bx	lr
  400284:	4770      	bx	lr
			inBuffer = inPingBuffer; 
  400286:	4854      	ldr	r0, [pc, #336]	; (4003d8 <XDMAC_Handler+0x22c>)
  400288:	4b5b      	ldr	r3, [pc, #364]	; (4003f8 <XDMAC_Handler+0x24c>)
  40028a:	6003      	str	r3, [r0, #0]
  40028c:	e79c      	b.n	4001c8 <XDMAC_Handler+0x1c>
			if (fillBuffer == &processPongBuffer[PROCESS_BUF_SIZE - (BUF_SIZE >> 1)])
  40028e:	682b      	ldr	r3, [r5, #0]
  400290:	4a5a      	ldr	r2, [pc, #360]	; (4003fc <XDMAC_Handler+0x250>)
  400292:	4293      	cmp	r3, r2
  400294:	d1d1      	bne.n	40023a <XDMAC_Handler+0x8e>
  400296:	e7d2      	b.n	40023e <XDMAC_Handler+0x92>
			if (one_beat)
  400298:	4a59      	ldr	r2, [pc, #356]	; (400400 <XDMAC_Handler+0x254>)
  40029a:	7812      	ldrb	r2, [r2, #0]
  40029c:	f002 01ff 	and.w	r1, r2, #255	; 0xff
  4002a0:	2a00      	cmp	r2, #0
  4002a2:	d134      	bne.n	40030e <XDMAC_Handler+0x162>
			else if (up_beat)
  4002a4:	4a57      	ldr	r2, [pc, #348]	; (400404 <XDMAC_Handler+0x258>)
  4002a6:	7812      	ldrb	r2, [r2, #0]
  4002a8:	f002 04ff 	and.w	r4, r2, #255	; 0xff
  4002ac:	2a00      	cmp	r2, #0
  4002ae:	d162      	bne.n	400376 <XDMAC_Handler+0x1ca>
  4002b0:	4621      	mov	r1, r4
  4002b2:	4a55      	ldr	r2, [pc, #340]	; (400408 <XDMAC_Handler+0x25c>)
  4002b4:	4c4a      	ldr	r4, [pc, #296]	; (4003e0 <XDMAC_Handler+0x234>)
					if(clickIdx == CLICK_LENGTH)
  4002b6:	f242 2e74 	movw	lr, #8820	; 0x2274
						clickIdx = 0;
  4002ba:	4688      	mov	r8, r1
  4002bc:	4e53      	ldr	r6, [pc, #332]	; (40040c <XDMAC_Handler+0x260>)
  4002be:	e003      	b.n	4002c8 <XDMAC_Handler+0x11c>
				for(int i = 0; i < BUF_SIZE; i++)
  4002c0:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
  4002c4:	d048      	beq.n	400358 <XDMAC_Handler+0x1ac>
  4002c6:	6803      	ldr	r3, [r0, #0]
					outBuffer[i] = (uint16_t) ( ( (int32_t)((int16_t)inBuffer[i]) + (int32_t)(click_low[clickIdx++]) ) / 2 );
  4002c8:	5a5b      	ldrh	r3, [r3, r1]
  4002ca:	6817      	ldr	r7, [r2, #0]
  4002cc:	6825      	ldr	r5, [r4, #0]
  4002ce:	f936 9017 	ldrsh.w	r9, [r6, r7, lsl #1]
  4002d2:	3701      	adds	r7, #1
  4002d4:	440d      	add	r5, r1
  4002d6:	3102      	adds	r1, #2
  4002d8:	fa09 f383 	sxtah	r3, r9, r3
  4002dc:	6017      	str	r7, [r2, #0]
  4002de:	2b00      	cmp	r3, #0
  4002e0:	bfb8      	it	lt
  4002e2:	3301      	addlt	r3, #1
  4002e4:	f3c3 034f 	ubfx	r3, r3, #1, #16
  4002e8:	802b      	strh	r3, [r5, #0]
					if(clickIdx == CLICK_LENGTH)
  4002ea:	6813      	ldr	r3, [r2, #0]
  4002ec:	4573      	cmp	r3, lr
  4002ee:	d1e7      	bne.n	4002c0 <XDMAC_Handler+0x114>
						clickIdx = 0;
  4002f0:	f8c2 8000 	str.w	r8, [r2]
  4002f4:	e7e4      	b.n	4002c0 <XDMAC_Handler+0x114>
			outBuffer = outPingBuffer; 
  4002f6:	4a3a      	ldr	r2, [pc, #232]	; (4003e0 <XDMAC_Handler+0x234>)
  4002f8:	4945      	ldr	r1, [pc, #276]	; (400410 <XDMAC_Handler+0x264>)
  4002fa:	6011      	str	r1, [r2, #0]
  4002fc:	e7ab      	b.n	400256 <XDMAC_Handler+0xaa>
  4002fe:	4a38      	ldr	r2, [pc, #224]	; (4003e0 <XDMAC_Handler+0x234>)
  400300:	4943      	ldr	r1, [pc, #268]	; (400410 <XDMAC_Handler+0x264>)
  400302:	6011      	str	r1, [r2, #0]
		outPingMode = !outPingMode; 
  400304:	781a      	ldrb	r2, [r3, #0]
  400306:	f082 0201 	eor.w	r2, r2, #1
  40030a:	701a      	strb	r2, [r3, #0]
  40030c:	4770      	bx	lr
  40030e:	2100      	movs	r1, #0
  400310:	4c33      	ldr	r4, [pc, #204]	; (4003e0 <XDMAC_Handler+0x234>)
  400312:	4a3d      	ldr	r2, [pc, #244]	; (400408 <XDMAC_Handler+0x25c>)
					if(clickIdx == CLICK_LENGTH) 
  400314:	f242 2e74 	movw	lr, #8820	; 0x2274
						clickIdx = 0;
  400318:	4688      	mov	r8, r1
  40031a:	4f3e      	ldr	r7, [pc, #248]	; (400414 <XDMAC_Handler+0x268>)
  40031c:	e003      	b.n	400326 <XDMAC_Handler+0x17a>
				for(int i = 0; i < BUF_SIZE; i++)
  40031e:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
  400322:	d019      	beq.n	400358 <XDMAC_Handler+0x1ac>
  400324:	6803      	ldr	r3, [r0, #0]
					outBuffer[i] = (uint16_t) ( ( (int32_t)((int16_t)inBuffer[i]) + (int32_t)(click_high[clickIdx++]) ) / 2 );
  400326:	5a5b      	ldrh	r3, [r3, r1]
  400328:	6815      	ldr	r5, [r2, #0]
  40032a:	6826      	ldr	r6, [r4, #0]
  40032c:	f937 9015 	ldrsh.w	r9, [r7, r5, lsl #1]
  400330:	3501      	adds	r5, #1
  400332:	440e      	add	r6, r1
  400334:	3102      	adds	r1, #2
  400336:	fa09 f383 	sxtah	r3, r9, r3
  40033a:	6015      	str	r5, [r2, #0]
  40033c:	2b00      	cmp	r3, #0
  40033e:	bfb8      	it	lt
  400340:	3301      	addlt	r3, #1
  400342:	f3c3 034f 	ubfx	r3, r3, #1, #16
  400346:	8033      	strh	r3, [r6, #0]
					if(clickIdx == CLICK_LENGTH) 
  400348:	6813      	ldr	r3, [r2, #0]
  40034a:	4573      	cmp	r3, lr
  40034c:	d1e7      	bne.n	40031e <XDMAC_Handler+0x172>
				for(int i = 0; i < BUF_SIZE; i++)
  40034e:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
						clickIdx = 0;
  400352:	f8c2 8000 	str.w	r8, [r2]
				for(int i = 0; i < BUF_SIZE; i++)
  400356:	d1e5      	bne.n	400324 <XDMAC_Handler+0x178>
			metronome_time_elapsed += BUF_SIZE_PER_CHANNEL; 
  400358:	4b2f      	ldr	r3, [pc, #188]	; (400418 <XDMAC_Handler+0x26c>)
  40035a:	6819      	ldr	r1, [r3, #0]
  40035c:	3140      	adds	r1, #64	; 0x40
  40035e:	6019      	str	r1, [r3, #0]
			if (metronome_time_elapsed >= CLICK_DURATION)
  400360:	6819      	ldr	r1, [r3, #0]
  400362:	f5b1 6f7a 	cmp.w	r1, #4000	; 0xfa0
  400366:	f4ff af4a 	bcc.w	4001fe <XDMAC_Handler+0x52>
				metronome_on = false; 
  40036a:	2100      	movs	r1, #0
  40036c:	4c1b      	ldr	r4, [pc, #108]	; (4003dc <XDMAC_Handler+0x230>)
  40036e:	7021      	strb	r1, [r4, #0]
				metronome_time_elapsed = 0; 
  400370:	6019      	str	r1, [r3, #0]
				clickIdx = 0; 
  400372:	6011      	str	r1, [r2, #0]
  400374:	e743      	b.n	4001fe <XDMAC_Handler+0x52>
  400376:	4c1a      	ldr	r4, [pc, #104]	; (4003e0 <XDMAC_Handler+0x234>)
					if(clickIdx == CLICK_LENGTH)
  400378:	f242 2e74 	movw	lr, #8820	; 0x2274
  40037c:	4a22      	ldr	r2, [pc, #136]	; (400408 <XDMAC_Handler+0x25c>)
						clickIdx = 0;
  40037e:	4688      	mov	r8, r1
  400380:	4e22      	ldr	r6, [pc, #136]	; (40040c <XDMAC_Handler+0x260>)
					outBuffer[i] = (uint16_t) ( ( (int32_t)((int16_t)inBuffer[i]) + (int32_t)(click_low[clickIdx++]/6) ) / 2 );
  400382:	4f26      	ldr	r7, [pc, #152]	; (40041c <XDMAC_Handler+0x270>)
  400384:	e003      	b.n	40038e <XDMAC_Handler+0x1e2>
				for(int i = 0; i < BUF_SIZE; i++)
  400386:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
  40038a:	d0e5      	beq.n	400358 <XDMAC_Handler+0x1ac>
  40038c:	6803      	ldr	r3, [r0, #0]
					outBuffer[i] = (uint16_t) ( ( (int32_t)((int16_t)inBuffer[i]) + (int32_t)(click_low[clickIdx++]/6) ) / 2 );
  40038e:	f833 9001 	ldrh.w	r9, [r3, r1]
  400392:	6813      	ldr	r3, [r2, #0]
  400394:	fa0f f989 	sxth.w	r9, r9
  400398:	6825      	ldr	r5, [r4, #0]
  40039a:	f936 a013 	ldrsh.w	sl, [r6, r3, lsl #1]
  40039e:	3301      	adds	r3, #1
  4003a0:	440d      	add	r5, r1
  4003a2:	3102      	adds	r1, #2
  4003a4:	fb87 cb0a 	smull	ip, fp, r7, sl
  4003a8:	6013      	str	r3, [r2, #0]
  4003aa:	ebab 73ea 	sub.w	r3, fp, sl, asr #31
  4003ae:	fa09 f383 	sxtah	r3, r9, r3
  4003b2:	2b00      	cmp	r3, #0
  4003b4:	bfb8      	it	lt
  4003b6:	3301      	addlt	r3, #1
  4003b8:	f3c3 034f 	ubfx	r3, r3, #1, #16
  4003bc:	802b      	strh	r3, [r5, #0]
					if(clickIdx == CLICK_LENGTH)
  4003be:	6813      	ldr	r3, [r2, #0]
  4003c0:	4573      	cmp	r3, lr
  4003c2:	d1e0      	bne.n	400386 <XDMAC_Handler+0x1da>
						clickIdx = 0;
  4003c4:	f8c2 8000 	str.w	r8, [r2]
  4003c8:	e7dd      	b.n	400386 <XDMAC_Handler+0x1da>
  4003ca:	bf00      	nop
  4003cc:	40078000 	.word	0x40078000
  4003d0:	20400014 	.word	0x20400014
  4003d4:	20419ad0 	.word	0x20419ad0
  4003d8:	20400010 	.word	0x20400010
  4003dc:	20409815 	.word	0x20409815
  4003e0:	20400018 	.word	0x20400018
  4003e4:	2040000c 	.word	0x2040000c
  4003e8:	20400024 	.word	0x20400024
  4003ec:	204199d0 	.word	0x204199d0
  4003f0:	2040001c 	.word	0x2040001c
  4003f4:	20419cd0 	.word	0x20419cd0
  4003f8:	20429dd0 	.word	0x20429dd0
  4003fc:	20429cd0 	.word	0x20429cd0
  400400:	20409a19 	.word	0x20409a19
  400404:	20409a1c 	.word	0x20409a1c
  400408:	2040101c 	.word	0x2040101c
  40040c:	0040a8b0 	.word	0x0040a8b0
  400410:	20419bd0 	.word	0x20419bd0
  400414:	004063c8 	.word	0x004063c8
  400418:	20401060 	.word	0x20401060
  40041c:	2aaaaaab 	.word	0x2aaaaaab

00400420 <configure_xdma>:
}
/******************************* XDMAC Interrupt Handler End *******************************/

/********************************** Public Functions Start **********************************/
void configure_xdma(void)
{
  400420:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t *src;
    
    xdmac_channel_config_t xdmac_channel_cfg = {0};
  400424:	2620      	movs	r6, #32
{
  400426:	b088      	sub	sp, #32
    xdmac_channel_config_t xdmac_channel_cfg = {0};
  400428:	2100      	movs	r1, #0
  40042a:	4b30      	ldr	r3, [pc, #192]	; (4004ec <configure_xdma+0xcc>)
  40042c:	4632      	mov	r2, r6
  40042e:	4668      	mov	r0, sp
  400430:	4798      	blx	r3
    
    /* Initialize and enable DMA controller */
    pmc_enable_periph_clk(ID_XDMAC);
  400432:	4b2f      	ldr	r3, [pc, #188]	; (4004f0 <configure_xdma+0xd0>)
  400434:	203a      	movs	r0, #58	; 0x3a
    | XDMAC_CC_DIF_AHB_IF0
    | XDMAC_CC_SAM_FIXED_AM
    | XDMAC_CC_DAM_INCREMENTED_AM
    | XDMAC_CC_PERID(33);
	
    xdmac_configure_transfer(XDMAC, XDMA_CH_SSC_RX, &xdmac_channel_cfg);
  400436:	4c2f      	ldr	r4, [pc, #188]	; (4004f4 <configure_xdma+0xd4>)
    pmc_enable_periph_clk(ID_XDMAC);
  400438:	4798      	blx	r3

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  40043a:	f04f 6580 	mov.w	r5, #67108864	; 0x4000000
  40043e:	4b2e      	ldr	r3, [pc, #184]	; (4004f8 <configure_xdma+0xd8>)
    xdmac_configure_transfer(XDMAC, XDMA_CH_SSC_RX, &xdmac_channel_cfg);
  400440:	466a      	mov	r2, sp
    xdmac_channel_cfg.mbr_cfg = XDMAC_CC_TYPE_PER_TRAN
  400442:	f8df e0c8 	ldr.w	lr, [pc, #200]	; 40050c <configure_xdma+0xec>
    xdmac_configure_transfer(XDMAC, XDMA_CH_SSC_RX, &xdmac_channel_cfg);
  400446:	4620      	mov	r0, r4
  400448:	f8c3 5184 	str.w	r5, [r3, #388]	; 0x184
  40044c:	2100      	movs	r1, #0
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHPR[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  40044e:	f883 633a 	strb.w	r6, [r3, #826]	; 0x33a
 */
static inline void xdmac_channel_set_descriptor_control(Xdmac *xdmac, uint32_t channel_num, uint32_t config)
{
	Assert(xdmac);
	Assert(channel_num < XDMACCHID_NUMBER);
	xdmac->XDMAC_CHID[channel_num].XDMAC_CNDC = config;
  400452:	270f      	movs	r7, #15
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  400454:	605d      	str	r5, [r3, #4]
	xdmac->XDMAC_GIE = ( XDMAC_GIE_IE0 << channel_num) ;
  400456:	2501      	movs	r5, #1
  400458:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 400510 <configure_xdma+0xf0>
    xdmac_channel_cfg.mbr_cfg = XDMAC_CC_TYPE_PER_TRAN
  40045c:	f8cd e00c 	str.w	lr, [sp, #12]
    xdmac_configure_transfer(XDMAC, XDMA_CH_SSC_RX, &xdmac_channel_cfg);
  400460:	47c0      	blx	r8
    
    /* Initialize linked list descriptor */
    src = (uint16_t *)&inPingBuffer[0];
    linklist_read[0].mbr_ubc = XDMAC_UBC_NVIEW_NDV1
  400462:	4b26      	ldr	r3, [pc, #152]	; (4004fc <configure_xdma+0xdc>)
    | XDMAC_CC_DIF_AHB_IF1
    | XDMAC_CC_SAM_INCREMENTED_AM
    | XDMAC_CC_DAM_FIXED_AM
    | XDMAC_CC_PERID(32);
	
    xdmac_configure_transfer(XDMAC, XDMA_CH_SSC_TX, &xdmac_channel_cfg);
  400464:	466a      	mov	r2, sp
    linklist_read[0].mbr_da = (uint32_t)(src);
  400466:	f8df e0ac 	ldr.w	lr, [pc, #172]	; 400514 <configure_xdma+0xf4>
    xdmac_configure_transfer(XDMAC, XDMA_CH_SSC_TX, &xdmac_channel_cfg);
  40046a:	4629      	mov	r1, r5
    linklist_read[0].mbr_nda = (uint32_t)&linklist_read[1];
  40046c:	f103 0010 	add.w	r0, r3, #16
	xdmac->XDMAC_CHID[channel_num].XDMAC_CNDA = (desc_addr & 0xFFFFFFFC) | ndaif;
  400470:	f023 0603 	bic.w	r6, r3, #3
	linklist_read[1].mbr_da = (uint32_t)(src);
  400474:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 400518 <configure_xdma+0xf8>
    linklist_read[0].mbr_nda = (uint32_t)&linklist_read[1];
  400478:	6018      	str	r0, [r3, #0]
    xdmac_configure_transfer(XDMAC, XDMA_CH_SSC_TX, &xdmac_channel_cfg);
  40047a:	4620      	mov	r0, r4
	xdmac->XDMAC_CHID[channel_num].XDMAC_CNDC = config;
  40047c:	66e7      	str	r7, [r4, #108]	; 0x6c
	xdmac->XDMAC_CHID[channel_num].XDMAC_CNDA = (desc_addr & 0xFFFFFFFC) | ndaif;
  40047e:	66a6      	str	r6, [r4, #104]	; 0x68
	xdmac->XDMAC_GIE = ( XDMAC_GIE_IE0 << channel_num) ;
  400480:	60e5      	str	r5, [r4, #12]
    linklist_read[0].mbr_ubc = XDMAC_UBC_NVIEW_NDV1
  400482:	4e1f      	ldr	r6, [pc, #124]	; (400500 <configure_xdma+0xe0>)
	xdmac->XDMAC_CHID[channel_num].XDMAC_CIE = mask;
  400484:	6525      	str	r5, [r4, #80]	; 0x50
    linklist_read[0].mbr_da = (uint32_t)(src);
  400486:	f8c3 e00c 	str.w	lr, [r3, #12]
    linklist_read[0].mbr_sa  = (uint32_t)&(SSC->SSC_RHR);
  40048a:	f8df e090 	ldr.w	lr, [pc, #144]	; 40051c <configure_xdma+0xfc>
	linklist_read[1].mbr_da = (uint32_t)(src);
  40048e:	f8c3 c01c 	str.w	ip, [r3, #28]
    xdmac_channel_cfg.mbr_cfg = XDMAC_CC_TYPE_PER_TRAN
  400492:	f8df c08c 	ldr.w	ip, [pc, #140]	; 400520 <configure_xdma+0x100>
    linklist_read[0].mbr_ubc = XDMAC_UBC_NVIEW_NDV1
  400496:	605e      	str	r6, [r3, #4]
	linklist_read[1].mbr_ubc = XDMAC_UBC_NVIEW_NDV1
  400498:	615e      	str	r6, [r3, #20]
    linklist_read[0].mbr_sa  = (uint32_t)&(SSC->SSC_RHR);
  40049a:	f8c3 e008 	str.w	lr, [r3, #8]
	linklist_read[1].mbr_sa  = (uint32_t)&(SSC->SSC_RHR);
  40049e:	f8c3 e018 	str.w	lr, [r3, #24]
	linklist_read[1].mbr_nda = (uint32_t)&linklist_read[0];
  4004a2:	611b      	str	r3, [r3, #16]
    xdmac_channel_cfg.mbr_cfg = XDMAC_CC_TYPE_PER_TRAN
  4004a4:	f8cd c00c 	str.w	ip, [sp, #12]
    xdmac_configure_transfer(XDMAC, XDMA_CH_SSC_TX, &xdmac_channel_cfg);
  4004a8:	47c0      	blx	r8
    
    src = (uint16_t *)&outPingBuffer[0];
    linklist_write[0].mbr_ubc = XDMAC_UBC_NVIEW_NDV1
  4004aa:	4b16      	ldr	r3, [pc, #88]	; (400504 <configure_xdma+0xe4>)
	xdmac->XDMAC_GIE = ( XDMAC_GIE_IE0 << channel_num) ;
  4004ac:	2102      	movs	r1, #2
		 | XDMAC_UBC_NDE_FETCH_EN
		 | XDMAC_UBC_NSEN_UPDATED
			| XDMAC_CUBC_UBLEN(BUF_SIZE);
    linklist_write[0].mbr_sa = (uint32_t)(src);
    linklist_write[0].mbr_da = (uint32_t)&(SSC->SSC_THR);
  4004ae:	4a16      	ldr	r2, [pc, #88]	; (400508 <configure_xdma+0xe8>)
    linklist_write[0].mbr_sa = (uint32_t)(src);
  4004b0:	f8df c070 	ldr.w	ip, [pc, #112]	; 400524 <configure_xdma+0x104>
    linklist_write[0].mbr_nda = (uint32_t)&linklist_write[1];
  4004b4:	f103 0810 	add.w	r8, r3, #16
	xdmac->XDMAC_CHID[channel_num].XDMAC_CNDA = (desc_addr & 0xFFFFFFFC) | ndaif;
  4004b8:	f023 0003 	bic.w	r0, r3, #3
	src = (uint16_t *)&outPongBuffer[0];
	linklist_write[1].mbr_ubc = XDMAC_UBC_NVIEW_NDV1
	    | XDMAC_UBC_NDE_FETCH_EN
	    | XDMAC_UBC_NSEN_UPDATED
	    | XDMAC_CUBC_UBLEN(BUF_SIZE);
	linklist_write[1].mbr_sa = (uint32_t)(src);
  4004bc:	f8df e068 	ldr.w	lr, [pc, #104]	; 400528 <configure_xdma+0x108>
    linklist_write[0].mbr_ubc = XDMAC_UBC_NVIEW_NDV1
  4004c0:	605e      	str	r6, [r3, #4]
	linklist_write[1].mbr_ubc = XDMAC_UBC_NVIEW_NDV1
  4004c2:	615e      	str	r6, [r3, #20]
	linklist_write[1].mbr_da = (uint32_t)&(SSC->SSC_THR);
	linklist_write[1].mbr_nda = (uint32_t)&linklist_write[0];
  4004c4:	611b      	str	r3, [r3, #16]
    linklist_write[0].mbr_nda = (uint32_t)&linklist_write[1];
  4004c6:	f8c3 8000 	str.w	r8, [r3]
    linklist_write[0].mbr_sa = (uint32_t)(src);
  4004ca:	f8c3 c008 	str.w	ip, [r3, #8]
	xdmac->XDMAC_CHID[channel_num].XDMAC_CNDC = config;
  4004ce:	f8c4 70ac 	str.w	r7, [r4, #172]	; 0xac
	linklist_write[1].mbr_sa = (uint32_t)(src);
  4004d2:	f8c3 e018 	str.w	lr, [r3, #24]
	xdmac->XDMAC_CHID[channel_num].XDMAC_CNDA = (desc_addr & 0xFFFFFFFC) | ndaif;
  4004d6:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
    linklist_write[0].mbr_da = (uint32_t)&(SSC->SSC_THR);
  4004da:	60da      	str	r2, [r3, #12]
	xdmac->XDMAC_GIE = ( XDMAC_GIE_IE0 << channel_num) ;
  4004dc:	60e1      	str	r1, [r4, #12]
	linklist_write[1].mbr_da = (uint32_t)&(SSC->SSC_THR);
  4004de:	61da      	str	r2, [r3, #28]
	xdmac->XDMAC_CHID[channel_num].XDMAC_CIE = mask;
  4004e0:	f8c4 5090 	str.w	r5, [r4, #144]	; 0x90
    xdmac_channel_set_descriptor_addr(XDMAC, XDMA_CH_SSC_TX, (uint32_t)(&linklist_write[0]), 0);
    
    xdmac_enable_interrupt(XDMAC, XDMA_CH_SSC_TX);
    xdmac_channel_enable_interrupt(XDMAC, XDMA_CH_SSC_TX, XDMAC_CIE_BIE);
    
}
  4004e4:	b008      	add	sp, #32
  4004e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4004ea:	bf00      	nop
  4004ec:	00403a11 	.word	0x00403a11
  4004f0:	004022a9 	.word	0x004022a9
  4004f4:	40078000 	.word	0x40078000
  4004f8:	e000e100 	.word	0xe000e100
  4004fc:	20401020 	.word	0x20401020
  400500:	0b000080 	.word	0x0b000080
  400504:	20401040 	.word	0x20401040
  400508:	40004024 	.word	0x40004024
  40050c:	21042801 	.word	0x21042801
  400510:	00401c3d 	.word	0x00401c3d
  400514:	20429dd0 	.word	0x20429dd0
  400518:	20419ad0 	.word	0x20419ad0
  40051c:	40004020 	.word	0x40004020
  400520:	20014811 	.word	0x20014811
  400524:	20419bd0 	.word	0x20419bd0
  400528:	20419cd0 	.word	0x20419cd0

0040052c <audio_init>:

#include "DMA_Audio.h"
#include "WM8904_Driver.h"

void audio_init(void)
{
  40052c:	b510      	push	{r4, lr}
	/* Initialize WM8904 TWI interface*/
	if (wm8904_twi_init() != TWIHS_SUCCESS) {
  40052e:	4b13      	ldr	r3, [pc, #76]	; (40057c <audio_init+0x50>)
  400530:	4798      	blx	r3
  400532:	b118      	cbz	r0, 40053c <audio_init+0x10>
		printf("-E-\tWM8904 initialization failed.\r");
  400534:	4812      	ldr	r0, [pc, #72]	; (400580 <audio_init+0x54>)
  400536:	4b13      	ldr	r3, [pc, #76]	; (400584 <audio_init+0x58>)
  400538:	4798      	blx	r3
  40053a:	e7fe      	b.n	40053a <audio_init+0xe>
			/* Capture error */
		}
	}
		
	/* Configure CODEC */
	configure_codec();
  40053c:	4b12      	ldr	r3, [pc, #72]	; (400588 <audio_init+0x5c>)
  40053e:	4604      	mov	r4, r0
  400540:	4798      	blx	r3
		
	/* Configure SSC */
	configure_ssc();
  400542:	4b12      	ldr	r3, [pc, #72]	; (40058c <audio_init+0x60>)
  400544:	4798      	blx	r3
		
	/* Configure XDMA */
	configure_xdma();
  400546:	4b12      	ldr	r3, [pc, #72]	; (400590 <audio_init+0x64>)
  400548:	4798      	blx	r3
		
	/* Enable the DAC master clock */
	pmc_pck_set_prescaler(PMC_PCK_2, PMC_MCKR_PRES_CLK_1);
  40054a:	4621      	mov	r1, r4
  40054c:	2002      	movs	r0, #2
  40054e:	4b11      	ldr	r3, [pc, #68]	; (400594 <audio_init+0x68>)
  400550:	4798      	blx	r3
	pmc_pck_set_source(PMC_PCK_2, PMC_MCKR_CSS_SLOW_CLK);
  400552:	4621      	mov	r1, r4
  400554:	2002      	movs	r0, #2
  400556:	4b10      	ldr	r3, [pc, #64]	; (400598 <audio_init+0x6c>)
  400558:	4798      	blx	r3
	pmc_enable_pck(PMC_PCK_2);
  40055a:	2002      	movs	r0, #2
  40055c:	4b0f      	ldr	r3, [pc, #60]	; (40059c <audio_init+0x70>)
  40055e:	4798      	blx	r3
		
	/* Start playing */
	ssc_enable_rx(SSC);
  400560:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
  400564:	4b0e      	ldr	r3, [pc, #56]	; (4005a0 <audio_init+0x74>)
  400566:	4798      	blx	r3
	xdmac->XDMAC_GE = (XDMAC_GE_EN0 << channel_num);
  400568:	4c0e      	ldr	r4, [pc, #56]	; (4005a4 <audio_init+0x78>)
  40056a:	2201      	movs	r2, #1
	xdmac_channel_enable(XDMAC, XDMA_CH_SSC_RX);
	// might want to enable in the first xdma interrupt (if you care)
	ssc_enable_tx(SSC);
  40056c:	4b0e      	ldr	r3, [pc, #56]	; (4005a8 <audio_init+0x7c>)
  40056e:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
  400572:	61e2      	str	r2, [r4, #28]
  400574:	4798      	blx	r3
  400576:	2302      	movs	r3, #2
  400578:	61e3      	str	r3, [r4, #28]
  40057a:	bd10      	pop	{r4, pc}
  40057c:	004016d9 	.word	0x004016d9
  400580:	0040ed98 	.word	0x0040ed98
  400584:	00403479 	.word	0x00403479
  400588:	00400671 	.word	0x00400671
  40058c:	004005ad 	.word	0x004005ad
  400590:	00400421 	.word	0x00400421
  400594:	004022f1 	.word	0x004022f1
  400598:	00402325 	.word	0x00402325
  40059c:	00402359 	.word	0x00402359
  4005a0:	004017e9 	.word	0x004017e9
  4005a4:	40078000 	.word	0x40078000
  4005a8:	004017f9 	.word	0x004017f9

004005ac <configure_ssc>:
#include "WM8904_Driver.h"


/********************************** Public Functions Start **********************************/
void configure_ssc(void)
{
  4005ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	clock_opt_t tx_clk_option, rx_clk_option;
	data_frame_opt_t tx_data_frame_option, rx_data_frame_option;

	/* Initialize clock */
	pmc_enable_periph_clk(ID_SSC);
  4005b0:	4b28      	ldr	r3, [pc, #160]	; (400654 <configure_ssc+0xa8>)
{
  4005b2:	b09c      	sub	sp, #112	; 0x70
	pmc_enable_periph_clk(ID_SSC);
  4005b4:	2016      	movs	r0, #22
	/* Reset SSC */
	ssc_reset(SSC);

	/* Transmitter clock mode configuration. */
	tx_clk_option.ul_cks = SSC_TCMR_CKS_TK;
	tx_clk_option.ul_cko = SSC_TCMR_CKO_NONE;
  4005b6:	2400      	movs	r4, #0
	pmc_enable_periph_clk(ID_SSC);
  4005b8:	4798      	blx	r3
	ssc_reset(SSC);
  4005ba:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
  4005be:	4b26      	ldr	r3, [pc, #152]	; (400658 <configure_ssc+0xac>)
	tx_clk_option.ul_cki = 0;
	tx_clk_option.ul_ckg = SSC_TCMR_CKG_CONTINUOUS;
	tx_clk_option.ul_start_sel = SSC_TCMR_START_TF_EDGE;
	tx_clk_option.ul_sttdly = 1;
	tx_clk_option.ul_period = BITS_BY_SLOT - 1;
  4005c0:	250f      	movs	r5, #15
	ssc_reset(SSC);
  4005c2:	4798      	blx	r3
	tx_clk_option.ul_sttdly = 1;
  4005c4:	2601      	movs	r6, #1
	tx_clk_option.ul_start_sel = SSC_TCMR_START_TF_EDGE;
  4005c6:	f44f 68e0 	mov.w	r8, #1792	; 0x700
	tx_clk_option.ul_cks = SSC_TCMR_CKS_TK;
  4005ca:	f04f 0e02 	mov.w	lr, #2
	/* Transmitter frame mode configuration. */
	tx_data_frame_option.ul_datlen = BITS_BY_SLOT - 1;
	tx_data_frame_option.ul_msbf = SSC_TFMR_MSBF;
  4005ce:	2780      	movs	r7, #128	; 0x80
	tx_data_frame_option.ul_fslen = BITS_BY_SLOT - 1;
	tx_data_frame_option.ul_fslen_ext = 0;
	tx_data_frame_option.ul_fsos = SSC_TFMR_FSOS_NONE;
	tx_data_frame_option.ul_fsedge = SSC_TFMR_FSEDGE_POSITIVE;
	/* Configure the SSC transmitter to I2S mode. */
	ssc_set_transmitter(SSC, &tx_clk_option, &tx_data_frame_option);
  4005d0:	aa0e      	add	r2, sp, #56	; 0x38
  4005d2:	4669      	mov	r1, sp
  4005d4:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
  4005d8:	4b20      	ldr	r3, [pc, #128]	; (40065c <configure_ssc+0xb0>)
	tx_clk_option.ul_cks = SSC_TCMR_CKS_TK;
  4005da:	f8cd e000 	str.w	lr, [sp]
	tx_clk_option.ul_cko = SSC_TCMR_CKO_NONE;
  4005de:	9401      	str	r4, [sp, #4]
	tx_clk_option.ul_cki = 0;
  4005e0:	9402      	str	r4, [sp, #8]
	tx_clk_option.ul_ckg = SSC_TCMR_CKG_CONTINUOUS;
  4005e2:	9403      	str	r4, [sp, #12]
	tx_data_frame_option.ul_datnb = 0;
  4005e4:	9410      	str	r4, [sp, #64]	; 0x40
	tx_data_frame_option.ul_fslen_ext = 0;
  4005e6:	9412      	str	r4, [sp, #72]	; 0x48
	tx_data_frame_option.ul_fsos = SSC_TFMR_FSOS_NONE;
  4005e8:	9413      	str	r4, [sp, #76]	; 0x4c
	tx_data_frame_option.ul_fsedge = SSC_TFMR_FSEDGE_POSITIVE;
  4005ea:	9414      	str	r4, [sp, #80]	; 0x50
	tx_clk_option.ul_start_sel = SSC_TCMR_START_TF_EDGE;
  4005ec:	f8cd 8018 	str.w	r8, [sp, #24]
	tx_clk_option.ul_sttdly = 1;
  4005f0:	9605      	str	r6, [sp, #20]
	tx_clk_option.ul_period = BITS_BY_SLOT - 1;
  4005f2:	9504      	str	r5, [sp, #16]
	tx_data_frame_option.ul_datlen = BITS_BY_SLOT - 1;
  4005f4:	950e      	str	r5, [sp, #56]	; 0x38
	tx_data_frame_option.ul_fslen = BITS_BY_SLOT - 1;
  4005f6:	9511      	str	r5, [sp, #68]	; 0x44
	tx_data_frame_option.ul_msbf = SSC_TFMR_MSBF;
  4005f8:	970f      	str	r7, [sp, #60]	; 0x3c
	ssc_set_transmitter(SSC, &tx_clk_option, &tx_data_frame_option);
  4005fa:	4798      	blx	r3

	/* Receiver clock mode configuration. */
	rx_clk_option.ul_cks = SSC_RCMR_CKS_TK;
	rx_clk_option.ul_cko = SSC_RCMR_CKO_NONE;
	rx_clk_option.ul_cki = SSC_RCMR_CKI;
  4005fc:	f04f 0c20 	mov.w	ip, #32
	rx_clk_option.ul_ckg = SSC_RCMR_CKG_CONTINUOUS;
	rx_clk_option.ul_start_sel = SSC_RCMR_START_RF_EDGE;
	rx_clk_option.ul_sttdly = 1;	
	rx_clk_option.ul_period = BITS_BY_SLOT;	
  400600:	f04f 0e10 	mov.w	lr, #16
	rx_data_frame_option.ul_fslen = BITS_BY_SLOT - 1;	
	rx_data_frame_option.ul_fslen_ext = 0;
	rx_data_frame_option.ul_fsos = SSC_TFMR_FSOS_NONE;
	rx_data_frame_option.ul_fsedge = SSC_TFMR_FSEDGE_POSITIVE;
	/* Configure the SSC transmitter to I2S mode. */
	ssc_set_receiver(SSC, &rx_clk_option, &rx_data_frame_option);
  400604:	aa15      	add	r2, sp, #84	; 0x54
  400606:	a907      	add	r1, sp, #28
  400608:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
  40060c:	4b14      	ldr	r3, [pc, #80]	; (400660 <configure_ssc+0xb4>)
	rx_clk_option.ul_cki = SSC_RCMR_CKI;
  40060e:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
	rx_clk_option.ul_period = BITS_BY_SLOT;	
  400612:	f8cd e02c 	str.w	lr, [sp, #44]	; 0x2c
	rx_clk_option.ul_start_sel = SSC_RCMR_START_RF_EDGE;
  400616:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
	rx_clk_option.ul_cks = SSC_RCMR_CKS_TK;
  40061a:	9607      	str	r6, [sp, #28]
	rx_clk_option.ul_cko = SSC_RCMR_CKO_NONE;
  40061c:	9408      	str	r4, [sp, #32]
	rx_clk_option.ul_ckg = SSC_RCMR_CKG_CONTINUOUS;
  40061e:	940a      	str	r4, [sp, #40]	; 0x28
	rx_clk_option.ul_sttdly = 1;	
  400620:	960c      	str	r6, [sp, #48]	; 0x30
	rx_data_frame_option.ul_datlen = BITS_BY_SLOT - 1;
  400622:	9515      	str	r5, [sp, #84]	; 0x54
	rx_data_frame_option.ul_msbf = SSC_RFMR_MSBF;
  400624:	9716      	str	r7, [sp, #88]	; 0x58
	rx_data_frame_option.ul_datnb = 0;
  400626:	9417      	str	r4, [sp, #92]	; 0x5c
	rx_data_frame_option.ul_fslen = BITS_BY_SLOT - 1;	
  400628:	9518      	str	r5, [sp, #96]	; 0x60
	rx_data_frame_option.ul_fslen_ext = 0;
  40062a:	9419      	str	r4, [sp, #100]	; 0x64
	rx_data_frame_option.ul_fsos = SSC_TFMR_FSOS_NONE;
  40062c:	941a      	str	r4, [sp, #104]	; 0x68
	rx_data_frame_option.ul_fsedge = SSC_TFMR_FSEDGE_POSITIVE;
  40062e:	941b      	str	r4, [sp, #108]	; 0x6c
	ssc_set_receiver(SSC, &rx_clk_option, &rx_data_frame_option);
  400630:	4798      	blx	r3

	/* Disable transmitter first */
	ssc_disable_tx(SSC);
  400632:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
  400636:	4b0b      	ldr	r3, [pc, #44]	; (400664 <configure_ssc+0xb8>)
  400638:	4798      	blx	r3
	ssc_disable_rx(SSC);
  40063a:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
  40063e:	4b0a      	ldr	r3, [pc, #40]	; (400668 <configure_ssc+0xbc>)
  400640:	4798      	blx	r3

	/* Disable All Interrupt */
	ssc_disable_interrupt(SSC, 0xFFFFFFFF);
  400642:	f04f 31ff 	mov.w	r1, #4294967295
  400646:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
  40064a:	4b08      	ldr	r3, [pc, #32]	; (40066c <configure_ssc+0xc0>)
  40064c:	4798      	blx	r3
}
  40064e:	b01c      	add	sp, #112	; 0x70
  400650:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400654:	004022a9 	.word	0x004022a9
  400658:	004017d5 	.word	0x004017d5
  40065c:	0040187d 	.word	0x0040187d
  400660:	00401809 	.word	0x00401809
  400664:	00401801 	.word	0x00401801
  400668:	004017f1 	.word	0x004017f1
  40066c:	004018f1 	.word	0x004018f1

00400670 <configure_codec>:


void configure_codec(void)
{
  400670:	b570      	push	{r4, r5, r6, lr}
	uint16_t data = 0;
	/* check that WM8904 is present */
	wm8904_write_register(WM8904_SW_RESET_AND_ID, 0xFFFF);
  400672:	f64f 71ff 	movw	r1, #65535	; 0xffff
  400676:	2000      	movs	r0, #0
  400678:	4c40      	ldr	r4, [pc, #256]	; (40077c <configure_codec+0x10c>)
  40067a:	47a0      	blx	r4
	data = wm8904_read_register(WM8904_SW_RESET_AND_ID);
  40067c:	4b40      	ldr	r3, [pc, #256]	; (400780 <configure_codec+0x110>)
  40067e:	2000      	movs	r0, #0
  400680:	4798      	blx	r3
	if(data != 0x8904) {
  400682:	f648 1304 	movw	r3, #35076	; 0x8904
  400686:	4298      	cmp	r0, r3
  400688:	d003      	beq.n	400692 <configure_codec+0x22>
		printf("WM8904 not found!\n\r");
  40068a:	483e      	ldr	r0, [pc, #248]	; (400784 <configure_codec+0x114>)
  40068c:	4b3e      	ldr	r3, [pc, #248]	; (400788 <configure_codec+0x118>)
  40068e:	4798      	blx	r3
  400690:	e7fe      	b.n	400690 <configure_codec+0x20>
		while(1);
	}

	wm8904_write_register(WM8904_BIAS_CONTROL_0, WM8904_ISEL_HP_BIAS);	
  400692:	2108      	movs	r1, #8
  400694:	2004      	movs	r0, #4
  400696:	47a0      	blx	r4
	wm8904_write_register(WM8904_VMID_CONTROL_0, WM8904_VMID_BUF_ENA |	
  400698:	2147      	movs	r1, #71	; 0x47
  40069a:	2005      	movs	r0, #5
	WM8904_VMID_RES_FAST | WM8904_VMID_ENA);
	delay_ms(5);
  40069c:	4d3b      	ldr	r5, [pc, #236]	; (40078c <configure_codec+0x11c>)
	wm8904_write_register(WM8904_VMID_CONTROL_0, WM8904_VMID_BUF_ENA |	
  40069e:	47a0      	blx	r4
	delay_ms(5);
  4006a0:	483b      	ldr	r0, [pc, #236]	; (400790 <configure_codec+0x120>)
  4006a2:	47a8      	blx	r5
	wm8904_write_register(WM8904_VMID_CONTROL_0, WM8904_VMID_BUF_ENA |
  4006a4:	2143      	movs	r1, #67	; 0x43
  4006a6:	2005      	movs	r0, #5
  4006a8:	47a0      	blx	r4
	WM8904_VMID_RES_NORMAL | WM8904_VMID_ENA);
	wm8904_write_register(WM8904_BIAS_CONTROL_0, WM8904_ISEL_HP_BIAS | WM8904_BIAS_ENA);
  4006aa:	2109      	movs	r1, #9
  4006ac:	2004      	movs	r0, #4
  4006ae:	47a0      	blx	r4
	wm8904_write_register(WM8904_POWER_MANAGEMENT_0, WM8904_INL_ENA | WM8904_INR_ENA);
  4006b0:	2103      	movs	r1, #3
  4006b2:	200c      	movs	r0, #12
  4006b4:	47a0      	blx	r4
	wm8904_write_register(WM8904_POWER_MANAGEMENT_2, WM8904_HPL_PGA_ENA | WM8904_HPR_PGA_ENA);
  4006b6:	2103      	movs	r1, #3
  4006b8:	200e      	movs	r0, #14
  4006ba:	47a0      	blx	r4
	wm8904_write_register(WM8904_DAC_DIGITAL_1, WM8904_DEEMPH(0));
  4006bc:	2100      	movs	r1, #0
  4006be:	2021      	movs	r0, #33	; 0x21
  4006c0:	47a0      	blx	r4
	wm8904_write_register(WM8904_ANALOGUE_OUT12_ZC, 0x0000);
  4006c2:	2100      	movs	r1, #0
  4006c4:	203d      	movs	r0, #61	; 0x3d
  4006c6:	47a0      	blx	r4
	wm8904_write_register(WM8904_CHARGE_PUMP_0, WM8904_CP_ENA);
  4006c8:	2101      	movs	r1, #1
  4006ca:	2062      	movs	r0, #98	; 0x62
  4006cc:	47a0      	blx	r4
	wm8904_write_register(WM8904_CLASS_W_0, WM8904_CP_DYN_PWR);
  4006ce:	2101      	movs	r1, #1
  4006d0:	2068      	movs	r0, #104	; 0x68
  4006d2:	47a0      	blx	r4
	wm8904_write_register(WM8904_FLL_CONTROL_1, 0x0000);
  4006d4:	2100      	movs	r1, #0
  4006d6:	2074      	movs	r0, #116	; 0x74
  4006d8:	47a0      	blx	r4
	wm8904_write_register(WM8904_FLL_CONTROL_2, WM8904_FLL_OUTDIV(7)| WM8904_FLL_FRATIO(4));
  4006da:	f240 7104 	movw	r1, #1796	; 0x704
  4006de:	2075      	movs	r0, #117	; 0x75
  4006e0:	47a0      	blx	r4
	wm8904_write_register(WM8904_FLL_CONTROL_3, WM8904_FLL_K(0x8000));
  4006e2:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  4006e6:	2076      	movs	r0, #118	; 0x76
  4006e8:	47a0      	blx	r4
	wm8904_write_register(WM8904_FLL_CONTROL_4, WM8904_FLL_N(0xBB));
  4006ea:	f44f 51bb 	mov.w	r1, #5984	; 0x1760
  4006ee:	2077      	movs	r0, #119	; 0x77
  4006f0:	47a0      	blx	r4
	wm8904_write_register(WM8904_FLL_CONTROL_1, WM8904_FLL_FRACN_ENA | WM8904_FLL_ENA);
  4006f2:	2105      	movs	r1, #5
  4006f4:	2074      	movs	r0, #116	; 0x74
  4006f6:	47a0      	blx	r4
	delay_ms(5);
  4006f8:	4825      	ldr	r0, [pc, #148]	; (400790 <configure_codec+0x120>)
  4006fa:	47a8      	blx	r5
	wm8904_write_register(WM8904_CLOCK_RATES_1, WM8904_CLK_SYS_RATE(3) | WM8904_SAMPLE_RATE(SAMPLE_RATE));
  4006fc:	f640 4105 	movw	r1, #3077	; 0xc05
  400700:	2015      	movs	r0, #21
  400702:	47a0      	blx	r4
	wm8904_write_register(WM8904_CLOCK_RATES_0, 0x0000);
  400704:	2100      	movs	r1, #0
  400706:	2014      	movs	r0, #20
  400708:	47a0      	blx	r4
	wm8904_write_register(WM8904_CLOCK_RATES_2,
  40070a:	f244 0106 	movw	r1, #16390	; 0x4006
  40070e:	2016      	movs	r0, #22
  400710:	47a0      	blx	r4
	WM8904_SYSCLK_SRC | WM8904_CLK_SYS_ENA | WM8904_CLK_DSP_ENA);
	wm8904_write_register(WM8904_AUDIO_INTERFACE_1, WM8904_BCLK_DIR | WM8904_AIF_FMT_I2S); 
  400712:	2142      	movs	r1, #66	; 0x42
  400714:	2019      	movs	r0, #25
  400716:	47a0      	blx	r4
	wm8904_write_register(WM8904_AUDIO_INTERFACE_2, WM8904_BCLK_DIV(8));
  400718:	2108      	movs	r1, #8
  40071a:	201a      	movs	r0, #26
  40071c:	47a0      	blx	r4
	wm8904_write_register(WM8904_AUDIO_INTERFACE_3, WM8904_LRCLK_DIR | WM8904_LRCLK_RATE(0x20));
  40071e:	f44f 6102 	mov.w	r1, #2080	; 0x820
  400722:	201b      	movs	r0, #27
  400724:	47a0      	blx	r4
	wm8904_write_register(WM8904_POWER_MANAGEMENT_6,
  400726:	210f      	movs	r1, #15
  400728:	2012      	movs	r0, #18
  40072a:	47a0      	blx	r4
	WM8904_DACL_ENA | WM8904_DACR_ENA |
	WM8904_ADCL_ENA | WM8904_ADCR_ENA);
	delay_ms(5);
  40072c:	4818      	ldr	r0, [pc, #96]	; (400790 <configure_codec+0x120>)
  40072e:	47a8      	blx	r5
	wm8904_write_register(WM8904_ANALOGUE_LEFT_INPUT_0, WM8904_LIN_VOL(0x10));
  400730:	2110      	movs	r1, #16
  400732:	202c      	movs	r0, #44	; 0x2c
  400734:	47a0      	blx	r4
	wm8904_write_register(WM8904_ANALOGUE_RIGHT_INPUT_0, WM8904_RIN_VOL(0x10));
  400736:	2110      	movs	r1, #16
  400738:	202d      	movs	r0, #45	; 0x2d
  40073a:	47a0      	blx	r4
	wm8904_write_register(WM8904_ANALOGUE_HP_0,
  40073c:	2111      	movs	r1, #17
  40073e:	205a      	movs	r0, #90	; 0x5a
  400740:	47a0      	blx	r4
	WM8904_HPL_ENA | WM8904_HPR_ENA);
	wm8904_write_register(WM8904_ANALOGUE_HP_0,
  400742:	2133      	movs	r1, #51	; 0x33
  400744:	205a      	movs	r0, #90	; 0x5a
  400746:	47a0      	blx	r4
	WM8904_HPL_ENA_DLY | WM8904_HPL_ENA |
	WM8904_HPR_ENA_DLY | WM8904_HPR_ENA);
	wm8904_write_register(WM8904_DC_SERVO_0,
  400748:	210f      	movs	r1, #15
  40074a:	2043      	movs	r0, #67	; 0x43
  40074c:	47a0      	blx	r4
	WM8904_DCS_ENA_CHAN_3 | WM8904_DCS_ENA_CHAN_2 |
	WM8904_DCS_ENA_CHAN_1 | WM8904_DCS_ENA_CHAN_0);
	wm8904_write_register(WM8904_DC_SERVO_1,
  40074e:	21f0      	movs	r1, #240	; 0xf0
  400750:	2044      	movs	r0, #68	; 0x44
  400752:	47a0      	blx	r4
	WM8904_DCS_TRIG_STARTUP_3 | WM8904_DCS_TRIG_STARTUP_2 |
	WM8904_DCS_TRIG_STARTUP_1 | WM8904_DCS_TRIG_STARTUP_0);
	delay_ms(100);
  400754:	480f      	ldr	r0, [pc, #60]	; (400794 <configure_codec+0x124>)
  400756:	47a8      	blx	r5
	wm8904_write_register(WM8904_ANALOGUE_HP_0,
  400758:	2177      	movs	r1, #119	; 0x77
  40075a:	205a      	movs	r0, #90	; 0x5a
  40075c:	47a0      	blx	r4
	WM8904_HPL_ENA_OUTP | WM8904_HPL_ENA_DLY | WM8904_HPL_ENA |
	WM8904_HPR_ENA_OUTP | WM8904_HPR_ENA_DLY | WM8904_HPR_ENA);
	wm8904_write_register(WM8904_ANALOGUE_HP_0,
  40075e:	21ff      	movs	r1, #255	; 0xff
  400760:	205a      	movs	r0, #90	; 0x5a
  400762:	47a0      	blx	r4
	WM8904_HPL_RMV_SHORT | WM8904_HPL_ENA_OUTP | WM8904_HPL_ENA_DLY | WM8904_HPL_ENA |
	WM8904_HPR_RMV_SHORT | WM8904_HPR_ENA_OUTP | WM8904_HPR_ENA_DLY | WM8904_HPR_ENA);
	wm8904_write_register(WM8904_ANALOGUE_OUT1_LEFT, WM8904_HPOUT_VU | WM8904_HPOUTL_VOL(0x39));
  400764:	21b9      	movs	r1, #185	; 0xb9
  400766:	2039      	movs	r0, #57	; 0x39
  400768:	47a0      	blx	r4
	wm8904_write_register(WM8904_ANALOGUE_OUT1_RIGHT, WM8904_HPOUT_VU | WM8904_HPOUTR_VOL(0x39));
  40076a:	203a      	movs	r0, #58	; 0x3a
  40076c:	21b9      	movs	r1, #185	; 0xb9
  40076e:	47a0      	blx	r4
	delay_ms(100);
  400770:	462b      	mov	r3, r5
  400772:	4808      	ldr	r0, [pc, #32]	; (400794 <configure_codec+0x124>)
}
  400774:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	delay_ms(100);
  400778:	4718      	bx	r3
  40077a:	bf00      	nop
  40077c:	00401661 	.word	0x00401661
  400780:	0040169d 	.word	0x0040169d
  400784:	0040edbc 	.word	0x0040edbc
  400788:	00403479 	.word	0x00403479
  40078c:	20400001 	.word	0x20400001
  400790:	0003dbc2 	.word	0x0003dbc2
  400794:	004d2b25 	.word	0x004d2b25

00400798 <computeWaveletPitch>:
{
	float pitchF = 0.0f;
	int32_t i, j;
	float si, si1;
	
	arm_copy_f32(samples, sam, WIN_SIZE); 
  400798:	f44f 6200 	mov.w	r2, #2048	; 0x800
  40079c:	49cf      	ldr	r1, [pc, #828]	; (400adc <computeWaveletPitch+0x344>)
  40079e:	4bd0      	ldr	r3, [pc, #832]	; (400ae0 <computeWaveletPitch+0x348>)
	
	return pitchF;
}

float computeWaveletPitch(float * samples)
{
  4007a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	int32_t curSamNb = WIN_SIZE;
  4007a4:	4691      	mov	r9, r2
		arm_max_f32(sam, WIN_SIZE, &maxValue, &temp_idx); 
  4007a6:	4ccf      	ldr	r4, [pc, #828]	; (400ae4 <computeWaveletPitch+0x34c>)
	int32_t curLevel = 0;
  4007a8:	f04f 0b00 	mov.w	fp, #0
		memset(distances, 0, WIN_SIZE*sizeof(int32_t));
  4007ac:	f8df a35c 	ldr.w	sl, [pc, #860]	; 400b0c <computeWaveletPitch+0x374>
{
  4007b0:	ed2d 8b06 	vpush	{d8-d10}
  4007b4:	b087      	sub	sp, #28
	float curModeDistance = -1.0f;
  4007b6:	eebf aa00 	vmov.f32	s20, #240	; 0xbf800000 -1.0
	arm_copy_f32(samples, sam, WIN_SIZE); 
  4007ba:	4798      	blx	r3
		arm_max_f32(sam, WIN_SIZE, &maxValue, &temp_idx); 
  4007bc:	4649      	mov	r1, r9
  4007be:	ab02      	add	r3, sp, #8
  4007c0:	aa03      	add	r2, sp, #12
  4007c2:	48c6      	ldr	r0, [pc, #792]	; (400adc <computeWaveletPitch+0x344>)
  4007c4:	47a0      	blx	r4
		arm_min_f32(sam, WIN_SIZE, &minValue, &temp_idx); 
  4007c6:	ab02      	add	r3, sp, #8
  4007c8:	aa04      	add	r2, sp, #16
  4007ca:	4649      	mov	r1, r9
  4007cc:	48c3      	ldr	r0, [pc, #780]	; (400adc <computeWaveletPitch+0x344>)
  4007ce:	4cc6      	ldr	r4, [pc, #792]	; (400ae8 <computeWaveletPitch+0x350>)
  4007d0:	47a0      	blx	r4
		float theDC = 0.0;
  4007d2:	aa06      	add	r2, sp, #24
  4007d4:	2300      	movs	r3, #0
		arm_mean_f32(sam, WIN_SIZE, &theDC); 
  4007d6:	4649      	mov	r1, r9
  4007d8:	48c0      	ldr	r0, [pc, #768]	; (400adc <computeWaveletPitch+0x344>)
		float theDC = 0.0;
  4007da:	f842 3d04 	str.w	r3, [r2, #-4]!
		arm_mean_f32(sam, WIN_SIZE, &theDC); 
  4007de:	4bc3      	ldr	r3, [pc, #780]	; (400aec <computeWaveletPitch+0x354>)
  4007e0:	4798      	blx	r3
		maxValue = maxValue - theDC;
  4007e2:	eddd 9a05 	vldr	s19, [sp, #20]
		minValue = minValue - theDC;
  4007e6:	ed9d 7a04 	vldr	s14, [sp, #16]
		ampltitudeThreshold = amplitudeMax*maximaThresholdRatio;		
  4007ea:	eef6 6a08 	vmov.f32	s13, #104	; 0x3f400000  0.750
		maxValue = maxValue - theDC;
  4007ee:	eddd 7a03 	vldr	s15, [sp, #12]
	int32_t res = 1, j;
  4007f2:	2201      	movs	r2, #1
		minValue = minValue - theDC;
  4007f4:	ee37 7a69 	vsub.f32	s14, s14, s19
		delta = DYW_SAMPLING_RATE/(_2power(curLevel)*maxF);
  4007f8:	eddf 8abd 	vldr	s17, [pc, #756]	; 400af0 <computeWaveletPitch+0x358>
		maxValue = maxValue - theDC;
  4007fc:	ee77 7ae9 	vsub.f32	s15, s15, s19
		if (curSamNb < 2) return pitchF;
  400800:	ed9f 8abc 	vldr	s16, [pc, #752]	; 400af4 <computeWaveletPitch+0x35c>
		for (j = -delta ; j <= delta ; j++) 
  400804:	ed9f 9abc 	vldr	s18, [pc, #752]	; 400af8 <computeWaveletPitch+0x360>
		float amplitudeMax = (maxValue > -minValue ? maxValue : -minValue);
  400808:	eef1 9a47 	vneg.f32	s19, s14
		minValue = minValue - theDC;
  40080c:	ed8d 7a04 	vstr	s14, [sp, #16]
		maxValue = maxValue - theDC;
  400810:	edcd 7a03 	vstr	s15, [sp, #12]
		float amplitudeMax = (maxValue > -minValue ? maxValue : -minValue);
  400814:	fec9 9aa7 	vmaxnm.f32	s19, s19, s15
		ampltitudeThreshold = amplitudeMax*maximaThresholdRatio;		
  400818:	ee69 9aa6 	vmul.f32	s19, s19, s13
		delta = DYW_SAMPLING_RATE/(_2power(curLevel)*maxF);
  40081c:	ee07 2a90 	vmov	s15, r2
		if (curSamNb < 2) return pitchF;
  400820:	f1b9 0f01 	cmp.w	r9, #1
		delta = DYW_SAMPLING_RATE/(_2power(curLevel)*maxF);
  400824:	eef8 7ae7 	vcvt.f32.s32	s15, s15
  400828:	ee88 7aa7 	vdiv.f32	s14, s17, s15
  40082c:	eefd 7ac7 	vcvt.s32.f32	s15, s14
  400830:	ee17 5a90 	vmov	r5, s15
		if (curSamNb < 2) return pitchF;
  400834:	f340 8178 	ble.w	400b28 <computeWaveletPitch+0x390>
  400838:	2300      	movs	r3, #0
  40083a:	4ca8      	ldr	r4, [pc, #672]	; (400adc <computeWaveletPitch+0x344>)
  40083c:	f8df e2d0 	ldr.w	lr, [pc, #720]	; 400b10 <computeWaveletPitch+0x378>
  400840:	f109 37ff 	add.w	r7, r9, #4294967295
  400844:	4622      	mov	r2, r4
  400846:	4618      	mov	r0, r3
  400848:	4619      	mov	r1, r3
  40084a:	4698      	mov	r8, r3
  40084c:	461e      	mov	r6, r3
  40084e:	46f4      	mov	ip, lr
  400850:	eef0 6a48 	vmov.f32	s13, s16
							mins[nbMins++] = i - 1;
  400854:	9401      	str	r4, [sp, #4]
  400856:	e005      	b.n	400864 <computeWaveletPitch+0xcc>
						if (i -1 > lastmaxIndex + delta) 
  400858:	2101      	movs	r1, #1
  40085a:	3301      	adds	r3, #1
			previousDV = dv;
  40085c:	eef0 6a67 	vmov.f32	s13, s15
		for (i = 1; i < curSamNb; i++) 
  400860:	42bb      	cmp	r3, r7
  400862:	d064      	beq.n	40092e <computeWaveletPitch+0x196>
			si = sam[i]; // - theDC;
  400864:	edd2 7a01 	vldr	s15, [r2, #4]
			si1 = sam[i-1]; // - theDC;
  400868:	ecb2 7a01 	vldmia	r2!, {s14}
			if (si1 <= 0 && si > 0) {findMax = 1; findMin = 0; }
  40086c:	eeb5 7a40 	vcmp.f32	s14, #0.0
  400870:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400874:	d806      	bhi.n	400884 <computeWaveletPitch+0xec>
  400876:	eef5 7ac0 	vcmpe.f32	s15, #0.0
  40087a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  40087e:	dd01      	ble.n	400884 <computeWaveletPitch+0xec>
  400880:	2000      	movs	r0, #0
  400882:	2101      	movs	r1, #1
			if (si1 >= 0 && si < 0) {findMin = 1; findMax = 0; }
  400884:	eeb5 7a40 	vcmp.f32	s14, #0.0
  400888:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  40088c:	db06      	blt.n	40089c <computeWaveletPitch+0x104>
  40088e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
  400892:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400896:	d501      	bpl.n	40089c <computeWaveletPitch+0x104>
  400898:	2001      	movs	r0, #1
  40089a:	2100      	movs	r1, #0
			if (previousDV > -1000.0f) 
  40089c:	eef4 6ac8 	vcmpe.f32	s13, s16
			dv = si - si1;
  4008a0:	ee77 7ac7 	vsub.f32	s15, s15, s14
			if (previousDV > -1000.0f) 
  4008a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4008a8:	ddd7      	ble.n	40085a <computeWaveletPitch+0xc2>
				if (findMin && previousDV < 0.0f && dv >= 0.0f) 
  4008aa:	eef5 6ac0 	vcmpe.f32	s13, #0.0
  4008ae:	f000 0401 	and.w	r4, r0, #1
  4008b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4008b6:	bf58      	it	pl
  4008b8:	2400      	movpl	r4, #0
  4008ba:	b1ac      	cbz	r4, 4008e8 <computeWaveletPitch+0x150>
  4008bc:	eef5 7a40 	vcmp.f32	s15, #0.0
  4008c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4008c4:	db10      	blt.n	4008e8 <computeWaveletPitch+0x150>
					if (Abs(si1) >= ampltitudeThreshold) 
  4008c6:	eeb0 6ac7 	vabs.f32	s12, s14
  4008ca:	eef4 9ac6 	vcmpe.f32	s19, s12
  4008ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4008d2:	d809      	bhi.n	4008e8 <computeWaveletPitch+0x150>
						if (i - 1 > lastMinIndex + delta)
  4008d4:	eb05 040c 	add.w	r4, r5, ip
  4008d8:	42a3      	cmp	r3, r4
  4008da:	dd05      	ble.n	4008e8 <computeWaveletPitch+0x150>
							mins[nbMins++] = i - 1;
  4008dc:	4887      	ldr	r0, [pc, #540]	; (400afc <computeWaveletPitch+0x364>)
  4008de:	469c      	mov	ip, r3
  4008e0:	f840 3026 	str.w	r3, [r0, r6, lsl #2]
  4008e4:	3601      	adds	r6, #1
							findMin = 0;
  4008e6:	2000      	movs	r0, #0
				if (findMax && previousDV > 0.0f && dv <= 0.0f) 
  4008e8:	eef5 6a40 	vcmp.f32	s13, #0.0
  4008ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4008f0:	ddb3      	ble.n	40085a <computeWaveletPitch+0xc2>
  4008f2:	2900      	cmp	r1, #0
  4008f4:	d0b1      	beq.n	40085a <computeWaveletPitch+0xc2>
  4008f6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
  4008fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4008fe:	d8ab      	bhi.n	400858 <computeWaveletPitch+0xc0>
					if (Abs(si1) >= ampltitudeThreshold) 
  400900:	eeb0 7ac7 	vabs.f32	s14, s14
  400904:	eef4 9ac7 	vcmpe.f32	s19, s14
  400908:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  40090c:	d8a4      	bhi.n	400858 <computeWaveletPitch+0xc0>
						if (i -1 > lastmaxIndex + delta) 
  40090e:	eb05 010e 	add.w	r1, r5, lr
  400912:	428b      	cmp	r3, r1
  400914:	dda0      	ble.n	400858 <computeWaveletPitch+0xc0>
							maxs[nbMaxs++] = i - 1;
  400916:	497a      	ldr	r1, [pc, #488]	; (400b00 <computeWaveletPitch+0x368>)
  400918:	469e      	mov	lr, r3
			previousDV = dv;
  40091a:	eef0 6a67 	vmov.f32	s13, s15
							maxs[nbMaxs++] = i - 1;
  40091e:	f841 3028 	str.w	r3, [r1, r8, lsl #2]
  400922:	3301      	adds	r3, #1
  400924:	f108 0801 	add.w	r8, r8, #1
							findMax = 0;
  400928:	2100      	movs	r1, #0
		for (i = 1; i < curSamNb; i++) 
  40092a:	42bb      	cmp	r3, r7
  40092c:	d19a      	bne.n	400864 <computeWaveletPitch+0xcc>
  40092e:	9c01      	ldr	r4, [sp, #4]
		if (nbMins == 0 && nbMaxs == 0) 
  400930:	b91e      	cbnz	r6, 40093a <computeWaveletPitch+0x1a2>
  400932:	f1b8 0f00 	cmp.w	r8, #0
  400936:	f000 80f7 	beq.w	400b28 <computeWaveletPitch+0x390>
		memset(distances, 0, WIN_SIZE*sizeof(int32_t));
  40093a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  40093e:	2100      	movs	r1, #0
  400940:	4650      	mov	r0, sl
  400942:	4b70      	ldr	r3, [pc, #448]	; (400b04 <computeWaveletPitch+0x36c>)
  400944:	4798      	blx	r3
		for (i = 0 ; i < nbMins ; i++) 
  400946:	b31e      	cbz	r6, 400990 <computeWaveletPitch+0x1f8>
  400948:	486c      	ldr	r0, [pc, #432]	; (400afc <computeWaveletPitch+0x364>)
  40094a:	f106 0e01 	add.w	lr, r6, #1
  40094e:	2301      	movs	r3, #1
				if (i+j < nbMins) 
  400950:	429e      	cmp	r6, r3
  400952:	f103 0301 	add.w	r3, r3, #1
  400956:	dd0a      	ble.n	40096e <computeWaveletPitch+0x1d6>
					d = Abs(mins[i] - mins[i+j]);
  400958:	6841      	ldr	r1, [r0, #4]
  40095a:	6802      	ldr	r2, [r0, #0]
  40095c:	1a52      	subs	r2, r2, r1
  40095e:	2a00      	cmp	r2, #0
  400960:	bfb8      	it	lt
  400962:	4252      	neglt	r2, r2
					distances[d]++; 
  400964:	f85a 1022 	ldr.w	r1, [sl, r2, lsl #2]
  400968:	3101      	adds	r1, #1
  40096a:	f84a 1022 	str.w	r1, [sl, r2, lsl #2]
				if (i+j < nbMins) 
  40096e:	429e      	cmp	r6, r3
  400970:	dd0a      	ble.n	400988 <computeWaveletPitch+0x1f0>
					d = Abs(mins[i] - mins[i+j]);
  400972:	6881      	ldr	r1, [r0, #8]
  400974:	6802      	ldr	r2, [r0, #0]
  400976:	1a52      	subs	r2, r2, r1
  400978:	2a00      	cmp	r2, #0
  40097a:	bfb8      	it	lt
  40097c:	4252      	neglt	r2, r2
					distances[d]++; 
  40097e:	f85a 1022 	ldr.w	r1, [sl, r2, lsl #2]
  400982:	3101      	adds	r1, #1
  400984:	f84a 1022 	str.w	r1, [sl, r2, lsl #2]
		for (i = 0 ; i < nbMins ; i++) 
  400988:	459e      	cmp	lr, r3
  40098a:	f100 0004 	add.w	r0, r0, #4
  40098e:	d1df      	bne.n	400950 <computeWaveletPitch+0x1b8>
		for (i = 0 ; i < nbMaxs ; i++) 
  400990:	f1b8 0f00 	cmp.w	r8, #0
  400994:	d023      	beq.n	4009de <computeWaveletPitch+0x246>
  400996:	485a      	ldr	r0, [pc, #360]	; (400b00 <computeWaveletPitch+0x368>)
  400998:	f108 0701 	add.w	r7, r8, #1
  40099c:	2301      	movs	r3, #1
				if (i+j < nbMaxs) 
  40099e:	4598      	cmp	r8, r3
  4009a0:	f103 0301 	add.w	r3, r3, #1
  4009a4:	dd0a      	ble.n	4009bc <computeWaveletPitch+0x224>
					d = Abs(maxs[i] - maxs[i+j]);
  4009a6:	6841      	ldr	r1, [r0, #4]
  4009a8:	6802      	ldr	r2, [r0, #0]
  4009aa:	1a52      	subs	r2, r2, r1
  4009ac:	2a00      	cmp	r2, #0
  4009ae:	bfb8      	it	lt
  4009b0:	4252      	neglt	r2, r2
					distances[d]++; 
  4009b2:	f85a 1022 	ldr.w	r1, [sl, r2, lsl #2]
  4009b6:	3101      	adds	r1, #1
  4009b8:	f84a 1022 	str.w	r1, [sl, r2, lsl #2]
				if (i+j < nbMaxs) 
  4009bc:	4598      	cmp	r8, r3
  4009be:	dd0a      	ble.n	4009d6 <computeWaveletPitch+0x23e>
					d = Abs(maxs[i] - maxs[i+j]);
  4009c0:	6881      	ldr	r1, [r0, #8]
  4009c2:	6802      	ldr	r2, [r0, #0]
  4009c4:	1a52      	subs	r2, r2, r1
  4009c6:	2a00      	cmp	r2, #0
  4009c8:	bfb8      	it	lt
  4009ca:	4252      	neglt	r2, r2
					distances[d]++; 
  4009cc:	f85a 1022 	ldr.w	r1, [sl, r2, lsl #2]
  4009d0:	3101      	adds	r1, #1
  4009d2:	f84a 1022 	str.w	r1, [sl, r2, lsl #2]
		for (i = 0 ; i < nbMaxs ; i++) 
  4009d6:	42bb      	cmp	r3, r7
  4009d8:	f100 0004 	add.w	r0, r0, #4
  4009dc:	d1df      	bne.n	40099e <computeWaveletPitch+0x206>
  4009de:	f04f 37ff 	mov.w	r7, #4294967295
  4009e2:	f1c5 0c00 	rsb	ip, r5, #0
  4009e6:	2600      	movs	r6, #0
  4009e8:	f105 0801 	add.w	r8, r5, #1
  4009ec:	46be      	mov	lr, r7
			for (j = -delta ; j <= delta ; j++) 
  4009ee:	4565      	cmp	r5, ip
  4009f0:	f2c0 8095 	blt.w	400b1e <computeWaveletPitch+0x386>
  4009f4:	1b73      	subs	r3, r6, r5
  4009f6:	eb08 0206 	add.w	r2, r8, r6
  4009fa:	2100      	movs	r1, #0
				if (i+j >=0 && i+j < curSamNb)
  4009fc:	4599      	cmp	r9, r3
  4009fe:	dd04      	ble.n	400a0a <computeWaveletPitch+0x272>
  400a00:	2b00      	cmp	r3, #0
  400a02:	db02      	blt.n	400a0a <computeWaveletPitch+0x272>
					summed += distances[i+j];
  400a04:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
  400a08:	4401      	add	r1, r0
  400a0a:	3301      	adds	r3, #1
			for (j = -delta ; j <= delta ; j++) 
  400a0c:	4293      	cmp	r3, r2
  400a0e:	d1f5      	bne.n	4009fc <computeWaveletPitch+0x264>
			if (summed == bestValue) 
  400a10:	4571      	cmp	r1, lr
  400a12:	d07f      	beq.n	400b14 <computeWaveletPitch+0x37c>
			else if (summed > bestValue) 
  400a14:	dd01      	ble.n	400a1a <computeWaveletPitch+0x282>
  400a16:	468e      	mov	lr, r1
  400a18:	4637      	mov	r7, r6
		for (i = 0; i< curSamNb; i++) 
  400a1a:	3601      	adds	r6, #1
  400a1c:	45b1      	cmp	r9, r6
  400a1e:	d1e6      	bne.n	4009ee <computeWaveletPitch+0x256>
		for (j = -delta ; j <= delta ; j++) 
  400a20:	4565      	cmp	r5, ip
  400a22:	db7e      	blt.n	400b22 <computeWaveletPitch+0x38a>
  400a24:	ed9f 7a38 	vldr	s14, [pc, #224]	; 400b08 <computeWaveletPitch+0x370>
  400a28:	1c6a      	adds	r2, r5, #1
  400a2a:	1b7b      	subs	r3, r7, r5
  400a2c:	eef0 6a47 	vmov.f32	s13, s14
  400a30:	4417      	add	r7, r2
			if (bestDistance+j >=0 && bestDistance+j < WIN_SIZE) 
  400a32:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
  400a36:	d211      	bcs.n	400a5c <computeWaveletPitch+0x2c4>
				int32_t nbDist = distances[bestDistance+j];
  400a38:	f85a 2023 	ldr.w	r2, [sl, r3, lsl #2]
					distAvg += (bestDistance+j)*nbDist;
  400a3c:	fb02 f103 	mul.w	r1, r2, r3
					nbDists += nbDist;
  400a40:	ee06 2a10 	vmov	s12, r2
				if (nbDist > 0) {
  400a44:	2a00      	cmp	r2, #0
					distAvg += (bestDistance+j)*nbDist;
  400a46:	ee07 1a90 	vmov	s15, r1
					nbDists += nbDist;
  400a4a:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
					distAvg += (bestDistance+j)*nbDist;
  400a4e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
				if (nbDist > 0) {
  400a52:	dd03      	ble.n	400a5c <computeWaveletPitch+0x2c4>
					nbDists += nbDist;
  400a54:	ee76 6a86 	vadd.f32	s13, s13, s12
					distAvg += (bestDistance+j)*nbDist;
  400a58:	ee37 7a27 	vadd.f32	s14, s14, s15
  400a5c:	3301      	adds	r3, #1
		for (j = -delta ; j <= delta ; j++) 
  400a5e:	429f      	cmp	r7, r3
  400a60:	d1e7      	bne.n	400a32 <computeWaveletPitch+0x29a>
  400a62:	ee87 6a26 	vdiv.f32	s12, s14, s13
		if (curModeDistance > -1.0f) 
  400a66:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
  400a6a:	eeb4 aae7 	vcmpe.f32	s20, s15
  400a6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400a72:	dd11      	ble.n	400a98 <computeWaveletPitch+0x300>
			float similarity = Abs(distAvg*2 - curModeDistance);
  400a74:	eeb0 7a00 	vmov.f32	s14, #0	; 0x40000000  2.0
			if (similarity <= 2*delta) 
  400a78:	006d      	lsls	r5, r5, #1
			float similarity = Abs(distAvg*2 - curModeDistance);
  400a7a:	eef0 6a4a 	vmov.f32	s13, s20
			if (similarity <= 2*delta) 
  400a7e:	ee07 5a90 	vmov	s15, r5
			float similarity = Abs(distAvg*2 - curModeDistance);
  400a82:	eed6 6a07 	vfnms.f32	s13, s12, s14
			if (similarity <= 2*delta) 
  400a86:	eef8 7ae7 	vcvt.f32.s32	s15, s15
			float similarity = Abs(distAvg*2 - curModeDistance);
  400a8a:	eeb0 7ae6 	vabs.f32	s14, s13
			if (similarity <= 2*delta) 
  400a8e:	eeb4 7ae7 	vcmpe.f32	s14, s15
  400a92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400a96:	d97a      	bls.n	400b8e <computeWaveletPitch+0x3f6>
		curLevel = curLevel + 1;
  400a98:	f10b 0b01 	add.w	fp, fp, #1
		if (curLevel >= maxFLWTlevels) 
  400a9c:	f1bb 0f06 	cmp.w	fp, #6
  400aa0:	d042      	beq.n	400b28 <computeWaveletPitch+0x390>
		for (i = 0; i < curSamNb/2; i++)
  400aa2:	ea4f 0969 	mov.w	r9, r9, asr #1
  400aa6:	4b0d      	ldr	r3, [pc, #52]	; (400adc <computeWaveletPitch+0x344>)
			sam[i] = (sam[2*i] + sam[2*i + 1]) * 0.5f;
  400aa8:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
  400aac:	eb03 02c9 	add.w	r2, r3, r9, lsl #3
  400ab0:	ed93 7a00 	vldr	s14, [r3]
  400ab4:	3308      	adds	r3, #8
  400ab6:	ed53 7a01 	vldr	s15, [r3, #-4]
		for (i = 0; i < curSamNb/2; i++)
  400aba:	429a      	cmp	r2, r3
			sam[i] = (sam[2*i] + sam[2*i + 1]) * 0.5f;
  400abc:	ee77 7a27 	vadd.f32	s15, s14, s15
  400ac0:	ee67 7aa6 	vmul.f32	s15, s15, s13
  400ac4:	ece4 7a01 	vstmia	r4!, {s15}
		for (i = 0; i < curSamNb/2; i++)
  400ac8:	d1f2      	bne.n	400ab0 <computeWaveletPitch+0x318>
  400aca:	2300      	movs	r3, #0
  400acc:	2201      	movs	r2, #1
	for (j = 0; j < i; j++) res <<= 1;
  400ace:	3301      	adds	r3, #1
  400ad0:	0052      	lsls	r2, r2, #1
  400ad2:	455b      	cmp	r3, fp
  400ad4:	d1fb      	bne.n	400ace <computeWaveletPitch+0x336>
		curModeDistance = distAvg;
  400ad6:	eeb0 aa46 	vmov.f32	s20, s12
  400ada:	e69f      	b.n	40081c <computeWaveletPitch+0x84>
  400adc:	20407800 	.word	0x20407800
  400ae0:	004029d5 	.word	0x004029d5
  400ae4:	00402b69 	.word	0x00402b69
  400ae8:	00402a29 	.word	0x00402a29
  400aec:	00402b05 	.word	0x00402b05
  400af0:	40fbbbbc 	.word	0x40fbbbbc
  400af4:	c47a0000 	.word	0xc47a0000
  400af8:	7fc00000 	.word	0x7fc00000
  400afc:	20405800 	.word	0x20405800
  400b00:	20403800 	.word	0x20403800
  400b04:	00403a11 	.word	0x00403a11
  400b08:	00000000 	.word	0x00000000
  400b0c:	20401800 	.word	0x20401800
  400b10:	fff0bdc0 	.word	0xfff0bdc0
				if (i == 2*bestDistance)
  400b14:	ebb6 0f47 	cmp.w	r6, r7, lsl #1
  400b18:	bf08      	it	eq
  400b1a:	4637      	moveq	r7, r6
  400b1c:	e77d      	b.n	400a1a <computeWaveletPitch+0x282>
			int32_t summed = 0;
  400b1e:	2100      	movs	r1, #0
  400b20:	e776      	b.n	400a10 <computeWaveletPitch+0x278>
		for (j = -delta ; j <= delta ; j++) 
  400b22:	eeb0 6a49 	vmov.f32	s12, s18
  400b26:	e79e      	b.n	400a66 <computeWaveletPitch+0x2ce>
		if (pitchtracker._prevPitch > -1.0f) 
  400b28:	4a58      	ldr	r2, [pc, #352]	; (400c8c <computeWaveletPitch+0x4f4>)
  400b2a:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
  400b2e:	edd2 7a00 	vldr	s15, [r2]
  400b32:	eef4 7ac7 	vcmpe.f32	s15, s14
  400b36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400b3a:	dd18      	ble.n	400b6e <computeWaveletPitch+0x3d6>
			if (pitchtracker._pitchConfidence >= 1) 
  400b3c:	6853      	ldr	r3, [r2, #4]
  400b3e:	2b00      	cmp	r3, #0
  400b40:	dd1e      	ble.n	400b80 <computeWaveletPitch+0x3e8>
				pitchtracker._pitchConfidence = Max(0, pitchtracker._pitchConfidence - 1);
  400b42:	3b01      	subs	r3, #1
  400b44:	6053      	str	r3, [r2, #4]
	if (pitchtracker._pitchConfidence >= 1) 
  400b46:	2b00      	cmp	r3, #0
  400b48:	dd11      	ble.n	400b6e <computeWaveletPitch+0x3d6>
	if (pitch < -1.0f) pitch = 0.0f;
  400b4a:	eeff 6a00 	vmov.f32	s13, #240	; 0xbf800000 -1.0
  400b4e:	ed9f 7a50 	vldr	s14, [pc, #320]	; 400c90 <computeWaveletPitch+0x4f8>
  400b52:	eef4 7a66 	vcmp.f32	s15, s13
  400b56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400b5a:	bf48      	it	mi
  400b5c:	eef0 7a47 	vmovmi.f32	s15, s14
	return _dywapitch_dynamicprocess(get_raw_pitch(samples)); 
  400b60:	ee17 0a90 	vmov	r0, s15
  400b64:	b007      	add	sp, #28
  400b66:	ecbd 8b06 	vpop	{d8-d10}
  400b6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	float estimatedPitch = -1.0f;
  400b6e:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
  400b72:	ee17 0a90 	vmov	r0, s15
  400b76:	b007      	add	sp, #28
  400b78:	ecbd 8b06 	vpop	{d8-d10}
  400b7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				pitchtracker._pitchConfidence = 0;
  400b80:	2300      	movs	r3, #0
				pitchtracker._prevPitch = -1.0f;
  400b82:	ed82 7a00 	vstr	s14, [r2]
		pitch = -1.0f;
  400b86:	eef0 7a47 	vmov.f32	s15, s14
				pitchtracker._pitchConfidence = 0;
  400b8a:	6053      	str	r3, [r2, #4]
  400b8c:	e7f1      	b.n	400b72 <computeWaveletPitch+0x3da>
	for (j = 0; j < i; j++) res <<= 1;
  400b8e:	f1bb 0f01 	cmp.w	fp, #1
  400b92:	dd77      	ble.n	400c84 <computeWaveletPitch+0x4ec>
  400b94:	f10b 33ff 	add.w	r3, fp, #4294967295
  400b98:	2100      	movs	r1, #0
  400b9a:	2201      	movs	r2, #1
  400b9c:	3101      	adds	r1, #1
  400b9e:	0052      	lsls	r2, r2, #1
  400ba0:	4299      	cmp	r1, r3
  400ba2:	d1fb      	bne.n	400b9c <computeWaveletPitch+0x404>
  400ba4:	ee07 2a90 	vmov	s15, r2
  400ba8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
				pitchF = DYW_SAMPLING_RATE/(_2power(curLevel-1)*curModeDistance);
  400bac:	ee2a aa27 	vmul.f32	s20, s20, s15
  400bb0:	eddf 6a38 	vldr	s13, [pc, #224]	; 400c94 <computeWaveletPitch+0x4fc>
	if (pitch < 1.0f) pitch = -1.0f;
  400bb4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
				pitchF = DYW_SAMPLING_RATE/(_2power(curLevel-1)*curModeDistance);
  400bb8:	eec6 7a8a 	vdiv.f32	s15, s13, s20
	if (pitch < 1.0f) pitch = -1.0f;
  400bbc:	eef4 7ac7 	vcmpe.f32	s15, s14
  400bc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400bc4:	d4b0      	bmi.n	400b28 <computeWaveletPitch+0x390>
	if (pitch > -1.0) {
  400bc6:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
  400bca:	eef4 7ac7 	vcmpe.f32	s15, s14
  400bce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400bd2:	dda9      	ble.n	400b28 <computeWaveletPitch+0x390>
		if (pitchtracker._prevPitch < 0.0f) 
  400bd4:	4a2d      	ldr	r2, [pc, #180]	; (400c8c <computeWaveletPitch+0x4f4>)
  400bd6:	edd2 6a00 	vldr	s13, [r2]
  400bda:	eef5 6ac0 	vcmpe.f32	s13, #0.0
  400bde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400be2:	d426      	bmi.n	400c32 <computeWaveletPitch+0x49a>
		else if (abs(pitchtracker._prevPitch - pitch)/pitch < acceptedError) 
  400be4:	ee36 7ae7 	vsub.f32	s14, s13, s15
  400be8:	ed9f 6a2b 	vldr	s12, [pc, #172]	; 400c98 <computeWaveletPitch+0x500>
  400bec:	eebd 7ac7 	vcvt.s32.f32	s14, s14
  400bf0:	ee17 3a10 	vmov	r3, s14
  400bf4:	2b00      	cmp	r3, #0
  400bf6:	bfb8      	it	lt
  400bf8:	425b      	neglt	r3, r3
  400bfa:	ee07 3a10 	vmov	s14, r3
			pitchtracker._pitchConfidence = Min(maxConfidence, pitchtracker._pitchConfidence + 1); // maximum 3
  400bfe:	6853      	ldr	r3, [r2, #4]
		else if (abs(pitchtracker._prevPitch - pitch)/pitch < acceptedError) 
  400c00:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
  400c04:	eec7 5a27 	vdiv.f32	s11, s14, s15
  400c08:	eef4 5ac6 	vcmpe.f32	s11, s12
  400c0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400c10:	d507      	bpl.n	400c22 <computeWaveletPitch+0x48a>
			pitchtracker._pitchConfidence = Min(maxConfidence, pitchtracker._pitchConfidence + 1); // maximum 3
  400c12:	2b04      	cmp	r3, #4
			pitchtracker._prevPitch = pitch;
  400c14:	edc2 7a00 	vstr	s15, [r2]
			pitchtracker._pitchConfidence = Min(maxConfidence, pitchtracker._pitchConfidence + 1); // maximum 3
  400c18:	bfd4      	ite	le
  400c1a:	3301      	addle	r3, #1
  400c1c:	2305      	movgt	r3, #5
				pitchtracker._pitchConfidence = max(0, pitchtracker._pitchConfidence - 1);
  400c1e:	6053      	str	r3, [r2, #4]
  400c20:	e791      	b.n	400b46 <computeWaveletPitch+0x3ae>
		else if ((pitchtracker._pitchConfidence >= maxConfidence-2) && Abs(pitchtracker._prevPitch - 2.0f*pitch)/(2.0f*pitch) < acceptedError) 
  400c22:	2b02      	cmp	r3, #2
  400c24:	dc0a      	bgt.n	400c3c <computeWaveletPitch+0x4a4>
			if (pitchtracker._pitchConfidence >= 1) 
  400c26:	2b00      	cmp	r3, #0
  400c28:	dd03      	ble.n	400c32 <computeWaveletPitch+0x49a>
				pitchtracker._pitchConfidence = max(0, pitchtracker._pitchConfidence - 1);
  400c2a:	3b01      	subs	r3, #1
				estimatedPitch = pitchtracker._prevPitch;
  400c2c:	eef0 7a66 	vmov.f32	s15, s13
  400c30:	e7f5      	b.n	400c1e <computeWaveletPitch+0x486>
				pitchtracker._pitchConfidence = 1;
  400c32:	2301      	movs	r3, #1
				pitchtracker._prevPitch = pitch;
  400c34:	edc2 7a00 	vstr	s15, [r2]
				pitchtracker._pitchConfidence = 1;
  400c38:	6053      	str	r3, [r2, #4]
  400c3a:	e786      	b.n	400b4a <computeWaveletPitch+0x3b2>
		else if ((pitchtracker._pitchConfidence >= maxConfidence-2) && Abs(pitchtracker._prevPitch - 2.0f*pitch)/(2.0f*pitch) < acceptedError) 
  400c3c:	ee37 7aa7 	vadd.f32	s14, s15, s15
  400c40:	ee76 5ac7 	vsub.f32	s11, s13, s14
  400c44:	eef0 5ae5 	vabs.f32	s11, s11
  400c48:	ee85 5a87 	vdiv.f32	s10, s11, s14
  400c4c:	eeb4 5ac6 	vcmpe.f32	s10, s12
  400c50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400c54:	d504      	bpl.n	400c60 <computeWaveletPitch+0x4c8>
			pitchtracker._prevPitch = estimatedPitch;
  400c56:	ed82 7a00 	vstr	s14, [r2]
			estimatedPitch = 2.0f*pitch;
  400c5a:	eef0 7a47 	vmov.f32	s15, s14
  400c5e:	e774      	b.n	400b4a <computeWaveletPitch+0x3b2>
		else if ((pitchtracker._pitchConfidence >= maxConfidence-2) && Abs(pitchtracker._prevPitch - 0.5f*pitch)/(0.5f*pitch) < acceptedError) 
  400c60:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
  400c64:	ee67 7a87 	vmul.f32	s15, s15, s14
  400c68:	ee36 7ae7 	vsub.f32	s14, s13, s15
  400c6c:	eeb0 7ac7 	vabs.f32	s14, s14
  400c70:	eec7 5a27 	vdiv.f32	s11, s14, s15
  400c74:	eef4 5ac6 	vcmpe.f32	s11, s12
  400c78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400c7c:	d5d5      	bpl.n	400c2a <computeWaveletPitch+0x492>
			pitchtracker._prevPitch = estimatedPitch;
  400c7e:	edc2 7a00 	vstr	s15, [r2]
  400c82:	e762      	b.n	400b4a <computeWaveletPitch+0x3b2>
	for (j = 0; j < i; j++) res <<= 1;
  400c84:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
  400c88:	e790      	b.n	400bac <computeWaveletPitch+0x414>
  400c8a:	bf00      	nop
  400c8c:	20400028 	.word	0x20400028
  400c90:	00000000 	.word	0x00000000
  400c94:	46b86000 	.word	0x46b86000
  400c98:	3e4ccccd 	.word	0x3e4ccccd

00400c9c <SysTick_Handler>:
}

/* Systick Interrupt Handler */ 
void SysTick_Handler(void)
{
	msCount++;
  400c9c:	4806      	ldr	r0, [pc, #24]	; (400cb8 <SysTick_Handler+0x1c>)
	led_indicator_freq--;
  400c9e:	4907      	ldr	r1, [pc, #28]	; (400cbc <SysTick_Handler+0x20>)
	msCount++;
  400ca0:	6803      	ldr	r3, [r0, #0]
	led_indicator_duration++;
  400ca2:	4a07      	ldr	r2, [pc, #28]	; (400cc0 <SysTick_Handler+0x24>)
	msCount++;
  400ca4:	3301      	adds	r3, #1
  400ca6:	6003      	str	r3, [r0, #0]
	led_indicator_freq--;
  400ca8:	680b      	ldr	r3, [r1, #0]
  400caa:	3b01      	subs	r3, #1
  400cac:	600b      	str	r3, [r1, #0]
	led_indicator_duration++;
  400cae:	6813      	ldr	r3, [r2, #0]
  400cb0:	3301      	adds	r3, #1
  400cb2:	6013      	str	r3, [r2, #0]
  400cb4:	4770      	bx	lr
  400cb6:	bf00      	nop
  400cb8:	20409808 	.word	0x20409808
  400cbc:	20409804 	.word	0x20409804
  400cc0:	20409800 	.word	0x20409800

00400cc4 <get_midi_note>:

/**************************** Private Functions End *********************************/
uint32_t max_power = 0; 
/**************************** Public Functions Start *********************************/
void get_midi_note(float32_t *buffer, midi_note_t *note)
{		
  400cc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  400cc6:	4602      	mov	r2, r0
  400cc8:	460e      	mov	r6, r1
	uint32_t power = 0;
  400cca:	2400      	movs	r4, #0
  400ccc:	f500 5500 	add.w	r5, r0, #8192	; 0x2000
		power += (abs(buffer[i]))^2;
  400cd0:	ecf2 7a01 	vldmia	r2!, {s15}
  400cd4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
  400cd8:	ee17 3a90 	vmov	r3, s15
  400cdc:	2b00      	cmp	r3, #0
  400cde:	bfb8      	it	lt
  400ce0:	425b      	neglt	r3, r3
	for ( i = 0; i < (WIN_SIZE); i++)
  400ce2:	4295      	cmp	r5, r2
		power += (abs(buffer[i]))^2;
  400ce4:	f083 0302 	eor.w	r3, r3, #2
  400ce8:	441c      	add	r4, r3
	for ( i = 0; i < (WIN_SIZE); i++)
  400cea:	d1f1      	bne.n	400cd0 <get_midi_note+0xc>
// 		note->velocity = NO_NOTE;

// 		return;
// 	}
	
	float32_t freq = computeWaveletPitch(buffer); 
  400cec:	4b37      	ldr	r3, [pc, #220]	; (400dcc <get_midi_note+0x108>)
  400cee:	4798      	blx	r3
	
	// Don't count notes below C1 
	if (freq < 32.0 || freq > 4000.0)
  400cf0:	eddf 7a37 	vldr	s15, [pc, #220]	; 400dd0 <get_midi_note+0x10c>
	float32_t freq = computeWaveletPitch(buffer); 
  400cf4:	ee06 0a90 	vmov	s13, r0
	if (freq < 32.0 || freq > 4000.0)
  400cf8:	eef4 6ae7 	vcmpe.f32	s13, s15
  400cfc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400d00:	d45d      	bmi.n	400dbe <get_midi_note+0xfa>
  400d02:	eddf 7a34 	vldr	s15, [pc, #208]	; 400dd4 <get_midi_note+0x110>
  400d06:	eef4 6ae7 	vcmpe.f32	s13, s15
  400d0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  400d0e:	dc56      	bgt.n	400dbe <get_midi_note+0xfa>
  400d10:	ed9f 7a31 	vldr	s14, [pc, #196]	; 400dd8 <get_midi_note+0x114>
  400d14:	257f      	movs	r5, #127	; 0x7f
  400d16:	eddf 7a31 	vldr	s15, [pc, #196]	; 400ddc <get_midi_note+0x118>
  400d1a:	f04f 0e0c 	mov.w	lr, #12
		d1 = abs(midi_note_frequencies[mid] - frequency); 
  400d1e:	4f30      	ldr	r7, [pc, #192]	; (400de0 <get_midi_note+0x11c>)
  400d20:	ee37 7a66 	vsub.f32	s14, s14, s13
		mid = (hi + lo) >> 1; 
  400d24:	eb0e 0105 	add.w	r1, lr, r5
		d2 = abs(midi_note_frequencies[mid+1] - frequency);
  400d28:	ee77 7ae6 	vsub.f32	s15, s15, s13
		mid = (hi + lo) >> 1; 
  400d2c:	0849      	lsrs	r1, r1, #1
		d1 = abs(midi_note_frequencies[mid] - frequency); 
  400d2e:	eebd 7ac7 	vcvt.s32.f32	s14, s14
		d2 = abs(midi_note_frequencies[mid+1] - frequency);
  400d32:	eefd 7ae7 	vcvt.s32.f32	s15, s15
  400d36:	1c48      	adds	r0, r1, #1
		d1 = abs(midi_note_frequencies[mid] - frequency); 
  400d38:	ee17 2a10 	vmov	r2, s14
		d2 = abs(midi_note_frequencies[mid+1] - frequency);
  400d3c:	ee17 3a90 	vmov	r3, s15
		d1 = abs(midi_note_frequencies[mid] - frequency); 
  400d40:	2a00      	cmp	r2, #0
  400d42:	bfb8      	it	lt
  400d44:	4252      	neglt	r2, r2
		d2 = abs(midi_note_frequencies[mid+1] - frequency);
  400d46:	2b00      	cmp	r3, #0
  400d48:	bfb8      	it	lt
  400d4a:	425b      	neglt	r3, r3
        if (d2 <= d1)
  400d4c:	429a      	cmp	r2, r3
  400d4e:	d21f      	bcs.n	400d90 <get_midi_note+0xcc>
  400d50:	e027      	b.n	400da2 <get_midi_note+0xde>
		d1 = abs(midi_note_frequencies[mid] - frequency); 
  400d52:	eb07 0381 	add.w	r3, r7, r1, lsl #2
		d2 = abs(midi_note_frequencies[mid+1] - frequency);
  400d56:	f101 0e01 	add.w	lr, r1, #1
		d1 = abs(midi_note_frequencies[mid] - frequency); 
  400d5a:	ed93 7a00 	vldr	s14, [r3]
		d2 = abs(midi_note_frequencies[mid+1] - frequency);
  400d5e:	eb07 028e 	add.w	r2, r7, lr, lsl #2
		d1 = abs(midi_note_frequencies[mid] - frequency); 
  400d62:	ee37 7a66 	vsub.f32	s14, s14, s13
		d2 = abs(midi_note_frequencies[mid+1] - frequency);
  400d66:	edd2 7a00 	vldr	s15, [r2]
  400d6a:	ee77 7ae6 	vsub.f32	s15, s15, s13
		d1 = abs(midi_note_frequencies[mid] - frequency); 
  400d6e:	eebd 7ac7 	vcvt.s32.f32	s14, s14
		d2 = abs(midi_note_frequencies[mid+1] - frequency);
  400d72:	eefd 7ae7 	vcvt.s32.f32	s15, s15
		d1 = abs(midi_note_frequencies[mid] - frequency); 
  400d76:	ee17 2a10 	vmov	r2, s14
		d2 = abs(midi_note_frequencies[mid+1] - frequency);
  400d7a:	ee17 3a90 	vmov	r3, s15
		d1 = abs(midi_note_frequencies[mid] - frequency); 
  400d7e:	2a00      	cmp	r2, #0
  400d80:	bfb8      	it	lt
  400d82:	4252      	neglt	r2, r2
		d2 = abs(midi_note_frequencies[mid+1] - frequency);
  400d84:	2b00      	cmp	r3, #0
  400d86:	bfb8      	it	lt
  400d88:	425b      	neglt	r3, r3
        if (d2 <= d1)
  400d8a:	429a      	cmp	r2, r3
  400d8c:	d30a      	bcc.n	400da4 <get_midi_note+0xe0>
		d2 = abs(midi_note_frequencies[mid+1] - frequency);
  400d8e:	4670      	mov	r0, lr
		mid = (hi + lo) >> 1; 
  400d90:	1941      	adds	r1, r0, r5
	while (lo < hi)
  400d92:	42a8      	cmp	r0, r5
		mid = (hi + lo) >> 1; 
  400d94:	ea4f 0151 	mov.w	r1, r1, lsr #1
	while (lo < hi)
  400d98:	d3db      	bcc.n	400d52 <get_midi_note+0x8e>
	return (power/(WIN_SIZE));
  400d9a:	0ae4      	lsrs	r4, r4, #11
	{
		note->note_number = NO_NOTE;
		note->velocity = NO_NOTE;
		return;
	}
	note->note_number = get_midi_number(freq);
  400d9c:	8035      	strh	r5, [r6, #0]
	note->velocity = power;
  400d9e:	8074      	strh	r4, [r6, #2]
  400da0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        if (d2 <= d1)
  400da2:	4670      	mov	r0, lr
	while (lo < hi)
  400da4:	4288      	cmp	r0, r1
  400da6:	d20f      	bcs.n	400dc8 <get_midi_note+0x104>
  400da8:	1843      	adds	r3, r0, r1
  400daa:	460d      	mov	r5, r1
  400dac:	4686      	mov	lr, r0
  400dae:	085b      	lsrs	r3, r3, #1
  400db0:	eb07 0283 	add.w	r2, r7, r3, lsl #2
  400db4:	edd2 7a01 	vldr	s15, [r2, #4]
  400db8:	ed92 7a00 	vldr	s14, [r2]
  400dbc:	e7b0      	b.n	400d20 <get_midi_note+0x5c>
		note->note_number = NO_NOTE;
  400dbe:	f64f 73ff 	movw	r3, #65535	; 0xffff
  400dc2:	8033      	strh	r3, [r6, #0]
		note->velocity = NO_NOTE;
  400dc4:	8073      	strh	r3, [r6, #2]
		return;
  400dc6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	while (lo < hi)
  400dc8:	460d      	mov	r5, r1
  400dca:	e7e6      	b.n	400d9a <get_midi_note+0xd6>
  400dcc:	00400799 	.word	0x00400799
  400dd0:	42000000 	.word	0x42000000
  400dd4:	457a0000 	.word	0x457a0000
  400dd8:	43dc0000 	.word	0x43dc0000
  400ddc:	43e914fe 	.word	0x43e914fe
  400de0:	0040edd0 	.word	0x0040edd0
  400de4:	00000000 	.word	0x00000000

00400de8 <write_midi_file>:
    }
    write_out(bytes[3]);
}

void write_midi_file(uint32_t bpm, midi_instrument_t playback_instrument, time_signature_t *time_signature , key_signature_t *key_signature, char *title, midi_event_t *events, uint32_t number_of_events)
{
  400de8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400dec:	b09d      	sub	sp, #116	; 0x74
    out[outIdx++] = val;
  400dee:	4f9c      	ldr	r7, [pc, #624]	; (401060 <write_midi_file+0x278>)
    char ch;
    uint32_t i;
    uint32_t longdata;
    char endoftrack[4] = {0, 0xff, 0x2f, 0x00};
  400df0:	2400      	movs	r4, #0
    out[outIdx++] = val;
  400df2:	f04f 0864 	mov.w	r8, #100	; 0x64
{
  400df6:	9115      	str	r1, [sp, #84]	; 0x54
    out[outIdx++] = val;
  400df8:	2102      	movs	r1, #2
  400dfa:	f04f 0c06 	mov.w	ip, #6
  400dfe:	2501      	movs	r5, #1
  400e00:	72f9      	strb	r1, [r7, #11]
  400e02:	2154      	movs	r1, #84	; 0x54
{
  400e04:	f8dd e098 	ldr.w	lr, [sp, #152]	; 0x98
    out[outIdx++] = val;
  400e08:	f04f 0968 	mov.w	r9, #104	; 0x68
{
  400e0c:	9316      	str	r3, [sp, #88]	; 0x58
    ch = 'T'; write_out(ch);
    ch = 'r'; write_out(ch);
    ch = 'k'; write_out(ch);
    
    // size of track
    uint32_t size_of_title = 0;
  400e0e:	4623      	mov	r3, r4
    char endoftrack[4] = {0, 0xff, 0x2f, 0x00};
  400e10:	f88d 4060 	strb.w	r4, [sp, #96]	; 0x60
  400e14:	f10e 36ff 	add.w	r6, lr, #4294967295
  400e18:	f88d 4063 	strb.w	r4, [sp, #99]	; 0x63
    out[outIdx++] = val;
  400e1c:	713c      	strb	r4, [r7, #4]
  400e1e:	717c      	strb	r4, [r7, #5]
  400e20:	71bc      	strb	r4, [r7, #6]
  400e22:	723c      	strb	r4, [r7, #8]
  400e24:	72bc      	strb	r4, [r7, #10]
  400e26:	733c      	strb	r4, [r7, #12]
  400e28:	2478      	movs	r4, #120	; 0x78
  400e2a:	f887 8003 	strb.w	r8, [r7, #3]
  400e2e:	f04f 0872 	mov.w	r8, #114	; 0x72
  400e32:	7079      	strb	r1, [r7, #1]
  400e34:	73f9      	strb	r1, [r7, #15]
{
  400e36:	9927      	ldr	r1, [sp, #156]	; 0x9c
    out[outIdx++] = val;
  400e38:	f887 c007 	strb.w	ip, [r7, #7]
  400e3c:	f04f 0c6b 	mov.w	ip, #107	; 0x6b
  400e40:	727d      	strb	r5, [r7, #9]
  400e42:	254d      	movs	r5, #77	; 0x4d
  400e44:	737c      	strb	r4, [r7, #13]
    char endoftrack[4] = {0, 0xff, 0x2f, 0x00};
  400e46:	24ff      	movs	r4, #255	; 0xff
    out[outIdx++] = val;
  400e48:	f887 8010 	strb.w	r8, [r7, #16]
    char endoftrack[4] = {0, 0xff, 0x2f, 0x00};
  400e4c:	f04f 082f 	mov.w	r8, #47	; 0x2f
{
  400e50:	9117      	str	r1, [sp, #92]	; 0x5c
  400e52:	9928      	ldr	r1, [sp, #160]	; 0xa0
  400e54:	9201      	str	r2, [sp, #4]
    while(title[size_of_title++]); // size of title
  400e56:	4632      	mov	r2, r6
    out[outIdx++] = val;
  400e58:	f887 9002 	strb.w	r9, [r7, #2]
  400e5c:	f887 c011 	strb.w	ip, [r7, #17]
  400e60:	703d      	strb	r5, [r7, #0]
  400e62:	73bd      	strb	r5, [r7, #14]
    char endoftrack[4] = {0, 0xff, 0x2f, 0x00};
  400e64:	f88d 4061 	strb.w	r4, [sp, #97]	; 0x61
  400e68:	f88d 8062 	strb.w	r8, [sp, #98]	; 0x62
{
  400e6c:	9102      	str	r1, [sp, #8]
    while(title[size_of_title++]); // size of title
  400e6e:	e000      	b.n	400e72 <write_midi_file+0x8a>
  400e70:	460b      	mov	r3, r1
  400e72:	f812 5f01 	ldrb.w	r5, [r2, #1]!
  400e76:	1c59      	adds	r1, r3, #1
  400e78:	2d00      	cmp	r5, #0
  400e7a:	d1f9      	bne.n	400e70 <write_midi_file+0x88>
    longdata = 29 + size_of_title - 1;
  400e7c:	f103 091d 	add.w	r9, r3, #29
    out[outIdx++] = val;
  400e80:	24ff      	movs	r4, #255	; 0xff
  400e82:	2103      	movs	r1, #3
  400e84:	9503      	str	r5, [sp, #12]
    write_out(data.bytes[3]);
  400e86:	f3c9 6c07 	ubfx	ip, r9, #24, #8
    write_out(data.bytes[2]);
  400e8a:	f3c9 4207 	ubfx	r2, r9, #16, #8
    out[outIdx++] = val;
  400e8e:	75fc      	strb	r4, [r7, #23]
  400e90:	f887 c012 	strb.w	ip, [r7, #18]
    write_out(data.bytes[1]);
  400e94:	f3c9 2c07 	ubfx	ip, r9, #8, #8
    out[outIdx++] = val;
  400e98:	74fa      	strb	r2, [r7, #19]
  400e9a:	221a      	movs	r2, #26
  400e9c:	4c71      	ldr	r4, [pc, #452]	; (401064 <write_midi_file+0x27c>)
  400e9e:	75bd      	strb	r5, [r7, #22]
  400ea0:	767b      	strb	r3, [r7, #25]
  400ea2:	f887 9015 	strb.w	r9, [r7, #21]
  400ea6:	f887 c014 	strb.w	ip, [r7, #20]
  400eaa:	7639      	strb	r1, [r7, #24]
  400eac:	6022      	str	r2, [r4, #0]
    // track name (title)
    write_out(0x00); // tick
    write_out(0xFF);
    write_out(0x03);
    write_out((uint8_t)size_of_title-1);
    for (i = 0; i < size_of_title-1; i++)
  400eae:	2b00      	cmp	r3, #0
  400eb0:	f000 81ed 	beq.w	40128e <write_midi_file+0x4a6>
  400eb4:	1e59      	subs	r1, r3, #1
  400eb6:	4a6c      	ldr	r2, [pc, #432]	; (401068 <write_midi_file+0x280>)
  400eb8:	448e      	add	lr, r1
        write_out(title[i]);
  400eba:	f816 1f01 	ldrb.w	r1, [r6, #1]!
    for (i = 0; i < size_of_title-1; i++)
  400ebe:	4576      	cmp	r6, lr
    out[outIdx++] = val;
  400ec0:	f802 1f01 	strb.w	r1, [r2, #1]!
    for (i = 0; i < size_of_title-1; i++)
  400ec4:	d1f9      	bne.n	400eba <write_midi_file+0xd2>
  400ec6:	f103 0221 	add.w	r2, r3, #33	; 0x21
  400eca:	f103 0a1a 	add.w	sl, r3, #26
  400ece:	f103 061c 	add.w	r6, r3, #28
  400ed2:	f103 081b 	add.w	r8, r3, #27
  400ed6:	9204      	str	r2, [sp, #16]
  400ed8:	f103 0220 	add.w	r2, r3, #32
  400edc:	f103 0b2f 	add.w	fp, r3, #47	; 0x2f
  400ee0:	9503      	str	r5, [sp, #12]
  400ee2:	9205      	str	r2, [sp, #20]
  400ee4:	f103 021f 	add.w	r2, r3, #31
  400ee8:	9206      	str	r2, [sp, #24]
  400eea:	f103 021e 	add.w	r2, r3, #30
  400eee:	9207      	str	r2, [sp, #28]
  400ef0:	f103 022e 	add.w	r2, r3, #46	; 0x2e
  400ef4:	9208      	str	r2, [sp, #32]
  400ef6:	f103 022d 	add.w	r2, r3, #45	; 0x2d
  400efa:	9209      	str	r2, [sp, #36]	; 0x24
  400efc:	f103 022c 	add.w	r2, r3, #44	; 0x2c
  400f00:	920a      	str	r2, [sp, #40]	; 0x28
  400f02:	f103 022b 	add.w	r2, r3, #43	; 0x2b
  400f06:	920b      	str	r2, [sp, #44]	; 0x2c
  400f08:	f103 022a 	add.w	r2, r3, #42	; 0x2a
  400f0c:	920c      	str	r2, [sp, #48]	; 0x30
  400f0e:	f103 0229 	add.w	r2, r3, #41	; 0x29
  400f12:	920d      	str	r2, [sp, #52]	; 0x34
  400f14:	f103 0228 	add.w	r2, r3, #40	; 0x28
  400f18:	920e      	str	r2, [sp, #56]	; 0x38
  400f1a:	f103 0227 	add.w	r2, r3, #39	; 0x27
  400f1e:	920f      	str	r2, [sp, #60]	; 0x3c
  400f20:	f103 0226 	add.w	r2, r3, #38	; 0x26
  400f24:	9210      	str	r2, [sp, #64]	; 0x40
  400f26:	f103 0225 	add.w	r2, r3, #37	; 0x25
  400f2a:	9211      	str	r2, [sp, #68]	; 0x44
  400f2c:	f103 0224 	add.w	r2, r3, #36	; 0x24
  400f30:	9212      	str	r2, [sp, #72]	; 0x48
  400f32:	f103 0223 	add.w	r2, r3, #35	; 0x23
  400f36:	3322      	adds	r3, #34	; 0x22
  400f38:	9213      	str	r2, [sp, #76]	; 0x4c
  400f3a:	9314      	str	r3, [sp, #80]	; 0x50
    
    // tempo
    int microseconds = (int)(60.0 / bpm * 1000000.0);
  400f3c:	4b4b      	ldr	r3, [pc, #300]	; (40106c <write_midi_file+0x284>)
  400f3e:	4798      	blx	r3
  400f40:	4d4b      	ldr	r5, [pc, #300]	; (401070 <write_midi_file+0x288>)
  400f42:	4602      	mov	r2, r0
  400f44:	460b      	mov	r3, r1
  400f46:	a144      	add	r1, pc, #272	; (adr r1, 401058 <write_midi_file+0x270>)
  400f48:	e9d1 0100 	ldrd	r0, r1, [r1]
  400f4c:	47a8      	blx	r5
  400f4e:	4b49      	ldr	r3, [pc, #292]	; (401074 <write_midi_file+0x28c>)
  400f50:	4798      	blx	r3
    out[outIdx++] = val;
  400f52:	2100      	movs	r1, #0
  400f54:	22ff      	movs	r2, #255	; 0xff
    write_out(0x00); // tick
    write_out(0xFF);
    write_out(0x51);
    write_out(0x03);
    write_out((microseconds >> 16) & 0xff);
  400f56:	ea4f 4e20 	mov.w	lr, r0, asr #16
  400f5a:	9d07      	ldr	r5, [sp, #28]
    out[outIdx++] = val;
  400f5c:	f04f 0c51 	mov.w	ip, #81	; 0x51
  400f60:	2303      	movs	r3, #3
  400f62:	f807 100a 	strb.w	r1, [r7, sl]
  400f66:	f807 2008 	strb.w	r2, [r7, r8]
    write_out((microseconds >> 8) & 0xff);
  400f6a:	ea4f 2a20 	mov.w	sl, r0, asr #8
    out[outIdx++] = val;
  400f6e:	f807 c006 	strb.w	ip, [r7, r6]
  400f72:	f04f 0c58 	mov.w	ip, #88	; 0x58
  400f76:	f807 3009 	strb.w	r3, [r7, r9]
  400f7a:	2304      	movs	r3, #4
    write_out((microseconds >> 16) & 0xff);
  400f7c:	f807 e005 	strb.w	lr, [r7, r5]
  400f80:	f10d 0661 	add.w	r6, sp, #97	; 0x61
    write_out((microseconds >> 8) & 0xff);
  400f84:	9d06      	ldr	r5, [sp, #24]
    out[outIdx++] = val;
  400f86:	f04f 0e18 	mov.w	lr, #24
    write_out((microseconds >> 8) & 0xff);
  400f8a:	f807 a005 	strb.w	sl, [r7, r5]
    out[outIdx++] = val;
  400f8e:	f04f 0a59 	mov.w	sl, #89	; 0x59
    write_out((microseconds >> 0) & 0xff);
  400f92:	9d05      	ldr	r5, [sp, #20]
  400f94:	5578      	strb	r0, [r7, r5]
    out[outIdx++] = val;
  400f96:	9d04      	ldr	r5, [sp, #16]

    // time signature - base2 should be determined with log2(bottom) 
	uint8_t base2; 
	if (time_signature->bottom == 4)
  400f98:	9801      	ldr	r0, [sp, #4]
  400f9a:	9604      	str	r6, [sp, #16]
  400f9c:	f890 8001 	ldrb.w	r8, [r0, #1]
    out[outIdx++] = val;
  400fa0:	2002      	movs	r0, #2
  400fa2:	5579      	strb	r1, [r7, r5]
  400fa4:	9d14      	ldr	r5, [sp, #80]	; 0x50
		base2 = 2; 
  400fa6:	4598      	cmp	r8, r3
    out[outIdx++] = val;
  400fa8:	557a      	strb	r2, [r7, r5]
		base2 = 2; 
  400faa:	bf08      	it	eq
  400fac:	4680      	moveq	r8, r0
    out[outIdx++] = val;
  400fae:	9d13      	ldr	r5, [sp, #76]	; 0x4c
		base2 = 2; 
  400fb0:	bf18      	it	ne
  400fb2:	f04f 0803 	movne.w	r8, #3
    out[outIdx++] = val;
  400fb6:	f807 c005 	strb.w	ip, [r7, r5]
  400fba:	f10d 0c64 	add.w	ip, sp, #100	; 0x64
  400fbe:	9d12      	ldr	r5, [sp, #72]	; 0x48
  400fc0:	557b      	strb	r3, [r7, r5]
	
    write_out(0x00); // tick
    write_out(0xFF);
    write_out(0x58);
    write_out(0x04);
    write_out(0xff & time_signature->top);
  400fc2:	9b01      	ldr	r3, [sp, #4]
    out[outIdx++] = val;
  400fc4:	9d11      	ldr	r5, [sp, #68]	; 0x44
    write_out(0xff & time_signature->top);
  400fc6:	f893 9000 	ldrb.w	r9, [r3]
  400fca:	eb07 030b 	add.w	r3, r7, fp
    out[outIdx++] = val;
  400fce:	f807 9005 	strb.w	r9, [r7, r5]
  400fd2:	9d10      	ldr	r5, [sp, #64]	; 0x40
  400fd4:	f807 8005 	strb.w	r8, [r7, r5]
  400fd8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  400fda:	f807 e005 	strb.w	lr, [r7, r5]
  400fde:	f04f 0e08 	mov.w	lr, #8
  400fe2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
  400fe4:	f807 e005 	strb.w	lr, [r7, r5]
  400fe8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
  400fea:	5579      	strb	r1, [r7, r5]
  400fec:	990c      	ldr	r1, [sp, #48]	; 0x30
  400fee:	9d03      	ldr	r5, [sp, #12]
  400ff0:	547a      	strb	r2, [r7, r1]
  400ff2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  400ff4:	9916      	ldr	r1, [sp, #88]	; 0x58
  400ff6:	f807 a002 	strb.w	sl, [r7, r2]
  400ffa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  400ffc:	54b8      	strb	r0, [r7, r2]
  400ffe:	9809      	ldr	r0, [sp, #36]	; 0x24
  401000:	780a      	ldrb	r2, [r1, #0]
  401002:	543a      	strb	r2, [r7, r0]
    write_out(0x00); // tick
    write_out(0xff);
    write_out(0x59);
    write_out(0x02);
    write_out(0xff & key_signature->key);
    write_out(0xff & key_signature->mode);
  401004:	784a      	ldrb	r2, [r1, #1]
    out[outIdx++] = val;
  401006:	9908      	ldr	r1, [sp, #32]
  401008:	547a      	strb	r2, [r7, r1]
  40100a:	4632      	mov	r2, r6
  40100c:	f803 5b01 	strb.w	r5, [r3], #1
    
    // end of header track
    for (i = 0; i < 4; i++)
  401010:	4562      	cmp	r2, ip
  401012:	d005      	beq.n	401020 <write_midi_file+0x238>
  401014:	f812 5b01 	ldrb.w	r5, [r2], #1
  401018:	4562      	cmp	r2, ip
    out[outIdx++] = val;
  40101a:	f803 5b01 	strb.w	r5, [r3], #1
    for (i = 0; i < 4; i++)
  40101e:	d1f9      	bne.n	401014 <write_midi_file+0x22c>
    ch = 'T'; write_out(ch);
    ch = 'r'; write_out(ch);
    ch = 'k'; write_out(ch);
    
    // size of track name
    char track_name[] = "Melody";
  401020:	4915      	ldr	r1, [pc, #84]	; (401078 <write_midi_file+0x290>)
    out[outIdx++] = val;
  401022:	eb07 030b 	add.w	r3, r7, fp
  401026:	9201      	str	r2, [sp, #4]
  401028:	224d      	movs	r2, #77	; 0x4d
  40102a:	2654      	movs	r6, #84	; 0x54
  40102c:	f10d 0567 	add.w	r5, sp, #103	; 0x67
  401030:	711a      	strb	r2, [r3, #4]
  401032:	2272      	movs	r2, #114	; 0x72
  401034:	715e      	strb	r6, [r3, #5]
  401036:	f10b 0a08 	add.w	sl, fp, #8
  40103a:	719a      	strb	r2, [r3, #6]
  40103c:	462a      	mov	r2, r5
    char track_name[] = "Melody";
  40103e:	c903      	ldmia	r1, {r0, r1}
  401040:	901a      	str	r0, [sp, #104]	; 0x68
  401042:	0c08      	lsrs	r0, r1, #16
  401044:	f8ad 106c 	strh.w	r1, [sp, #108]	; 0x6c
    out[outIdx++] = val;
  401048:	216b      	movs	r1, #107	; 0x6b
    char track_name[] = "Melody";
  40104a:	f88d 006e 	strb.w	r0, [sp, #110]	; 0x6e
    out[outIdx++] = val;
  40104e:	71d9      	strb	r1, [r3, #7]
    uint32_t size_of_track_name = 0;
  401050:	2300      	movs	r3, #0
    while(track_name[size_of_track_name++]); // size of track name
  401052:	e016      	b.n	401082 <write_midi_file+0x29a>
  401054:	f3af 8000 	nop.w
  401058:	00000000 	.word	0x00000000
  40105c:	418c9c38 	.word	0x418c9c38
  401060:	20429ed0 	.word	0x20429ed0
  401064:	20409810 	.word	0x20409810
  401068:	20429ee9 	.word	0x20429ee9
  40106c:	00402ec9 	.word	0x00402ec9
  401070:	00403209 	.word	0x00403209
  401074:	004033d9 	.word	0x004033d9
  401078:	0040efdc 	.word	0x0040efdc
  40107c:	42f00000 	.word	0x42f00000
  401080:	460b      	mov	r3, r1
  401082:	f812 0f01 	ldrb.w	r0, [r2, #1]!
  401086:	1c59      	adds	r1, r3, #1
  401088:	2800      	cmp	r0, #0
  40108a:	d1f9      	bne.n	401080 <write_midi_file+0x298>
    
    // size of melody
    // number_events * 2 for on/off, * 4 for 4 chars each
    longdata = 11 + number_of_events*8 + size_of_track_name - 1;
  40108c:	9a02      	ldr	r2, [sp, #8]
  40108e:	4680      	mov	r8, r0
    out[outIdx++] = val;
  401090:	f10b 0010 	add.w	r0, fp, #16
  401094:	f04f 0eff 	mov.w	lr, #255	; 0xff
    longdata = 11 + number_of_events*8 + size_of_track_name - 1;
  401098:	ea4f 09c2 	mov.w	r9, r2, lsl #3
    out[outIdx++] = val;
  40109c:	eb07 020b 	add.w	r2, r7, fp
    longdata = 11 + number_of_events*8 + size_of_track_name - 1;
  4010a0:	f109 060a 	add.w	r6, r9, #10
  4010a4:	4431      	add	r1, r6
    write_out(data.bytes[3]);
  4010a6:	f3c1 6b07 	ubfx	fp, r1, #24, #8
    write_out(data.bytes[2]);
  4010aa:	f3c1 4607 	ubfx	r6, r1, #16, #8
    out[outIdx++] = val;
  4010ae:	f807 b00a 	strb.w	fp, [r7, sl]
    write_out(data.bytes[1]);
  4010b2:	f3c1 2a07 	ubfx	sl, r1, #8, #8
    out[outIdx++] = val;
  4010b6:	72d1      	strb	r1, [r2, #11]
  4010b8:	f04f 0103 	mov.w	r1, #3
  4010bc:	7256      	strb	r6, [r2, #9]
  4010be:	f882 a00a 	strb.w	sl, [r2, #10]
  4010c2:	f882 800c 	strb.w	r8, [r2, #12]
  4010c6:	73d3      	strb	r3, [r2, #15]
  4010c8:	f882 e00d 	strb.w	lr, [r2, #13]
  4010cc:	7391      	strb	r1, [r2, #14]
    // track name
    write_out(0x00); // tick
    write_out(0xFF);
    write_out(0x03);
    write_out((uint8_t)size_of_track_name-1);
    for (i = 0; i < size_of_track_name-1; i++)
  4010ce:	b153      	cbz	r3, 4010e6 <write_midi_file+0x2fe>
  4010d0:	aa1a      	add	r2, sp, #104	; 0x68
  4010d2:	1839      	adds	r1, r7, r0
  4010d4:	eb02 0e03 	add.w	lr, r2, r3
        write_out(track_name[i]);
  4010d8:	f812 6b01 	ldrb.w	r6, [r2], #1
    for (i = 0; i < size_of_track_name-1; i++)
  4010dc:	4572      	cmp	r2, lr
    out[outIdx++] = val;
  4010de:	f801 6b01 	strb.w	r6, [r1], #1
    for (i = 0; i < size_of_track_name-1; i++)
  4010e2:	d1f9      	bne.n	4010d8 <write_midi_file+0x2f0>
  4010e4:	4418      	add	r0, r3
    
    // patch name
    uint8_t channel = 0;
    write_out(0x00); // tick
    write_out(0xc0 | (0x0f & channel));
    write_out(0x7f & playback_instrument);
  4010e6:	9b15      	ldr	r3, [sp, #84]	; 0x54
    out[outIdx++] = val;
  4010e8:	2100      	movs	r1, #0
  4010ea:	1cc6      	adds	r6, r0, #3
  4010ec:	5439      	strb	r1, [r7, r0]
    write_out(0x7f & playback_instrument);
  4010ee:	f003 027f 	and.w	r2, r3, #127	; 0x7f
    out[outIdx++] = val;
  4010f2:	183b      	adds	r3, r7, r0
  4010f4:	20c0      	movs	r0, #192	; 0xc0
  4010f6:	6026      	str	r6, [r4, #0]
  4010f8:	709a      	strb	r2, [r3, #2]
  4010fa:	7058      	strb	r0, [r3, #1]
    
    // write out track data
    uint32_t actiontick = 0;
    for (i = 0; i < number_of_events; i++)
  4010fc:	9b02      	ldr	r3, [sp, #8]
  4010fe:	2b00      	cmp	r3, #0
  401100:	f000 8092 	beq.w	401228 <write_midi_file+0x440>
  401104:	9a17      	ldr	r2, [sp, #92]	; 0x5c
            actiontick = 0;
        }
        else
        {
            // length of rest
            actiontick += TICKS_PER_QUARTER_NOTE * events[i].rhythm;
  401106:	ed1f 7a23 	vldr	s14, [pc, #-140]	; 40107c <write_midi_file+0x294>
  40110a:	4491      	add	r9, r2
        if (events[i].note_number >= 0)
  40110c:	f9b2 3000 	ldrsh.w	r3, [r2]
  401110:	2b00      	cmp	r3, #0
  401112:	f2c0 80af 	blt.w	401274 <write_midi_file+0x48c>
    bytes[1] = (unsigned char)((value >> 14) & 0x7f);
  401116:	f3c1 3086 	ubfx	r0, r1, #14, #7
    bytes[0] = (unsigned char)((value >> 21) & 0x7f);
  40111a:	f3c1 5346 	ubfx	r3, r1, #21, #7
    bytes[2] = (unsigned char)((value >> 7)  & 0x7f);
  40111e:	f3c1 1ec6 	ubfx	lr, r1, #7, #7
    bytes[3] = (unsigned char)(value & 0x7f);
  401122:	f001 017f 	and.w	r1, r1, #127	; 0x7f
    bytes[1] = (unsigned char)((value >> 14) & 0x7f);
  401126:	f88d 0065 	strb.w	r0, [sp, #101]	; 0x65
    int start = 0;
  40112a:	2000      	movs	r0, #0
    bytes[0] = (unsigned char)((value >> 21) & 0x7f);
  40112c:	f88d 3064 	strb.w	r3, [sp, #100]	; 0x64
    bytes[2] = (unsigned char)((value >> 7)  & 0x7f);
  401130:	f88d e066 	strb.w	lr, [sp, #102]	; 0x66
    bytes[3] = (unsigned char)(value & 0x7f);
  401134:	f88d 1067 	strb.w	r1, [sp, #103]	; 0x67
    while ((start<4) && (bytes[start] == 0))  start++;
  401138:	b933      	cbnz	r3, 401148 <write_midi_file+0x360>
  40113a:	3001      	adds	r0, #1
  40113c:	2804      	cmp	r0, #4
  40113e:	d017      	beq.n	401170 <write_midi_file+0x388>
  401140:	f81c 3000 	ldrb.w	r3, [ip, r0]
  401144:	2b00      	cmp	r3, #0
  401146:	d0f8      	beq.n	40113a <write_midi_file+0x352>
    for (i=start; i<3; i++) {
  401148:	2803      	cmp	r0, #3
  40114a:	d011      	beq.n	401170 <write_midi_file+0x388>
  40114c:	eb0c 0100 	add.w	r1, ip, r0
  401150:	eb07 0e06 	add.w	lr, r7, r6
  401154:	e000      	b.n	401158 <write_midi_file+0x370>
  401156:	780b      	ldrb	r3, [r1, #0]
        bytes[i] = bytes[i] | 0x80;
  401158:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40115c:	f801 3b01 	strb.w	r3, [r1], #1
    for (i=start; i<3; i++) {
  401160:	42a9      	cmp	r1, r5
    out[outIdx++] = val;
  401162:	f80e 3b01 	strb.w	r3, [lr], #1
    for (i=start; i<3; i++) {
  401166:	d1f6      	bne.n	401156 <write_midi_file+0x36e>
  401168:	3603      	adds	r6, #3
  40116a:	f89d 1067 	ldrb.w	r1, [sp, #103]	; 0x67
  40116e:	1a36      	subs	r6, r6, r0
    out[outIdx++] = val;
  401170:	55b9      	strb	r1, [r7, r6]
  401172:	19bb      	adds	r3, r7, r6
  401174:	f06f 016f 	mvn.w	r1, #111	; 0x6f
  401178:	1d30      	adds	r0, r6, #4
    int start = 0;
  40117a:	f04f 0e00 	mov.w	lr, #0
    out[outIdx++] = val;
  40117e:	7059      	strb	r1, [r3, #1]
            write_out(events[i].note_number & 0x7f);
  401180:	7811      	ldrb	r1, [r2, #0]
    out[outIdx++] = val;
  401182:	6020      	str	r0, [r4, #0]
            write_out(events[i].note_number & 0x7f);
  401184:	f001 017f 	and.w	r1, r1, #127	; 0x7f
    out[outIdx++] = val;
  401188:	7099      	strb	r1, [r3, #2]
            write_out(events[i].velocity & 0x7f);
  40118a:	7891      	ldrb	r1, [r2, #2]
  40118c:	f001 017f 	and.w	r1, r1, #127	; 0x7f
    out[outIdx++] = val;
  401190:	70d9      	strb	r1, [r3, #3]
            actiontick = TICKS_PER_QUARTER_NOTE * events[i].rhythm;
  401192:	edd2 7a01 	vldr	s15, [r2, #4]
  401196:	ee67 7a87 	vmul.f32	s15, s15, s14
  40119a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
  40119e:	ee17 1a90 	vmov	r1, s15
    bytes[0] = (unsigned char)((value >> 21) & 0x7f);
  4011a2:	f3c1 5346 	ubfx	r3, r1, #21, #7
    bytes[1] = (unsigned char)((value >> 14) & 0x7f);
  4011a6:	f3c1 3b86 	ubfx	fp, r1, #14, #7
    bytes[2] = (unsigned char)((value >> 7)  & 0x7f);
  4011aa:	f3c1 1ac6 	ubfx	sl, r1, #7, #7
    bytes[3] = (unsigned char)(value & 0x7f);
  4011ae:	f001 017f 	and.w	r1, r1, #127	; 0x7f
    bytes[0] = (unsigned char)((value >> 21) & 0x7f);
  4011b2:	f88d 3064 	strb.w	r3, [sp, #100]	; 0x64
    bytes[1] = (unsigned char)((value >> 14) & 0x7f);
  4011b6:	f88d b065 	strb.w	fp, [sp, #101]	; 0x65
    bytes[2] = (unsigned char)((value >> 7)  & 0x7f);
  4011ba:	f88d a066 	strb.w	sl, [sp, #102]	; 0x66
    bytes[3] = (unsigned char)(value & 0x7f);
  4011be:	f88d 1067 	strb.w	r1, [sp, #103]	; 0x67
    while ((start<4) && (bytes[start] == 0))  start++;
  4011c2:	b943      	cbnz	r3, 4011d6 <write_midi_file+0x3ee>
  4011c4:	f10e 0e01 	add.w	lr, lr, #1
  4011c8:	f1be 0f04 	cmp.w	lr, #4
  4011cc:	d018      	beq.n	401200 <write_midi_file+0x418>
  4011ce:	f81c 300e 	ldrb.w	r3, [ip, lr]
  4011d2:	2b00      	cmp	r3, #0
  4011d4:	d0f6      	beq.n	4011c4 <write_midi_file+0x3dc>
    for (i=start; i<3; i++) {
  4011d6:	f1be 0f03 	cmp.w	lr, #3
  4011da:	d011      	beq.n	401200 <write_midi_file+0x418>
  4011dc:	4438      	add	r0, r7
  4011de:	eb0c 010e 	add.w	r1, ip, lr
  4011e2:	e000      	b.n	4011e6 <write_midi_file+0x3fe>
  4011e4:	780b      	ldrb	r3, [r1, #0]
        bytes[i] = bytes[i] | 0x80;
  4011e6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4011ea:	f801 3b01 	strb.w	r3, [r1], #1
    for (i=start; i<3; i++) {
  4011ee:	42a9      	cmp	r1, r5
    out[outIdx++] = val;
  4011f0:	f800 3b01 	strb.w	r3, [r0], #1
    for (i=start; i<3; i++) {
  4011f4:	d1f6      	bne.n	4011e4 <write_midi_file+0x3fc>
  4011f6:	1df0      	adds	r0, r6, #7
  4011f8:	f89d 1067 	ldrb.w	r1, [sp, #103]	; 0x67
  4011fc:	eba0 000e 	sub.w	r0, r0, lr
    out[outIdx++] = val;
  401200:	5439      	strb	r1, [r7, r0]
  401202:	183b      	adds	r3, r7, r0
  401204:	1d06      	adds	r6, r0, #4
  401206:	f06f 007f 	mvn.w	r0, #127	; 0x7f
            actiontick = 0;
  40120a:	2100      	movs	r1, #0
    out[outIdx++] = val;
  40120c:	7058      	strb	r0, [r3, #1]
            write_out(events[i].note_number & 0x7f);
  40120e:	7810      	ldrb	r0, [r2, #0]
    out[outIdx++] = val;
  401210:	6026      	str	r6, [r4, #0]
            write_out(events[i].note_number & 0x7f);
  401212:	f000 007f 	and.w	r0, r0, #127	; 0x7f
    out[outIdx++] = val;
  401216:	7098      	strb	r0, [r3, #2]
            write_out(events[i].velocity & 0x7f);
  401218:	7890      	ldrb	r0, [r2, #2]
  40121a:	f000 007f 	and.w	r0, r0, #127	; 0x7f
    out[outIdx++] = val;
  40121e:	70d8      	strb	r0, [r3, #3]
  401220:	3208      	adds	r2, #8
    for (i = 0; i < number_of_events; i++)
  401222:	454a      	cmp	r2, r9
  401224:	f47f af72 	bne.w	40110c <write_midi_file+0x324>
  401228:	9b04      	ldr	r3, [sp, #16]
  40122a:	4437      	add	r7, r6
  40122c:	9a01      	ldr	r2, [sp, #4]
    out[outIdx++] = val;
  40122e:	f807 8b01 	strb.w	r8, [r7], #1
        }
    }
    
    // end of header track
    for (i = 0; i < 4; i++) 
  401232:	4293      	cmp	r3, r2
  401234:	d005      	beq.n	401242 <write_midi_file+0x45a>
  401236:	f813 8b01 	ldrb.w	r8, [r3], #1
  40123a:	4293      	cmp	r3, r2
    out[outIdx++] = val;
  40123c:	f807 8b01 	strb.w	r8, [r7], #1
    for (i = 0; i < 4; i++) 
  401240:	d1f9      	bne.n	401236 <write_midi_file+0x44e>
  401242:	3604      	adds	r6, #4
	{
        write_out(endoftrack[i]);
	}

	printf("-"); // flag for beginning of midi file
  401244:	4827      	ldr	r0, [pc, #156]	; (4012e4 <write_midi_file+0x4fc>)
  401246:	4f28      	ldr	r7, [pc, #160]	; (4012e8 <write_midi_file+0x500>)
  401248:	6026      	str	r6, [r4, #0]
  40124a:	47b8      	blx	r7
	for (i = 0; i < outIdx; i++)
  40124c:	6823      	ldr	r3, [r4, #0]
  40124e:	b15b      	cbz	r3, 401268 <write_midi_file+0x480>
  401250:	4e26      	ldr	r6, [pc, #152]	; (4012ec <write_midi_file+0x504>)
  401252:	2500      	movs	r5, #0
	{
		printf("%02x", out[i]);
  401254:	f8df 8098 	ldr.w	r8, [pc, #152]	; 4012f0 <write_midi_file+0x508>
  401258:	f816 1f01 	ldrb.w	r1, [r6, #1]!
  40125c:	4640      	mov	r0, r8
  40125e:	47b8      	blx	r7
	for (i = 0; i < outIdx; i++)
  401260:	3501      	adds	r5, #1
  401262:	6823      	ldr	r3, [r4, #0]
  401264:	42ab      	cmp	r3, r5
  401266:	d8f7      	bhi.n	401258 <write_midi_file+0x470>
	}
	printf("-"); // flag for end
  401268:	481e      	ldr	r0, [pc, #120]	; (4012e4 <write_midi_file+0x4fc>)
  40126a:	463b      	mov	r3, r7
}
  40126c:	b01d      	add	sp, #116	; 0x74
  40126e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	printf("-"); // flag for end
  401272:	4718      	bx	r3
            actiontick += TICKS_PER_QUARTER_NOTE * events[i].rhythm;
  401274:	ee07 1a90 	vmov	s15, r1
  401278:	edd2 6a01 	vldr	s13, [r2, #4]
  40127c:	eef8 7a67 	vcvt.f32.u32	s15, s15
  401280:	eee6 7a87 	vfma.f32	s15, s13, s14
  401284:	eefc 7ae7 	vcvt.u32.f32	s15, s15
  401288:	ee17 1a90 	vmov	r1, s15
  40128c:	e7c8      	b.n	401220 <write_midi_file+0x438>
    for (i = 0; i < size_of_title-1; i++)
  40128e:	2322      	movs	r3, #34	; 0x22
  401290:	4692      	mov	sl, r2
  401292:	f04f 0b2f 	mov.w	fp, #47	; 0x2f
  401296:	f04f 081b 	mov.w	r8, #27
  40129a:	9314      	str	r3, [sp, #80]	; 0x50
  40129c:	2323      	movs	r3, #35	; 0x23
  40129e:	261c      	movs	r6, #28
  4012a0:	f04f 091d 	mov.w	r9, #29
  4012a4:	9313      	str	r3, [sp, #76]	; 0x4c
  4012a6:	2324      	movs	r3, #36	; 0x24
  4012a8:	9312      	str	r3, [sp, #72]	; 0x48
  4012aa:	2325      	movs	r3, #37	; 0x25
  4012ac:	9311      	str	r3, [sp, #68]	; 0x44
  4012ae:	2326      	movs	r3, #38	; 0x26
  4012b0:	9310      	str	r3, [sp, #64]	; 0x40
  4012b2:	2327      	movs	r3, #39	; 0x27
  4012b4:	930f      	str	r3, [sp, #60]	; 0x3c
  4012b6:	2328      	movs	r3, #40	; 0x28
  4012b8:	930e      	str	r3, [sp, #56]	; 0x38
  4012ba:	2329      	movs	r3, #41	; 0x29
  4012bc:	930d      	str	r3, [sp, #52]	; 0x34
  4012be:	232a      	movs	r3, #42	; 0x2a
  4012c0:	930c      	str	r3, [sp, #48]	; 0x30
  4012c2:	232b      	movs	r3, #43	; 0x2b
  4012c4:	930b      	str	r3, [sp, #44]	; 0x2c
  4012c6:	232c      	movs	r3, #44	; 0x2c
  4012c8:	930a      	str	r3, [sp, #40]	; 0x28
  4012ca:	232d      	movs	r3, #45	; 0x2d
  4012cc:	9309      	str	r3, [sp, #36]	; 0x24
  4012ce:	232e      	movs	r3, #46	; 0x2e
  4012d0:	9308      	str	r3, [sp, #32]
  4012d2:	231e      	movs	r3, #30
  4012d4:	9307      	str	r3, [sp, #28]
  4012d6:	231f      	movs	r3, #31
  4012d8:	9306      	str	r3, [sp, #24]
  4012da:	2320      	movs	r3, #32
  4012dc:	9305      	str	r3, [sp, #20]
  4012de:	2321      	movs	r3, #33	; 0x21
  4012e0:	9304      	str	r3, [sp, #16]
  4012e2:	e62b      	b.n	400f3c <write_midi_file+0x154>
  4012e4:	0040efd0 	.word	0x0040efd0
  4012e8:	00403479 	.word	0x00403479
  4012ec:	20429ecf 	.word	0x20429ecf
  4012f0:	0040efd4 	.word	0x0040efd4

004012f4 <RTT_Handler>:
 * \brief Interrupt handler for the RTT.
 *
 * Display the current time on the terminal.
 */
void RTT_Handler(void)
{
  4012f4:	b538      	push	{r3, r4, r5, lr}
	uint32_t ul_status;

	/* Get RTT status */
	ul_status = rtt_get_status(RTT);
  4012f6:	4823      	ldr	r0, [pc, #140]	; (401384 <RTT_Handler+0x90>)
  4012f8:	4b23      	ldr	r3, [pc, #140]	; (401388 <RTT_Handler+0x94>)
  4012fa:	4798      	blx	r3

	/* Timer overflow */
	if ((ul_status & RTT_SR_RTTINC) == RTT_SR_RTTINC) 
  4012fc:	0783      	lsls	r3, r0, #30
  4012fe:	d51f      	bpl.n	401340 <RTT_Handler+0x4c>
	{	
		if (processPingMode)
  401300:	4b22      	ldr	r3, [pc, #136]	; (40138c <RTT_Handler+0x98>)
  401302:	781a      	ldrb	r2, [r3, #0]
  401304:	b9ea      	cbnz	r2, 401342 <RTT_Handler+0x4e>
		}
		else
		{
			processBuffer = processPongBuffer;
			fillBuffer = processPingBuffer;
			processPingMode = !processPingMode;
  401306:	781a      	ldrb	r2, [r3, #0]
			processBuffer = processPongBuffer;
  401308:	4c21      	ldr	r4, [pc, #132]	; (401390 <RTT_Handler+0x9c>)
			processPingMode = !processPingMode;
  40130a:	f082 0201 	eor.w	r2, r2, #1
			processBuffer = processPongBuffer;
  40130e:	4d21      	ldr	r5, [pc, #132]	; (401394 <RTT_Handler+0xa0>)
			fillBuffer = processPingBuffer;
  401310:	4921      	ldr	r1, [pc, #132]	; (401398 <RTT_Handler+0xa4>)
  401312:	4822      	ldr	r0, [pc, #136]	; (40139c <RTT_Handler+0xa8>)
			processPingMode = !processPingMode;
  401314:	701a      	strb	r2, [r3, #0]
			processBuffer = processPongBuffer;
  401316:	6025      	str	r5, [r4, #0]
			fillBuffer = processPingBuffer;
  401318:	6008      	str	r0, [r1, #0]
		}
		
		note_16_received = true; 
		one_beat = false; 
  40131a:	2100      	movs	r1, #0
		note_16_received = true; 
  40131c:	4d20      	ldr	r5, [pc, #128]	; (4013a0 <RTT_Handler+0xac>)
  40131e:	2201      	movs	r2, #1
		one_beat = false; 
  401320:	4c20      	ldr	r4, [pc, #128]	; (4013a4 <RTT_Handler+0xb0>)
		up_beat = false; 
  401322:	4821      	ldr	r0, [pc, #132]	; (4013a8 <RTT_Handler+0xb4>)
		
		// One beat, or quarter note has passed 
		if (sixteenth_note_cnt == 4)
  401324:	4b21      	ldr	r3, [pc, #132]	; (4013ac <RTT_Handler+0xb8>)
		note_16_received = true; 
  401326:	702a      	strb	r2, [r5, #0]
		one_beat = false; 
  401328:	7021      	strb	r1, [r4, #0]
		up_beat = false; 
  40132a:	7001      	strb	r1, [r0, #0]
		if (sixteenth_note_cnt == 4)
  40132c:	7819      	ldrb	r1, [r3, #0]
  40132e:	2904      	cmp	r1, #4
  401330:	d012      	beq.n	401358 <RTT_Handler+0x64>
			}
		}
		else
		{
			// Check for every other 16th note -> eigth note 
			if (sixteenth_note_cnt == 2)
  401332:	7819      	ldrb	r1, [r3, #0]
  401334:	2902      	cmp	r1, #2
  401336:	d01d      	beq.n	401374 <RTT_Handler+0x80>
			{
				metronome_on = true;
				up_beat = true;
			}
			sixteenth_note_cnt++;
  401338:	781a      	ldrb	r2, [r3, #0]
  40133a:	3201      	adds	r2, #1
  40133c:	b2d2      	uxtb	r2, r2
  40133e:	701a      	strb	r2, [r3, #0]
  401340:	bd38      	pop	{r3, r4, r5, pc}
			processPingMode = !processPingMode;
  401342:	781a      	ldrb	r2, [r3, #0]
			processBuffer = processPingBuffer;
  401344:	4c12      	ldr	r4, [pc, #72]	; (401390 <RTT_Handler+0x9c>)
			processPingMode = !processPingMode;
  401346:	f082 0201 	eor.w	r2, r2, #1
			processBuffer = processPingBuffer;
  40134a:	4d14      	ldr	r5, [pc, #80]	; (40139c <RTT_Handler+0xa8>)
			fillBuffer = processPongBuffer;
  40134c:	4912      	ldr	r1, [pc, #72]	; (401398 <RTT_Handler+0xa4>)
  40134e:	4811      	ldr	r0, [pc, #68]	; (401394 <RTT_Handler+0xa0>)
			processPingMode = !processPingMode;
  401350:	701a      	strb	r2, [r3, #0]
			processBuffer = processPingBuffer;
  401352:	6025      	str	r5, [r4, #0]
			fillBuffer = processPongBuffer;
  401354:	6008      	str	r0, [r1, #0]
  401356:	e7e0      	b.n	40131a <RTT_Handler+0x26>
			metronome_on = true;
  401358:	4d15      	ldr	r5, [pc, #84]	; (4013b0 <RTT_Handler+0xbc>)
			if (beat_cnt == number_of_beats_in_a_measure)
  40135a:	4916      	ldr	r1, [pc, #88]	; (4013b4 <RTT_Handler+0xc0>)
  40135c:	4816      	ldr	r0, [pc, #88]	; (4013b8 <RTT_Handler+0xc4>)
			metronome_on = true;
  40135e:	702a      	strb	r2, [r5, #0]
			if (beat_cnt == number_of_beats_in_a_measure)
  401360:	7800      	ldrb	r0, [r0, #0]
			sixteenth_note_cnt = 1;
  401362:	701a      	strb	r2, [r3, #0]
			if (beat_cnt == number_of_beats_in_a_measure)
  401364:	780b      	ldrb	r3, [r1, #0]
  401366:	4298      	cmp	r0, r3
  401368:	d008      	beq.n	40137c <RTT_Handler+0x88>
				beat_cnt++;
  40136a:	780b      	ldrb	r3, [r1, #0]
  40136c:	3301      	adds	r3, #1
  40136e:	b2db      	uxtb	r3, r3
  401370:	700b      	strb	r3, [r1, #0]
  401372:	bd38      	pop	{r3, r4, r5, pc}
				metronome_on = true;
  401374:	490e      	ldr	r1, [pc, #56]	; (4013b0 <RTT_Handler+0xbc>)
  401376:	700a      	strb	r2, [r1, #0]
				up_beat = true;
  401378:	7002      	strb	r2, [r0, #0]
  40137a:	e7dd      	b.n	401338 <RTT_Handler+0x44>
				one_beat = true;
  40137c:	7022      	strb	r2, [r4, #0]
				beat_cnt = 1;
  40137e:	700a      	strb	r2, [r1, #0]
  401380:	bd38      	pop	{r3, r4, r5, pc}
  401382:	bf00      	nop
  401384:	400e1830 	.word	0x400e1830
  401388:	004017d1 	.word	0x004017d1
  40138c:	20400024 	.word	0x20400024
  401390:	20400020 	.word	0x20400020
  401394:	20419dd0 	.word	0x20419dd0
  401398:	2040000c 	.word	0x2040000c
  40139c:	20409ad0 	.word	0x20409ad0
  4013a0:	20409816 	.word	0x20409816
  4013a4:	20409a19 	.word	0x20409a19
  4013a8:	20409a1c 	.word	0x20409a1c
  4013ac:	20409a1b 	.word	0x20409a1b
  4013b0:	20409815 	.word	0x20409815
  4013b4:	20409814 	.word	0x20409814
  4013b8:	20409a18 	.word	0x20409a18

004013bc <start_recording>:
#define NOTE_BUF_SIZE 128 
#define NOTE_MASK (NOTE_BUF_SIZE-1)
static midi_note_t notes[NOTE_BUF_SIZE]; 
extern volatile int clickIdx; 
void start_recording(midi_event_t *events, uint32_t *number_of_events, uint32_t bpm, midi_instrument_t playback_instrument, time_signature_t time_signature , key_signature_t key_signature, char *title)
{		
  4013bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4013c0:	ed2d 8b02 	vpush	{d8}
  4013c4:	b083      	sub	sp, #12
  4013c6:	460d      	mov	r5, r1
	/******** midi event variables *********/ 
	*number_of_events = 0; 
  4013c8:	2100      	movs	r1, #0
{		
  4013ca:	4681      	mov	r9, r0
	float current_rhythm = 0.25;  // 16th note
	int note_cnt = 0; 
	
	time_sig = time_signature.sig;
  4013cc:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
{		
  4013d0:	4690      	mov	r8, r2
	*number_of_events = 0; 
  4013d2:	6029      	str	r1, [r5, #0]
	if (time_sig == FOUR_FOUR)
  4013d4:	2b00      	cmp	r3, #0
  4013d6:	d17f      	bne.n	4014d8 <start_recording+0x11c>
		number_of_beats_in_a_measure = 4;
  4013d8:	4e6a      	ldr	r6, [pc, #424]	; (401584 <start_recording+0x1c8>)
  4013da:	2204      	movs	r2, #4
  4013dc:	7032      	strb	r2, [r6, #0]
	else if (time_sig == TWO_FOUR)
		number_of_beats_in_a_measure = 2;
	else // 6/8
		number_of_beats_in_a_measure = 6; 
	
	sixteenth_note_cnt = 4; 
  4013de:	f04f 0e04 	mov.w	lr, #4
  4013e2:	4969      	ldr	r1, [pc, #420]	; (401588 <start_recording+0x1cc>)
	beat_cnt = number_of_beats_in_a_measure; 
  4013e4:	4f69      	ldr	r7, [pc, #420]	; (40158c <start_recording+0x1d0>)
	one_beat = false; 
  4013e6:	2300      	movs	r3, #0
	sixteenth_note_cnt = 4; 
  4013e8:	f881 e000 	strb.w	lr, [r1]
	up_beat = false; 
	metronome_on = false;
	recording = true;
  4013ec:	2001      	movs	r0, #1
	beat_cnt = number_of_beats_in_a_measure; 
  4013ee:	703a      	strb	r2, [r7, #0]
	rtt_sel_source(RTT, false);
  4013f0:	4619      	mov	r1, r3
	one_beat = false; 
  4013f2:	4c67      	ldr	r4, [pc, #412]	; (401590 <start_recording+0x1d4>)
	up_beat = false; 
  4013f4:	4a67      	ldr	r2, [pc, #412]	; (401594 <start_recording+0x1d8>)
	one_beat = false; 
  4013f6:	7023      	strb	r3, [r4, #0]
	metronome_on = false;
  4013f8:	f8df a1cc 	ldr.w	sl, [pc, #460]	; 4015c8 <start_recording+0x20c>
	up_beat = false; 
  4013fc:	7013      	strb	r3, [r2, #0]
	recording = true;
  4013fe:	4f66      	ldr	r7, [pc, #408]	; (401598 <start_recording+0x1dc>)
	clickIdx = 0; 
  401400:	4a66      	ldr	r2, [pc, #408]	; (40159c <start_recording+0x1e0>)
	metronome_on = false;
  401402:	f88a 3000 	strb.w	r3, [sl]
	recording = true;
  401406:	7038      	strb	r0, [r7, #0]
	clickIdx = 0; 
  401408:	6013      	str	r3, [r2, #0]
	rtt_sel_source(RTT, false);
  40140a:	4865      	ldr	r0, [pc, #404]	; (4015a0 <start_recording+0x1e4>)
  40140c:	4b65      	ldr	r3, [pc, #404]	; (4015a4 <start_recording+0x1e8>)
  40140e:	4798      	blx	r3
	configure_rtt(32768 * 15 / bpm);
  401410:	f44f 21f0 	mov.w	r1, #491520	; 0x78000
	rtt_init(RTT, count_8_note);
  401414:	4862      	ldr	r0, [pc, #392]	; (4015a0 <start_recording+0x1e4>)
  401416:	4b64      	ldr	r3, [pc, #400]	; (4015a8 <start_recording+0x1ec>)
	while (ul_previous_time == rtt_read_timer_value(RTT));
  401418:	4683      	mov	fp, r0
	ul_previous_time = rtt_read_timer_value(RTT);
  40141a:	4c64      	ldr	r4, [pc, #400]	; (4015ac <start_recording+0x1f0>)
	configure_rtt(32768 * 15 / bpm);
  40141c:	fbb1 f1f8 	udiv	r1, r1, r8
	rtt_init(RTT, count_8_note);
  401420:	b289      	uxth	r1, r1
  401422:	4798      	blx	r3
	ul_previous_time = rtt_read_timer_value(RTT);
  401424:	4658      	mov	r0, fp
  401426:	47a0      	blx	r4
  401428:	4680      	mov	r8, r0
	while (ul_previous_time == rtt_read_timer_value(RTT));
  40142a:	4658      	mov	r0, fp
  40142c:	47a0      	blx	r4
  40142e:	4580      	cmp	r8, r0
  401430:	d0fb      	beq.n	40142a <start_recording+0x6e>
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  401432:	4b5f      	ldr	r3, [pc, #380]	; (4015b0 <start_recording+0x1f4>)
  401434:	2208      	movs	r2, #8
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  401436:	2400      	movs	r4, #0
	rtt_enable_interrupt(RTT, RTT_MR_RTTINCIEN);
  401438:	f44f 3100 	mov.w	r1, #131072	; 0x20000
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  40143c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  401440:	4857      	ldr	r0, [pc, #348]	; (4015a0 <start_recording+0x1e4>)
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  401442:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  401446:	f883 4303 	strb.w	r4, [r3, #771]	; 0x303
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  40144a:	601a      	str	r2, [r3, #0]
  40144c:	4b59      	ldr	r3, [pc, #356]	; (4015b4 <start_recording+0x1f8>)
  40144e:	4798      	blx	r3
  401450:	7833      	ldrb	r3, [r6, #0]
  401452:	2101      	movs	r1, #1
	
	// Wait a measure 
	int i; 
	for (i = 0; i < 4*number_of_beats_in_a_measure + 1;i++)
  401454:	4622      	mov	r2, r4
	{
		while(!note_16_received); 
		note_16_received = 0; 
  401456:	4620      	mov	r0, r4
  401458:	4c57      	ldr	r4, [pc, #348]	; (4015b8 <start_recording+0x1fc>)
  40145a:	eb01 0183 	add.w	r1, r1, r3, lsl #2
		while(!note_16_received); 
  40145e:	7823      	ldrb	r3, [r4, #0]
  401460:	2b00      	cmp	r3, #0
  401462:	d0fc      	beq.n	40145e <start_recording+0xa2>
	for (i = 0; i < 4*number_of_beats_in_a_measure + 1;i++)
  401464:	3201      	adds	r2, #1
		note_16_received = 0; 
  401466:	7020      	strb	r0, [r4, #0]
	for (i = 0; i < 4*number_of_beats_in_a_measure + 1;i++)
  401468:	428a      	cmp	r2, r1
  40146a:	d1f8      	bne.n	40145e <start_recording+0xa2>
  40146c:	2600      	movs	r6, #0
  40146e:	eeb5 8a00 	vmov.f32	s16, #80	; 0x3e800000  0.250
  401472:	f8df b158 	ldr.w	fp, [pc, #344]	; 4015cc <start_recording+0x210>
	}
	uint32_t record_cnt = 0; 
	while(recording && *number_of_events < MAX_NUM_EVENTS-1 && record_cnt < 30)
  401476:	f242 780e 	movw	r8, #9998	; 0x270e
	{
		if (note_16_received)
		{
			record_cnt++;
			get_midi_note((float32_t *)&processBuffer[0], &notes[note_cnt & NOTE_MASK]);
  40147a:	4b50      	ldr	r3, [pc, #320]	; (4015bc <start_recording+0x200>)
  40147c:	e006      	b.n	40148c <start_recording+0xd0>
	while(recording && *number_of_events < MAX_NUM_EVENTS-1 && record_cnt < 30)
  40147e:	682a      	ldr	r2, [r5, #0]
  401480:	4542      	cmp	r2, r8
  401482:	d806      	bhi.n	401492 <start_recording+0xd6>
  401484:	2e1d      	cmp	r6, #29
  401486:	d804      	bhi.n	401492 <start_recording+0xd6>
		if (note_16_received)
  401488:	7822      	ldrb	r2, [r4, #0]
  40148a:	bb72      	cbnz	r2, 4014ea <start_recording+0x12e>
	while(recording && *number_of_events < MAX_NUM_EVENTS-1 && record_cnt < 30)
  40148c:	783a      	ldrb	r2, [r7, #0]
  40148e:	2a00      	cmp	r2, #0
  401490:	d1f5      	bne.n	40147e <start_recording+0xc2>
			}
			note_cnt++; 
			note_16_received = false;
		}
	}
	recording = false; 
  401492:	2300      	movs	r3, #0
	metronome_on = false;
	rtt_disable_interrupt(RTT, RTT_MR_RTTINCIEN);
  401494:	f44f 3100 	mov.w	r1, #131072	; 0x20000
  401498:	4841      	ldr	r0, [pc, #260]	; (4015a0 <start_recording+0x1e4>)
	recording = false; 
  40149a:	703b      	strb	r3, [r7, #0]
	metronome_on = false;
  40149c:	f88a 3000 	strb.w	r3, [sl]
	rtt_disable_interrupt(RTT, RTT_MR_RTTINCIEN);
  4014a0:	4b47      	ldr	r3, [pc, #284]	; (4015c0 <start_recording+0x204>)
  4014a2:	4798      	blx	r3
	
	// add last note 
	events[*number_of_events].note_number = notes[(note_cnt-1) & NOTE_MASK].note_number;
  4014a4:	1e73      	subs	r3, r6, #1
  4014a6:	6829      	ldr	r1, [r5, #0]
	events[*number_of_events].velocity = 64;
  4014a8:	2240      	movs	r2, #64	; 0x40
	events[*number_of_events].note_number = notes[(note_cnt-1) & NOTE_MASK].note_number;
  4014aa:	f003 037f 	and.w	r3, r3, #127	; 0x7f
  4014ae:	f93b 3023 	ldrsh.w	r3, [fp, r3, lsl #2]
  4014b2:	f829 3031 	strh.w	r3, [r9, r1, lsl #3]
	events[*number_of_events].velocity = 64;
  4014b6:	682b      	ldr	r3, [r5, #0]
  4014b8:	eb09 03c3 	add.w	r3, r9, r3, lsl #3
  4014bc:	805a      	strh	r2, [r3, #2]
	events[*number_of_events].rhythm = current_rhythm;
  4014be:	682b      	ldr	r3, [r5, #0]
  4014c0:	eb09 09c3 	add.w	r9, r9, r3, lsl #3
  4014c4:	ed89 8a01 	vstr	s16, [r9, #4]
	(*number_of_events)++;
  4014c8:	682b      	ldr	r3, [r5, #0]
  4014ca:	3301      	adds	r3, #1
  4014cc:	602b      	str	r3, [r5, #0]
}
  4014ce:	b003      	add	sp, #12
  4014d0:	ecbd 8b02 	vpop	{d8}
  4014d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	else if (time_sig == THREE_FOUR)
  4014d8:	2b01      	cmp	r3, #1
  4014da:	d031      	beq.n	401540 <start_recording+0x184>
	else if (time_sig == TWO_FOUR)
  4014dc:	2b02      	cmp	r3, #2
		number_of_beats_in_a_measure = 6; 
  4014de:	4e29      	ldr	r6, [pc, #164]	; (401584 <start_recording+0x1c8>)
  4014e0:	bf18      	it	ne
  4014e2:	2306      	movne	r3, #6
  4014e4:	461a      	mov	r2, r3
  4014e6:	7033      	strb	r3, [r6, #0]
  4014e8:	e779      	b.n	4013de <start_recording+0x22>
			get_midi_note((float32_t *)&processBuffer[0], &notes[note_cnt & NOTE_MASK]);
  4014ea:	eb0b 0286 	add.w	r2, fp, r6, lsl #2
  4014ee:	6818      	ldr	r0, [r3, #0]
  4014f0:	9300      	str	r3, [sp, #0]
  4014f2:	4611      	mov	r1, r2
  4014f4:	9201      	str	r2, [sp, #4]
  4014f6:	4a33      	ldr	r2, [pc, #204]	; (4015c4 <start_recording+0x208>)
  4014f8:	4790      	blx	r2
					events[*number_of_events].velocity = 64;
  4014fa:	f04f 0c40 	mov.w	ip, #64	; 0x40
				if (notes[note_cnt & NOTE_MASK].note_number != notes[(note_cnt-1) & NOTE_MASK].note_number || notes[note_cnt & NOTE_MASK].velocity > 10.0f*notes[(note_cnt-1) & NOTE_MASK].velocity)
  4014fe:	1e72      	subs	r2, r6, #1
			if (note_cnt > 0)
  401500:	9b00      	ldr	r3, [sp, #0]
  401502:	b1ce      	cbz	r6, 401538 <start_recording+0x17c>
				if (notes[note_cnt & NOTE_MASK].note_number != notes[(note_cnt-1) & NOTE_MASK].note_number || notes[note_cnt & NOTE_MASK].velocity > 10.0f*notes[(note_cnt-1) & NOTE_MASK].velocity)
  401504:	f002 027f 	and.w	r2, r2, #127	; 0x7f
  401508:	f93b e026 	ldrsh.w	lr, [fp, r6, lsl #2]
  40150c:	f93b 0022 	ldrsh.w	r0, [fp, r2, lsl #2]
  401510:	4586      	cmp	lr, r0
  401512:	d019      	beq.n	401548 <start_recording+0x18c>
					events[*number_of_events].note_number = notes[(note_cnt-1) & NOTE_MASK].note_number;
  401514:	682a      	ldr	r2, [r5, #0]
  401516:	f829 0032 	strh.w	r0, [r9, r2, lsl #3]
					events[*number_of_events].velocity = 64;
  40151a:	682a      	ldr	r2, [r5, #0]
  40151c:	eb09 02c2 	add.w	r2, r9, r2, lsl #3
  401520:	f8a2 c002 	strh.w	ip, [r2, #2]
					events[*number_of_events].rhythm = current_rhythm;
  401524:	682a      	ldr	r2, [r5, #0]
  401526:	eb09 02c2 	add.w	r2, r9, r2, lsl #3
  40152a:	ed82 8a01 	vstr	s16, [r2, #4]
					current_rhythm = 0.25f;
  40152e:	eeb5 8a00 	vmov.f32	s16, #80	; 0x3e800000  0.250
					(*number_of_events)++;
  401532:	682a      	ldr	r2, [r5, #0]
  401534:	3201      	adds	r2, #1
  401536:	602a      	str	r2, [r5, #0]
			note_16_received = false;
  401538:	2200      	movs	r2, #0
			note_cnt++; 
  40153a:	3601      	adds	r6, #1
			note_16_received = false;
  40153c:	7022      	strb	r2, [r4, #0]
  40153e:	e7a5      	b.n	40148c <start_recording+0xd0>
		number_of_beats_in_a_measure = 3;
  401540:	4e10      	ldr	r6, [pc, #64]	; (401584 <start_recording+0x1c8>)
  401542:	2203      	movs	r2, #3
  401544:	7032      	strb	r2, [r6, #0]
  401546:	e74a      	b.n	4013de <start_recording+0x22>
				if (notes[note_cnt & NOTE_MASK].note_number != notes[(note_cnt-1) & NOTE_MASK].note_number || notes[note_cnt & NOTE_MASK].velocity > 10.0f*notes[(note_cnt-1) & NOTE_MASK].velocity)
  401548:	eb0b 0282 	add.w	r2, fp, r2, lsl #2
  40154c:	9901      	ldr	r1, [sp, #4]
  40154e:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
  401552:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
					current_rhythm += 0.25f;
  401556:	eeb5 6a00 	vmov.f32	s12, #80	; 0x3e800000  0.250
				if (notes[note_cnt & NOTE_MASK].note_number != notes[(note_cnt-1) & NOTE_MASK].note_number || notes[note_cnt & NOTE_MASK].velocity > 10.0f*notes[(note_cnt-1) & NOTE_MASK].velocity)
  40155a:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
  40155e:	ee07 2a90 	vmov	s15, r2
  401562:	ee06 1a90 	vmov	s13, r1
  401566:	eef8 7ae7 	vcvt.f32.s32	s15, s15
  40156a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
  40156e:	ee67 7a87 	vmul.f32	s15, s15, s14
  401572:	eef4 6ae7 	vcmpe.f32	s13, s15
  401576:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  40157a:	dccb      	bgt.n	401514 <start_recording+0x158>
					current_rhythm += 0.25f;
  40157c:	ee38 8a06 	vadd.f32	s16, s16, s12
  401580:	e7da      	b.n	401538 <start_recording+0x17c>
  401582:	bf00      	nop
  401584:	20409a18 	.word	0x20409a18
  401588:	20409a1b 	.word	0x20409a1b
  40158c:	20409814 	.word	0x20409814
  401590:	20409a19 	.word	0x20409a19
  401594:	20409a1c 	.word	0x20409a1c
  401598:	20409a1a 	.word	0x20409a1a
  40159c:	2040101c 	.word	0x2040101c
  4015a0:	400e1830 	.word	0x400e1830
  4015a4:	00401769 	.word	0x00401769
  4015a8:	00401751 	.word	0x00401751
  4015ac:	004017bd 	.word	0x004017bd
  4015b0:	e000e100 	.word	0xe000e100
  4015b4:	00401795 	.word	0x00401795
  4015b8:	20409816 	.word	0x20409816
  4015bc:	20400020 	.word	0x20400020
  4015c0:	004017a9 	.word	0x004017a9
  4015c4:	00400cc5 	.word	0x00400cc5
  4015c8:	20409815 	.word	0x20409815
  4015cc:	20409818 	.word	0x20409818

004015d0 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  4015d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
  4015d4:	b990      	cbnz	r0, 4015fc <_read+0x2c>
		return -1;
	}

	for (; len > 0; --len) {
  4015d6:	2a00      	cmp	r2, #0
  4015d8:	4690      	mov	r8, r2
  4015da:	dd0d      	ble.n	4015f8 <_read+0x28>
  4015dc:	460c      	mov	r4, r1
  4015de:	188f      	adds	r7, r1, r2
  4015e0:	4e08      	ldr	r6, [pc, #32]	; (401604 <_read+0x34>)
  4015e2:	4d09      	ldr	r5, [pc, #36]	; (401608 <_read+0x38>)
		ptr_get(stdio_base, ptr);
  4015e4:	4621      	mov	r1, r4
		ptr++;
  4015e6:	3401      	adds	r4, #1
		ptr_get(stdio_base, ptr);
  4015e8:	6830      	ldr	r0, [r6, #0]
  4015ea:	682b      	ldr	r3, [r5, #0]
  4015ec:	4798      	blx	r3
	for (; len > 0; --len) {
  4015ee:	42bc      	cmp	r4, r7
  4015f0:	d1f8      	bne.n	4015e4 <_read+0x14>
		nChars++;
	}
	return nChars;
}
  4015f2:	4640      	mov	r0, r8
  4015f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	for (; len > 0; --len) {
  4015f8:	4680      	mov	r8, r0
  4015fa:	e7fa      	b.n	4015f2 <_read+0x22>
		return -1;
  4015fc:	f04f 38ff 	mov.w	r8, #4294967295
  401600:	e7f7      	b.n	4015f2 <_read+0x22>
  401602:	bf00      	nop
  401604:	20442578 	.word	0x20442578
  401608:	20442570 	.word	0x20442570

0040160c <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  40160c:	3801      	subs	r0, #1
  40160e:	2802      	cmp	r0, #2
  401610:	d81e      	bhi.n	401650 <_write+0x44>
{
  401612:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401616:	4615      	mov	r5, r2
		return -1;
	}

	for (; len != 0; --len) {
  401618:	b1ba      	cbz	r2, 40164a <_write+0x3e>
  40161a:	460e      	mov	r6, r1
  40161c:	460c      	mov	r4, r1
  40161e:	f8df 803c 	ldr.w	r8, [pc, #60]	; 40165c <_write+0x50>
  401622:	4f0d      	ldr	r7, [pc, #52]	; (401658 <_write+0x4c>)
  401624:	e001      	b.n	40162a <_write+0x1e>
  401626:	3d01      	subs	r5, #1
  401628:	d00d      	beq.n	401646 <_write+0x3a>
		if (ptr_put(stdio_base, *ptr++) < 0) {
  40162a:	f814 1b01 	ldrb.w	r1, [r4], #1
  40162e:	f8d8 0000 	ldr.w	r0, [r8]
  401632:	683b      	ldr	r3, [r7, #0]
  401634:	4798      	blx	r3
  401636:	2800      	cmp	r0, #0
  401638:	eba4 0006 	sub.w	r0, r4, r6
  40163c:	daf3      	bge.n	401626 <_write+0x1a>
		return -1;
  40163e:	f04f 30ff 	mov.w	r0, #4294967295
  401642:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401646:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	for (; len != 0; --len) {
  40164a:	4610      	mov	r0, r2
			return -1;
		}
		++nChars;
	}
	return nChars;
}
  40164c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  401650:	f04f 30ff 	mov.w	r0, #4294967295
}
  401654:	4770      	bx	lr
  401656:	bf00      	nop
  401658:	20442574 	.word	0x20442574
  40165c:	20442578 	.word	0x20442578

00401660 <wm8904_write_register>:
 *
 * \param uc_register_address Register address to write
 * \param us_data Data to write.
 */
void wm8904_write_register(uint8_t uc_register_address, uint16_t us_data)
{
  401660:	b570      	push	{r4, r5, r6, lr}
  401662:	460b      	mov	r3, r1
  401664:	b086      	sub	sp, #24
	uint8_t uc_temp_data[2];
	twihs_packet_t packet;

	uc_temp_data[0] = (us_data & 0xff00) >> 8;
  401666:	0a0e      	lsrs	r6, r1, #8

	packet.addr[0]     = uc_register_address;
	packet.addr_length = 0x1;
	packet.buffer      = uc_temp_data;
	packet.length      = 0x2;
	packet.chip        = WM8904_SLAVE_ADDRESS;
  401668:	221a      	movs	r2, #26
	uc_temp_data[1] = us_data & 0xff;
  40166a:	f88d 3001 	strb.w	r3, [sp, #1]
	packet.addr_length = 0x1;
  40166e:	2501      	movs	r5, #1
	packet.length      = 0x2;
  401670:	2402      	movs	r4, #2

	twihs_master_write(WM8904_TWIHS, &packet);
  401672:	a901      	add	r1, sp, #4
  401674:	4b07      	ldr	r3, [pc, #28]	; (401694 <wm8904_write_register+0x34>)
	packet.addr[0]     = uc_register_address;
  401676:	f88d 0004 	strb.w	r0, [sp, #4]
	twihs_master_write(WM8904_TWIHS, &packet);
  40167a:	4807      	ldr	r0, [pc, #28]	; (401698 <wm8904_write_register+0x38>)
	uc_temp_data[0] = (us_data & 0xff00) >> 8;
  40167c:	f88d 6000 	strb.w	r6, [sp]
	packet.addr_length = 0x1;
  401680:	9502      	str	r5, [sp, #8]
	packet.buffer      = uc_temp_data;
  401682:	f8cd d00c 	str.w	sp, [sp, #12]
	packet.length      = 0x2;
  401686:	9404      	str	r4, [sp, #16]
	packet.chip        = WM8904_SLAVE_ADDRESS;
  401688:	f88d 2014 	strb.w	r2, [sp, #20]
	twihs_master_write(WM8904_TWIHS, &packet);
  40168c:	4798      	blx	r3
}
  40168e:	b006      	add	sp, #24
  401690:	bd70      	pop	{r4, r5, r6, pc}
  401692:	bf00      	nop
  401694:	00401a89 	.word	0x00401a89
  401698:	40018000 	.word	0x40018000

0040169c <wm8904_read_register>:
 *
 * \param uc_register_address Register address to write
 * \retun Register value.
 */
uint16_t wm8904_read_register(uint8_t uc_register_address)
{
  40169c:	b530      	push	{r4, r5, lr}
  40169e:	b087      	sub	sp, #28

	packet.addr[0]     = uc_register_address;
	packet.addr_length = 0x1;
	packet.buffer      = uc_temp_data;
	packet.length      = 0x2;
	packet.chip        = WM8904_SLAVE_ADDRESS;
  4016a0:	221a      	movs	r2, #26
	packet.addr_length = 0x1;
  4016a2:	2501      	movs	r5, #1
	packet.length      = 0x2;
  4016a4:	2402      	movs	r4, #2
	packet.addr[0]     = uc_register_address;
  4016a6:	f88d 0004 	strb.w	r0, [sp, #4]

	twihs_master_read(WM8904_TWIHS, &packet);
  4016aa:	a901      	add	r1, sp, #4
  4016ac:	4b08      	ldr	r3, [pc, #32]	; (4016d0 <wm8904_read_register+0x34>)
  4016ae:	4809      	ldr	r0, [pc, #36]	; (4016d4 <wm8904_read_register+0x38>)
	packet.addr_length = 0x1;
  4016b0:	9502      	str	r5, [sp, #8]
	packet.buffer      = uc_temp_data;
  4016b2:	f8cd d00c 	str.w	sp, [sp, #12]
	packet.length      = 0x2;
  4016b6:	9404      	str	r4, [sp, #16]
	packet.chip        = WM8904_SLAVE_ADDRESS;
  4016b8:	f88d 2014 	strb.w	r2, [sp, #20]
	twihs_master_read(WM8904_TWIHS, &packet);
  4016bc:	4798      	blx	r3
	us_data = (((uint16_t)uc_temp_data[0] << 8) & 0xff00) | uc_temp_data[1];
  4016be:	f89d 0000 	ldrb.w	r0, [sp]
  4016c2:	f89d 3001 	ldrb.w	r3, [sp, #1]

	return us_data;
}
  4016c6:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
  4016ca:	b007      	add	sp, #28
  4016cc:	bd30      	pop	{r4, r5, pc}
  4016ce:	bf00      	nop
  4016d0:	004019e9 	.word	0x004019e9
  4016d4:	40018000 	.word	0x40018000

004016d8 <wm8904_twi_init>:
 * \brief Initialize TWIHS connect to WM8904.
 *
 * \retun TWIHS_SUCCESS if initialization is complete, error code otherwise.
 */
uint32_t wm8904_twi_init(void)
{
  4016d8:	b510      	push	{r4, lr}
	pio_configure_pin(WM8904_TK_PIO, WM8904_TK_FLAGS);
  4016da:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
{
  4016de:	b084      	sub	sp, #16
	pio_configure_pin(WM8904_TK_PIO, WM8904_TK_FLAGS);
  4016e0:	4c15      	ldr	r4, [pc, #84]	; (401738 <wm8904_twi_init+0x60>)
  4016e2:	2021      	movs	r0, #33	; 0x21
  4016e4:	47a0      	blx	r4
	pio_configure_pin(WM8904_TF_PIO, WM8904_TF_FLAGS);
  4016e6:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  4016ea:	2020      	movs	r0, #32
  4016ec:	47a0      	blx	r4
	pio_configure_pin(WM8904_TD_PIO, WM8904_TD_FLAGS);
  4016ee:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4016f2:	207a      	movs	r0, #122	; 0x7a
  4016f4:	47a0      	blx	r4
	pio_configure_pin(WM8904_RK_PIO, WM8904_RK_FLAGS);
  4016f6:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4016fa:	2016      	movs	r0, #22
  4016fc:	47a0      	blx	r4
	pio_configure_pin(WM8904_RF_PIO, WM8904_RF_FLAGS);
  4016fe:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  401702:	2078      	movs	r0, #120	; 0x78
  401704:	47a0      	blx	r4
	pio_configure_pin(WM8904_RD_PIO, WM8904_RD_FLAGS);
  401706:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  40170a:	200a      	movs	r0, #10
  40170c:	47a0      	blx	r4
	pio_configure_pin(WM8904_PCK2_PIO, WM8904_PCK2_FLAGS);
  40170e:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  401712:	2012      	movs	r0, #18
  401714:	47a0      	blx	r4

static inline uint32_t twihs_master_setup(twihs_master_t p_twihs,
		twihs_master_options_t *p_opt)
{
	p_opt->master_clk = sysclk_get_peripheral_hz();
	p_opt->smbus      = 0;
  401716:	2200      	movs	r2, #0
	p_opt->master_clk = sysclk_get_peripheral_hz();
  401718:	4908      	ldr	r1, [pc, #32]	; (40173c <wm8904_twi_init+0x64>)
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  40171a:	2013      	movs	r0, #19

	twihs_options_t opt;
	opt.master_clk = sysclk_get_cpu_hz();
	opt.speed = WM8904_TWIHS_CLK;
  40171c:	4c08      	ldr	r4, [pc, #32]	; (401740 <wm8904_twi_init+0x68>)
  40171e:	4b09      	ldr	r3, [pc, #36]	; (401744 <wm8904_twi_init+0x6c>)
  401720:	9101      	str	r1, [sp, #4]
	p_opt->smbus      = 0;
  401722:	f88d 200d 	strb.w	r2, [sp, #13]
  401726:	9402      	str	r4, [sp, #8]
  401728:	4798      	blx	r3
#endif		
	} else {
		// Do Nothing
	}
#endif
	return (twihs_master_init(p_twihs, p_opt));
  40172a:	a901      	add	r1, sp, #4
  40172c:	4b06      	ldr	r3, [pc, #24]	; (401748 <wm8904_twi_init+0x70>)
  40172e:	4807      	ldr	r0, [pc, #28]	; (40174c <wm8904_twi_init+0x74>)
  401730:	4798      	blx	r3
	return twihs_master_setup(WM8904_TWIHS, &opt);
}
  401732:	b004      	add	sp, #16
  401734:	bd10      	pop	{r4, pc}
  401736:	bf00      	nop
  401738:	00401fb5 	.word	0x00401fb5
  40173c:	08f0d180 	.word	0x08f0d180
  401740:	00061a80 	.word	0x00061a80
  401744:	004022a9 	.word	0x004022a9
  401748:	004019b5 	.word	0x004019b5
  40174c:	40018000 	.word	0x40018000

00401750 <rtt_init>:
 * \return 0 if successful.
 */
uint32_t rtt_init(Rtt *p_rtt, uint16_t us_prescaler)
{
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	p_rtt->RTT_MR = (us_prescaler | RTT_MR_RTTRST | g_wobits_in_rtt_mr);
  401750:	4b04      	ldr	r3, [pc, #16]	; (401764 <rtt_init+0x14>)
{
  401752:	4602      	mov	r2, r0
#else
	p_rtt->RTT_MR = (us_prescaler | RTT_MR_RTTRST);
#endif
	return 0;
}
  401754:	2000      	movs	r0, #0
	p_rtt->RTT_MR = (us_prescaler | RTT_MR_RTTRST | g_wobits_in_rtt_mr);
  401756:	681b      	ldr	r3, [r3, #0]
  401758:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
  40175c:	4319      	orrs	r1, r3
  40175e:	6011      	str	r1, [r2, #0]
}
  401760:	4770      	bx	lr
  401762:	bf00      	nop
  401764:	20409a20 	.word	0x20409a20

00401768 <rtt_sel_source>:
 * \param p_rtt Pointer to an RTT instance.
 * \param is_rtc_sel RTC 1Hz Clock Selection.
 */
void rtt_sel_source(Rtt *p_rtt, bool is_rtc_sel)
{
	if(is_rtc_sel) {
  401768:	b941      	cbnz	r1, 40177c <rtt_sel_source+0x14>
		g_wobits_in_rtt_mr |= RTT_MR_RTC1HZ;
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
	} else {
		g_wobits_in_rtt_mr &= ~RTT_MR_RTC1HZ;
  40176a:	4909      	ldr	r1, [pc, #36]	; (401790 <rtt_sel_source+0x28>)
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
  40176c:	6802      	ldr	r2, [r0, #0]
		g_wobits_in_rtt_mr &= ~RTT_MR_RTC1HZ;
  40176e:	680b      	ldr	r3, [r1, #0]
  401770:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
  401774:	431a      	orrs	r2, r3
		g_wobits_in_rtt_mr &= ~RTT_MR_RTC1HZ;
  401776:	600b      	str	r3, [r1, #0]
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
  401778:	6002      	str	r2, [r0, #0]
  40177a:	4770      	bx	lr
		g_wobits_in_rtt_mr |= RTT_MR_RTC1HZ;
  40177c:	4904      	ldr	r1, [pc, #16]	; (401790 <rtt_sel_source+0x28>)
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
  40177e:	6802      	ldr	r2, [r0, #0]
		g_wobits_in_rtt_mr |= RTT_MR_RTC1HZ;
  401780:	680b      	ldr	r3, [r1, #0]
  401782:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
  401786:	431a      	orrs	r2, r3
		g_wobits_in_rtt_mr |= RTT_MR_RTC1HZ;
  401788:	600b      	str	r3, [r1, #0]
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
  40178a:	6002      	str	r2, [r0, #0]
  40178c:	4770      	bx	lr
  40178e:	bf00      	nop
  401790:	20409a20 	.word	0x20409a20

00401794 <rtt_enable_interrupt>:
	uint32_t temp;

	temp = p_rtt->RTT_MR;
	temp |= ul_sources;
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	temp |= g_wobits_in_rtt_mr;
  401794:	4b03      	ldr	r3, [pc, #12]	; (4017a4 <rtt_enable_interrupt+0x10>)
	temp = p_rtt->RTT_MR;
  401796:	6802      	ldr	r2, [r0, #0]
	temp |= g_wobits_in_rtt_mr;
  401798:	681b      	ldr	r3, [r3, #0]
  40179a:	4319      	orrs	r1, r3
  40179c:	4311      	orrs	r1, r2
#endif
	p_rtt->RTT_MR = temp;
  40179e:	6001      	str	r1, [r0, #0]
  4017a0:	4770      	bx	lr
  4017a2:	bf00      	nop
  4017a4:	20409a20 	.word	0x20409a20

004017a8 <rtt_disable_interrupt>:
 */
void rtt_disable_interrupt(Rtt *p_rtt, uint32_t ul_sources)
{
	uint32_t temp = 0;

	temp = p_rtt->RTT_MR;
  4017a8:	6803      	ldr	r3, [r0, #0]
	temp &= (~ul_sources);
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	temp |= g_wobits_in_rtt_mr;
  4017aa:	4a03      	ldr	r2, [pc, #12]	; (4017b8 <rtt_disable_interrupt+0x10>)
	temp &= (~ul_sources);
  4017ac:	ea23 0101 	bic.w	r1, r3, r1
	temp |= g_wobits_in_rtt_mr;
  4017b0:	6812      	ldr	r2, [r2, #0]
  4017b2:	4311      	orrs	r1, r2
#endif
	p_rtt->RTT_MR = temp;
  4017b4:	6001      	str	r1, [r0, #0]
  4017b6:	4770      	bx	lr
  4017b8:	20409a20 	.word	0x20409a20

004017bc <rtt_read_timer_value>:
 *
 * \return The current Real-time Timer value.
 */
uint32_t rtt_read_timer_value(Rtt *p_rtt)
{
	uint32_t rtt_val = p_rtt->RTT_VR;
  4017bc:	6882      	ldr	r2, [r0, #8]

	while (rtt_val != p_rtt->RTT_VR) {
  4017be:	6883      	ldr	r3, [r0, #8]
  4017c0:	429a      	cmp	r2, r3
  4017c2:	d003      	beq.n	4017cc <rtt_read_timer_value+0x10>
		rtt_val = p_rtt->RTT_VR;
  4017c4:	6882      	ldr	r2, [r0, #8]
	while (rtt_val != p_rtt->RTT_VR) {
  4017c6:	6883      	ldr	r3, [r0, #8]
  4017c8:	4293      	cmp	r3, r2
  4017ca:	d1fb      	bne.n	4017c4 <rtt_read_timer_value+0x8>
	}

	return rtt_val;
}
  4017cc:	4618      	mov	r0, r3
  4017ce:	4770      	bx	lr

004017d0 <rtt_get_status>:
 *
 * \return The Real-time Timer status.
 */
uint32_t rtt_get_status(Rtt *p_rtt)
{
	return p_rtt->RTT_SR;
  4017d0:	68c0      	ldr	r0, [r0, #12]
}
  4017d2:	4770      	bx	lr

004017d4 <ssc_reset>:
 * \param p_ssc Pointer to an SSC instance.
 */
void ssc_reset(Ssc *p_ssc)
{
	p_ssc->SSC_CR = SSC_CR_SWRST;
	p_ssc->SSC_CMR = 0;
  4017d4:	2300      	movs	r3, #0
	p_ssc->SSC_CR = SSC_CR_SWRST;
  4017d6:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4017da:	6002      	str	r2, [r0, #0]
	p_ssc->SSC_CMR = 0;
  4017dc:	6043      	str	r3, [r0, #4]
	p_ssc->SSC_RCMR = 0;
  4017de:	6103      	str	r3, [r0, #16]
	p_ssc->SSC_RFMR = 0;
  4017e0:	6143      	str	r3, [r0, #20]
	p_ssc->SSC_TCMR = 0;
  4017e2:	6183      	str	r3, [r0, #24]
	p_ssc->SSC_TFMR = 0;
  4017e4:	61c3      	str	r3, [r0, #28]
  4017e6:	4770      	bx	lr

004017e8 <ssc_enable_rx>:
 *
 * \param p_ssc Pointer to an SSC instance.
 */
void ssc_enable_rx(Ssc *p_ssc)
{
	p_ssc->SSC_CR = SSC_CR_RXEN;
  4017e8:	2301      	movs	r3, #1
  4017ea:	6003      	str	r3, [r0, #0]
  4017ec:	4770      	bx	lr
  4017ee:	bf00      	nop

004017f0 <ssc_disable_rx>:
 *
 * \param p_ssc Pointer to an SSC instance.
 */
void ssc_disable_rx(Ssc *p_ssc)
{
	p_ssc->SSC_CR = SSC_CR_RXDIS;
  4017f0:	2302      	movs	r3, #2
  4017f2:	6003      	str	r3, [r0, #0]
  4017f4:	4770      	bx	lr
  4017f6:	bf00      	nop

004017f8 <ssc_enable_tx>:
 *
 * \param p_ssc Pointer to an SSC instance.
 */
void ssc_enable_tx(Ssc *p_ssc)
{
	p_ssc->SSC_CR = SSC_CR_TXEN;
  4017f8:	f44f 7380 	mov.w	r3, #256	; 0x100
  4017fc:	6003      	str	r3, [r0, #0]
  4017fe:	4770      	bx	lr

00401800 <ssc_disable_tx>:
 *
 * \param p_ssc Pointer to an SSC instance.
 */
void ssc_disable_tx(Ssc *p_ssc)
{
	p_ssc->SSC_CR = SSC_CR_TXDIS;
  401800:	f44f 7300 	mov.w	r3, #512	; 0x200
  401804:	6003      	str	r3, [r0, #0]
  401806:	4770      	bx	lr

00401808 <ssc_set_receiver>:
 * \param p_rx_clk_opt Pointer to the receiver clock configuration structure.
 * \param p_rx_data_frame Pointer to the receiver data frame configuration structure.
 */
void ssc_set_receiver(Ssc *p_ssc, clock_opt_t *p_rx_clk_opt,
		data_frame_opt_t *p_rx_data_frame)
{
  401808:	b4f0      	push	{r4, r5, r6, r7}
	if (p_rx_clk_opt == NULL) {
  40180a:	2900      	cmp	r1, #0
  40180c:	d02f      	beq.n	40186e <ssc_set_receiver+0x66>
		p_ssc->SSC_RCMR = 0;
	} else {
		p_ssc->SSC_RCMR |= p_rx_clk_opt->ul_cks |
  40180e:	6904      	ldr	r4, [r0, #16]
  401810:	68cf      	ldr	r7, [r1, #12]
  401812:	698e      	ldr	r6, [r1, #24]
  401814:	e891 0028 	ldmia.w	r1, {r3, r5}
  401818:	432b      	orrs	r3, r5
  40181a:	688d      	ldr	r5, [r1, #8]
  40181c:	4323      	orrs	r3, r4
				p_rx_clk_opt->ul_cko | p_rx_clk_opt->ul_cki |
				p_rx_clk_opt->ul_ckg |
				p_rx_clk_opt->ul_start_sel |
				SSC_RCMR_PERIOD(p_rx_clk_opt->ul_period) |
				SSC_RCMR_STTDLY(p_rx_clk_opt->ul_sttdly);
  40181e:	694c      	ldr	r4, [r1, #20]
		p_ssc->SSC_RCMR |= p_rx_clk_opt->ul_cks |
  401820:	432b      	orrs	r3, r5
				SSC_RCMR_PERIOD(p_rx_clk_opt->ul_period) |
  401822:	690d      	ldr	r5, [r1, #16]
				SSC_RCMR_STTDLY(p_rx_clk_opt->ul_sttdly);
  401824:	0421      	lsls	r1, r4, #16
		p_ssc->SSC_RCMR |= p_rx_clk_opt->ul_cks |
  401826:	433b      	orrs	r3, r7
				SSC_RCMR_STTDLY(p_rx_clk_opt->ul_sttdly);
  401828:	f401 017f 	and.w	r1, r1, #16711680	; 0xff0000
		p_ssc->SSC_RCMR |= p_rx_clk_opt->ul_cks |
  40182c:	4333      	orrs	r3, r6
  40182e:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
  401832:	430b      	orrs	r3, r1
  401834:	6103      	str	r3, [r0, #16]
	}

	if (p_rx_data_frame == NULL) {
  401836:	b1ea      	cbz	r2, 401874 <ssc_set_receiver+0x6c>
		p_ssc->SSC_RFMR = 0;
	} else {
		p_ssc->SSC_RFMR |= SSC_RFMR_DATLEN(p_rx_data_frame->ul_datlen) |
  401838:	6954      	ldr	r4, [r2, #20]
  40183a:	6853      	ldr	r3, [r2, #4]
  40183c:	6991      	ldr	r1, [r2, #24]
  40183e:	4323      	orrs	r3, r4
  401840:	6946      	ldr	r6, [r0, #20]
  401842:	6814      	ldr	r4, [r2, #0]
  401844:	430b      	orrs	r3, r1
				p_rx_data_frame->ul_msbf |
				SSC_RFMR_DATNB(p_rx_data_frame->ul_datnb) |
  401846:	6891      	ldr	r1, [r2, #8]
		p_ssc->SSC_RFMR |= SSC_RFMR_DATLEN(p_rx_data_frame->ul_datlen) |
  401848:	f004 041f 	and.w	r4, r4, #31
				SSC_RFMR_FSLEN(p_rx_data_frame->ul_fslen) |
				SSC_RFMR_FSLEN_EXT(p_rx_data_frame->ul_fslen_ext) |
  40184c:	6915      	ldr	r5, [r2, #16]
		p_ssc->SSC_RFMR |= SSC_RFMR_DATLEN(p_rx_data_frame->ul_datlen) |
  40184e:	4333      	orrs	r3, r6
				SSC_RFMR_FSLEN(p_rx_data_frame->ul_fslen) |
  401850:	68d2      	ldr	r2, [r2, #12]
				SSC_RFMR_DATNB(p_rx_data_frame->ul_datnb) |
  401852:	0209      	lsls	r1, r1, #8
		p_ssc->SSC_RFMR |= SSC_RFMR_DATLEN(p_rx_data_frame->ul_datlen) |
  401854:	4323      	orrs	r3, r4
				SSC_RFMR_FSLEN(p_rx_data_frame->ul_fslen) |
  401856:	0412      	lsls	r2, r2, #16
				SSC_RFMR_DATNB(p_rx_data_frame->ul_datnb) |
  401858:	f401 6170 	and.w	r1, r1, #3840	; 0xf00
		p_ssc->SSC_RFMR |= SSC_RFMR_DATLEN(p_rx_data_frame->ul_datlen) |
  40185c:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
				SSC_RFMR_FSLEN(p_rx_data_frame->ul_fslen) |
  401860:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
		p_ssc->SSC_RFMR |= SSC_RFMR_DATLEN(p_rx_data_frame->ul_datlen) |
  401864:	430b      	orrs	r3, r1
  401866:	4313      	orrs	r3, r2
				p_rx_data_frame->ul_fsos |
				p_rx_data_frame->ul_fsedge;
	}
}
  401868:	bcf0      	pop	{r4, r5, r6, r7}
		p_ssc->SSC_RFMR |= SSC_RFMR_DATLEN(p_rx_data_frame->ul_datlen) |
  40186a:	6143      	str	r3, [r0, #20]
}
  40186c:	4770      	bx	lr
		p_ssc->SSC_RCMR = 0;
  40186e:	6101      	str	r1, [r0, #16]
	if (p_rx_data_frame == NULL) {
  401870:	2a00      	cmp	r2, #0
  401872:	d1e1      	bne.n	401838 <ssc_set_receiver+0x30>
		p_ssc->SSC_RFMR = 0;
  401874:	6142      	str	r2, [r0, #20]
}
  401876:	bcf0      	pop	{r4, r5, r6, r7}
  401878:	4770      	bx	lr
  40187a:	bf00      	nop

0040187c <ssc_set_transmitter>:
 * \param p_tx_clk_opt Pointer to the transmitter clock configuration structure.
 * \param p_tx_data_frame Pointer to the transmitter data frame configuration structure.
 */
void ssc_set_transmitter(Ssc *p_ssc, clock_opt_t *p_tx_clk_opt,
		data_frame_opt_t *p_tx_data_frame)
{
  40187c:	b4f0      	push	{r4, r5, r6, r7}
	if (p_tx_clk_opt == NULL) {
  40187e:	2900      	cmp	r1, #0
  401880:	d02f      	beq.n	4018e2 <ssc_set_transmitter+0x66>
		p_ssc->SSC_TCMR = 0;
	} else {
		p_ssc->SSC_TCMR |= p_tx_clk_opt->ul_cks |
  401882:	6984      	ldr	r4, [r0, #24]
  401884:	68cf      	ldr	r7, [r1, #12]
  401886:	698e      	ldr	r6, [r1, #24]
  401888:	e891 0028 	ldmia.w	r1, {r3, r5}
  40188c:	432b      	orrs	r3, r5
  40188e:	688d      	ldr	r5, [r1, #8]
  401890:	4323      	orrs	r3, r4
				p_tx_clk_opt->ul_cko | p_tx_clk_opt->ul_cki |
				p_tx_clk_opt->ul_ckg |
				p_tx_clk_opt->ul_start_sel |
				SSC_TCMR_PERIOD(p_tx_clk_opt->ul_period) |
				SSC_TCMR_STTDLY(p_tx_clk_opt->ul_sttdly);
  401892:	694c      	ldr	r4, [r1, #20]
		p_ssc->SSC_TCMR |= p_tx_clk_opt->ul_cks |
  401894:	432b      	orrs	r3, r5
				SSC_TCMR_PERIOD(p_tx_clk_opt->ul_period) |
  401896:	690d      	ldr	r5, [r1, #16]
				SSC_TCMR_STTDLY(p_tx_clk_opt->ul_sttdly);
  401898:	0421      	lsls	r1, r4, #16
		p_ssc->SSC_TCMR |= p_tx_clk_opt->ul_cks |
  40189a:	433b      	orrs	r3, r7
				SSC_TCMR_STTDLY(p_tx_clk_opt->ul_sttdly);
  40189c:	f401 017f 	and.w	r1, r1, #16711680	; 0xff0000
		p_ssc->SSC_TCMR |= p_tx_clk_opt->ul_cks |
  4018a0:	4333      	orrs	r3, r6
  4018a2:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
  4018a6:	430b      	orrs	r3, r1
  4018a8:	6183      	str	r3, [r0, #24]
	}

	if (p_tx_data_frame == NULL) {
  4018aa:	b1ea      	cbz	r2, 4018e8 <ssc_set_transmitter+0x6c>
		p_ssc->SSC_TFMR = 0;
	} else {
		p_ssc->SSC_TFMR |= SSC_RFMR_DATLEN(p_tx_data_frame->ul_datlen) |
  4018ac:	6954      	ldr	r4, [r2, #20]
  4018ae:	6853      	ldr	r3, [r2, #4]
  4018b0:	6991      	ldr	r1, [r2, #24]
  4018b2:	4323      	orrs	r3, r4
  4018b4:	69c6      	ldr	r6, [r0, #28]
  4018b6:	6814      	ldr	r4, [r2, #0]
  4018b8:	430b      	orrs	r3, r1
				p_tx_data_frame->ul_msbf |
				SSC_TFMR_DATNB(p_tx_data_frame->ul_datnb) |
  4018ba:	6891      	ldr	r1, [r2, #8]
		p_ssc->SSC_TFMR |= SSC_RFMR_DATLEN(p_tx_data_frame->ul_datlen) |
  4018bc:	f004 041f 	and.w	r4, r4, #31
				SSC_TFMR_FSLEN(p_tx_data_frame->ul_fslen) |
				SSC_TFMR_FSLEN_EXT(p_tx_data_frame->ul_fslen_ext) |
  4018c0:	6915      	ldr	r5, [r2, #16]
		p_ssc->SSC_TFMR |= SSC_RFMR_DATLEN(p_tx_data_frame->ul_datlen) |
  4018c2:	4333      	orrs	r3, r6
				SSC_TFMR_FSLEN(p_tx_data_frame->ul_fslen) |
  4018c4:	68d2      	ldr	r2, [r2, #12]
				SSC_TFMR_DATNB(p_tx_data_frame->ul_datnb) |
  4018c6:	0209      	lsls	r1, r1, #8
		p_ssc->SSC_TFMR |= SSC_RFMR_DATLEN(p_tx_data_frame->ul_datlen) |
  4018c8:	4323      	orrs	r3, r4
				SSC_TFMR_FSLEN(p_tx_data_frame->ul_fslen) |
  4018ca:	0412      	lsls	r2, r2, #16
				SSC_TFMR_DATNB(p_tx_data_frame->ul_datnb) |
  4018cc:	f401 6170 	and.w	r1, r1, #3840	; 0xf00
		p_ssc->SSC_TFMR |= SSC_RFMR_DATLEN(p_tx_data_frame->ul_datlen) |
  4018d0:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
				SSC_TFMR_FSLEN(p_tx_data_frame->ul_fslen) |
  4018d4:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
		p_ssc->SSC_TFMR |= SSC_RFMR_DATLEN(p_tx_data_frame->ul_datlen) |
  4018d8:	430b      	orrs	r3, r1
  4018da:	4313      	orrs	r3, r2
				p_tx_data_frame->ul_fsos |
				p_tx_data_frame->ul_fsedge;
	}
}
  4018dc:	bcf0      	pop	{r4, r5, r6, r7}
		p_ssc->SSC_TFMR |= SSC_RFMR_DATLEN(p_tx_data_frame->ul_datlen) |
  4018de:	61c3      	str	r3, [r0, #28]
}
  4018e0:	4770      	bx	lr
		p_ssc->SSC_TCMR = 0;
  4018e2:	6181      	str	r1, [r0, #24]
	if (p_tx_data_frame == NULL) {
  4018e4:	2a00      	cmp	r2, #0
  4018e6:	d1e1      	bne.n	4018ac <ssc_set_transmitter+0x30>
		p_ssc->SSC_TFMR = 0;
  4018e8:	61c2      	str	r2, [r0, #28]
}
  4018ea:	bcf0      	pop	{r4, r5, r6, r7}
  4018ec:	4770      	bx	lr
  4018ee:	bf00      	nop

004018f0 <ssc_disable_interrupt>:
 * \param p_ssc Pointer to an SSC instance.
 * \param ul_sources Interrupts to be enabled.
 */
void ssc_disable_interrupt(Ssc *p_ssc, uint32_t ul_sources)
{
	p_ssc->SSC_IDR = ul_sources;
  4018f0:	6481      	str	r1, [r0, #72]	; 0x48
  4018f2:	4770      	bx	lr

004018f4 <twihs_set_speed>:
	uint32_t ckdiv = 0;
	uint32_t c_lh_div;
	uint32_t cldiv, chdiv;

	/* High-Speed can be only used in slave mode, 400k is the max speed allowed for master */
	if (ul_speed > I2C_FAST_MODE_SPEED) {
  4018f4:	4b2c      	ldr	r3, [pc, #176]	; (4019a8 <twihs_set_speed+0xb4>)
  4018f6:	4299      	cmp	r1, r3
{
  4018f8:	b430      	push	{r4, r5}
	if (ul_speed > I2C_FAST_MODE_SPEED) {
  4018fa:	d84d      	bhi.n	401998 <twihs_set_speed+0xa4>
		return FAIL;
	}

	/* Low level time not less than 1.3us of I2C Fast Mode. */
	if (ul_speed > LOW_LEVEL_TIME_LIMIT) {
  4018fc:	f5a3 537a 	sub.w	r3, r3, #16000	; 0x3e80
  401900:	4299      	cmp	r1, r3
  401902:	d92e      	bls.n	401962 <twihs_set_speed+0x6e>
		/* Low level of time fixed for 1.3us. */
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  401904:	4b29      	ldr	r3, [pc, #164]	; (4019ac <twihs_set_speed+0xb8>)
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  401906:	4c2a      	ldr	r4, [pc, #168]	; (4019b0 <twihs_set_speed+0xbc>)
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  401908:	440b      	add	r3, r1
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  40190a:	fba4 1402 	umull	r1, r4, r4, r2
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  40190e:	009b      	lsls	r3, r3, #2
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  401910:	0ba4      	lsrs	r4, r4, #14
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  401912:	fbb2 f2f3 	udiv	r2, r2, r3
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  401916:	3c03      	subs	r4, #3
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  401918:	3a03      	subs	r2, #3
		
		/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((cldiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  40191a:	2cff      	cmp	r4, #255	; 0xff
  40191c:	d940      	bls.n	4019a0 <twihs_set_speed+0xac>
  40191e:	2100      	movs	r1, #0
  401920:	e000      	b.n	401924 <twihs_set_speed+0x30>
  401922:	b13b      	cbz	r3, 401934 <twihs_set_speed+0x40>
			/* Increase clock divider */
			ckdiv++;
  401924:	3101      	adds	r1, #1
			/* Divide cldiv value */
			cldiv /= TWIHS_CLK_DIVIDER;
  401926:	0864      	lsrs	r4, r4, #1
		while ((cldiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  401928:	2906      	cmp	r1, #6
  40192a:	bf8c      	ite	hi
  40192c:	2300      	movhi	r3, #0
  40192e:	2301      	movls	r3, #1
  401930:	2cff      	cmp	r4, #255	; 0xff
  401932:	d8f6      	bhi.n	401922 <twihs_set_speed+0x2e>
		}
		/* chdiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((chdiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  401934:	2aff      	cmp	r2, #255	; 0xff
  401936:	d907      	bls.n	401948 <twihs_set_speed+0x54>
  401938:	b913      	cbnz	r3, 401940 <twihs_set_speed+0x4c>
  40193a:	e005      	b.n	401948 <twihs_set_speed+0x54>
  40193c:	2906      	cmp	r1, #6
  40193e:	d803      	bhi.n	401948 <twihs_set_speed+0x54>
			/* Increase clock divider */
			ckdiv++;
			/* Divide cldiv value */
			chdiv /= TWIHS_CLK_DIVIDER;
  401940:	0852      	lsrs	r2, r2, #1
			ckdiv++;
  401942:	3101      	adds	r1, #1
		while ((chdiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  401944:	2aff      	cmp	r2, #255	; 0xff
  401946:	d8f9      	bhi.n	40193c <twihs_set_speed+0x48>
		}

		/* set clock waveform generator register */
		p_twihs->TWIHS_CWGR =
				TWIHS_CWGR_CLDIV(cldiv) | TWIHS_CWGR_CHDIV(chdiv) |
  401948:	0213      	lsls	r3, r2, #8
		p_twihs->TWIHS_CWGR =
  40194a:	2500      	movs	r5, #0
				TWIHS_CWGR_CKDIV(ckdiv);
  40194c:	0409      	lsls	r1, r1, #16
				TWIHS_CWGR_CLDIV(cldiv) | TWIHS_CWGR_CHDIV(chdiv) |
  40194e:	b29b      	uxth	r3, r3
				TWIHS_CWGR_CKDIV(ckdiv);
  401950:	f401 21e0 	and.w	r1, r1, #458752	; 0x70000
				TWIHS_CWGR_CLDIV(cldiv) | TWIHS_CWGR_CHDIV(chdiv) |
  401954:	b2e4      	uxtb	r4, r4
  401956:	430b      	orrs	r3, r1
  401958:	4323      	orrs	r3, r4
		p_twihs->TWIHS_CWGR =
  40195a:	6103      	str	r3, [r0, #16]
				TWIHS_CWGR_CLDIV(c_lh_div) | TWIHS_CWGR_CHDIV(c_lh_div) |
				TWIHS_CWGR_CKDIV(ckdiv);
	}

	return PASS;
}
  40195c:	4628      	mov	r0, r5
  40195e:	bc30      	pop	{r4, r5}
  401960:	4770      	bx	lr
		c_lh_div = ul_mck / (ul_speed * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  401962:	0049      	lsls	r1, r1, #1
		while ((c_lh_div > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  401964:	2300      	movs	r3, #0
		c_lh_div = ul_mck / (ul_speed * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  401966:	fbb2 f2f1 	udiv	r2, r2, r1
  40196a:	3a03      	subs	r2, #3
		while ((c_lh_div > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  40196c:	2aff      	cmp	r2, #255	; 0xff
  40196e:	d802      	bhi.n	401976 <twihs_set_speed+0x82>
  401970:	e008      	b.n	401984 <twihs_set_speed+0x90>
  401972:	2b06      	cmp	r3, #6
  401974:	d803      	bhi.n	40197e <twihs_set_speed+0x8a>
			c_lh_div /= TWIHS_CLK_DIVIDER;
  401976:	0852      	lsrs	r2, r2, #1
			ckdiv++;
  401978:	3301      	adds	r3, #1
		while ((c_lh_div > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  40197a:	2aff      	cmp	r2, #255	; 0xff
  40197c:	d8f9      	bhi.n	401972 <twihs_set_speed+0x7e>
  40197e:	041b      	lsls	r3, r3, #16
  401980:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
				TWIHS_CWGR_CLDIV(c_lh_div) | TWIHS_CWGR_CHDIV(c_lh_div) |
  401984:	0211      	lsls	r1, r2, #8
	return PASS;
  401986:	2500      	movs	r5, #0
				TWIHS_CWGR_CLDIV(c_lh_div) | TWIHS_CWGR_CHDIV(c_lh_div) |
  401988:	b2d2      	uxtb	r2, r2
  40198a:	b289      	uxth	r1, r1
  40198c:	431a      	orrs	r2, r3
  40198e:	430a      	orrs	r2, r1
		p_twihs->TWIHS_CWGR =
  401990:	6102      	str	r2, [r0, #16]
}
  401992:	4628      	mov	r0, r5
  401994:	bc30      	pop	{r4, r5}
  401996:	4770      	bx	lr
		return FAIL;
  401998:	2501      	movs	r5, #1
}
  40199a:	4628      	mov	r0, r5
  40199c:	bc30      	pop	{r4, r5}
  40199e:	4770      	bx	lr
		while ((cldiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  4019a0:	2301      	movs	r3, #1
	uint32_t ckdiv = 0;
  4019a2:	2100      	movs	r1, #0
  4019a4:	e7c6      	b.n	401934 <twihs_set_speed+0x40>
  4019a6:	bf00      	nop
  4019a8:	00061a80 	.word	0x00061a80
  4019ac:	3ffd1200 	.word	0x3ffd1200
  4019b0:	057619f1 	.word	0x057619f1

004019b4 <twihs_master_init>:
{
  4019b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	p_twihs->TWIHS_CR = TWIHS_CR_MSEN;
  4019b6:	2204      	movs	r2, #4
	p_twihs->TWIHS_IDR = ~0UL;
  4019b8:	f04f 37ff 	mov.w	r7, #4294967295
 * \param p_twihs Pointer to a TWIHS instance.
 */
void twihs_reset(Twihs *p_twihs)
{
	/* Set SWRST bit to reset TWIHS peripheral */
	p_twihs->TWIHS_CR = TWIHS_CR_SWRST;
  4019bc:	2480      	movs	r4, #128	; 0x80
	p_twihs->TWIHS_CR = TWIHS_CR_MSDIS;
  4019be:	2608      	movs	r6, #8
	p_twihs->TWIHS_CR = TWIHS_CR_SVDIS;
  4019c0:	2520      	movs	r5, #32
	p_twihs->TWIHS_IDR = ~0UL;
  4019c2:	6287      	str	r7, [r0, #40]	; 0x28
	p_twihs->TWIHS_SR;
  4019c4:	6a07      	ldr	r7, [r0, #32]
	p_twihs->TWIHS_CR = TWIHS_CR_SWRST;
  4019c6:	6004      	str	r4, [r0, #0]
	if (twihs_set_speed(p_twihs, p_opt->speed, p_opt->master_clk) == FAIL) {
  4019c8:	4c06      	ldr	r4, [pc, #24]	; (4019e4 <twihs_master_init+0x30>)
	p_twihs->TWIHS_RHR;
  4019ca:	6b07      	ldr	r7, [r0, #48]	; 0x30
	p_twihs->TWIHS_CR = TWIHS_CR_MSDIS;
  4019cc:	6006      	str	r6, [r0, #0]
	p_twihs->TWIHS_CR = TWIHS_CR_SVDIS;
  4019ce:	6005      	str	r5, [r0, #0]
	p_twihs->TWIHS_CR = TWIHS_CR_MSEN;
  4019d0:	6002      	str	r2, [r0, #0]
	if (twihs_set_speed(p_twihs, p_opt->speed, p_opt->master_clk) == FAIL) {
  4019d2:	680a      	ldr	r2, [r1, #0]
  4019d4:	6849      	ldr	r1, [r1, #4]
  4019d6:	47a0      	blx	r4
}
  4019d8:	f1a0 0001 	sub.w	r0, r0, #1
  4019dc:	fab0 f080 	clz	r0, r0
  4019e0:	0940      	lsrs	r0, r0, #5
  4019e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4019e4:	004018f5 	.word	0x004018f5

004019e8 <twihs_master_read>:
	uint32_t status, cnt = p_packet->length;
  4019e8:	68ca      	ldr	r2, [r1, #12]
	if (cnt == 0) {
  4019ea:	2a00      	cmp	r2, #0
  4019ec:	d049      	beq.n	401a82 <twihs_master_read+0x9a>
{
  4019ee:	b470      	push	{r4, r5, r6}
	p_twihs->TWIHS_MMR = 0;
  4019f0:	2600      	movs	r6, #0
	uint8_t *buffer = p_packet->buffer;
  4019f2:	688c      	ldr	r4, [r1, #8]
	p_twihs->TWIHS_MMR = 0;
  4019f4:	6046      	str	r6, [r0, #4]
			((p_packet->addr_length << TWIHS_MMR_IADRSZ_Pos) &
  4019f6:	684b      	ldr	r3, [r1, #4]
	p_twihs->TWIHS_MMR = TWIHS_MMR_MREAD | TWIHS_MMR_DADR(p_packet->chip) |
  4019f8:	7c0d      	ldrb	r5, [r1, #16]
			((p_packet->addr_length << TWIHS_MMR_IADRSZ_Pos) &
  4019fa:	021b      	lsls	r3, r3, #8
	p_twihs->TWIHS_MMR = TWIHS_MMR_MREAD | TWIHS_MMR_DADR(p_packet->chip) |
  4019fc:	042d      	lsls	r5, r5, #16
			((p_packet->addr_length << TWIHS_MMR_IADRSZ_Pos) &
  4019fe:	f403 7340 	and.w	r3, r3, #768	; 0x300
	p_twihs->TWIHS_MMR = TWIHS_MMR_MREAD | TWIHS_MMR_DADR(p_packet->chip) |
  401a02:	f405 05fe 	and.w	r5, r5, #8323072	; 0x7f0000
  401a06:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
  401a0a:	432b      	orrs	r3, r5
  401a0c:	6043      	str	r3, [r0, #4]
	p_twihs->TWIHS_IADR = 0;
  401a0e:	60c6      	str	r6, [r0, #12]
	p_twihs->TWIHS_IADR = twihs_mk_addr(p_packet->addr, p_packet->addr_length);
  401a10:	684b      	ldr	r3, [r1, #4]
	if (len == 0)
  401a12:	b9bb      	cbnz	r3, 401a44 <twihs_master_read+0x5c>
		return 0;
  401a14:	461d      	mov	r5, r3
	p_twihs->TWIHS_CR = TWIHS_CR_START;
  401a16:	2301      	movs	r3, #1
	p_twihs->TWIHS_IADR = twihs_mk_addr(p_packet->addr, p_packet->addr_length);
  401a18:	60c5      	str	r5, [r0, #12]
			p_twihs->TWIHS_CR = TWIHS_CR_STOP;
  401a1a:	2502      	movs	r5, #2
	p_twihs->TWIHS_CR = TWIHS_CR_START;
  401a1c:	6003      	str	r3, [r0, #0]
		status = p_twihs->TWIHS_SR;
  401a1e:	6a03      	ldr	r3, [r0, #32]
		if (status & TWIHS_SR_NACK) {
  401a20:	05d9      	lsls	r1, r3, #23
  401a22:	d40c      	bmi.n	401a3e <twihs_master_read+0x56>
  401a24:	f247 5130 	movw	r1, #30000	; 0x7530
		if (cnt == 1) {
  401a28:	2a01      	cmp	r2, #1
  401a2a:	d01e      	beq.n	401a6a <twihs_master_read+0x82>
		if (!(status & TWIHS_SR_RXRDY)) {
  401a2c:	079e      	lsls	r6, r3, #30
  401a2e:	d515      	bpl.n	401a5c <twihs_master_read+0x74>
		*buffer++ = p_twihs->TWIHS_RHR;
  401a30:	6b03      	ldr	r3, [r0, #48]	; 0x30
		cnt--;
  401a32:	3a01      	subs	r2, #1
		*buffer++ = p_twihs->TWIHS_RHR;
  401a34:	f804 3b01 	strb.w	r3, [r4], #1
		status = p_twihs->TWIHS_SR;
  401a38:	6a03      	ldr	r3, [r0, #32]
		if (status & TWIHS_SR_NACK) {
  401a3a:	05d9      	lsls	r1, r3, #23
  401a3c:	d5f2      	bpl.n	401a24 <twihs_master_read+0x3c>
			return TWIHS_RECEIVE_NACK;
  401a3e:	2005      	movs	r0, #5
}
  401a40:	bc70      	pop	{r4, r5, r6}
  401a42:	4770      	bx	lr
	if (len > 1) {
  401a44:	2b01      	cmp	r3, #1
	val = addr[0];
  401a46:	780d      	ldrb	r5, [r1, #0]
	if (len > 1) {
  401a48:	dde5      	ble.n	401a16 <twihs_master_read+0x2e>
		val |= addr[1];
  401a4a:	784e      	ldrb	r6, [r1, #1]
	if (len > 2) {
  401a4c:	2b02      	cmp	r3, #2
		val |= addr[1];
  401a4e:	ea46 2505 	orr.w	r5, r6, r5, lsl #8
	if (len > 2) {
  401a52:	d0e0      	beq.n	401a16 <twihs_master_read+0x2e>
		val |= addr[2];
  401a54:	788b      	ldrb	r3, [r1, #2]
  401a56:	ea43 2505 	orr.w	r5, r3, r5, lsl #8
  401a5a:	e7dc      	b.n	401a16 <twihs_master_read+0x2e>
		status = p_twihs->TWIHS_SR;
  401a5c:	6a03      	ldr	r3, [r0, #32]
		if (status & TWIHS_SR_NACK) {
  401a5e:	05de      	lsls	r6, r3, #23
  401a60:	d4ed      	bmi.n	401a3e <twihs_master_read+0x56>
		if (!timeout--) {
  401a62:	3901      	subs	r1, #1
  401a64:	d1e0      	bne.n	401a28 <twihs_master_read+0x40>
			return TWIHS_ERROR_TIMEOUT;
  401a66:	2009      	movs	r0, #9
  401a68:	e7ea      	b.n	401a40 <twihs_master_read+0x58>
		if (!(status & TWIHS_SR_RXRDY)) {
  401a6a:	079b      	lsls	r3, r3, #30
			p_twihs->TWIHS_CR = TWIHS_CR_STOP;
  401a6c:	6005      	str	r5, [r0, #0]
		if (!(status & TWIHS_SR_RXRDY)) {
  401a6e:	d5f5      	bpl.n	401a5c <twihs_master_read+0x74>
		*buffer++ = p_twihs->TWIHS_RHR;
  401a70:	6b03      	ldr	r3, [r0, #48]	; 0x30
  401a72:	7023      	strb	r3, [r4, #0]
	while (!(p_twihs->TWIHS_SR & TWIHS_SR_TXCOMP)) {
  401a74:	6a03      	ldr	r3, [r0, #32]
  401a76:	07db      	lsls	r3, r3, #31
  401a78:	d5fc      	bpl.n	401a74 <twihs_master_read+0x8c>
	p_twihs->TWIHS_SR;
  401a7a:	6a03      	ldr	r3, [r0, #32]
	return TWIHS_SUCCESS;
  401a7c:	2000      	movs	r0, #0
}
  401a7e:	bc70      	pop	{r4, r5, r6}
  401a80:	4770      	bx	lr
		return TWIHS_INVALID_ARGUMENT;
  401a82:	2001      	movs	r0, #1
  401a84:	4770      	bx	lr
  401a86:	bf00      	nop

00401a88 <twihs_master_write>:
{
  401a88:	4603      	mov	r3, r0
	uint32_t status, cnt = p_packet->length;
  401a8a:	68c8      	ldr	r0, [r1, #12]
	if (cnt == 0) {
  401a8c:	2800      	cmp	r0, #0
  401a8e:	d034      	beq.n	401afa <twihs_master_write+0x72>
{
  401a90:	b470      	push	{r4, r5, r6}
	p_twihs->TWIHS_MMR = 0;
  401a92:	2600      	movs	r6, #0
	uint8_t *buffer = p_packet->buffer;
  401a94:	688c      	ldr	r4, [r1, #8]
	p_twihs->TWIHS_MMR = 0;
  401a96:	605e      	str	r6, [r3, #4]
	p_twihs->TWIHS_MMR = TWIHS_MMR_DADR(p_packet->chip) |
  401a98:	7c0a      	ldrb	r2, [r1, #16]
			((p_packet->addr_length << TWIHS_MMR_IADRSZ_Pos) &
  401a9a:	684d      	ldr	r5, [r1, #4]
	p_twihs->TWIHS_MMR = TWIHS_MMR_DADR(p_packet->chip) |
  401a9c:	0412      	lsls	r2, r2, #16
			((p_packet->addr_length << TWIHS_MMR_IADRSZ_Pos) &
  401a9e:	022d      	lsls	r5, r5, #8
	p_twihs->TWIHS_MMR = TWIHS_MMR_DADR(p_packet->chip) |
  401aa0:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
			((p_packet->addr_length << TWIHS_MMR_IADRSZ_Pos) &
  401aa4:	f405 7540 	and.w	r5, r5, #768	; 0x300
	p_twihs->TWIHS_MMR = TWIHS_MMR_DADR(p_packet->chip) |
  401aa8:	432a      	orrs	r2, r5
  401aaa:	605a      	str	r2, [r3, #4]
	p_twihs->TWIHS_IADR = 0;
  401aac:	60de      	str	r6, [r3, #12]
	p_twihs->TWIHS_IADR = twihs_mk_addr(p_packet->addr, p_packet->addr_length);
  401aae:	684a      	ldr	r2, [r1, #4]
	if (len == 0)
  401ab0:	b98a      	cbnz	r2, 401ad6 <twihs_master_write+0x4e>
		return 0;
  401ab2:	4615      	mov	r5, r2
	p_twihs->TWIHS_IADR = twihs_mk_addr(p_packet->addr, p_packet->addr_length);
  401ab4:	60dd      	str	r5, [r3, #12]
		status = p_twihs->TWIHS_SR;
  401ab6:	6a1a      	ldr	r2, [r3, #32]
		if (status & TWIHS_SR_NACK) {
  401ab8:	05d6      	lsls	r6, r2, #23
  401aba:	d409      	bmi.n	401ad0 <twihs_master_write+0x48>
		if (!(status & TWIHS_SR_TXRDY)) {
  401abc:	0755      	lsls	r5, r2, #29
  401abe:	d5fa      	bpl.n	401ab6 <twihs_master_write+0x2e>
		p_twihs->TWIHS_THR = *buffer++;
  401ac0:	f814 2b01 	ldrb.w	r2, [r4], #1
	while (cnt > 0) {
  401ac4:	3801      	subs	r0, #1
		p_twihs->TWIHS_THR = *buffer++;
  401ac6:	635a      	str	r2, [r3, #52]	; 0x34
	while (cnt > 0) {
  401ac8:	d013      	beq.n	401af2 <twihs_master_write+0x6a>
		status = p_twihs->TWIHS_SR;
  401aca:	6a1a      	ldr	r2, [r3, #32]
		if (status & TWIHS_SR_NACK) {
  401acc:	05d6      	lsls	r6, r2, #23
  401ace:	d5f5      	bpl.n	401abc <twihs_master_write+0x34>
			return TWIHS_RECEIVE_NACK;
  401ad0:	2005      	movs	r0, #5
}
  401ad2:	bc70      	pop	{r4, r5, r6}
  401ad4:	4770      	bx	lr
	if (len > 1) {
  401ad6:	2a01      	cmp	r2, #1
	val = addr[0];
  401ad8:	780d      	ldrb	r5, [r1, #0]
	if (len > 1) {
  401ada:	ddeb      	ble.n	401ab4 <twihs_master_write+0x2c>
		val |= addr[1];
  401adc:	784e      	ldrb	r6, [r1, #1]
	if (len > 2) {
  401ade:	2a02      	cmp	r2, #2
		val |= addr[1];
  401ae0:	ea46 2505 	orr.w	r5, r6, r5, lsl #8
	if (len > 2) {
  401ae4:	d0e6      	beq.n	401ab4 <twihs_master_write+0x2c>
		val |= addr[2];
  401ae6:	788a      	ldrb	r2, [r1, #2]
  401ae8:	ea42 2505 	orr.w	r5, r2, r5, lsl #8
  401aec:	e7e2      	b.n	401ab4 <twihs_master_write+0x2c>
		if (status & TWIHS_SR_TXRDY) {
  401aee:	0751      	lsls	r1, r2, #29
  401af0:	d405      	bmi.n	401afe <twihs_master_write+0x76>
		status = p_twihs->TWIHS_SR;
  401af2:	6a1a      	ldr	r2, [r3, #32]
		if (status & TWIHS_SR_NACK) {
  401af4:	05d4      	lsls	r4, r2, #23
  401af6:	d4eb      	bmi.n	401ad0 <twihs_master_write+0x48>
  401af8:	e7f9      	b.n	401aee <twihs_master_write+0x66>
		return TWIHS_INVALID_ARGUMENT;
  401afa:	2001      	movs	r0, #1
  401afc:	4770      	bx	lr
	p_twihs->TWIHS_CR = TWIHS_CR_STOP;
  401afe:	2202      	movs	r2, #2
  401b00:	601a      	str	r2, [r3, #0]
	while (!(p_twihs->TWIHS_SR & TWIHS_SR_TXCOMP)) {
  401b02:	6a1a      	ldr	r2, [r3, #32]
  401b04:	07d2      	lsls	r2, r2, #31
  401b06:	d5fc      	bpl.n	401b02 <twihs_master_write+0x7a>
}
  401b08:	bc70      	pop	{r4, r5, r6}
  401b0a:	4770      	bx	lr

00401b0c <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  401b0c:	6943      	ldr	r3, [r0, #20]
  401b0e:	079b      	lsls	r3, r3, #30
  401b10:	d502      	bpl.n	401b18 <uart_write+0xc>
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  401b12:	61c1      	str	r1, [r0, #28]
	return 0;
  401b14:	2000      	movs	r0, #0
  401b16:	4770      	bx	lr
		return 1;
  401b18:	2001      	movs	r0, #1
}
  401b1a:	4770      	bx	lr

00401b1c <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
  401b1c:	6943      	ldr	r3, [r0, #20]
  401b1e:	07db      	lsls	r3, r3, #31
  401b20:	d503      	bpl.n	401b2a <uart_read+0xe>
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
  401b22:	6983      	ldr	r3, [r0, #24]
	return 0;
  401b24:	2000      	movs	r0, #0
	*puc_data = (uint8_t) p_uart->UART_RHR;
  401b26:	700b      	strb	r3, [r1, #0]
	return 0;
  401b28:	4770      	bx	lr
		return 1;
  401b2a:	2001      	movs	r0, #1
}
  401b2c:	4770      	bx	lr
  401b2e:	bf00      	nop

00401b30 <usart_set_async_baudrate>:
	uint32_t cd_fp;
	uint32_t cd;
	uint32_t fp;

	/* Calculate the receiver sampling divide of baudrate clock. */
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
  401b30:	010b      	lsls	r3, r1, #4
  401b32:	4293      	cmp	r3, r2
{
  401b34:	b410      	push	{r4}
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
  401b36:	d814      	bhi.n	401b62 <usart_set_async_baudrate+0x32>
	} else {
		over = LOW_FRQ_SAMPLE_DIV;
	}

	/* Calculate clock divider according to the fraction calculated formula. */
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  401b38:	0859      	lsrs	r1, r3, #1
	cd = cd_fp >> 3;
	fp = cd_fp & 0x07;
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  401b3a:	f64f 74fe 	movw	r4, #65534	; 0xfffe
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  401b3e:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
  401b42:	fbb2 f2f3 	udiv	r2, r2, r3
	cd = cd_fp >> 3;
  401b46:	08d3      	lsrs	r3, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  401b48:	1e59      	subs	r1, r3, #1
  401b4a:	42a1      	cmp	r1, r4
  401b4c:	d815      	bhi.n	401b7a <usart_set_async_baudrate+0x4a>
	if (over == 8) {
		p_usart->US_MR |= US_MR_OVER;
	}

	/* Configure the baudrate generate register. */
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
  401b4e:	0412      	lsls	r2, r2, #16

	return 0;
  401b50:	2100      	movs	r1, #0
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
  401b52:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
  401b56:	431a      	orrs	r2, r3
  401b58:	6202      	str	r2, [r0, #32]
}
  401b5a:	4608      	mov	r0, r1
  401b5c:	f85d 4b04 	ldr.w	r4, [sp], #4
  401b60:	4770      	bx	lr
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  401b62:	00c9      	lsls	r1, r1, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  401b64:	f64f 74fe 	movw	r4, #65534	; 0xfffe
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  401b68:	084b      	lsrs	r3, r1, #1
  401b6a:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
  401b6e:	fbb2 f2f1 	udiv	r2, r2, r1
	cd = cd_fp >> 3;
  401b72:	08d3      	lsrs	r3, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  401b74:	1e59      	subs	r1, r3, #1
  401b76:	42a1      	cmp	r1, r4
  401b78:	d904      	bls.n	401b84 <usart_set_async_baudrate+0x54>
		return 1;
  401b7a:	2101      	movs	r1, #1
}
  401b7c:	f85d 4b04 	ldr.w	r4, [sp], #4
  401b80:	4608      	mov	r0, r1
  401b82:	4770      	bx	lr
		p_usart->US_MR |= US_MR_OVER;
  401b84:	6841      	ldr	r1, [r0, #4]
  401b86:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
  401b8a:	6041      	str	r1, [r0, #4]
  401b8c:	e7df      	b.n	401b4e <usart_set_async_baudrate+0x1e>
  401b8e:	bf00      	nop

00401b90 <usart_init_rs232>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_init_rs232(Usart *p_usart,
		const sam_usart_opt_t *p_usart_opt, uint32_t ul_mck)
{
  401b90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	p_usart->US_MR = 0;
  401b92:	2400      	movs	r4, #0
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
  401b94:	4d14      	ldr	r5, [pc, #80]	; (401be8 <usart_init_rs232+0x58>)
	p_usart->US_CR = US_CR_RSTSTA;
  401b96:	f44f 7680 	mov.w	r6, #256	; 0x100
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
  401b9a:	f04f 0e88 	mov.w	lr, #136	; 0x88
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
  401b9e:	2724      	movs	r7, #36	; 0x24
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
  401ba0:	f8c0 50e4 	str.w	r5, [r0, #228]	; 0xe4
	p_usart->US_MR = 0;
  401ba4:	6044      	str	r4, [r0, #4]
	p_usart->US_CR = US_CR_RTSDIS;
  401ba6:	f44f 2500 	mov.w	r5, #524288	; 0x80000
	p_usart->US_RTOR = 0;
  401baa:	6244      	str	r4, [r0, #36]	; 0x24
	p_usart->US_TTGR = 0;
  401bac:	6284      	str	r4, [r0, #40]	; 0x28
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
  401bae:	f8c0 e000 	str.w	lr, [r0]
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
  401bb2:	6007      	str	r7, [r0, #0]
	p_usart->US_CR = US_CR_RSTSTA;
  401bb4:	6006      	str	r6, [r0, #0]
	ul_reg_val = 0;
  401bb6:	4e0d      	ldr	r6, [pc, #52]	; (401bec <usart_init_rs232+0x5c>)
	p_usart->US_CR = US_CR_RTSDIS;
  401bb8:	6005      	str	r5, [r0, #0]
	ul_reg_val = 0;
  401bba:	6034      	str	r4, [r6, #0]
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
  401bbc:	b189      	cbz	r1, 401be2 <usart_init_rs232+0x52>
  401bbe:	460d      	mov	r5, r1
  401bc0:	4b0b      	ldr	r3, [pc, #44]	; (401bf0 <usart_init_rs232+0x60>)
  401bc2:	6809      	ldr	r1, [r1, #0]
  401bc4:	4604      	mov	r4, r0
  401bc6:	4798      	blx	r3
  401bc8:	b958      	cbnz	r0, 401be2 <usart_init_rs232+0x52>
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  401bca:	686a      	ldr	r2, [r5, #4]
  401bcc:	68ab      	ldr	r3, [r5, #8]
  401bce:	692f      	ldr	r7, [r5, #16]
  401bd0:	4313      	orrs	r3, r2
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  401bd2:	68e9      	ldr	r1, [r5, #12]
	p_usart->US_MR |= ul_reg_val;
  401bd4:	6862      	ldr	r2, [r4, #4]
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  401bd6:	433b      	orrs	r3, r7
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  401bd8:	430b      	orrs	r3, r1
	p_usart->US_MR |= ul_reg_val;
  401bda:	431a      	orrs	r2, r3
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  401bdc:	6033      	str	r3, [r6, #0]
	p_usart->US_MR |= ul_reg_val;
  401bde:	6062      	str	r2, [r4, #4]
}
  401be0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		return 1;
  401be2:	2001      	movs	r0, #1
  401be4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  401be6:	bf00      	nop
  401be8:	55534100 	.word	0x55534100
  401bec:	20409a24 	.word	0x20409a24
  401bf0:	00401b31 	.word	0x00401b31

00401bf4 <usart_enable_tx>:
	p_usart->US_CR = US_CR_TXEN;
  401bf4:	2340      	movs	r3, #64	; 0x40
  401bf6:	6003      	str	r3, [r0, #0]
  401bf8:	4770      	bx	lr
  401bfa:	bf00      	nop

00401bfc <usart_enable_rx>:
	p_usart->US_CR = US_CR_RXEN;
  401bfc:	2310      	movs	r3, #16
  401bfe:	6003      	str	r3, [r0, #0]
  401c00:	4770      	bx	lr
  401c02:	bf00      	nop

00401c04 <usart_enable_interrupt>:
	p_usart->US_IER = ul_sources;
  401c04:	6081      	str	r1, [r0, #8]
  401c06:	4770      	bx	lr

00401c08 <usart_get_status>:
	return p_usart->US_CSR;
  401c08:	6940      	ldr	r0, [r0, #20]
}
  401c0a:	4770      	bx	lr

00401c0c <usart_write>:
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  401c0c:	6942      	ldr	r2, [r0, #20]
{
  401c0e:	4603      	mov	r3, r0
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  401c10:	0792      	lsls	r2, r2, #30
  401c12:	d504      	bpl.n	401c1e <usart_write+0x12>
	p_usart->US_THR = US_THR_TXCHR(c);
  401c14:	f3c1 0108 	ubfx	r1, r1, #0, #9
	return 0;
  401c18:	2000      	movs	r0, #0
	p_usart->US_THR = US_THR_TXCHR(c);
  401c1a:	61d9      	str	r1, [r3, #28]
	return 0;
  401c1c:	4770      	bx	lr
		return 1;
  401c1e:	2001      	movs	r0, #1
}
  401c20:	4770      	bx	lr
  401c22:	bf00      	nop

00401c24 <usart_read>:
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  401c24:	6943      	ldr	r3, [r0, #20]
  401c26:	07db      	lsls	r3, r3, #31
  401c28:	d505      	bpl.n	401c36 <usart_read+0x12>
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  401c2a:	6983      	ldr	r3, [r0, #24]
	return 0;
  401c2c:	2000      	movs	r0, #0
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  401c2e:	f3c3 0308 	ubfx	r3, r3, #0, #9
  401c32:	600b      	str	r3, [r1, #0]
	return 0;
  401c34:	4770      	bx	lr
		return 1;
  401c36:	2001      	movs	r0, #1
}
  401c38:	4770      	bx	lr
  401c3a:	bf00      	nop

00401c3c <xdmac_configure_transfer>:
	return xdmac->XDMAC_CHID[channel_num].XDMAC_CIS;
  401c3c:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	Assert(xdmac);
	Assert(channel_num < XDMACCHID_NUMBER);
	Assert(cfg);
	
	xdmac_channel_get_interrupt_status( xdmac, channel_num);
	xdmac_channel_set_source_addr(xdmac, channel_num, cfg->mbr_sa);
  401c40:	6853      	ldr	r3, [r2, #4]
  401c42:	6dc8      	ldr	r0, [r1, #92]	; 0x5c
	xdmac->XDMAC_CHID[channel_num].XDMAC_CSA = src_addr;
  401c44:	660b      	str	r3, [r1, #96]	; 0x60
	xdmac_channel_set_destination_addr(xdmac, channel_num, cfg->mbr_da);
  401c46:	6893      	ldr	r3, [r2, #8]
	xdmac->XDMAC_CHID[channel_num].XDMAC_CDA = dst_addr;
  401c48:	664b      	str	r3, [r1, #100]	; 0x64
 */
static inline void xdmac_channel_set_microblock_control(Xdmac *xdmac, uint32_t channel_num, uint32_t ublen)
{
	Assert(xdmac);
	Assert(channel_num < XDMACCHID_NUMBER);
	xdmac->XDMAC_CHID[channel_num].XDMAC_CUBC = XDMAC_CUBC_UBLEN(ublen);
  401c4a:	6813      	ldr	r3, [r2, #0]
  401c4c:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
  401c50:	670b      	str	r3, [r1, #112]	; 0x70
 */
static inline void xdmac_channel_set_block_control(Xdmac *xdmac, uint32_t channel_num, uint32_t blen)
{
	Assert(xdmac);
	Assert(channel_num < XDMACCHID_NUMBER);
	xdmac->XDMAC_CHID[channel_num].XDMAC_CBC = XDMAC_CBC_BLEN(blen);
  401c52:	6913      	ldr	r3, [r2, #16]
  401c54:	f3c3 030b 	ubfx	r3, r3, #0, #12
  401c58:	674b      	str	r3, [r1, #116]	; 0x74
	xdmac_channel_set_microblock_control(xdmac, channel_num, cfg->mbr_ubc);
	xdmac_channel_set_block_control(xdmac, channel_num, cfg->mbr_bc);
	xdmac_channel_set_datastride_mempattern(xdmac, channel_num, cfg->mbr_ds);
  401c5a:	6953      	ldr	r3, [r2, #20]
 */
static inline void xdmac_channel_set_datastride_mempattern(Xdmac *xdmac, uint32_t channel_num, uint32_t dds_msp)
{
	Assert(xdmac);
	Assert(channel_num < XDMACCHID_NUMBER);
	xdmac->XDMAC_CHID[channel_num].XDMAC_CDS_MSP = dds_msp;
  401c5c:	67cb      	str	r3, [r1, #124]	; 0x7c
static inline void xdmac_channel_set_source_microblock_stride(Xdmac *xdmac,
		uint32_t channel_num, uint32_t subs)
{
	Assert(xdmac);
	Assert(channel_num < XDMACCHID_NUMBER);
	xdmac->XDMAC_CHID[channel_num].XDMAC_CSUS = XDMAC_CSUS_SUBS(subs);
  401c5e:	6993      	ldr	r3, [r2, #24]
  401c60:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
  401c64:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
static inline void xdmac_channel_set_destination_microblock_stride(Xdmac *xdmac,
		uint32_t channel_num, uint32_t dubs)
{
	Assert(xdmac);
	Assert(channel_num < XDMACCHID_NUMBER);
	xdmac->XDMAC_CHID[channel_num].XDMAC_CDUS = XDMAC_CDUS_DUBS(dubs);
  401c68:	69d3      	ldr	r3, [r2, #28]
  401c6a:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
  401c6e:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
	xdmac_channel_set_source_microblock_stride(xdmac, channel_num, cfg->mbr_sus);
	xdmac_channel_set_destination_microblock_stride(xdmac, channel_num, cfg->mbr_dus);
	xdmac_channel_set_config(xdmac, channel_num, cfg->mbr_cfg );
  401c72:	68d3      	ldr	r3, [r2, #12]
	xdmac->XDMAC_CHID[channel_num].XDMAC_CC = config;
  401c74:	678b      	str	r3, [r1, #120]	; 0x78
  401c76:	4770      	bx	lr

00401c78 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  401c78:	b570      	push	{r4, r5, r6, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  401c7a:	4810      	ldr	r0, [pc, #64]	; (401cbc <sysclk_init+0x44>)
  401c7c:	4d10      	ldr	r5, [pc, #64]	; (401cc0 <sysclk_init+0x48>)
  401c7e:	47a8      	blx	r5
	case OSC_MAINCK_8M_RC:
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_8_MHz);
		break;

	case OSC_MAINCK_12M_RC:
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
  401c80:	2020      	movs	r0, #32
  401c82:	4b10      	ldr	r3, [pc, #64]	; (401cc4 <sysclk_init+0x4c>)
  401c84:	4c10      	ldr	r4, [pc, #64]	; (401cc8 <sysclk_init+0x50>)
  401c86:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  401c88:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  401c8a:	2800      	cmp	r0, #0
  401c8c:	d0fc      	beq.n	401c88 <sysclk_init+0x10>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  401c8e:	4b0f      	ldr	r3, [pc, #60]	; (401ccc <sysclk_init+0x54>)
  401c90:	4798      	blx	r3
  401c92:	4c0f      	ldr	r4, [pc, #60]	; (401cd0 <sysclk_init+0x58>)
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  401c94:	4b0f      	ldr	r3, [pc, #60]	; (401cd4 <sysclk_init+0x5c>)
  401c96:	4a10      	ldr	r2, [pc, #64]	; (401cd8 <sysclk_init+0x60>)
  401c98:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  401c9a:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  401c9c:	2800      	cmp	r0, #0
  401c9e:	d0fc      	beq.n	401c9a <sysclk_init+0x22>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  401ca0:	2002      	movs	r0, #2
  401ca2:	4b0e      	ldr	r3, [pc, #56]	; (401cdc <sysclk_init+0x64>)
  401ca4:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  401ca6:	4b0e      	ldr	r3, [pc, #56]	; (401ce0 <sysclk_init+0x68>)
  401ca8:	2000      	movs	r0, #0
  401caa:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  401cac:	4b0d      	ldr	r3, [pc, #52]	; (401ce4 <sysclk_init+0x6c>)
  401cae:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  401cb0:	462b      	mov	r3, r5
  401cb2:	4802      	ldr	r0, [pc, #8]	; (401cbc <sysclk_init+0x44>)

#if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
	/* Signal that the internal frequencies are setup */
	sysclk_initialized = 1;
#endif
}
  401cb4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	system_init_flash(sysclk_get_cpu_hz());
  401cb8:	4718      	bx	r3
  401cba:	bf00      	nop
  401cbc:	11e1a300 	.word	0x11e1a300
  401cc0:	00402519 	.word	0x00402519
  401cc4:	0040222d 	.word	0x0040222d
  401cc8:	00402279 	.word	0x00402279
  401ccc:	00402289 	.word	0x00402289
  401cd0:	00402299 	.word	0x00402299
  401cd4:	400e0600 	.word	0x400e0600
  401cd8:	20183f01 	.word	0x20183f01
  401cdc:	004021a9 	.word	0x004021a9
  401ce0:	004021d9 	.word	0x004021d9
  401ce4:	00402435 	.word	0x00402435

00401ce8 <board_init>:

void board_init(void)
{
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  401ce8:	4b81      	ldr	r3, [pc, #516]	; (401ef0 <board_init+0x208>)
  401cea:	f44f 4200 	mov.w	r2, #32768	; 0x8000
{
  401cee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	WDT->WDT_MR = WDT_MR_WDDIS;
  401cf2:	605a      	str	r2, [r3, #4]
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
  401cf4:	f3bf 8f5f 	dmb	sy
		mpu_cal_mpu_region_size(ITCM_END_ADDRESS - ITCM_START_ADDRESS) |
  401cf8:	f8df 826c 	ldr.w	r8, [pc, #620]	; 401f68 <board_init+0x280>
	dw_region_attr =
  401cfc:	4f7d      	ldr	r7, [pc, #500]	; (401ef4 <board_init+0x20c>)
		mpu_cal_mpu_region_size(ITCM_END_ADDRESS - ITCM_START_ADDRESS) |
  401cfe:	4d7e      	ldr	r5, [pc, #504]	; (401ef8 <board_init+0x210>)
  401d00:	4640      	mov	r0, r8
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  401d02:	4c7e      	ldr	r4, [pc, #504]	; (401efc <board_init+0x214>)
		mpu_cal_mpu_region_size(ITCM_END_ADDRESS - ITCM_START_ADDRESS) |
  401d04:	47a8      	blx	r5
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  401d06:	ea40 0107 	orr.w	r1, r0, r7
  401d0a:	2011      	movs	r0, #17
  401d0c:	47a0      	blx	r4
		mpu_cal_mpu_region_size(IFLASH_END_ADDRESS - IFLASH_START_ADDRESS) |
  401d0e:	487c      	ldr	r0, [pc, #496]	; (401f00 <board_init+0x218>)
  401d10:	47a8      	blx	r5
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  401d12:	497c      	ldr	r1, [pc, #496]	; (401f04 <board_init+0x21c>)
	dw_region_attr =
  401d14:	4e7c      	ldr	r6, [pc, #496]	; (401f08 <board_init+0x220>)
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  401d16:	4301      	orrs	r1, r0
  401d18:	487c      	ldr	r0, [pc, #496]	; (401f0c <board_init+0x224>)
  401d1a:	47a0      	blx	r4
		mpu_cal_mpu_region_size(DTCM_END_ADDRESS - DTCM_START_ADDRESS) |
  401d1c:	4640      	mov	r0, r8
  401d1e:	47a8      	blx	r5
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  401d20:	ea40 0107 	orr.w	r1, r0, r7
  401d24:	487a      	ldr	r0, [pc, #488]	; (401f10 <board_init+0x228>)
  401d26:	47a0      	blx	r4
		mpu_cal_mpu_region_size(SRAM_FIRST_END_ADDRESS - SRAM_FIRST_START_ADDRESS)
  401d28:	487a      	ldr	r0, [pc, #488]	; (401f14 <board_init+0x22c>)
  401d2a:	47a8      	blx	r5
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  401d2c:	ea40 0106 	orr.w	r1, r0, r6
  401d30:	4879      	ldr	r0, [pc, #484]	; (401f18 <board_init+0x230>)
  401d32:	47a0      	blx	r4
		mpu_cal_mpu_region_size(SRAM_SECOND_END_ADDRESS - SRAM_SECOND_START_ADDRESS) |
  401d34:	4879      	ldr	r0, [pc, #484]	; (401f1c <board_init+0x234>)
  401d36:	47a8      	blx	r5
	dw_region_attr = MPU_AP_FULL_ACCESS |
  401d38:	4f79      	ldr	r7, [pc, #484]	; (401f20 <board_init+0x238>)
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  401d3a:	ea40 0106 	orr.w	r1, r0, r6
  401d3e:	4879      	ldr	r0, [pc, #484]	; (401f24 <board_init+0x23c>)
  401d40:	47a0      	blx	r4
		mpu_cal_mpu_region_size(PERIPHERALS_END_ADDRESS - PERIPHERALS_START_ADDRESS)
  401d42:	f06f 4060 	mvn.w	r0, #3758096384	; 0xe0000000
  401d46:	47a8      	blx	r5
	dw_region_attr =
  401d48:	f8df 8220 	ldr.w	r8, [pc, #544]	; 401f6c <board_init+0x284>
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  401d4c:	ea40 0107 	orr.w	r1, r0, r7
  401d50:	4875      	ldr	r0, [pc, #468]	; (401f28 <board_init+0x240>)
  401d52:	47a0      	blx	r4
		mpu_cal_mpu_region_size(EXT_EBI_END_ADDRESS - EXT_EBI_START_ADDRESS) |
  401d54:	f06f 4070 	mvn.w	r0, #4026531840	; 0xf0000000
  401d58:	47a8      	blx	r5
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  401d5a:	ea40 0108 	orr.w	r1, r0, r8
  401d5e:	4873      	ldr	r0, [pc, #460]	; (401f2c <board_init+0x244>)
  401d60:	47a0      	blx	r4
		mpu_cal_mpu_region_size(SDRAM_END_ADDRESS - SDRAM_START_ADDRESS) |
  401d62:	f06f 4070 	mvn.w	r0, #4026531840	; 0xf0000000
  401d66:	47a8      	blx	r5
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  401d68:	4971      	ldr	r1, [pc, #452]	; (401f30 <board_init+0x248>)
	SCB->SHCSR |= (SCB_SHCSR_MEMFAULTENA_Msk | SCB_SHCSR_BUSFAULTENA_Msk
  401d6a:	4e72      	ldr	r6, [pc, #456]	; (401f34 <board_init+0x24c>)
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  401d6c:	4301      	orrs	r1, r0
  401d6e:	4872      	ldr	r0, [pc, #456]	; (401f38 <board_init+0x250>)
  401d70:	47a0      	blx	r4
		mpu_cal_mpu_region_size(QSPI_END_ADDRESS - QSPI_START_ADDRESS) |
  401d72:	f06f 4060 	mvn.w	r0, #3758096384	; 0xe0000000
  401d76:	47a8      	blx	r5
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  401d78:	ea40 0108 	orr.w	r1, r0, r8
  401d7c:	486f      	ldr	r0, [pc, #444]	; (401f3c <board_init+0x254>)
  401d7e:	47a0      	blx	r4
		mpu_cal_mpu_region_size(USBHSRAM_END_ADDRESS - USBHSRAM_START_ADDRESS) |
  401d80:	486f      	ldr	r0, [pc, #444]	; (401f40 <board_init+0x258>)
  401d82:	47a8      	blx	r5
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  401d84:	ea40 0107 	orr.w	r1, r0, r7
  401d88:	486e      	ldr	r0, [pc, #440]	; (401f44 <board_init+0x25c>)
  401d8a:	47a0      	blx	r4
	SCB->SHCSR |= (SCB_SHCSR_MEMFAULTENA_Msk | SCB_SHCSR_BUSFAULTENA_Msk
  401d8c:	6a73      	ldr	r3, [r6, #36]	; 0x24
	mpu_enable( MPU_ENABLE | MPU_PRIVDEFENA);
  401d8e:	2005      	movs	r0, #5
  401d90:	4a6d      	ldr	r2, [pc, #436]	; (401f48 <board_init+0x260>)
	SCB->SHCSR |= (SCB_SHCSR_MEMFAULTENA_Msk | SCB_SHCSR_BUSFAULTENA_Msk
  401d92:	f443 23e0 	orr.w	r3, r3, #458752	; 0x70000
  401d96:	6273      	str	r3, [r6, #36]	; 0x24
	mpu_enable( MPU_ENABLE | MPU_PRIVDEFENA);
  401d98:	4790      	blx	r2
  __ASM volatile ("dsb");
  401d9a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  401d9e:	f3bf 8f6f 	isb	sy
  __ASM volatile ("dsb");
  401da2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  401da6:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache(void)
{
  #if (__ICACHE_PRESENT == 1)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  401daa:	2300      	movs	r3, #0
  401dac:	f8c6 3250 	str.w	r3, [r6, #592]	; 0x250
    SCB->CCR |=  SCB_CCR_IC_Msk;            // enable I-Cache
  401db0:	6973      	ldr	r3, [r6, #20]
  401db2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  401db6:	6173      	str	r3, [r6, #20]
  __ASM volatile ("dsb");
  401db8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  401dbc:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  401dc0:	4b62      	ldr	r3, [pc, #392]	; (401f4c <board_init+0x264>)
  401dc2:	4963      	ldr	r1, [pc, #396]	; (401f50 <board_init+0x268>)
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  401dc4:	4a63      	ldr	r2, [pc, #396]	; (401f54 <board_init+0x26c>)
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  401dc6:	6059      	str	r1, [r3, #4]
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  401dc8:	605a      	str	r2, [r3, #4]
  __ASM volatile ("dsb");
  401dca:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  401dce:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  401dd2:	f8d6 3290 	ldr.w	r3, [r6, #656]	; 0x290
  401dd6:	f023 0301 	bic.w	r3, r3, #1
  401dda:	f8c6 3290 	str.w	r3, [r6, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  401dde:	f8d6 3294 	ldr.w	r3, [r6, #660]	; 0x294
  401de2:	f023 0301 	bic.w	r3, r3, #1
  401de6:	f8c6 3294 	str.w	r3, [r6, #660]	; 0x294
  __ASM volatile ("dsb");
  401dea:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  401dee:	f3bf 8f6f 	isb	sy
  401df2:	4c59      	ldr	r4, [pc, #356]	; (401f58 <board_init+0x270>)
  401df4:	200a      	movs	r0, #10
  401df6:	47a0      	blx	r4
  401df8:	200b      	movs	r0, #11
  401dfa:	47a0      	blx	r4
  401dfc:	200c      	movs	r0, #12
  401dfe:	47a0      	blx	r4
  401e00:	2010      	movs	r0, #16
  401e02:	47a0      	blx	r4
  401e04:	2011      	movs	r0, #17
  401e06:	47a0      	blx	r4
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  401e08:	f44f 0600 	mov.w	r6, #8388608	; 0x800000
  401e0c:	4b53      	ldr	r3, [pc, #332]	; (401f5c <board_init+0x274>)
  401e0e:	f44f 7200 	mov.w	r2, #512	; 0x200
  401e12:	4853      	ldr	r0, [pc, #332]	; (401f60 <board_init+0x278>)
		base->PIO_PUDR = mask;
  401e14:	f44f 1500 	mov.w	r5, #2097152	; 0x200000
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  401e18:	611e      	str	r6, [r3, #16]
		base->PIO_PUDR = mask;
  401e1a:	2110      	movs	r1, #16
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  401e1c:	f8c3 60a0 	str.w	r6, [r3, #160]	; 0xa0
		base->PIO_PUDR = mask;
  401e20:	f5a0 7000 	sub.w	r0, r0, #512	; 0x200
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  401e24:	631e      	str	r6, [r3, #48]	; 0x30
		base->PIO_PUDR = mask;
  401e26:	2408      	movs	r4, #8
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  401e28:	f8c0 2210 	str.w	r2, [r0, #528]	; 0x210
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  401e2c:	f8c0 22a0 	str.w	r2, [r0, #672]	; 0x2a0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  401e30:	f8c0 2230 	str.w	r2, [r0, #560]	; 0x230
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  401e34:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  401e36:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  401e3a:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  401e3c:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  401e40:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFER = mask;
  401e42:	621a      	str	r2, [r3, #32]
		base->PIO_IFSCER = mask;
  401e44:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  401e48:	6f1e      	ldr	r6, [r3, #112]	; 0x70
			GPIO_PUSH_BUTTON_1_SENSE);

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	ioport_set_pin_peripheral_mode(USART1_RXD_GPIO, USART1_RXD_FLAGS);
	MATRIX->CCFG_SYSIO |= CCFG_SYSIO_SYSIO4;
  401e4a:	4f46      	ldr	r7, [pc, #280]	; (401f64 <board_init+0x27c>)
  401e4c:	f426 7600 	bic.w	r6, r6, #512	; 0x200
  401e50:	671e      	str	r6, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  401e52:	6f5e      	ldr	r6, [r3, #116]	; 0x74
  401e54:	f426 7600 	bic.w	r6, r6, #512	; 0x200
  401e58:	675e      	str	r6, [r3, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  401e5a:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  401e5e:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  401e62:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
		base->PIO_PUDR = mask;
  401e66:	661d      	str	r5, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  401e68:	f8c3 5090 	str.w	r5, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  401e6c:	655d      	str	r5, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  401e6e:	625d      	str	r5, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  401e70:	f8c3 5080 	str.w	r5, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  401e74:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  401e76:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
  401e7a:	671a      	str	r2, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  401e7c:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  401e7e:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
  401e82:	675a      	str	r2, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  401e84:	605d      	str	r5, [r3, #4]
  401e86:	f8d7 2114 	ldr.w	r2, [r7, #276]	; 0x114
  401e8a:	430a      	orrs	r2, r1
  401e8c:	f8c7 2114 	str.w	r2, [r7, #276]	; 0x114
		base->PIO_PUDR = mask;
  401e90:	6601      	str	r1, [r0, #96]	; 0x60
		base->PIO_PPDDR = mask;
  401e92:	f8c0 1090 	str.w	r1, [r0, #144]	; 0x90
		base->PIO_MDDR = mask;
  401e96:	6541      	str	r1, [r0, #84]	; 0x54
		base->PIO_IFDR = mask;
  401e98:	6241      	str	r1, [r0, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  401e9a:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
		base->PIO_ABCDSR[0] |= mask;
  401e9e:	6f02      	ldr	r2, [r0, #112]	; 0x70
  401ea0:	430a      	orrs	r2, r1
  401ea2:	6702      	str	r2, [r0, #112]	; 0x70
		base->PIO_ABCDSR[1] |= mask;
  401ea4:	6f42      	ldr	r2, [r0, #116]	; 0x74
  401ea6:	430a      	orrs	r2, r1
  401ea8:	6742      	str	r2, [r0, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  401eaa:	6041      	str	r1, [r0, #4]
		base->PIO_PUDR = mask;
  401eac:	661c      	str	r4, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  401eae:	f8c3 4090 	str.w	r4, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  401eb2:	655c      	str	r4, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  401eb4:	625c      	str	r4, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  401eb6:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  401eba:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  401ebc:	f022 0208 	bic.w	r2, r2, #8
  401ec0:	671a      	str	r2, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  401ec2:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  401ec4:	f022 0208 	bic.w	r2, r2, #8
  401ec8:	675a      	str	r2, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  401eca:	605c      	str	r4, [r3, #4]
		base->PIO_PUDR = mask;
  401ecc:	6619      	str	r1, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  401ece:	f8c3 1090 	str.w	r1, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  401ed2:	6559      	str	r1, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  401ed4:	6259      	str	r1, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  401ed6:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  401eda:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  401edc:	f022 0210 	bic.w	r2, r2, #16
  401ee0:	671a      	str	r2, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  401ee2:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  401ee4:	f022 0210 	bic.w	r2, r2, #16
  401ee8:	675a      	str	r2, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  401eea:	6059      	str	r1, [r3, #4]
  401eec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401ef0:	400e1850 	.word	0x400e1850
  401ef4:	01000001 	.word	0x01000001
  401ef8:	00401f89 	.word	0x00401f89
  401efc:	00401f7d 	.word	0x00401f7d
  401f00:	001fffff 	.word	0x001fffff
  401f04:	06230001 	.word	0x06230001
  401f08:	03230001 	.word	0x03230001
  401f0c:	00400012 	.word	0x00400012
  401f10:	20000013 	.word	0x20000013
  401f14:	0003ffff 	.word	0x0003ffff
  401f18:	20400014 	.word	0x20400014
  401f1c:	0001ffff 	.word	0x0001ffff
  401f20:	13010001 	.word	0x13010001
  401f24:	20440015 	.word	0x20440015
  401f28:	40000016 	.word	0x40000016
  401f2c:	60000017 	.word	0x60000017
  401f30:	03250001 	.word	0x03250001
  401f34:	e000ed00 	.word	0xe000ed00
  401f38:	70000018 	.word	0x70000018
  401f3c:	80000019 	.word	0x80000019
  401f40:	000fffff 	.word	0x000fffff
  401f44:	a010001a 	.word	0xa010001a
  401f48:	00401f71 	.word	0x00401f71
  401f4c:	400e0c00 	.word	0x400e0c00
  401f50:	5a00080c 	.word	0x5a00080c
  401f54:	5a00070c 	.word	0x5a00070c
  401f58:	004022a9 	.word	0x004022a9
  401f5c:	400e0e00 	.word	0x400e0e00
  401f60:	400e1200 	.word	0x400e1200
  401f64:	40088000 	.word	0x40088000
  401f68:	003fffff 	.word	0x003fffff
  401f6c:	03000001 	.word	0x03000001

00401f70 <mpu_enable>:
 *
 * \param dwMPUEnable  Enable/Disable the memory region.
 */
void mpu_enable(uint32_t dw_mpu_enable)
{
	MPU->CTRL = dw_mpu_enable ;
  401f70:	4b01      	ldr	r3, [pc, #4]	; (401f78 <mpu_enable+0x8>)
  401f72:	6058      	str	r0, [r3, #4]
  401f74:	4770      	bx	lr
  401f76:	bf00      	nop
  401f78:	e000ed90 	.word	0xe000ed90

00401f7c <mpu_set_region>:
 * \param dwRegionBaseAddr  Memory region base address.
 * \param dwRegionAttr  Memory region attributes.
 */
void mpu_set_region(uint32_t dw_region_base_addr, uint32_t dw_region_attr)
{
	MPU->RBAR = dw_region_base_addr;
  401f7c:	4b01      	ldr	r3, [pc, #4]	; (401f84 <mpu_set_region+0x8>)
  401f7e:	60d8      	str	r0, [r3, #12]
	MPU->RASR = dw_region_attr;
  401f80:	6119      	str	r1, [r3, #16]
  401f82:	4770      	bx	lr
  401f84:	e000ed90 	.word	0xe000ed90

00401f88 <mpu_cal_mpu_region_size>:
{
	uint32_t dwRegionSize = 32;
	uint32_t dwReturnValue = 4;

	while( dwReturnValue < 31 ) {
		if( dw_actual_size_in_bytes <= dwRegionSize ) {
  401f88:	2820      	cmp	r0, #32
  401f8a:	d90d      	bls.n	401fa8 <mpu_cal_mpu_region_size+0x20>
  401f8c:	2240      	movs	r2, #64	; 0x40
  401f8e:	2305      	movs	r3, #5
  401f90:	e002      	b.n	401f98 <mpu_cal_mpu_region_size+0x10>
			break;
		} else {
			dwReturnValue++;
  401f92:	3301      	adds	r3, #1
	while( dwReturnValue < 31 ) {
  401f94:	2b1f      	cmp	r3, #31
  401f96:	d005      	beq.n	401fa4 <mpu_cal_mpu_region_size+0x1c>
		if( dw_actual_size_in_bytes <= dwRegionSize ) {
  401f98:	4290      	cmp	r0, r2
		}
		dwRegionSize <<= 1;
  401f9a:	ea4f 0242 	mov.w	r2, r2, lsl #1
		if( dw_actual_size_in_bytes <= dwRegionSize ) {
  401f9e:	d8f8      	bhi.n	401f92 <mpu_cal_mpu_region_size+0xa>
  401fa0:	0058      	lsls	r0, r3, #1
  401fa2:	4770      	bx	lr
  401fa4:	203e      	movs	r0, #62	; 0x3e
  401fa6:	4770      	bx	lr
  401fa8:	2008      	movs	r0, #8
	}

	return ( dwReturnValue << 1 );
}
  401faa:	4770      	bx	lr

00401fac <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  401fac:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  401fae:	4770      	bx	lr

00401fb0 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  401fb0:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  401fb2:	4770      	bx	lr

00401fb4 <pio_configure_pin>:
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  401fb4:	4b53      	ldr	r3, [pc, #332]	; (402104 <pio_configure_pin+0x150>)
	switch (ul_flags & PIO_TYPE_Msk) {
  401fb6:	f001 42f0 	and.w	r2, r1, #2013265920	; 0x78000000
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  401fba:	eb03 1350 	add.w	r3, r3, r0, lsr #5
	switch (ul_flags & PIO_TYPE_Msk) {
  401fbe:	f1b2 5f00 	cmp.w	r2, #536870912	; 0x20000000
{
  401fc2:	b470      	push	{r4, r5, r6}
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  401fc4:	ea4f 2343 	mov.w	r3, r3, lsl #9
	switch (ul_flags & PIO_TYPE_Msk) {
  401fc8:	d06d      	beq.n	4020a6 <pio_configure_pin+0xf2>
  401fca:	d80b      	bhi.n	401fe4 <pio_configure_pin+0x30>
  401fcc:	f1b2 5f80 	cmp.w	r2, #268435456	; 0x10000000
  401fd0:	d027      	beq.n	402022 <pio_configure_pin+0x6e>
  401fd2:	f1b2 5fc0 	cmp.w	r2, #402653184	; 0x18000000
  401fd6:	d052      	beq.n	40207e <pio_configure_pin+0xca>
  401fd8:	f1b2 6f00 	cmp.w	r2, #134217728	; 0x8000000
  401fdc:	d038      	beq.n	402050 <pio_configure_pin+0x9c>
		return 0;
  401fde:	2000      	movs	r0, #0
}
  401fe0:	bc70      	pop	{r4, r5, r6}
  401fe2:	4770      	bx	lr
	switch (ul_flags & PIO_TYPE_Msk) {
  401fe4:	f1b2 5f40 	cmp.w	r2, #805306368	; 0x30000000
  401fe8:	d066      	beq.n	4020b8 <pio_configure_pin+0x104>
  401fea:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  401fee:	d063      	beq.n	4020b8 <pio_configure_pin+0x104>
  401ff0:	f1b2 5f20 	cmp.w	r2, #671088640	; 0x28000000
  401ff4:	d1f3      	bne.n	401fde <pio_configure_pin+0x2a>
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  401ff6:	f000 001f 	and.w	r0, r0, #31
  401ffa:	2201      	movs	r2, #1
	if (ul_pull_up_enable) {
  401ffc:	07cd      	lsls	r5, r1, #31
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  401ffe:	fa02 f200 	lsl.w	r2, r2, r0
	p_pio->PIO_IDR = ul_mask;
  402002:	645a      	str	r2, [r3, #68]	; 0x44
	if (ul_pull_up_enable) {
  402004:	d573      	bpl.n	4020ee <pio_configure_pin+0x13a>
		p_pio->PIO_PUER = ul_mask;
  402006:	665a      	str	r2, [r3, #100]	; 0x64
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  402008:	f011 0f0a 	tst.w	r1, #10
  40200c:	d06d      	beq.n	4020ea <pio_configure_pin+0x136>
		p_pio->PIO_IFER = ul_mask;
  40200e:	621a      	str	r2, [r3, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  402010:	078c      	lsls	r4, r1, #30
  402012:	d56e      	bpl.n	4020f2 <pio_configure_pin+0x13e>
		p_pio->PIO_IFSCDR = ul_mask;
  402014:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  402018:	615a      	str	r2, [r3, #20]
	return 1;
  40201a:	2001      	movs	r0, #1
	p_pio->PIO_PER = ul_mask;
  40201c:	601a      	str	r2, [r3, #0]
}
  40201e:	bc70      	pop	{r4, r5, r6}
  402020:	4770      	bx	lr
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  402022:	f000 021f 	and.w	r2, r0, #31
  402026:	2001      	movs	r0, #1
	if (ul_pull_up_enable) {
  402028:	07c9      	lsls	r1, r1, #31
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  40202a:	fa00 f202 	lsl.w	r2, r0, r2
	p_pio->PIO_IDR = ul_mask;
  40202e:	645a      	str	r2, [r3, #68]	; 0x44
		ul_sr = p_pio->PIO_ABCDSR[0];
  402030:	6f1c      	ldr	r4, [r3, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  402032:	ea44 0402 	orr.w	r4, r4, r2
  402036:	671c      	str	r4, [r3, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  402038:	6f5c      	ldr	r4, [r3, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  40203a:	6f5d      	ldr	r5, [r3, #116]	; 0x74
  40203c:	ea04 0405 	and.w	r4, r4, r5
  402040:	ea24 0402 	bic.w	r4, r4, r2
  402044:	675c      	str	r4, [r3, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  402046:	605a      	str	r2, [r3, #4]
	if (ul_pull_up_enable) {
  402048:	d516      	bpl.n	402078 <pio_configure_pin+0xc4>
		p_pio->PIO_PUER = ul_mask;
  40204a:	665a      	str	r2, [r3, #100]	; 0x64
}
  40204c:	bc70      	pop	{r4, r5, r6}
  40204e:	4770      	bx	lr
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  402050:	f000 021f 	and.w	r2, r0, #31
  402054:	2001      	movs	r0, #1
  402056:	fa00 f202 	lsl.w	r2, r0, r2
	p_pio->PIO_IDR = ul_mask;
  40205a:	645a      	str	r2, [r3, #68]	; 0x44
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  40205c:	43d6      	mvns	r6, r2
		ul_sr = p_pio->PIO_ABCDSR[0];
  40205e:	6f1d      	ldr	r5, [r3, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  402060:	6f1c      	ldr	r4, [r3, #112]	; 0x70
  402062:	4025      	ands	r5, r4
  402064:	4035      	ands	r5, r6
  402066:	671d      	str	r5, [r3, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  402068:	6f5c      	ldr	r4, [r3, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  40206a:	6f5d      	ldr	r5, [r3, #116]	; 0x74
  40206c:	402c      	ands	r4, r5
  40206e:	4034      	ands	r4, r6
  402070:	675c      	str	r4, [r3, #116]	; 0x74
	if (ul_pull_up_enable) {
  402072:	07cc      	lsls	r4, r1, #31
	p_pio->PIO_PDR = ul_mask;
  402074:	605a      	str	r2, [r3, #4]
	if (ul_pull_up_enable) {
  402076:	d4e8      	bmi.n	40204a <pio_configure_pin+0x96>
		p_pio->PIO_PUDR = ul_mask;
  402078:	661a      	str	r2, [r3, #96]	; 0x60
}
  40207a:	bc70      	pop	{r4, r5, r6}
  40207c:	4770      	bx	lr
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  40207e:	f000 021f 	and.w	r2, r0, #31
  402082:	2001      	movs	r0, #1
  402084:	fa00 f202 	lsl.w	r2, r0, r2
	p_pio->PIO_IDR = ul_mask;
  402088:	645a      	str	r2, [r3, #68]	; 0x44
		ul_sr = p_pio->PIO_ABCDSR[0];
  40208a:	6f1c      	ldr	r4, [r3, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  40208c:	6f1d      	ldr	r5, [r3, #112]	; 0x70
  40208e:	402c      	ands	r4, r5
  402090:	ea24 0402 	bic.w	r4, r4, r2
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  402094:	671c      	str	r4, [r3, #112]	; 0x70
	if (ul_pull_up_enable) {
  402096:	07ce      	lsls	r6, r1, #31
		ul_sr = p_pio->PIO_ABCDSR[1];
  402098:	6f5c      	ldr	r4, [r3, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  40209a:	ea44 0402 	orr.w	r4, r4, r2
  40209e:	675c      	str	r4, [r3, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  4020a0:	605a      	str	r2, [r3, #4]
	if (ul_pull_up_enable) {
  4020a2:	d5e9      	bpl.n	402078 <pio_configure_pin+0xc4>
  4020a4:	e7d1      	b.n	40204a <pio_configure_pin+0x96>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  4020a6:	f000 021f 	and.w	r2, r0, #31
  4020aa:	2001      	movs	r0, #1
  4020ac:	fa00 f202 	lsl.w	r2, r0, r2
	p_pio->PIO_IDR = ul_mask;
  4020b0:	645a      	str	r2, [r3, #68]	; 0x44
		ul_sr = p_pio->PIO_ABCDSR[0];
  4020b2:	6f1c      	ldr	r4, [r3, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4020b4:	4314      	orrs	r4, r2
  4020b6:	e7ed      	b.n	402094 <pio_configure_pin+0xe0>
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  4020b8:	f000 001f 	and.w	r0, r0, #31
  4020bc:	2201      	movs	r2, #1
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  4020be:	f001 5460 	and.w	r4, r1, #939524096	; 0x38000000
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
  4020c2:	f001 0504 	and.w	r5, r1, #4
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  4020c6:	4082      	lsls	r2, r0
	if (ul_pull_up_enable) {
  4020c8:	07c9      	lsls	r1, r1, #31
	p_pio->PIO_IDR = ul_mask;
  4020ca:	645a      	str	r2, [r3, #68]	; 0x44
	if (ul_pull_up_enable) {
  4020cc:	d50b      	bpl.n	4020e6 <pio_configure_pin+0x132>
		p_pio->PIO_PUER = ul_mask;
  4020ce:	665a      	str	r2, [r3, #100]	; 0x64
	if (ul_multidrive_enable) {
  4020d0:	b1a5      	cbz	r5, 4020fc <pio_configure_pin+0x148>
		p_pio->PIO_MDER = ul_mask;
  4020d2:	651a      	str	r2, [r3, #80]	; 0x50
	if (ul_default_level) {
  4020d4:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
  4020d8:	d012      	beq.n	402100 <pio_configure_pin+0x14c>
		p_pio->PIO_CODR = ul_mask;
  4020da:	635a      	str	r2, [r3, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  4020dc:	611a      	str	r2, [r3, #16]
	return 1;
  4020de:	2001      	movs	r0, #1
	p_pio->PIO_PER = ul_mask;
  4020e0:	601a      	str	r2, [r3, #0]
}
  4020e2:	bc70      	pop	{r4, r5, r6}
  4020e4:	4770      	bx	lr
		p_pio->PIO_PUDR = ul_mask;
  4020e6:	661a      	str	r2, [r3, #96]	; 0x60
  4020e8:	e7f2      	b.n	4020d0 <pio_configure_pin+0x11c>
		p_pio->PIO_IFDR = ul_mask;
  4020ea:	625a      	str	r2, [r3, #36]	; 0x24
  4020ec:	e790      	b.n	402010 <pio_configure_pin+0x5c>
		p_pio->PIO_PUDR = ul_mask;
  4020ee:	661a      	str	r2, [r3, #96]	; 0x60
  4020f0:	e78a      	b.n	402008 <pio_configure_pin+0x54>
		if (ul_attribute & PIO_DEBOUNCE) {
  4020f2:	0708      	lsls	r0, r1, #28
  4020f4:	d590      	bpl.n	402018 <pio_configure_pin+0x64>
			p_pio->PIO_IFSCER = ul_mask;
  4020f6:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  4020fa:	e78d      	b.n	402018 <pio_configure_pin+0x64>
		p_pio->PIO_MDDR = ul_mask;
  4020fc:	655a      	str	r2, [r3, #84]	; 0x54
  4020fe:	e7e9      	b.n	4020d4 <pio_configure_pin+0x120>
		p_pio->PIO_SODR = ul_mask;
  402100:	631a      	str	r2, [r3, #48]	; 0x30
  402102:	e7eb      	b.n	4020dc <pio_configure_pin+0x128>
  402104:	00200707 	.word	0x00200707

00402108 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  402108:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40210a:	4604      	mov	r4, r0
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  40210c:	4b0f      	ldr	r3, [pc, #60]	; (40214c <pio_handler_process+0x44>)
{
  40210e:	460f      	mov	r7, r1
	status = pio_get_interrupt_status(p_pio);
  402110:	4798      	blx	r3
  402112:	4606      	mov	r6, r0
	status &= pio_get_interrupt_mask(p_pio);
  402114:	4b0e      	ldr	r3, [pc, #56]	; (402150 <pio_handler_process+0x48>)
  402116:	4620      	mov	r0, r4
  402118:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  40211a:	4006      	ands	r6, r0
  40211c:	d015      	beq.n	40214a <pio_handler_process+0x42>
  40211e:	4c0d      	ldr	r4, [pc, #52]	; (402154 <pio_handler_process+0x4c>)
  402120:	2500      	movs	r5, #0
  402122:	e004      	b.n	40212e <pio_handler_process+0x26>
		/* Find triggering source */
		i = 0;
		while (status != 0) {
  402124:	2d07      	cmp	r5, #7
  402126:	f104 0410 	add.w	r4, r4, #16
  40212a:	d00e      	beq.n	40214a <pio_handler_process+0x42>
  40212c:	b16e      	cbz	r6, 40214a <pio_handler_process+0x42>
			/* Source is configured on the same controller */
			if (gs_interrupt_sources[i].id == ul_id) {
  40212e:	6823      	ldr	r3, [r4, #0]
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
  402130:	3501      	adds	r5, #1
			if (gs_interrupt_sources[i].id == ul_id) {
  402132:	42bb      	cmp	r3, r7
  402134:	d1f6      	bne.n	402124 <pio_handler_process+0x1c>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402136:	6861      	ldr	r1, [r4, #4]
  402138:	4231      	tst	r1, r6
  40213a:	d0f3      	beq.n	402124 <pio_handler_process+0x1c>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  40213c:	68e3      	ldr	r3, [r4, #12]
  40213e:	4638      	mov	r0, r7
  402140:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  402142:	6863      	ldr	r3, [r4, #4]
  402144:	ea26 0603 	bic.w	r6, r6, r3
  402148:	e7ec      	b.n	402124 <pio_handler_process+0x1c>
  40214a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40214c:	00401fad 	.word	0x00401fad
  402150:	00401fb1 	.word	0x00401fb1
  402154:	20409a28 	.word	0x20409a28

00402158 <PIOA_Handler>:
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
	pio_handler_process(PIOA, ID_PIOA);
  402158:	210a      	movs	r1, #10
  40215a:	4801      	ldr	r0, [pc, #4]	; (402160 <PIOA_Handler+0x8>)
  40215c:	4b01      	ldr	r3, [pc, #4]	; (402164 <PIOA_Handler+0xc>)
  40215e:	4718      	bx	r3
  402160:	400e0e00 	.word	0x400e0e00
  402164:	00402109 	.word	0x00402109

00402168 <PIOB_Handler>:
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
    pio_handler_process(PIOB, ID_PIOB);
  402168:	210b      	movs	r1, #11
  40216a:	4801      	ldr	r0, [pc, #4]	; (402170 <PIOB_Handler+0x8>)
  40216c:	4b01      	ldr	r3, [pc, #4]	; (402174 <PIOB_Handler+0xc>)
  40216e:	4718      	bx	r3
  402170:	400e1000 	.word	0x400e1000
  402174:	00402109 	.word	0x00402109

00402178 <PIOC_Handler>:
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
	pio_handler_process(PIOC, ID_PIOC);
  402178:	210c      	movs	r1, #12
  40217a:	4801      	ldr	r0, [pc, #4]	; (402180 <PIOC_Handler+0x8>)
  40217c:	4b01      	ldr	r3, [pc, #4]	; (402184 <PIOC_Handler+0xc>)
  40217e:	4718      	bx	r3
  402180:	400e1200 	.word	0x400e1200
  402184:	00402109 	.word	0x00402109

00402188 <PIOD_Handler>:
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
	pio_handler_process(PIOD, ID_PIOD);
  402188:	2110      	movs	r1, #16
  40218a:	4801      	ldr	r0, [pc, #4]	; (402190 <PIOD_Handler+0x8>)
  40218c:	4b01      	ldr	r3, [pc, #4]	; (402194 <PIOD_Handler+0xc>)
  40218e:	4718      	bx	r3
  402190:	400e1400 	.word	0x400e1400
  402194:	00402109 	.word	0x00402109

00402198 <PIOE_Handler>:
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
	pio_handler_process(PIOE, ID_PIOE);
  402198:	2111      	movs	r1, #17
  40219a:	4801      	ldr	r0, [pc, #4]	; (4021a0 <PIOE_Handler+0x8>)
  40219c:	4b01      	ldr	r3, [pc, #4]	; (4021a4 <PIOE_Handler+0xc>)
  40219e:	4718      	bx	r3
  4021a0:	400e1600 	.word	0x400e1600
  4021a4:	00402109 	.word	0x00402109

004021a8 <pmc_mck_set_division>:
 * \brief Set the division of the MCK.
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
  4021a8:	3802      	subs	r0, #2
  4021aa:	2802      	cmp	r0, #2
  4021ac:	d80d      	bhi.n	4021ca <pmc_mck_set_division+0x22>
  4021ae:	4b08      	ldr	r3, [pc, #32]	; (4021d0 <pmc_mck_set_division+0x28>)
  4021b0:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  4021b4:	4907      	ldr	r1, [pc, #28]	; (4021d4 <pmc_mck_set_division+0x2c>)
  4021b6:	6b0b      	ldr	r3, [r1, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4021b8:	460a      	mov	r2, r1
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  4021ba:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  4021be:	4303      	orrs	r3, r0
	PMC->PMC_MCKR =
  4021c0:	630b      	str	r3, [r1, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4021c2:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4021c4:	071b      	lsls	r3, r3, #28
  4021c6:	d5fc      	bpl.n	4021c2 <pmc_mck_set_division+0x1a>
}
  4021c8:	4770      	bx	lr
{
  4021ca:	2000      	movs	r0, #0
  4021cc:	e7f2      	b.n	4021b4 <pmc_mck_set_division+0xc>
  4021ce:	bf00      	nop
  4021d0:	0040efe4 	.word	0x0040efe4
  4021d4:	400e0600 	.word	0x400e0600

004021d8 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  4021d8:	4913      	ldr	r1, [pc, #76]	; (402228 <pmc_switch_mck_to_pllack+0x50>)
  4021da:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4021dc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  4021e0:	4318      	orrs	r0, r3
  4021e2:	6308      	str	r0, [r1, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4021e4:	6e8b      	ldr	r3, [r1, #104]	; 0x68
  4021e6:	0718      	lsls	r0, r3, #28
  4021e8:	d407      	bmi.n	4021fa <pmc_switch_mck_to_pllack+0x22>
  4021ea:	f44f 6300 	mov.w	r3, #2048	; 0x800
  4021ee:	e001      	b.n	4021f4 <pmc_switch_mck_to_pllack+0x1c>
			--ul_timeout) {
		if (ul_timeout == 0) {
  4021f0:	3b01      	subs	r3, #1
  4021f2:	d016      	beq.n	402222 <pmc_switch_mck_to_pllack+0x4a>
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4021f4:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  4021f6:	0712      	lsls	r2, r2, #28
  4021f8:	d5fa      	bpl.n	4021f0 <pmc_switch_mck_to_pllack+0x18>
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  4021fa:	490b      	ldr	r1, [pc, #44]	; (402228 <pmc_switch_mck_to_pllack+0x50>)
  4021fc:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4021fe:	f023 0303 	bic.w	r3, r3, #3
  402202:	f043 0302 	orr.w	r3, r3, #2
  402206:	630b      	str	r3, [r1, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  402208:	6e8b      	ldr	r3, [r1, #104]	; 0x68
  40220a:	0718      	lsls	r0, r3, #28
  40220c:	d407      	bmi.n	40221e <pmc_switch_mck_to_pllack+0x46>
  40220e:	f44f 6300 	mov.w	r3, #2048	; 0x800
  402212:	e001      	b.n	402218 <pmc_switch_mck_to_pllack+0x40>
			--ul_timeout) {
		if (ul_timeout == 0) {
  402214:	3b01      	subs	r3, #1
  402216:	d004      	beq.n	402222 <pmc_switch_mck_to_pllack+0x4a>
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  402218:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  40221a:	0712      	lsls	r2, r2, #28
  40221c:	d5fa      	bpl.n	402214 <pmc_switch_mck_to_pllack+0x3c>
			return 1;
		}
	}

	return 0;
  40221e:	2000      	movs	r0, #0
}
  402220:	4770      	bx	lr
			return 1;
  402222:	2001      	movs	r0, #1
  402224:	4770      	bx	lr
  402226:	bf00      	nop
  402228:	400e0600 	.word	0x400e0600

0040222c <pmc_switch_mainck_to_fastrc>:
 * \retval 2 Invalid frequency.
 */
void pmc_switch_mainck_to_fastrc(uint32_t ul_moscrcf)
{
	/* Enable Fast RC oscillator but DO NOT switch to RC now */
	PMC->CKGR_MOR |= (CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCRCEN);
  40222c:	4a0e      	ldr	r2, [pc, #56]	; (402268 <pmc_switch_mainck_to_fastrc+0x3c>)
{
  40222e:	b410      	push	{r4}
	PMC->CKGR_MOR |= (CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCRCEN);
  402230:	4c0e      	ldr	r4, [pc, #56]	; (40226c <pmc_switch_mainck_to_fastrc+0x40>)

	/* Wait the Fast RC to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  402232:	4611      	mov	r1, r2
	PMC->CKGR_MOR |= (CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCRCEN);
  402234:	6a13      	ldr	r3, [r2, #32]
  402236:	431c      	orrs	r4, r3
  402238:	6214      	str	r4, [r2, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  40223a:	6e8b      	ldr	r3, [r1, #104]	; 0x68
  40223c:	039a      	lsls	r2, r3, #14
  40223e:	d5fc      	bpl.n	40223a <pmc_switch_mainck_to_fastrc+0xe>

	/* Change Fast RC oscillator frequency */
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCF_Msk) |
  402240:	6a0c      	ldr	r4, [r1, #32]
  402242:	4b0b      	ldr	r3, [pc, #44]	; (402270 <pmc_switch_mainck_to_fastrc+0x44>)
			CKGR_MOR_KEY_PASSWD | ul_moscrcf;

	/* Wait the Fast RC to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  402244:	4a08      	ldr	r2, [pc, #32]	; (402268 <pmc_switch_mainck_to_fastrc+0x3c>)
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCF_Msk) |
  402246:	4023      	ands	r3, r4
			CKGR_MOR_KEY_PASSWD | ul_moscrcf;
  402248:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  40224c:	4318      	orrs	r0, r3
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCF_Msk) |
  40224e:	6208      	str	r0, [r1, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  402250:	6e93      	ldr	r3, [r2, #104]	; 0x68
  402252:	039b      	lsls	r3, r3, #14
  402254:	d5fc      	bpl.n	402250 <pmc_switch_mainck_to_fastrc+0x24>

	/* Switch to Fast RC */
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCSEL) |
  402256:	6a11      	ldr	r1, [r2, #32]
  402258:	4b06      	ldr	r3, [pc, #24]	; (402274 <pmc_switch_mainck_to_fastrc+0x48>)
  40225a:	400b      	ands	r3, r1
  40225c:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  402260:	6213      	str	r3, [r2, #32]
			CKGR_MOR_KEY_PASSWD;
}
  402262:	f85d 4b04 	ldr.w	r4, [sp], #4
  402266:	4770      	bx	lr
  402268:	400e0600 	.word	0x400e0600
  40226c:	00370008 	.word	0x00370008
  402270:	ffc8ff8f 	.word	0xffc8ff8f
  402274:	fec8ffff 	.word	0xfec8ffff

00402278 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  402278:	4b02      	ldr	r3, [pc, #8]	; (402284 <pmc_osc_is_ready_mainck+0xc>)
  40227a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  40227c:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  402280:	4770      	bx	lr
  402282:	bf00      	nop
  402284:	400e0600 	.word	0x400e0600

00402288 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  402288:	4b02      	ldr	r3, [pc, #8]	; (402294 <pmc_disable_pllack+0xc>)
  40228a:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  40228e:	629a      	str	r2, [r3, #40]	; 0x28
  402290:	4770      	bx	lr
  402292:	bf00      	nop
  402294:	400e0600 	.word	0x400e0600

00402298 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  402298:	4b02      	ldr	r3, [pc, #8]	; (4022a4 <pmc_is_locked_pllack+0xc>)
  40229a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  40229c:	f000 0002 	and.w	r0, r0, #2
  4022a0:	4770      	bx	lr
  4022a2:	bf00      	nop
  4022a4:	400e0600 	.word	0x400e0600

004022a8 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  4022a8:	283f      	cmp	r0, #63	; 0x3f
  4022aa:	d81a      	bhi.n	4022e2 <pmc_enable_periph_clk+0x3a>
		return 1;
	}

	if (ul_id < 32) {
  4022ac:	281f      	cmp	r0, #31
  4022ae:	d80a      	bhi.n	4022c6 <pmc_enable_periph_clk+0x1e>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  4022b0:	2301      	movs	r3, #1
  4022b2:	4a0e      	ldr	r2, [pc, #56]	; (4022ec <pmc_enable_periph_clk+0x44>)
  4022b4:	fa03 f000 	lsl.w	r0, r3, r0
  4022b8:	6991      	ldr	r1, [r2, #24]
  4022ba:	ea30 0301 	bics.w	r3, r0, r1
  4022be:	d012      	beq.n	4022e6 <pmc_enable_periph_clk+0x3e>
			PMC->PMC_PCER0 = 1 << ul_id;
  4022c0:	6110      	str	r0, [r2, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  4022c2:	2000      	movs	r0, #0
  4022c4:	4770      	bx	lr
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  4022c6:	2301      	movs	r3, #1
		ul_id -= 32;
  4022c8:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  4022ca:	4a08      	ldr	r2, [pc, #32]	; (4022ec <pmc_enable_periph_clk+0x44>)
  4022cc:	fa03 f000 	lsl.w	r0, r3, r0
  4022d0:	f8d2 3108 	ldr.w	r3, [r2, #264]	; 0x108
  4022d4:	ea30 0303 	bics.w	r3, r0, r3
  4022d8:	d005      	beq.n	4022e6 <pmc_enable_periph_clk+0x3e>
			PMC->PMC_PCER1 = 1 << ul_id;
  4022da:	f8c2 0100 	str.w	r0, [r2, #256]	; 0x100
	return 0;
  4022de:	2000      	movs	r0, #0
  4022e0:	4770      	bx	lr
		return 1;
  4022e2:	2001      	movs	r0, #1
  4022e4:	4770      	bx	lr
	return 0;
  4022e6:	2000      	movs	r0, #0
}
  4022e8:	4770      	bx	lr
  4022ea:	bf00      	nop
  4022ec:	400e0600 	.word	0x400e0600

004022f0 <pmc_pck_set_prescaler>:
 *
 * \param ul_id Peripheral ID.
 * \param ul_pres Prescaler value.
 */
void pmc_pck_set_prescaler(uint32_t ul_id, uint32_t ul_pres)
{
  4022f0:	4b0b      	ldr	r3, [pc, #44]	; (402320 <pmc_pck_set_prescaler+0x30>)
  4022f2:	f44f 7280 	mov.w	r2, #256	; 0x100
  4022f6:	b410      	push	{r4}
  4022f8:	eb03 0480 	add.w	r4, r3, r0, lsl #2
  4022fc:	fa02 f000 	lsl.w	r0, r2, r0
	PMC->PMC_PCK[ul_id] =
			(PMC->PMC_PCK[ul_id] & ~PMC_PCK_PRES_Msk) | ul_pres;
  402300:	6c22      	ldr	r2, [r4, #64]	; 0x40
  402302:	f422 627f 	bic.w	r2, r2, #4080	; 0xff0
  402306:	4311      	orrs	r1, r2
	PMC->PMC_PCK[ul_id] =
  402308:	6421      	str	r1, [r4, #64]	; 0x40
	while ((PMC->PMC_SCER & (PMC_SCER_PCK0 << ul_id))
  40230a:	e002      	b.n	402312 <pmc_pck_set_prescaler+0x22>
			&& !(PMC->PMC_SR & (PMC_SR_PCKRDY0 << ul_id)));
  40230c:	6e9a      	ldr	r2, [r3, #104]	; 0x68
  40230e:	4202      	tst	r2, r0
  402310:	d102      	bne.n	402318 <pmc_pck_set_prescaler+0x28>
	while ((PMC->PMC_SCER & (PMC_SCER_PCK0 << ul_id))
  402312:	681a      	ldr	r2, [r3, #0]
  402314:	4202      	tst	r2, r0
  402316:	d1f9      	bne.n	40230c <pmc_pck_set_prescaler+0x1c>
}
  402318:	f85d 4b04 	ldr.w	r4, [sp], #4
  40231c:	4770      	bx	lr
  40231e:	bf00      	nop
  402320:	400e0600 	.word	0x400e0600

00402324 <pmc_pck_set_source>:
 *
 * \param ul_id Peripheral ID.
 * \param ul_source Source selection value.
 */
void pmc_pck_set_source(uint32_t ul_id, uint32_t ul_source)
{
  402324:	4b0b      	ldr	r3, [pc, #44]	; (402354 <pmc_pck_set_source+0x30>)
  402326:	f44f 7280 	mov.w	r2, #256	; 0x100
  40232a:	b410      	push	{r4}
  40232c:	eb03 0480 	add.w	r4, r3, r0, lsl #2
  402330:	fa02 f000 	lsl.w	r0, r2, r0
	PMC->PMC_PCK[ul_id] =
			(PMC->PMC_PCK[ul_id] & ~PMC_PCK_CSS_Msk) | ul_source;
  402334:	6c22      	ldr	r2, [r4, #64]	; 0x40
  402336:	f022 0207 	bic.w	r2, r2, #7
  40233a:	4311      	orrs	r1, r2
	PMC->PMC_PCK[ul_id] =
  40233c:	6421      	str	r1, [r4, #64]	; 0x40
	while ((PMC->PMC_SCER & (PMC_SCER_PCK0 << ul_id))
  40233e:	e002      	b.n	402346 <pmc_pck_set_source+0x22>
			&& !(PMC->PMC_SR & (PMC_SR_PCKRDY0 << ul_id)));
  402340:	6e9a      	ldr	r2, [r3, #104]	; 0x68
  402342:	4202      	tst	r2, r0
  402344:	d102      	bne.n	40234c <pmc_pck_set_source+0x28>
	while ((PMC->PMC_SCER & (PMC_SCER_PCK0 << ul_id))
  402346:	681a      	ldr	r2, [r3, #0]
  402348:	4202      	tst	r2, r0
  40234a:	d1f9      	bne.n	402340 <pmc_pck_set_source+0x1c>
}
  40234c:	f85d 4b04 	ldr.w	r4, [sp], #4
  402350:	4770      	bx	lr
  402352:	bf00      	nop
  402354:	400e0600 	.word	0x400e0600

00402358 <pmc_enable_pck>:
 *
 * \param ul_id Id of the programmable clock.
 */
void pmc_enable_pck(uint32_t ul_id)
{
	PMC->PMC_SCER = PMC_SCER_PCK0 << ul_id;
  402358:	f44f 7380 	mov.w	r3, #256	; 0x100
  40235c:	4a02      	ldr	r2, [pc, #8]	; (402368 <pmc_enable_pck+0x10>)
  40235e:	fa03 f000 	lsl.w	r0, r3, r0
  402362:	6010      	str	r0, [r2, #0]
  402364:	4770      	bx	lr
  402366:	bf00      	nop
  402368:	400e0600 	.word	0x400e0600

0040236c <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  40236c:	e7fe      	b.n	40236c <Dummy_Handler>
  40236e:	bf00      	nop

00402370 <Dummy_Handler2>:
	while (1) {
	}
}

void Dummy_Handler2(void)
{
  402370:	e7fe      	b.n	402370 <Dummy_Handler2>
  402372:	bf00      	nop

00402374 <Reset_Handler>:
        if (pSrc != pDest) {
  402374:	4924      	ldr	r1, [pc, #144]	; (402408 <Reset_Handler+0x94>)
  402376:	4a25      	ldr	r2, [pc, #148]	; (40240c <Reset_Handler+0x98>)
  402378:	4291      	cmp	r1, r2
{
  40237a:	b500      	push	{lr}
  40237c:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  40237e:	d00e      	beq.n	40239e <Reset_Handler+0x2a>
                for (; pDest < &_erelocate;) {
  402380:	4823      	ldr	r0, [pc, #140]	; (402410 <Reset_Handler+0x9c>)
  402382:	4282      	cmp	r2, r0
  402384:	d20b      	bcs.n	40239e <Reset_Handler+0x2a>
  402386:	43d3      	mvns	r3, r2
  402388:	4403      	add	r3, r0
  40238a:	f023 0303 	bic.w	r3, r3, #3
  40238e:	3304      	adds	r3, #4
  402390:	4413      	add	r3, r2
                        *pDest++ = *pSrc++;
  402392:	f851 0b04 	ldr.w	r0, [r1], #4
  402396:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  40239a:	429a      	cmp	r2, r3
  40239c:	d1f9      	bne.n	402392 <Reset_Handler+0x1e>
        for (pDest = &_szero; pDest < &_ezero;) {
  40239e:	4a1d      	ldr	r2, [pc, #116]	; (402414 <Reset_Handler+0xa0>)
  4023a0:	491d      	ldr	r1, [pc, #116]	; (402418 <Reset_Handler+0xa4>)
  4023a2:	428a      	cmp	r2, r1
  4023a4:	d20a      	bcs.n	4023bc <Reset_Handler+0x48>
  4023a6:	43d3      	mvns	r3, r2
                *pDest++ = 0;
  4023a8:	2000      	movs	r0, #0
  4023aa:	440b      	add	r3, r1
  4023ac:	f023 0303 	bic.w	r3, r3, #3
  4023b0:	3304      	adds	r3, #4
  4023b2:	4413      	add	r3, r2
  4023b4:	f842 0b04 	str.w	r0, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  4023b8:	429a      	cmp	r2, r3
  4023ba:	d1fb      	bne.n	4023b4 <Reset_Handler+0x40>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  4023bc:	4b17      	ldr	r3, [pc, #92]	; (40241c <Reset_Handler+0xa8>)
  4023be:	4a18      	ldr	r2, [pc, #96]	; (402420 <Reset_Handler+0xac>)
  4023c0:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  4023c4:	6093      	str	r3, [r2, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  4023c6:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  4023ca:	fab3 f383 	clz	r3, r3
  4023ce:	095b      	lsrs	r3, r3, #5
  4023d0:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  4023d2:	b672      	cpsid	i
  __ASM volatile ("dmb");
  4023d4:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  4023d8:	4a12      	ldr	r2, [pc, #72]	; (402424 <Reset_Handler+0xb0>)
  4023da:	2300      	movs	r3, #0
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  4023dc:	4912      	ldr	r1, [pc, #72]	; (402428 <Reset_Handler+0xb4>)
  4023de:	7013      	strb	r3, [r2, #0]
	return flags;
  4023e0:	9801      	ldr	r0, [sp, #4]
  4023e2:	680b      	ldr	r3, [r1, #0]
  4023e4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  4023e8:	600b      	str	r3, [r1, #0]
  __ASM volatile ("dsb");
  4023ea:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  4023ee:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  4023f2:	b120      	cbz	r0, 4023fe <Reset_Handler+0x8a>
		cpu_irq_enable();
  4023f4:	2301      	movs	r3, #1
  4023f6:	7013      	strb	r3, [r2, #0]
  __ASM volatile ("dmb");
  4023f8:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4023fc:	b662      	cpsie	i
        __libc_init_array();
  4023fe:	4b0b      	ldr	r3, [pc, #44]	; (40242c <Reset_Handler+0xb8>)
  402400:	4798      	blx	r3
        main();
  402402:	4b0b      	ldr	r3, [pc, #44]	; (402430 <Reset_Handler+0xbc>)
  402404:	4798      	blx	r3
  402406:	e7fe      	b.n	402406 <Reset_Handler+0x92>
  402408:	0040f1c0 	.word	0x0040f1c0
  40240c:	20400000 	.word	0x20400000
  402410:	204009e8 	.word	0x204009e8
  402414:	20401000 	.word	0x20401000
  402418:	204425a4 	.word	0x204425a4
  40241c:	00400000 	.word	0x00400000
  402420:	e000ed00 	.word	0xe000ed00
  402424:	20400030 	.word	0x20400030
  402428:	e000ed88 	.word	0xe000ed88
  40242c:	00403429 	.word	0x00403429
  402430:	00402831 	.word	0x00402831

00402434 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  402434:	4a31      	ldr	r2, [pc, #196]	; (4024fc <SystemCoreClockUpdate+0xc8>)
  402436:	6b13      	ldr	r3, [r2, #48]	; 0x30
  402438:	f003 0303 	and.w	r3, r3, #3
  40243c:	2b01      	cmp	r3, #1
  40243e:	d03d      	beq.n	4024bc <SystemCoreClockUpdate+0x88>
  402440:	d326      	bcc.n	402490 <SystemCoreClockUpdate+0x5c>
  402442:	2b02      	cmp	r3, #2
  402444:	d00d      	beq.n	402462 <SystemCoreClockUpdate+0x2e>
  402446:	492e      	ldr	r1, [pc, #184]	; (402500 <SystemCoreClockUpdate+0xcc>)
  402448:	680b      	ldr	r3, [r1, #0]

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  40244a:	482c      	ldr	r0, [pc, #176]	; (4024fc <SystemCoreClockUpdate+0xc8>)
  40244c:	6b02      	ldr	r2, [r0, #48]	; 0x30
  40244e:	f002 0270 	and.w	r2, r2, #112	; 0x70
  402452:	2a70      	cmp	r2, #112	; 0x70
  402454:	d02c      	beq.n	4024b0 <SystemCoreClockUpdate+0x7c>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  402456:	6b02      	ldr	r2, [r0, #48]	; 0x30
  402458:	f3c2 1202 	ubfx	r2, r2, #4, #3
  40245c:	40d3      	lsrs	r3, r2
  40245e:	600b      	str	r3, [r1, #0]
  402460:	4770      	bx	lr
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  402462:	6a13      	ldr	r3, [r2, #32]
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  402464:	4926      	ldr	r1, [pc, #152]	; (402500 <SystemCoreClockUpdate+0xcc>)
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  402466:	01db      	lsls	r3, r3, #7
  402468:	d538      	bpl.n	4024dc <SystemCoreClockUpdate+0xa8>
            SystemCoreClock *= 3U;
  40246a:	4b26      	ldr	r3, [pc, #152]	; (402504 <SystemCoreClockUpdate+0xd0>)
  40246c:	600b      	str	r3, [r1, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  40246e:	4823      	ldr	r0, [pc, #140]	; (4024fc <SystemCoreClockUpdate+0xc8>)
  402470:	6b02      	ldr	r2, [r0, #48]	; 0x30
  402472:	f002 0203 	and.w	r2, r2, #3
  402476:	2a02      	cmp	r2, #2
  402478:	d1e7      	bne.n	40244a <SystemCoreClockUpdate+0x16>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  40247a:	6a82      	ldr	r2, [r0, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  40247c:	6a80      	ldr	r0, [r0, #40]	; 0x28
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  40247e:	f3c2 420a 	ubfx	r2, r2, #16, #11
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  402482:	b2c0      	uxtb	r0, r0
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  402484:	fb02 3303 	mla	r3, r2, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  402488:	fbb3 f3f0 	udiv	r3, r3, r0
  40248c:	600b      	str	r3, [r1, #0]
  40248e:	e7dc      	b.n	40244a <SystemCoreClockUpdate+0x16>
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  402490:	4b1d      	ldr	r3, [pc, #116]	; (402508 <SystemCoreClockUpdate+0xd4>)
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  402492:	491b      	ldr	r1, [pc, #108]	; (402500 <SystemCoreClockUpdate+0xcc>)
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  402494:	695b      	ldr	r3, [r3, #20]
  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  402496:	4819      	ldr	r0, [pc, #100]	; (4024fc <SystemCoreClockUpdate+0xc8>)
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  402498:	061b      	lsls	r3, r3, #24
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  40249a:	bf4c      	ite	mi
  40249c:	f44f 4300 	movmi.w	r3, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  4024a0:	f44f 43fa 	movpl.w	r3, #32000	; 0x7d00
  4024a4:	600b      	str	r3, [r1, #0]
  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  4024a6:	6b02      	ldr	r2, [r0, #48]	; 0x30
  4024a8:	f002 0270 	and.w	r2, r2, #112	; 0x70
  4024ac:	2a70      	cmp	r2, #112	; 0x70
  4024ae:	d1d2      	bne.n	402456 <SystemCoreClockUpdate+0x22>
    SystemCoreClock /= 3U;
  4024b0:	4a16      	ldr	r2, [pc, #88]	; (40250c <SystemCoreClockUpdate+0xd8>)
  4024b2:	fba2 2303 	umull	r2, r3, r2, r3
  4024b6:	085b      	lsrs	r3, r3, #1
  4024b8:	600b      	str	r3, [r1, #0]
  4024ba:	4770      	bx	lr
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4024bc:	6a13      	ldr	r3, [r2, #32]
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  4024be:	4910      	ldr	r1, [pc, #64]	; (402500 <SystemCoreClockUpdate+0xcc>)
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4024c0:	01d8      	lsls	r0, r3, #7
  4024c2:	d408      	bmi.n	4024d6 <SystemCoreClockUpdate+0xa2>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4024c4:	4b12      	ldr	r3, [pc, #72]	; (402510 <SystemCoreClockUpdate+0xdc>)
  4024c6:	600b      	str	r3, [r1, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  4024c8:	6a12      	ldr	r2, [r2, #32]
  4024ca:	f002 0270 	and.w	r2, r2, #112	; 0x70
  4024ce:	2a10      	cmp	r2, #16
  4024d0:	d011      	beq.n	4024f6 <SystemCoreClockUpdate+0xc2>
  4024d2:	2a20      	cmp	r2, #32
  4024d4:	d1b9      	bne.n	40244a <SystemCoreClockUpdate+0x16>
            SystemCoreClock *= 3U;
  4024d6:	4b0b      	ldr	r3, [pc, #44]	; (402504 <SystemCoreClockUpdate+0xd0>)
  4024d8:	600b      	str	r3, [r1, #0]
          break;
  4024da:	e7b6      	b.n	40244a <SystemCoreClockUpdate+0x16>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4024dc:	4b0c      	ldr	r3, [pc, #48]	; (402510 <SystemCoreClockUpdate+0xdc>)
  4024de:	600b      	str	r3, [r1, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  4024e0:	6a12      	ldr	r2, [r2, #32]
  4024e2:	f002 0270 	and.w	r2, r2, #112	; 0x70
  4024e6:	2a10      	cmp	r2, #16
  4024e8:	d002      	beq.n	4024f0 <SystemCoreClockUpdate+0xbc>
  4024ea:	2a20      	cmp	r2, #32
  4024ec:	d0bd      	beq.n	40246a <SystemCoreClockUpdate+0x36>
  4024ee:	e7be      	b.n	40246e <SystemCoreClockUpdate+0x3a>
            SystemCoreClock *= 2U;
  4024f0:	4b08      	ldr	r3, [pc, #32]	; (402514 <SystemCoreClockUpdate+0xe0>)
  4024f2:	600b      	str	r3, [r1, #0]
          break;
  4024f4:	e7bb      	b.n	40246e <SystemCoreClockUpdate+0x3a>
            SystemCoreClock *= 2U;
  4024f6:	4b07      	ldr	r3, [pc, #28]	; (402514 <SystemCoreClockUpdate+0xe0>)
  4024f8:	600b      	str	r3, [r1, #0]
          break;
  4024fa:	e7a6      	b.n	40244a <SystemCoreClockUpdate+0x16>
  4024fc:	400e0600 	.word	0x400e0600
  402500:	20400034 	.word	0x20400034
  402504:	00b71b00 	.word	0x00b71b00
  402508:	400e1810 	.word	0x400e1810
  40250c:	aaaaaaab 	.word	0xaaaaaaab
  402510:	003d0900 	.word	0x003d0900
  402514:	007a1200 	.word	0x007a1200

00402518 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  402518:	4b16      	ldr	r3, [pc, #88]	; (402574 <system_init_flash+0x5c>)
  40251a:	4298      	cmp	r0, r3
  40251c:	d917      	bls.n	40254e <system_init_flash+0x36>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  40251e:	4b16      	ldr	r3, [pc, #88]	; (402578 <system_init_flash+0x60>)
  402520:	4298      	cmp	r0, r3
  402522:	d910      	bls.n	402546 <system_init_flash+0x2e>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  402524:	4b15      	ldr	r3, [pc, #84]	; (40257c <system_init_flash+0x64>)
  402526:	4298      	cmp	r0, r3
  402528:	d91a      	bls.n	402560 <system_init_flash+0x48>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  40252a:	4b15      	ldr	r3, [pc, #84]	; (402580 <system_init_flash+0x68>)
  40252c:	4298      	cmp	r0, r3
  40252e:	d913      	bls.n	402558 <system_init_flash+0x40>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  402530:	4b14      	ldr	r3, [pc, #80]	; (402584 <system_init_flash+0x6c>)
  402532:	4298      	cmp	r0, r3
  402534:	d918      	bls.n	402568 <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  402536:	4b14      	ldr	r3, [pc, #80]	; (402588 <system_init_flash+0x70>)
  402538:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  40253a:	4b14      	ldr	r3, [pc, #80]	; (40258c <system_init_flash+0x74>)
  40253c:	bf94      	ite	ls
  40253e:	4a14      	ldrls	r2, [pc, #80]	; (402590 <system_init_flash+0x78>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  402540:	4a14      	ldrhi	r2, [pc, #80]	; (402594 <system_init_flash+0x7c>)
  402542:	601a      	str	r2, [r3, #0]
  402544:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  402546:	4b11      	ldr	r3, [pc, #68]	; (40258c <system_init_flash+0x74>)
  402548:	4a13      	ldr	r2, [pc, #76]	; (402598 <system_init_flash+0x80>)
  40254a:	601a      	str	r2, [r3, #0]
  40254c:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  40254e:	4b0f      	ldr	r3, [pc, #60]	; (40258c <system_init_flash+0x74>)
  402550:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  402554:	601a      	str	r2, [r3, #0]
  402556:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  402558:	4b0c      	ldr	r3, [pc, #48]	; (40258c <system_init_flash+0x74>)
  40255a:	4a10      	ldr	r2, [pc, #64]	; (40259c <system_init_flash+0x84>)
  40255c:	601a      	str	r2, [r3, #0]
  40255e:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  402560:	4b0a      	ldr	r3, [pc, #40]	; (40258c <system_init_flash+0x74>)
  402562:	4a0f      	ldr	r2, [pc, #60]	; (4025a0 <system_init_flash+0x88>)
  402564:	601a      	str	r2, [r3, #0]
  402566:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  402568:	4b08      	ldr	r3, [pc, #32]	; (40258c <system_init_flash+0x74>)
  40256a:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  40256e:	601a      	str	r2, [r3, #0]
  402570:	4770      	bx	lr
  402572:	bf00      	nop
  402574:	015ef3bf 	.word	0x015ef3bf
  402578:	02bde77f 	.word	0x02bde77f
  40257c:	041cdb3f 	.word	0x041cdb3f
  402580:	057bceff 	.word	0x057bceff
  402584:	06dac2bf 	.word	0x06dac2bf
  402588:	0839b67f 	.word	0x0839b67f
  40258c:	400e0c00 	.word	0x400e0c00
  402590:	04000500 	.word	0x04000500
  402594:	04000600 	.word	0x04000600
  402598:	04000100 	.word	0x04000100
  40259c:	04000300 	.word	0x04000300
  4025a0:	04000200 	.word	0x04000200

004025a4 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  4025a4:	4a0d      	ldr	r2, [pc, #52]	; (4025dc <_sbrk+0x38>)
	int ramend = (int)&__ram_end__;
  4025a6:	490e      	ldr	r1, [pc, #56]	; (4025e0 <_sbrk+0x3c>)
	if (heap == NULL) {
  4025a8:	6813      	ldr	r3, [r2, #0]
  4025aa:	b143      	cbz	r3, 4025be <_sbrk+0x1a>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
  4025ac:	4418      	add	r0, r3
  4025ae:	4281      	cmp	r1, r0
  4025b0:	db02      	blt.n	4025b8 <_sbrk+0x14>
		return (caddr_t) -1;	
	}

	heap += incr;
  4025b2:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  4025b4:	4618      	mov	r0, r3
  4025b6:	4770      	bx	lr
		return (caddr_t) -1;	
  4025b8:	f04f 30ff 	mov.w	r0, #4294967295
  4025bc:	4770      	bx	lr
{
  4025be:	b410      	push	{r4}
		heap = (unsigned char *)&_end;
  4025c0:	4c08      	ldr	r4, [pc, #32]	; (4025e4 <_sbrk+0x40>)
	if (((int)prev_heap + incr) > ramend) {
  4025c2:	4420      	add	r0, r4
		heap = (unsigned char *)&_end;
  4025c4:	6014      	str	r4, [r2, #0]
	if (((int)prev_heap + incr) > ramend) {
  4025c6:	4281      	cmp	r1, r0
  4025c8:	db04      	blt.n	4025d4 <_sbrk+0x30>
	heap += incr;
  4025ca:	6010      	str	r0, [r2, #0]
	return (caddr_t) prev_heap;
  4025cc:	4620      	mov	r0, r4
}
  4025ce:	f85d 4b04 	ldr.w	r4, [sp], #4
  4025d2:	4770      	bx	lr
		return (caddr_t) -1;	
  4025d4:	f04f 30ff 	mov.w	r0, #4294967295
  4025d8:	e7f9      	b.n	4025ce <_sbrk+0x2a>
  4025da:	bf00      	nop
  4025dc:	20409a98 	.word	0x20409a98
  4025e0:	2045fffc 	.word	0x2045fffc
  4025e4:	204447a8 	.word	0x204447a8

004025e8 <_close>:
}

extern int _close(int file)
{
	return -1;
}
  4025e8:	f04f 30ff 	mov.w	r0, #4294967295
  4025ec:	4770      	bx	lr
  4025ee:	bf00      	nop

004025f0 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  4025f0:	f44f 5300 	mov.w	r3, #8192	; 0x2000

	return 0;
}
  4025f4:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
  4025f6:	604b      	str	r3, [r1, #4]
}
  4025f8:	4770      	bx	lr
  4025fa:	bf00      	nop

004025fc <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  4025fc:	2001      	movs	r0, #1
  4025fe:	4770      	bx	lr

00402600 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  402600:	2000      	movs	r0, #0
  402602:	4770      	bx	lr

00402604 <usart_serial_getchar>:
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  402604:	4b2d      	ldr	r3, [pc, #180]	; (4026bc <usart_serial_getchar+0xb8>)
	uint32_t val = 0;
  402606:	2200      	movs	r2, #0
{
  402608:	b5f0      	push	{r4, r5, r6, r7, lr}
	if (UART0 == (Uart*)p_usart) {
  40260a:	4298      	cmp	r0, r3
{
  40260c:	b083      	sub	sp, #12
  40260e:	4604      	mov	r4, r0
  402610:	460d      	mov	r5, r1
	uint32_t val = 0;
  402612:	9201      	str	r2, [sp, #4]
	if (UART0 == (Uart*)p_usart) {
  402614:	d03a      	beq.n	40268c <usart_serial_getchar+0x88>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  402616:	4b2a      	ldr	r3, [pc, #168]	; (4026c0 <usart_serial_getchar+0xbc>)
  402618:	4298      	cmp	r0, r3
  40261a:	d03f      	beq.n	40269c <usart_serial_getchar+0x98>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART2
	if (UART2 == (Uart*)p_usart) {
  40261c:	4b29      	ldr	r3, [pc, #164]	; (4026c4 <usart_serial_getchar+0xc0>)
  40261e:	4298      	cmp	r0, r3
  402620:	d044      	beq.n	4026ac <usart_serial_getchar+0xa8>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART3
	if (UART3 == (Uart*)p_usart) {
  402622:	4b29      	ldr	r3, [pc, #164]	; (4026c8 <usart_serial_getchar+0xc4>)
  402624:	4298      	cmp	r0, r3
  402626:	d015      	beq.n	402654 <usart_serial_getchar+0x50>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  402628:	4b28      	ldr	r3, [pc, #160]	; (4026cc <usart_serial_getchar+0xc8>)
  40262a:	4298      	cmp	r0, r3
  40262c:	d024      	beq.n	402678 <usart_serial_getchar+0x74>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  40262e:	4b28      	ldr	r3, [pc, #160]	; (4026d0 <usart_serial_getchar+0xcc>)
  402630:	429c      	cmp	r4, r3
  402632:	d017      	beq.n	402664 <usart_serial_getchar+0x60>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
  402634:	4b27      	ldr	r3, [pc, #156]	; (4026d4 <usart_serial_getchar+0xd0>)
  402636:	429c      	cmp	r4, r3
  402638:	d001      	beq.n	40263e <usart_serial_getchar+0x3a>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  40263a:	b003      	add	sp, #12
  40263c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40263e:	af01      	add	r7, sp, #4
  402640:	4e25      	ldr	r6, [pc, #148]	; (4026d8 <usart_serial_getchar+0xd4>)
		while (usart_read(p_usart, &val));
  402642:	4639      	mov	r1, r7
  402644:	4620      	mov	r0, r4
  402646:	47b0      	blx	r6
  402648:	2800      	cmp	r0, #0
  40264a:	d1fa      	bne.n	402642 <usart_serial_getchar+0x3e>
		*data = (uint8_t)(val & 0xFF);
  40264c:	9b01      	ldr	r3, [sp, #4]
  40264e:	702b      	strb	r3, [r5, #0]
}
  402650:	b003      	add	sp, #12
  402652:	bdf0      	pop	{r4, r5, r6, r7, pc}
  402654:	4e21      	ldr	r6, [pc, #132]	; (4026dc <usart_serial_getchar+0xd8>)
		while (uart_read((Uart*)p_usart, data));
  402656:	4629      	mov	r1, r5
  402658:	4620      	mov	r0, r4
  40265a:	47b0      	blx	r6
  40265c:	2800      	cmp	r0, #0
  40265e:	d1fa      	bne.n	402656 <usart_serial_getchar+0x52>
}
  402660:	b003      	add	sp, #12
  402662:	bdf0      	pop	{r4, r5, r6, r7, pc}
  402664:	af01      	add	r7, sp, #4
  402666:	4e1c      	ldr	r6, [pc, #112]	; (4026d8 <usart_serial_getchar+0xd4>)
		while (usart_read(p_usart, &val));
  402668:	4639      	mov	r1, r7
  40266a:	4620      	mov	r0, r4
  40266c:	47b0      	blx	r6
  40266e:	2800      	cmp	r0, #0
  402670:	d1fa      	bne.n	402668 <usart_serial_getchar+0x64>
		*data = (uint8_t)(val & 0xFF);
  402672:	9b01      	ldr	r3, [sp, #4]
  402674:	702b      	strb	r3, [r5, #0]
  402676:	e7eb      	b.n	402650 <usart_serial_getchar+0x4c>
  402678:	af01      	add	r7, sp, #4
  40267a:	4e17      	ldr	r6, [pc, #92]	; (4026d8 <usart_serial_getchar+0xd4>)
		while (usart_read(p_usart, &val));
  40267c:	4639      	mov	r1, r7
  40267e:	4620      	mov	r0, r4
  402680:	47b0      	blx	r6
  402682:	2800      	cmp	r0, #0
  402684:	d1fa      	bne.n	40267c <usart_serial_getchar+0x78>
		*data = (uint8_t)(val & 0xFF);
  402686:	9b01      	ldr	r3, [sp, #4]
  402688:	702b      	strb	r3, [r5, #0]
  40268a:	e7e1      	b.n	402650 <usart_serial_getchar+0x4c>
  40268c:	4e13      	ldr	r6, [pc, #76]	; (4026dc <usart_serial_getchar+0xd8>)
		while (uart_read((Uart*)p_usart, data));
  40268e:	4607      	mov	r7, r0
  402690:	4629      	mov	r1, r5
  402692:	4638      	mov	r0, r7
  402694:	47b0      	blx	r6
  402696:	2800      	cmp	r0, #0
  402698:	d1fa      	bne.n	402690 <usart_serial_getchar+0x8c>
  40269a:	e7c8      	b.n	40262e <usart_serial_getchar+0x2a>
  40269c:	4e0f      	ldr	r6, [pc, #60]	; (4026dc <usart_serial_getchar+0xd8>)
		while (uart_read((Uart*)p_usart, data));
  40269e:	4607      	mov	r7, r0
  4026a0:	4629      	mov	r1, r5
  4026a2:	4638      	mov	r0, r7
  4026a4:	47b0      	blx	r6
  4026a6:	2800      	cmp	r0, #0
  4026a8:	d1fa      	bne.n	4026a0 <usart_serial_getchar+0x9c>
  4026aa:	e7c0      	b.n	40262e <usart_serial_getchar+0x2a>
  4026ac:	4e0b      	ldr	r6, [pc, #44]	; (4026dc <usart_serial_getchar+0xd8>)
		while (uart_read((Uart*)p_usart, data));
  4026ae:	4607      	mov	r7, r0
  4026b0:	4629      	mov	r1, r5
  4026b2:	4638      	mov	r0, r7
  4026b4:	47b0      	blx	r6
  4026b6:	2800      	cmp	r0, #0
  4026b8:	d1fa      	bne.n	4026b0 <usart_serial_getchar+0xac>
  4026ba:	e7bb      	b.n	402634 <usart_serial_getchar+0x30>
  4026bc:	400e0800 	.word	0x400e0800
  4026c0:	400e0a00 	.word	0x400e0a00
  4026c4:	400e1a00 	.word	0x400e1a00
  4026c8:	400e1c00 	.word	0x400e1c00
  4026cc:	40024000 	.word	0x40024000
  4026d0:	40028000 	.word	0x40028000
  4026d4:	4002c000 	.word	0x4002c000
  4026d8:	00401c25 	.word	0x00401c25
  4026dc:	00401b1d 	.word	0x00401b1d

004026e0 <usart_serial_putchar>:
	if (UART0 == (Uart*)p_usart) {
  4026e0:	4b2a      	ldr	r3, [pc, #168]	; (40278c <usart_serial_putchar+0xac>)
  4026e2:	4298      	cmp	r0, r3
{
  4026e4:	b570      	push	{r4, r5, r6, lr}
  4026e6:	460d      	mov	r5, r1
	if (UART0 == (Uart*)p_usart) {
  4026e8:	d01c      	beq.n	402724 <usart_serial_putchar+0x44>
	if (UART1 == (Uart*)p_usart) {
  4026ea:	4b29      	ldr	r3, [pc, #164]	; (402790 <usart_serial_putchar+0xb0>)
  4026ec:	4298      	cmp	r0, r3
  4026ee:	d022      	beq.n	402736 <usart_serial_putchar+0x56>
	if (UART2 == (Uart*)p_usart) {
  4026f0:	4b28      	ldr	r3, [pc, #160]	; (402794 <usart_serial_putchar+0xb4>)
  4026f2:	4298      	cmp	r0, r3
  4026f4:	d028      	beq.n	402748 <usart_serial_putchar+0x68>
	if (UART3 == (Uart*)p_usart) {
  4026f6:	4b28      	ldr	r3, [pc, #160]	; (402798 <usart_serial_putchar+0xb8>)
  4026f8:	4298      	cmp	r0, r3
  4026fa:	d02e      	beq.n	40275a <usart_serial_putchar+0x7a>
	if (USART0 == p_usart) {
  4026fc:	4b27      	ldr	r3, [pc, #156]	; (40279c <usart_serial_putchar+0xbc>)
  4026fe:	4298      	cmp	r0, r3
  402700:	d007      	beq.n	402712 <usart_serial_putchar+0x32>
	if (USART1 == p_usart) {
  402702:	4b27      	ldr	r3, [pc, #156]	; (4027a0 <usart_serial_putchar+0xc0>)
  402704:	4298      	cmp	r0, r3
  402706:	d038      	beq.n	40277a <usart_serial_putchar+0x9a>
	if (USART2 == p_usart) {
  402708:	4b26      	ldr	r3, [pc, #152]	; (4027a4 <usart_serial_putchar+0xc4>)
  40270a:	4298      	cmp	r0, r3
  40270c:	d02d      	beq.n	40276a <usart_serial_putchar+0x8a>
	return 0;
  40270e:	2000      	movs	r0, #0
}
  402710:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  402712:	4604      	mov	r4, r0
  402714:	4e24      	ldr	r6, [pc, #144]	; (4027a8 <usart_serial_putchar+0xc8>)
  402716:	4629      	mov	r1, r5
  402718:	4620      	mov	r0, r4
  40271a:	47b0      	blx	r6
  40271c:	2800      	cmp	r0, #0
  40271e:	d1fa      	bne.n	402716 <usart_serial_putchar+0x36>
		return 1;
  402720:	2001      	movs	r0, #1
  402722:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  402724:	4604      	mov	r4, r0
  402726:	4e21      	ldr	r6, [pc, #132]	; (4027ac <usart_serial_putchar+0xcc>)
  402728:	4629      	mov	r1, r5
  40272a:	4620      	mov	r0, r4
  40272c:	47b0      	blx	r6
  40272e:	2800      	cmp	r0, #0
  402730:	d1fa      	bne.n	402728 <usart_serial_putchar+0x48>
		return 1;
  402732:	2001      	movs	r0, #1
  402734:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  402736:	4604      	mov	r4, r0
  402738:	4e1c      	ldr	r6, [pc, #112]	; (4027ac <usart_serial_putchar+0xcc>)
  40273a:	4629      	mov	r1, r5
  40273c:	4620      	mov	r0, r4
  40273e:	47b0      	blx	r6
  402740:	2800      	cmp	r0, #0
  402742:	d1fa      	bne.n	40273a <usart_serial_putchar+0x5a>
		return 1;
  402744:	2001      	movs	r0, #1
  402746:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  402748:	4604      	mov	r4, r0
  40274a:	4e18      	ldr	r6, [pc, #96]	; (4027ac <usart_serial_putchar+0xcc>)
  40274c:	4629      	mov	r1, r5
  40274e:	4620      	mov	r0, r4
  402750:	47b0      	blx	r6
  402752:	2800      	cmp	r0, #0
  402754:	d1fa      	bne.n	40274c <usart_serial_putchar+0x6c>
		return 1;
  402756:	2001      	movs	r0, #1
  402758:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  40275a:	4604      	mov	r4, r0
  40275c:	4e13      	ldr	r6, [pc, #76]	; (4027ac <usart_serial_putchar+0xcc>)
  40275e:	4629      	mov	r1, r5
  402760:	4620      	mov	r0, r4
  402762:	47b0      	blx	r6
  402764:	2800      	cmp	r0, #0
  402766:	d1fa      	bne.n	40275e <usart_serial_putchar+0x7e>
  402768:	e7da      	b.n	402720 <usart_serial_putchar+0x40>
		while (usart_write(p_usart, c)!=0);
  40276a:	4604      	mov	r4, r0
  40276c:	4e0e      	ldr	r6, [pc, #56]	; (4027a8 <usart_serial_putchar+0xc8>)
  40276e:	4629      	mov	r1, r5
  402770:	4620      	mov	r0, r4
  402772:	47b0      	blx	r6
  402774:	2800      	cmp	r0, #0
  402776:	d1fa      	bne.n	40276e <usart_serial_putchar+0x8e>
  402778:	e7d2      	b.n	402720 <usart_serial_putchar+0x40>
		while (usart_write(p_usart, c)!=0);
  40277a:	4604      	mov	r4, r0
  40277c:	4e0a      	ldr	r6, [pc, #40]	; (4027a8 <usart_serial_putchar+0xc8>)
  40277e:	4629      	mov	r1, r5
  402780:	4620      	mov	r0, r4
  402782:	47b0      	blx	r6
  402784:	2800      	cmp	r0, #0
  402786:	d1fa      	bne.n	40277e <usart_serial_putchar+0x9e>
  402788:	e7ca      	b.n	402720 <usart_serial_putchar+0x40>
  40278a:	bf00      	nop
  40278c:	400e0800 	.word	0x400e0800
  402790:	400e0a00 	.word	0x400e0a00
  402794:	400e1a00 	.word	0x400e1a00
  402798:	400e1c00 	.word	0x400e1c00
  40279c:	40024000 	.word	0x40024000
  4027a0:	40028000 	.word	0x40028000
  4027a4:	4002c000 	.word	0x4002c000
  4027a8:	00401c0d 	.word	0x00401c0d
  4027ac:	00401b0d 	.word	0x00401b0d

004027b0 <usart_serial_init.constprop.2>:
static inline void usart_serial_init(usart_if p_usart,
  4027b0:	4603      	mov	r3, r0
	usart_settings.channel_mode= US_MR_CHMODE_NORMAL;
  4027b2:	2200      	movs	r2, #0
  4027b4:	200e      	movs	r0, #14
static inline void usart_serial_init(usart_if p_usart,
  4027b6:	b5f0      	push	{r4, r5, r6, r7, lr}
		usart_init_rs232(p_usart, &usart_settings,
  4027b8:	4c0c      	ldr	r4, [pc, #48]	; (4027ec <usart_serial_init.constprop.2+0x3c>)
static inline void usart_serial_init(usart_if p_usart,
  4027ba:	b087      	sub	sp, #28
	uart_settings.ul_mode = opt->paritytype;
  4027bc:	689e      	ldr	r6, [r3, #8]
	usart_settings.baudrate = opt->baudrate;
  4027be:	681d      	ldr	r5, [r3, #0]
	usart_settings.char_length = opt->charlength;
  4027c0:	6859      	ldr	r1, [r3, #4]
	usart_settings.stop_bits= opt->stopbits;
  4027c2:	68df      	ldr	r7, [r3, #12]
  4027c4:	4b0a      	ldr	r3, [pc, #40]	; (4027f0 <usart_serial_init.constprop.2+0x40>)
	usart_settings.char_length = opt->charlength;
  4027c6:	9101      	str	r1, [sp, #4]
	usart_settings.channel_mode= US_MR_CHMODE_NORMAL;
  4027c8:	9204      	str	r2, [sp, #16]
	usart_settings.parity_type = opt->paritytype;
  4027ca:	9602      	str	r6, [sp, #8]
	usart_settings.baudrate = opt->baudrate;
  4027cc:	9500      	str	r5, [sp, #0]
	usart_settings.stop_bits= opt->stopbits;
  4027ce:	9703      	str	r7, [sp, #12]
  4027d0:	4798      	blx	r3
		usart_init_rs232(p_usart, &usart_settings,
  4027d2:	4a08      	ldr	r2, [pc, #32]	; (4027f4 <usart_serial_init.constprop.2+0x44>)
  4027d4:	4669      	mov	r1, sp
  4027d6:	4620      	mov	r0, r4
  4027d8:	4b07      	ldr	r3, [pc, #28]	; (4027f8 <usart_serial_init.constprop.2+0x48>)
  4027da:	4798      	blx	r3
		usart_enable_tx(p_usart);
  4027dc:	4620      	mov	r0, r4
  4027de:	4b07      	ldr	r3, [pc, #28]	; (4027fc <usart_serial_init.constprop.2+0x4c>)
  4027e0:	4798      	blx	r3
		usart_enable_rx(p_usart);
  4027e2:	4620      	mov	r0, r4
  4027e4:	4b06      	ldr	r3, [pc, #24]	; (402800 <usart_serial_init.constprop.2+0x50>)
  4027e6:	4798      	blx	r3
}
  4027e8:	b007      	add	sp, #28
  4027ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4027ec:	40028000 	.word	0x40028000
  4027f0:	004022a9 	.word	0x004022a9
  4027f4:	08f0d180 	.word	0x08f0d180
  4027f8:	00401b91 	.word	0x00401b91
  4027fc:	00401bf5 	.word	0x00401bf5
  402800:	00401bfd 	.word	0x00401bfd

00402804 <USART1_Handler>:
#include "asf.h"
#include "DanLib.h"

void USART_SERIAL_ISR_HANDLER(void)
{
  402804:	b500      	push	{lr}
	uint32_t received_byte = 0; 
  402806:	2200      	movs	r2, #0
{
  402808:	b083      	sub	sp, #12
	uint32_t dw_status = usart_get_status(USART_SERIAL);
  40280a:	4b06      	ldr	r3, [pc, #24]	; (402824 <USART1_Handler+0x20>)
  40280c:	4806      	ldr	r0, [pc, #24]	; (402828 <USART1_Handler+0x24>)
	uint32_t received_byte = 0; 
  40280e:	9201      	str	r2, [sp, #4]
	uint32_t dw_status = usart_get_status(USART_SERIAL);
  402810:	4798      	blx	r3
	if (dw_status & US_CSR_RXRDY) {
  402812:	07c3      	lsls	r3, r0, #31
  402814:	d503      	bpl.n	40281e <USART1_Handler+0x1a>
		usart_read(USART_SERIAL, &received_byte);
  402816:	a901      	add	r1, sp, #4
  402818:	4803      	ldr	r0, [pc, #12]	; (402828 <USART1_Handler+0x24>)
  40281a:	4b04      	ldr	r3, [pc, #16]	; (40282c <USART1_Handler+0x28>)
  40281c:	4798      	blx	r3
		
	}
}
  40281e:	b003      	add	sp, #12
  402820:	f85d fb04 	ldr.w	pc, [sp], #4
  402824:	00401c09 	.word	0x00401c09
  402828:	40028000 	.word	0x40028000
  40282c:	00401c25 	.word	0x00401c25

00402830 <main>:
	NVIC_EnableIRQ(USART1_IRQn);
}

extern uint32_t max_power; 
int main(void)
{
  402830:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402834:	f5ad 3d9c 	sub.w	sp, sp, #79872	; 0x13800
	sysclk_init();
  402838:	4b4e      	ldr	r3, [pc, #312]	; (402974 <main+0x144>)
	usart_serial_options_t usart_console_settings = {
  40283a:	4e4f      	ldr	r6, [pc, #316]	; (402978 <main+0x148>)
	
	/* Initial Gatorscribe params */ 
	uint32_t bpm = 100;
	midi_instrument_t playback_instrument = PIANO;
	time_signature_t time_signature = {4,4, FOUR_FOUR};
	key_signature_t key_signature = {C_MAJOR, MAJOR};
  40283c:	2400      	movs	r4, #0
{
  40283e:	b0b3      	sub	sp, #204	; 0xcc
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  402840:	f8df a178 	ldr.w	sl, [pc, #376]	; 4029bc <main+0x18c>
	sysclk_init();
  402844:	4798      	blx	r3
	board_init();
  402846:	4b4d      	ldr	r3, [pc, #308]	; (40297c <main+0x14c>)
  402848:	4798      	blx	r3
	audio_init();
  40284a:	4b4d      	ldr	r3, [pc, #308]	; (402980 <main+0x150>)
	usart_serial_options_t usart_console_settings = {
  40284c:	ad12      	add	r5, sp, #72	; 0x48
	audio_init();
  40284e:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  402850:	f8df b16c 	ldr.w	fp, [pc, #364]	; 4029c0 <main+0x190>
	char title[MAX_TITLE_SIZE] = "Title Here";
  402854:	af08      	add	r7, sp, #32
	
	midi_event_t events_in_time[MAX_NUM_EVENTS];
	uint32_t number_of_events = 0; 
  402856:	f8df 916c 	ldr.w	r9, [pc, #364]	; 4029c4 <main+0x194>
	max_power = 100; // minimum initial max power
  40285a:	f04f 0864 	mov.w	r8, #100	; 0x64
	usart_serial_options_t usart_console_settings = {
  40285e:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
  402862:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
	usart_serial_init(USART_SERIAL, &usart_console_settings);
  402866:	4628      	mov	r0, r5
  402868:	4b46      	ldr	r3, [pc, #280]	; (402984 <main+0x154>)
  40286a:	4798      	blx	r3
  40286c:	4b46      	ldr	r3, [pc, #280]	; (402988 <main+0x158>)
  40286e:	200e      	movs	r0, #14
  402870:	4798      	blx	r3
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  402872:	4946      	ldr	r1, [pc, #280]	; (40298c <main+0x15c>)
	stdio_base = (void *)usart;
  402874:	4b46      	ldr	r3, [pc, #280]	; (402990 <main+0x160>)
	usart_serial_init((Usart *)usart,(usart_serial_options_t *)opt);
  402876:	4628      	mov	r0, r5
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  402878:	4a46      	ldr	r2, [pc, #280]	; (402994 <main+0x164>)
	stdio_base = (void *)usart;
  40287a:	f8c3 a000 	str.w	sl, [r3]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  40287e:	6011      	str	r1, [r2, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  402880:	4b45      	ldr	r3, [pc, #276]	; (402998 <main+0x168>)
  402882:	4a46      	ldr	r2, [pc, #280]	; (40299c <main+0x16c>)
  402884:	601a      	str	r2, [r3, #0]
	usart_serial_init((Usart *)usart,(usart_serial_options_t *)opt);
  402886:	4b3f      	ldr	r3, [pc, #252]	; (402984 <main+0x154>)
  402888:	4798      	blx	r3
	setbuf(stdout, NULL);
  40288a:	f8db 3000 	ldr.w	r3, [fp]
  40288e:	4621      	mov	r1, r4
  402890:	6898      	ldr	r0, [r3, #8]
  402892:	4b43      	ldr	r3, [pc, #268]	; (4029a0 <main+0x170>)
  402894:	4798      	blx	r3
	setbuf(stdin, NULL);
  402896:	f8db 3000 	ldr.w	r3, [fp]
  40289a:	4621      	mov	r1, r4
  40289c:	6858      	ldr	r0, [r3, #4]
  40289e:	4b40      	ldr	r3, [pc, #256]	; (4029a0 <main+0x170>)
  4028a0:	4798      	blx	r3
	usart_enable_rx(USART_SERIAL);
  4028a2:	4650      	mov	r0, sl
  4028a4:	4b3f      	ldr	r3, [pc, #252]	; (4029a4 <main+0x174>)
  4028a6:	4798      	blx	r3
	usart_enable_interrupt(USART_SERIAL, US_IER_RXRDY);
  4028a8:	4650      	mov	r0, sl
  4028aa:	2101      	movs	r1, #1
  4028ac:	4b3e      	ldr	r3, [pc, #248]	; (4029a8 <main+0x178>)
  4028ae:	4798      	blx	r3
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  4028b0:	f04f 0a40 	mov.w	sl, #64	; 0x40
  4028b4:	4b3d      	ldr	r3, [pc, #244]	; (4029ac <main+0x17c>)
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  4028b6:	f44f 4080 	mov.w	r0, #16384	; 0x4000
	time_signature_t time_signature = {4,4, FOUR_FOUR};
  4028ba:	6932      	ldr	r2, [r6, #16]
	char title[MAX_TITLE_SIZE] = "Title Here";
  4028bc:	f106 0114 	add.w	r1, r6, #20
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  4028c0:	f883 a30e 	strb.w	sl, [r3, #782]	; 0x30e
  4028c4:	463e      	mov	r6, r7
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  4028c6:	f8c3 0180 	str.w	r0, [r3, #384]	; 0x180
	time_signature_t time_signature = {4,4, FOUR_FOUR};
  4028ca:	ea4f 4e12 	mov.w	lr, r2, lsr #16
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  4028ce:	6018      	str	r0, [r3, #0]
  4028d0:	4b37      	ldr	r3, [pc, #220]	; (4029b0 <main+0x180>)
  4028d2:	f8df c0f4 	ldr.w	ip, [pc, #244]	; 4029c8 <main+0x198>
  4028d6:	446b      	add	r3, sp
  4028d8:	f88d e01a 	strb.w	lr, [sp, #26]
	key_signature_t key_signature = {C_MAJOR, MAJOR};
  4028dc:	f8df e0ec 	ldr.w	lr, [pc, #236]	; 4029cc <main+0x19c>
	time_signature_t time_signature = {4,4, FOUR_FOUR};
  4028e0:	f823 200c 	strh.w	r2, [r3, ip]

	while(1)
	{
		// wait for uart to get bpm, playback_instrument, time_signature, key_signature, and title 
		
		start_recording(events_in_time, &number_of_events, bpm, playback_instrument, time_signature, key_signature, title);
  4028e4:	4623      	mov	r3, r4
	uint32_t number_of_events = 0; 
  4028e6:	4a32      	ldr	r2, [pc, #200]	; (4029b0 <main+0x180>)
		start_recording(events_in_time, &number_of_events, bpm, playback_instrument, time_signature, key_signature, title);
  4028e8:	9702      	str	r7, [sp, #8]
	uint32_t number_of_events = 0; 
  4028ea:	446a      	add	r2, sp
	char title[MAX_TITLE_SIZE] = "Title Here";
  4028ec:	f8c7 401f 	str.w	r4, [r7, #31]
  4028f0:	f8c7 400b 	str.w	r4, [r7, #11]
	uint32_t number_of_events = 0; 
  4028f4:	f842 4009 	str.w	r4, [r2, r9]
	char title[MAX_TITLE_SIZE] = "Title Here";
  4028f8:	f8c7 400f 	str.w	r4, [r7, #15]
  4028fc:	f8c7 4013 	str.w	r4, [r7, #19]
  402900:	f8c7 4017 	str.w	r4, [r7, #23]
  402904:	f8c7 401b 	str.w	r4, [r7, #27]
  402908:	f8c7 4022 	str.w	r4, [r7, #34]	; 0x22
  40290c:	c907      	ldmia	r1, {r0, r1, r2}
  40290e:	c603      	stmia	r6!, {r0, r1}
  402910:	0c11      	lsrs	r1, r2, #16
  402912:	f826 2b02 	strh.w	r2, [r6], #2
	key_signature_t key_signature = {C_MAJOR, MAJOR};
  402916:	4a26      	ldr	r2, [pc, #152]	; (4029b0 <main+0x180>)
		start_recording(events_in_time, &number_of_events, bpm, playback_instrument, time_signature, key_signature, title);
  402918:	4628      	mov	r0, r5
	char title[MAX_TITLE_SIZE] = "Title Here";
  40291a:	7031      	strb	r1, [r6, #0]
	key_signature_t key_signature = {C_MAJOR, MAJOR};
  40291c:	446a      	add	r2, sp
  40291e:	f802 400e 	strb.w	r4, [r2, lr]
		start_recording(events_in_time, &number_of_events, bpm, playback_instrument, time_signature, key_signature, title);
  402922:	eb02 0109 	add.w	r1, r2, r9
  402926:	f852 600c 	ldr.w	r6, [r2, ip]
  40292a:	4642      	mov	r2, r8
  40292c:	f8df c080 	ldr.w	ip, [pc, #128]	; 4029b0 <main+0x180>
	key_signature_t key_signature = {C_MAJOR, MAJOR};
  402930:	f88d 4015 	strb.w	r4, [sp, #21]
		start_recording(events_in_time, &number_of_events, bpm, playback_instrument, time_signature, key_signature, title);
  402934:	44ec      	add	ip, sp
  402936:	f83c c00e 	ldrh.w	ip, [ip, lr]
  40293a:	ea4f 4e16 	mov.w	lr, r6, lsr #16
  40293e:	f8ad 6000 	strh.w	r6, [sp]
  402942:	f88d e002 	strb.w	lr, [sp, #2]
	max_power = 100; // minimum initial max power
  402946:	f8df e088 	ldr.w	lr, [pc, #136]	; 4029d0 <main+0x1a0>
		start_recording(events_in_time, &number_of_events, bpm, playback_instrument, time_signature, key_signature, title);
  40294a:	f8ad c004 	strh.w	ip, [sp, #4]
  40294e:	4e19      	ldr	r6, [pc, #100]	; (4029b4 <main+0x184>)
	max_power = 100; // minimum initial max power
  402950:	f8ce 8000 	str.w	r8, [lr]
		start_recording(events_in_time, &number_of_events, bpm, playback_instrument, time_signature, key_signature, title);
  402954:	47b0      	blx	r6
		write_midi_file(bpm, playback_instrument, &time_signature, &key_signature, title, events_in_time, number_of_events);
  402956:	4b16      	ldr	r3, [pc, #88]	; (4029b0 <main+0x180>)
  402958:	aa06      	add	r2, sp, #24
  40295a:	4640      	mov	r0, r8
  40295c:	446b      	add	r3, sp
  40295e:	f853 1009 	ldr.w	r1, [r3, r9]
  402962:	ab05      	add	r3, sp, #20
  402964:	9501      	str	r5, [sp, #4]
  402966:	9102      	str	r1, [sp, #8]
  402968:	4621      	mov	r1, r4
  40296a:	9700      	str	r7, [sp, #0]
  40296c:	4c12      	ldr	r4, [pc, #72]	; (4029b8 <main+0x188>)
  40296e:	47a0      	blx	r4
  402970:	e7fe      	b.n	402970 <main+0x140>
  402972:	bf00      	nop
  402974:	00401c79 	.word	0x00401c79
  402978:	0040eff0 	.word	0x0040eff0
  40297c:	00401ce9 	.word	0x00401ce9
  402980:	0040052d 	.word	0x0040052d
  402984:	004027b1 	.word	0x004027b1
  402988:	004022a9 	.word	0x004022a9
  40298c:	004026e1 	.word	0x004026e1
  402990:	20442578 	.word	0x20442578
  402994:	20442574 	.word	0x20442574
  402998:	20442570 	.word	0x20442570
  40299c:	00402605 	.word	0x00402605
  4029a0:	00403ae9 	.word	0x00403ae9
  4029a4:	00401bfd 	.word	0x00401bfd
  4029a8:	00401c05 	.word	0x00401c05
  4029ac:	e000e100 	.word	0xe000e100
  4029b0:	000138c8 	.word	0x000138c8
  4029b4:	004013bd 	.word	0x004013bd
  4029b8:	00400de9 	.word	0x00400de9
  4029bc:	40028000 	.word	0x40028000
  4029c0:	20400038 	.word	0x20400038
  4029c4:	fffec754 	.word	0xfffec754
  4029c8:	fffec750 	.word	0xfffec750
  4029cc:	fffec74c 	.word	0xfffec74c
  4029d0:	2040980c 	.word	0x2040980c

004029d4 <arm_copy_f32>:
  4029d4:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
  4029d8:	ea5f 0992 	movs.w	r9, r2, lsr #2
  4029dc:	d018      	beq.n	402a10 <arm_copy_f32+0x3c>
  4029de:	4604      	mov	r4, r0
  4029e0:	460b      	mov	r3, r1
  4029e2:	464d      	mov	r5, r9
  4029e4:	f8d4 8000 	ldr.w	r8, [r4]
  4029e8:	f8d4 c004 	ldr.w	ip, [r4, #4]
  4029ec:	68a7      	ldr	r7, [r4, #8]
  4029ee:	68e6      	ldr	r6, [r4, #12]
  4029f0:	3d01      	subs	r5, #1
  4029f2:	f8c3 8000 	str.w	r8, [r3]
  4029f6:	f8c3 c004 	str.w	ip, [r3, #4]
  4029fa:	609f      	str	r7, [r3, #8]
  4029fc:	60de      	str	r6, [r3, #12]
  4029fe:	f104 0410 	add.w	r4, r4, #16
  402a02:	f103 0310 	add.w	r3, r3, #16
  402a06:	d1ed      	bne.n	4029e4 <arm_copy_f32+0x10>
  402a08:	ea4f 1909 	mov.w	r9, r9, lsl #4
  402a0c:	4448      	add	r0, r9
  402a0e:	4449      	add	r1, r9
  402a10:	f012 0203 	ands.w	r2, r2, #3
  402a14:	d005      	beq.n	402a22 <arm_copy_f32+0x4e>
  402a16:	f850 3b04 	ldr.w	r3, [r0], #4
  402a1a:	3a01      	subs	r2, #1
  402a1c:	f841 3b04 	str.w	r3, [r1], #4
  402a20:	d1f9      	bne.n	402a16 <arm_copy_f32+0x42>
  402a22:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
  402a26:	4770      	bx	lr

00402a28 <arm_min_f32>:
  402a28:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
  402a2c:	f101 3cff 	add.w	ip, r1, #4294967295
  402a30:	ea5f 099c 	movs.w	r9, ip, lsr #2
  402a34:	f100 0704 	add.w	r7, r0, #4
  402a38:	edd0 7a00 	vldr	s15, [r0]
  402a3c:	d05c      	beq.n	402af8 <arm_min_f32+0xd0>
  402a3e:	463c      	mov	r4, r7
  402a40:	464e      	mov	r6, r9
  402a42:	2004      	movs	r0, #4
  402a44:	2500      	movs	r5, #0
  402a46:	edd4 6a00 	vldr	s13, [r4]
  402a4a:	eef4 6ae7 	vcmpe.f32	s13, s15
  402a4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  402a52:	ed94 7a01 	vldr	s14, [r4, #4]
  402a56:	bf48      	it	mi
  402a58:	eef0 7a66 	vmovmi.f32	s15, s13
  402a5c:	eef4 7ac7 	vcmpe.f32	s15, s14
  402a60:	f1a0 0803 	sub.w	r8, r0, #3
  402a64:	bf48      	it	mi
  402a66:	4645      	movmi	r5, r8
  402a68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  402a6c:	edd4 6a02 	vldr	s13, [r4, #8]
  402a70:	bfc8      	it	gt
  402a72:	eef0 7a47 	vmovgt.f32	s15, s14
  402a76:	eef4 7ae6 	vcmpe.f32	s15, s13
  402a7a:	f1a0 0802 	sub.w	r8, r0, #2
  402a7e:	bfc8      	it	gt
  402a80:	4645      	movgt	r5, r8
  402a82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  402a86:	ed94 7a03 	vldr	s14, [r4, #12]
  402a8a:	bfc8      	it	gt
  402a8c:	eef0 7a66 	vmovgt.f32	s15, s13
  402a90:	eef4 7ac7 	vcmpe.f32	s15, s14
  402a94:	f100 38ff 	add.w	r8, r0, #4294967295
  402a98:	bfc8      	it	gt
  402a9a:	4645      	movgt	r5, r8
  402a9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  402aa0:	bfc8      	it	gt
  402aa2:	4605      	movgt	r5, r0
  402aa4:	bfc8      	it	gt
  402aa6:	eef0 7a47 	vmovgt.f32	s15, s14
  402aaa:	3e01      	subs	r6, #1
  402aac:	f104 0410 	add.w	r4, r4, #16
  402ab0:	f100 0004 	add.w	r0, r0, #4
  402ab4:	d1c7      	bne.n	402a46 <arm_min_f32+0x1e>
  402ab6:	eb07 1709 	add.w	r7, r7, r9, lsl #4
  402aba:	f01c 0c03 	ands.w	ip, ip, #3
  402abe:	d01d      	beq.n	402afc <arm_min_f32+0xd4>
  402ac0:	ebcc 0101 	rsb	r1, ip, r1
  402ac4:	2000      	movs	r0, #0
  402ac6:	ecb7 7a01 	vldmia	r7!, {s14}
  402aca:	eeb4 7ae7 	vcmpe.f32	s14, s15
  402ace:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  402ad2:	bf48      	it	mi
  402ad4:	eef0 7a47 	vmovmi.f32	s15, s14
  402ad8:	eb01 0400 	add.w	r4, r1, r0
  402adc:	f100 0001 	add.w	r0, r0, #1
  402ae0:	bf48      	it	mi
  402ae2:	4625      	movmi	r5, r4
  402ae4:	4560      	cmp	r0, ip
  402ae6:	eeb0 7a67 	vmov.f32	s14, s15
  402aea:	d1ec      	bne.n	402ac6 <arm_min_f32+0x9e>
  402aec:	ed82 7a00 	vstr	s14, [r2]
  402af0:	601d      	str	r5, [r3, #0]
  402af2:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
  402af6:	4770      	bx	lr
  402af8:	464d      	mov	r5, r9
  402afa:	e7de      	b.n	402aba <arm_min_f32+0x92>
  402afc:	eeb0 7a67 	vmov.f32	s14, s15
  402b00:	e7f4      	b.n	402aec <arm_min_f32+0xc4>
  402b02:	bf00      	nop

00402b04 <arm_mean_f32>:
  402b04:	b430      	push	{r4, r5}
  402b06:	088d      	lsrs	r5, r1, #2
  402b08:	eddf 7a16 	vldr	s15, [pc, #88]	; 402b64 <arm_mean_f32+0x60>
  402b0c:	d017      	beq.n	402b3e <arm_mean_f32+0x3a>
  402b0e:	4603      	mov	r3, r0
  402b10:	462c      	mov	r4, r5
  402b12:	edd3 6a00 	vldr	s13, [r3]
  402b16:	ed93 7a01 	vldr	s14, [r3, #4]
  402b1a:	ee77 7aa6 	vadd.f32	s15, s15, s13
  402b1e:	edd3 6a02 	vldr	s13, [r3, #8]
  402b22:	ee77 7a87 	vadd.f32	s15, s15, s14
  402b26:	ed93 7a03 	vldr	s14, [r3, #12]
  402b2a:	ee77 7aa6 	vadd.f32	s15, s15, s13
  402b2e:	3c01      	subs	r4, #1
  402b30:	f103 0310 	add.w	r3, r3, #16
  402b34:	ee77 7a87 	vadd.f32	s15, s15, s14
  402b38:	d1eb      	bne.n	402b12 <arm_mean_f32+0xe>
  402b3a:	eb00 1005 	add.w	r0, r0, r5, lsl #4
  402b3e:	f011 0303 	ands.w	r3, r1, #3
  402b42:	d005      	beq.n	402b50 <arm_mean_f32+0x4c>
  402b44:	ecb0 7a01 	vldmia	r0!, {s14}
  402b48:	3b01      	subs	r3, #1
  402b4a:	ee77 7a87 	vadd.f32	s15, s15, s14
  402b4e:	d1f9      	bne.n	402b44 <arm_mean_f32+0x40>
  402b50:	ee06 1a90 	vmov	s13, r1
  402b54:	bc30      	pop	{r4, r5}
  402b56:	eeb8 7a66 	vcvt.f32.u32	s14, s13
  402b5a:	eec7 7a87 	vdiv.f32	s15, s15, s14
  402b5e:	edc2 7a00 	vstr	s15, [r2]
  402b62:	4770      	bx	lr
  402b64:	00000000 	.word	0x00000000

00402b68 <arm_max_f32>:
  402b68:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
  402b6c:	f101 3cff 	add.w	ip, r1, #4294967295
  402b70:	ea5f 099c 	movs.w	r9, ip, lsr #2
  402b74:	f100 0704 	add.w	r7, r0, #4
  402b78:	edd0 7a00 	vldr	s15, [r0]
  402b7c:	d05c      	beq.n	402c38 <arm_max_f32+0xd0>
  402b7e:	463c      	mov	r4, r7
  402b80:	464e      	mov	r6, r9
  402b82:	2004      	movs	r0, #4
  402b84:	2500      	movs	r5, #0
  402b86:	edd4 6a00 	vldr	s13, [r4]
  402b8a:	eef4 6ae7 	vcmpe.f32	s13, s15
  402b8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  402b92:	ed94 7a01 	vldr	s14, [r4, #4]
  402b96:	bfc8      	it	gt
  402b98:	eef0 7a66 	vmovgt.f32	s15, s13
  402b9c:	eef4 7ac7 	vcmpe.f32	s15, s14
  402ba0:	f1a0 0803 	sub.w	r8, r0, #3
  402ba4:	bfc8      	it	gt
  402ba6:	4645      	movgt	r5, r8
  402ba8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  402bac:	edd4 6a02 	vldr	s13, [r4, #8]
  402bb0:	bf48      	it	mi
  402bb2:	eef0 7a47 	vmovmi.f32	s15, s14
  402bb6:	eef4 7ae6 	vcmpe.f32	s15, s13
  402bba:	f1a0 0802 	sub.w	r8, r0, #2
  402bbe:	bf48      	it	mi
  402bc0:	4645      	movmi	r5, r8
  402bc2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  402bc6:	ed94 7a03 	vldr	s14, [r4, #12]
  402bca:	bf48      	it	mi
  402bcc:	eef0 7a66 	vmovmi.f32	s15, s13
  402bd0:	eef4 7ac7 	vcmpe.f32	s15, s14
  402bd4:	f100 38ff 	add.w	r8, r0, #4294967295
  402bd8:	bf48      	it	mi
  402bda:	4645      	movmi	r5, r8
  402bdc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  402be0:	bf48      	it	mi
  402be2:	4605      	movmi	r5, r0
  402be4:	bf48      	it	mi
  402be6:	eef0 7a47 	vmovmi.f32	s15, s14
  402bea:	3e01      	subs	r6, #1
  402bec:	f104 0410 	add.w	r4, r4, #16
  402bf0:	f100 0004 	add.w	r0, r0, #4
  402bf4:	d1c7      	bne.n	402b86 <arm_max_f32+0x1e>
  402bf6:	eb07 1709 	add.w	r7, r7, r9, lsl #4
  402bfa:	f01c 0c03 	ands.w	ip, ip, #3
  402bfe:	d01d      	beq.n	402c3c <arm_max_f32+0xd4>
  402c00:	ebcc 0101 	rsb	r1, ip, r1
  402c04:	2000      	movs	r0, #0
  402c06:	ecb7 7a01 	vldmia	r7!, {s14}
  402c0a:	eeb4 7ae7 	vcmpe.f32	s14, s15
  402c0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  402c12:	bfc8      	it	gt
  402c14:	eef0 7a47 	vmovgt.f32	s15, s14
  402c18:	eb01 0400 	add.w	r4, r1, r0
  402c1c:	f100 0001 	add.w	r0, r0, #1
  402c20:	bfc8      	it	gt
  402c22:	4625      	movgt	r5, r4
  402c24:	4560      	cmp	r0, ip
  402c26:	eeb0 7a67 	vmov.f32	s14, s15
  402c2a:	d1ec      	bne.n	402c06 <arm_max_f32+0x9e>
  402c2c:	ed82 7a00 	vstr	s14, [r2]
  402c30:	601d      	str	r5, [r3, #0]
  402c32:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
  402c36:	4770      	bx	lr
  402c38:	464d      	mov	r5, r9
  402c3a:	e7de      	b.n	402bfa <arm_max_f32+0x92>
  402c3c:	eeb0 7a67 	vmov.f32	s14, s15
  402c40:	e7f4      	b.n	402c2c <arm_max_f32+0xc4>
  402c42:	bf00      	nop

00402c44 <__aeabi_drsub>:
  402c44:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  402c48:	e002      	b.n	402c50 <__adddf3>
  402c4a:	bf00      	nop

00402c4c <__aeabi_dsub>:
  402c4c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00402c50 <__adddf3>:
  402c50:	b530      	push	{r4, r5, lr}
  402c52:	ea4f 0441 	mov.w	r4, r1, lsl #1
  402c56:	ea4f 0543 	mov.w	r5, r3, lsl #1
  402c5a:	ea94 0f05 	teq	r4, r5
  402c5e:	bf08      	it	eq
  402c60:	ea90 0f02 	teqeq	r0, r2
  402c64:	bf1f      	itttt	ne
  402c66:	ea54 0c00 	orrsne.w	ip, r4, r0
  402c6a:	ea55 0c02 	orrsne.w	ip, r5, r2
  402c6e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  402c72:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  402c76:	f000 80e2 	beq.w	402e3e <__adddf3+0x1ee>
  402c7a:	ea4f 5454 	mov.w	r4, r4, lsr #21
  402c7e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  402c82:	bfb8      	it	lt
  402c84:	426d      	neglt	r5, r5
  402c86:	dd0c      	ble.n	402ca2 <__adddf3+0x52>
  402c88:	442c      	add	r4, r5
  402c8a:	ea80 0202 	eor.w	r2, r0, r2
  402c8e:	ea81 0303 	eor.w	r3, r1, r3
  402c92:	ea82 0000 	eor.w	r0, r2, r0
  402c96:	ea83 0101 	eor.w	r1, r3, r1
  402c9a:	ea80 0202 	eor.w	r2, r0, r2
  402c9e:	ea81 0303 	eor.w	r3, r1, r3
  402ca2:	2d36      	cmp	r5, #54	; 0x36
  402ca4:	bf88      	it	hi
  402ca6:	bd30      	pophi	{r4, r5, pc}
  402ca8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  402cac:	ea4f 3101 	mov.w	r1, r1, lsl #12
  402cb0:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  402cb4:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  402cb8:	d002      	beq.n	402cc0 <__adddf3+0x70>
  402cba:	4240      	negs	r0, r0
  402cbc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  402cc0:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  402cc4:	ea4f 3303 	mov.w	r3, r3, lsl #12
  402cc8:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  402ccc:	d002      	beq.n	402cd4 <__adddf3+0x84>
  402cce:	4252      	negs	r2, r2
  402cd0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  402cd4:	ea94 0f05 	teq	r4, r5
  402cd8:	f000 80a7 	beq.w	402e2a <__adddf3+0x1da>
  402cdc:	f1a4 0401 	sub.w	r4, r4, #1
  402ce0:	f1d5 0e20 	rsbs	lr, r5, #32
  402ce4:	db0d      	blt.n	402d02 <__adddf3+0xb2>
  402ce6:	fa02 fc0e 	lsl.w	ip, r2, lr
  402cea:	fa22 f205 	lsr.w	r2, r2, r5
  402cee:	1880      	adds	r0, r0, r2
  402cf0:	f141 0100 	adc.w	r1, r1, #0
  402cf4:	fa03 f20e 	lsl.w	r2, r3, lr
  402cf8:	1880      	adds	r0, r0, r2
  402cfa:	fa43 f305 	asr.w	r3, r3, r5
  402cfe:	4159      	adcs	r1, r3
  402d00:	e00e      	b.n	402d20 <__adddf3+0xd0>
  402d02:	f1a5 0520 	sub.w	r5, r5, #32
  402d06:	f10e 0e20 	add.w	lr, lr, #32
  402d0a:	2a01      	cmp	r2, #1
  402d0c:	fa03 fc0e 	lsl.w	ip, r3, lr
  402d10:	bf28      	it	cs
  402d12:	f04c 0c02 	orrcs.w	ip, ip, #2
  402d16:	fa43 f305 	asr.w	r3, r3, r5
  402d1a:	18c0      	adds	r0, r0, r3
  402d1c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  402d20:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  402d24:	d507      	bpl.n	402d36 <__adddf3+0xe6>
  402d26:	f04f 0e00 	mov.w	lr, #0
  402d2a:	f1dc 0c00 	rsbs	ip, ip, #0
  402d2e:	eb7e 0000 	sbcs.w	r0, lr, r0
  402d32:	eb6e 0101 	sbc.w	r1, lr, r1
  402d36:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  402d3a:	d31b      	bcc.n	402d74 <__adddf3+0x124>
  402d3c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  402d40:	d30c      	bcc.n	402d5c <__adddf3+0x10c>
  402d42:	0849      	lsrs	r1, r1, #1
  402d44:	ea5f 0030 	movs.w	r0, r0, rrx
  402d48:	ea4f 0c3c 	mov.w	ip, ip, rrx
  402d4c:	f104 0401 	add.w	r4, r4, #1
  402d50:	ea4f 5244 	mov.w	r2, r4, lsl #21
  402d54:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  402d58:	f080 809a 	bcs.w	402e90 <__adddf3+0x240>
  402d5c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  402d60:	bf08      	it	eq
  402d62:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  402d66:	f150 0000 	adcs.w	r0, r0, #0
  402d6a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  402d6e:	ea41 0105 	orr.w	r1, r1, r5
  402d72:	bd30      	pop	{r4, r5, pc}
  402d74:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  402d78:	4140      	adcs	r0, r0
  402d7a:	eb41 0101 	adc.w	r1, r1, r1
  402d7e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  402d82:	f1a4 0401 	sub.w	r4, r4, #1
  402d86:	d1e9      	bne.n	402d5c <__adddf3+0x10c>
  402d88:	f091 0f00 	teq	r1, #0
  402d8c:	bf04      	itt	eq
  402d8e:	4601      	moveq	r1, r0
  402d90:	2000      	moveq	r0, #0
  402d92:	fab1 f381 	clz	r3, r1
  402d96:	bf08      	it	eq
  402d98:	3320      	addeq	r3, #32
  402d9a:	f1a3 030b 	sub.w	r3, r3, #11
  402d9e:	f1b3 0220 	subs.w	r2, r3, #32
  402da2:	da0c      	bge.n	402dbe <__adddf3+0x16e>
  402da4:	320c      	adds	r2, #12
  402da6:	dd08      	ble.n	402dba <__adddf3+0x16a>
  402da8:	f102 0c14 	add.w	ip, r2, #20
  402dac:	f1c2 020c 	rsb	r2, r2, #12
  402db0:	fa01 f00c 	lsl.w	r0, r1, ip
  402db4:	fa21 f102 	lsr.w	r1, r1, r2
  402db8:	e00c      	b.n	402dd4 <__adddf3+0x184>
  402dba:	f102 0214 	add.w	r2, r2, #20
  402dbe:	bfd8      	it	le
  402dc0:	f1c2 0c20 	rsble	ip, r2, #32
  402dc4:	fa01 f102 	lsl.w	r1, r1, r2
  402dc8:	fa20 fc0c 	lsr.w	ip, r0, ip
  402dcc:	bfdc      	itt	le
  402dce:	ea41 010c 	orrle.w	r1, r1, ip
  402dd2:	4090      	lslle	r0, r2
  402dd4:	1ae4      	subs	r4, r4, r3
  402dd6:	bfa2      	ittt	ge
  402dd8:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  402ddc:	4329      	orrge	r1, r5
  402dde:	bd30      	popge	{r4, r5, pc}
  402de0:	ea6f 0404 	mvn.w	r4, r4
  402de4:	3c1f      	subs	r4, #31
  402de6:	da1c      	bge.n	402e22 <__adddf3+0x1d2>
  402de8:	340c      	adds	r4, #12
  402dea:	dc0e      	bgt.n	402e0a <__adddf3+0x1ba>
  402dec:	f104 0414 	add.w	r4, r4, #20
  402df0:	f1c4 0220 	rsb	r2, r4, #32
  402df4:	fa20 f004 	lsr.w	r0, r0, r4
  402df8:	fa01 f302 	lsl.w	r3, r1, r2
  402dfc:	ea40 0003 	orr.w	r0, r0, r3
  402e00:	fa21 f304 	lsr.w	r3, r1, r4
  402e04:	ea45 0103 	orr.w	r1, r5, r3
  402e08:	bd30      	pop	{r4, r5, pc}
  402e0a:	f1c4 040c 	rsb	r4, r4, #12
  402e0e:	f1c4 0220 	rsb	r2, r4, #32
  402e12:	fa20 f002 	lsr.w	r0, r0, r2
  402e16:	fa01 f304 	lsl.w	r3, r1, r4
  402e1a:	ea40 0003 	orr.w	r0, r0, r3
  402e1e:	4629      	mov	r1, r5
  402e20:	bd30      	pop	{r4, r5, pc}
  402e22:	fa21 f004 	lsr.w	r0, r1, r4
  402e26:	4629      	mov	r1, r5
  402e28:	bd30      	pop	{r4, r5, pc}
  402e2a:	f094 0f00 	teq	r4, #0
  402e2e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  402e32:	bf06      	itte	eq
  402e34:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  402e38:	3401      	addeq	r4, #1
  402e3a:	3d01      	subne	r5, #1
  402e3c:	e74e      	b.n	402cdc <__adddf3+0x8c>
  402e3e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  402e42:	bf18      	it	ne
  402e44:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  402e48:	d029      	beq.n	402e9e <__adddf3+0x24e>
  402e4a:	ea94 0f05 	teq	r4, r5
  402e4e:	bf08      	it	eq
  402e50:	ea90 0f02 	teqeq	r0, r2
  402e54:	d005      	beq.n	402e62 <__adddf3+0x212>
  402e56:	ea54 0c00 	orrs.w	ip, r4, r0
  402e5a:	bf04      	itt	eq
  402e5c:	4619      	moveq	r1, r3
  402e5e:	4610      	moveq	r0, r2
  402e60:	bd30      	pop	{r4, r5, pc}
  402e62:	ea91 0f03 	teq	r1, r3
  402e66:	bf1e      	ittt	ne
  402e68:	2100      	movne	r1, #0
  402e6a:	2000      	movne	r0, #0
  402e6c:	bd30      	popne	{r4, r5, pc}
  402e6e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  402e72:	d105      	bne.n	402e80 <__adddf3+0x230>
  402e74:	0040      	lsls	r0, r0, #1
  402e76:	4149      	adcs	r1, r1
  402e78:	bf28      	it	cs
  402e7a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  402e7e:	bd30      	pop	{r4, r5, pc}
  402e80:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  402e84:	bf3c      	itt	cc
  402e86:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  402e8a:	bd30      	popcc	{r4, r5, pc}
  402e8c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  402e90:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  402e94:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  402e98:	f04f 0000 	mov.w	r0, #0
  402e9c:	bd30      	pop	{r4, r5, pc}
  402e9e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  402ea2:	bf1a      	itte	ne
  402ea4:	4619      	movne	r1, r3
  402ea6:	4610      	movne	r0, r2
  402ea8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  402eac:	bf1c      	itt	ne
  402eae:	460b      	movne	r3, r1
  402eb0:	4602      	movne	r2, r0
  402eb2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  402eb6:	bf06      	itte	eq
  402eb8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  402ebc:	ea91 0f03 	teqeq	r1, r3
  402ec0:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  402ec4:	bd30      	pop	{r4, r5, pc}
  402ec6:	bf00      	nop

00402ec8 <__aeabi_ui2d>:
  402ec8:	f090 0f00 	teq	r0, #0
  402ecc:	bf04      	itt	eq
  402ece:	2100      	moveq	r1, #0
  402ed0:	4770      	bxeq	lr
  402ed2:	b530      	push	{r4, r5, lr}
  402ed4:	f44f 6480 	mov.w	r4, #1024	; 0x400
  402ed8:	f104 0432 	add.w	r4, r4, #50	; 0x32
  402edc:	f04f 0500 	mov.w	r5, #0
  402ee0:	f04f 0100 	mov.w	r1, #0
  402ee4:	e750      	b.n	402d88 <__adddf3+0x138>
  402ee6:	bf00      	nop

00402ee8 <__aeabi_i2d>:
  402ee8:	f090 0f00 	teq	r0, #0
  402eec:	bf04      	itt	eq
  402eee:	2100      	moveq	r1, #0
  402ef0:	4770      	bxeq	lr
  402ef2:	b530      	push	{r4, r5, lr}
  402ef4:	f44f 6480 	mov.w	r4, #1024	; 0x400
  402ef8:	f104 0432 	add.w	r4, r4, #50	; 0x32
  402efc:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  402f00:	bf48      	it	mi
  402f02:	4240      	negmi	r0, r0
  402f04:	f04f 0100 	mov.w	r1, #0
  402f08:	e73e      	b.n	402d88 <__adddf3+0x138>
  402f0a:	bf00      	nop

00402f0c <__aeabi_f2d>:
  402f0c:	0042      	lsls	r2, r0, #1
  402f0e:	ea4f 01e2 	mov.w	r1, r2, asr #3
  402f12:	ea4f 0131 	mov.w	r1, r1, rrx
  402f16:	ea4f 7002 	mov.w	r0, r2, lsl #28
  402f1a:	bf1f      	itttt	ne
  402f1c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  402f20:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  402f24:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  402f28:	4770      	bxne	lr
  402f2a:	f092 0f00 	teq	r2, #0
  402f2e:	bf14      	ite	ne
  402f30:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  402f34:	4770      	bxeq	lr
  402f36:	b530      	push	{r4, r5, lr}
  402f38:	f44f 7460 	mov.w	r4, #896	; 0x380
  402f3c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  402f40:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  402f44:	e720      	b.n	402d88 <__adddf3+0x138>
  402f46:	bf00      	nop

00402f48 <__aeabi_ul2d>:
  402f48:	ea50 0201 	orrs.w	r2, r0, r1
  402f4c:	bf08      	it	eq
  402f4e:	4770      	bxeq	lr
  402f50:	b530      	push	{r4, r5, lr}
  402f52:	f04f 0500 	mov.w	r5, #0
  402f56:	e00a      	b.n	402f6e <__aeabi_l2d+0x16>

00402f58 <__aeabi_l2d>:
  402f58:	ea50 0201 	orrs.w	r2, r0, r1
  402f5c:	bf08      	it	eq
  402f5e:	4770      	bxeq	lr
  402f60:	b530      	push	{r4, r5, lr}
  402f62:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  402f66:	d502      	bpl.n	402f6e <__aeabi_l2d+0x16>
  402f68:	4240      	negs	r0, r0
  402f6a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  402f6e:	f44f 6480 	mov.w	r4, #1024	; 0x400
  402f72:	f104 0432 	add.w	r4, r4, #50	; 0x32
  402f76:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  402f7a:	f43f aedc 	beq.w	402d36 <__adddf3+0xe6>
  402f7e:	f04f 0203 	mov.w	r2, #3
  402f82:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  402f86:	bf18      	it	ne
  402f88:	3203      	addne	r2, #3
  402f8a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  402f8e:	bf18      	it	ne
  402f90:	3203      	addne	r2, #3
  402f92:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  402f96:	f1c2 0320 	rsb	r3, r2, #32
  402f9a:	fa00 fc03 	lsl.w	ip, r0, r3
  402f9e:	fa20 f002 	lsr.w	r0, r0, r2
  402fa2:	fa01 fe03 	lsl.w	lr, r1, r3
  402fa6:	ea40 000e 	orr.w	r0, r0, lr
  402faa:	fa21 f102 	lsr.w	r1, r1, r2
  402fae:	4414      	add	r4, r2
  402fb0:	e6c1      	b.n	402d36 <__adddf3+0xe6>
  402fb2:	bf00      	nop

00402fb4 <__aeabi_dmul>:
  402fb4:	b570      	push	{r4, r5, r6, lr}
  402fb6:	f04f 0cff 	mov.w	ip, #255	; 0xff
  402fba:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  402fbe:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  402fc2:	bf1d      	ittte	ne
  402fc4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  402fc8:	ea94 0f0c 	teqne	r4, ip
  402fcc:	ea95 0f0c 	teqne	r5, ip
  402fd0:	f000 f8de 	bleq	403190 <__aeabi_dmul+0x1dc>
  402fd4:	442c      	add	r4, r5
  402fd6:	ea81 0603 	eor.w	r6, r1, r3
  402fda:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  402fde:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  402fe2:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  402fe6:	bf18      	it	ne
  402fe8:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  402fec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  402ff0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  402ff4:	d038      	beq.n	403068 <__aeabi_dmul+0xb4>
  402ff6:	fba0 ce02 	umull	ip, lr, r0, r2
  402ffa:	f04f 0500 	mov.w	r5, #0
  402ffe:	fbe1 e502 	umlal	lr, r5, r1, r2
  403002:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  403006:	fbe0 e503 	umlal	lr, r5, r0, r3
  40300a:	f04f 0600 	mov.w	r6, #0
  40300e:	fbe1 5603 	umlal	r5, r6, r1, r3
  403012:	f09c 0f00 	teq	ip, #0
  403016:	bf18      	it	ne
  403018:	f04e 0e01 	orrne.w	lr, lr, #1
  40301c:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  403020:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  403024:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  403028:	d204      	bcs.n	403034 <__aeabi_dmul+0x80>
  40302a:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  40302e:	416d      	adcs	r5, r5
  403030:	eb46 0606 	adc.w	r6, r6, r6
  403034:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  403038:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  40303c:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  403040:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  403044:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  403048:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  40304c:	bf88      	it	hi
  40304e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  403052:	d81e      	bhi.n	403092 <__aeabi_dmul+0xde>
  403054:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  403058:	bf08      	it	eq
  40305a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  40305e:	f150 0000 	adcs.w	r0, r0, #0
  403062:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  403066:	bd70      	pop	{r4, r5, r6, pc}
  403068:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  40306c:	ea46 0101 	orr.w	r1, r6, r1
  403070:	ea40 0002 	orr.w	r0, r0, r2
  403074:	ea81 0103 	eor.w	r1, r1, r3
  403078:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  40307c:	bfc2      	ittt	gt
  40307e:	ebd4 050c 	rsbsgt	r5, r4, ip
  403082:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  403086:	bd70      	popgt	{r4, r5, r6, pc}
  403088:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  40308c:	f04f 0e00 	mov.w	lr, #0
  403090:	3c01      	subs	r4, #1
  403092:	f300 80ab 	bgt.w	4031ec <__aeabi_dmul+0x238>
  403096:	f114 0f36 	cmn.w	r4, #54	; 0x36
  40309a:	bfde      	ittt	le
  40309c:	2000      	movle	r0, #0
  40309e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  4030a2:	bd70      	pople	{r4, r5, r6, pc}
  4030a4:	f1c4 0400 	rsb	r4, r4, #0
  4030a8:	3c20      	subs	r4, #32
  4030aa:	da35      	bge.n	403118 <__aeabi_dmul+0x164>
  4030ac:	340c      	adds	r4, #12
  4030ae:	dc1b      	bgt.n	4030e8 <__aeabi_dmul+0x134>
  4030b0:	f104 0414 	add.w	r4, r4, #20
  4030b4:	f1c4 0520 	rsb	r5, r4, #32
  4030b8:	fa00 f305 	lsl.w	r3, r0, r5
  4030bc:	fa20 f004 	lsr.w	r0, r0, r4
  4030c0:	fa01 f205 	lsl.w	r2, r1, r5
  4030c4:	ea40 0002 	orr.w	r0, r0, r2
  4030c8:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  4030cc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  4030d0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  4030d4:	fa21 f604 	lsr.w	r6, r1, r4
  4030d8:	eb42 0106 	adc.w	r1, r2, r6
  4030dc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4030e0:	bf08      	it	eq
  4030e2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4030e6:	bd70      	pop	{r4, r5, r6, pc}
  4030e8:	f1c4 040c 	rsb	r4, r4, #12
  4030ec:	f1c4 0520 	rsb	r5, r4, #32
  4030f0:	fa00 f304 	lsl.w	r3, r0, r4
  4030f4:	fa20 f005 	lsr.w	r0, r0, r5
  4030f8:	fa01 f204 	lsl.w	r2, r1, r4
  4030fc:	ea40 0002 	orr.w	r0, r0, r2
  403100:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  403104:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  403108:	f141 0100 	adc.w	r1, r1, #0
  40310c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  403110:	bf08      	it	eq
  403112:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  403116:	bd70      	pop	{r4, r5, r6, pc}
  403118:	f1c4 0520 	rsb	r5, r4, #32
  40311c:	fa00 f205 	lsl.w	r2, r0, r5
  403120:	ea4e 0e02 	orr.w	lr, lr, r2
  403124:	fa20 f304 	lsr.w	r3, r0, r4
  403128:	fa01 f205 	lsl.w	r2, r1, r5
  40312c:	ea43 0302 	orr.w	r3, r3, r2
  403130:	fa21 f004 	lsr.w	r0, r1, r4
  403134:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  403138:	fa21 f204 	lsr.w	r2, r1, r4
  40313c:	ea20 0002 	bic.w	r0, r0, r2
  403140:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  403144:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  403148:	bf08      	it	eq
  40314a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  40314e:	bd70      	pop	{r4, r5, r6, pc}
  403150:	f094 0f00 	teq	r4, #0
  403154:	d10f      	bne.n	403176 <__aeabi_dmul+0x1c2>
  403156:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  40315a:	0040      	lsls	r0, r0, #1
  40315c:	eb41 0101 	adc.w	r1, r1, r1
  403160:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  403164:	bf08      	it	eq
  403166:	3c01      	subeq	r4, #1
  403168:	d0f7      	beq.n	40315a <__aeabi_dmul+0x1a6>
  40316a:	ea41 0106 	orr.w	r1, r1, r6
  40316e:	f095 0f00 	teq	r5, #0
  403172:	bf18      	it	ne
  403174:	4770      	bxne	lr
  403176:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  40317a:	0052      	lsls	r2, r2, #1
  40317c:	eb43 0303 	adc.w	r3, r3, r3
  403180:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  403184:	bf08      	it	eq
  403186:	3d01      	subeq	r5, #1
  403188:	d0f7      	beq.n	40317a <__aeabi_dmul+0x1c6>
  40318a:	ea43 0306 	orr.w	r3, r3, r6
  40318e:	4770      	bx	lr
  403190:	ea94 0f0c 	teq	r4, ip
  403194:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  403198:	bf18      	it	ne
  40319a:	ea95 0f0c 	teqne	r5, ip
  40319e:	d00c      	beq.n	4031ba <__aeabi_dmul+0x206>
  4031a0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  4031a4:	bf18      	it	ne
  4031a6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  4031aa:	d1d1      	bne.n	403150 <__aeabi_dmul+0x19c>
  4031ac:	ea81 0103 	eor.w	r1, r1, r3
  4031b0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4031b4:	f04f 0000 	mov.w	r0, #0
  4031b8:	bd70      	pop	{r4, r5, r6, pc}
  4031ba:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  4031be:	bf06      	itte	eq
  4031c0:	4610      	moveq	r0, r2
  4031c2:	4619      	moveq	r1, r3
  4031c4:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  4031c8:	d019      	beq.n	4031fe <__aeabi_dmul+0x24a>
  4031ca:	ea94 0f0c 	teq	r4, ip
  4031ce:	d102      	bne.n	4031d6 <__aeabi_dmul+0x222>
  4031d0:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  4031d4:	d113      	bne.n	4031fe <__aeabi_dmul+0x24a>
  4031d6:	ea95 0f0c 	teq	r5, ip
  4031da:	d105      	bne.n	4031e8 <__aeabi_dmul+0x234>
  4031dc:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  4031e0:	bf1c      	itt	ne
  4031e2:	4610      	movne	r0, r2
  4031e4:	4619      	movne	r1, r3
  4031e6:	d10a      	bne.n	4031fe <__aeabi_dmul+0x24a>
  4031e8:	ea81 0103 	eor.w	r1, r1, r3
  4031ec:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4031f0:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  4031f4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  4031f8:	f04f 0000 	mov.w	r0, #0
  4031fc:	bd70      	pop	{r4, r5, r6, pc}
  4031fe:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  403202:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  403206:	bd70      	pop	{r4, r5, r6, pc}

00403208 <__aeabi_ddiv>:
  403208:	b570      	push	{r4, r5, r6, lr}
  40320a:	f04f 0cff 	mov.w	ip, #255	; 0xff
  40320e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  403212:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  403216:	bf1d      	ittte	ne
  403218:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  40321c:	ea94 0f0c 	teqne	r4, ip
  403220:	ea95 0f0c 	teqne	r5, ip
  403224:	f000 f8a7 	bleq	403376 <__aeabi_ddiv+0x16e>
  403228:	eba4 0405 	sub.w	r4, r4, r5
  40322c:	ea81 0e03 	eor.w	lr, r1, r3
  403230:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  403234:	ea4f 3101 	mov.w	r1, r1, lsl #12
  403238:	f000 8088 	beq.w	40334c <__aeabi_ddiv+0x144>
  40323c:	ea4f 3303 	mov.w	r3, r3, lsl #12
  403240:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  403244:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  403248:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  40324c:	ea4f 2202 	mov.w	r2, r2, lsl #8
  403250:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  403254:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  403258:	ea4f 2600 	mov.w	r6, r0, lsl #8
  40325c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  403260:	429d      	cmp	r5, r3
  403262:	bf08      	it	eq
  403264:	4296      	cmpeq	r6, r2
  403266:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  40326a:	f504 7440 	add.w	r4, r4, #768	; 0x300
  40326e:	d202      	bcs.n	403276 <__aeabi_ddiv+0x6e>
  403270:	085b      	lsrs	r3, r3, #1
  403272:	ea4f 0232 	mov.w	r2, r2, rrx
  403276:	1ab6      	subs	r6, r6, r2
  403278:	eb65 0503 	sbc.w	r5, r5, r3
  40327c:	085b      	lsrs	r3, r3, #1
  40327e:	ea4f 0232 	mov.w	r2, r2, rrx
  403282:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  403286:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  40328a:	ebb6 0e02 	subs.w	lr, r6, r2
  40328e:	eb75 0e03 	sbcs.w	lr, r5, r3
  403292:	bf22      	ittt	cs
  403294:	1ab6      	subcs	r6, r6, r2
  403296:	4675      	movcs	r5, lr
  403298:	ea40 000c 	orrcs.w	r0, r0, ip
  40329c:	085b      	lsrs	r3, r3, #1
  40329e:	ea4f 0232 	mov.w	r2, r2, rrx
  4032a2:	ebb6 0e02 	subs.w	lr, r6, r2
  4032a6:	eb75 0e03 	sbcs.w	lr, r5, r3
  4032aa:	bf22      	ittt	cs
  4032ac:	1ab6      	subcs	r6, r6, r2
  4032ae:	4675      	movcs	r5, lr
  4032b0:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  4032b4:	085b      	lsrs	r3, r3, #1
  4032b6:	ea4f 0232 	mov.w	r2, r2, rrx
  4032ba:	ebb6 0e02 	subs.w	lr, r6, r2
  4032be:	eb75 0e03 	sbcs.w	lr, r5, r3
  4032c2:	bf22      	ittt	cs
  4032c4:	1ab6      	subcs	r6, r6, r2
  4032c6:	4675      	movcs	r5, lr
  4032c8:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  4032cc:	085b      	lsrs	r3, r3, #1
  4032ce:	ea4f 0232 	mov.w	r2, r2, rrx
  4032d2:	ebb6 0e02 	subs.w	lr, r6, r2
  4032d6:	eb75 0e03 	sbcs.w	lr, r5, r3
  4032da:	bf22      	ittt	cs
  4032dc:	1ab6      	subcs	r6, r6, r2
  4032de:	4675      	movcs	r5, lr
  4032e0:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  4032e4:	ea55 0e06 	orrs.w	lr, r5, r6
  4032e8:	d018      	beq.n	40331c <__aeabi_ddiv+0x114>
  4032ea:	ea4f 1505 	mov.w	r5, r5, lsl #4
  4032ee:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  4032f2:	ea4f 1606 	mov.w	r6, r6, lsl #4
  4032f6:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  4032fa:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  4032fe:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  403302:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  403306:	d1c0      	bne.n	40328a <__aeabi_ddiv+0x82>
  403308:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40330c:	d10b      	bne.n	403326 <__aeabi_ddiv+0x11e>
  40330e:	ea41 0100 	orr.w	r1, r1, r0
  403312:	f04f 0000 	mov.w	r0, #0
  403316:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  40331a:	e7b6      	b.n	40328a <__aeabi_ddiv+0x82>
  40331c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  403320:	bf04      	itt	eq
  403322:	4301      	orreq	r1, r0
  403324:	2000      	moveq	r0, #0
  403326:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  40332a:	bf88      	it	hi
  40332c:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  403330:	f63f aeaf 	bhi.w	403092 <__aeabi_dmul+0xde>
  403334:	ebb5 0c03 	subs.w	ip, r5, r3
  403338:	bf04      	itt	eq
  40333a:	ebb6 0c02 	subseq.w	ip, r6, r2
  40333e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  403342:	f150 0000 	adcs.w	r0, r0, #0
  403346:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40334a:	bd70      	pop	{r4, r5, r6, pc}
  40334c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  403350:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  403354:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  403358:	bfc2      	ittt	gt
  40335a:	ebd4 050c 	rsbsgt	r5, r4, ip
  40335e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  403362:	bd70      	popgt	{r4, r5, r6, pc}
  403364:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  403368:	f04f 0e00 	mov.w	lr, #0
  40336c:	3c01      	subs	r4, #1
  40336e:	e690      	b.n	403092 <__aeabi_dmul+0xde>
  403370:	ea45 0e06 	orr.w	lr, r5, r6
  403374:	e68d      	b.n	403092 <__aeabi_dmul+0xde>
  403376:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  40337a:	ea94 0f0c 	teq	r4, ip
  40337e:	bf08      	it	eq
  403380:	ea95 0f0c 	teqeq	r5, ip
  403384:	f43f af3b 	beq.w	4031fe <__aeabi_dmul+0x24a>
  403388:	ea94 0f0c 	teq	r4, ip
  40338c:	d10a      	bne.n	4033a4 <__aeabi_ddiv+0x19c>
  40338e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  403392:	f47f af34 	bne.w	4031fe <__aeabi_dmul+0x24a>
  403396:	ea95 0f0c 	teq	r5, ip
  40339a:	f47f af25 	bne.w	4031e8 <__aeabi_dmul+0x234>
  40339e:	4610      	mov	r0, r2
  4033a0:	4619      	mov	r1, r3
  4033a2:	e72c      	b.n	4031fe <__aeabi_dmul+0x24a>
  4033a4:	ea95 0f0c 	teq	r5, ip
  4033a8:	d106      	bne.n	4033b8 <__aeabi_ddiv+0x1b0>
  4033aa:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  4033ae:	f43f aefd 	beq.w	4031ac <__aeabi_dmul+0x1f8>
  4033b2:	4610      	mov	r0, r2
  4033b4:	4619      	mov	r1, r3
  4033b6:	e722      	b.n	4031fe <__aeabi_dmul+0x24a>
  4033b8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  4033bc:	bf18      	it	ne
  4033be:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  4033c2:	f47f aec5 	bne.w	403150 <__aeabi_dmul+0x19c>
  4033c6:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  4033ca:	f47f af0d 	bne.w	4031e8 <__aeabi_dmul+0x234>
  4033ce:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  4033d2:	f47f aeeb 	bne.w	4031ac <__aeabi_dmul+0x1f8>
  4033d6:	e712      	b.n	4031fe <__aeabi_dmul+0x24a>

004033d8 <__aeabi_d2iz>:
  4033d8:	ea4f 0241 	mov.w	r2, r1, lsl #1
  4033dc:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  4033e0:	d215      	bcs.n	40340e <__aeabi_d2iz+0x36>
  4033e2:	d511      	bpl.n	403408 <__aeabi_d2iz+0x30>
  4033e4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  4033e8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  4033ec:	d912      	bls.n	403414 <__aeabi_d2iz+0x3c>
  4033ee:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  4033f2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  4033f6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  4033fa:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4033fe:	fa23 f002 	lsr.w	r0, r3, r2
  403402:	bf18      	it	ne
  403404:	4240      	negne	r0, r0
  403406:	4770      	bx	lr
  403408:	f04f 0000 	mov.w	r0, #0
  40340c:	4770      	bx	lr
  40340e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  403412:	d105      	bne.n	403420 <__aeabi_d2iz+0x48>
  403414:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  403418:	bf08      	it	eq
  40341a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  40341e:	4770      	bx	lr
  403420:	f04f 0000 	mov.w	r0, #0
  403424:	4770      	bx	lr
  403426:	bf00      	nop

00403428 <__libc_init_array>:
  403428:	b570      	push	{r4, r5, r6, lr}
  40342a:	4e0f      	ldr	r6, [pc, #60]	; (403468 <__libc_init_array+0x40>)
  40342c:	4d0f      	ldr	r5, [pc, #60]	; (40346c <__libc_init_array+0x44>)
  40342e:	1b76      	subs	r6, r6, r5
  403430:	10b6      	asrs	r6, r6, #2
  403432:	bf18      	it	ne
  403434:	2400      	movne	r4, #0
  403436:	d005      	beq.n	403444 <__libc_init_array+0x1c>
  403438:	3401      	adds	r4, #1
  40343a:	f855 3b04 	ldr.w	r3, [r5], #4
  40343e:	4798      	blx	r3
  403440:	42a6      	cmp	r6, r4
  403442:	d1f9      	bne.n	403438 <__libc_init_array+0x10>
  403444:	4e0a      	ldr	r6, [pc, #40]	; (403470 <__libc_init_array+0x48>)
  403446:	4d0b      	ldr	r5, [pc, #44]	; (403474 <__libc_init_array+0x4c>)
  403448:	1b76      	subs	r6, r6, r5
  40344a:	f00b fea3 	bl	40f194 <_init>
  40344e:	10b6      	asrs	r6, r6, #2
  403450:	bf18      	it	ne
  403452:	2400      	movne	r4, #0
  403454:	d006      	beq.n	403464 <__libc_init_array+0x3c>
  403456:	3401      	adds	r4, #1
  403458:	f855 3b04 	ldr.w	r3, [r5], #4
  40345c:	4798      	blx	r3
  40345e:	42a6      	cmp	r6, r4
  403460:	d1f9      	bne.n	403456 <__libc_init_array+0x2e>
  403462:	bd70      	pop	{r4, r5, r6, pc}
  403464:	bd70      	pop	{r4, r5, r6, pc}
  403466:	bf00      	nop
  403468:	0040f1a0 	.word	0x0040f1a0
  40346c:	0040f1a0 	.word	0x0040f1a0
  403470:	0040f1a8 	.word	0x0040f1a8
  403474:	0040f1a0 	.word	0x0040f1a0

00403478 <iprintf>:
  403478:	b40f      	push	{r0, r1, r2, r3}
  40347a:	b500      	push	{lr}
  40347c:	4907      	ldr	r1, [pc, #28]	; (40349c <iprintf+0x24>)
  40347e:	b083      	sub	sp, #12
  403480:	ab04      	add	r3, sp, #16
  403482:	6808      	ldr	r0, [r1, #0]
  403484:	f853 2b04 	ldr.w	r2, [r3], #4
  403488:	6881      	ldr	r1, [r0, #8]
  40348a:	9301      	str	r3, [sp, #4]
  40348c:	f000 fc3c 	bl	403d08 <_vfiprintf_r>
  403490:	b003      	add	sp, #12
  403492:	f85d eb04 	ldr.w	lr, [sp], #4
  403496:	b004      	add	sp, #16
  403498:	4770      	bx	lr
  40349a:	bf00      	nop
  40349c:	20400038 	.word	0x20400038

004034a0 <malloc>:
  4034a0:	4b02      	ldr	r3, [pc, #8]	; (4034ac <malloc+0xc>)
  4034a2:	4601      	mov	r1, r0
  4034a4:	6818      	ldr	r0, [r3, #0]
  4034a6:	f000 b803 	b.w	4034b0 <_malloc_r>
  4034aa:	bf00      	nop
  4034ac:	20400038 	.word	0x20400038

004034b0 <_malloc_r>:
  4034b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4034b4:	f101 060b 	add.w	r6, r1, #11
  4034b8:	2e16      	cmp	r6, #22
  4034ba:	b083      	sub	sp, #12
  4034bc:	4605      	mov	r5, r0
  4034be:	f240 809e 	bls.w	4035fe <_malloc_r+0x14e>
  4034c2:	f036 0607 	bics.w	r6, r6, #7
  4034c6:	f100 80bd 	bmi.w	403644 <_malloc_r+0x194>
  4034ca:	42b1      	cmp	r1, r6
  4034cc:	f200 80ba 	bhi.w	403644 <_malloc_r+0x194>
  4034d0:	f000 faec 	bl	403aac <__malloc_lock>
  4034d4:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  4034d8:	f0c0 8293 	bcc.w	403a02 <_malloc_r+0x552>
  4034dc:	0a73      	lsrs	r3, r6, #9
  4034de:	f000 80b8 	beq.w	403652 <_malloc_r+0x1a2>
  4034e2:	2b04      	cmp	r3, #4
  4034e4:	f200 8179 	bhi.w	4037da <_malloc_r+0x32a>
  4034e8:	09b3      	lsrs	r3, r6, #6
  4034ea:	f103 0039 	add.w	r0, r3, #57	; 0x39
  4034ee:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  4034f2:	00c3      	lsls	r3, r0, #3
  4034f4:	4fbf      	ldr	r7, [pc, #764]	; (4037f4 <_malloc_r+0x344>)
  4034f6:	443b      	add	r3, r7
  4034f8:	f1a3 0108 	sub.w	r1, r3, #8
  4034fc:	685c      	ldr	r4, [r3, #4]
  4034fe:	42a1      	cmp	r1, r4
  403500:	d106      	bne.n	403510 <_malloc_r+0x60>
  403502:	e00c      	b.n	40351e <_malloc_r+0x6e>
  403504:	2a00      	cmp	r2, #0
  403506:	f280 80aa 	bge.w	40365e <_malloc_r+0x1ae>
  40350a:	68e4      	ldr	r4, [r4, #12]
  40350c:	42a1      	cmp	r1, r4
  40350e:	d006      	beq.n	40351e <_malloc_r+0x6e>
  403510:	6863      	ldr	r3, [r4, #4]
  403512:	f023 0303 	bic.w	r3, r3, #3
  403516:	1b9a      	subs	r2, r3, r6
  403518:	2a0f      	cmp	r2, #15
  40351a:	ddf3      	ble.n	403504 <_malloc_r+0x54>
  40351c:	4670      	mov	r0, lr
  40351e:	693c      	ldr	r4, [r7, #16]
  403520:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 403808 <_malloc_r+0x358>
  403524:	4574      	cmp	r4, lr
  403526:	f000 81ab 	beq.w	403880 <_malloc_r+0x3d0>
  40352a:	6863      	ldr	r3, [r4, #4]
  40352c:	f023 0303 	bic.w	r3, r3, #3
  403530:	1b9a      	subs	r2, r3, r6
  403532:	2a0f      	cmp	r2, #15
  403534:	f300 8190 	bgt.w	403858 <_malloc_r+0x3a8>
  403538:	2a00      	cmp	r2, #0
  40353a:	f8c7 e014 	str.w	lr, [r7, #20]
  40353e:	f8c7 e010 	str.w	lr, [r7, #16]
  403542:	f280 809d 	bge.w	403680 <_malloc_r+0x1d0>
  403546:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40354a:	f080 8161 	bcs.w	403810 <_malloc_r+0x360>
  40354e:	08db      	lsrs	r3, r3, #3
  403550:	f103 0c01 	add.w	ip, r3, #1
  403554:	1099      	asrs	r1, r3, #2
  403556:	687a      	ldr	r2, [r7, #4]
  403558:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  40355c:	f8c4 8008 	str.w	r8, [r4, #8]
  403560:	2301      	movs	r3, #1
  403562:	408b      	lsls	r3, r1
  403564:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  403568:	4313      	orrs	r3, r2
  40356a:	3908      	subs	r1, #8
  40356c:	60e1      	str	r1, [r4, #12]
  40356e:	607b      	str	r3, [r7, #4]
  403570:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  403574:	f8c8 400c 	str.w	r4, [r8, #12]
  403578:	1082      	asrs	r2, r0, #2
  40357a:	2401      	movs	r4, #1
  40357c:	4094      	lsls	r4, r2
  40357e:	429c      	cmp	r4, r3
  403580:	f200 808b 	bhi.w	40369a <_malloc_r+0x1ea>
  403584:	421c      	tst	r4, r3
  403586:	d106      	bne.n	403596 <_malloc_r+0xe6>
  403588:	f020 0003 	bic.w	r0, r0, #3
  40358c:	0064      	lsls	r4, r4, #1
  40358e:	421c      	tst	r4, r3
  403590:	f100 0004 	add.w	r0, r0, #4
  403594:	d0fa      	beq.n	40358c <_malloc_r+0xdc>
  403596:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  40359a:	46cc      	mov	ip, r9
  40359c:	4680      	mov	r8, r0
  40359e:	f8dc 300c 	ldr.w	r3, [ip, #12]
  4035a2:	459c      	cmp	ip, r3
  4035a4:	d107      	bne.n	4035b6 <_malloc_r+0x106>
  4035a6:	e16d      	b.n	403884 <_malloc_r+0x3d4>
  4035a8:	2a00      	cmp	r2, #0
  4035aa:	f280 817b 	bge.w	4038a4 <_malloc_r+0x3f4>
  4035ae:	68db      	ldr	r3, [r3, #12]
  4035b0:	459c      	cmp	ip, r3
  4035b2:	f000 8167 	beq.w	403884 <_malloc_r+0x3d4>
  4035b6:	6859      	ldr	r1, [r3, #4]
  4035b8:	f021 0103 	bic.w	r1, r1, #3
  4035bc:	1b8a      	subs	r2, r1, r6
  4035be:	2a0f      	cmp	r2, #15
  4035c0:	ddf2      	ble.n	4035a8 <_malloc_r+0xf8>
  4035c2:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  4035c6:	f8d3 8008 	ldr.w	r8, [r3, #8]
  4035ca:	9300      	str	r3, [sp, #0]
  4035cc:	199c      	adds	r4, r3, r6
  4035ce:	4628      	mov	r0, r5
  4035d0:	f046 0601 	orr.w	r6, r6, #1
  4035d4:	f042 0501 	orr.w	r5, r2, #1
  4035d8:	605e      	str	r6, [r3, #4]
  4035da:	f8c8 c00c 	str.w	ip, [r8, #12]
  4035de:	f8cc 8008 	str.w	r8, [ip, #8]
  4035e2:	617c      	str	r4, [r7, #20]
  4035e4:	613c      	str	r4, [r7, #16]
  4035e6:	f8c4 e00c 	str.w	lr, [r4, #12]
  4035ea:	f8c4 e008 	str.w	lr, [r4, #8]
  4035ee:	6065      	str	r5, [r4, #4]
  4035f0:	505a      	str	r2, [r3, r1]
  4035f2:	f000 fa61 	bl	403ab8 <__malloc_unlock>
  4035f6:	9b00      	ldr	r3, [sp, #0]
  4035f8:	f103 0408 	add.w	r4, r3, #8
  4035fc:	e01e      	b.n	40363c <_malloc_r+0x18c>
  4035fe:	2910      	cmp	r1, #16
  403600:	d820      	bhi.n	403644 <_malloc_r+0x194>
  403602:	f000 fa53 	bl	403aac <__malloc_lock>
  403606:	2610      	movs	r6, #16
  403608:	2318      	movs	r3, #24
  40360a:	2002      	movs	r0, #2
  40360c:	4f79      	ldr	r7, [pc, #484]	; (4037f4 <_malloc_r+0x344>)
  40360e:	443b      	add	r3, r7
  403610:	f1a3 0208 	sub.w	r2, r3, #8
  403614:	685c      	ldr	r4, [r3, #4]
  403616:	4294      	cmp	r4, r2
  403618:	f000 813d 	beq.w	403896 <_malloc_r+0x3e6>
  40361c:	6863      	ldr	r3, [r4, #4]
  40361e:	68e1      	ldr	r1, [r4, #12]
  403620:	68a6      	ldr	r6, [r4, #8]
  403622:	f023 0303 	bic.w	r3, r3, #3
  403626:	4423      	add	r3, r4
  403628:	4628      	mov	r0, r5
  40362a:	685a      	ldr	r2, [r3, #4]
  40362c:	60f1      	str	r1, [r6, #12]
  40362e:	f042 0201 	orr.w	r2, r2, #1
  403632:	608e      	str	r6, [r1, #8]
  403634:	605a      	str	r2, [r3, #4]
  403636:	f000 fa3f 	bl	403ab8 <__malloc_unlock>
  40363a:	3408      	adds	r4, #8
  40363c:	4620      	mov	r0, r4
  40363e:	b003      	add	sp, #12
  403640:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403644:	2400      	movs	r4, #0
  403646:	230c      	movs	r3, #12
  403648:	4620      	mov	r0, r4
  40364a:	602b      	str	r3, [r5, #0]
  40364c:	b003      	add	sp, #12
  40364e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403652:	2040      	movs	r0, #64	; 0x40
  403654:	f44f 7300 	mov.w	r3, #512	; 0x200
  403658:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  40365c:	e74a      	b.n	4034f4 <_malloc_r+0x44>
  40365e:	4423      	add	r3, r4
  403660:	68e1      	ldr	r1, [r4, #12]
  403662:	685a      	ldr	r2, [r3, #4]
  403664:	68a6      	ldr	r6, [r4, #8]
  403666:	f042 0201 	orr.w	r2, r2, #1
  40366a:	60f1      	str	r1, [r6, #12]
  40366c:	4628      	mov	r0, r5
  40366e:	608e      	str	r6, [r1, #8]
  403670:	605a      	str	r2, [r3, #4]
  403672:	f000 fa21 	bl	403ab8 <__malloc_unlock>
  403676:	3408      	adds	r4, #8
  403678:	4620      	mov	r0, r4
  40367a:	b003      	add	sp, #12
  40367c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403680:	4423      	add	r3, r4
  403682:	4628      	mov	r0, r5
  403684:	685a      	ldr	r2, [r3, #4]
  403686:	f042 0201 	orr.w	r2, r2, #1
  40368a:	605a      	str	r2, [r3, #4]
  40368c:	f000 fa14 	bl	403ab8 <__malloc_unlock>
  403690:	3408      	adds	r4, #8
  403692:	4620      	mov	r0, r4
  403694:	b003      	add	sp, #12
  403696:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40369a:	68bc      	ldr	r4, [r7, #8]
  40369c:	6863      	ldr	r3, [r4, #4]
  40369e:	f023 0803 	bic.w	r8, r3, #3
  4036a2:	45b0      	cmp	r8, r6
  4036a4:	d304      	bcc.n	4036b0 <_malloc_r+0x200>
  4036a6:	eba8 0306 	sub.w	r3, r8, r6
  4036aa:	2b0f      	cmp	r3, #15
  4036ac:	f300 8085 	bgt.w	4037ba <_malloc_r+0x30a>
  4036b0:	f8df 9158 	ldr.w	r9, [pc, #344]	; 40380c <_malloc_r+0x35c>
  4036b4:	4b50      	ldr	r3, [pc, #320]	; (4037f8 <_malloc_r+0x348>)
  4036b6:	f8d9 2000 	ldr.w	r2, [r9]
  4036ba:	681b      	ldr	r3, [r3, #0]
  4036bc:	3201      	adds	r2, #1
  4036be:	4433      	add	r3, r6
  4036c0:	eb04 0a08 	add.w	sl, r4, r8
  4036c4:	f000 8155 	beq.w	403972 <_malloc_r+0x4c2>
  4036c8:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  4036cc:	330f      	adds	r3, #15
  4036ce:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  4036d2:	f02b 0b0f 	bic.w	fp, fp, #15
  4036d6:	4659      	mov	r1, fp
  4036d8:	4628      	mov	r0, r5
  4036da:	f000 f9f3 	bl	403ac4 <_sbrk_r>
  4036de:	1c41      	adds	r1, r0, #1
  4036e0:	4602      	mov	r2, r0
  4036e2:	f000 80fc 	beq.w	4038de <_malloc_r+0x42e>
  4036e6:	4582      	cmp	sl, r0
  4036e8:	f200 80f7 	bhi.w	4038da <_malloc_r+0x42a>
  4036ec:	4b43      	ldr	r3, [pc, #268]	; (4037fc <_malloc_r+0x34c>)
  4036ee:	6819      	ldr	r1, [r3, #0]
  4036f0:	4459      	add	r1, fp
  4036f2:	6019      	str	r1, [r3, #0]
  4036f4:	f000 814d 	beq.w	403992 <_malloc_r+0x4e2>
  4036f8:	f8d9 0000 	ldr.w	r0, [r9]
  4036fc:	3001      	adds	r0, #1
  4036fe:	bf1b      	ittet	ne
  403700:	eba2 0a0a 	subne.w	sl, r2, sl
  403704:	4451      	addne	r1, sl
  403706:	f8c9 2000 	streq.w	r2, [r9]
  40370a:	6019      	strne	r1, [r3, #0]
  40370c:	f012 0107 	ands.w	r1, r2, #7
  403710:	f000 8115 	beq.w	40393e <_malloc_r+0x48e>
  403714:	f1c1 0008 	rsb	r0, r1, #8
  403718:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  40371c:	4402      	add	r2, r0
  40371e:	3108      	adds	r1, #8
  403720:	eb02 090b 	add.w	r9, r2, fp
  403724:	f3c9 090b 	ubfx	r9, r9, #0, #12
  403728:	eba1 0909 	sub.w	r9, r1, r9
  40372c:	4649      	mov	r1, r9
  40372e:	4628      	mov	r0, r5
  403730:	9301      	str	r3, [sp, #4]
  403732:	9200      	str	r2, [sp, #0]
  403734:	f000 f9c6 	bl	403ac4 <_sbrk_r>
  403738:	1c43      	adds	r3, r0, #1
  40373a:	e89d 000c 	ldmia.w	sp, {r2, r3}
  40373e:	f000 8143 	beq.w	4039c8 <_malloc_r+0x518>
  403742:	1a80      	subs	r0, r0, r2
  403744:	4448      	add	r0, r9
  403746:	f040 0001 	orr.w	r0, r0, #1
  40374a:	6819      	ldr	r1, [r3, #0]
  40374c:	60ba      	str	r2, [r7, #8]
  40374e:	4449      	add	r1, r9
  403750:	42bc      	cmp	r4, r7
  403752:	6050      	str	r0, [r2, #4]
  403754:	6019      	str	r1, [r3, #0]
  403756:	d017      	beq.n	403788 <_malloc_r+0x2d8>
  403758:	f1b8 0f0f 	cmp.w	r8, #15
  40375c:	f240 80fb 	bls.w	403956 <_malloc_r+0x4a6>
  403760:	6860      	ldr	r0, [r4, #4]
  403762:	f1a8 020c 	sub.w	r2, r8, #12
  403766:	f022 0207 	bic.w	r2, r2, #7
  40376a:	eb04 0e02 	add.w	lr, r4, r2
  40376e:	f000 0001 	and.w	r0, r0, #1
  403772:	f04f 0c05 	mov.w	ip, #5
  403776:	4310      	orrs	r0, r2
  403778:	2a0f      	cmp	r2, #15
  40377a:	6060      	str	r0, [r4, #4]
  40377c:	f8ce c004 	str.w	ip, [lr, #4]
  403780:	f8ce c008 	str.w	ip, [lr, #8]
  403784:	f200 8117 	bhi.w	4039b6 <_malloc_r+0x506>
  403788:	4b1d      	ldr	r3, [pc, #116]	; (403800 <_malloc_r+0x350>)
  40378a:	68bc      	ldr	r4, [r7, #8]
  40378c:	681a      	ldr	r2, [r3, #0]
  40378e:	4291      	cmp	r1, r2
  403790:	bf88      	it	hi
  403792:	6019      	strhi	r1, [r3, #0]
  403794:	4b1b      	ldr	r3, [pc, #108]	; (403804 <_malloc_r+0x354>)
  403796:	681a      	ldr	r2, [r3, #0]
  403798:	4291      	cmp	r1, r2
  40379a:	6862      	ldr	r2, [r4, #4]
  40379c:	bf88      	it	hi
  40379e:	6019      	strhi	r1, [r3, #0]
  4037a0:	f022 0203 	bic.w	r2, r2, #3
  4037a4:	4296      	cmp	r6, r2
  4037a6:	eba2 0306 	sub.w	r3, r2, r6
  4037aa:	d801      	bhi.n	4037b0 <_malloc_r+0x300>
  4037ac:	2b0f      	cmp	r3, #15
  4037ae:	dc04      	bgt.n	4037ba <_malloc_r+0x30a>
  4037b0:	4628      	mov	r0, r5
  4037b2:	f000 f981 	bl	403ab8 <__malloc_unlock>
  4037b6:	2400      	movs	r4, #0
  4037b8:	e740      	b.n	40363c <_malloc_r+0x18c>
  4037ba:	19a2      	adds	r2, r4, r6
  4037bc:	f043 0301 	orr.w	r3, r3, #1
  4037c0:	f046 0601 	orr.w	r6, r6, #1
  4037c4:	6066      	str	r6, [r4, #4]
  4037c6:	4628      	mov	r0, r5
  4037c8:	60ba      	str	r2, [r7, #8]
  4037ca:	6053      	str	r3, [r2, #4]
  4037cc:	f000 f974 	bl	403ab8 <__malloc_unlock>
  4037d0:	3408      	adds	r4, #8
  4037d2:	4620      	mov	r0, r4
  4037d4:	b003      	add	sp, #12
  4037d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4037da:	2b14      	cmp	r3, #20
  4037dc:	d971      	bls.n	4038c2 <_malloc_r+0x412>
  4037de:	2b54      	cmp	r3, #84	; 0x54
  4037e0:	f200 80a3 	bhi.w	40392a <_malloc_r+0x47a>
  4037e4:	0b33      	lsrs	r3, r6, #12
  4037e6:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  4037ea:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  4037ee:	00c3      	lsls	r3, r0, #3
  4037f0:	e680      	b.n	4034f4 <_malloc_r+0x44>
  4037f2:	bf00      	nop
  4037f4:	20400468 	.word	0x20400468
  4037f8:	20409acc 	.word	0x20409acc
  4037fc:	20409a9c 	.word	0x20409a9c
  403800:	20409ac4 	.word	0x20409ac4
  403804:	20409ac8 	.word	0x20409ac8
  403808:	20400470 	.word	0x20400470
  40380c:	20400870 	.word	0x20400870
  403810:	0a5a      	lsrs	r2, r3, #9
  403812:	2a04      	cmp	r2, #4
  403814:	d95b      	bls.n	4038ce <_malloc_r+0x41e>
  403816:	2a14      	cmp	r2, #20
  403818:	f200 80ae 	bhi.w	403978 <_malloc_r+0x4c8>
  40381c:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  403820:	00c9      	lsls	r1, r1, #3
  403822:	325b      	adds	r2, #91	; 0x5b
  403824:	eb07 0c01 	add.w	ip, r7, r1
  403828:	5879      	ldr	r1, [r7, r1]
  40382a:	f1ac 0c08 	sub.w	ip, ip, #8
  40382e:	458c      	cmp	ip, r1
  403830:	f000 8088 	beq.w	403944 <_malloc_r+0x494>
  403834:	684a      	ldr	r2, [r1, #4]
  403836:	f022 0203 	bic.w	r2, r2, #3
  40383a:	4293      	cmp	r3, r2
  40383c:	d273      	bcs.n	403926 <_malloc_r+0x476>
  40383e:	6889      	ldr	r1, [r1, #8]
  403840:	458c      	cmp	ip, r1
  403842:	d1f7      	bne.n	403834 <_malloc_r+0x384>
  403844:	f8dc 200c 	ldr.w	r2, [ip, #12]
  403848:	687b      	ldr	r3, [r7, #4]
  40384a:	60e2      	str	r2, [r4, #12]
  40384c:	f8c4 c008 	str.w	ip, [r4, #8]
  403850:	6094      	str	r4, [r2, #8]
  403852:	f8cc 400c 	str.w	r4, [ip, #12]
  403856:	e68f      	b.n	403578 <_malloc_r+0xc8>
  403858:	19a1      	adds	r1, r4, r6
  40385a:	f046 0c01 	orr.w	ip, r6, #1
  40385e:	f042 0601 	orr.w	r6, r2, #1
  403862:	f8c4 c004 	str.w	ip, [r4, #4]
  403866:	4628      	mov	r0, r5
  403868:	6179      	str	r1, [r7, #20]
  40386a:	6139      	str	r1, [r7, #16]
  40386c:	f8c1 e00c 	str.w	lr, [r1, #12]
  403870:	f8c1 e008 	str.w	lr, [r1, #8]
  403874:	604e      	str	r6, [r1, #4]
  403876:	50e2      	str	r2, [r4, r3]
  403878:	f000 f91e 	bl	403ab8 <__malloc_unlock>
  40387c:	3408      	adds	r4, #8
  40387e:	e6dd      	b.n	40363c <_malloc_r+0x18c>
  403880:	687b      	ldr	r3, [r7, #4]
  403882:	e679      	b.n	403578 <_malloc_r+0xc8>
  403884:	f108 0801 	add.w	r8, r8, #1
  403888:	f018 0f03 	tst.w	r8, #3
  40388c:	f10c 0c08 	add.w	ip, ip, #8
  403890:	f47f ae85 	bne.w	40359e <_malloc_r+0xee>
  403894:	e02d      	b.n	4038f2 <_malloc_r+0x442>
  403896:	68dc      	ldr	r4, [r3, #12]
  403898:	42a3      	cmp	r3, r4
  40389a:	bf08      	it	eq
  40389c:	3002      	addeq	r0, #2
  40389e:	f43f ae3e 	beq.w	40351e <_malloc_r+0x6e>
  4038a2:	e6bb      	b.n	40361c <_malloc_r+0x16c>
  4038a4:	4419      	add	r1, r3
  4038a6:	461c      	mov	r4, r3
  4038a8:	684a      	ldr	r2, [r1, #4]
  4038aa:	68db      	ldr	r3, [r3, #12]
  4038ac:	f854 6f08 	ldr.w	r6, [r4, #8]!
  4038b0:	f042 0201 	orr.w	r2, r2, #1
  4038b4:	604a      	str	r2, [r1, #4]
  4038b6:	4628      	mov	r0, r5
  4038b8:	60f3      	str	r3, [r6, #12]
  4038ba:	609e      	str	r6, [r3, #8]
  4038bc:	f000 f8fc 	bl	403ab8 <__malloc_unlock>
  4038c0:	e6bc      	b.n	40363c <_malloc_r+0x18c>
  4038c2:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  4038c6:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  4038ca:	00c3      	lsls	r3, r0, #3
  4038cc:	e612      	b.n	4034f4 <_malloc_r+0x44>
  4038ce:	099a      	lsrs	r2, r3, #6
  4038d0:	f102 0139 	add.w	r1, r2, #57	; 0x39
  4038d4:	00c9      	lsls	r1, r1, #3
  4038d6:	3238      	adds	r2, #56	; 0x38
  4038d8:	e7a4      	b.n	403824 <_malloc_r+0x374>
  4038da:	42bc      	cmp	r4, r7
  4038dc:	d054      	beq.n	403988 <_malloc_r+0x4d8>
  4038de:	68bc      	ldr	r4, [r7, #8]
  4038e0:	6862      	ldr	r2, [r4, #4]
  4038e2:	f022 0203 	bic.w	r2, r2, #3
  4038e6:	e75d      	b.n	4037a4 <_malloc_r+0x2f4>
  4038e8:	f859 3908 	ldr.w	r3, [r9], #-8
  4038ec:	4599      	cmp	r9, r3
  4038ee:	f040 8086 	bne.w	4039fe <_malloc_r+0x54e>
  4038f2:	f010 0f03 	tst.w	r0, #3
  4038f6:	f100 30ff 	add.w	r0, r0, #4294967295
  4038fa:	d1f5      	bne.n	4038e8 <_malloc_r+0x438>
  4038fc:	687b      	ldr	r3, [r7, #4]
  4038fe:	ea23 0304 	bic.w	r3, r3, r4
  403902:	607b      	str	r3, [r7, #4]
  403904:	0064      	lsls	r4, r4, #1
  403906:	429c      	cmp	r4, r3
  403908:	f63f aec7 	bhi.w	40369a <_malloc_r+0x1ea>
  40390c:	2c00      	cmp	r4, #0
  40390e:	f43f aec4 	beq.w	40369a <_malloc_r+0x1ea>
  403912:	421c      	tst	r4, r3
  403914:	4640      	mov	r0, r8
  403916:	f47f ae3e 	bne.w	403596 <_malloc_r+0xe6>
  40391a:	0064      	lsls	r4, r4, #1
  40391c:	421c      	tst	r4, r3
  40391e:	f100 0004 	add.w	r0, r0, #4
  403922:	d0fa      	beq.n	40391a <_malloc_r+0x46a>
  403924:	e637      	b.n	403596 <_malloc_r+0xe6>
  403926:	468c      	mov	ip, r1
  403928:	e78c      	b.n	403844 <_malloc_r+0x394>
  40392a:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  40392e:	d815      	bhi.n	40395c <_malloc_r+0x4ac>
  403930:	0bf3      	lsrs	r3, r6, #15
  403932:	f103 0078 	add.w	r0, r3, #120	; 0x78
  403936:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  40393a:	00c3      	lsls	r3, r0, #3
  40393c:	e5da      	b.n	4034f4 <_malloc_r+0x44>
  40393e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  403942:	e6ed      	b.n	403720 <_malloc_r+0x270>
  403944:	687b      	ldr	r3, [r7, #4]
  403946:	1092      	asrs	r2, r2, #2
  403948:	2101      	movs	r1, #1
  40394a:	fa01 f202 	lsl.w	r2, r1, r2
  40394e:	4313      	orrs	r3, r2
  403950:	607b      	str	r3, [r7, #4]
  403952:	4662      	mov	r2, ip
  403954:	e779      	b.n	40384a <_malloc_r+0x39a>
  403956:	2301      	movs	r3, #1
  403958:	6053      	str	r3, [r2, #4]
  40395a:	e729      	b.n	4037b0 <_malloc_r+0x300>
  40395c:	f240 5254 	movw	r2, #1364	; 0x554
  403960:	4293      	cmp	r3, r2
  403962:	d822      	bhi.n	4039aa <_malloc_r+0x4fa>
  403964:	0cb3      	lsrs	r3, r6, #18
  403966:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  40396a:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  40396e:	00c3      	lsls	r3, r0, #3
  403970:	e5c0      	b.n	4034f4 <_malloc_r+0x44>
  403972:	f103 0b10 	add.w	fp, r3, #16
  403976:	e6ae      	b.n	4036d6 <_malloc_r+0x226>
  403978:	2a54      	cmp	r2, #84	; 0x54
  40397a:	d829      	bhi.n	4039d0 <_malloc_r+0x520>
  40397c:	0b1a      	lsrs	r2, r3, #12
  40397e:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  403982:	00c9      	lsls	r1, r1, #3
  403984:	326e      	adds	r2, #110	; 0x6e
  403986:	e74d      	b.n	403824 <_malloc_r+0x374>
  403988:	4b20      	ldr	r3, [pc, #128]	; (403a0c <_malloc_r+0x55c>)
  40398a:	6819      	ldr	r1, [r3, #0]
  40398c:	4459      	add	r1, fp
  40398e:	6019      	str	r1, [r3, #0]
  403990:	e6b2      	b.n	4036f8 <_malloc_r+0x248>
  403992:	f3ca 000b 	ubfx	r0, sl, #0, #12
  403996:	2800      	cmp	r0, #0
  403998:	f47f aeae 	bne.w	4036f8 <_malloc_r+0x248>
  40399c:	eb08 030b 	add.w	r3, r8, fp
  4039a0:	68ba      	ldr	r2, [r7, #8]
  4039a2:	f043 0301 	orr.w	r3, r3, #1
  4039a6:	6053      	str	r3, [r2, #4]
  4039a8:	e6ee      	b.n	403788 <_malloc_r+0x2d8>
  4039aa:	207f      	movs	r0, #127	; 0x7f
  4039ac:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  4039b0:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  4039b4:	e59e      	b.n	4034f4 <_malloc_r+0x44>
  4039b6:	f104 0108 	add.w	r1, r4, #8
  4039ba:	4628      	mov	r0, r5
  4039bc:	9300      	str	r3, [sp, #0]
  4039be:	f001 fabf 	bl	404f40 <_free_r>
  4039c2:	9b00      	ldr	r3, [sp, #0]
  4039c4:	6819      	ldr	r1, [r3, #0]
  4039c6:	e6df      	b.n	403788 <_malloc_r+0x2d8>
  4039c8:	2001      	movs	r0, #1
  4039ca:	f04f 0900 	mov.w	r9, #0
  4039ce:	e6bc      	b.n	40374a <_malloc_r+0x29a>
  4039d0:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4039d4:	d805      	bhi.n	4039e2 <_malloc_r+0x532>
  4039d6:	0bda      	lsrs	r2, r3, #15
  4039d8:	f102 0178 	add.w	r1, r2, #120	; 0x78
  4039dc:	00c9      	lsls	r1, r1, #3
  4039de:	3277      	adds	r2, #119	; 0x77
  4039e0:	e720      	b.n	403824 <_malloc_r+0x374>
  4039e2:	f240 5154 	movw	r1, #1364	; 0x554
  4039e6:	428a      	cmp	r2, r1
  4039e8:	d805      	bhi.n	4039f6 <_malloc_r+0x546>
  4039ea:	0c9a      	lsrs	r2, r3, #18
  4039ec:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  4039f0:	00c9      	lsls	r1, r1, #3
  4039f2:	327c      	adds	r2, #124	; 0x7c
  4039f4:	e716      	b.n	403824 <_malloc_r+0x374>
  4039f6:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  4039fa:	227e      	movs	r2, #126	; 0x7e
  4039fc:	e712      	b.n	403824 <_malloc_r+0x374>
  4039fe:	687b      	ldr	r3, [r7, #4]
  403a00:	e780      	b.n	403904 <_malloc_r+0x454>
  403a02:	08f0      	lsrs	r0, r6, #3
  403a04:	f106 0308 	add.w	r3, r6, #8
  403a08:	e600      	b.n	40360c <_malloc_r+0x15c>
  403a0a:	bf00      	nop
  403a0c:	20409a9c 	.word	0x20409a9c

00403a10 <memset>:
  403a10:	b470      	push	{r4, r5, r6}
  403a12:	0786      	lsls	r6, r0, #30
  403a14:	d046      	beq.n	403aa4 <memset+0x94>
  403a16:	1e54      	subs	r4, r2, #1
  403a18:	2a00      	cmp	r2, #0
  403a1a:	d041      	beq.n	403aa0 <memset+0x90>
  403a1c:	b2ca      	uxtb	r2, r1
  403a1e:	4603      	mov	r3, r0
  403a20:	e002      	b.n	403a28 <memset+0x18>
  403a22:	f114 34ff 	adds.w	r4, r4, #4294967295
  403a26:	d33b      	bcc.n	403aa0 <memset+0x90>
  403a28:	f803 2b01 	strb.w	r2, [r3], #1
  403a2c:	079d      	lsls	r5, r3, #30
  403a2e:	d1f8      	bne.n	403a22 <memset+0x12>
  403a30:	2c03      	cmp	r4, #3
  403a32:	d92e      	bls.n	403a92 <memset+0x82>
  403a34:	b2cd      	uxtb	r5, r1
  403a36:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  403a3a:	2c0f      	cmp	r4, #15
  403a3c:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  403a40:	d919      	bls.n	403a76 <memset+0x66>
  403a42:	f103 0210 	add.w	r2, r3, #16
  403a46:	4626      	mov	r6, r4
  403a48:	3e10      	subs	r6, #16
  403a4a:	2e0f      	cmp	r6, #15
  403a4c:	f842 5c10 	str.w	r5, [r2, #-16]
  403a50:	f842 5c0c 	str.w	r5, [r2, #-12]
  403a54:	f842 5c08 	str.w	r5, [r2, #-8]
  403a58:	f842 5c04 	str.w	r5, [r2, #-4]
  403a5c:	f102 0210 	add.w	r2, r2, #16
  403a60:	d8f2      	bhi.n	403a48 <memset+0x38>
  403a62:	f1a4 0210 	sub.w	r2, r4, #16
  403a66:	f022 020f 	bic.w	r2, r2, #15
  403a6a:	f004 040f 	and.w	r4, r4, #15
  403a6e:	3210      	adds	r2, #16
  403a70:	2c03      	cmp	r4, #3
  403a72:	4413      	add	r3, r2
  403a74:	d90d      	bls.n	403a92 <memset+0x82>
  403a76:	461e      	mov	r6, r3
  403a78:	4622      	mov	r2, r4
  403a7a:	3a04      	subs	r2, #4
  403a7c:	2a03      	cmp	r2, #3
  403a7e:	f846 5b04 	str.w	r5, [r6], #4
  403a82:	d8fa      	bhi.n	403a7a <memset+0x6a>
  403a84:	1f22      	subs	r2, r4, #4
  403a86:	f022 0203 	bic.w	r2, r2, #3
  403a8a:	3204      	adds	r2, #4
  403a8c:	4413      	add	r3, r2
  403a8e:	f004 0403 	and.w	r4, r4, #3
  403a92:	b12c      	cbz	r4, 403aa0 <memset+0x90>
  403a94:	b2c9      	uxtb	r1, r1
  403a96:	441c      	add	r4, r3
  403a98:	f803 1b01 	strb.w	r1, [r3], #1
  403a9c:	429c      	cmp	r4, r3
  403a9e:	d1fb      	bne.n	403a98 <memset+0x88>
  403aa0:	bc70      	pop	{r4, r5, r6}
  403aa2:	4770      	bx	lr
  403aa4:	4614      	mov	r4, r2
  403aa6:	4603      	mov	r3, r0
  403aa8:	e7c2      	b.n	403a30 <memset+0x20>
  403aaa:	bf00      	nop

00403aac <__malloc_lock>:
  403aac:	4801      	ldr	r0, [pc, #4]	; (403ab4 <__malloc_lock+0x8>)
  403aae:	f001 bce1 	b.w	405474 <__retarget_lock_acquire_recursive>
  403ab2:	bf00      	nop
  403ab4:	2044258c 	.word	0x2044258c

00403ab8 <__malloc_unlock>:
  403ab8:	4801      	ldr	r0, [pc, #4]	; (403ac0 <__malloc_unlock+0x8>)
  403aba:	f001 bcdd 	b.w	405478 <__retarget_lock_release_recursive>
  403abe:	bf00      	nop
  403ac0:	2044258c 	.word	0x2044258c

00403ac4 <_sbrk_r>:
  403ac4:	b538      	push	{r3, r4, r5, lr}
  403ac6:	4c07      	ldr	r4, [pc, #28]	; (403ae4 <_sbrk_r+0x20>)
  403ac8:	2300      	movs	r3, #0
  403aca:	4605      	mov	r5, r0
  403acc:	4608      	mov	r0, r1
  403ace:	6023      	str	r3, [r4, #0]
  403ad0:	f7fe fd68 	bl	4025a4 <_sbrk>
  403ad4:	1c43      	adds	r3, r0, #1
  403ad6:	d000      	beq.n	403ada <_sbrk_r+0x16>
  403ad8:	bd38      	pop	{r3, r4, r5, pc}
  403ada:	6823      	ldr	r3, [r4, #0]
  403adc:	2b00      	cmp	r3, #0
  403ade:	d0fb      	beq.n	403ad8 <_sbrk_r+0x14>
  403ae0:	602b      	str	r3, [r5, #0]
  403ae2:	bd38      	pop	{r3, r4, r5, pc}
  403ae4:	204425a0 	.word	0x204425a0

00403ae8 <setbuf>:
  403ae8:	2900      	cmp	r1, #0
  403aea:	bf0c      	ite	eq
  403aec:	2202      	moveq	r2, #2
  403aee:	2200      	movne	r2, #0
  403af0:	f44f 6380 	mov.w	r3, #1024	; 0x400
  403af4:	f000 b800 	b.w	403af8 <setvbuf>

00403af8 <setvbuf>:
  403af8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  403afc:	4c61      	ldr	r4, [pc, #388]	; (403c84 <setvbuf+0x18c>)
  403afe:	6825      	ldr	r5, [r4, #0]
  403b00:	b083      	sub	sp, #12
  403b02:	4604      	mov	r4, r0
  403b04:	460f      	mov	r7, r1
  403b06:	4690      	mov	r8, r2
  403b08:	461e      	mov	r6, r3
  403b0a:	b115      	cbz	r5, 403b12 <setvbuf+0x1a>
  403b0c:	6bab      	ldr	r3, [r5, #56]	; 0x38
  403b0e:	2b00      	cmp	r3, #0
  403b10:	d064      	beq.n	403bdc <setvbuf+0xe4>
  403b12:	f1b8 0f02 	cmp.w	r8, #2
  403b16:	d006      	beq.n	403b26 <setvbuf+0x2e>
  403b18:	f1b8 0f01 	cmp.w	r8, #1
  403b1c:	f200 809f 	bhi.w	403c5e <setvbuf+0x166>
  403b20:	2e00      	cmp	r6, #0
  403b22:	f2c0 809c 	blt.w	403c5e <setvbuf+0x166>
  403b26:	6e63      	ldr	r3, [r4, #100]	; 0x64
  403b28:	07d8      	lsls	r0, r3, #31
  403b2a:	d534      	bpl.n	403b96 <setvbuf+0x9e>
  403b2c:	4621      	mov	r1, r4
  403b2e:	4628      	mov	r0, r5
  403b30:	f001 f888 	bl	404c44 <_fflush_r>
  403b34:	6b21      	ldr	r1, [r4, #48]	; 0x30
  403b36:	b141      	cbz	r1, 403b4a <setvbuf+0x52>
  403b38:	f104 0340 	add.w	r3, r4, #64	; 0x40
  403b3c:	4299      	cmp	r1, r3
  403b3e:	d002      	beq.n	403b46 <setvbuf+0x4e>
  403b40:	4628      	mov	r0, r5
  403b42:	f001 f9fd 	bl	404f40 <_free_r>
  403b46:	2300      	movs	r3, #0
  403b48:	6323      	str	r3, [r4, #48]	; 0x30
  403b4a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  403b4e:	2200      	movs	r2, #0
  403b50:	61a2      	str	r2, [r4, #24]
  403b52:	6062      	str	r2, [r4, #4]
  403b54:	061a      	lsls	r2, r3, #24
  403b56:	d43a      	bmi.n	403bce <setvbuf+0xd6>
  403b58:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  403b5c:	f023 0303 	bic.w	r3, r3, #3
  403b60:	f1b8 0f02 	cmp.w	r8, #2
  403b64:	81a3      	strh	r3, [r4, #12]
  403b66:	d01d      	beq.n	403ba4 <setvbuf+0xac>
  403b68:	ab01      	add	r3, sp, #4
  403b6a:	466a      	mov	r2, sp
  403b6c:	4621      	mov	r1, r4
  403b6e:	4628      	mov	r0, r5
  403b70:	f001 fc84 	bl	40547c <__swhatbuf_r>
  403b74:	89a3      	ldrh	r3, [r4, #12]
  403b76:	4318      	orrs	r0, r3
  403b78:	81a0      	strh	r0, [r4, #12]
  403b7a:	2e00      	cmp	r6, #0
  403b7c:	d132      	bne.n	403be4 <setvbuf+0xec>
  403b7e:	9e00      	ldr	r6, [sp, #0]
  403b80:	4630      	mov	r0, r6
  403b82:	f7ff fc8d 	bl	4034a0 <malloc>
  403b86:	4607      	mov	r7, r0
  403b88:	2800      	cmp	r0, #0
  403b8a:	d06b      	beq.n	403c64 <setvbuf+0x16c>
  403b8c:	89a3      	ldrh	r3, [r4, #12]
  403b8e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  403b92:	81a3      	strh	r3, [r4, #12]
  403b94:	e028      	b.n	403be8 <setvbuf+0xf0>
  403b96:	89a3      	ldrh	r3, [r4, #12]
  403b98:	0599      	lsls	r1, r3, #22
  403b9a:	d4c7      	bmi.n	403b2c <setvbuf+0x34>
  403b9c:	6da0      	ldr	r0, [r4, #88]	; 0x58
  403b9e:	f001 fc69 	bl	405474 <__retarget_lock_acquire_recursive>
  403ba2:	e7c3      	b.n	403b2c <setvbuf+0x34>
  403ba4:	2500      	movs	r5, #0
  403ba6:	6e61      	ldr	r1, [r4, #100]	; 0x64
  403ba8:	2600      	movs	r6, #0
  403baa:	f104 0243 	add.w	r2, r4, #67	; 0x43
  403bae:	f043 0302 	orr.w	r3, r3, #2
  403bb2:	2001      	movs	r0, #1
  403bb4:	60a6      	str	r6, [r4, #8]
  403bb6:	07ce      	lsls	r6, r1, #31
  403bb8:	81a3      	strh	r3, [r4, #12]
  403bba:	6022      	str	r2, [r4, #0]
  403bbc:	6122      	str	r2, [r4, #16]
  403bbe:	6160      	str	r0, [r4, #20]
  403bc0:	d401      	bmi.n	403bc6 <setvbuf+0xce>
  403bc2:	0598      	lsls	r0, r3, #22
  403bc4:	d53e      	bpl.n	403c44 <setvbuf+0x14c>
  403bc6:	4628      	mov	r0, r5
  403bc8:	b003      	add	sp, #12
  403bca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  403bce:	6921      	ldr	r1, [r4, #16]
  403bd0:	4628      	mov	r0, r5
  403bd2:	f001 f9b5 	bl	404f40 <_free_r>
  403bd6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  403bda:	e7bd      	b.n	403b58 <setvbuf+0x60>
  403bdc:	4628      	mov	r0, r5
  403bde:	f001 f889 	bl	404cf4 <__sinit>
  403be2:	e796      	b.n	403b12 <setvbuf+0x1a>
  403be4:	2f00      	cmp	r7, #0
  403be6:	d0cb      	beq.n	403b80 <setvbuf+0x88>
  403be8:	6bab      	ldr	r3, [r5, #56]	; 0x38
  403bea:	2b00      	cmp	r3, #0
  403bec:	d033      	beq.n	403c56 <setvbuf+0x15e>
  403bee:	9b00      	ldr	r3, [sp, #0]
  403bf0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  403bf4:	6027      	str	r7, [r4, #0]
  403bf6:	429e      	cmp	r6, r3
  403bf8:	bf1c      	itt	ne
  403bfa:	f442 6200 	orrne.w	r2, r2, #2048	; 0x800
  403bfe:	81a2      	strhne	r2, [r4, #12]
  403c00:	f1b8 0f01 	cmp.w	r8, #1
  403c04:	bf04      	itt	eq
  403c06:	f042 0201 	orreq.w	r2, r2, #1
  403c0a:	81a2      	strheq	r2, [r4, #12]
  403c0c:	b292      	uxth	r2, r2
  403c0e:	f012 0308 	ands.w	r3, r2, #8
  403c12:	6127      	str	r7, [r4, #16]
  403c14:	6166      	str	r6, [r4, #20]
  403c16:	d00e      	beq.n	403c36 <setvbuf+0x13e>
  403c18:	07d1      	lsls	r1, r2, #31
  403c1a:	d51a      	bpl.n	403c52 <setvbuf+0x15a>
  403c1c:	6e65      	ldr	r5, [r4, #100]	; 0x64
  403c1e:	4276      	negs	r6, r6
  403c20:	2300      	movs	r3, #0
  403c22:	f015 0501 	ands.w	r5, r5, #1
  403c26:	61a6      	str	r6, [r4, #24]
  403c28:	60a3      	str	r3, [r4, #8]
  403c2a:	d009      	beq.n	403c40 <setvbuf+0x148>
  403c2c:	2500      	movs	r5, #0
  403c2e:	4628      	mov	r0, r5
  403c30:	b003      	add	sp, #12
  403c32:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  403c36:	60a3      	str	r3, [r4, #8]
  403c38:	6e65      	ldr	r5, [r4, #100]	; 0x64
  403c3a:	f015 0501 	ands.w	r5, r5, #1
  403c3e:	d1f5      	bne.n	403c2c <setvbuf+0x134>
  403c40:	0593      	lsls	r3, r2, #22
  403c42:	d4c0      	bmi.n	403bc6 <setvbuf+0xce>
  403c44:	6da0      	ldr	r0, [r4, #88]	; 0x58
  403c46:	f001 fc17 	bl	405478 <__retarget_lock_release_recursive>
  403c4a:	4628      	mov	r0, r5
  403c4c:	b003      	add	sp, #12
  403c4e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  403c52:	60a6      	str	r6, [r4, #8]
  403c54:	e7f0      	b.n	403c38 <setvbuf+0x140>
  403c56:	4628      	mov	r0, r5
  403c58:	f001 f84c 	bl	404cf4 <__sinit>
  403c5c:	e7c7      	b.n	403bee <setvbuf+0xf6>
  403c5e:	f04f 35ff 	mov.w	r5, #4294967295
  403c62:	e7b0      	b.n	403bc6 <setvbuf+0xce>
  403c64:	f8dd 9000 	ldr.w	r9, [sp]
  403c68:	45b1      	cmp	r9, r6
  403c6a:	d004      	beq.n	403c76 <setvbuf+0x17e>
  403c6c:	4648      	mov	r0, r9
  403c6e:	f7ff fc17 	bl	4034a0 <malloc>
  403c72:	4607      	mov	r7, r0
  403c74:	b920      	cbnz	r0, 403c80 <setvbuf+0x188>
  403c76:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  403c7a:	f04f 35ff 	mov.w	r5, #4294967295
  403c7e:	e792      	b.n	403ba6 <setvbuf+0xae>
  403c80:	464e      	mov	r6, r9
  403c82:	e783      	b.n	403b8c <setvbuf+0x94>
  403c84:	20400038 	.word	0x20400038

00403c88 <__sprint_r.part.0>:
  403c88:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403c8c:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  403c8e:	049c      	lsls	r4, r3, #18
  403c90:	4693      	mov	fp, r2
  403c92:	d52f      	bpl.n	403cf4 <__sprint_r.part.0+0x6c>
  403c94:	6893      	ldr	r3, [r2, #8]
  403c96:	6812      	ldr	r2, [r2, #0]
  403c98:	b353      	cbz	r3, 403cf0 <__sprint_r.part.0+0x68>
  403c9a:	460e      	mov	r6, r1
  403c9c:	4607      	mov	r7, r0
  403c9e:	f102 0908 	add.w	r9, r2, #8
  403ca2:	e919 0420 	ldmdb	r9, {r5, sl}
  403ca6:	ea5f 089a 	movs.w	r8, sl, lsr #2
  403caa:	d017      	beq.n	403cdc <__sprint_r.part.0+0x54>
  403cac:	3d04      	subs	r5, #4
  403cae:	2400      	movs	r4, #0
  403cb0:	e001      	b.n	403cb6 <__sprint_r.part.0+0x2e>
  403cb2:	45a0      	cmp	r8, r4
  403cb4:	d010      	beq.n	403cd8 <__sprint_r.part.0+0x50>
  403cb6:	4632      	mov	r2, r6
  403cb8:	f855 1f04 	ldr.w	r1, [r5, #4]!
  403cbc:	4638      	mov	r0, r7
  403cbe:	f001 f8bb 	bl	404e38 <_fputwc_r>
  403cc2:	1c43      	adds	r3, r0, #1
  403cc4:	f104 0401 	add.w	r4, r4, #1
  403cc8:	d1f3      	bne.n	403cb2 <__sprint_r.part.0+0x2a>
  403cca:	2300      	movs	r3, #0
  403ccc:	f8cb 3008 	str.w	r3, [fp, #8]
  403cd0:	f8cb 3004 	str.w	r3, [fp, #4]
  403cd4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403cd8:	f8db 3008 	ldr.w	r3, [fp, #8]
  403cdc:	f02a 0a03 	bic.w	sl, sl, #3
  403ce0:	eba3 030a 	sub.w	r3, r3, sl
  403ce4:	f8cb 3008 	str.w	r3, [fp, #8]
  403ce8:	f109 0908 	add.w	r9, r9, #8
  403cec:	2b00      	cmp	r3, #0
  403cee:	d1d8      	bne.n	403ca2 <__sprint_r.part.0+0x1a>
  403cf0:	2000      	movs	r0, #0
  403cf2:	e7ea      	b.n	403cca <__sprint_r.part.0+0x42>
  403cf4:	f001 fa0a 	bl	40510c <__sfvwrite_r>
  403cf8:	2300      	movs	r3, #0
  403cfa:	f8cb 3008 	str.w	r3, [fp, #8]
  403cfe:	f8cb 3004 	str.w	r3, [fp, #4]
  403d02:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403d06:	bf00      	nop

00403d08 <_vfiprintf_r>:
  403d08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403d0c:	b0ad      	sub	sp, #180	; 0xb4
  403d0e:	461d      	mov	r5, r3
  403d10:	468b      	mov	fp, r1
  403d12:	4690      	mov	r8, r2
  403d14:	9307      	str	r3, [sp, #28]
  403d16:	9006      	str	r0, [sp, #24]
  403d18:	b118      	cbz	r0, 403d22 <_vfiprintf_r+0x1a>
  403d1a:	6b83      	ldr	r3, [r0, #56]	; 0x38
  403d1c:	2b00      	cmp	r3, #0
  403d1e:	f000 80f3 	beq.w	403f08 <_vfiprintf_r+0x200>
  403d22:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  403d26:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
  403d2a:	07df      	lsls	r7, r3, #31
  403d2c:	b281      	uxth	r1, r0
  403d2e:	d402      	bmi.n	403d36 <_vfiprintf_r+0x2e>
  403d30:	058e      	lsls	r6, r1, #22
  403d32:	f140 80fc 	bpl.w	403f2e <_vfiprintf_r+0x226>
  403d36:	048c      	lsls	r4, r1, #18
  403d38:	d40a      	bmi.n	403d50 <_vfiprintf_r+0x48>
  403d3a:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  403d3e:	f440 5100 	orr.w	r1, r0, #8192	; 0x2000
  403d42:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  403d46:	f8ab 100c 	strh.w	r1, [fp, #12]
  403d4a:	f8cb 3064 	str.w	r3, [fp, #100]	; 0x64
  403d4e:	b289      	uxth	r1, r1
  403d50:	0708      	lsls	r0, r1, #28
  403d52:	f140 80b3 	bpl.w	403ebc <_vfiprintf_r+0x1b4>
  403d56:	f8db 3010 	ldr.w	r3, [fp, #16]
  403d5a:	2b00      	cmp	r3, #0
  403d5c:	f000 80ae 	beq.w	403ebc <_vfiprintf_r+0x1b4>
  403d60:	f001 031a 	and.w	r3, r1, #26
  403d64:	2b0a      	cmp	r3, #10
  403d66:	f000 80b5 	beq.w	403ed4 <_vfiprintf_r+0x1cc>
  403d6a:	2300      	movs	r3, #0
  403d6c:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  403d70:	930b      	str	r3, [sp, #44]	; 0x2c
  403d72:	9311      	str	r3, [sp, #68]	; 0x44
  403d74:	9310      	str	r3, [sp, #64]	; 0x40
  403d76:	9303      	str	r3, [sp, #12]
  403d78:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  403d7c:	46ca      	mov	sl, r9
  403d7e:	f8cd b010 	str.w	fp, [sp, #16]
  403d82:	f898 3000 	ldrb.w	r3, [r8]
  403d86:	4644      	mov	r4, r8
  403d88:	b1fb      	cbz	r3, 403dca <_vfiprintf_r+0xc2>
  403d8a:	2b25      	cmp	r3, #37	; 0x25
  403d8c:	d102      	bne.n	403d94 <_vfiprintf_r+0x8c>
  403d8e:	e01c      	b.n	403dca <_vfiprintf_r+0xc2>
  403d90:	2b25      	cmp	r3, #37	; 0x25
  403d92:	d003      	beq.n	403d9c <_vfiprintf_r+0x94>
  403d94:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  403d98:	2b00      	cmp	r3, #0
  403d9a:	d1f9      	bne.n	403d90 <_vfiprintf_r+0x88>
  403d9c:	eba4 0508 	sub.w	r5, r4, r8
  403da0:	b19d      	cbz	r5, 403dca <_vfiprintf_r+0xc2>
  403da2:	9b10      	ldr	r3, [sp, #64]	; 0x40
  403da4:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403da6:	f8ca 8000 	str.w	r8, [sl]
  403daa:	3301      	adds	r3, #1
  403dac:	442a      	add	r2, r5
  403dae:	2b07      	cmp	r3, #7
  403db0:	f8ca 5004 	str.w	r5, [sl, #4]
  403db4:	9211      	str	r2, [sp, #68]	; 0x44
  403db6:	9310      	str	r3, [sp, #64]	; 0x40
  403db8:	dd7a      	ble.n	403eb0 <_vfiprintf_r+0x1a8>
  403dba:	2a00      	cmp	r2, #0
  403dbc:	f040 84b0 	bne.w	404720 <_vfiprintf_r+0xa18>
  403dc0:	9b03      	ldr	r3, [sp, #12]
  403dc2:	9210      	str	r2, [sp, #64]	; 0x40
  403dc4:	442b      	add	r3, r5
  403dc6:	46ca      	mov	sl, r9
  403dc8:	9303      	str	r3, [sp, #12]
  403dca:	7823      	ldrb	r3, [r4, #0]
  403dcc:	2b00      	cmp	r3, #0
  403dce:	f000 83e0 	beq.w	404592 <_vfiprintf_r+0x88a>
  403dd2:	2000      	movs	r0, #0
  403dd4:	f04f 0300 	mov.w	r3, #0
  403dd8:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
  403ddc:	f104 0801 	add.w	r8, r4, #1
  403de0:	7862      	ldrb	r2, [r4, #1]
  403de2:	4605      	mov	r5, r0
  403de4:	4606      	mov	r6, r0
  403de6:	4603      	mov	r3, r0
  403de8:	f04f 34ff 	mov.w	r4, #4294967295
  403dec:	f108 0801 	add.w	r8, r8, #1
  403df0:	f1a2 0120 	sub.w	r1, r2, #32
  403df4:	2958      	cmp	r1, #88	; 0x58
  403df6:	f200 82de 	bhi.w	4043b6 <_vfiprintf_r+0x6ae>
  403dfa:	e8df f011 	tbh	[pc, r1, lsl #1]
  403dfe:	0221      	.short	0x0221
  403e00:	02dc02dc 	.word	0x02dc02dc
  403e04:	02dc0229 	.word	0x02dc0229
  403e08:	02dc02dc 	.word	0x02dc02dc
  403e0c:	02dc02dc 	.word	0x02dc02dc
  403e10:	028902dc 	.word	0x028902dc
  403e14:	02dc0295 	.word	0x02dc0295
  403e18:	02bd00a2 	.word	0x02bd00a2
  403e1c:	019f02dc 	.word	0x019f02dc
  403e20:	01a401a4 	.word	0x01a401a4
  403e24:	01a401a4 	.word	0x01a401a4
  403e28:	01a401a4 	.word	0x01a401a4
  403e2c:	01a401a4 	.word	0x01a401a4
  403e30:	02dc01a4 	.word	0x02dc01a4
  403e34:	02dc02dc 	.word	0x02dc02dc
  403e38:	02dc02dc 	.word	0x02dc02dc
  403e3c:	02dc02dc 	.word	0x02dc02dc
  403e40:	02dc02dc 	.word	0x02dc02dc
  403e44:	01b202dc 	.word	0x01b202dc
  403e48:	02dc02dc 	.word	0x02dc02dc
  403e4c:	02dc02dc 	.word	0x02dc02dc
  403e50:	02dc02dc 	.word	0x02dc02dc
  403e54:	02dc02dc 	.word	0x02dc02dc
  403e58:	02dc02dc 	.word	0x02dc02dc
  403e5c:	02dc0197 	.word	0x02dc0197
  403e60:	02dc02dc 	.word	0x02dc02dc
  403e64:	02dc02dc 	.word	0x02dc02dc
  403e68:	02dc019b 	.word	0x02dc019b
  403e6c:	025302dc 	.word	0x025302dc
  403e70:	02dc02dc 	.word	0x02dc02dc
  403e74:	02dc02dc 	.word	0x02dc02dc
  403e78:	02dc02dc 	.word	0x02dc02dc
  403e7c:	02dc02dc 	.word	0x02dc02dc
  403e80:	02dc02dc 	.word	0x02dc02dc
  403e84:	021b025a 	.word	0x021b025a
  403e88:	02dc02dc 	.word	0x02dc02dc
  403e8c:	026e02dc 	.word	0x026e02dc
  403e90:	02dc021b 	.word	0x02dc021b
  403e94:	027302dc 	.word	0x027302dc
  403e98:	01f502dc 	.word	0x01f502dc
  403e9c:	02090182 	.word	0x02090182
  403ea0:	02dc02d7 	.word	0x02dc02d7
  403ea4:	02dc029a 	.word	0x02dc029a
  403ea8:	02dc00a7 	.word	0x02dc00a7
  403eac:	022e02dc 	.word	0x022e02dc
  403eb0:	f10a 0a08 	add.w	sl, sl, #8
  403eb4:	9b03      	ldr	r3, [sp, #12]
  403eb6:	442b      	add	r3, r5
  403eb8:	9303      	str	r3, [sp, #12]
  403eba:	e786      	b.n	403dca <_vfiprintf_r+0xc2>
  403ebc:	4659      	mov	r1, fp
  403ebe:	9806      	ldr	r0, [sp, #24]
  403ec0:	f000 fdac 	bl	404a1c <__swsetup_r>
  403ec4:	bb18      	cbnz	r0, 403f0e <_vfiprintf_r+0x206>
  403ec6:	f8bb 100c 	ldrh.w	r1, [fp, #12]
  403eca:	f001 031a 	and.w	r3, r1, #26
  403ece:	2b0a      	cmp	r3, #10
  403ed0:	f47f af4b 	bne.w	403d6a <_vfiprintf_r+0x62>
  403ed4:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
  403ed8:	2b00      	cmp	r3, #0
  403eda:	f6ff af46 	blt.w	403d6a <_vfiprintf_r+0x62>
  403ede:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  403ee2:	07db      	lsls	r3, r3, #31
  403ee4:	d405      	bmi.n	403ef2 <_vfiprintf_r+0x1ea>
  403ee6:	058f      	lsls	r7, r1, #22
  403ee8:	d403      	bmi.n	403ef2 <_vfiprintf_r+0x1ea>
  403eea:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  403eee:	f001 fac3 	bl	405478 <__retarget_lock_release_recursive>
  403ef2:	462b      	mov	r3, r5
  403ef4:	4642      	mov	r2, r8
  403ef6:	4659      	mov	r1, fp
  403ef8:	9806      	ldr	r0, [sp, #24]
  403efa:	f000 fd4d 	bl	404998 <__sbprintf>
  403efe:	9003      	str	r0, [sp, #12]
  403f00:	9803      	ldr	r0, [sp, #12]
  403f02:	b02d      	add	sp, #180	; 0xb4
  403f04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403f08:	f000 fef4 	bl	404cf4 <__sinit>
  403f0c:	e709      	b.n	403d22 <_vfiprintf_r+0x1a>
  403f0e:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  403f12:	07d9      	lsls	r1, r3, #31
  403f14:	d404      	bmi.n	403f20 <_vfiprintf_r+0x218>
  403f16:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  403f1a:	059a      	lsls	r2, r3, #22
  403f1c:	f140 84aa 	bpl.w	404874 <_vfiprintf_r+0xb6c>
  403f20:	f04f 33ff 	mov.w	r3, #4294967295
  403f24:	9303      	str	r3, [sp, #12]
  403f26:	9803      	ldr	r0, [sp, #12]
  403f28:	b02d      	add	sp, #180	; 0xb4
  403f2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403f2e:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  403f32:	f001 fa9f 	bl	405474 <__retarget_lock_acquire_recursive>
  403f36:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
  403f3a:	b281      	uxth	r1, r0
  403f3c:	e6fb      	b.n	403d36 <_vfiprintf_r+0x2e>
  403f3e:	4276      	negs	r6, r6
  403f40:	9207      	str	r2, [sp, #28]
  403f42:	f043 0304 	orr.w	r3, r3, #4
  403f46:	f898 2000 	ldrb.w	r2, [r8]
  403f4a:	e74f      	b.n	403dec <_vfiprintf_r+0xe4>
  403f4c:	9608      	str	r6, [sp, #32]
  403f4e:	069e      	lsls	r6, r3, #26
  403f50:	f100 8450 	bmi.w	4047f4 <_vfiprintf_r+0xaec>
  403f54:	9907      	ldr	r1, [sp, #28]
  403f56:	06dd      	lsls	r5, r3, #27
  403f58:	460a      	mov	r2, r1
  403f5a:	f100 83ef 	bmi.w	40473c <_vfiprintf_r+0xa34>
  403f5e:	0658      	lsls	r0, r3, #25
  403f60:	f140 83ec 	bpl.w	40473c <_vfiprintf_r+0xa34>
  403f64:	880e      	ldrh	r6, [r1, #0]
  403f66:	3104      	adds	r1, #4
  403f68:	2700      	movs	r7, #0
  403f6a:	2201      	movs	r2, #1
  403f6c:	9107      	str	r1, [sp, #28]
  403f6e:	f04f 0100 	mov.w	r1, #0
  403f72:	f88d 1037 	strb.w	r1, [sp, #55]	; 0x37
  403f76:	2500      	movs	r5, #0
  403f78:	1c61      	adds	r1, r4, #1
  403f7a:	f000 8116 	beq.w	4041aa <_vfiprintf_r+0x4a2>
  403f7e:	f023 0180 	bic.w	r1, r3, #128	; 0x80
  403f82:	9102      	str	r1, [sp, #8]
  403f84:	ea56 0107 	orrs.w	r1, r6, r7
  403f88:	f040 8114 	bne.w	4041b4 <_vfiprintf_r+0x4ac>
  403f8c:	2c00      	cmp	r4, #0
  403f8e:	f040 835c 	bne.w	40464a <_vfiprintf_r+0x942>
  403f92:	2a00      	cmp	r2, #0
  403f94:	f040 83b7 	bne.w	404706 <_vfiprintf_r+0x9fe>
  403f98:	f013 0301 	ands.w	r3, r3, #1
  403f9c:	9305      	str	r3, [sp, #20]
  403f9e:	f000 8457 	beq.w	404850 <_vfiprintf_r+0xb48>
  403fa2:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
  403fa6:	2330      	movs	r3, #48	; 0x30
  403fa8:	f80b 3d41 	strb.w	r3, [fp, #-65]!
  403fac:	9b05      	ldr	r3, [sp, #20]
  403fae:	42a3      	cmp	r3, r4
  403fb0:	bfb8      	it	lt
  403fb2:	4623      	movlt	r3, r4
  403fb4:	9301      	str	r3, [sp, #4]
  403fb6:	b10d      	cbz	r5, 403fbc <_vfiprintf_r+0x2b4>
  403fb8:	3301      	adds	r3, #1
  403fba:	9301      	str	r3, [sp, #4]
  403fbc:	9b02      	ldr	r3, [sp, #8]
  403fbe:	f013 0302 	ands.w	r3, r3, #2
  403fc2:	9309      	str	r3, [sp, #36]	; 0x24
  403fc4:	d002      	beq.n	403fcc <_vfiprintf_r+0x2c4>
  403fc6:	9b01      	ldr	r3, [sp, #4]
  403fc8:	3302      	adds	r3, #2
  403fca:	9301      	str	r3, [sp, #4]
  403fcc:	9b02      	ldr	r3, [sp, #8]
  403fce:	f013 0384 	ands.w	r3, r3, #132	; 0x84
  403fd2:	930a      	str	r3, [sp, #40]	; 0x28
  403fd4:	f040 8217 	bne.w	404406 <_vfiprintf_r+0x6fe>
  403fd8:	9b08      	ldr	r3, [sp, #32]
  403fda:	9a01      	ldr	r2, [sp, #4]
  403fdc:	1a9d      	subs	r5, r3, r2
  403fde:	2d00      	cmp	r5, #0
  403fe0:	f340 8211 	ble.w	404406 <_vfiprintf_r+0x6fe>
  403fe4:	2d10      	cmp	r5, #16
  403fe6:	f340 8490 	ble.w	40490a <_vfiprintf_r+0xc02>
  403fea:	9b10      	ldr	r3, [sp, #64]	; 0x40
  403fec:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403fee:	4ec4      	ldr	r6, [pc, #784]	; (404300 <_vfiprintf_r+0x5f8>)
  403ff0:	46d6      	mov	lr, sl
  403ff2:	2710      	movs	r7, #16
  403ff4:	46a2      	mov	sl, r4
  403ff6:	4619      	mov	r1, r3
  403ff8:	9c06      	ldr	r4, [sp, #24]
  403ffa:	e007      	b.n	40400c <_vfiprintf_r+0x304>
  403ffc:	f101 0c02 	add.w	ip, r1, #2
  404000:	f10e 0e08 	add.w	lr, lr, #8
  404004:	4601      	mov	r1, r0
  404006:	3d10      	subs	r5, #16
  404008:	2d10      	cmp	r5, #16
  40400a:	dd11      	ble.n	404030 <_vfiprintf_r+0x328>
  40400c:	1c48      	adds	r0, r1, #1
  40400e:	3210      	adds	r2, #16
  404010:	2807      	cmp	r0, #7
  404012:	9211      	str	r2, [sp, #68]	; 0x44
  404014:	e88e 00c0 	stmia.w	lr, {r6, r7}
  404018:	9010      	str	r0, [sp, #64]	; 0x40
  40401a:	ddef      	ble.n	403ffc <_vfiprintf_r+0x2f4>
  40401c:	2a00      	cmp	r2, #0
  40401e:	f040 81e4 	bne.w	4043ea <_vfiprintf_r+0x6e2>
  404022:	3d10      	subs	r5, #16
  404024:	2d10      	cmp	r5, #16
  404026:	4611      	mov	r1, r2
  404028:	f04f 0c01 	mov.w	ip, #1
  40402c:	46ce      	mov	lr, r9
  40402e:	dced      	bgt.n	40400c <_vfiprintf_r+0x304>
  404030:	4654      	mov	r4, sl
  404032:	4661      	mov	r1, ip
  404034:	46f2      	mov	sl, lr
  404036:	442a      	add	r2, r5
  404038:	2907      	cmp	r1, #7
  40403a:	9211      	str	r2, [sp, #68]	; 0x44
  40403c:	f8ca 6000 	str.w	r6, [sl]
  404040:	f8ca 5004 	str.w	r5, [sl, #4]
  404044:	9110      	str	r1, [sp, #64]	; 0x40
  404046:	f300 82ec 	bgt.w	404622 <_vfiprintf_r+0x91a>
  40404a:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  40404e:	f10a 0a08 	add.w	sl, sl, #8
  404052:	1c48      	adds	r0, r1, #1
  404054:	2d00      	cmp	r5, #0
  404056:	f040 81de 	bne.w	404416 <_vfiprintf_r+0x70e>
  40405a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40405c:	2b00      	cmp	r3, #0
  40405e:	f000 81f8 	beq.w	404452 <_vfiprintf_r+0x74a>
  404062:	3202      	adds	r2, #2
  404064:	a90e      	add	r1, sp, #56	; 0x38
  404066:	2302      	movs	r3, #2
  404068:	2807      	cmp	r0, #7
  40406a:	9211      	str	r2, [sp, #68]	; 0x44
  40406c:	9010      	str	r0, [sp, #64]	; 0x40
  40406e:	e88a 000a 	stmia.w	sl, {r1, r3}
  404072:	f340 81ea 	ble.w	40444a <_vfiprintf_r+0x742>
  404076:	2a00      	cmp	r2, #0
  404078:	f040 838c 	bne.w	404794 <_vfiprintf_r+0xa8c>
  40407c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40407e:	2b80      	cmp	r3, #128	; 0x80
  404080:	f04f 0001 	mov.w	r0, #1
  404084:	4611      	mov	r1, r2
  404086:	46ca      	mov	sl, r9
  404088:	f040 81e7 	bne.w	40445a <_vfiprintf_r+0x752>
  40408c:	9b08      	ldr	r3, [sp, #32]
  40408e:	9d01      	ldr	r5, [sp, #4]
  404090:	1b5e      	subs	r6, r3, r5
  404092:	2e00      	cmp	r6, #0
  404094:	f340 81e1 	ble.w	40445a <_vfiprintf_r+0x752>
  404098:	2e10      	cmp	r6, #16
  40409a:	4d9a      	ldr	r5, [pc, #616]	; (404304 <_vfiprintf_r+0x5fc>)
  40409c:	f340 8450 	ble.w	404940 <_vfiprintf_r+0xc38>
  4040a0:	46d4      	mov	ip, sl
  4040a2:	2710      	movs	r7, #16
  4040a4:	46a2      	mov	sl, r4
  4040a6:	9c06      	ldr	r4, [sp, #24]
  4040a8:	e007      	b.n	4040ba <_vfiprintf_r+0x3b2>
  4040aa:	f101 0e02 	add.w	lr, r1, #2
  4040ae:	f10c 0c08 	add.w	ip, ip, #8
  4040b2:	4601      	mov	r1, r0
  4040b4:	3e10      	subs	r6, #16
  4040b6:	2e10      	cmp	r6, #16
  4040b8:	dd11      	ble.n	4040de <_vfiprintf_r+0x3d6>
  4040ba:	1c48      	adds	r0, r1, #1
  4040bc:	3210      	adds	r2, #16
  4040be:	2807      	cmp	r0, #7
  4040c0:	9211      	str	r2, [sp, #68]	; 0x44
  4040c2:	e88c 00a0 	stmia.w	ip, {r5, r7}
  4040c6:	9010      	str	r0, [sp, #64]	; 0x40
  4040c8:	ddef      	ble.n	4040aa <_vfiprintf_r+0x3a2>
  4040ca:	2a00      	cmp	r2, #0
  4040cc:	f040 829d 	bne.w	40460a <_vfiprintf_r+0x902>
  4040d0:	3e10      	subs	r6, #16
  4040d2:	2e10      	cmp	r6, #16
  4040d4:	f04f 0e01 	mov.w	lr, #1
  4040d8:	4611      	mov	r1, r2
  4040da:	46cc      	mov	ip, r9
  4040dc:	dced      	bgt.n	4040ba <_vfiprintf_r+0x3b2>
  4040de:	4654      	mov	r4, sl
  4040e0:	46e2      	mov	sl, ip
  4040e2:	4432      	add	r2, r6
  4040e4:	f1be 0f07 	cmp.w	lr, #7
  4040e8:	9211      	str	r2, [sp, #68]	; 0x44
  4040ea:	e88a 0060 	stmia.w	sl, {r5, r6}
  4040ee:	f8cd e040 	str.w	lr, [sp, #64]	; 0x40
  4040f2:	f300 8369 	bgt.w	4047c8 <_vfiprintf_r+0xac0>
  4040f6:	f10a 0a08 	add.w	sl, sl, #8
  4040fa:	f10e 0001 	add.w	r0, lr, #1
  4040fe:	4671      	mov	r1, lr
  404100:	e1ab      	b.n	40445a <_vfiprintf_r+0x752>
  404102:	9608      	str	r6, [sp, #32]
  404104:	f013 0220 	ands.w	r2, r3, #32
  404108:	f040 838c 	bne.w	404824 <_vfiprintf_r+0xb1c>
  40410c:	f013 0110 	ands.w	r1, r3, #16
  404110:	f040 831a 	bne.w	404748 <_vfiprintf_r+0xa40>
  404114:	f013 0240 	ands.w	r2, r3, #64	; 0x40
  404118:	f000 8316 	beq.w	404748 <_vfiprintf_r+0xa40>
  40411c:	9807      	ldr	r0, [sp, #28]
  40411e:	460a      	mov	r2, r1
  404120:	4601      	mov	r1, r0
  404122:	3104      	adds	r1, #4
  404124:	8806      	ldrh	r6, [r0, #0]
  404126:	9107      	str	r1, [sp, #28]
  404128:	2700      	movs	r7, #0
  40412a:	e720      	b.n	403f6e <_vfiprintf_r+0x266>
  40412c:	9608      	str	r6, [sp, #32]
  40412e:	f043 0310 	orr.w	r3, r3, #16
  404132:	e7e7      	b.n	404104 <_vfiprintf_r+0x3fc>
  404134:	9608      	str	r6, [sp, #32]
  404136:	f043 0310 	orr.w	r3, r3, #16
  40413a:	e708      	b.n	403f4e <_vfiprintf_r+0x246>
  40413c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  404140:	f898 2000 	ldrb.w	r2, [r8]
  404144:	e652      	b.n	403dec <_vfiprintf_r+0xe4>
  404146:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  40414a:	2600      	movs	r6, #0
  40414c:	f818 2b01 	ldrb.w	r2, [r8], #1
  404150:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  404154:	eb01 0646 	add.w	r6, r1, r6, lsl #1
  404158:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  40415c:	2909      	cmp	r1, #9
  40415e:	d9f5      	bls.n	40414c <_vfiprintf_r+0x444>
  404160:	e646      	b.n	403df0 <_vfiprintf_r+0xe8>
  404162:	9608      	str	r6, [sp, #32]
  404164:	2800      	cmp	r0, #0
  404166:	f040 8408 	bne.w	40497a <_vfiprintf_r+0xc72>
  40416a:	f043 0310 	orr.w	r3, r3, #16
  40416e:	069e      	lsls	r6, r3, #26
  404170:	f100 834c 	bmi.w	40480c <_vfiprintf_r+0xb04>
  404174:	06dd      	lsls	r5, r3, #27
  404176:	f100 82f3 	bmi.w	404760 <_vfiprintf_r+0xa58>
  40417a:	0658      	lsls	r0, r3, #25
  40417c:	f140 82f0 	bpl.w	404760 <_vfiprintf_r+0xa58>
  404180:	9d07      	ldr	r5, [sp, #28]
  404182:	f9b5 6000 	ldrsh.w	r6, [r5]
  404186:	462a      	mov	r2, r5
  404188:	17f7      	asrs	r7, r6, #31
  40418a:	3204      	adds	r2, #4
  40418c:	4630      	mov	r0, r6
  40418e:	4639      	mov	r1, r7
  404190:	9207      	str	r2, [sp, #28]
  404192:	2800      	cmp	r0, #0
  404194:	f171 0200 	sbcs.w	r2, r1, #0
  404198:	f2c0 835d 	blt.w	404856 <_vfiprintf_r+0xb4e>
  40419c:	1c61      	adds	r1, r4, #1
  40419e:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  4041a2:	f04f 0201 	mov.w	r2, #1
  4041a6:	f47f aeea 	bne.w	403f7e <_vfiprintf_r+0x276>
  4041aa:	ea56 0107 	orrs.w	r1, r6, r7
  4041ae:	f000 824d 	beq.w	40464c <_vfiprintf_r+0x944>
  4041b2:	9302      	str	r3, [sp, #8]
  4041b4:	2a01      	cmp	r2, #1
  4041b6:	f000 828c 	beq.w	4046d2 <_vfiprintf_r+0x9ca>
  4041ba:	2a02      	cmp	r2, #2
  4041bc:	f040 825c 	bne.w	404678 <_vfiprintf_r+0x970>
  4041c0:	980b      	ldr	r0, [sp, #44]	; 0x2c
  4041c2:	46cb      	mov	fp, r9
  4041c4:	0933      	lsrs	r3, r6, #4
  4041c6:	f006 010f 	and.w	r1, r6, #15
  4041ca:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
  4041ce:	093a      	lsrs	r2, r7, #4
  4041d0:	461e      	mov	r6, r3
  4041d2:	4617      	mov	r7, r2
  4041d4:	5c43      	ldrb	r3, [r0, r1]
  4041d6:	f80b 3d01 	strb.w	r3, [fp, #-1]!
  4041da:	ea56 0307 	orrs.w	r3, r6, r7
  4041de:	d1f1      	bne.n	4041c4 <_vfiprintf_r+0x4bc>
  4041e0:	eba9 030b 	sub.w	r3, r9, fp
  4041e4:	9305      	str	r3, [sp, #20]
  4041e6:	e6e1      	b.n	403fac <_vfiprintf_r+0x2a4>
  4041e8:	2800      	cmp	r0, #0
  4041ea:	f040 83c0 	bne.w	40496e <_vfiprintf_r+0xc66>
  4041ee:	0699      	lsls	r1, r3, #26
  4041f0:	f100 8367 	bmi.w	4048c2 <_vfiprintf_r+0xbba>
  4041f4:	06da      	lsls	r2, r3, #27
  4041f6:	f100 80f1 	bmi.w	4043dc <_vfiprintf_r+0x6d4>
  4041fa:	065b      	lsls	r3, r3, #25
  4041fc:	f140 80ee 	bpl.w	4043dc <_vfiprintf_r+0x6d4>
  404200:	9a07      	ldr	r2, [sp, #28]
  404202:	6813      	ldr	r3, [r2, #0]
  404204:	3204      	adds	r2, #4
  404206:	9207      	str	r2, [sp, #28]
  404208:	f8bd 200c 	ldrh.w	r2, [sp, #12]
  40420c:	801a      	strh	r2, [r3, #0]
  40420e:	e5b8      	b.n	403d82 <_vfiprintf_r+0x7a>
  404210:	9807      	ldr	r0, [sp, #28]
  404212:	4a3d      	ldr	r2, [pc, #244]	; (404308 <_vfiprintf_r+0x600>)
  404214:	9608      	str	r6, [sp, #32]
  404216:	920b      	str	r2, [sp, #44]	; 0x2c
  404218:	6806      	ldr	r6, [r0, #0]
  40421a:	2278      	movs	r2, #120	; 0x78
  40421c:	2130      	movs	r1, #48	; 0x30
  40421e:	3004      	adds	r0, #4
  404220:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  404224:	f043 0302 	orr.w	r3, r3, #2
  404228:	9007      	str	r0, [sp, #28]
  40422a:	2700      	movs	r7, #0
  40422c:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  404230:	2202      	movs	r2, #2
  404232:	e69c      	b.n	403f6e <_vfiprintf_r+0x266>
  404234:	9608      	str	r6, [sp, #32]
  404236:	2800      	cmp	r0, #0
  404238:	d099      	beq.n	40416e <_vfiprintf_r+0x466>
  40423a:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  40423e:	e796      	b.n	40416e <_vfiprintf_r+0x466>
  404240:	f898 2000 	ldrb.w	r2, [r8]
  404244:	2d00      	cmp	r5, #0
  404246:	f47f add1 	bne.w	403dec <_vfiprintf_r+0xe4>
  40424a:	2001      	movs	r0, #1
  40424c:	2520      	movs	r5, #32
  40424e:	e5cd      	b.n	403dec <_vfiprintf_r+0xe4>
  404250:	f043 0301 	orr.w	r3, r3, #1
  404254:	f898 2000 	ldrb.w	r2, [r8]
  404258:	e5c8      	b.n	403dec <_vfiprintf_r+0xe4>
  40425a:	9608      	str	r6, [sp, #32]
  40425c:	2800      	cmp	r0, #0
  40425e:	f040 8393 	bne.w	404988 <_vfiprintf_r+0xc80>
  404262:	4929      	ldr	r1, [pc, #164]	; (404308 <_vfiprintf_r+0x600>)
  404264:	910b      	str	r1, [sp, #44]	; 0x2c
  404266:	069f      	lsls	r7, r3, #26
  404268:	f100 82e8 	bmi.w	40483c <_vfiprintf_r+0xb34>
  40426c:	9807      	ldr	r0, [sp, #28]
  40426e:	06de      	lsls	r6, r3, #27
  404270:	4601      	mov	r1, r0
  404272:	f100 8270 	bmi.w	404756 <_vfiprintf_r+0xa4e>
  404276:	065d      	lsls	r5, r3, #25
  404278:	f140 826d 	bpl.w	404756 <_vfiprintf_r+0xa4e>
  40427c:	3104      	adds	r1, #4
  40427e:	8806      	ldrh	r6, [r0, #0]
  404280:	9107      	str	r1, [sp, #28]
  404282:	2700      	movs	r7, #0
  404284:	07d8      	lsls	r0, r3, #31
  404286:	f140 8222 	bpl.w	4046ce <_vfiprintf_r+0x9c6>
  40428a:	ea56 0107 	orrs.w	r1, r6, r7
  40428e:	f000 821e 	beq.w	4046ce <_vfiprintf_r+0x9c6>
  404292:	2130      	movs	r1, #48	; 0x30
  404294:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  404298:	f043 0302 	orr.w	r3, r3, #2
  40429c:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  4042a0:	2202      	movs	r2, #2
  4042a2:	e664      	b.n	403f6e <_vfiprintf_r+0x266>
  4042a4:	9608      	str	r6, [sp, #32]
  4042a6:	2800      	cmp	r0, #0
  4042a8:	f040 836b 	bne.w	404982 <_vfiprintf_r+0xc7a>
  4042ac:	4917      	ldr	r1, [pc, #92]	; (40430c <_vfiprintf_r+0x604>)
  4042ae:	910b      	str	r1, [sp, #44]	; 0x2c
  4042b0:	e7d9      	b.n	404266 <_vfiprintf_r+0x55e>
  4042b2:	9907      	ldr	r1, [sp, #28]
  4042b4:	9608      	str	r6, [sp, #32]
  4042b6:	680a      	ldr	r2, [r1, #0]
  4042b8:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  4042bc:	f04f 0000 	mov.w	r0, #0
  4042c0:	460a      	mov	r2, r1
  4042c2:	f88d 0037 	strb.w	r0, [sp, #55]	; 0x37
  4042c6:	3204      	adds	r2, #4
  4042c8:	2001      	movs	r0, #1
  4042ca:	9001      	str	r0, [sp, #4]
  4042cc:	9207      	str	r2, [sp, #28]
  4042ce:	9005      	str	r0, [sp, #20]
  4042d0:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
  4042d4:	9302      	str	r3, [sp, #8]
  4042d6:	2400      	movs	r4, #0
  4042d8:	e670      	b.n	403fbc <_vfiprintf_r+0x2b4>
  4042da:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4042de:	f898 2000 	ldrb.w	r2, [r8]
  4042e2:	e583      	b.n	403dec <_vfiprintf_r+0xe4>
  4042e4:	f898 2000 	ldrb.w	r2, [r8]
  4042e8:	2a6c      	cmp	r2, #108	; 0x6c
  4042ea:	bf03      	ittte	eq
  4042ec:	f898 2001 	ldrbeq.w	r2, [r8, #1]
  4042f0:	f043 0320 	orreq.w	r3, r3, #32
  4042f4:	f108 0801 	addeq.w	r8, r8, #1
  4042f8:	f043 0310 	orrne.w	r3, r3, #16
  4042fc:	e576      	b.n	403dec <_vfiprintf_r+0xe4>
  4042fe:	bf00      	nop
  404300:	0040f060 	.word	0x0040f060
  404304:	0040f070 	.word	0x0040f070
  404308:	0040f044 	.word	0x0040f044
  40430c:	0040f030 	.word	0x0040f030
  404310:	9907      	ldr	r1, [sp, #28]
  404312:	680e      	ldr	r6, [r1, #0]
  404314:	460a      	mov	r2, r1
  404316:	2e00      	cmp	r6, #0
  404318:	f102 0204 	add.w	r2, r2, #4
  40431c:	f6ff ae0f 	blt.w	403f3e <_vfiprintf_r+0x236>
  404320:	9207      	str	r2, [sp, #28]
  404322:	f898 2000 	ldrb.w	r2, [r8]
  404326:	e561      	b.n	403dec <_vfiprintf_r+0xe4>
  404328:	f898 2000 	ldrb.w	r2, [r8]
  40432c:	2001      	movs	r0, #1
  40432e:	252b      	movs	r5, #43	; 0x2b
  404330:	e55c      	b.n	403dec <_vfiprintf_r+0xe4>
  404332:	9907      	ldr	r1, [sp, #28]
  404334:	9608      	str	r6, [sp, #32]
  404336:	f8d1 b000 	ldr.w	fp, [r1]
  40433a:	f04f 0200 	mov.w	r2, #0
  40433e:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  404342:	1d0e      	adds	r6, r1, #4
  404344:	f1bb 0f00 	cmp.w	fp, #0
  404348:	f000 82e5 	beq.w	404916 <_vfiprintf_r+0xc0e>
  40434c:	1c67      	adds	r7, r4, #1
  40434e:	f000 82c4 	beq.w	4048da <_vfiprintf_r+0xbd2>
  404352:	4622      	mov	r2, r4
  404354:	2100      	movs	r1, #0
  404356:	4658      	mov	r0, fp
  404358:	9301      	str	r3, [sp, #4]
  40435a:	f001 f921 	bl	4055a0 <memchr>
  40435e:	9b01      	ldr	r3, [sp, #4]
  404360:	2800      	cmp	r0, #0
  404362:	f000 82e5 	beq.w	404930 <_vfiprintf_r+0xc28>
  404366:	eba0 020b 	sub.w	r2, r0, fp
  40436a:	9205      	str	r2, [sp, #20]
  40436c:	9607      	str	r6, [sp, #28]
  40436e:	9302      	str	r3, [sp, #8]
  404370:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  404374:	2400      	movs	r4, #0
  404376:	e619      	b.n	403fac <_vfiprintf_r+0x2a4>
  404378:	f898 2000 	ldrb.w	r2, [r8]
  40437c:	2a2a      	cmp	r2, #42	; 0x2a
  40437e:	f108 0701 	add.w	r7, r8, #1
  404382:	f000 82e9 	beq.w	404958 <_vfiprintf_r+0xc50>
  404386:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  40438a:	2909      	cmp	r1, #9
  40438c:	46b8      	mov	r8, r7
  40438e:	f04f 0400 	mov.w	r4, #0
  404392:	f63f ad2d 	bhi.w	403df0 <_vfiprintf_r+0xe8>
  404396:	f818 2b01 	ldrb.w	r2, [r8], #1
  40439a:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  40439e:	eb01 0444 	add.w	r4, r1, r4, lsl #1
  4043a2:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  4043a6:	2909      	cmp	r1, #9
  4043a8:	d9f5      	bls.n	404396 <_vfiprintf_r+0x68e>
  4043aa:	e521      	b.n	403df0 <_vfiprintf_r+0xe8>
  4043ac:	f043 0320 	orr.w	r3, r3, #32
  4043b0:	f898 2000 	ldrb.w	r2, [r8]
  4043b4:	e51a      	b.n	403dec <_vfiprintf_r+0xe4>
  4043b6:	9608      	str	r6, [sp, #32]
  4043b8:	2800      	cmp	r0, #0
  4043ba:	f040 82db 	bne.w	404974 <_vfiprintf_r+0xc6c>
  4043be:	2a00      	cmp	r2, #0
  4043c0:	f000 80e7 	beq.w	404592 <_vfiprintf_r+0x88a>
  4043c4:	2101      	movs	r1, #1
  4043c6:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  4043ca:	f04f 0200 	mov.w	r2, #0
  4043ce:	9101      	str	r1, [sp, #4]
  4043d0:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  4043d4:	9105      	str	r1, [sp, #20]
  4043d6:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
  4043da:	e77b      	b.n	4042d4 <_vfiprintf_r+0x5cc>
  4043dc:	9a07      	ldr	r2, [sp, #28]
  4043de:	6813      	ldr	r3, [r2, #0]
  4043e0:	3204      	adds	r2, #4
  4043e2:	9207      	str	r2, [sp, #28]
  4043e4:	9a03      	ldr	r2, [sp, #12]
  4043e6:	601a      	str	r2, [r3, #0]
  4043e8:	e4cb      	b.n	403d82 <_vfiprintf_r+0x7a>
  4043ea:	aa0f      	add	r2, sp, #60	; 0x3c
  4043ec:	9904      	ldr	r1, [sp, #16]
  4043ee:	4620      	mov	r0, r4
  4043f0:	f7ff fc4a 	bl	403c88 <__sprint_r.part.0>
  4043f4:	2800      	cmp	r0, #0
  4043f6:	f040 8139 	bne.w	40466c <_vfiprintf_r+0x964>
  4043fa:	9910      	ldr	r1, [sp, #64]	; 0x40
  4043fc:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4043fe:	f101 0c01 	add.w	ip, r1, #1
  404402:	46ce      	mov	lr, r9
  404404:	e5ff      	b.n	404006 <_vfiprintf_r+0x2fe>
  404406:	9910      	ldr	r1, [sp, #64]	; 0x40
  404408:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40440a:	1c48      	adds	r0, r1, #1
  40440c:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  404410:	2d00      	cmp	r5, #0
  404412:	f43f ae22 	beq.w	40405a <_vfiprintf_r+0x352>
  404416:	3201      	adds	r2, #1
  404418:	f10d 0537 	add.w	r5, sp, #55	; 0x37
  40441c:	2101      	movs	r1, #1
  40441e:	2807      	cmp	r0, #7
  404420:	9211      	str	r2, [sp, #68]	; 0x44
  404422:	9010      	str	r0, [sp, #64]	; 0x40
  404424:	f8ca 5000 	str.w	r5, [sl]
  404428:	f8ca 1004 	str.w	r1, [sl, #4]
  40442c:	f340 8108 	ble.w	404640 <_vfiprintf_r+0x938>
  404430:	2a00      	cmp	r2, #0
  404432:	f040 81bc 	bne.w	4047ae <_vfiprintf_r+0xaa6>
  404436:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404438:	2b00      	cmp	r3, #0
  40443a:	f43f ae1f 	beq.w	40407c <_vfiprintf_r+0x374>
  40443e:	ab0e      	add	r3, sp, #56	; 0x38
  404440:	2202      	movs	r2, #2
  404442:	4608      	mov	r0, r1
  404444:	931c      	str	r3, [sp, #112]	; 0x70
  404446:	921d      	str	r2, [sp, #116]	; 0x74
  404448:	46ca      	mov	sl, r9
  40444a:	4601      	mov	r1, r0
  40444c:	f10a 0a08 	add.w	sl, sl, #8
  404450:	3001      	adds	r0, #1
  404452:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404454:	2b80      	cmp	r3, #128	; 0x80
  404456:	f43f ae19 	beq.w	40408c <_vfiprintf_r+0x384>
  40445a:	9b05      	ldr	r3, [sp, #20]
  40445c:	1ae4      	subs	r4, r4, r3
  40445e:	2c00      	cmp	r4, #0
  404460:	dd2e      	ble.n	4044c0 <_vfiprintf_r+0x7b8>
  404462:	2c10      	cmp	r4, #16
  404464:	4db3      	ldr	r5, [pc, #716]	; (404734 <_vfiprintf_r+0xa2c>)
  404466:	dd1e      	ble.n	4044a6 <_vfiprintf_r+0x79e>
  404468:	46d6      	mov	lr, sl
  40446a:	2610      	movs	r6, #16
  40446c:	9f06      	ldr	r7, [sp, #24]
  40446e:	f8dd a010 	ldr.w	sl, [sp, #16]
  404472:	e006      	b.n	404482 <_vfiprintf_r+0x77a>
  404474:	1c88      	adds	r0, r1, #2
  404476:	f10e 0e08 	add.w	lr, lr, #8
  40447a:	4619      	mov	r1, r3
  40447c:	3c10      	subs	r4, #16
  40447e:	2c10      	cmp	r4, #16
  404480:	dd10      	ble.n	4044a4 <_vfiprintf_r+0x79c>
  404482:	1c4b      	adds	r3, r1, #1
  404484:	3210      	adds	r2, #16
  404486:	2b07      	cmp	r3, #7
  404488:	9211      	str	r2, [sp, #68]	; 0x44
  40448a:	e88e 0060 	stmia.w	lr, {r5, r6}
  40448e:	9310      	str	r3, [sp, #64]	; 0x40
  404490:	ddf0      	ble.n	404474 <_vfiprintf_r+0x76c>
  404492:	2a00      	cmp	r2, #0
  404494:	d165      	bne.n	404562 <_vfiprintf_r+0x85a>
  404496:	3c10      	subs	r4, #16
  404498:	2c10      	cmp	r4, #16
  40449a:	f04f 0001 	mov.w	r0, #1
  40449e:	4611      	mov	r1, r2
  4044a0:	46ce      	mov	lr, r9
  4044a2:	dcee      	bgt.n	404482 <_vfiprintf_r+0x77a>
  4044a4:	46f2      	mov	sl, lr
  4044a6:	4422      	add	r2, r4
  4044a8:	2807      	cmp	r0, #7
  4044aa:	9211      	str	r2, [sp, #68]	; 0x44
  4044ac:	f8ca 5000 	str.w	r5, [sl]
  4044b0:	f8ca 4004 	str.w	r4, [sl, #4]
  4044b4:	9010      	str	r0, [sp, #64]	; 0x40
  4044b6:	f300 8085 	bgt.w	4045c4 <_vfiprintf_r+0x8bc>
  4044ba:	f10a 0a08 	add.w	sl, sl, #8
  4044be:	3001      	adds	r0, #1
  4044c0:	9905      	ldr	r1, [sp, #20]
  4044c2:	f8ca b000 	str.w	fp, [sl]
  4044c6:	440a      	add	r2, r1
  4044c8:	2807      	cmp	r0, #7
  4044ca:	9211      	str	r2, [sp, #68]	; 0x44
  4044cc:	f8ca 1004 	str.w	r1, [sl, #4]
  4044d0:	9010      	str	r0, [sp, #64]	; 0x40
  4044d2:	f340 8082 	ble.w	4045da <_vfiprintf_r+0x8d2>
  4044d6:	2a00      	cmp	r2, #0
  4044d8:	f040 8118 	bne.w	40470c <_vfiprintf_r+0xa04>
  4044dc:	9b02      	ldr	r3, [sp, #8]
  4044de:	9210      	str	r2, [sp, #64]	; 0x40
  4044e0:	0758      	lsls	r0, r3, #29
  4044e2:	d535      	bpl.n	404550 <_vfiprintf_r+0x848>
  4044e4:	9b08      	ldr	r3, [sp, #32]
  4044e6:	9901      	ldr	r1, [sp, #4]
  4044e8:	1a5c      	subs	r4, r3, r1
  4044ea:	2c00      	cmp	r4, #0
  4044ec:	f340 80e7 	ble.w	4046be <_vfiprintf_r+0x9b6>
  4044f0:	46ca      	mov	sl, r9
  4044f2:	2c10      	cmp	r4, #16
  4044f4:	f340 8218 	ble.w	404928 <_vfiprintf_r+0xc20>
  4044f8:	9910      	ldr	r1, [sp, #64]	; 0x40
  4044fa:	4e8f      	ldr	r6, [pc, #572]	; (404738 <_vfiprintf_r+0xa30>)
  4044fc:	9f06      	ldr	r7, [sp, #24]
  4044fe:	f8dd b010 	ldr.w	fp, [sp, #16]
  404502:	2510      	movs	r5, #16
  404504:	e006      	b.n	404514 <_vfiprintf_r+0x80c>
  404506:	1c88      	adds	r0, r1, #2
  404508:	f10a 0a08 	add.w	sl, sl, #8
  40450c:	4619      	mov	r1, r3
  40450e:	3c10      	subs	r4, #16
  404510:	2c10      	cmp	r4, #16
  404512:	dd11      	ble.n	404538 <_vfiprintf_r+0x830>
  404514:	1c4b      	adds	r3, r1, #1
  404516:	3210      	adds	r2, #16
  404518:	2b07      	cmp	r3, #7
  40451a:	9211      	str	r2, [sp, #68]	; 0x44
  40451c:	f8ca 6000 	str.w	r6, [sl]
  404520:	f8ca 5004 	str.w	r5, [sl, #4]
  404524:	9310      	str	r3, [sp, #64]	; 0x40
  404526:	ddee      	ble.n	404506 <_vfiprintf_r+0x7fe>
  404528:	bb42      	cbnz	r2, 40457c <_vfiprintf_r+0x874>
  40452a:	3c10      	subs	r4, #16
  40452c:	2c10      	cmp	r4, #16
  40452e:	f04f 0001 	mov.w	r0, #1
  404532:	4611      	mov	r1, r2
  404534:	46ca      	mov	sl, r9
  404536:	dced      	bgt.n	404514 <_vfiprintf_r+0x80c>
  404538:	4422      	add	r2, r4
  40453a:	2807      	cmp	r0, #7
  40453c:	9211      	str	r2, [sp, #68]	; 0x44
  40453e:	f8ca 6000 	str.w	r6, [sl]
  404542:	f8ca 4004 	str.w	r4, [sl, #4]
  404546:	9010      	str	r0, [sp, #64]	; 0x40
  404548:	dd51      	ble.n	4045ee <_vfiprintf_r+0x8e6>
  40454a:	2a00      	cmp	r2, #0
  40454c:	f040 819b 	bne.w	404886 <_vfiprintf_r+0xb7e>
  404550:	9b03      	ldr	r3, [sp, #12]
  404552:	9a08      	ldr	r2, [sp, #32]
  404554:	9901      	ldr	r1, [sp, #4]
  404556:	428a      	cmp	r2, r1
  404558:	bfac      	ite	ge
  40455a:	189b      	addge	r3, r3, r2
  40455c:	185b      	addlt	r3, r3, r1
  40455e:	9303      	str	r3, [sp, #12]
  404560:	e04e      	b.n	404600 <_vfiprintf_r+0x8f8>
  404562:	aa0f      	add	r2, sp, #60	; 0x3c
  404564:	4651      	mov	r1, sl
  404566:	4638      	mov	r0, r7
  404568:	f7ff fb8e 	bl	403c88 <__sprint_r.part.0>
  40456c:	2800      	cmp	r0, #0
  40456e:	f040 813f 	bne.w	4047f0 <_vfiprintf_r+0xae8>
  404572:	9910      	ldr	r1, [sp, #64]	; 0x40
  404574:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404576:	1c48      	adds	r0, r1, #1
  404578:	46ce      	mov	lr, r9
  40457a:	e77f      	b.n	40447c <_vfiprintf_r+0x774>
  40457c:	aa0f      	add	r2, sp, #60	; 0x3c
  40457e:	4659      	mov	r1, fp
  404580:	4638      	mov	r0, r7
  404582:	f7ff fb81 	bl	403c88 <__sprint_r.part.0>
  404586:	b960      	cbnz	r0, 4045a2 <_vfiprintf_r+0x89a>
  404588:	9910      	ldr	r1, [sp, #64]	; 0x40
  40458a:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40458c:	1c48      	adds	r0, r1, #1
  40458e:	46ca      	mov	sl, r9
  404590:	e7bd      	b.n	40450e <_vfiprintf_r+0x806>
  404592:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404594:	f8dd b010 	ldr.w	fp, [sp, #16]
  404598:	2b00      	cmp	r3, #0
  40459a:	f040 81d4 	bne.w	404946 <_vfiprintf_r+0xc3e>
  40459e:	2300      	movs	r3, #0
  4045a0:	9310      	str	r3, [sp, #64]	; 0x40
  4045a2:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  4045a6:	f013 0f01 	tst.w	r3, #1
  4045aa:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  4045ae:	d102      	bne.n	4045b6 <_vfiprintf_r+0x8ae>
  4045b0:	059a      	lsls	r2, r3, #22
  4045b2:	f140 80de 	bpl.w	404772 <_vfiprintf_r+0xa6a>
  4045b6:	065b      	lsls	r3, r3, #25
  4045b8:	f53f acb2 	bmi.w	403f20 <_vfiprintf_r+0x218>
  4045bc:	9803      	ldr	r0, [sp, #12]
  4045be:	b02d      	add	sp, #180	; 0xb4
  4045c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4045c4:	2a00      	cmp	r2, #0
  4045c6:	f040 8106 	bne.w	4047d6 <_vfiprintf_r+0xace>
  4045ca:	9a05      	ldr	r2, [sp, #20]
  4045cc:	921d      	str	r2, [sp, #116]	; 0x74
  4045ce:	2301      	movs	r3, #1
  4045d0:	9211      	str	r2, [sp, #68]	; 0x44
  4045d2:	f8cd b070 	str.w	fp, [sp, #112]	; 0x70
  4045d6:	9310      	str	r3, [sp, #64]	; 0x40
  4045d8:	46ca      	mov	sl, r9
  4045da:	f10a 0a08 	add.w	sl, sl, #8
  4045de:	9b02      	ldr	r3, [sp, #8]
  4045e0:	0759      	lsls	r1, r3, #29
  4045e2:	d504      	bpl.n	4045ee <_vfiprintf_r+0x8e6>
  4045e4:	9b08      	ldr	r3, [sp, #32]
  4045e6:	9901      	ldr	r1, [sp, #4]
  4045e8:	1a5c      	subs	r4, r3, r1
  4045ea:	2c00      	cmp	r4, #0
  4045ec:	dc81      	bgt.n	4044f2 <_vfiprintf_r+0x7ea>
  4045ee:	9b03      	ldr	r3, [sp, #12]
  4045f0:	9908      	ldr	r1, [sp, #32]
  4045f2:	9801      	ldr	r0, [sp, #4]
  4045f4:	4281      	cmp	r1, r0
  4045f6:	bfac      	ite	ge
  4045f8:	185b      	addge	r3, r3, r1
  4045fa:	181b      	addlt	r3, r3, r0
  4045fc:	9303      	str	r3, [sp, #12]
  4045fe:	bb72      	cbnz	r2, 40465e <_vfiprintf_r+0x956>
  404600:	2300      	movs	r3, #0
  404602:	9310      	str	r3, [sp, #64]	; 0x40
  404604:	46ca      	mov	sl, r9
  404606:	f7ff bbbc 	b.w	403d82 <_vfiprintf_r+0x7a>
  40460a:	aa0f      	add	r2, sp, #60	; 0x3c
  40460c:	9904      	ldr	r1, [sp, #16]
  40460e:	4620      	mov	r0, r4
  404610:	f7ff fb3a 	bl	403c88 <__sprint_r.part.0>
  404614:	bb50      	cbnz	r0, 40466c <_vfiprintf_r+0x964>
  404616:	9910      	ldr	r1, [sp, #64]	; 0x40
  404618:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40461a:	f101 0e01 	add.w	lr, r1, #1
  40461e:	46cc      	mov	ip, r9
  404620:	e548      	b.n	4040b4 <_vfiprintf_r+0x3ac>
  404622:	2a00      	cmp	r2, #0
  404624:	f040 8140 	bne.w	4048a8 <_vfiprintf_r+0xba0>
  404628:	f89d 1037 	ldrb.w	r1, [sp, #55]	; 0x37
  40462c:	2900      	cmp	r1, #0
  40462e:	f000 811b 	beq.w	404868 <_vfiprintf_r+0xb60>
  404632:	2201      	movs	r2, #1
  404634:	f10d 0137 	add.w	r1, sp, #55	; 0x37
  404638:	4610      	mov	r0, r2
  40463a:	921d      	str	r2, [sp, #116]	; 0x74
  40463c:	911c      	str	r1, [sp, #112]	; 0x70
  40463e:	46ca      	mov	sl, r9
  404640:	4601      	mov	r1, r0
  404642:	f10a 0a08 	add.w	sl, sl, #8
  404646:	3001      	adds	r0, #1
  404648:	e507      	b.n	40405a <_vfiprintf_r+0x352>
  40464a:	9b02      	ldr	r3, [sp, #8]
  40464c:	2a01      	cmp	r2, #1
  40464e:	f000 8098 	beq.w	404782 <_vfiprintf_r+0xa7a>
  404652:	2a02      	cmp	r2, #2
  404654:	d10d      	bne.n	404672 <_vfiprintf_r+0x96a>
  404656:	9302      	str	r3, [sp, #8]
  404658:	2600      	movs	r6, #0
  40465a:	2700      	movs	r7, #0
  40465c:	e5b0      	b.n	4041c0 <_vfiprintf_r+0x4b8>
  40465e:	aa0f      	add	r2, sp, #60	; 0x3c
  404660:	9904      	ldr	r1, [sp, #16]
  404662:	9806      	ldr	r0, [sp, #24]
  404664:	f7ff fb10 	bl	403c88 <__sprint_r.part.0>
  404668:	2800      	cmp	r0, #0
  40466a:	d0c9      	beq.n	404600 <_vfiprintf_r+0x8f8>
  40466c:	f8dd b010 	ldr.w	fp, [sp, #16]
  404670:	e797      	b.n	4045a2 <_vfiprintf_r+0x89a>
  404672:	9302      	str	r3, [sp, #8]
  404674:	2600      	movs	r6, #0
  404676:	2700      	movs	r7, #0
  404678:	4649      	mov	r1, r9
  40467a:	e000      	b.n	40467e <_vfiprintf_r+0x976>
  40467c:	4659      	mov	r1, fp
  40467e:	08f2      	lsrs	r2, r6, #3
  404680:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
  404684:	08f8      	lsrs	r0, r7, #3
  404686:	f006 0307 	and.w	r3, r6, #7
  40468a:	4607      	mov	r7, r0
  40468c:	4616      	mov	r6, r2
  40468e:	3330      	adds	r3, #48	; 0x30
  404690:	ea56 0207 	orrs.w	r2, r6, r7
  404694:	f801 3c01 	strb.w	r3, [r1, #-1]
  404698:	f101 3bff 	add.w	fp, r1, #4294967295
  40469c:	d1ee      	bne.n	40467c <_vfiprintf_r+0x974>
  40469e:	9a02      	ldr	r2, [sp, #8]
  4046a0:	07d6      	lsls	r6, r2, #31
  4046a2:	f57f ad9d 	bpl.w	4041e0 <_vfiprintf_r+0x4d8>
  4046a6:	2b30      	cmp	r3, #48	; 0x30
  4046a8:	f43f ad9a 	beq.w	4041e0 <_vfiprintf_r+0x4d8>
  4046ac:	3902      	subs	r1, #2
  4046ae:	2330      	movs	r3, #48	; 0x30
  4046b0:	f80b 3c01 	strb.w	r3, [fp, #-1]
  4046b4:	eba9 0301 	sub.w	r3, r9, r1
  4046b8:	9305      	str	r3, [sp, #20]
  4046ba:	468b      	mov	fp, r1
  4046bc:	e476      	b.n	403fac <_vfiprintf_r+0x2a4>
  4046be:	9b03      	ldr	r3, [sp, #12]
  4046c0:	9a08      	ldr	r2, [sp, #32]
  4046c2:	428a      	cmp	r2, r1
  4046c4:	bfac      	ite	ge
  4046c6:	189b      	addge	r3, r3, r2
  4046c8:	185b      	addlt	r3, r3, r1
  4046ca:	9303      	str	r3, [sp, #12]
  4046cc:	e798      	b.n	404600 <_vfiprintf_r+0x8f8>
  4046ce:	2202      	movs	r2, #2
  4046d0:	e44d      	b.n	403f6e <_vfiprintf_r+0x266>
  4046d2:	2f00      	cmp	r7, #0
  4046d4:	bf08      	it	eq
  4046d6:	2e0a      	cmpeq	r6, #10
  4046d8:	d352      	bcc.n	404780 <_vfiprintf_r+0xa78>
  4046da:	46cb      	mov	fp, r9
  4046dc:	4630      	mov	r0, r6
  4046de:	4639      	mov	r1, r7
  4046e0:	220a      	movs	r2, #10
  4046e2:	2300      	movs	r3, #0
  4046e4:	f001 fce8 	bl	4060b8 <__aeabi_uldivmod>
  4046e8:	3230      	adds	r2, #48	; 0x30
  4046ea:	f80b 2d01 	strb.w	r2, [fp, #-1]!
  4046ee:	4630      	mov	r0, r6
  4046f0:	4639      	mov	r1, r7
  4046f2:	2300      	movs	r3, #0
  4046f4:	220a      	movs	r2, #10
  4046f6:	f001 fcdf 	bl	4060b8 <__aeabi_uldivmod>
  4046fa:	4606      	mov	r6, r0
  4046fc:	460f      	mov	r7, r1
  4046fe:	ea56 0307 	orrs.w	r3, r6, r7
  404702:	d1eb      	bne.n	4046dc <_vfiprintf_r+0x9d4>
  404704:	e56c      	b.n	4041e0 <_vfiprintf_r+0x4d8>
  404706:	9405      	str	r4, [sp, #20]
  404708:	46cb      	mov	fp, r9
  40470a:	e44f      	b.n	403fac <_vfiprintf_r+0x2a4>
  40470c:	aa0f      	add	r2, sp, #60	; 0x3c
  40470e:	9904      	ldr	r1, [sp, #16]
  404710:	9806      	ldr	r0, [sp, #24]
  404712:	f7ff fab9 	bl	403c88 <__sprint_r.part.0>
  404716:	2800      	cmp	r0, #0
  404718:	d1a8      	bne.n	40466c <_vfiprintf_r+0x964>
  40471a:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40471c:	46ca      	mov	sl, r9
  40471e:	e75e      	b.n	4045de <_vfiprintf_r+0x8d6>
  404720:	aa0f      	add	r2, sp, #60	; 0x3c
  404722:	9904      	ldr	r1, [sp, #16]
  404724:	9806      	ldr	r0, [sp, #24]
  404726:	f7ff faaf 	bl	403c88 <__sprint_r.part.0>
  40472a:	2800      	cmp	r0, #0
  40472c:	d19e      	bne.n	40466c <_vfiprintf_r+0x964>
  40472e:	46ca      	mov	sl, r9
  404730:	f7ff bbc0 	b.w	403eb4 <_vfiprintf_r+0x1ac>
  404734:	0040f070 	.word	0x0040f070
  404738:	0040f060 	.word	0x0040f060
  40473c:	3104      	adds	r1, #4
  40473e:	6816      	ldr	r6, [r2, #0]
  404740:	9107      	str	r1, [sp, #28]
  404742:	2201      	movs	r2, #1
  404744:	2700      	movs	r7, #0
  404746:	e412      	b.n	403f6e <_vfiprintf_r+0x266>
  404748:	9807      	ldr	r0, [sp, #28]
  40474a:	4601      	mov	r1, r0
  40474c:	3104      	adds	r1, #4
  40474e:	6806      	ldr	r6, [r0, #0]
  404750:	9107      	str	r1, [sp, #28]
  404752:	2700      	movs	r7, #0
  404754:	e40b      	b.n	403f6e <_vfiprintf_r+0x266>
  404756:	680e      	ldr	r6, [r1, #0]
  404758:	3104      	adds	r1, #4
  40475a:	9107      	str	r1, [sp, #28]
  40475c:	2700      	movs	r7, #0
  40475e:	e591      	b.n	404284 <_vfiprintf_r+0x57c>
  404760:	9907      	ldr	r1, [sp, #28]
  404762:	680e      	ldr	r6, [r1, #0]
  404764:	460a      	mov	r2, r1
  404766:	17f7      	asrs	r7, r6, #31
  404768:	3204      	adds	r2, #4
  40476a:	9207      	str	r2, [sp, #28]
  40476c:	4630      	mov	r0, r6
  40476e:	4639      	mov	r1, r7
  404770:	e50f      	b.n	404192 <_vfiprintf_r+0x48a>
  404772:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  404776:	f000 fe7f 	bl	405478 <__retarget_lock_release_recursive>
  40477a:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  40477e:	e71a      	b.n	4045b6 <_vfiprintf_r+0x8ae>
  404780:	9b02      	ldr	r3, [sp, #8]
  404782:	9302      	str	r3, [sp, #8]
  404784:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
  404788:	3630      	adds	r6, #48	; 0x30
  40478a:	2301      	movs	r3, #1
  40478c:	f80b 6d41 	strb.w	r6, [fp, #-65]!
  404790:	9305      	str	r3, [sp, #20]
  404792:	e40b      	b.n	403fac <_vfiprintf_r+0x2a4>
  404794:	aa0f      	add	r2, sp, #60	; 0x3c
  404796:	9904      	ldr	r1, [sp, #16]
  404798:	9806      	ldr	r0, [sp, #24]
  40479a:	f7ff fa75 	bl	403c88 <__sprint_r.part.0>
  40479e:	2800      	cmp	r0, #0
  4047a0:	f47f af64 	bne.w	40466c <_vfiprintf_r+0x964>
  4047a4:	9910      	ldr	r1, [sp, #64]	; 0x40
  4047a6:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4047a8:	1c48      	adds	r0, r1, #1
  4047aa:	46ca      	mov	sl, r9
  4047ac:	e651      	b.n	404452 <_vfiprintf_r+0x74a>
  4047ae:	aa0f      	add	r2, sp, #60	; 0x3c
  4047b0:	9904      	ldr	r1, [sp, #16]
  4047b2:	9806      	ldr	r0, [sp, #24]
  4047b4:	f7ff fa68 	bl	403c88 <__sprint_r.part.0>
  4047b8:	2800      	cmp	r0, #0
  4047ba:	f47f af57 	bne.w	40466c <_vfiprintf_r+0x964>
  4047be:	9910      	ldr	r1, [sp, #64]	; 0x40
  4047c0:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4047c2:	1c48      	adds	r0, r1, #1
  4047c4:	46ca      	mov	sl, r9
  4047c6:	e448      	b.n	40405a <_vfiprintf_r+0x352>
  4047c8:	2a00      	cmp	r2, #0
  4047ca:	f040 8091 	bne.w	4048f0 <_vfiprintf_r+0xbe8>
  4047ce:	2001      	movs	r0, #1
  4047d0:	4611      	mov	r1, r2
  4047d2:	46ca      	mov	sl, r9
  4047d4:	e641      	b.n	40445a <_vfiprintf_r+0x752>
  4047d6:	aa0f      	add	r2, sp, #60	; 0x3c
  4047d8:	9904      	ldr	r1, [sp, #16]
  4047da:	9806      	ldr	r0, [sp, #24]
  4047dc:	f7ff fa54 	bl	403c88 <__sprint_r.part.0>
  4047e0:	2800      	cmp	r0, #0
  4047e2:	f47f af43 	bne.w	40466c <_vfiprintf_r+0x964>
  4047e6:	9810      	ldr	r0, [sp, #64]	; 0x40
  4047e8:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4047ea:	3001      	adds	r0, #1
  4047ec:	46ca      	mov	sl, r9
  4047ee:	e667      	b.n	4044c0 <_vfiprintf_r+0x7b8>
  4047f0:	46d3      	mov	fp, sl
  4047f2:	e6d6      	b.n	4045a2 <_vfiprintf_r+0x89a>
  4047f4:	9e07      	ldr	r6, [sp, #28]
  4047f6:	3607      	adds	r6, #7
  4047f8:	f026 0207 	bic.w	r2, r6, #7
  4047fc:	f102 0108 	add.w	r1, r2, #8
  404800:	e9d2 6700 	ldrd	r6, r7, [r2]
  404804:	9107      	str	r1, [sp, #28]
  404806:	2201      	movs	r2, #1
  404808:	f7ff bbb1 	b.w	403f6e <_vfiprintf_r+0x266>
  40480c:	9e07      	ldr	r6, [sp, #28]
  40480e:	3607      	adds	r6, #7
  404810:	f026 0607 	bic.w	r6, r6, #7
  404814:	e9d6 0100 	ldrd	r0, r1, [r6]
  404818:	f106 0208 	add.w	r2, r6, #8
  40481c:	9207      	str	r2, [sp, #28]
  40481e:	4606      	mov	r6, r0
  404820:	460f      	mov	r7, r1
  404822:	e4b6      	b.n	404192 <_vfiprintf_r+0x48a>
  404824:	9e07      	ldr	r6, [sp, #28]
  404826:	3607      	adds	r6, #7
  404828:	f026 0207 	bic.w	r2, r6, #7
  40482c:	f102 0108 	add.w	r1, r2, #8
  404830:	e9d2 6700 	ldrd	r6, r7, [r2]
  404834:	9107      	str	r1, [sp, #28]
  404836:	2200      	movs	r2, #0
  404838:	f7ff bb99 	b.w	403f6e <_vfiprintf_r+0x266>
  40483c:	9e07      	ldr	r6, [sp, #28]
  40483e:	3607      	adds	r6, #7
  404840:	f026 0107 	bic.w	r1, r6, #7
  404844:	f101 0008 	add.w	r0, r1, #8
  404848:	9007      	str	r0, [sp, #28]
  40484a:	e9d1 6700 	ldrd	r6, r7, [r1]
  40484e:	e519      	b.n	404284 <_vfiprintf_r+0x57c>
  404850:	46cb      	mov	fp, r9
  404852:	f7ff bbab 	b.w	403fac <_vfiprintf_r+0x2a4>
  404856:	252d      	movs	r5, #45	; 0x2d
  404858:	4276      	negs	r6, r6
  40485a:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
  40485e:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  404862:	2201      	movs	r2, #1
  404864:	f7ff bb88 	b.w	403f78 <_vfiprintf_r+0x270>
  404868:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40486a:	b9b3      	cbnz	r3, 40489a <_vfiprintf_r+0xb92>
  40486c:	4611      	mov	r1, r2
  40486e:	2001      	movs	r0, #1
  404870:	46ca      	mov	sl, r9
  404872:	e5f2      	b.n	40445a <_vfiprintf_r+0x752>
  404874:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  404878:	f000 fdfe 	bl	405478 <__retarget_lock_release_recursive>
  40487c:	f04f 33ff 	mov.w	r3, #4294967295
  404880:	9303      	str	r3, [sp, #12]
  404882:	f7ff bb50 	b.w	403f26 <_vfiprintf_r+0x21e>
  404886:	aa0f      	add	r2, sp, #60	; 0x3c
  404888:	9904      	ldr	r1, [sp, #16]
  40488a:	9806      	ldr	r0, [sp, #24]
  40488c:	f7ff f9fc 	bl	403c88 <__sprint_r.part.0>
  404890:	2800      	cmp	r0, #0
  404892:	f47f aeeb 	bne.w	40466c <_vfiprintf_r+0x964>
  404896:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404898:	e6a9      	b.n	4045ee <_vfiprintf_r+0x8e6>
  40489a:	ab0e      	add	r3, sp, #56	; 0x38
  40489c:	2202      	movs	r2, #2
  40489e:	931c      	str	r3, [sp, #112]	; 0x70
  4048a0:	921d      	str	r2, [sp, #116]	; 0x74
  4048a2:	2001      	movs	r0, #1
  4048a4:	46ca      	mov	sl, r9
  4048a6:	e5d0      	b.n	40444a <_vfiprintf_r+0x742>
  4048a8:	aa0f      	add	r2, sp, #60	; 0x3c
  4048aa:	9904      	ldr	r1, [sp, #16]
  4048ac:	9806      	ldr	r0, [sp, #24]
  4048ae:	f7ff f9eb 	bl	403c88 <__sprint_r.part.0>
  4048b2:	2800      	cmp	r0, #0
  4048b4:	f47f aeda 	bne.w	40466c <_vfiprintf_r+0x964>
  4048b8:	9910      	ldr	r1, [sp, #64]	; 0x40
  4048ba:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4048bc:	1c48      	adds	r0, r1, #1
  4048be:	46ca      	mov	sl, r9
  4048c0:	e5a4      	b.n	40440c <_vfiprintf_r+0x704>
  4048c2:	9a07      	ldr	r2, [sp, #28]
  4048c4:	9903      	ldr	r1, [sp, #12]
  4048c6:	6813      	ldr	r3, [r2, #0]
  4048c8:	17cd      	asrs	r5, r1, #31
  4048ca:	4608      	mov	r0, r1
  4048cc:	3204      	adds	r2, #4
  4048ce:	4629      	mov	r1, r5
  4048d0:	9207      	str	r2, [sp, #28]
  4048d2:	e9c3 0100 	strd	r0, r1, [r3]
  4048d6:	f7ff ba54 	b.w	403d82 <_vfiprintf_r+0x7a>
  4048da:	4658      	mov	r0, fp
  4048dc:	9607      	str	r6, [sp, #28]
  4048de:	9302      	str	r3, [sp, #8]
  4048e0:	f001 f9ae 	bl	405c40 <strlen>
  4048e4:	2400      	movs	r4, #0
  4048e6:	9005      	str	r0, [sp, #20]
  4048e8:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  4048ec:	f7ff bb5e 	b.w	403fac <_vfiprintf_r+0x2a4>
  4048f0:	aa0f      	add	r2, sp, #60	; 0x3c
  4048f2:	9904      	ldr	r1, [sp, #16]
  4048f4:	9806      	ldr	r0, [sp, #24]
  4048f6:	f7ff f9c7 	bl	403c88 <__sprint_r.part.0>
  4048fa:	2800      	cmp	r0, #0
  4048fc:	f47f aeb6 	bne.w	40466c <_vfiprintf_r+0x964>
  404900:	9910      	ldr	r1, [sp, #64]	; 0x40
  404902:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404904:	1c48      	adds	r0, r1, #1
  404906:	46ca      	mov	sl, r9
  404908:	e5a7      	b.n	40445a <_vfiprintf_r+0x752>
  40490a:	9910      	ldr	r1, [sp, #64]	; 0x40
  40490c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40490e:	4e20      	ldr	r6, [pc, #128]	; (404990 <_vfiprintf_r+0xc88>)
  404910:	3101      	adds	r1, #1
  404912:	f7ff bb90 	b.w	404036 <_vfiprintf_r+0x32e>
  404916:	2c06      	cmp	r4, #6
  404918:	bf28      	it	cs
  40491a:	2406      	movcs	r4, #6
  40491c:	9405      	str	r4, [sp, #20]
  40491e:	9607      	str	r6, [sp, #28]
  404920:	9401      	str	r4, [sp, #4]
  404922:	f8df b070 	ldr.w	fp, [pc, #112]	; 404994 <_vfiprintf_r+0xc8c>
  404926:	e4d5      	b.n	4042d4 <_vfiprintf_r+0x5cc>
  404928:	9810      	ldr	r0, [sp, #64]	; 0x40
  40492a:	4e19      	ldr	r6, [pc, #100]	; (404990 <_vfiprintf_r+0xc88>)
  40492c:	3001      	adds	r0, #1
  40492e:	e603      	b.n	404538 <_vfiprintf_r+0x830>
  404930:	9405      	str	r4, [sp, #20]
  404932:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  404936:	9607      	str	r6, [sp, #28]
  404938:	9302      	str	r3, [sp, #8]
  40493a:	4604      	mov	r4, r0
  40493c:	f7ff bb36 	b.w	403fac <_vfiprintf_r+0x2a4>
  404940:	4686      	mov	lr, r0
  404942:	f7ff bbce 	b.w	4040e2 <_vfiprintf_r+0x3da>
  404946:	9806      	ldr	r0, [sp, #24]
  404948:	aa0f      	add	r2, sp, #60	; 0x3c
  40494a:	4659      	mov	r1, fp
  40494c:	f7ff f99c 	bl	403c88 <__sprint_r.part.0>
  404950:	2800      	cmp	r0, #0
  404952:	f43f ae24 	beq.w	40459e <_vfiprintf_r+0x896>
  404956:	e624      	b.n	4045a2 <_vfiprintf_r+0x89a>
  404958:	9907      	ldr	r1, [sp, #28]
  40495a:	f898 2001 	ldrb.w	r2, [r8, #1]
  40495e:	680c      	ldr	r4, [r1, #0]
  404960:	3104      	adds	r1, #4
  404962:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
  404966:	46b8      	mov	r8, r7
  404968:	9107      	str	r1, [sp, #28]
  40496a:	f7ff ba3f 	b.w	403dec <_vfiprintf_r+0xe4>
  40496e:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  404972:	e43c      	b.n	4041ee <_vfiprintf_r+0x4e6>
  404974:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  404978:	e521      	b.n	4043be <_vfiprintf_r+0x6b6>
  40497a:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  40497e:	f7ff bbf4 	b.w	40416a <_vfiprintf_r+0x462>
  404982:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  404986:	e491      	b.n	4042ac <_vfiprintf_r+0x5a4>
  404988:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  40498c:	e469      	b.n	404262 <_vfiprintf_r+0x55a>
  40498e:	bf00      	nop
  404990:	0040f060 	.word	0x0040f060
  404994:	0040f058 	.word	0x0040f058

00404998 <__sbprintf>:
  404998:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40499c:	460c      	mov	r4, r1
  40499e:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
  4049a2:	8989      	ldrh	r1, [r1, #12]
  4049a4:	6e66      	ldr	r6, [r4, #100]	; 0x64
  4049a6:	89e5      	ldrh	r5, [r4, #14]
  4049a8:	9619      	str	r6, [sp, #100]	; 0x64
  4049aa:	f021 0102 	bic.w	r1, r1, #2
  4049ae:	4606      	mov	r6, r0
  4049b0:	69e0      	ldr	r0, [r4, #28]
  4049b2:	f8ad 100c 	strh.w	r1, [sp, #12]
  4049b6:	4617      	mov	r7, r2
  4049b8:	f44f 6180 	mov.w	r1, #1024	; 0x400
  4049bc:	6a62      	ldr	r2, [r4, #36]	; 0x24
  4049be:	f8ad 500e 	strh.w	r5, [sp, #14]
  4049c2:	4698      	mov	r8, r3
  4049c4:	ad1a      	add	r5, sp, #104	; 0x68
  4049c6:	2300      	movs	r3, #0
  4049c8:	9007      	str	r0, [sp, #28]
  4049ca:	a816      	add	r0, sp, #88	; 0x58
  4049cc:	9209      	str	r2, [sp, #36]	; 0x24
  4049ce:	9306      	str	r3, [sp, #24]
  4049d0:	9500      	str	r5, [sp, #0]
  4049d2:	9504      	str	r5, [sp, #16]
  4049d4:	9102      	str	r1, [sp, #8]
  4049d6:	9105      	str	r1, [sp, #20]
  4049d8:	f000 fd48 	bl	40546c <__retarget_lock_init_recursive>
  4049dc:	4643      	mov	r3, r8
  4049de:	463a      	mov	r2, r7
  4049e0:	4669      	mov	r1, sp
  4049e2:	4630      	mov	r0, r6
  4049e4:	f7ff f990 	bl	403d08 <_vfiprintf_r>
  4049e8:	1e05      	subs	r5, r0, #0
  4049ea:	db07      	blt.n	4049fc <__sbprintf+0x64>
  4049ec:	4630      	mov	r0, r6
  4049ee:	4669      	mov	r1, sp
  4049f0:	f000 f928 	bl	404c44 <_fflush_r>
  4049f4:	2800      	cmp	r0, #0
  4049f6:	bf18      	it	ne
  4049f8:	f04f 35ff 	movne.w	r5, #4294967295
  4049fc:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  404a00:	065b      	lsls	r3, r3, #25
  404a02:	d503      	bpl.n	404a0c <__sbprintf+0x74>
  404a04:	89a3      	ldrh	r3, [r4, #12]
  404a06:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404a0a:	81a3      	strh	r3, [r4, #12]
  404a0c:	9816      	ldr	r0, [sp, #88]	; 0x58
  404a0e:	f000 fd2f 	bl	405470 <__retarget_lock_close_recursive>
  404a12:	4628      	mov	r0, r5
  404a14:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
  404a18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00404a1c <__swsetup_r>:
  404a1c:	b538      	push	{r3, r4, r5, lr}
  404a1e:	4b30      	ldr	r3, [pc, #192]	; (404ae0 <__swsetup_r+0xc4>)
  404a20:	681b      	ldr	r3, [r3, #0]
  404a22:	4605      	mov	r5, r0
  404a24:	460c      	mov	r4, r1
  404a26:	b113      	cbz	r3, 404a2e <__swsetup_r+0x12>
  404a28:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  404a2a:	2a00      	cmp	r2, #0
  404a2c:	d038      	beq.n	404aa0 <__swsetup_r+0x84>
  404a2e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  404a32:	b293      	uxth	r3, r2
  404a34:	0718      	lsls	r0, r3, #28
  404a36:	d50c      	bpl.n	404a52 <__swsetup_r+0x36>
  404a38:	6920      	ldr	r0, [r4, #16]
  404a3a:	b1a8      	cbz	r0, 404a68 <__swsetup_r+0x4c>
  404a3c:	f013 0201 	ands.w	r2, r3, #1
  404a40:	d01e      	beq.n	404a80 <__swsetup_r+0x64>
  404a42:	6963      	ldr	r3, [r4, #20]
  404a44:	2200      	movs	r2, #0
  404a46:	425b      	negs	r3, r3
  404a48:	61a3      	str	r3, [r4, #24]
  404a4a:	60a2      	str	r2, [r4, #8]
  404a4c:	b1f0      	cbz	r0, 404a8c <__swsetup_r+0x70>
  404a4e:	2000      	movs	r0, #0
  404a50:	bd38      	pop	{r3, r4, r5, pc}
  404a52:	06d9      	lsls	r1, r3, #27
  404a54:	d53c      	bpl.n	404ad0 <__swsetup_r+0xb4>
  404a56:	0758      	lsls	r0, r3, #29
  404a58:	d426      	bmi.n	404aa8 <__swsetup_r+0x8c>
  404a5a:	6920      	ldr	r0, [r4, #16]
  404a5c:	f042 0308 	orr.w	r3, r2, #8
  404a60:	81a3      	strh	r3, [r4, #12]
  404a62:	b29b      	uxth	r3, r3
  404a64:	2800      	cmp	r0, #0
  404a66:	d1e9      	bne.n	404a3c <__swsetup_r+0x20>
  404a68:	f403 7220 	and.w	r2, r3, #640	; 0x280
  404a6c:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  404a70:	d0e4      	beq.n	404a3c <__swsetup_r+0x20>
  404a72:	4628      	mov	r0, r5
  404a74:	4621      	mov	r1, r4
  404a76:	f000 fd2f 	bl	4054d8 <__smakebuf_r>
  404a7a:	89a3      	ldrh	r3, [r4, #12]
  404a7c:	6920      	ldr	r0, [r4, #16]
  404a7e:	e7dd      	b.n	404a3c <__swsetup_r+0x20>
  404a80:	0799      	lsls	r1, r3, #30
  404a82:	bf58      	it	pl
  404a84:	6962      	ldrpl	r2, [r4, #20]
  404a86:	60a2      	str	r2, [r4, #8]
  404a88:	2800      	cmp	r0, #0
  404a8a:	d1e0      	bne.n	404a4e <__swsetup_r+0x32>
  404a8c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404a90:	061a      	lsls	r2, r3, #24
  404a92:	d5dd      	bpl.n	404a50 <__swsetup_r+0x34>
  404a94:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404a98:	81a3      	strh	r3, [r4, #12]
  404a9a:	f04f 30ff 	mov.w	r0, #4294967295
  404a9e:	bd38      	pop	{r3, r4, r5, pc}
  404aa0:	4618      	mov	r0, r3
  404aa2:	f000 f927 	bl	404cf4 <__sinit>
  404aa6:	e7c2      	b.n	404a2e <__swsetup_r+0x12>
  404aa8:	6b21      	ldr	r1, [r4, #48]	; 0x30
  404aaa:	b151      	cbz	r1, 404ac2 <__swsetup_r+0xa6>
  404aac:	f104 0340 	add.w	r3, r4, #64	; 0x40
  404ab0:	4299      	cmp	r1, r3
  404ab2:	d004      	beq.n	404abe <__swsetup_r+0xa2>
  404ab4:	4628      	mov	r0, r5
  404ab6:	f000 fa43 	bl	404f40 <_free_r>
  404aba:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  404abe:	2300      	movs	r3, #0
  404ac0:	6323      	str	r3, [r4, #48]	; 0x30
  404ac2:	2300      	movs	r3, #0
  404ac4:	6920      	ldr	r0, [r4, #16]
  404ac6:	6063      	str	r3, [r4, #4]
  404ac8:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  404acc:	6020      	str	r0, [r4, #0]
  404ace:	e7c5      	b.n	404a5c <__swsetup_r+0x40>
  404ad0:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  404ad4:	2309      	movs	r3, #9
  404ad6:	602b      	str	r3, [r5, #0]
  404ad8:	f04f 30ff 	mov.w	r0, #4294967295
  404adc:	81a2      	strh	r2, [r4, #12]
  404ade:	bd38      	pop	{r3, r4, r5, pc}
  404ae0:	20400038 	.word	0x20400038

00404ae4 <register_fini>:
  404ae4:	4b02      	ldr	r3, [pc, #8]	; (404af0 <register_fini+0xc>)
  404ae6:	b113      	cbz	r3, 404aee <register_fini+0xa>
  404ae8:	4802      	ldr	r0, [pc, #8]	; (404af4 <register_fini+0x10>)
  404aea:	f000 b805 	b.w	404af8 <atexit>
  404aee:	4770      	bx	lr
  404af0:	00000000 	.word	0x00000000
  404af4:	00404d65 	.word	0x00404d65

00404af8 <atexit>:
  404af8:	2300      	movs	r3, #0
  404afa:	4601      	mov	r1, r0
  404afc:	461a      	mov	r2, r3
  404afe:	4618      	mov	r0, r3
  404b00:	f001 b9b2 	b.w	405e68 <__register_exitproc>

00404b04 <__sflush_r>:
  404b04:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  404b08:	b29a      	uxth	r2, r3
  404b0a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404b0e:	460d      	mov	r5, r1
  404b10:	0711      	lsls	r1, r2, #28
  404b12:	4680      	mov	r8, r0
  404b14:	d43a      	bmi.n	404b8c <__sflush_r+0x88>
  404b16:	686a      	ldr	r2, [r5, #4]
  404b18:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  404b1c:	2a00      	cmp	r2, #0
  404b1e:	81ab      	strh	r3, [r5, #12]
  404b20:	dd6f      	ble.n	404c02 <__sflush_r+0xfe>
  404b22:	6aac      	ldr	r4, [r5, #40]	; 0x28
  404b24:	2c00      	cmp	r4, #0
  404b26:	d049      	beq.n	404bbc <__sflush_r+0xb8>
  404b28:	2200      	movs	r2, #0
  404b2a:	b29b      	uxth	r3, r3
  404b2c:	f8d8 6000 	ldr.w	r6, [r8]
  404b30:	f8c8 2000 	str.w	r2, [r8]
  404b34:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
  404b38:	d067      	beq.n	404c0a <__sflush_r+0x106>
  404b3a:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  404b3c:	075f      	lsls	r7, r3, #29
  404b3e:	d505      	bpl.n	404b4c <__sflush_r+0x48>
  404b40:	6869      	ldr	r1, [r5, #4]
  404b42:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  404b44:	1a52      	subs	r2, r2, r1
  404b46:	b10b      	cbz	r3, 404b4c <__sflush_r+0x48>
  404b48:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  404b4a:	1ad2      	subs	r2, r2, r3
  404b4c:	2300      	movs	r3, #0
  404b4e:	69e9      	ldr	r1, [r5, #28]
  404b50:	4640      	mov	r0, r8
  404b52:	47a0      	blx	r4
  404b54:	1c44      	adds	r4, r0, #1
  404b56:	d03c      	beq.n	404bd2 <__sflush_r+0xce>
  404b58:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  404b5c:	692a      	ldr	r2, [r5, #16]
  404b5e:	602a      	str	r2, [r5, #0]
  404b60:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  404b64:	2200      	movs	r2, #0
  404b66:	81ab      	strh	r3, [r5, #12]
  404b68:	04db      	lsls	r3, r3, #19
  404b6a:	606a      	str	r2, [r5, #4]
  404b6c:	d447      	bmi.n	404bfe <__sflush_r+0xfa>
  404b6e:	6b29      	ldr	r1, [r5, #48]	; 0x30
  404b70:	f8c8 6000 	str.w	r6, [r8]
  404b74:	b311      	cbz	r1, 404bbc <__sflush_r+0xb8>
  404b76:	f105 0340 	add.w	r3, r5, #64	; 0x40
  404b7a:	4299      	cmp	r1, r3
  404b7c:	d002      	beq.n	404b84 <__sflush_r+0x80>
  404b7e:	4640      	mov	r0, r8
  404b80:	f000 f9de 	bl	404f40 <_free_r>
  404b84:	2000      	movs	r0, #0
  404b86:	6328      	str	r0, [r5, #48]	; 0x30
  404b88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404b8c:	692e      	ldr	r6, [r5, #16]
  404b8e:	b1ae      	cbz	r6, 404bbc <__sflush_r+0xb8>
  404b90:	682c      	ldr	r4, [r5, #0]
  404b92:	602e      	str	r6, [r5, #0]
  404b94:	0791      	lsls	r1, r2, #30
  404b96:	bf0c      	ite	eq
  404b98:	696b      	ldreq	r3, [r5, #20]
  404b9a:	2300      	movne	r3, #0
  404b9c:	1ba4      	subs	r4, r4, r6
  404b9e:	60ab      	str	r3, [r5, #8]
  404ba0:	e00a      	b.n	404bb8 <__sflush_r+0xb4>
  404ba2:	4623      	mov	r3, r4
  404ba4:	4632      	mov	r2, r6
  404ba6:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  404ba8:	69e9      	ldr	r1, [r5, #28]
  404baa:	4640      	mov	r0, r8
  404bac:	47b8      	blx	r7
  404bae:	2800      	cmp	r0, #0
  404bb0:	eba4 0400 	sub.w	r4, r4, r0
  404bb4:	4406      	add	r6, r0
  404bb6:	dd04      	ble.n	404bc2 <__sflush_r+0xbe>
  404bb8:	2c00      	cmp	r4, #0
  404bba:	dcf2      	bgt.n	404ba2 <__sflush_r+0x9e>
  404bbc:	2000      	movs	r0, #0
  404bbe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404bc2:	89ab      	ldrh	r3, [r5, #12]
  404bc4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404bc8:	81ab      	strh	r3, [r5, #12]
  404bca:	f04f 30ff 	mov.w	r0, #4294967295
  404bce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404bd2:	f8d8 4000 	ldr.w	r4, [r8]
  404bd6:	2c1d      	cmp	r4, #29
  404bd8:	d8f3      	bhi.n	404bc2 <__sflush_r+0xbe>
  404bda:	4b19      	ldr	r3, [pc, #100]	; (404c40 <__sflush_r+0x13c>)
  404bdc:	40e3      	lsrs	r3, r4
  404bde:	43db      	mvns	r3, r3
  404be0:	f013 0301 	ands.w	r3, r3, #1
  404be4:	d1ed      	bne.n	404bc2 <__sflush_r+0xbe>
  404be6:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
  404bea:	606b      	str	r3, [r5, #4]
  404bec:	f422 6300 	bic.w	r3, r2, #2048	; 0x800
  404bf0:	6929      	ldr	r1, [r5, #16]
  404bf2:	81ab      	strh	r3, [r5, #12]
  404bf4:	04da      	lsls	r2, r3, #19
  404bf6:	6029      	str	r1, [r5, #0]
  404bf8:	d5b9      	bpl.n	404b6e <__sflush_r+0x6a>
  404bfa:	2c00      	cmp	r4, #0
  404bfc:	d1b7      	bne.n	404b6e <__sflush_r+0x6a>
  404bfe:	6528      	str	r0, [r5, #80]	; 0x50
  404c00:	e7b5      	b.n	404b6e <__sflush_r+0x6a>
  404c02:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  404c04:	2a00      	cmp	r2, #0
  404c06:	dc8c      	bgt.n	404b22 <__sflush_r+0x1e>
  404c08:	e7d8      	b.n	404bbc <__sflush_r+0xb8>
  404c0a:	2301      	movs	r3, #1
  404c0c:	69e9      	ldr	r1, [r5, #28]
  404c0e:	4640      	mov	r0, r8
  404c10:	47a0      	blx	r4
  404c12:	1c43      	adds	r3, r0, #1
  404c14:	4602      	mov	r2, r0
  404c16:	d002      	beq.n	404c1e <__sflush_r+0x11a>
  404c18:	89ab      	ldrh	r3, [r5, #12]
  404c1a:	6aac      	ldr	r4, [r5, #40]	; 0x28
  404c1c:	e78e      	b.n	404b3c <__sflush_r+0x38>
  404c1e:	f8d8 3000 	ldr.w	r3, [r8]
  404c22:	2b00      	cmp	r3, #0
  404c24:	d0f8      	beq.n	404c18 <__sflush_r+0x114>
  404c26:	2b1d      	cmp	r3, #29
  404c28:	d001      	beq.n	404c2e <__sflush_r+0x12a>
  404c2a:	2b16      	cmp	r3, #22
  404c2c:	d102      	bne.n	404c34 <__sflush_r+0x130>
  404c2e:	f8c8 6000 	str.w	r6, [r8]
  404c32:	e7c3      	b.n	404bbc <__sflush_r+0xb8>
  404c34:	89ab      	ldrh	r3, [r5, #12]
  404c36:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404c3a:	81ab      	strh	r3, [r5, #12]
  404c3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404c40:	20400001 	.word	0x20400001

00404c44 <_fflush_r>:
  404c44:	b538      	push	{r3, r4, r5, lr}
  404c46:	460d      	mov	r5, r1
  404c48:	4604      	mov	r4, r0
  404c4a:	b108      	cbz	r0, 404c50 <_fflush_r+0xc>
  404c4c:	6b83      	ldr	r3, [r0, #56]	; 0x38
  404c4e:	b1bb      	cbz	r3, 404c80 <_fflush_r+0x3c>
  404c50:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
  404c54:	b188      	cbz	r0, 404c7a <_fflush_r+0x36>
  404c56:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  404c58:	07db      	lsls	r3, r3, #31
  404c5a:	d401      	bmi.n	404c60 <_fflush_r+0x1c>
  404c5c:	0581      	lsls	r1, r0, #22
  404c5e:	d517      	bpl.n	404c90 <_fflush_r+0x4c>
  404c60:	4620      	mov	r0, r4
  404c62:	4629      	mov	r1, r5
  404c64:	f7ff ff4e 	bl	404b04 <__sflush_r>
  404c68:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  404c6a:	07da      	lsls	r2, r3, #31
  404c6c:	4604      	mov	r4, r0
  404c6e:	d402      	bmi.n	404c76 <_fflush_r+0x32>
  404c70:	89ab      	ldrh	r3, [r5, #12]
  404c72:	059b      	lsls	r3, r3, #22
  404c74:	d507      	bpl.n	404c86 <_fflush_r+0x42>
  404c76:	4620      	mov	r0, r4
  404c78:	bd38      	pop	{r3, r4, r5, pc}
  404c7a:	4604      	mov	r4, r0
  404c7c:	4620      	mov	r0, r4
  404c7e:	bd38      	pop	{r3, r4, r5, pc}
  404c80:	f000 f838 	bl	404cf4 <__sinit>
  404c84:	e7e4      	b.n	404c50 <_fflush_r+0xc>
  404c86:	6da8      	ldr	r0, [r5, #88]	; 0x58
  404c88:	f000 fbf6 	bl	405478 <__retarget_lock_release_recursive>
  404c8c:	4620      	mov	r0, r4
  404c8e:	bd38      	pop	{r3, r4, r5, pc}
  404c90:	6da8      	ldr	r0, [r5, #88]	; 0x58
  404c92:	f000 fbef 	bl	405474 <__retarget_lock_acquire_recursive>
  404c96:	e7e3      	b.n	404c60 <_fflush_r+0x1c>

00404c98 <_cleanup_r>:
  404c98:	4901      	ldr	r1, [pc, #4]	; (404ca0 <_cleanup_r+0x8>)
  404c9a:	f000 bbaf 	b.w	4053fc <_fwalk_reent>
  404c9e:	bf00      	nop
  404ca0:	00405f51 	.word	0x00405f51

00404ca4 <std.isra.0>:
  404ca4:	b510      	push	{r4, lr}
  404ca6:	2300      	movs	r3, #0
  404ca8:	4604      	mov	r4, r0
  404caa:	8181      	strh	r1, [r0, #12]
  404cac:	81c2      	strh	r2, [r0, #14]
  404cae:	6003      	str	r3, [r0, #0]
  404cb0:	6043      	str	r3, [r0, #4]
  404cb2:	6083      	str	r3, [r0, #8]
  404cb4:	6643      	str	r3, [r0, #100]	; 0x64
  404cb6:	6103      	str	r3, [r0, #16]
  404cb8:	6143      	str	r3, [r0, #20]
  404cba:	6183      	str	r3, [r0, #24]
  404cbc:	4619      	mov	r1, r3
  404cbe:	2208      	movs	r2, #8
  404cc0:	305c      	adds	r0, #92	; 0x5c
  404cc2:	f7fe fea5 	bl	403a10 <memset>
  404cc6:	4807      	ldr	r0, [pc, #28]	; (404ce4 <std.isra.0+0x40>)
  404cc8:	4907      	ldr	r1, [pc, #28]	; (404ce8 <std.isra.0+0x44>)
  404cca:	4a08      	ldr	r2, [pc, #32]	; (404cec <std.isra.0+0x48>)
  404ccc:	4b08      	ldr	r3, [pc, #32]	; (404cf0 <std.isra.0+0x4c>)
  404cce:	6220      	str	r0, [r4, #32]
  404cd0:	61e4      	str	r4, [r4, #28]
  404cd2:	6261      	str	r1, [r4, #36]	; 0x24
  404cd4:	62a2      	str	r2, [r4, #40]	; 0x28
  404cd6:	62e3      	str	r3, [r4, #44]	; 0x2c
  404cd8:	f104 0058 	add.w	r0, r4, #88	; 0x58
  404cdc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  404ce0:	f000 bbc4 	b.w	40546c <__retarget_lock_init_recursive>
  404ce4:	00405b89 	.word	0x00405b89
  404ce8:	00405bad 	.word	0x00405bad
  404cec:	00405be9 	.word	0x00405be9
  404cf0:	00405c09 	.word	0x00405c09

00404cf4 <__sinit>:
  404cf4:	b510      	push	{r4, lr}
  404cf6:	4604      	mov	r4, r0
  404cf8:	4812      	ldr	r0, [pc, #72]	; (404d44 <__sinit+0x50>)
  404cfa:	f000 fbbb 	bl	405474 <__retarget_lock_acquire_recursive>
  404cfe:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  404d00:	b9d2      	cbnz	r2, 404d38 <__sinit+0x44>
  404d02:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
  404d06:	4810      	ldr	r0, [pc, #64]	; (404d48 <__sinit+0x54>)
  404d08:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
  404d0c:	2103      	movs	r1, #3
  404d0e:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
  404d12:	63e0      	str	r0, [r4, #60]	; 0x3c
  404d14:	f8c4 12e4 	str.w	r1, [r4, #740]	; 0x2e4
  404d18:	6860      	ldr	r0, [r4, #4]
  404d1a:	2104      	movs	r1, #4
  404d1c:	f7ff ffc2 	bl	404ca4 <std.isra.0>
  404d20:	2201      	movs	r2, #1
  404d22:	2109      	movs	r1, #9
  404d24:	68a0      	ldr	r0, [r4, #8]
  404d26:	f7ff ffbd 	bl	404ca4 <std.isra.0>
  404d2a:	2202      	movs	r2, #2
  404d2c:	2112      	movs	r1, #18
  404d2e:	68e0      	ldr	r0, [r4, #12]
  404d30:	f7ff ffb8 	bl	404ca4 <std.isra.0>
  404d34:	2301      	movs	r3, #1
  404d36:	63a3      	str	r3, [r4, #56]	; 0x38
  404d38:	4802      	ldr	r0, [pc, #8]	; (404d44 <__sinit+0x50>)
  404d3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  404d3e:	f000 bb9b 	b.w	405478 <__retarget_lock_release_recursive>
  404d42:	bf00      	nop
  404d44:	20442588 	.word	0x20442588
  404d48:	00404c99 	.word	0x00404c99

00404d4c <__sfp_lock_acquire>:
  404d4c:	4801      	ldr	r0, [pc, #4]	; (404d54 <__sfp_lock_acquire+0x8>)
  404d4e:	f000 bb91 	b.w	405474 <__retarget_lock_acquire_recursive>
  404d52:	bf00      	nop
  404d54:	2044259c 	.word	0x2044259c

00404d58 <__sfp_lock_release>:
  404d58:	4801      	ldr	r0, [pc, #4]	; (404d60 <__sfp_lock_release+0x8>)
  404d5a:	f000 bb8d 	b.w	405478 <__retarget_lock_release_recursive>
  404d5e:	bf00      	nop
  404d60:	2044259c 	.word	0x2044259c

00404d64 <__libc_fini_array>:
  404d64:	b538      	push	{r3, r4, r5, lr}
  404d66:	4c0a      	ldr	r4, [pc, #40]	; (404d90 <__libc_fini_array+0x2c>)
  404d68:	4d0a      	ldr	r5, [pc, #40]	; (404d94 <__libc_fini_array+0x30>)
  404d6a:	1b64      	subs	r4, r4, r5
  404d6c:	10a4      	asrs	r4, r4, #2
  404d6e:	d00a      	beq.n	404d86 <__libc_fini_array+0x22>
  404d70:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  404d74:	3b01      	subs	r3, #1
  404d76:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  404d7a:	3c01      	subs	r4, #1
  404d7c:	f855 3904 	ldr.w	r3, [r5], #-4
  404d80:	4798      	blx	r3
  404d82:	2c00      	cmp	r4, #0
  404d84:	d1f9      	bne.n	404d7a <__libc_fini_array+0x16>
  404d86:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  404d8a:	f00a ba0d 	b.w	40f1a8 <_fini>
  404d8e:	bf00      	nop
  404d90:	0040f1b8 	.word	0x0040f1b8
  404d94:	0040f1b4 	.word	0x0040f1b4

00404d98 <__fputwc>:
  404d98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  404d9c:	b082      	sub	sp, #8
  404d9e:	4680      	mov	r8, r0
  404da0:	4689      	mov	r9, r1
  404da2:	4614      	mov	r4, r2
  404da4:	f000 fb54 	bl	405450 <__locale_mb_cur_max>
  404da8:	2801      	cmp	r0, #1
  404daa:	d036      	beq.n	404e1a <__fputwc+0x82>
  404dac:	464a      	mov	r2, r9
  404dae:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  404db2:	a901      	add	r1, sp, #4
  404db4:	4640      	mov	r0, r8
  404db6:	f001 f809 	bl	405dcc <_wcrtomb_r>
  404dba:	1c42      	adds	r2, r0, #1
  404dbc:	4606      	mov	r6, r0
  404dbe:	d025      	beq.n	404e0c <__fputwc+0x74>
  404dc0:	b3a8      	cbz	r0, 404e2e <__fputwc+0x96>
  404dc2:	f89d e004 	ldrb.w	lr, [sp, #4]
  404dc6:	2500      	movs	r5, #0
  404dc8:	f10d 0a04 	add.w	sl, sp, #4
  404dcc:	e009      	b.n	404de2 <__fputwc+0x4a>
  404dce:	6823      	ldr	r3, [r4, #0]
  404dd0:	1c5a      	adds	r2, r3, #1
  404dd2:	6022      	str	r2, [r4, #0]
  404dd4:	f883 e000 	strb.w	lr, [r3]
  404dd8:	3501      	adds	r5, #1
  404dda:	42b5      	cmp	r5, r6
  404ddc:	d227      	bcs.n	404e2e <__fputwc+0x96>
  404dde:	f815 e00a 	ldrb.w	lr, [r5, sl]
  404de2:	68a3      	ldr	r3, [r4, #8]
  404de4:	3b01      	subs	r3, #1
  404de6:	2b00      	cmp	r3, #0
  404de8:	60a3      	str	r3, [r4, #8]
  404dea:	daf0      	bge.n	404dce <__fputwc+0x36>
  404dec:	69a7      	ldr	r7, [r4, #24]
  404dee:	42bb      	cmp	r3, r7
  404df0:	4671      	mov	r1, lr
  404df2:	4622      	mov	r2, r4
  404df4:	4640      	mov	r0, r8
  404df6:	db02      	blt.n	404dfe <__fputwc+0x66>
  404df8:	f1be 0f0a 	cmp.w	lr, #10
  404dfc:	d1e7      	bne.n	404dce <__fputwc+0x36>
  404dfe:	f000 ff8d 	bl	405d1c <__swbuf_r>
  404e02:	1c43      	adds	r3, r0, #1
  404e04:	d1e8      	bne.n	404dd8 <__fputwc+0x40>
  404e06:	b002      	add	sp, #8
  404e08:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  404e0c:	89a3      	ldrh	r3, [r4, #12]
  404e0e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404e12:	81a3      	strh	r3, [r4, #12]
  404e14:	b002      	add	sp, #8
  404e16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  404e1a:	f109 33ff 	add.w	r3, r9, #4294967295
  404e1e:	2bfe      	cmp	r3, #254	; 0xfe
  404e20:	d8c4      	bhi.n	404dac <__fputwc+0x14>
  404e22:	fa5f fe89 	uxtb.w	lr, r9
  404e26:	4606      	mov	r6, r0
  404e28:	f88d e004 	strb.w	lr, [sp, #4]
  404e2c:	e7cb      	b.n	404dc6 <__fputwc+0x2e>
  404e2e:	4648      	mov	r0, r9
  404e30:	b002      	add	sp, #8
  404e32:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  404e36:	bf00      	nop

00404e38 <_fputwc_r>:
  404e38:	b530      	push	{r4, r5, lr}
  404e3a:	6e53      	ldr	r3, [r2, #100]	; 0x64
  404e3c:	f013 0f01 	tst.w	r3, #1
  404e40:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
  404e44:	4614      	mov	r4, r2
  404e46:	b083      	sub	sp, #12
  404e48:	4605      	mov	r5, r0
  404e4a:	b29a      	uxth	r2, r3
  404e4c:	d101      	bne.n	404e52 <_fputwc_r+0x1a>
  404e4e:	0590      	lsls	r0, r2, #22
  404e50:	d51c      	bpl.n	404e8c <_fputwc_r+0x54>
  404e52:	0490      	lsls	r0, r2, #18
  404e54:	d406      	bmi.n	404e64 <_fputwc_r+0x2c>
  404e56:	6e62      	ldr	r2, [r4, #100]	; 0x64
  404e58:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  404e5c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  404e60:	81a3      	strh	r3, [r4, #12]
  404e62:	6662      	str	r2, [r4, #100]	; 0x64
  404e64:	4628      	mov	r0, r5
  404e66:	4622      	mov	r2, r4
  404e68:	f7ff ff96 	bl	404d98 <__fputwc>
  404e6c:	6e63      	ldr	r3, [r4, #100]	; 0x64
  404e6e:	07da      	lsls	r2, r3, #31
  404e70:	4605      	mov	r5, r0
  404e72:	d402      	bmi.n	404e7a <_fputwc_r+0x42>
  404e74:	89a3      	ldrh	r3, [r4, #12]
  404e76:	059b      	lsls	r3, r3, #22
  404e78:	d502      	bpl.n	404e80 <_fputwc_r+0x48>
  404e7a:	4628      	mov	r0, r5
  404e7c:	b003      	add	sp, #12
  404e7e:	bd30      	pop	{r4, r5, pc}
  404e80:	6da0      	ldr	r0, [r4, #88]	; 0x58
  404e82:	f000 faf9 	bl	405478 <__retarget_lock_release_recursive>
  404e86:	4628      	mov	r0, r5
  404e88:	b003      	add	sp, #12
  404e8a:	bd30      	pop	{r4, r5, pc}
  404e8c:	6da0      	ldr	r0, [r4, #88]	; 0x58
  404e8e:	9101      	str	r1, [sp, #4]
  404e90:	f000 faf0 	bl	405474 <__retarget_lock_acquire_recursive>
  404e94:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404e98:	9901      	ldr	r1, [sp, #4]
  404e9a:	b29a      	uxth	r2, r3
  404e9c:	e7d9      	b.n	404e52 <_fputwc_r+0x1a>
  404e9e:	bf00      	nop

00404ea0 <_malloc_trim_r>:
  404ea0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  404ea2:	4f24      	ldr	r7, [pc, #144]	; (404f34 <_malloc_trim_r+0x94>)
  404ea4:	460c      	mov	r4, r1
  404ea6:	4606      	mov	r6, r0
  404ea8:	f7fe fe00 	bl	403aac <__malloc_lock>
  404eac:	68bb      	ldr	r3, [r7, #8]
  404eae:	685d      	ldr	r5, [r3, #4]
  404eb0:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  404eb4:	310f      	adds	r1, #15
  404eb6:	f025 0503 	bic.w	r5, r5, #3
  404eba:	4429      	add	r1, r5
  404ebc:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  404ec0:	f021 010f 	bic.w	r1, r1, #15
  404ec4:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  404ec8:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  404ecc:	db07      	blt.n	404ede <_malloc_trim_r+0x3e>
  404ece:	2100      	movs	r1, #0
  404ed0:	4630      	mov	r0, r6
  404ed2:	f7fe fdf7 	bl	403ac4 <_sbrk_r>
  404ed6:	68bb      	ldr	r3, [r7, #8]
  404ed8:	442b      	add	r3, r5
  404eda:	4298      	cmp	r0, r3
  404edc:	d004      	beq.n	404ee8 <_malloc_trim_r+0x48>
  404ede:	4630      	mov	r0, r6
  404ee0:	f7fe fdea 	bl	403ab8 <__malloc_unlock>
  404ee4:	2000      	movs	r0, #0
  404ee6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404ee8:	4261      	negs	r1, r4
  404eea:	4630      	mov	r0, r6
  404eec:	f7fe fdea 	bl	403ac4 <_sbrk_r>
  404ef0:	3001      	adds	r0, #1
  404ef2:	d00d      	beq.n	404f10 <_malloc_trim_r+0x70>
  404ef4:	4b10      	ldr	r3, [pc, #64]	; (404f38 <_malloc_trim_r+0x98>)
  404ef6:	68ba      	ldr	r2, [r7, #8]
  404ef8:	6819      	ldr	r1, [r3, #0]
  404efa:	1b2d      	subs	r5, r5, r4
  404efc:	f045 0501 	orr.w	r5, r5, #1
  404f00:	4630      	mov	r0, r6
  404f02:	1b09      	subs	r1, r1, r4
  404f04:	6055      	str	r5, [r2, #4]
  404f06:	6019      	str	r1, [r3, #0]
  404f08:	f7fe fdd6 	bl	403ab8 <__malloc_unlock>
  404f0c:	2001      	movs	r0, #1
  404f0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404f10:	2100      	movs	r1, #0
  404f12:	4630      	mov	r0, r6
  404f14:	f7fe fdd6 	bl	403ac4 <_sbrk_r>
  404f18:	68ba      	ldr	r2, [r7, #8]
  404f1a:	1a83      	subs	r3, r0, r2
  404f1c:	2b0f      	cmp	r3, #15
  404f1e:	ddde      	ble.n	404ede <_malloc_trim_r+0x3e>
  404f20:	4c06      	ldr	r4, [pc, #24]	; (404f3c <_malloc_trim_r+0x9c>)
  404f22:	4905      	ldr	r1, [pc, #20]	; (404f38 <_malloc_trim_r+0x98>)
  404f24:	6824      	ldr	r4, [r4, #0]
  404f26:	f043 0301 	orr.w	r3, r3, #1
  404f2a:	1b00      	subs	r0, r0, r4
  404f2c:	6053      	str	r3, [r2, #4]
  404f2e:	6008      	str	r0, [r1, #0]
  404f30:	e7d5      	b.n	404ede <_malloc_trim_r+0x3e>
  404f32:	bf00      	nop
  404f34:	20400468 	.word	0x20400468
  404f38:	20409a9c 	.word	0x20409a9c
  404f3c:	20400870 	.word	0x20400870

00404f40 <_free_r>:
  404f40:	2900      	cmp	r1, #0
  404f42:	d044      	beq.n	404fce <_free_r+0x8e>
  404f44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404f48:	460d      	mov	r5, r1
  404f4a:	4680      	mov	r8, r0
  404f4c:	f7fe fdae 	bl	403aac <__malloc_lock>
  404f50:	f855 7c04 	ldr.w	r7, [r5, #-4]
  404f54:	4969      	ldr	r1, [pc, #420]	; (4050fc <_free_r+0x1bc>)
  404f56:	f027 0301 	bic.w	r3, r7, #1
  404f5a:	f1a5 0408 	sub.w	r4, r5, #8
  404f5e:	18e2      	adds	r2, r4, r3
  404f60:	688e      	ldr	r6, [r1, #8]
  404f62:	6850      	ldr	r0, [r2, #4]
  404f64:	42b2      	cmp	r2, r6
  404f66:	f020 0003 	bic.w	r0, r0, #3
  404f6a:	d05e      	beq.n	40502a <_free_r+0xea>
  404f6c:	07fe      	lsls	r6, r7, #31
  404f6e:	6050      	str	r0, [r2, #4]
  404f70:	d40b      	bmi.n	404f8a <_free_r+0x4a>
  404f72:	f855 7c08 	ldr.w	r7, [r5, #-8]
  404f76:	1be4      	subs	r4, r4, r7
  404f78:	f101 0e08 	add.w	lr, r1, #8
  404f7c:	68a5      	ldr	r5, [r4, #8]
  404f7e:	4575      	cmp	r5, lr
  404f80:	443b      	add	r3, r7
  404f82:	d06d      	beq.n	405060 <_free_r+0x120>
  404f84:	68e7      	ldr	r7, [r4, #12]
  404f86:	60ef      	str	r7, [r5, #12]
  404f88:	60bd      	str	r5, [r7, #8]
  404f8a:	1815      	adds	r5, r2, r0
  404f8c:	686d      	ldr	r5, [r5, #4]
  404f8e:	07ed      	lsls	r5, r5, #31
  404f90:	d53e      	bpl.n	405010 <_free_r+0xd0>
  404f92:	f043 0201 	orr.w	r2, r3, #1
  404f96:	6062      	str	r2, [r4, #4]
  404f98:	50e3      	str	r3, [r4, r3]
  404f9a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  404f9e:	d217      	bcs.n	404fd0 <_free_r+0x90>
  404fa0:	08db      	lsrs	r3, r3, #3
  404fa2:	1c58      	adds	r0, r3, #1
  404fa4:	109a      	asrs	r2, r3, #2
  404fa6:	684d      	ldr	r5, [r1, #4]
  404fa8:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  404fac:	60a7      	str	r7, [r4, #8]
  404fae:	2301      	movs	r3, #1
  404fb0:	4093      	lsls	r3, r2
  404fb2:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  404fb6:	432b      	orrs	r3, r5
  404fb8:	3a08      	subs	r2, #8
  404fba:	60e2      	str	r2, [r4, #12]
  404fbc:	604b      	str	r3, [r1, #4]
  404fbe:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  404fc2:	60fc      	str	r4, [r7, #12]
  404fc4:	4640      	mov	r0, r8
  404fc6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  404fca:	f7fe bd75 	b.w	403ab8 <__malloc_unlock>
  404fce:	4770      	bx	lr
  404fd0:	0a5a      	lsrs	r2, r3, #9
  404fd2:	2a04      	cmp	r2, #4
  404fd4:	d852      	bhi.n	40507c <_free_r+0x13c>
  404fd6:	099a      	lsrs	r2, r3, #6
  404fd8:	f102 0739 	add.w	r7, r2, #57	; 0x39
  404fdc:	00ff      	lsls	r7, r7, #3
  404fde:	f102 0538 	add.w	r5, r2, #56	; 0x38
  404fe2:	19c8      	adds	r0, r1, r7
  404fe4:	59ca      	ldr	r2, [r1, r7]
  404fe6:	3808      	subs	r0, #8
  404fe8:	4290      	cmp	r0, r2
  404fea:	d04f      	beq.n	40508c <_free_r+0x14c>
  404fec:	6851      	ldr	r1, [r2, #4]
  404fee:	f021 0103 	bic.w	r1, r1, #3
  404ff2:	428b      	cmp	r3, r1
  404ff4:	d232      	bcs.n	40505c <_free_r+0x11c>
  404ff6:	6892      	ldr	r2, [r2, #8]
  404ff8:	4290      	cmp	r0, r2
  404ffa:	d1f7      	bne.n	404fec <_free_r+0xac>
  404ffc:	68c3      	ldr	r3, [r0, #12]
  404ffe:	60a0      	str	r0, [r4, #8]
  405000:	60e3      	str	r3, [r4, #12]
  405002:	609c      	str	r4, [r3, #8]
  405004:	60c4      	str	r4, [r0, #12]
  405006:	4640      	mov	r0, r8
  405008:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  40500c:	f7fe bd54 	b.w	403ab8 <__malloc_unlock>
  405010:	6895      	ldr	r5, [r2, #8]
  405012:	4f3b      	ldr	r7, [pc, #236]	; (405100 <_free_r+0x1c0>)
  405014:	42bd      	cmp	r5, r7
  405016:	4403      	add	r3, r0
  405018:	d040      	beq.n	40509c <_free_r+0x15c>
  40501a:	68d0      	ldr	r0, [r2, #12]
  40501c:	60e8      	str	r0, [r5, #12]
  40501e:	f043 0201 	orr.w	r2, r3, #1
  405022:	6085      	str	r5, [r0, #8]
  405024:	6062      	str	r2, [r4, #4]
  405026:	50e3      	str	r3, [r4, r3]
  405028:	e7b7      	b.n	404f9a <_free_r+0x5a>
  40502a:	07ff      	lsls	r7, r7, #31
  40502c:	4403      	add	r3, r0
  40502e:	d407      	bmi.n	405040 <_free_r+0x100>
  405030:	f855 2c08 	ldr.w	r2, [r5, #-8]
  405034:	1aa4      	subs	r4, r4, r2
  405036:	4413      	add	r3, r2
  405038:	68a0      	ldr	r0, [r4, #8]
  40503a:	68e2      	ldr	r2, [r4, #12]
  40503c:	60c2      	str	r2, [r0, #12]
  40503e:	6090      	str	r0, [r2, #8]
  405040:	4a30      	ldr	r2, [pc, #192]	; (405104 <_free_r+0x1c4>)
  405042:	6812      	ldr	r2, [r2, #0]
  405044:	f043 0001 	orr.w	r0, r3, #1
  405048:	4293      	cmp	r3, r2
  40504a:	6060      	str	r0, [r4, #4]
  40504c:	608c      	str	r4, [r1, #8]
  40504e:	d3b9      	bcc.n	404fc4 <_free_r+0x84>
  405050:	4b2d      	ldr	r3, [pc, #180]	; (405108 <_free_r+0x1c8>)
  405052:	4640      	mov	r0, r8
  405054:	6819      	ldr	r1, [r3, #0]
  405056:	f7ff ff23 	bl	404ea0 <_malloc_trim_r>
  40505a:	e7b3      	b.n	404fc4 <_free_r+0x84>
  40505c:	4610      	mov	r0, r2
  40505e:	e7cd      	b.n	404ffc <_free_r+0xbc>
  405060:	1811      	adds	r1, r2, r0
  405062:	6849      	ldr	r1, [r1, #4]
  405064:	07c9      	lsls	r1, r1, #31
  405066:	d444      	bmi.n	4050f2 <_free_r+0x1b2>
  405068:	6891      	ldr	r1, [r2, #8]
  40506a:	68d2      	ldr	r2, [r2, #12]
  40506c:	60ca      	str	r2, [r1, #12]
  40506e:	4403      	add	r3, r0
  405070:	f043 0001 	orr.w	r0, r3, #1
  405074:	6091      	str	r1, [r2, #8]
  405076:	6060      	str	r0, [r4, #4]
  405078:	50e3      	str	r3, [r4, r3]
  40507a:	e7a3      	b.n	404fc4 <_free_r+0x84>
  40507c:	2a14      	cmp	r2, #20
  40507e:	d816      	bhi.n	4050ae <_free_r+0x16e>
  405080:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  405084:	00ff      	lsls	r7, r7, #3
  405086:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  40508a:	e7aa      	b.n	404fe2 <_free_r+0xa2>
  40508c:	10aa      	asrs	r2, r5, #2
  40508e:	2301      	movs	r3, #1
  405090:	684d      	ldr	r5, [r1, #4]
  405092:	4093      	lsls	r3, r2
  405094:	432b      	orrs	r3, r5
  405096:	604b      	str	r3, [r1, #4]
  405098:	4603      	mov	r3, r0
  40509a:	e7b0      	b.n	404ffe <_free_r+0xbe>
  40509c:	f043 0201 	orr.w	r2, r3, #1
  4050a0:	614c      	str	r4, [r1, #20]
  4050a2:	610c      	str	r4, [r1, #16]
  4050a4:	60e5      	str	r5, [r4, #12]
  4050a6:	60a5      	str	r5, [r4, #8]
  4050a8:	6062      	str	r2, [r4, #4]
  4050aa:	50e3      	str	r3, [r4, r3]
  4050ac:	e78a      	b.n	404fc4 <_free_r+0x84>
  4050ae:	2a54      	cmp	r2, #84	; 0x54
  4050b0:	d806      	bhi.n	4050c0 <_free_r+0x180>
  4050b2:	0b1a      	lsrs	r2, r3, #12
  4050b4:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  4050b8:	00ff      	lsls	r7, r7, #3
  4050ba:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  4050be:	e790      	b.n	404fe2 <_free_r+0xa2>
  4050c0:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4050c4:	d806      	bhi.n	4050d4 <_free_r+0x194>
  4050c6:	0bda      	lsrs	r2, r3, #15
  4050c8:	f102 0778 	add.w	r7, r2, #120	; 0x78
  4050cc:	00ff      	lsls	r7, r7, #3
  4050ce:	f102 0577 	add.w	r5, r2, #119	; 0x77
  4050d2:	e786      	b.n	404fe2 <_free_r+0xa2>
  4050d4:	f240 5054 	movw	r0, #1364	; 0x554
  4050d8:	4282      	cmp	r2, r0
  4050da:	d806      	bhi.n	4050ea <_free_r+0x1aa>
  4050dc:	0c9a      	lsrs	r2, r3, #18
  4050de:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  4050e2:	00ff      	lsls	r7, r7, #3
  4050e4:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  4050e8:	e77b      	b.n	404fe2 <_free_r+0xa2>
  4050ea:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  4050ee:	257e      	movs	r5, #126	; 0x7e
  4050f0:	e777      	b.n	404fe2 <_free_r+0xa2>
  4050f2:	f043 0101 	orr.w	r1, r3, #1
  4050f6:	6061      	str	r1, [r4, #4]
  4050f8:	6013      	str	r3, [r2, #0]
  4050fa:	e763      	b.n	404fc4 <_free_r+0x84>
  4050fc:	20400468 	.word	0x20400468
  405100:	20400470 	.word	0x20400470
  405104:	20400874 	.word	0x20400874
  405108:	20409acc 	.word	0x20409acc

0040510c <__sfvwrite_r>:
  40510c:	6893      	ldr	r3, [r2, #8]
  40510e:	2b00      	cmp	r3, #0
  405110:	d073      	beq.n	4051fa <__sfvwrite_r+0xee>
  405112:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405116:	898b      	ldrh	r3, [r1, #12]
  405118:	b083      	sub	sp, #12
  40511a:	460c      	mov	r4, r1
  40511c:	0719      	lsls	r1, r3, #28
  40511e:	9000      	str	r0, [sp, #0]
  405120:	4616      	mov	r6, r2
  405122:	d526      	bpl.n	405172 <__sfvwrite_r+0x66>
  405124:	6922      	ldr	r2, [r4, #16]
  405126:	b322      	cbz	r2, 405172 <__sfvwrite_r+0x66>
  405128:	f013 0002 	ands.w	r0, r3, #2
  40512c:	6835      	ldr	r5, [r6, #0]
  40512e:	d02c      	beq.n	40518a <__sfvwrite_r+0x7e>
  405130:	f04f 0900 	mov.w	r9, #0
  405134:	4fb0      	ldr	r7, [pc, #704]	; (4053f8 <__sfvwrite_r+0x2ec>)
  405136:	46c8      	mov	r8, r9
  405138:	46b2      	mov	sl, r6
  40513a:	45b8      	cmp	r8, r7
  40513c:	4643      	mov	r3, r8
  40513e:	464a      	mov	r2, r9
  405140:	bf28      	it	cs
  405142:	463b      	movcs	r3, r7
  405144:	9800      	ldr	r0, [sp, #0]
  405146:	f1b8 0f00 	cmp.w	r8, #0
  40514a:	d050      	beq.n	4051ee <__sfvwrite_r+0xe2>
  40514c:	69e1      	ldr	r1, [r4, #28]
  40514e:	6a66      	ldr	r6, [r4, #36]	; 0x24
  405150:	47b0      	blx	r6
  405152:	2800      	cmp	r0, #0
  405154:	dd58      	ble.n	405208 <__sfvwrite_r+0xfc>
  405156:	f8da 3008 	ldr.w	r3, [sl, #8]
  40515a:	1a1b      	subs	r3, r3, r0
  40515c:	4481      	add	r9, r0
  40515e:	eba8 0800 	sub.w	r8, r8, r0
  405162:	f8ca 3008 	str.w	r3, [sl, #8]
  405166:	2b00      	cmp	r3, #0
  405168:	d1e7      	bne.n	40513a <__sfvwrite_r+0x2e>
  40516a:	2000      	movs	r0, #0
  40516c:	b003      	add	sp, #12
  40516e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405172:	4621      	mov	r1, r4
  405174:	9800      	ldr	r0, [sp, #0]
  405176:	f7ff fc51 	bl	404a1c <__swsetup_r>
  40517a:	2800      	cmp	r0, #0
  40517c:	f040 8133 	bne.w	4053e6 <__sfvwrite_r+0x2da>
  405180:	89a3      	ldrh	r3, [r4, #12]
  405182:	6835      	ldr	r5, [r6, #0]
  405184:	f013 0002 	ands.w	r0, r3, #2
  405188:	d1d2      	bne.n	405130 <__sfvwrite_r+0x24>
  40518a:	f013 0901 	ands.w	r9, r3, #1
  40518e:	d145      	bne.n	40521c <__sfvwrite_r+0x110>
  405190:	464f      	mov	r7, r9
  405192:	9601      	str	r6, [sp, #4]
  405194:	b337      	cbz	r7, 4051e4 <__sfvwrite_r+0xd8>
  405196:	059a      	lsls	r2, r3, #22
  405198:	f8d4 8008 	ldr.w	r8, [r4, #8]
  40519c:	f140 8083 	bpl.w	4052a6 <__sfvwrite_r+0x19a>
  4051a0:	4547      	cmp	r7, r8
  4051a2:	46c3      	mov	fp, r8
  4051a4:	f0c0 80ab 	bcc.w	4052fe <__sfvwrite_r+0x1f2>
  4051a8:	f413 6f90 	tst.w	r3, #1152	; 0x480
  4051ac:	f040 80ac 	bne.w	405308 <__sfvwrite_r+0x1fc>
  4051b0:	6820      	ldr	r0, [r4, #0]
  4051b2:	46ba      	mov	sl, r7
  4051b4:	465a      	mov	r2, fp
  4051b6:	4649      	mov	r1, r9
  4051b8:	f000 fadc 	bl	405774 <memmove>
  4051bc:	68a2      	ldr	r2, [r4, #8]
  4051be:	6823      	ldr	r3, [r4, #0]
  4051c0:	eba2 0208 	sub.w	r2, r2, r8
  4051c4:	445b      	add	r3, fp
  4051c6:	60a2      	str	r2, [r4, #8]
  4051c8:	6023      	str	r3, [r4, #0]
  4051ca:	9a01      	ldr	r2, [sp, #4]
  4051cc:	6893      	ldr	r3, [r2, #8]
  4051ce:	eba3 030a 	sub.w	r3, r3, sl
  4051d2:	44d1      	add	r9, sl
  4051d4:	eba7 070a 	sub.w	r7, r7, sl
  4051d8:	6093      	str	r3, [r2, #8]
  4051da:	2b00      	cmp	r3, #0
  4051dc:	d0c5      	beq.n	40516a <__sfvwrite_r+0x5e>
  4051de:	89a3      	ldrh	r3, [r4, #12]
  4051e0:	2f00      	cmp	r7, #0
  4051e2:	d1d8      	bne.n	405196 <__sfvwrite_r+0x8a>
  4051e4:	f8d5 9000 	ldr.w	r9, [r5]
  4051e8:	686f      	ldr	r7, [r5, #4]
  4051ea:	3508      	adds	r5, #8
  4051ec:	e7d2      	b.n	405194 <__sfvwrite_r+0x88>
  4051ee:	f8d5 9000 	ldr.w	r9, [r5]
  4051f2:	f8d5 8004 	ldr.w	r8, [r5, #4]
  4051f6:	3508      	adds	r5, #8
  4051f8:	e79f      	b.n	40513a <__sfvwrite_r+0x2e>
  4051fa:	2000      	movs	r0, #0
  4051fc:	4770      	bx	lr
  4051fe:	4621      	mov	r1, r4
  405200:	9800      	ldr	r0, [sp, #0]
  405202:	f7ff fd1f 	bl	404c44 <_fflush_r>
  405206:	b370      	cbz	r0, 405266 <__sfvwrite_r+0x15a>
  405208:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40520c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  405210:	f04f 30ff 	mov.w	r0, #4294967295
  405214:	81a3      	strh	r3, [r4, #12]
  405216:	b003      	add	sp, #12
  405218:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40521c:	4681      	mov	r9, r0
  40521e:	4633      	mov	r3, r6
  405220:	464e      	mov	r6, r9
  405222:	46a8      	mov	r8, r5
  405224:	469a      	mov	sl, r3
  405226:	464d      	mov	r5, r9
  405228:	b34e      	cbz	r6, 40527e <__sfvwrite_r+0x172>
  40522a:	b380      	cbz	r0, 40528e <__sfvwrite_r+0x182>
  40522c:	6820      	ldr	r0, [r4, #0]
  40522e:	6923      	ldr	r3, [r4, #16]
  405230:	6962      	ldr	r2, [r4, #20]
  405232:	45b1      	cmp	r9, r6
  405234:	46cb      	mov	fp, r9
  405236:	bf28      	it	cs
  405238:	46b3      	movcs	fp, r6
  40523a:	4298      	cmp	r0, r3
  40523c:	465f      	mov	r7, fp
  40523e:	d904      	bls.n	40524a <__sfvwrite_r+0x13e>
  405240:	68a3      	ldr	r3, [r4, #8]
  405242:	4413      	add	r3, r2
  405244:	459b      	cmp	fp, r3
  405246:	f300 80a6 	bgt.w	405396 <__sfvwrite_r+0x28a>
  40524a:	4593      	cmp	fp, r2
  40524c:	db4b      	blt.n	4052e6 <__sfvwrite_r+0x1da>
  40524e:	4613      	mov	r3, r2
  405250:	6a67      	ldr	r7, [r4, #36]	; 0x24
  405252:	69e1      	ldr	r1, [r4, #28]
  405254:	9800      	ldr	r0, [sp, #0]
  405256:	462a      	mov	r2, r5
  405258:	47b8      	blx	r7
  40525a:	1e07      	subs	r7, r0, #0
  40525c:	ddd4      	ble.n	405208 <__sfvwrite_r+0xfc>
  40525e:	ebb9 0907 	subs.w	r9, r9, r7
  405262:	d0cc      	beq.n	4051fe <__sfvwrite_r+0xf2>
  405264:	2001      	movs	r0, #1
  405266:	f8da 3008 	ldr.w	r3, [sl, #8]
  40526a:	1bdb      	subs	r3, r3, r7
  40526c:	443d      	add	r5, r7
  40526e:	1bf6      	subs	r6, r6, r7
  405270:	f8ca 3008 	str.w	r3, [sl, #8]
  405274:	2b00      	cmp	r3, #0
  405276:	f43f af78 	beq.w	40516a <__sfvwrite_r+0x5e>
  40527a:	2e00      	cmp	r6, #0
  40527c:	d1d5      	bne.n	40522a <__sfvwrite_r+0x11e>
  40527e:	f108 0308 	add.w	r3, r8, #8
  405282:	e913 0060 	ldmdb	r3, {r5, r6}
  405286:	4698      	mov	r8, r3
  405288:	3308      	adds	r3, #8
  40528a:	2e00      	cmp	r6, #0
  40528c:	d0f9      	beq.n	405282 <__sfvwrite_r+0x176>
  40528e:	4632      	mov	r2, r6
  405290:	210a      	movs	r1, #10
  405292:	4628      	mov	r0, r5
  405294:	f000 f984 	bl	4055a0 <memchr>
  405298:	2800      	cmp	r0, #0
  40529a:	f000 80a1 	beq.w	4053e0 <__sfvwrite_r+0x2d4>
  40529e:	3001      	adds	r0, #1
  4052a0:	eba0 0905 	sub.w	r9, r0, r5
  4052a4:	e7c2      	b.n	40522c <__sfvwrite_r+0x120>
  4052a6:	6820      	ldr	r0, [r4, #0]
  4052a8:	6923      	ldr	r3, [r4, #16]
  4052aa:	4298      	cmp	r0, r3
  4052ac:	d802      	bhi.n	4052b4 <__sfvwrite_r+0x1a8>
  4052ae:	6963      	ldr	r3, [r4, #20]
  4052b0:	429f      	cmp	r7, r3
  4052b2:	d25d      	bcs.n	405370 <__sfvwrite_r+0x264>
  4052b4:	45b8      	cmp	r8, r7
  4052b6:	bf28      	it	cs
  4052b8:	46b8      	movcs	r8, r7
  4052ba:	4642      	mov	r2, r8
  4052bc:	4649      	mov	r1, r9
  4052be:	f000 fa59 	bl	405774 <memmove>
  4052c2:	68a3      	ldr	r3, [r4, #8]
  4052c4:	6822      	ldr	r2, [r4, #0]
  4052c6:	eba3 0308 	sub.w	r3, r3, r8
  4052ca:	4442      	add	r2, r8
  4052cc:	60a3      	str	r3, [r4, #8]
  4052ce:	6022      	str	r2, [r4, #0]
  4052d0:	b10b      	cbz	r3, 4052d6 <__sfvwrite_r+0x1ca>
  4052d2:	46c2      	mov	sl, r8
  4052d4:	e779      	b.n	4051ca <__sfvwrite_r+0xbe>
  4052d6:	4621      	mov	r1, r4
  4052d8:	9800      	ldr	r0, [sp, #0]
  4052da:	f7ff fcb3 	bl	404c44 <_fflush_r>
  4052de:	2800      	cmp	r0, #0
  4052e0:	d192      	bne.n	405208 <__sfvwrite_r+0xfc>
  4052e2:	46c2      	mov	sl, r8
  4052e4:	e771      	b.n	4051ca <__sfvwrite_r+0xbe>
  4052e6:	465a      	mov	r2, fp
  4052e8:	4629      	mov	r1, r5
  4052ea:	f000 fa43 	bl	405774 <memmove>
  4052ee:	68a2      	ldr	r2, [r4, #8]
  4052f0:	6823      	ldr	r3, [r4, #0]
  4052f2:	eba2 020b 	sub.w	r2, r2, fp
  4052f6:	445b      	add	r3, fp
  4052f8:	60a2      	str	r2, [r4, #8]
  4052fa:	6023      	str	r3, [r4, #0]
  4052fc:	e7af      	b.n	40525e <__sfvwrite_r+0x152>
  4052fe:	6820      	ldr	r0, [r4, #0]
  405300:	46b8      	mov	r8, r7
  405302:	46ba      	mov	sl, r7
  405304:	46bb      	mov	fp, r7
  405306:	e755      	b.n	4051b4 <__sfvwrite_r+0xa8>
  405308:	6962      	ldr	r2, [r4, #20]
  40530a:	6820      	ldr	r0, [r4, #0]
  40530c:	6921      	ldr	r1, [r4, #16]
  40530e:	eb02 0842 	add.w	r8, r2, r2, lsl #1
  405312:	eba0 0a01 	sub.w	sl, r0, r1
  405316:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
  40531a:	f10a 0001 	add.w	r0, sl, #1
  40531e:	ea4f 0868 	mov.w	r8, r8, asr #1
  405322:	4438      	add	r0, r7
  405324:	4540      	cmp	r0, r8
  405326:	4642      	mov	r2, r8
  405328:	bf84      	itt	hi
  40532a:	4680      	movhi	r8, r0
  40532c:	4642      	movhi	r2, r8
  40532e:	055b      	lsls	r3, r3, #21
  405330:	d544      	bpl.n	4053bc <__sfvwrite_r+0x2b0>
  405332:	4611      	mov	r1, r2
  405334:	9800      	ldr	r0, [sp, #0]
  405336:	f7fe f8bb 	bl	4034b0 <_malloc_r>
  40533a:	4683      	mov	fp, r0
  40533c:	2800      	cmp	r0, #0
  40533e:	d055      	beq.n	4053ec <__sfvwrite_r+0x2e0>
  405340:	4652      	mov	r2, sl
  405342:	6921      	ldr	r1, [r4, #16]
  405344:	f000 f97c 	bl	405640 <memcpy>
  405348:	89a3      	ldrh	r3, [r4, #12]
  40534a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
  40534e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  405352:	81a3      	strh	r3, [r4, #12]
  405354:	eb0b 000a 	add.w	r0, fp, sl
  405358:	eba8 030a 	sub.w	r3, r8, sl
  40535c:	f8c4 b010 	str.w	fp, [r4, #16]
  405360:	f8c4 8014 	str.w	r8, [r4, #20]
  405364:	6020      	str	r0, [r4, #0]
  405366:	60a3      	str	r3, [r4, #8]
  405368:	46b8      	mov	r8, r7
  40536a:	46ba      	mov	sl, r7
  40536c:	46bb      	mov	fp, r7
  40536e:	e721      	b.n	4051b4 <__sfvwrite_r+0xa8>
  405370:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
  405374:	42b9      	cmp	r1, r7
  405376:	bf28      	it	cs
  405378:	4639      	movcs	r1, r7
  40537a:	464a      	mov	r2, r9
  40537c:	fb91 f1f3 	sdiv	r1, r1, r3
  405380:	9800      	ldr	r0, [sp, #0]
  405382:	6a66      	ldr	r6, [r4, #36]	; 0x24
  405384:	fb03 f301 	mul.w	r3, r3, r1
  405388:	69e1      	ldr	r1, [r4, #28]
  40538a:	47b0      	blx	r6
  40538c:	f1b0 0a00 	subs.w	sl, r0, #0
  405390:	f73f af1b 	bgt.w	4051ca <__sfvwrite_r+0xbe>
  405394:	e738      	b.n	405208 <__sfvwrite_r+0xfc>
  405396:	461a      	mov	r2, r3
  405398:	4629      	mov	r1, r5
  40539a:	9301      	str	r3, [sp, #4]
  40539c:	f000 f9ea 	bl	405774 <memmove>
  4053a0:	6822      	ldr	r2, [r4, #0]
  4053a2:	9b01      	ldr	r3, [sp, #4]
  4053a4:	9800      	ldr	r0, [sp, #0]
  4053a6:	441a      	add	r2, r3
  4053a8:	6022      	str	r2, [r4, #0]
  4053aa:	4621      	mov	r1, r4
  4053ac:	f7ff fc4a 	bl	404c44 <_fflush_r>
  4053b0:	9b01      	ldr	r3, [sp, #4]
  4053b2:	2800      	cmp	r0, #0
  4053b4:	f47f af28 	bne.w	405208 <__sfvwrite_r+0xfc>
  4053b8:	461f      	mov	r7, r3
  4053ba:	e750      	b.n	40525e <__sfvwrite_r+0x152>
  4053bc:	9800      	ldr	r0, [sp, #0]
  4053be:	f000 fa3d 	bl	40583c <_realloc_r>
  4053c2:	4683      	mov	fp, r0
  4053c4:	2800      	cmp	r0, #0
  4053c6:	d1c5      	bne.n	405354 <__sfvwrite_r+0x248>
  4053c8:	9d00      	ldr	r5, [sp, #0]
  4053ca:	6921      	ldr	r1, [r4, #16]
  4053cc:	4628      	mov	r0, r5
  4053ce:	f7ff fdb7 	bl	404f40 <_free_r>
  4053d2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4053d6:	220c      	movs	r2, #12
  4053d8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  4053dc:	602a      	str	r2, [r5, #0]
  4053de:	e715      	b.n	40520c <__sfvwrite_r+0x100>
  4053e0:	f106 0901 	add.w	r9, r6, #1
  4053e4:	e722      	b.n	40522c <__sfvwrite_r+0x120>
  4053e6:	f04f 30ff 	mov.w	r0, #4294967295
  4053ea:	e6bf      	b.n	40516c <__sfvwrite_r+0x60>
  4053ec:	9a00      	ldr	r2, [sp, #0]
  4053ee:	230c      	movs	r3, #12
  4053f0:	6013      	str	r3, [r2, #0]
  4053f2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4053f6:	e709      	b.n	40520c <__sfvwrite_r+0x100>
  4053f8:	7ffffc00 	.word	0x7ffffc00

004053fc <_fwalk_reent>:
  4053fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  405400:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  405404:	d01f      	beq.n	405446 <_fwalk_reent+0x4a>
  405406:	4688      	mov	r8, r1
  405408:	4606      	mov	r6, r0
  40540a:	f04f 0900 	mov.w	r9, #0
  40540e:	687d      	ldr	r5, [r7, #4]
  405410:	68bc      	ldr	r4, [r7, #8]
  405412:	3d01      	subs	r5, #1
  405414:	d411      	bmi.n	40543a <_fwalk_reent+0x3e>
  405416:	89a3      	ldrh	r3, [r4, #12]
  405418:	2b01      	cmp	r3, #1
  40541a:	f105 35ff 	add.w	r5, r5, #4294967295
  40541e:	d908      	bls.n	405432 <_fwalk_reent+0x36>
  405420:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  405424:	3301      	adds	r3, #1
  405426:	4621      	mov	r1, r4
  405428:	4630      	mov	r0, r6
  40542a:	d002      	beq.n	405432 <_fwalk_reent+0x36>
  40542c:	47c0      	blx	r8
  40542e:	ea49 0900 	orr.w	r9, r9, r0
  405432:	1c6b      	adds	r3, r5, #1
  405434:	f104 0468 	add.w	r4, r4, #104	; 0x68
  405438:	d1ed      	bne.n	405416 <_fwalk_reent+0x1a>
  40543a:	683f      	ldr	r7, [r7, #0]
  40543c:	2f00      	cmp	r7, #0
  40543e:	d1e6      	bne.n	40540e <_fwalk_reent+0x12>
  405440:	4648      	mov	r0, r9
  405442:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405446:	46b9      	mov	r9, r7
  405448:	4648      	mov	r0, r9
  40544a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40544e:	bf00      	nop

00405450 <__locale_mb_cur_max>:
  405450:	4b04      	ldr	r3, [pc, #16]	; (405464 <__locale_mb_cur_max+0x14>)
  405452:	4a05      	ldr	r2, [pc, #20]	; (405468 <__locale_mb_cur_max+0x18>)
  405454:	681b      	ldr	r3, [r3, #0]
  405456:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  405458:	2b00      	cmp	r3, #0
  40545a:	bf08      	it	eq
  40545c:	4613      	moveq	r3, r2
  40545e:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
  405462:	4770      	bx	lr
  405464:	20400038 	.word	0x20400038
  405468:	2040087c 	.word	0x2040087c

0040546c <__retarget_lock_init_recursive>:
  40546c:	4770      	bx	lr
  40546e:	bf00      	nop

00405470 <__retarget_lock_close_recursive>:
  405470:	4770      	bx	lr
  405472:	bf00      	nop

00405474 <__retarget_lock_acquire_recursive>:
  405474:	4770      	bx	lr
  405476:	bf00      	nop

00405478 <__retarget_lock_release_recursive>:
  405478:	4770      	bx	lr
  40547a:	bf00      	nop

0040547c <__swhatbuf_r>:
  40547c:	b570      	push	{r4, r5, r6, lr}
  40547e:	460c      	mov	r4, r1
  405480:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  405484:	2900      	cmp	r1, #0
  405486:	b090      	sub	sp, #64	; 0x40
  405488:	4615      	mov	r5, r2
  40548a:	461e      	mov	r6, r3
  40548c:	db14      	blt.n	4054b8 <__swhatbuf_r+0x3c>
  40548e:	aa01      	add	r2, sp, #4
  405490:	f000 fdc0 	bl	406014 <_fstat_r>
  405494:	2800      	cmp	r0, #0
  405496:	db0f      	blt.n	4054b8 <__swhatbuf_r+0x3c>
  405498:	9a02      	ldr	r2, [sp, #8]
  40549a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  40549e:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  4054a2:	fab2 f282 	clz	r2, r2
  4054a6:	0952      	lsrs	r2, r2, #5
  4054a8:	f44f 6380 	mov.w	r3, #1024	; 0x400
  4054ac:	f44f 6000 	mov.w	r0, #2048	; 0x800
  4054b0:	6032      	str	r2, [r6, #0]
  4054b2:	602b      	str	r3, [r5, #0]
  4054b4:	b010      	add	sp, #64	; 0x40
  4054b6:	bd70      	pop	{r4, r5, r6, pc}
  4054b8:	89a2      	ldrh	r2, [r4, #12]
  4054ba:	2300      	movs	r3, #0
  4054bc:	f012 0080 	ands.w	r0, r2, #128	; 0x80
  4054c0:	6033      	str	r3, [r6, #0]
  4054c2:	d004      	beq.n	4054ce <__swhatbuf_r+0x52>
  4054c4:	2240      	movs	r2, #64	; 0x40
  4054c6:	4618      	mov	r0, r3
  4054c8:	602a      	str	r2, [r5, #0]
  4054ca:	b010      	add	sp, #64	; 0x40
  4054cc:	bd70      	pop	{r4, r5, r6, pc}
  4054ce:	f44f 6380 	mov.w	r3, #1024	; 0x400
  4054d2:	602b      	str	r3, [r5, #0]
  4054d4:	b010      	add	sp, #64	; 0x40
  4054d6:	bd70      	pop	{r4, r5, r6, pc}

004054d8 <__smakebuf_r>:
  4054d8:	898a      	ldrh	r2, [r1, #12]
  4054da:	0792      	lsls	r2, r2, #30
  4054dc:	460b      	mov	r3, r1
  4054de:	d506      	bpl.n	4054ee <__smakebuf_r+0x16>
  4054e0:	f101 0243 	add.w	r2, r1, #67	; 0x43
  4054e4:	2101      	movs	r1, #1
  4054e6:	601a      	str	r2, [r3, #0]
  4054e8:	611a      	str	r2, [r3, #16]
  4054ea:	6159      	str	r1, [r3, #20]
  4054ec:	4770      	bx	lr
  4054ee:	b5f0      	push	{r4, r5, r6, r7, lr}
  4054f0:	b083      	sub	sp, #12
  4054f2:	ab01      	add	r3, sp, #4
  4054f4:	466a      	mov	r2, sp
  4054f6:	460c      	mov	r4, r1
  4054f8:	4606      	mov	r6, r0
  4054fa:	f7ff ffbf 	bl	40547c <__swhatbuf_r>
  4054fe:	9900      	ldr	r1, [sp, #0]
  405500:	4605      	mov	r5, r0
  405502:	4630      	mov	r0, r6
  405504:	f7fd ffd4 	bl	4034b0 <_malloc_r>
  405508:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40550c:	b1d8      	cbz	r0, 405546 <__smakebuf_r+0x6e>
  40550e:	9a01      	ldr	r2, [sp, #4]
  405510:	4f15      	ldr	r7, [pc, #84]	; (405568 <__smakebuf_r+0x90>)
  405512:	9900      	ldr	r1, [sp, #0]
  405514:	63f7      	str	r7, [r6, #60]	; 0x3c
  405516:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40551a:	81a3      	strh	r3, [r4, #12]
  40551c:	6020      	str	r0, [r4, #0]
  40551e:	6120      	str	r0, [r4, #16]
  405520:	6161      	str	r1, [r4, #20]
  405522:	b91a      	cbnz	r2, 40552c <__smakebuf_r+0x54>
  405524:	432b      	orrs	r3, r5
  405526:	81a3      	strh	r3, [r4, #12]
  405528:	b003      	add	sp, #12
  40552a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40552c:	4630      	mov	r0, r6
  40552e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  405532:	f000 fd83 	bl	40603c <_isatty_r>
  405536:	b1a0      	cbz	r0, 405562 <__smakebuf_r+0x8a>
  405538:	89a3      	ldrh	r3, [r4, #12]
  40553a:	f023 0303 	bic.w	r3, r3, #3
  40553e:	f043 0301 	orr.w	r3, r3, #1
  405542:	b21b      	sxth	r3, r3
  405544:	e7ee      	b.n	405524 <__smakebuf_r+0x4c>
  405546:	059a      	lsls	r2, r3, #22
  405548:	d4ee      	bmi.n	405528 <__smakebuf_r+0x50>
  40554a:	f023 0303 	bic.w	r3, r3, #3
  40554e:	f104 0243 	add.w	r2, r4, #67	; 0x43
  405552:	f043 0302 	orr.w	r3, r3, #2
  405556:	2101      	movs	r1, #1
  405558:	81a3      	strh	r3, [r4, #12]
  40555a:	6022      	str	r2, [r4, #0]
  40555c:	6122      	str	r2, [r4, #16]
  40555e:	6161      	str	r1, [r4, #20]
  405560:	e7e2      	b.n	405528 <__smakebuf_r+0x50>
  405562:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  405566:	e7dd      	b.n	405524 <__smakebuf_r+0x4c>
  405568:	00404c99 	.word	0x00404c99

0040556c <__ascii_mbtowc>:
  40556c:	b082      	sub	sp, #8
  40556e:	b149      	cbz	r1, 405584 <__ascii_mbtowc+0x18>
  405570:	b15a      	cbz	r2, 40558a <__ascii_mbtowc+0x1e>
  405572:	b16b      	cbz	r3, 405590 <__ascii_mbtowc+0x24>
  405574:	7813      	ldrb	r3, [r2, #0]
  405576:	600b      	str	r3, [r1, #0]
  405578:	7812      	ldrb	r2, [r2, #0]
  40557a:	1c10      	adds	r0, r2, #0
  40557c:	bf18      	it	ne
  40557e:	2001      	movne	r0, #1
  405580:	b002      	add	sp, #8
  405582:	4770      	bx	lr
  405584:	a901      	add	r1, sp, #4
  405586:	2a00      	cmp	r2, #0
  405588:	d1f3      	bne.n	405572 <__ascii_mbtowc+0x6>
  40558a:	4610      	mov	r0, r2
  40558c:	b002      	add	sp, #8
  40558e:	4770      	bx	lr
  405590:	f06f 0001 	mvn.w	r0, #1
  405594:	e7f4      	b.n	405580 <__ascii_mbtowc+0x14>
  405596:	bf00      	nop
	...

004055a0 <memchr>:
  4055a0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4055a4:	2a10      	cmp	r2, #16
  4055a6:	db2b      	blt.n	405600 <memchr+0x60>
  4055a8:	f010 0f07 	tst.w	r0, #7
  4055ac:	d008      	beq.n	4055c0 <memchr+0x20>
  4055ae:	f810 3b01 	ldrb.w	r3, [r0], #1
  4055b2:	3a01      	subs	r2, #1
  4055b4:	428b      	cmp	r3, r1
  4055b6:	d02d      	beq.n	405614 <memchr+0x74>
  4055b8:	f010 0f07 	tst.w	r0, #7
  4055bc:	b342      	cbz	r2, 405610 <memchr+0x70>
  4055be:	d1f6      	bne.n	4055ae <memchr+0xe>
  4055c0:	b4f0      	push	{r4, r5, r6, r7}
  4055c2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  4055c6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  4055ca:	f022 0407 	bic.w	r4, r2, #7
  4055ce:	f07f 0700 	mvns.w	r7, #0
  4055d2:	2300      	movs	r3, #0
  4055d4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  4055d8:	3c08      	subs	r4, #8
  4055da:	ea85 0501 	eor.w	r5, r5, r1
  4055de:	ea86 0601 	eor.w	r6, r6, r1
  4055e2:	fa85 f547 	uadd8	r5, r5, r7
  4055e6:	faa3 f587 	sel	r5, r3, r7
  4055ea:	fa86 f647 	uadd8	r6, r6, r7
  4055ee:	faa5 f687 	sel	r6, r5, r7
  4055f2:	b98e      	cbnz	r6, 405618 <memchr+0x78>
  4055f4:	d1ee      	bne.n	4055d4 <memchr+0x34>
  4055f6:	bcf0      	pop	{r4, r5, r6, r7}
  4055f8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4055fc:	f002 0207 	and.w	r2, r2, #7
  405600:	b132      	cbz	r2, 405610 <memchr+0x70>
  405602:	f810 3b01 	ldrb.w	r3, [r0], #1
  405606:	3a01      	subs	r2, #1
  405608:	ea83 0301 	eor.w	r3, r3, r1
  40560c:	b113      	cbz	r3, 405614 <memchr+0x74>
  40560e:	d1f8      	bne.n	405602 <memchr+0x62>
  405610:	2000      	movs	r0, #0
  405612:	4770      	bx	lr
  405614:	3801      	subs	r0, #1
  405616:	4770      	bx	lr
  405618:	2d00      	cmp	r5, #0
  40561a:	bf06      	itte	eq
  40561c:	4635      	moveq	r5, r6
  40561e:	3803      	subeq	r0, #3
  405620:	3807      	subne	r0, #7
  405622:	f015 0f01 	tst.w	r5, #1
  405626:	d107      	bne.n	405638 <memchr+0x98>
  405628:	3001      	adds	r0, #1
  40562a:	f415 7f80 	tst.w	r5, #256	; 0x100
  40562e:	bf02      	ittt	eq
  405630:	3001      	addeq	r0, #1
  405632:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  405636:	3001      	addeq	r0, #1
  405638:	bcf0      	pop	{r4, r5, r6, r7}
  40563a:	3801      	subs	r0, #1
  40563c:	4770      	bx	lr
  40563e:	bf00      	nop

00405640 <memcpy>:
  405640:	4684      	mov	ip, r0
  405642:	ea41 0300 	orr.w	r3, r1, r0
  405646:	f013 0303 	ands.w	r3, r3, #3
  40564a:	d16d      	bne.n	405728 <memcpy+0xe8>
  40564c:	3a40      	subs	r2, #64	; 0x40
  40564e:	d341      	bcc.n	4056d4 <memcpy+0x94>
  405650:	f851 3b04 	ldr.w	r3, [r1], #4
  405654:	f840 3b04 	str.w	r3, [r0], #4
  405658:	f851 3b04 	ldr.w	r3, [r1], #4
  40565c:	f840 3b04 	str.w	r3, [r0], #4
  405660:	f851 3b04 	ldr.w	r3, [r1], #4
  405664:	f840 3b04 	str.w	r3, [r0], #4
  405668:	f851 3b04 	ldr.w	r3, [r1], #4
  40566c:	f840 3b04 	str.w	r3, [r0], #4
  405670:	f851 3b04 	ldr.w	r3, [r1], #4
  405674:	f840 3b04 	str.w	r3, [r0], #4
  405678:	f851 3b04 	ldr.w	r3, [r1], #4
  40567c:	f840 3b04 	str.w	r3, [r0], #4
  405680:	f851 3b04 	ldr.w	r3, [r1], #4
  405684:	f840 3b04 	str.w	r3, [r0], #4
  405688:	f851 3b04 	ldr.w	r3, [r1], #4
  40568c:	f840 3b04 	str.w	r3, [r0], #4
  405690:	f851 3b04 	ldr.w	r3, [r1], #4
  405694:	f840 3b04 	str.w	r3, [r0], #4
  405698:	f851 3b04 	ldr.w	r3, [r1], #4
  40569c:	f840 3b04 	str.w	r3, [r0], #4
  4056a0:	f851 3b04 	ldr.w	r3, [r1], #4
  4056a4:	f840 3b04 	str.w	r3, [r0], #4
  4056a8:	f851 3b04 	ldr.w	r3, [r1], #4
  4056ac:	f840 3b04 	str.w	r3, [r0], #4
  4056b0:	f851 3b04 	ldr.w	r3, [r1], #4
  4056b4:	f840 3b04 	str.w	r3, [r0], #4
  4056b8:	f851 3b04 	ldr.w	r3, [r1], #4
  4056bc:	f840 3b04 	str.w	r3, [r0], #4
  4056c0:	f851 3b04 	ldr.w	r3, [r1], #4
  4056c4:	f840 3b04 	str.w	r3, [r0], #4
  4056c8:	f851 3b04 	ldr.w	r3, [r1], #4
  4056cc:	f840 3b04 	str.w	r3, [r0], #4
  4056d0:	3a40      	subs	r2, #64	; 0x40
  4056d2:	d2bd      	bcs.n	405650 <memcpy+0x10>
  4056d4:	3230      	adds	r2, #48	; 0x30
  4056d6:	d311      	bcc.n	4056fc <memcpy+0xbc>
  4056d8:	f851 3b04 	ldr.w	r3, [r1], #4
  4056dc:	f840 3b04 	str.w	r3, [r0], #4
  4056e0:	f851 3b04 	ldr.w	r3, [r1], #4
  4056e4:	f840 3b04 	str.w	r3, [r0], #4
  4056e8:	f851 3b04 	ldr.w	r3, [r1], #4
  4056ec:	f840 3b04 	str.w	r3, [r0], #4
  4056f0:	f851 3b04 	ldr.w	r3, [r1], #4
  4056f4:	f840 3b04 	str.w	r3, [r0], #4
  4056f8:	3a10      	subs	r2, #16
  4056fa:	d2ed      	bcs.n	4056d8 <memcpy+0x98>
  4056fc:	320c      	adds	r2, #12
  4056fe:	d305      	bcc.n	40570c <memcpy+0xcc>
  405700:	f851 3b04 	ldr.w	r3, [r1], #4
  405704:	f840 3b04 	str.w	r3, [r0], #4
  405708:	3a04      	subs	r2, #4
  40570a:	d2f9      	bcs.n	405700 <memcpy+0xc0>
  40570c:	3204      	adds	r2, #4
  40570e:	d008      	beq.n	405722 <memcpy+0xe2>
  405710:	07d2      	lsls	r2, r2, #31
  405712:	bf1c      	itt	ne
  405714:	f811 3b01 	ldrbne.w	r3, [r1], #1
  405718:	f800 3b01 	strbne.w	r3, [r0], #1
  40571c:	d301      	bcc.n	405722 <memcpy+0xe2>
  40571e:	880b      	ldrh	r3, [r1, #0]
  405720:	8003      	strh	r3, [r0, #0]
  405722:	4660      	mov	r0, ip
  405724:	4770      	bx	lr
  405726:	bf00      	nop
  405728:	2a08      	cmp	r2, #8
  40572a:	d313      	bcc.n	405754 <memcpy+0x114>
  40572c:	078b      	lsls	r3, r1, #30
  40572e:	d08d      	beq.n	40564c <memcpy+0xc>
  405730:	f010 0303 	ands.w	r3, r0, #3
  405734:	d08a      	beq.n	40564c <memcpy+0xc>
  405736:	f1c3 0304 	rsb	r3, r3, #4
  40573a:	1ad2      	subs	r2, r2, r3
  40573c:	07db      	lsls	r3, r3, #31
  40573e:	bf1c      	itt	ne
  405740:	f811 3b01 	ldrbne.w	r3, [r1], #1
  405744:	f800 3b01 	strbne.w	r3, [r0], #1
  405748:	d380      	bcc.n	40564c <memcpy+0xc>
  40574a:	f831 3b02 	ldrh.w	r3, [r1], #2
  40574e:	f820 3b02 	strh.w	r3, [r0], #2
  405752:	e77b      	b.n	40564c <memcpy+0xc>
  405754:	3a04      	subs	r2, #4
  405756:	d3d9      	bcc.n	40570c <memcpy+0xcc>
  405758:	3a01      	subs	r2, #1
  40575a:	f811 3b01 	ldrb.w	r3, [r1], #1
  40575e:	f800 3b01 	strb.w	r3, [r0], #1
  405762:	d2f9      	bcs.n	405758 <memcpy+0x118>
  405764:	780b      	ldrb	r3, [r1, #0]
  405766:	7003      	strb	r3, [r0, #0]
  405768:	784b      	ldrb	r3, [r1, #1]
  40576a:	7043      	strb	r3, [r0, #1]
  40576c:	788b      	ldrb	r3, [r1, #2]
  40576e:	7083      	strb	r3, [r0, #2]
  405770:	4660      	mov	r0, ip
  405772:	4770      	bx	lr

00405774 <memmove>:
  405774:	4288      	cmp	r0, r1
  405776:	b5f0      	push	{r4, r5, r6, r7, lr}
  405778:	d90d      	bls.n	405796 <memmove+0x22>
  40577a:	188b      	adds	r3, r1, r2
  40577c:	4298      	cmp	r0, r3
  40577e:	d20a      	bcs.n	405796 <memmove+0x22>
  405780:	1884      	adds	r4, r0, r2
  405782:	2a00      	cmp	r2, #0
  405784:	d051      	beq.n	40582a <memmove+0xb6>
  405786:	4622      	mov	r2, r4
  405788:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  40578c:	f802 4d01 	strb.w	r4, [r2, #-1]!
  405790:	4299      	cmp	r1, r3
  405792:	d1f9      	bne.n	405788 <memmove+0x14>
  405794:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405796:	2a0f      	cmp	r2, #15
  405798:	d948      	bls.n	40582c <memmove+0xb8>
  40579a:	ea41 0300 	orr.w	r3, r1, r0
  40579e:	079b      	lsls	r3, r3, #30
  4057a0:	d146      	bne.n	405830 <memmove+0xbc>
  4057a2:	f100 0410 	add.w	r4, r0, #16
  4057a6:	f101 0310 	add.w	r3, r1, #16
  4057aa:	4615      	mov	r5, r2
  4057ac:	f853 6c10 	ldr.w	r6, [r3, #-16]
  4057b0:	f844 6c10 	str.w	r6, [r4, #-16]
  4057b4:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  4057b8:	f844 6c0c 	str.w	r6, [r4, #-12]
  4057bc:	f853 6c08 	ldr.w	r6, [r3, #-8]
  4057c0:	f844 6c08 	str.w	r6, [r4, #-8]
  4057c4:	3d10      	subs	r5, #16
  4057c6:	f853 6c04 	ldr.w	r6, [r3, #-4]
  4057ca:	f844 6c04 	str.w	r6, [r4, #-4]
  4057ce:	2d0f      	cmp	r5, #15
  4057d0:	f103 0310 	add.w	r3, r3, #16
  4057d4:	f104 0410 	add.w	r4, r4, #16
  4057d8:	d8e8      	bhi.n	4057ac <memmove+0x38>
  4057da:	f1a2 0310 	sub.w	r3, r2, #16
  4057de:	f023 030f 	bic.w	r3, r3, #15
  4057e2:	f002 0e0f 	and.w	lr, r2, #15
  4057e6:	3310      	adds	r3, #16
  4057e8:	f1be 0f03 	cmp.w	lr, #3
  4057ec:	4419      	add	r1, r3
  4057ee:	4403      	add	r3, r0
  4057f0:	d921      	bls.n	405836 <memmove+0xc2>
  4057f2:	1f1e      	subs	r6, r3, #4
  4057f4:	460d      	mov	r5, r1
  4057f6:	4674      	mov	r4, lr
  4057f8:	3c04      	subs	r4, #4
  4057fa:	f855 7b04 	ldr.w	r7, [r5], #4
  4057fe:	f846 7f04 	str.w	r7, [r6, #4]!
  405802:	2c03      	cmp	r4, #3
  405804:	d8f8      	bhi.n	4057f8 <memmove+0x84>
  405806:	f1ae 0404 	sub.w	r4, lr, #4
  40580a:	f024 0403 	bic.w	r4, r4, #3
  40580e:	3404      	adds	r4, #4
  405810:	4421      	add	r1, r4
  405812:	4423      	add	r3, r4
  405814:	f002 0203 	and.w	r2, r2, #3
  405818:	b162      	cbz	r2, 405834 <memmove+0xc0>
  40581a:	3b01      	subs	r3, #1
  40581c:	440a      	add	r2, r1
  40581e:	f811 4b01 	ldrb.w	r4, [r1], #1
  405822:	f803 4f01 	strb.w	r4, [r3, #1]!
  405826:	428a      	cmp	r2, r1
  405828:	d1f9      	bne.n	40581e <memmove+0xaa>
  40582a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40582c:	4603      	mov	r3, r0
  40582e:	e7f3      	b.n	405818 <memmove+0xa4>
  405830:	4603      	mov	r3, r0
  405832:	e7f2      	b.n	40581a <memmove+0xa6>
  405834:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405836:	4672      	mov	r2, lr
  405838:	e7ee      	b.n	405818 <memmove+0xa4>
  40583a:	bf00      	nop

0040583c <_realloc_r>:
  40583c:	2900      	cmp	r1, #0
  40583e:	f000 8095 	beq.w	40596c <_realloc_r+0x130>
  405842:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405846:	460d      	mov	r5, r1
  405848:	4616      	mov	r6, r2
  40584a:	b083      	sub	sp, #12
  40584c:	4680      	mov	r8, r0
  40584e:	f106 070b 	add.w	r7, r6, #11
  405852:	f7fe f92b 	bl	403aac <__malloc_lock>
  405856:	f855 ec04 	ldr.w	lr, [r5, #-4]
  40585a:	2f16      	cmp	r7, #22
  40585c:	f02e 0403 	bic.w	r4, lr, #3
  405860:	f1a5 0908 	sub.w	r9, r5, #8
  405864:	d83c      	bhi.n	4058e0 <_realloc_r+0xa4>
  405866:	2210      	movs	r2, #16
  405868:	4617      	mov	r7, r2
  40586a:	42be      	cmp	r6, r7
  40586c:	d83d      	bhi.n	4058ea <_realloc_r+0xae>
  40586e:	4294      	cmp	r4, r2
  405870:	da43      	bge.n	4058fa <_realloc_r+0xbe>
  405872:	4bc4      	ldr	r3, [pc, #784]	; (405b84 <_realloc_r+0x348>)
  405874:	6899      	ldr	r1, [r3, #8]
  405876:	eb09 0004 	add.w	r0, r9, r4
  40587a:	4288      	cmp	r0, r1
  40587c:	f000 80b4 	beq.w	4059e8 <_realloc_r+0x1ac>
  405880:	6843      	ldr	r3, [r0, #4]
  405882:	f023 0101 	bic.w	r1, r3, #1
  405886:	4401      	add	r1, r0
  405888:	6849      	ldr	r1, [r1, #4]
  40588a:	07c9      	lsls	r1, r1, #31
  40588c:	d54c      	bpl.n	405928 <_realloc_r+0xec>
  40588e:	f01e 0f01 	tst.w	lr, #1
  405892:	f000 809b 	beq.w	4059cc <_realloc_r+0x190>
  405896:	4631      	mov	r1, r6
  405898:	4640      	mov	r0, r8
  40589a:	f7fd fe09 	bl	4034b0 <_malloc_r>
  40589e:	4606      	mov	r6, r0
  4058a0:	2800      	cmp	r0, #0
  4058a2:	d03a      	beq.n	40591a <_realloc_r+0xde>
  4058a4:	f855 3c04 	ldr.w	r3, [r5, #-4]
  4058a8:	f023 0301 	bic.w	r3, r3, #1
  4058ac:	444b      	add	r3, r9
  4058ae:	f1a0 0208 	sub.w	r2, r0, #8
  4058b2:	429a      	cmp	r2, r3
  4058b4:	f000 8121 	beq.w	405afa <_realloc_r+0x2be>
  4058b8:	1f22      	subs	r2, r4, #4
  4058ba:	2a24      	cmp	r2, #36	; 0x24
  4058bc:	f200 8107 	bhi.w	405ace <_realloc_r+0x292>
  4058c0:	2a13      	cmp	r2, #19
  4058c2:	f200 80db 	bhi.w	405a7c <_realloc_r+0x240>
  4058c6:	4603      	mov	r3, r0
  4058c8:	462a      	mov	r2, r5
  4058ca:	6811      	ldr	r1, [r2, #0]
  4058cc:	6019      	str	r1, [r3, #0]
  4058ce:	6851      	ldr	r1, [r2, #4]
  4058d0:	6059      	str	r1, [r3, #4]
  4058d2:	6892      	ldr	r2, [r2, #8]
  4058d4:	609a      	str	r2, [r3, #8]
  4058d6:	4629      	mov	r1, r5
  4058d8:	4640      	mov	r0, r8
  4058da:	f7ff fb31 	bl	404f40 <_free_r>
  4058de:	e01c      	b.n	40591a <_realloc_r+0xde>
  4058e0:	f027 0707 	bic.w	r7, r7, #7
  4058e4:	2f00      	cmp	r7, #0
  4058e6:	463a      	mov	r2, r7
  4058e8:	dabf      	bge.n	40586a <_realloc_r+0x2e>
  4058ea:	2600      	movs	r6, #0
  4058ec:	230c      	movs	r3, #12
  4058ee:	4630      	mov	r0, r6
  4058f0:	f8c8 3000 	str.w	r3, [r8]
  4058f4:	b003      	add	sp, #12
  4058f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4058fa:	462e      	mov	r6, r5
  4058fc:	1be3      	subs	r3, r4, r7
  4058fe:	2b0f      	cmp	r3, #15
  405900:	d81e      	bhi.n	405940 <_realloc_r+0x104>
  405902:	f8d9 3004 	ldr.w	r3, [r9, #4]
  405906:	f003 0301 	and.w	r3, r3, #1
  40590a:	4323      	orrs	r3, r4
  40590c:	444c      	add	r4, r9
  40590e:	f8c9 3004 	str.w	r3, [r9, #4]
  405912:	6863      	ldr	r3, [r4, #4]
  405914:	f043 0301 	orr.w	r3, r3, #1
  405918:	6063      	str	r3, [r4, #4]
  40591a:	4640      	mov	r0, r8
  40591c:	f7fe f8cc 	bl	403ab8 <__malloc_unlock>
  405920:	4630      	mov	r0, r6
  405922:	b003      	add	sp, #12
  405924:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405928:	f023 0303 	bic.w	r3, r3, #3
  40592c:	18e1      	adds	r1, r4, r3
  40592e:	4291      	cmp	r1, r2
  405930:	db1f      	blt.n	405972 <_realloc_r+0x136>
  405932:	68c3      	ldr	r3, [r0, #12]
  405934:	6882      	ldr	r2, [r0, #8]
  405936:	462e      	mov	r6, r5
  405938:	60d3      	str	r3, [r2, #12]
  40593a:	460c      	mov	r4, r1
  40593c:	609a      	str	r2, [r3, #8]
  40593e:	e7dd      	b.n	4058fc <_realloc_r+0xc0>
  405940:	f8d9 2004 	ldr.w	r2, [r9, #4]
  405944:	eb09 0107 	add.w	r1, r9, r7
  405948:	f002 0201 	and.w	r2, r2, #1
  40594c:	444c      	add	r4, r9
  40594e:	f043 0301 	orr.w	r3, r3, #1
  405952:	4317      	orrs	r7, r2
  405954:	f8c9 7004 	str.w	r7, [r9, #4]
  405958:	604b      	str	r3, [r1, #4]
  40595a:	6863      	ldr	r3, [r4, #4]
  40595c:	f043 0301 	orr.w	r3, r3, #1
  405960:	3108      	adds	r1, #8
  405962:	6063      	str	r3, [r4, #4]
  405964:	4640      	mov	r0, r8
  405966:	f7ff faeb 	bl	404f40 <_free_r>
  40596a:	e7d6      	b.n	40591a <_realloc_r+0xde>
  40596c:	4611      	mov	r1, r2
  40596e:	f7fd bd9f 	b.w	4034b0 <_malloc_r>
  405972:	f01e 0f01 	tst.w	lr, #1
  405976:	d18e      	bne.n	405896 <_realloc_r+0x5a>
  405978:	f855 1c08 	ldr.w	r1, [r5, #-8]
  40597c:	eba9 0a01 	sub.w	sl, r9, r1
  405980:	f8da 1004 	ldr.w	r1, [sl, #4]
  405984:	f021 0103 	bic.w	r1, r1, #3
  405988:	440b      	add	r3, r1
  40598a:	4423      	add	r3, r4
  40598c:	4293      	cmp	r3, r2
  40598e:	db25      	blt.n	4059dc <_realloc_r+0x1a0>
  405990:	68c2      	ldr	r2, [r0, #12]
  405992:	6881      	ldr	r1, [r0, #8]
  405994:	4656      	mov	r6, sl
  405996:	60ca      	str	r2, [r1, #12]
  405998:	6091      	str	r1, [r2, #8]
  40599a:	f8da 100c 	ldr.w	r1, [sl, #12]
  40599e:	f856 0f08 	ldr.w	r0, [r6, #8]!
  4059a2:	1f22      	subs	r2, r4, #4
  4059a4:	2a24      	cmp	r2, #36	; 0x24
  4059a6:	60c1      	str	r1, [r0, #12]
  4059a8:	6088      	str	r0, [r1, #8]
  4059aa:	f200 8094 	bhi.w	405ad6 <_realloc_r+0x29a>
  4059ae:	2a13      	cmp	r2, #19
  4059b0:	d96f      	bls.n	405a92 <_realloc_r+0x256>
  4059b2:	6829      	ldr	r1, [r5, #0]
  4059b4:	f8ca 1008 	str.w	r1, [sl, #8]
  4059b8:	6869      	ldr	r1, [r5, #4]
  4059ba:	f8ca 100c 	str.w	r1, [sl, #12]
  4059be:	2a1b      	cmp	r2, #27
  4059c0:	f200 80a2 	bhi.w	405b08 <_realloc_r+0x2cc>
  4059c4:	3508      	adds	r5, #8
  4059c6:	f10a 0210 	add.w	r2, sl, #16
  4059ca:	e063      	b.n	405a94 <_realloc_r+0x258>
  4059cc:	f855 3c08 	ldr.w	r3, [r5, #-8]
  4059d0:	eba9 0a03 	sub.w	sl, r9, r3
  4059d4:	f8da 1004 	ldr.w	r1, [sl, #4]
  4059d8:	f021 0103 	bic.w	r1, r1, #3
  4059dc:	1863      	adds	r3, r4, r1
  4059de:	4293      	cmp	r3, r2
  4059e0:	f6ff af59 	blt.w	405896 <_realloc_r+0x5a>
  4059e4:	4656      	mov	r6, sl
  4059e6:	e7d8      	b.n	40599a <_realloc_r+0x15e>
  4059e8:	6841      	ldr	r1, [r0, #4]
  4059ea:	f021 0b03 	bic.w	fp, r1, #3
  4059ee:	44a3      	add	fp, r4
  4059f0:	f107 0010 	add.w	r0, r7, #16
  4059f4:	4583      	cmp	fp, r0
  4059f6:	da56      	bge.n	405aa6 <_realloc_r+0x26a>
  4059f8:	f01e 0f01 	tst.w	lr, #1
  4059fc:	f47f af4b 	bne.w	405896 <_realloc_r+0x5a>
  405a00:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405a04:	eba9 0a01 	sub.w	sl, r9, r1
  405a08:	f8da 1004 	ldr.w	r1, [sl, #4]
  405a0c:	f021 0103 	bic.w	r1, r1, #3
  405a10:	448b      	add	fp, r1
  405a12:	4558      	cmp	r0, fp
  405a14:	dce2      	bgt.n	4059dc <_realloc_r+0x1a0>
  405a16:	4656      	mov	r6, sl
  405a18:	f8da 100c 	ldr.w	r1, [sl, #12]
  405a1c:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405a20:	1f22      	subs	r2, r4, #4
  405a22:	2a24      	cmp	r2, #36	; 0x24
  405a24:	60c1      	str	r1, [r0, #12]
  405a26:	6088      	str	r0, [r1, #8]
  405a28:	f200 808f 	bhi.w	405b4a <_realloc_r+0x30e>
  405a2c:	2a13      	cmp	r2, #19
  405a2e:	f240 808a 	bls.w	405b46 <_realloc_r+0x30a>
  405a32:	6829      	ldr	r1, [r5, #0]
  405a34:	f8ca 1008 	str.w	r1, [sl, #8]
  405a38:	6869      	ldr	r1, [r5, #4]
  405a3a:	f8ca 100c 	str.w	r1, [sl, #12]
  405a3e:	2a1b      	cmp	r2, #27
  405a40:	f200 808a 	bhi.w	405b58 <_realloc_r+0x31c>
  405a44:	3508      	adds	r5, #8
  405a46:	f10a 0210 	add.w	r2, sl, #16
  405a4a:	6829      	ldr	r1, [r5, #0]
  405a4c:	6011      	str	r1, [r2, #0]
  405a4e:	6869      	ldr	r1, [r5, #4]
  405a50:	6051      	str	r1, [r2, #4]
  405a52:	68a9      	ldr	r1, [r5, #8]
  405a54:	6091      	str	r1, [r2, #8]
  405a56:	eb0a 0107 	add.w	r1, sl, r7
  405a5a:	ebab 0207 	sub.w	r2, fp, r7
  405a5e:	f042 0201 	orr.w	r2, r2, #1
  405a62:	6099      	str	r1, [r3, #8]
  405a64:	604a      	str	r2, [r1, #4]
  405a66:	f8da 3004 	ldr.w	r3, [sl, #4]
  405a6a:	f003 0301 	and.w	r3, r3, #1
  405a6e:	431f      	orrs	r7, r3
  405a70:	4640      	mov	r0, r8
  405a72:	f8ca 7004 	str.w	r7, [sl, #4]
  405a76:	f7fe f81f 	bl	403ab8 <__malloc_unlock>
  405a7a:	e751      	b.n	405920 <_realloc_r+0xe4>
  405a7c:	682b      	ldr	r3, [r5, #0]
  405a7e:	6003      	str	r3, [r0, #0]
  405a80:	686b      	ldr	r3, [r5, #4]
  405a82:	6043      	str	r3, [r0, #4]
  405a84:	2a1b      	cmp	r2, #27
  405a86:	d82d      	bhi.n	405ae4 <_realloc_r+0x2a8>
  405a88:	f100 0308 	add.w	r3, r0, #8
  405a8c:	f105 0208 	add.w	r2, r5, #8
  405a90:	e71b      	b.n	4058ca <_realloc_r+0x8e>
  405a92:	4632      	mov	r2, r6
  405a94:	6829      	ldr	r1, [r5, #0]
  405a96:	6011      	str	r1, [r2, #0]
  405a98:	6869      	ldr	r1, [r5, #4]
  405a9a:	6051      	str	r1, [r2, #4]
  405a9c:	68a9      	ldr	r1, [r5, #8]
  405a9e:	6091      	str	r1, [r2, #8]
  405aa0:	461c      	mov	r4, r3
  405aa2:	46d1      	mov	r9, sl
  405aa4:	e72a      	b.n	4058fc <_realloc_r+0xc0>
  405aa6:	eb09 0107 	add.w	r1, r9, r7
  405aaa:	ebab 0b07 	sub.w	fp, fp, r7
  405aae:	f04b 0201 	orr.w	r2, fp, #1
  405ab2:	6099      	str	r1, [r3, #8]
  405ab4:	604a      	str	r2, [r1, #4]
  405ab6:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405aba:	f003 0301 	and.w	r3, r3, #1
  405abe:	431f      	orrs	r7, r3
  405ac0:	4640      	mov	r0, r8
  405ac2:	f845 7c04 	str.w	r7, [r5, #-4]
  405ac6:	f7fd fff7 	bl	403ab8 <__malloc_unlock>
  405aca:	462e      	mov	r6, r5
  405acc:	e728      	b.n	405920 <_realloc_r+0xe4>
  405ace:	4629      	mov	r1, r5
  405ad0:	f7ff fe50 	bl	405774 <memmove>
  405ad4:	e6ff      	b.n	4058d6 <_realloc_r+0x9a>
  405ad6:	4629      	mov	r1, r5
  405ad8:	4630      	mov	r0, r6
  405ada:	461c      	mov	r4, r3
  405adc:	46d1      	mov	r9, sl
  405ade:	f7ff fe49 	bl	405774 <memmove>
  405ae2:	e70b      	b.n	4058fc <_realloc_r+0xc0>
  405ae4:	68ab      	ldr	r3, [r5, #8]
  405ae6:	6083      	str	r3, [r0, #8]
  405ae8:	68eb      	ldr	r3, [r5, #12]
  405aea:	60c3      	str	r3, [r0, #12]
  405aec:	2a24      	cmp	r2, #36	; 0x24
  405aee:	d017      	beq.n	405b20 <_realloc_r+0x2e4>
  405af0:	f100 0310 	add.w	r3, r0, #16
  405af4:	f105 0210 	add.w	r2, r5, #16
  405af8:	e6e7      	b.n	4058ca <_realloc_r+0x8e>
  405afa:	f850 3c04 	ldr.w	r3, [r0, #-4]
  405afe:	f023 0303 	bic.w	r3, r3, #3
  405b02:	441c      	add	r4, r3
  405b04:	462e      	mov	r6, r5
  405b06:	e6f9      	b.n	4058fc <_realloc_r+0xc0>
  405b08:	68a9      	ldr	r1, [r5, #8]
  405b0a:	f8ca 1010 	str.w	r1, [sl, #16]
  405b0e:	68e9      	ldr	r1, [r5, #12]
  405b10:	f8ca 1014 	str.w	r1, [sl, #20]
  405b14:	2a24      	cmp	r2, #36	; 0x24
  405b16:	d00c      	beq.n	405b32 <_realloc_r+0x2f6>
  405b18:	3510      	adds	r5, #16
  405b1a:	f10a 0218 	add.w	r2, sl, #24
  405b1e:	e7b9      	b.n	405a94 <_realloc_r+0x258>
  405b20:	692b      	ldr	r3, [r5, #16]
  405b22:	6103      	str	r3, [r0, #16]
  405b24:	696b      	ldr	r3, [r5, #20]
  405b26:	6143      	str	r3, [r0, #20]
  405b28:	f105 0218 	add.w	r2, r5, #24
  405b2c:	f100 0318 	add.w	r3, r0, #24
  405b30:	e6cb      	b.n	4058ca <_realloc_r+0x8e>
  405b32:	692a      	ldr	r2, [r5, #16]
  405b34:	f8ca 2018 	str.w	r2, [sl, #24]
  405b38:	696a      	ldr	r2, [r5, #20]
  405b3a:	f8ca 201c 	str.w	r2, [sl, #28]
  405b3e:	3518      	adds	r5, #24
  405b40:	f10a 0220 	add.w	r2, sl, #32
  405b44:	e7a6      	b.n	405a94 <_realloc_r+0x258>
  405b46:	4632      	mov	r2, r6
  405b48:	e77f      	b.n	405a4a <_realloc_r+0x20e>
  405b4a:	4629      	mov	r1, r5
  405b4c:	4630      	mov	r0, r6
  405b4e:	9301      	str	r3, [sp, #4]
  405b50:	f7ff fe10 	bl	405774 <memmove>
  405b54:	9b01      	ldr	r3, [sp, #4]
  405b56:	e77e      	b.n	405a56 <_realloc_r+0x21a>
  405b58:	68a9      	ldr	r1, [r5, #8]
  405b5a:	f8ca 1010 	str.w	r1, [sl, #16]
  405b5e:	68e9      	ldr	r1, [r5, #12]
  405b60:	f8ca 1014 	str.w	r1, [sl, #20]
  405b64:	2a24      	cmp	r2, #36	; 0x24
  405b66:	d003      	beq.n	405b70 <_realloc_r+0x334>
  405b68:	3510      	adds	r5, #16
  405b6a:	f10a 0218 	add.w	r2, sl, #24
  405b6e:	e76c      	b.n	405a4a <_realloc_r+0x20e>
  405b70:	692a      	ldr	r2, [r5, #16]
  405b72:	f8ca 2018 	str.w	r2, [sl, #24]
  405b76:	696a      	ldr	r2, [r5, #20]
  405b78:	f8ca 201c 	str.w	r2, [sl, #28]
  405b7c:	3518      	adds	r5, #24
  405b7e:	f10a 0220 	add.w	r2, sl, #32
  405b82:	e762      	b.n	405a4a <_realloc_r+0x20e>
  405b84:	20400468 	.word	0x20400468

00405b88 <__sread>:
  405b88:	b510      	push	{r4, lr}
  405b8a:	460c      	mov	r4, r1
  405b8c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  405b90:	f000 fa7c 	bl	40608c <_read_r>
  405b94:	2800      	cmp	r0, #0
  405b96:	db03      	blt.n	405ba0 <__sread+0x18>
  405b98:	6d23      	ldr	r3, [r4, #80]	; 0x50
  405b9a:	4403      	add	r3, r0
  405b9c:	6523      	str	r3, [r4, #80]	; 0x50
  405b9e:	bd10      	pop	{r4, pc}
  405ba0:	89a3      	ldrh	r3, [r4, #12]
  405ba2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  405ba6:	81a3      	strh	r3, [r4, #12]
  405ba8:	bd10      	pop	{r4, pc}
  405baa:	bf00      	nop

00405bac <__swrite>:
  405bac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405bb0:	4616      	mov	r6, r2
  405bb2:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
  405bb6:	461f      	mov	r7, r3
  405bb8:	05d3      	lsls	r3, r2, #23
  405bba:	460c      	mov	r4, r1
  405bbc:	4605      	mov	r5, r0
  405bbe:	d507      	bpl.n	405bd0 <__swrite+0x24>
  405bc0:	2200      	movs	r2, #0
  405bc2:	2302      	movs	r3, #2
  405bc4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  405bc8:	f000 fa4a 	bl	406060 <_lseek_r>
  405bcc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  405bd0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  405bd4:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  405bd8:	81a2      	strh	r2, [r4, #12]
  405bda:	463b      	mov	r3, r7
  405bdc:	4632      	mov	r2, r6
  405bde:	4628      	mov	r0, r5
  405be0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405be4:	f000 b92a 	b.w	405e3c <_write_r>

00405be8 <__sseek>:
  405be8:	b510      	push	{r4, lr}
  405bea:	460c      	mov	r4, r1
  405bec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  405bf0:	f000 fa36 	bl	406060 <_lseek_r>
  405bf4:	89a3      	ldrh	r3, [r4, #12]
  405bf6:	1c42      	adds	r2, r0, #1
  405bf8:	bf0e      	itee	eq
  405bfa:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  405bfe:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  405c02:	6520      	strne	r0, [r4, #80]	; 0x50
  405c04:	81a3      	strh	r3, [r4, #12]
  405c06:	bd10      	pop	{r4, pc}

00405c08 <__sclose>:
  405c08:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  405c0c:	f000 b98e 	b.w	405f2c <_close_r>
	...

00405c40 <strlen>:
  405c40:	f890 f000 	pld	[r0]
  405c44:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  405c48:	f020 0107 	bic.w	r1, r0, #7
  405c4c:	f06f 0c00 	mvn.w	ip, #0
  405c50:	f010 0407 	ands.w	r4, r0, #7
  405c54:	f891 f020 	pld	[r1, #32]
  405c58:	f040 8049 	bne.w	405cee <strlen+0xae>
  405c5c:	f04f 0400 	mov.w	r4, #0
  405c60:	f06f 0007 	mvn.w	r0, #7
  405c64:	e9d1 2300 	ldrd	r2, r3, [r1]
  405c68:	f891 f040 	pld	[r1, #64]	; 0x40
  405c6c:	f100 0008 	add.w	r0, r0, #8
  405c70:	fa82 f24c 	uadd8	r2, r2, ip
  405c74:	faa4 f28c 	sel	r2, r4, ip
  405c78:	fa83 f34c 	uadd8	r3, r3, ip
  405c7c:	faa2 f38c 	sel	r3, r2, ip
  405c80:	bb4b      	cbnz	r3, 405cd6 <strlen+0x96>
  405c82:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  405c86:	fa82 f24c 	uadd8	r2, r2, ip
  405c8a:	f100 0008 	add.w	r0, r0, #8
  405c8e:	faa4 f28c 	sel	r2, r4, ip
  405c92:	fa83 f34c 	uadd8	r3, r3, ip
  405c96:	faa2 f38c 	sel	r3, r2, ip
  405c9a:	b9e3      	cbnz	r3, 405cd6 <strlen+0x96>
  405c9c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  405ca0:	fa82 f24c 	uadd8	r2, r2, ip
  405ca4:	f100 0008 	add.w	r0, r0, #8
  405ca8:	faa4 f28c 	sel	r2, r4, ip
  405cac:	fa83 f34c 	uadd8	r3, r3, ip
  405cb0:	faa2 f38c 	sel	r3, r2, ip
  405cb4:	b97b      	cbnz	r3, 405cd6 <strlen+0x96>
  405cb6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  405cba:	f101 0120 	add.w	r1, r1, #32
  405cbe:	fa82 f24c 	uadd8	r2, r2, ip
  405cc2:	f100 0008 	add.w	r0, r0, #8
  405cc6:	faa4 f28c 	sel	r2, r4, ip
  405cca:	fa83 f34c 	uadd8	r3, r3, ip
  405cce:	faa2 f38c 	sel	r3, r2, ip
  405cd2:	2b00      	cmp	r3, #0
  405cd4:	d0c6      	beq.n	405c64 <strlen+0x24>
  405cd6:	2a00      	cmp	r2, #0
  405cd8:	bf04      	itt	eq
  405cda:	3004      	addeq	r0, #4
  405cdc:	461a      	moveq	r2, r3
  405cde:	ba12      	rev	r2, r2
  405ce0:	fab2 f282 	clz	r2, r2
  405ce4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  405ce8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  405cec:	4770      	bx	lr
  405cee:	e9d1 2300 	ldrd	r2, r3, [r1]
  405cf2:	f004 0503 	and.w	r5, r4, #3
  405cf6:	f1c4 0000 	rsb	r0, r4, #0
  405cfa:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  405cfe:	f014 0f04 	tst.w	r4, #4
  405d02:	f891 f040 	pld	[r1, #64]	; 0x40
  405d06:	fa0c f505 	lsl.w	r5, ip, r5
  405d0a:	ea62 0205 	orn	r2, r2, r5
  405d0e:	bf1c      	itt	ne
  405d10:	ea63 0305 	ornne	r3, r3, r5
  405d14:	4662      	movne	r2, ip
  405d16:	f04f 0400 	mov.w	r4, #0
  405d1a:	e7a9      	b.n	405c70 <strlen+0x30>

00405d1c <__swbuf_r>:
  405d1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  405d1e:	460d      	mov	r5, r1
  405d20:	4614      	mov	r4, r2
  405d22:	4606      	mov	r6, r0
  405d24:	b110      	cbz	r0, 405d2c <__swbuf_r+0x10>
  405d26:	6b83      	ldr	r3, [r0, #56]	; 0x38
  405d28:	2b00      	cmp	r3, #0
  405d2a:	d04b      	beq.n	405dc4 <__swbuf_r+0xa8>
  405d2c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  405d30:	69a3      	ldr	r3, [r4, #24]
  405d32:	60a3      	str	r3, [r4, #8]
  405d34:	b291      	uxth	r1, r2
  405d36:	0708      	lsls	r0, r1, #28
  405d38:	d539      	bpl.n	405dae <__swbuf_r+0x92>
  405d3a:	6923      	ldr	r3, [r4, #16]
  405d3c:	2b00      	cmp	r3, #0
  405d3e:	d036      	beq.n	405dae <__swbuf_r+0x92>
  405d40:	b2ed      	uxtb	r5, r5
  405d42:	0489      	lsls	r1, r1, #18
  405d44:	462f      	mov	r7, r5
  405d46:	d515      	bpl.n	405d74 <__swbuf_r+0x58>
  405d48:	6822      	ldr	r2, [r4, #0]
  405d4a:	6961      	ldr	r1, [r4, #20]
  405d4c:	1ad3      	subs	r3, r2, r3
  405d4e:	428b      	cmp	r3, r1
  405d50:	da1c      	bge.n	405d8c <__swbuf_r+0x70>
  405d52:	3301      	adds	r3, #1
  405d54:	68a1      	ldr	r1, [r4, #8]
  405d56:	1c50      	adds	r0, r2, #1
  405d58:	3901      	subs	r1, #1
  405d5a:	60a1      	str	r1, [r4, #8]
  405d5c:	6020      	str	r0, [r4, #0]
  405d5e:	7015      	strb	r5, [r2, #0]
  405d60:	6962      	ldr	r2, [r4, #20]
  405d62:	429a      	cmp	r2, r3
  405d64:	d01a      	beq.n	405d9c <__swbuf_r+0x80>
  405d66:	89a3      	ldrh	r3, [r4, #12]
  405d68:	07db      	lsls	r3, r3, #31
  405d6a:	d501      	bpl.n	405d70 <__swbuf_r+0x54>
  405d6c:	2d0a      	cmp	r5, #10
  405d6e:	d015      	beq.n	405d9c <__swbuf_r+0x80>
  405d70:	4638      	mov	r0, r7
  405d72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405d74:	6e61      	ldr	r1, [r4, #100]	; 0x64
  405d76:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  405d7a:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  405d7e:	81a2      	strh	r2, [r4, #12]
  405d80:	6822      	ldr	r2, [r4, #0]
  405d82:	6661      	str	r1, [r4, #100]	; 0x64
  405d84:	6961      	ldr	r1, [r4, #20]
  405d86:	1ad3      	subs	r3, r2, r3
  405d88:	428b      	cmp	r3, r1
  405d8a:	dbe2      	blt.n	405d52 <__swbuf_r+0x36>
  405d8c:	4621      	mov	r1, r4
  405d8e:	4630      	mov	r0, r6
  405d90:	f7fe ff58 	bl	404c44 <_fflush_r>
  405d94:	b940      	cbnz	r0, 405da8 <__swbuf_r+0x8c>
  405d96:	6822      	ldr	r2, [r4, #0]
  405d98:	2301      	movs	r3, #1
  405d9a:	e7db      	b.n	405d54 <__swbuf_r+0x38>
  405d9c:	4621      	mov	r1, r4
  405d9e:	4630      	mov	r0, r6
  405da0:	f7fe ff50 	bl	404c44 <_fflush_r>
  405da4:	2800      	cmp	r0, #0
  405da6:	d0e3      	beq.n	405d70 <__swbuf_r+0x54>
  405da8:	f04f 37ff 	mov.w	r7, #4294967295
  405dac:	e7e0      	b.n	405d70 <__swbuf_r+0x54>
  405dae:	4621      	mov	r1, r4
  405db0:	4630      	mov	r0, r6
  405db2:	f7fe fe33 	bl	404a1c <__swsetup_r>
  405db6:	2800      	cmp	r0, #0
  405db8:	d1f6      	bne.n	405da8 <__swbuf_r+0x8c>
  405dba:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  405dbe:	6923      	ldr	r3, [r4, #16]
  405dc0:	b291      	uxth	r1, r2
  405dc2:	e7bd      	b.n	405d40 <__swbuf_r+0x24>
  405dc4:	f7fe ff96 	bl	404cf4 <__sinit>
  405dc8:	e7b0      	b.n	405d2c <__swbuf_r+0x10>
  405dca:	bf00      	nop

00405dcc <_wcrtomb_r>:
  405dcc:	b5f0      	push	{r4, r5, r6, r7, lr}
  405dce:	4606      	mov	r6, r0
  405dd0:	b085      	sub	sp, #20
  405dd2:	461f      	mov	r7, r3
  405dd4:	b189      	cbz	r1, 405dfa <_wcrtomb_r+0x2e>
  405dd6:	4c10      	ldr	r4, [pc, #64]	; (405e18 <_wcrtomb_r+0x4c>)
  405dd8:	4d10      	ldr	r5, [pc, #64]	; (405e1c <_wcrtomb_r+0x50>)
  405dda:	6824      	ldr	r4, [r4, #0]
  405ddc:	6b64      	ldr	r4, [r4, #52]	; 0x34
  405dde:	2c00      	cmp	r4, #0
  405de0:	bf08      	it	eq
  405de2:	462c      	moveq	r4, r5
  405de4:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
  405de8:	47a0      	blx	r4
  405dea:	1c43      	adds	r3, r0, #1
  405dec:	d103      	bne.n	405df6 <_wcrtomb_r+0x2a>
  405dee:	2200      	movs	r2, #0
  405df0:	238a      	movs	r3, #138	; 0x8a
  405df2:	603a      	str	r2, [r7, #0]
  405df4:	6033      	str	r3, [r6, #0]
  405df6:	b005      	add	sp, #20
  405df8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405dfa:	460c      	mov	r4, r1
  405dfc:	4906      	ldr	r1, [pc, #24]	; (405e18 <_wcrtomb_r+0x4c>)
  405dfe:	4a07      	ldr	r2, [pc, #28]	; (405e1c <_wcrtomb_r+0x50>)
  405e00:	6809      	ldr	r1, [r1, #0]
  405e02:	6b49      	ldr	r1, [r1, #52]	; 0x34
  405e04:	2900      	cmp	r1, #0
  405e06:	bf08      	it	eq
  405e08:	4611      	moveq	r1, r2
  405e0a:	4622      	mov	r2, r4
  405e0c:	f8d1 40e0 	ldr.w	r4, [r1, #224]	; 0xe0
  405e10:	a901      	add	r1, sp, #4
  405e12:	47a0      	blx	r4
  405e14:	e7e9      	b.n	405dea <_wcrtomb_r+0x1e>
  405e16:	bf00      	nop
  405e18:	20400038 	.word	0x20400038
  405e1c:	2040087c 	.word	0x2040087c

00405e20 <__ascii_wctomb>:
  405e20:	b121      	cbz	r1, 405e2c <__ascii_wctomb+0xc>
  405e22:	2aff      	cmp	r2, #255	; 0xff
  405e24:	d804      	bhi.n	405e30 <__ascii_wctomb+0x10>
  405e26:	700a      	strb	r2, [r1, #0]
  405e28:	2001      	movs	r0, #1
  405e2a:	4770      	bx	lr
  405e2c:	4608      	mov	r0, r1
  405e2e:	4770      	bx	lr
  405e30:	238a      	movs	r3, #138	; 0x8a
  405e32:	6003      	str	r3, [r0, #0]
  405e34:	f04f 30ff 	mov.w	r0, #4294967295
  405e38:	4770      	bx	lr
  405e3a:	bf00      	nop

00405e3c <_write_r>:
  405e3c:	b570      	push	{r4, r5, r6, lr}
  405e3e:	460d      	mov	r5, r1
  405e40:	4c08      	ldr	r4, [pc, #32]	; (405e64 <_write_r+0x28>)
  405e42:	4611      	mov	r1, r2
  405e44:	4606      	mov	r6, r0
  405e46:	461a      	mov	r2, r3
  405e48:	4628      	mov	r0, r5
  405e4a:	2300      	movs	r3, #0
  405e4c:	6023      	str	r3, [r4, #0]
  405e4e:	f7fb fbdd 	bl	40160c <_write>
  405e52:	1c43      	adds	r3, r0, #1
  405e54:	d000      	beq.n	405e58 <_write_r+0x1c>
  405e56:	bd70      	pop	{r4, r5, r6, pc}
  405e58:	6823      	ldr	r3, [r4, #0]
  405e5a:	2b00      	cmp	r3, #0
  405e5c:	d0fb      	beq.n	405e56 <_write_r+0x1a>
  405e5e:	6033      	str	r3, [r6, #0]
  405e60:	bd70      	pop	{r4, r5, r6, pc}
  405e62:	bf00      	nop
  405e64:	204425a0 	.word	0x204425a0

00405e68 <__register_exitproc>:
  405e68:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  405e6c:	4d2c      	ldr	r5, [pc, #176]	; (405f20 <__register_exitproc+0xb8>)
  405e6e:	4606      	mov	r6, r0
  405e70:	6828      	ldr	r0, [r5, #0]
  405e72:	4698      	mov	r8, r3
  405e74:	460f      	mov	r7, r1
  405e76:	4691      	mov	r9, r2
  405e78:	f7ff fafc 	bl	405474 <__retarget_lock_acquire_recursive>
  405e7c:	4b29      	ldr	r3, [pc, #164]	; (405f24 <__register_exitproc+0xbc>)
  405e7e:	681c      	ldr	r4, [r3, #0]
  405e80:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  405e84:	2b00      	cmp	r3, #0
  405e86:	d03e      	beq.n	405f06 <__register_exitproc+0x9e>
  405e88:	685a      	ldr	r2, [r3, #4]
  405e8a:	2a1f      	cmp	r2, #31
  405e8c:	dc1c      	bgt.n	405ec8 <__register_exitproc+0x60>
  405e8e:	f102 0e01 	add.w	lr, r2, #1
  405e92:	b176      	cbz	r6, 405eb2 <__register_exitproc+0x4a>
  405e94:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  405e98:	2401      	movs	r4, #1
  405e9a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  405e9e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  405ea2:	4094      	lsls	r4, r2
  405ea4:	4320      	orrs	r0, r4
  405ea6:	2e02      	cmp	r6, #2
  405ea8:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  405eac:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  405eb0:	d023      	beq.n	405efa <__register_exitproc+0x92>
  405eb2:	3202      	adds	r2, #2
  405eb4:	f8c3 e004 	str.w	lr, [r3, #4]
  405eb8:	6828      	ldr	r0, [r5, #0]
  405eba:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  405ebe:	f7ff fadb 	bl	405478 <__retarget_lock_release_recursive>
  405ec2:	2000      	movs	r0, #0
  405ec4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405ec8:	4b17      	ldr	r3, [pc, #92]	; (405f28 <__register_exitproc+0xc0>)
  405eca:	b30b      	cbz	r3, 405f10 <__register_exitproc+0xa8>
  405ecc:	f44f 70c8 	mov.w	r0, #400	; 0x190
  405ed0:	f7fd fae6 	bl	4034a0 <malloc>
  405ed4:	4603      	mov	r3, r0
  405ed6:	b1d8      	cbz	r0, 405f10 <__register_exitproc+0xa8>
  405ed8:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  405edc:	6002      	str	r2, [r0, #0]
  405ede:	2100      	movs	r1, #0
  405ee0:	6041      	str	r1, [r0, #4]
  405ee2:	460a      	mov	r2, r1
  405ee4:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  405ee8:	f04f 0e01 	mov.w	lr, #1
  405eec:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  405ef0:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  405ef4:	2e00      	cmp	r6, #0
  405ef6:	d0dc      	beq.n	405eb2 <__register_exitproc+0x4a>
  405ef8:	e7cc      	b.n	405e94 <__register_exitproc+0x2c>
  405efa:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  405efe:	430c      	orrs	r4, r1
  405f00:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  405f04:	e7d5      	b.n	405eb2 <__register_exitproc+0x4a>
  405f06:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  405f0a:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  405f0e:	e7bb      	b.n	405e88 <__register_exitproc+0x20>
  405f10:	6828      	ldr	r0, [r5, #0]
  405f12:	f7ff fab1 	bl	405478 <__retarget_lock_release_recursive>
  405f16:	f04f 30ff 	mov.w	r0, #4294967295
  405f1a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405f1e:	bf00      	nop
  405f20:	20400878 	.word	0x20400878
  405f24:	0040f02c 	.word	0x0040f02c
  405f28:	004034a1 	.word	0x004034a1

00405f2c <_close_r>:
  405f2c:	b538      	push	{r3, r4, r5, lr}
  405f2e:	4c07      	ldr	r4, [pc, #28]	; (405f4c <_close_r+0x20>)
  405f30:	2300      	movs	r3, #0
  405f32:	4605      	mov	r5, r0
  405f34:	4608      	mov	r0, r1
  405f36:	6023      	str	r3, [r4, #0]
  405f38:	f7fc fb56 	bl	4025e8 <_close>
  405f3c:	1c43      	adds	r3, r0, #1
  405f3e:	d000      	beq.n	405f42 <_close_r+0x16>
  405f40:	bd38      	pop	{r3, r4, r5, pc}
  405f42:	6823      	ldr	r3, [r4, #0]
  405f44:	2b00      	cmp	r3, #0
  405f46:	d0fb      	beq.n	405f40 <_close_r+0x14>
  405f48:	602b      	str	r3, [r5, #0]
  405f4a:	bd38      	pop	{r3, r4, r5, pc}
  405f4c:	204425a0 	.word	0x204425a0

00405f50 <_fclose_r>:
  405f50:	b570      	push	{r4, r5, r6, lr}
  405f52:	b159      	cbz	r1, 405f6c <_fclose_r+0x1c>
  405f54:	4605      	mov	r5, r0
  405f56:	460c      	mov	r4, r1
  405f58:	b110      	cbz	r0, 405f60 <_fclose_r+0x10>
  405f5a:	6b83      	ldr	r3, [r0, #56]	; 0x38
  405f5c:	2b00      	cmp	r3, #0
  405f5e:	d03c      	beq.n	405fda <_fclose_r+0x8a>
  405f60:	6e63      	ldr	r3, [r4, #100]	; 0x64
  405f62:	07d8      	lsls	r0, r3, #31
  405f64:	d505      	bpl.n	405f72 <_fclose_r+0x22>
  405f66:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  405f6a:	b92b      	cbnz	r3, 405f78 <_fclose_r+0x28>
  405f6c:	2600      	movs	r6, #0
  405f6e:	4630      	mov	r0, r6
  405f70:	bd70      	pop	{r4, r5, r6, pc}
  405f72:	89a3      	ldrh	r3, [r4, #12]
  405f74:	0599      	lsls	r1, r3, #22
  405f76:	d53c      	bpl.n	405ff2 <_fclose_r+0xa2>
  405f78:	4621      	mov	r1, r4
  405f7a:	4628      	mov	r0, r5
  405f7c:	f7fe fdc2 	bl	404b04 <__sflush_r>
  405f80:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  405f82:	4606      	mov	r6, r0
  405f84:	b133      	cbz	r3, 405f94 <_fclose_r+0x44>
  405f86:	69e1      	ldr	r1, [r4, #28]
  405f88:	4628      	mov	r0, r5
  405f8a:	4798      	blx	r3
  405f8c:	2800      	cmp	r0, #0
  405f8e:	bfb8      	it	lt
  405f90:	f04f 36ff 	movlt.w	r6, #4294967295
  405f94:	89a3      	ldrh	r3, [r4, #12]
  405f96:	061a      	lsls	r2, r3, #24
  405f98:	d422      	bmi.n	405fe0 <_fclose_r+0x90>
  405f9a:	6b21      	ldr	r1, [r4, #48]	; 0x30
  405f9c:	b141      	cbz	r1, 405fb0 <_fclose_r+0x60>
  405f9e:	f104 0340 	add.w	r3, r4, #64	; 0x40
  405fa2:	4299      	cmp	r1, r3
  405fa4:	d002      	beq.n	405fac <_fclose_r+0x5c>
  405fa6:	4628      	mov	r0, r5
  405fa8:	f7fe ffca 	bl	404f40 <_free_r>
  405fac:	2300      	movs	r3, #0
  405fae:	6323      	str	r3, [r4, #48]	; 0x30
  405fb0:	6c61      	ldr	r1, [r4, #68]	; 0x44
  405fb2:	b121      	cbz	r1, 405fbe <_fclose_r+0x6e>
  405fb4:	4628      	mov	r0, r5
  405fb6:	f7fe ffc3 	bl	404f40 <_free_r>
  405fba:	2300      	movs	r3, #0
  405fbc:	6463      	str	r3, [r4, #68]	; 0x44
  405fbe:	f7fe fec5 	bl	404d4c <__sfp_lock_acquire>
  405fc2:	6e63      	ldr	r3, [r4, #100]	; 0x64
  405fc4:	2200      	movs	r2, #0
  405fc6:	07db      	lsls	r3, r3, #31
  405fc8:	81a2      	strh	r2, [r4, #12]
  405fca:	d50e      	bpl.n	405fea <_fclose_r+0x9a>
  405fcc:	6da0      	ldr	r0, [r4, #88]	; 0x58
  405fce:	f7ff fa4f 	bl	405470 <__retarget_lock_close_recursive>
  405fd2:	f7fe fec1 	bl	404d58 <__sfp_lock_release>
  405fd6:	4630      	mov	r0, r6
  405fd8:	bd70      	pop	{r4, r5, r6, pc}
  405fda:	f7fe fe8b 	bl	404cf4 <__sinit>
  405fde:	e7bf      	b.n	405f60 <_fclose_r+0x10>
  405fe0:	6921      	ldr	r1, [r4, #16]
  405fe2:	4628      	mov	r0, r5
  405fe4:	f7fe ffac 	bl	404f40 <_free_r>
  405fe8:	e7d7      	b.n	405f9a <_fclose_r+0x4a>
  405fea:	6da0      	ldr	r0, [r4, #88]	; 0x58
  405fec:	f7ff fa44 	bl	405478 <__retarget_lock_release_recursive>
  405ff0:	e7ec      	b.n	405fcc <_fclose_r+0x7c>
  405ff2:	6da0      	ldr	r0, [r4, #88]	; 0x58
  405ff4:	f7ff fa3e 	bl	405474 <__retarget_lock_acquire_recursive>
  405ff8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  405ffc:	2b00      	cmp	r3, #0
  405ffe:	d1bb      	bne.n	405f78 <_fclose_r+0x28>
  406000:	6e66      	ldr	r6, [r4, #100]	; 0x64
  406002:	f016 0601 	ands.w	r6, r6, #1
  406006:	d1b1      	bne.n	405f6c <_fclose_r+0x1c>
  406008:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40600a:	f7ff fa35 	bl	405478 <__retarget_lock_release_recursive>
  40600e:	4630      	mov	r0, r6
  406010:	bd70      	pop	{r4, r5, r6, pc}
  406012:	bf00      	nop

00406014 <_fstat_r>:
  406014:	b538      	push	{r3, r4, r5, lr}
  406016:	460b      	mov	r3, r1
  406018:	4c07      	ldr	r4, [pc, #28]	; (406038 <_fstat_r+0x24>)
  40601a:	4605      	mov	r5, r0
  40601c:	4611      	mov	r1, r2
  40601e:	4618      	mov	r0, r3
  406020:	2300      	movs	r3, #0
  406022:	6023      	str	r3, [r4, #0]
  406024:	f7fc fae4 	bl	4025f0 <_fstat>
  406028:	1c43      	adds	r3, r0, #1
  40602a:	d000      	beq.n	40602e <_fstat_r+0x1a>
  40602c:	bd38      	pop	{r3, r4, r5, pc}
  40602e:	6823      	ldr	r3, [r4, #0]
  406030:	2b00      	cmp	r3, #0
  406032:	d0fb      	beq.n	40602c <_fstat_r+0x18>
  406034:	602b      	str	r3, [r5, #0]
  406036:	bd38      	pop	{r3, r4, r5, pc}
  406038:	204425a0 	.word	0x204425a0

0040603c <_isatty_r>:
  40603c:	b538      	push	{r3, r4, r5, lr}
  40603e:	4c07      	ldr	r4, [pc, #28]	; (40605c <_isatty_r+0x20>)
  406040:	2300      	movs	r3, #0
  406042:	4605      	mov	r5, r0
  406044:	4608      	mov	r0, r1
  406046:	6023      	str	r3, [r4, #0]
  406048:	f7fc fad8 	bl	4025fc <_isatty>
  40604c:	1c43      	adds	r3, r0, #1
  40604e:	d000      	beq.n	406052 <_isatty_r+0x16>
  406050:	bd38      	pop	{r3, r4, r5, pc}
  406052:	6823      	ldr	r3, [r4, #0]
  406054:	2b00      	cmp	r3, #0
  406056:	d0fb      	beq.n	406050 <_isatty_r+0x14>
  406058:	602b      	str	r3, [r5, #0]
  40605a:	bd38      	pop	{r3, r4, r5, pc}
  40605c:	204425a0 	.word	0x204425a0

00406060 <_lseek_r>:
  406060:	b570      	push	{r4, r5, r6, lr}
  406062:	460d      	mov	r5, r1
  406064:	4c08      	ldr	r4, [pc, #32]	; (406088 <_lseek_r+0x28>)
  406066:	4611      	mov	r1, r2
  406068:	4606      	mov	r6, r0
  40606a:	461a      	mov	r2, r3
  40606c:	4628      	mov	r0, r5
  40606e:	2300      	movs	r3, #0
  406070:	6023      	str	r3, [r4, #0]
  406072:	f7fc fac5 	bl	402600 <_lseek>
  406076:	1c43      	adds	r3, r0, #1
  406078:	d000      	beq.n	40607c <_lseek_r+0x1c>
  40607a:	bd70      	pop	{r4, r5, r6, pc}
  40607c:	6823      	ldr	r3, [r4, #0]
  40607e:	2b00      	cmp	r3, #0
  406080:	d0fb      	beq.n	40607a <_lseek_r+0x1a>
  406082:	6033      	str	r3, [r6, #0]
  406084:	bd70      	pop	{r4, r5, r6, pc}
  406086:	bf00      	nop
  406088:	204425a0 	.word	0x204425a0

0040608c <_read_r>:
  40608c:	b570      	push	{r4, r5, r6, lr}
  40608e:	460d      	mov	r5, r1
  406090:	4c08      	ldr	r4, [pc, #32]	; (4060b4 <_read_r+0x28>)
  406092:	4611      	mov	r1, r2
  406094:	4606      	mov	r6, r0
  406096:	461a      	mov	r2, r3
  406098:	4628      	mov	r0, r5
  40609a:	2300      	movs	r3, #0
  40609c:	6023      	str	r3, [r4, #0]
  40609e:	f7fb fa97 	bl	4015d0 <_read>
  4060a2:	1c43      	adds	r3, r0, #1
  4060a4:	d000      	beq.n	4060a8 <_read_r+0x1c>
  4060a6:	bd70      	pop	{r4, r5, r6, pc}
  4060a8:	6823      	ldr	r3, [r4, #0]
  4060aa:	2b00      	cmp	r3, #0
  4060ac:	d0fb      	beq.n	4060a6 <_read_r+0x1a>
  4060ae:	6033      	str	r3, [r6, #0]
  4060b0:	bd70      	pop	{r4, r5, r6, pc}
  4060b2:	bf00      	nop
  4060b4:	204425a0 	.word	0x204425a0

004060b8 <__aeabi_uldivmod>:
  4060b8:	b953      	cbnz	r3, 4060d0 <__aeabi_uldivmod+0x18>
  4060ba:	b94a      	cbnz	r2, 4060d0 <__aeabi_uldivmod+0x18>
  4060bc:	2900      	cmp	r1, #0
  4060be:	bf08      	it	eq
  4060c0:	2800      	cmpeq	r0, #0
  4060c2:	bf1c      	itt	ne
  4060c4:	f04f 31ff 	movne.w	r1, #4294967295
  4060c8:	f04f 30ff 	movne.w	r0, #4294967295
  4060cc:	f000 b97a 	b.w	4063c4 <__aeabi_idiv0>
  4060d0:	f1ad 0c08 	sub.w	ip, sp, #8
  4060d4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  4060d8:	f000 f806 	bl	4060e8 <__udivmoddi4>
  4060dc:	f8dd e004 	ldr.w	lr, [sp, #4]
  4060e0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  4060e4:	b004      	add	sp, #16
  4060e6:	4770      	bx	lr

004060e8 <__udivmoddi4>:
  4060e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4060ec:	468c      	mov	ip, r1
  4060ee:	460d      	mov	r5, r1
  4060f0:	4604      	mov	r4, r0
  4060f2:	9e08      	ldr	r6, [sp, #32]
  4060f4:	2b00      	cmp	r3, #0
  4060f6:	d151      	bne.n	40619c <__udivmoddi4+0xb4>
  4060f8:	428a      	cmp	r2, r1
  4060fa:	4617      	mov	r7, r2
  4060fc:	d96d      	bls.n	4061da <__udivmoddi4+0xf2>
  4060fe:	fab2 fe82 	clz	lr, r2
  406102:	f1be 0f00 	cmp.w	lr, #0
  406106:	d00b      	beq.n	406120 <__udivmoddi4+0x38>
  406108:	f1ce 0c20 	rsb	ip, lr, #32
  40610c:	fa01 f50e 	lsl.w	r5, r1, lr
  406110:	fa20 fc0c 	lsr.w	ip, r0, ip
  406114:	fa02 f70e 	lsl.w	r7, r2, lr
  406118:	ea4c 0c05 	orr.w	ip, ip, r5
  40611c:	fa00 f40e 	lsl.w	r4, r0, lr
  406120:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  406124:	0c25      	lsrs	r5, r4, #16
  406126:	fbbc f8fa 	udiv	r8, ip, sl
  40612a:	fa1f f987 	uxth.w	r9, r7
  40612e:	fb0a cc18 	mls	ip, sl, r8, ip
  406132:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  406136:	fb08 f309 	mul.w	r3, r8, r9
  40613a:	42ab      	cmp	r3, r5
  40613c:	d90a      	bls.n	406154 <__udivmoddi4+0x6c>
  40613e:	19ed      	adds	r5, r5, r7
  406140:	f108 32ff 	add.w	r2, r8, #4294967295
  406144:	f080 8123 	bcs.w	40638e <__udivmoddi4+0x2a6>
  406148:	42ab      	cmp	r3, r5
  40614a:	f240 8120 	bls.w	40638e <__udivmoddi4+0x2a6>
  40614e:	f1a8 0802 	sub.w	r8, r8, #2
  406152:	443d      	add	r5, r7
  406154:	1aed      	subs	r5, r5, r3
  406156:	b2a4      	uxth	r4, r4
  406158:	fbb5 f0fa 	udiv	r0, r5, sl
  40615c:	fb0a 5510 	mls	r5, sl, r0, r5
  406160:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  406164:	fb00 f909 	mul.w	r9, r0, r9
  406168:	45a1      	cmp	r9, r4
  40616a:	d909      	bls.n	406180 <__udivmoddi4+0x98>
  40616c:	19e4      	adds	r4, r4, r7
  40616e:	f100 33ff 	add.w	r3, r0, #4294967295
  406172:	f080 810a 	bcs.w	40638a <__udivmoddi4+0x2a2>
  406176:	45a1      	cmp	r9, r4
  406178:	f240 8107 	bls.w	40638a <__udivmoddi4+0x2a2>
  40617c:	3802      	subs	r0, #2
  40617e:	443c      	add	r4, r7
  406180:	eba4 0409 	sub.w	r4, r4, r9
  406184:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  406188:	2100      	movs	r1, #0
  40618a:	2e00      	cmp	r6, #0
  40618c:	d061      	beq.n	406252 <__udivmoddi4+0x16a>
  40618e:	fa24 f40e 	lsr.w	r4, r4, lr
  406192:	2300      	movs	r3, #0
  406194:	6034      	str	r4, [r6, #0]
  406196:	6073      	str	r3, [r6, #4]
  406198:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40619c:	428b      	cmp	r3, r1
  40619e:	d907      	bls.n	4061b0 <__udivmoddi4+0xc8>
  4061a0:	2e00      	cmp	r6, #0
  4061a2:	d054      	beq.n	40624e <__udivmoddi4+0x166>
  4061a4:	2100      	movs	r1, #0
  4061a6:	e886 0021 	stmia.w	r6, {r0, r5}
  4061aa:	4608      	mov	r0, r1
  4061ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4061b0:	fab3 f183 	clz	r1, r3
  4061b4:	2900      	cmp	r1, #0
  4061b6:	f040 808e 	bne.w	4062d6 <__udivmoddi4+0x1ee>
  4061ba:	42ab      	cmp	r3, r5
  4061bc:	d302      	bcc.n	4061c4 <__udivmoddi4+0xdc>
  4061be:	4282      	cmp	r2, r0
  4061c0:	f200 80fa 	bhi.w	4063b8 <__udivmoddi4+0x2d0>
  4061c4:	1a84      	subs	r4, r0, r2
  4061c6:	eb65 0503 	sbc.w	r5, r5, r3
  4061ca:	2001      	movs	r0, #1
  4061cc:	46ac      	mov	ip, r5
  4061ce:	2e00      	cmp	r6, #0
  4061d0:	d03f      	beq.n	406252 <__udivmoddi4+0x16a>
  4061d2:	e886 1010 	stmia.w	r6, {r4, ip}
  4061d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4061da:	b912      	cbnz	r2, 4061e2 <__udivmoddi4+0xfa>
  4061dc:	2701      	movs	r7, #1
  4061de:	fbb7 f7f2 	udiv	r7, r7, r2
  4061e2:	fab7 fe87 	clz	lr, r7
  4061e6:	f1be 0f00 	cmp.w	lr, #0
  4061ea:	d134      	bne.n	406256 <__udivmoddi4+0x16e>
  4061ec:	1beb      	subs	r3, r5, r7
  4061ee:	0c3a      	lsrs	r2, r7, #16
  4061f0:	fa1f fc87 	uxth.w	ip, r7
  4061f4:	2101      	movs	r1, #1
  4061f6:	fbb3 f8f2 	udiv	r8, r3, r2
  4061fa:	0c25      	lsrs	r5, r4, #16
  4061fc:	fb02 3318 	mls	r3, r2, r8, r3
  406200:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  406204:	fb0c f308 	mul.w	r3, ip, r8
  406208:	42ab      	cmp	r3, r5
  40620a:	d907      	bls.n	40621c <__udivmoddi4+0x134>
  40620c:	19ed      	adds	r5, r5, r7
  40620e:	f108 30ff 	add.w	r0, r8, #4294967295
  406212:	d202      	bcs.n	40621a <__udivmoddi4+0x132>
  406214:	42ab      	cmp	r3, r5
  406216:	f200 80d1 	bhi.w	4063bc <__udivmoddi4+0x2d4>
  40621a:	4680      	mov	r8, r0
  40621c:	1aed      	subs	r5, r5, r3
  40621e:	b2a3      	uxth	r3, r4
  406220:	fbb5 f0f2 	udiv	r0, r5, r2
  406224:	fb02 5510 	mls	r5, r2, r0, r5
  406228:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  40622c:	fb0c fc00 	mul.w	ip, ip, r0
  406230:	45a4      	cmp	ip, r4
  406232:	d907      	bls.n	406244 <__udivmoddi4+0x15c>
  406234:	19e4      	adds	r4, r4, r7
  406236:	f100 33ff 	add.w	r3, r0, #4294967295
  40623a:	d202      	bcs.n	406242 <__udivmoddi4+0x15a>
  40623c:	45a4      	cmp	ip, r4
  40623e:	f200 80b8 	bhi.w	4063b2 <__udivmoddi4+0x2ca>
  406242:	4618      	mov	r0, r3
  406244:	eba4 040c 	sub.w	r4, r4, ip
  406248:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  40624c:	e79d      	b.n	40618a <__udivmoddi4+0xa2>
  40624e:	4631      	mov	r1, r6
  406250:	4630      	mov	r0, r6
  406252:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406256:	f1ce 0420 	rsb	r4, lr, #32
  40625a:	fa05 f30e 	lsl.w	r3, r5, lr
  40625e:	fa07 f70e 	lsl.w	r7, r7, lr
  406262:	fa20 f804 	lsr.w	r8, r0, r4
  406266:	0c3a      	lsrs	r2, r7, #16
  406268:	fa25 f404 	lsr.w	r4, r5, r4
  40626c:	ea48 0803 	orr.w	r8, r8, r3
  406270:	fbb4 f1f2 	udiv	r1, r4, r2
  406274:	ea4f 4518 	mov.w	r5, r8, lsr #16
  406278:	fb02 4411 	mls	r4, r2, r1, r4
  40627c:	fa1f fc87 	uxth.w	ip, r7
  406280:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  406284:	fb01 f30c 	mul.w	r3, r1, ip
  406288:	42ab      	cmp	r3, r5
  40628a:	fa00 f40e 	lsl.w	r4, r0, lr
  40628e:	d909      	bls.n	4062a4 <__udivmoddi4+0x1bc>
  406290:	19ed      	adds	r5, r5, r7
  406292:	f101 30ff 	add.w	r0, r1, #4294967295
  406296:	f080 808a 	bcs.w	4063ae <__udivmoddi4+0x2c6>
  40629a:	42ab      	cmp	r3, r5
  40629c:	f240 8087 	bls.w	4063ae <__udivmoddi4+0x2c6>
  4062a0:	3902      	subs	r1, #2
  4062a2:	443d      	add	r5, r7
  4062a4:	1aeb      	subs	r3, r5, r3
  4062a6:	fa1f f588 	uxth.w	r5, r8
  4062aa:	fbb3 f0f2 	udiv	r0, r3, r2
  4062ae:	fb02 3310 	mls	r3, r2, r0, r3
  4062b2:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  4062b6:	fb00 f30c 	mul.w	r3, r0, ip
  4062ba:	42ab      	cmp	r3, r5
  4062bc:	d907      	bls.n	4062ce <__udivmoddi4+0x1e6>
  4062be:	19ed      	adds	r5, r5, r7
  4062c0:	f100 38ff 	add.w	r8, r0, #4294967295
  4062c4:	d26f      	bcs.n	4063a6 <__udivmoddi4+0x2be>
  4062c6:	42ab      	cmp	r3, r5
  4062c8:	d96d      	bls.n	4063a6 <__udivmoddi4+0x2be>
  4062ca:	3802      	subs	r0, #2
  4062cc:	443d      	add	r5, r7
  4062ce:	1aeb      	subs	r3, r5, r3
  4062d0:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  4062d4:	e78f      	b.n	4061f6 <__udivmoddi4+0x10e>
  4062d6:	f1c1 0720 	rsb	r7, r1, #32
  4062da:	fa22 f807 	lsr.w	r8, r2, r7
  4062de:	408b      	lsls	r3, r1
  4062e0:	fa05 f401 	lsl.w	r4, r5, r1
  4062e4:	ea48 0303 	orr.w	r3, r8, r3
  4062e8:	fa20 fe07 	lsr.w	lr, r0, r7
  4062ec:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  4062f0:	40fd      	lsrs	r5, r7
  4062f2:	ea4e 0e04 	orr.w	lr, lr, r4
  4062f6:	fbb5 f9fc 	udiv	r9, r5, ip
  4062fa:	ea4f 441e 	mov.w	r4, lr, lsr #16
  4062fe:	fb0c 5519 	mls	r5, ip, r9, r5
  406302:	fa1f f883 	uxth.w	r8, r3
  406306:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  40630a:	fb09 f408 	mul.w	r4, r9, r8
  40630e:	42ac      	cmp	r4, r5
  406310:	fa02 f201 	lsl.w	r2, r2, r1
  406314:	fa00 fa01 	lsl.w	sl, r0, r1
  406318:	d908      	bls.n	40632c <__udivmoddi4+0x244>
  40631a:	18ed      	adds	r5, r5, r3
  40631c:	f109 30ff 	add.w	r0, r9, #4294967295
  406320:	d243      	bcs.n	4063aa <__udivmoddi4+0x2c2>
  406322:	42ac      	cmp	r4, r5
  406324:	d941      	bls.n	4063aa <__udivmoddi4+0x2c2>
  406326:	f1a9 0902 	sub.w	r9, r9, #2
  40632a:	441d      	add	r5, r3
  40632c:	1b2d      	subs	r5, r5, r4
  40632e:	fa1f fe8e 	uxth.w	lr, lr
  406332:	fbb5 f0fc 	udiv	r0, r5, ip
  406336:	fb0c 5510 	mls	r5, ip, r0, r5
  40633a:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  40633e:	fb00 f808 	mul.w	r8, r0, r8
  406342:	45a0      	cmp	r8, r4
  406344:	d907      	bls.n	406356 <__udivmoddi4+0x26e>
  406346:	18e4      	adds	r4, r4, r3
  406348:	f100 35ff 	add.w	r5, r0, #4294967295
  40634c:	d229      	bcs.n	4063a2 <__udivmoddi4+0x2ba>
  40634e:	45a0      	cmp	r8, r4
  406350:	d927      	bls.n	4063a2 <__udivmoddi4+0x2ba>
  406352:	3802      	subs	r0, #2
  406354:	441c      	add	r4, r3
  406356:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  40635a:	eba4 0408 	sub.w	r4, r4, r8
  40635e:	fba0 8902 	umull	r8, r9, r0, r2
  406362:	454c      	cmp	r4, r9
  406364:	46c6      	mov	lr, r8
  406366:	464d      	mov	r5, r9
  406368:	d315      	bcc.n	406396 <__udivmoddi4+0x2ae>
  40636a:	d012      	beq.n	406392 <__udivmoddi4+0x2aa>
  40636c:	b156      	cbz	r6, 406384 <__udivmoddi4+0x29c>
  40636e:	ebba 030e 	subs.w	r3, sl, lr
  406372:	eb64 0405 	sbc.w	r4, r4, r5
  406376:	fa04 f707 	lsl.w	r7, r4, r7
  40637a:	40cb      	lsrs	r3, r1
  40637c:	431f      	orrs	r7, r3
  40637e:	40cc      	lsrs	r4, r1
  406380:	6037      	str	r7, [r6, #0]
  406382:	6074      	str	r4, [r6, #4]
  406384:	2100      	movs	r1, #0
  406386:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40638a:	4618      	mov	r0, r3
  40638c:	e6f8      	b.n	406180 <__udivmoddi4+0x98>
  40638e:	4690      	mov	r8, r2
  406390:	e6e0      	b.n	406154 <__udivmoddi4+0x6c>
  406392:	45c2      	cmp	sl, r8
  406394:	d2ea      	bcs.n	40636c <__udivmoddi4+0x284>
  406396:	ebb8 0e02 	subs.w	lr, r8, r2
  40639a:	eb69 0503 	sbc.w	r5, r9, r3
  40639e:	3801      	subs	r0, #1
  4063a0:	e7e4      	b.n	40636c <__udivmoddi4+0x284>
  4063a2:	4628      	mov	r0, r5
  4063a4:	e7d7      	b.n	406356 <__udivmoddi4+0x26e>
  4063a6:	4640      	mov	r0, r8
  4063a8:	e791      	b.n	4062ce <__udivmoddi4+0x1e6>
  4063aa:	4681      	mov	r9, r0
  4063ac:	e7be      	b.n	40632c <__udivmoddi4+0x244>
  4063ae:	4601      	mov	r1, r0
  4063b0:	e778      	b.n	4062a4 <__udivmoddi4+0x1bc>
  4063b2:	3802      	subs	r0, #2
  4063b4:	443c      	add	r4, r7
  4063b6:	e745      	b.n	406244 <__udivmoddi4+0x15c>
  4063b8:	4608      	mov	r0, r1
  4063ba:	e708      	b.n	4061ce <__udivmoddi4+0xe6>
  4063bc:	f1a8 0802 	sub.w	r8, r8, #2
  4063c0:	443d      	add	r5, r7
  4063c2:	e72b      	b.n	40621c <__udivmoddi4+0x134>

004063c4 <__aeabi_idiv0>:
  4063c4:	4770      	bx	lr
  4063c6:	bf00      	nop

004063c8 <click_high>:
  4063c8:	0341 0341 0cc6 0cc6 19e9 19e9 2563 2563     A.A.........c%c%
  4063d8:	2f31 2f31 325b 325b 280b 280b 1279 1279     1/1/[2[2.(.(y.y.
  4063e8:	f782 f782 dd1b dd1b cc0a cc0a ca74 ca74     ............t.t.
  4063f8:	d529 d529 e864 e864 f944 f944 00f1 00f1     ).).d.d.D.D.....
  406408:	fe24 fe24 f696 f696 efbf efbf ecd8 ecd8     $.$.............
  406418:	ee5d ee5d f08f f08f edc4 edc4 e4d9 e4d9     ].].............
  406428:	dad0 dad0 d135 d135 cc06 cc06 d47b d47b     ....5.5.....{.{.
  406438:	eb7f eb7f 0a4f 0a4f 29f8 29f8 4123 4123     ....O.O..).)#A#A
  406448:	4717 4717 3aeb 3aeb 2532 2532 0f8a 0f8a     .G.G.:.:2%2%....
  406458:	045a 045a 04bd 04bd 0c70 0c70 147f 147f     Z.Z.....p.p.....
  406468:	16fc 16fc 143b 143b 0fb2 0fb2 0c9f 0c9f     ....;.;.........
  406478:	0a55 0a55 08fe 08fe 0bc4 0bc4 14b8 14b8     U.U.............
  406488:	1d07 1d07 214f 214f 2335 2335 1ea0 1ea0     ....O!O!5#5#....
  406498:	1054 1054 fccf fccf e780 e780 d3d4 d3d4     T.T.............
  4064a8:	c742 c742 c644 c644 cd6f cd6f db79 db79     B.B.D.D.o.o.y.y.
  4064b8:	e9ef e9ef f217 f217 f2bd f2bd ee68 ee68     ............h.h.
  4064c8:	e951 e951 e64c e64c e5ff e5ff e638 e638     Q.Q.L.L.....8.8.
  4064d8:	e411 e411 dcf2 dcf2 d451 d451 ce0a ce0a     ........Q.Q.....
  4064e8:	cd08 cd08 d764 d764 ef54 ef54 0efb 0efb     ....d.d.T.T.....
  4064f8:	2eb1 2eb1 4674 4674 4edc 4edc 457c 457c     ....tFtF.N.N|E|E
  406508:	3142 3142 1b5d 1b5d 0d2a 0d2a 0a7d 0a7d     B1B1].].*.*.}.}.
  406518:	0fe4 0fe4 17d2 17d2 1ba5 1ba5 1abf 1abf     ................
  406528:	1698 1698 12ad 12ad 0fc8 0fc8 0d98 0d98     ................
  406538:	0dcc 0dcc 13f0 13f0 1b70 1b70 1efa 1efa     ........p.p.....
  406548:	207c 207c 1e7e 1e7e 13d1 13d1 02d3 02d3     | | ~.~.........
  406558:	ef47 ef47 dbf3 dbf3 cd13 cd13 c87b c87b     G.G.........{.{.
  406568:	ccb3 ccb3 d734 d734 e434 e434 ec68 ec68     ....4.4.4.4.h.h.
  406578:	ee6a ee6a eb6c eb6c e746 e746 e43a e43a     j.j.l.l.F.F.:.:.
  406588:	e3b6 e3b6 e41c e41c e327 e327 dd42 dd42     ........'.'.B.B.
  406598:	d3cf d3cf cbbe cbbe c849 c849 ce80 ce80     ........I.I.....
  4065a8:	e285 e285 00bc 00bc 21a3 21a3 3d7a 3d7a     .........!.!z=z=
  4065b8:	4c85 4c85 4a1b 4a1b 39f4 39f4 2527 2527     .L.L.J.J.9.9'%'%
  4065c8:	1499 1499 0ecb 0ecb 118b 118b 18a0 18a0     ................
  4065d8:	1d19 1d19 1cfe 1cfe 197c 197c 15cd 15cd     ........|.|.....
  4065e8:	1338 1338 10f6 10f6 0f98 0f98 131a 131a     8.8.............
  4065f8:	19f1 19f1 1d8a 1d8a 1e7d 1e7d 1dbd 1dbd     ........}.}.....
  406608:	160e 160e 0745 0745 f553 f553 e290 e290     ....E.E.S.S.....
  406618:	d25a d25a ca5c ca5c cbf1 cbf1 d420 d420     Z.Z.\.\..... . .
  406628:	e0aa e0aa ea12 ea12 edfa edfa ecac ecac     ................
  406638:	e917 e917 e5db e5db e522 e522 e5e1 e5e1     ........".".....
  406648:	e5ab e5ab e186 e186 d92a d92a d0cc d0cc     ........*.*.....
  406658:	cba0 cba0 cdd0 cdd0 dcaf dcaf f6f3 f6f3     ................
  406668:	1611 1611 32f8 32f8 4603 4603 4919 4919     .....2.2.F.F.I.I
  406678:	3d43 3d43 2a3b 2a3b 18a0 18a0 0eae 0eae     C=C=;*;*........
  406688:	0ecf 0ecf 14cd 14cd 199b 199b 1a11 1a11     ................
  406698:	1723 1723 13ec 13ec 11e7 11e7 1043 1043     #.#.........C.C.
  4066a8:	0e9d 0e9d 0d49 0d49 0a88 0a88 03f0 03f0     ....I.I.........
  4066b8:	fafd fafd f256 f256 ec1a ec1a ea3f ea3f     ....V.V.....?.?.
  4066c8:	ecd1 ecd1 f1bb f1bb f670 f670 f8a4 f8a4     ........p.p.....
  4066d8:	f71c f71c f301 f301 ef0f ef0f ed82 ed82     ................
  4066e8:	eefe eefe f294 f294 f5ee f5ee f792 f792     ................
  4066f8:	f805 f805 f77c f77c f652 f652 f5a9 f5a9     ....|.|.R.R.....
  406708:	f652 f652 f888 f888 fc12 fc12 006b 006b     R.R.........k.k.
  406718:	04b6 04b6 07a2 07a2 0881 0881 07a9 07a9     ................
  406728:	065d 065d 058f 058f 0539 0539 0592 0592     ].].....9.9.....
  406738:	06b2 06b2 07e9 07e9 08d0 08d0 0980 0980     ................
  406748:	0998 0998 08d6 08d6 07cc 07cc 0722 0722     ............".".
  406758:	06d9 06d9 06b8 06b8 069d 069d 0644 0644     ............D.D.
  406768:	056a 056a 03c8 03c8 0181 0181 ff43 ff43     j.j.........C.C.
  406778:	fdc6 fdc6 fd5b fd5b fdc5 fdc5 fe8a fe8a     ....[.[.........
  406788:	ff33 ff33 ff8d ff8d ff63 ff63 fe74 fe74     3.3.....c.c.t.t.
  406798:	fd10 fd10 fbcc fbcc fac2 fac2 fa11 fa11     ................
  4067a8:	fa5e fa5e fb35 fb35 fbf2 fbf2 fc9c fc9c     ^.^.5.5.........
  4067b8:	fd12 fd12 fd23 fd23 fd0a fd0a fd31 fd31     ....#.#.....1.1.
  4067c8:	fdd7 fdd7 fea7 fea7 ff75 ff75 0054 0054     ........u.u.T.T.
  4067d8:	00e9 00e9 00e1 00e1 0075 0075 0041 0041     ........u.u.A.A.
  4067e8:	0071 0071 00c8 00c8 0167 0167 0225 0225     q.q.....g.g.%.%.
  4067f8:	025f 025f 0208 0208 0185 0185 00fc 00fc     _._.............
  406808:	0098 0098 009b 009b 010d 010d 01be 01be     ................
  406818:	026e 026e 030b 030b 0344 0344 02da 02da     n.n.....D.D.....
  406828:	01ee 01ee 00d8 00d8 0003 0003 ff8c ff8c     ................
  406838:	ff5f ff5f ff68 ff68 ff86 ff86 ffcc ffcc     _._.h.h.........
  406848:	0038 0038 008c 008c 00a3 00a3 00b5 00b5     8.8.............
  406858:	00be 00be 008e 008e 0031 0031 ffcc ffcc     ........1.1.....
  406868:	ff94 ff94 ff75 ff75 ff43 ff43 ff14 ff14     ....u.u.C.C.....
  406878:	ff33 ff33 ff99 ff99 fff8 fff8 0033 0033     3.3.........3.3.
  406888:	005c 005c 0069 0069 0028 0028 ff96 ff96     \.\.i.i.(.(.....
  406898:	fec9 fec9 fe1d fe1d fdbc fdbc fda1 fda1     ................
  4068a8:	fdcd fdcd fe29 fe29 fe6a fe6a fe70 fe70     ....).).j.j.p.p.
  4068b8:	fe56 fe56 fe37 fe37 fe39 fe39 fe87 fe87     V.V.7.7.9.9.....
  4068c8:	ff17 ff17 ffc0 ffc0 006a 006a 0108 0108     ........j.j.....
  4068d8:	0159 0159 0158 0158 0140 0140 0142 0142     Y.Y.X.X.@.@.B.B.
  4068e8:	0167 0167 019c 019c 01c6 01c6 01e4 01e4     g.g.............
  4068f8:	01e4 01e4 01b6 01b6 0177 0177 013c 013c     ........w.w.<.<.
  406908:	011a 011a 0110 0110 0107 0107 00cc 00cc     ................
  406918:	0055 0055 ffd8 ffd8 ff7d ff7d ff30 ff30     U.U.....}.}.0.0.
  406928:	ff0a ff0a ff2b ff2b ff5d ff5d ff66 ff66     ....+.+.].].f.f.
  406938:	ff43 ff43 ff16 ff16 fee8 fee8 fec8 fec8     C.C.............
  406948:	fecc fecc fee5 fee5 feeb feeb fedc fedc     ................
  406958:	fec6 fec6 fea2 fea2 fe77 fe77 fe69 fe69     ........w.w.i.i.
  406968:	fe6e fe6e fe8b fe8b fecf fecf ff1b ff1b     n.n.............
  406978:	ff55 ff55 ff98 ff98 ffd0 ffd0 0004 0004     U.U.............
  406988:	004c 004c 00a8 00a8 0103 0103 013d 013d     L.L.........=.=.
  406998:	0157 0157 0155 0155 0140 0140 0122 0122     W.W.U.U.@.@.".".
  4069a8:	0109 0109 00fa 00fa 00e7 00e7 00c2 00c2     ................
  4069b8:	0096 0096 0075 0075 0063 0063 0061 0061     ....u.u.c.c.a.a.
  4069c8:	006b 006b 006a 006a 0050 0050 0016 0016     k.k.j.j.P.P.....
  4069d8:	ffc0 ffc0 ff55 ff55 fefa fefa febb febb     ....U.U.........
  4069e8:	fe9b fe9b fe98 fe98 fea5 fea5 febc febc     ................
  4069f8:	fed1 fed1 fee8 fee8 ff02 ff02 ff1e ff1e     ................
  406a08:	ff44 ff44 ff64 ff64 ff8a ff8a ffad ffad     D.D.d.d.........
  406a18:	ffbd ffbd ffb8 ffb8 ff9c ff9c ff83 ff83     ................
  406a28:	ff75 ff75 ff7f ff7f ffa2 ffa2 ffd4 ffd4     u.u.............
  406a38:	0005 0005 0037 0037 0068 0068 00a2 00a2     ....7.7.h.h.....
  406a48:	00df 00df 0112 0112 0135 0135 014d 014d     ........5.5.M.M.
  406a58:	014f 014f 012d 012d 00ed 00ed 00a8 00a8     O.O.-.-.........
  406a68:	0068 0068 0033 0033 0014 0014 0011 0011     h.h.3.3.........
  406a78:	001f 001f 0029 0029 0027 0027 0024 0024     ....).).'.'.$.$.
  406a88:	0011 0011 fff0 fff0 ffcb ffcb ff95 ff95     ................
  406a98:	ff53 ff53 ff13 ff13 fed7 fed7 feb4 feb4     S.S.............
  406aa8:	feb0 feb0 fed1 fed1 ff0a ff0a ff58 ff58     ............X.X.
  406ab8:	ffa8 ffa8 ffe2 ffe2 0000 0000 0008 0008     ................
  406ac8:	fff6 fff6 ffd4 ffd4 ffbf ffbf ffb4 ffb4     ................
  406ad8:	ffaf ffaf ffb8 ffb8 ffda ffda 000d 000d     ................
  406ae8:	0052 0052 0096 0096 00cb 00cb 00e7 00e7     R.R.............
  406af8:	00f1 00f1 00e5 00e5 00cf 00cf 00b6 00b6     ................
  406b08:	009c 009c 008c 008c 0087 0087 0084 0084     ................
  406b18:	0079 0079 006a 006a 0049 0049 0021 0021     y.y.j.j.I.I.!.!.
  406b28:	fffb fffb ffdd ffdd ffcc ffcc ffba ffba     ................
  406b38:	ffa8 ffa8 ff9d ff9d ff9e ff9e ffa3 ffa3     ................
  406b48:	ffa9 ffa9 ffaa ffaa ffa5 ffa5 ff92 ff92     ................
  406b58:	ff74 ff74 ff52 ff52 ff33 ff33 ff28 ff28     t.t.R.R.3.3.(.(.
  406b68:	ff3a ff3a ff6a ff6a ffaf ffaf fffb fffb     :.:.j.j.........
  406b78:	0035 0035 005f 005f 006f 006f 0069 0069     5.5._._.o.o.i.i.
  406b88:	0065 0065 0062 0062 0060 0060 0058 0058     e.e.b.b.`.`.X.X.
  406b98:	0057 0057 0060 0060 0071 0071 0081 0081     W.W.`.`.q.q.....
  406ba8:	0083 0083 007f 007f 0079 0079 0071 0071     ........y.y.q.q.
  406bb8:	0071 0071 006e 006e 0063 0063 004c 004c     q.q.n.n.c.c.L.L.
  406bc8:	002c 002c fffc fffc ffca ffca ffad ffad     ,.,.............
  406bd8:	ffa6 ffa6 ffa9 ffa9 ffba ffba ffcc ffcc     ................
  406be8:	ffcd ffcd ffbe ffbe ff98 ff98 ff7b ff7b     ............{.{.
  406bf8:	ff71 ff71 ff82 ff82 ffb2 ffb2 fff3 fff3     q.q.............
  406c08:	0032 0032 0050 0050 004f 004f 0032 0032     2.2.P.P.O.O.2.2.
  406c18:	0008 0008 ffed ffed ffec ffec 0006 0006     ................
  406c28:	0035 0035 0061 0061 007e 007e 008e 008e     5.5.a.a.~.~.....
  406c38:	0086 0086 006a 006a 0046 0046 0028 0028     ....j.j.F.F.(.(.
  406c48:	000e 000e fffb fffb ffec ffec ffe8 ffe8     ................
  406c58:	ffed ffed fffc fffc 0008 0008 001a 001a     ................
  406c68:	002e 002e 003b 003b 0048 0048 004c 004c     ....;.;.H.H.L.L.
  406c78:	0044 0044 002e 002e 0006 0006 ffcd ffcd     D.D.............
  406c88:	ff95 ff95 ff6c ff6c ff61 ff61 ff6b ff6b     ....l.l.a.a.k.k.
  406c98:	ff8a ff8a ffb3 ffb3 ffd8 ffd8 fff1 fff1     ................
  406ca8:	fff0 fff0 ffd1 ffd1 ffb2 ffb2 ffa7 ffa7     ................
  406cb8:	ffb7 ffb7 ffdc ffdc 0018 0018 0048 0048     ............H.H.
  406cc8:	005e 005e 005c 005c 004f 004f 003c 003c     ^.^.\.\.O.O.<.<.
  406cd8:	0033 0033 0049 0049 006f 006f 008a 008a     3.3.I.I.o.o.....
  406ce8:	00a0 00a0 00ab 00ab 009c 009c 007a 007a     ............z.z.
  406cf8:	004a 004a 0025 0025 000c 000c 0008 0008     J.J.%.%.........
  406d08:	0003 0003 fff9 fff9 fff3 fff3 ffe1 ffe1     ................
  406d18:	ffd0 ffd0 ffc3 ffc3 ffc4 ffc4 ffc2 ffc2     ................
  406d28:	ffd1 ffd1 ffef ffef 000a 000a 000a 000a     ................
  406d38:	fff6 fff6 ffc5 ffc5 ff88 ff88 ff5d ff5d     ............].].
  406d48:	ff4e ff4e ff57 ff57 ff6e ff6e ff98 ff98     N.N.W.W.n.n.....
  406d58:	ffc1 ffc1 ffe0 ffe0 ffe8 ffe8 ffd8 ffd8     ................
  406d68:	ffba ffba ffad ffad ffb6 ffb6 ffd8 ffd8     ................
  406d78:	000e 000e 0044 0044 0070 0070 007f 007f     ....D.D.p.p.....
  406d88:	007d 007d 0068 0068 0046 0046 0034 0034     }.}.h.h.F.F.4.4.
  406d98:	002c 002c 0027 0027 0039 0039 005f 005f     ,.,.'.'.9.9._._.
  406da8:	0087 0087 00a7 00a7 00b5 00b5 00a7 00a7     ................
  406db8:	0087 0087 0061 0061 0038 0038 0006 0006     ....a.a.8.8.....
  406dc8:	ffd7 ffd7 ffaf ffaf ff95 ff95 ff8f ff8f     ................
  406dd8:	ff95 ff95 ff99 ff99 ffa3 ffa3 ffcc ffcc     ................
  406de8:	0005 0005 0036 0036 0052 0052 0045 0045     ....6.6.R.R.E.E.
  406df8:	000b 000b ffbc ffbc ff75 ff75 ff38 ff38     ........u.u.8.8.
  406e08:	ff1a ff1a ff31 ff31 ff72 ff72 ffc2 ffc2     ....1.1.r.r.....
  406e18:	000d 000d 002f 002f 001e 001e 0001 0001     ...././.........
  406e28:	ffdb ffdb ffc5 ffc5 ffc9 ffc9 ffec ffec     ................
  406e38:	0015 0015 0037 0037 004d 004d 0046 0046     ....7.7.M.M.F.F.
  406e48:	002c 002c 0020 0020 001c 001c 0013 0013     ,.,. . .........
  406e58:	001f 001f 003a 003a 0062 0062 0079 0079     ....:.:.b.b.y.y.
  406e68:	0085 0085 007e 007e 006a 006a 0065 0065     ....~.~.j.j.e.e.
  406e78:	0066 0066 0060 0060 0048 0048 0026 0026     f.f.`.`.H.H.&.&.
  406e88:	fffd fffd ffd2 ffd2 ffb1 ffb1 ff90 ff90     ................
  406e98:	ff75 ff75 ff85 ff85 ffb4 ffb4 ffea ffea     u.u.............
  406ea8:	0023 0023 003d 003d 0021 0021 ffe6 ffe6     #.#.=.=.!.!.....
  406eb8:	ffa0 ffa0 ff53 ff53 ff17 ff17 ff0a ff0a     ....S.S.........
  406ec8:	ff30 ff30 ff6d ff6d ffbb ffbb ffef ffef     0.0.m.m.........
  406ed8:	fffc fffc fff7 fff7 ffed ffed ffe3 ffe3     ................
  406ee8:	ffe5 ffe5 fffc fffc 001e 001e 002f 002f     ...........././.
  406ef8:	0032 0032 001e 001e fffe fffe fff1 fff1     2.2.............
  406f08:	0003 0003 001d 001d 0046 0046 0078 0078     ........F.F.x.x.
  406f18:	00a5 00a5 00b9 00b9 00c0 00c0 00b4 00b4     ................
  406f28:	0093 0093 0081 0081 007f 007f 007d 007d     ............}.}.
  406f38:	0068 0068 0046 0046 0013 0013 ffdc ffdc     h.h.F.F.........
  406f48:	ffae ffae ff87 ff87 ff68 ff68 ff65 ff65     ........h.h.e.e.
  406f58:	ff7b ff7b ff9b ff9b ffc2 ffc2 ffdf ffdf     {.{.............
  406f68:	ffe3 ffe3 ffd2 ffd2 ffb5 ffb5 ff8a ff8a     ................
  406f78:	ff63 ff63 ff50 ff50 ff5e ff5e ff77 ff77     c.c.P.P.^.^.w.w.
  406f88:	ffa4 ffa4 ffdd ffdd fffd fffd 000c 000c     ................
  406f98:	001a 001a 0021 0021 0026 0026 0037 0037     ....!.!.&.&.7.7.
  406fa8:	0052 0052 0061 0061 005f 005f 004f 004f     R.R.a.a._._.O.O.
  406fb8:	0029 0029 0006 0006 fff6 fff6 ffef ffef     ).).............
  406fc8:	fffe fffe 0023 0023 0049 0049 0062 0062     ....#.#.I.I.b.b.
  406fd8:	007e 007e 0090 0090 0096 0096 0097 0097     ~.~.............
  406fe8:	009e 009e 009e 009e 0084 0084 0056 0056     ............V.V.
  406ff8:	001b 001b ffda ffda ffaa ffaa ff99 ff99     ................
  407008:	ff99 ff99 ffb0 ffb0 ffc2 ffc2 ffce ffce     ................
  407018:	ffcf ffcf ffc9 ffc9 ffb8 ffb8 ffa2 ffa2     ................
  407028:	ff8b ff8b ff76 ff76 ff64 ff64 ff57 ff57     ....v.v.d.d.W.W.
  407038:	ff5d ff5d ff6f ff6f ff93 ff93 ffcd ffcd     ].].o.o.........
  407048:	000a 000a 0040 0040 0069 0069 007b 007b     ....@.@.i.i.{.{.
  407058:	006f 006f 005b 005b 004c 004c 003b 003b     o.o.[.[.L.L.;.;.
  407068:	0031 0031 0033 0033 0030 0030 0031 0031     1.1.3.3.0.0.1.1.
  407078:	0039 0039 0037 0037 0039 0039 003a 003a     9.9.7.7.9.9.:.:.
  407088:	0031 0031 0015 0015 fff4 fff4 ffdb ffdb     1.1.............
  407098:	ffcc ffcc ffd6 ffd6 fff7 fff7 0027 0027     ............'.'.
  4070a8:	0050 0050 0061 0061 0059 0059 0034 0034     P.P.a.a.Y.Y.4.4.
  4070b8:	0003 0003 ffe1 ffe1 ffda ffda ffe5 ffe5     ................
  4070c8:	fff5 fff5 0001 0001 0000 0000 fff8 fff8     ................
  4070d8:	ffec ffec ffdf ffdf ffe2 ffe2 ffe6 ffe6     ................
  4070e8:	ffeb ffeb ffe6 ffe6 ffce ffce ffae ffae     ................
  4070f8:	ff8f ff8f ff8a ff8a ffab ffab ffe0 ffe0     ................
  407108:	0019 0019 004b 004b 0064 0064 0063 0063     ....K.K.d.d.c.c.
  407118:	004c 004c 002e 002e 0018 0018 000d 000d     L.L.............
  407128:	000e 000e 0017 0017 001e 001e 0026 0026     ............&.&.
  407138:	002a 002a 0036 0036 003e 003e 0042 0042     *.*.6.6.>.>.B.B.
  407148:	003c 003c 002c 002c 000f 000f ffe7 ffe7     <.<.,.,.........
  407158:	ffc8 ffc8 ffbb ffbb ffc4 ffc4 ffcb ffcb     ................
  407168:	ffd0 ffd0 ffcd ffcd ffc7 ffc7 ffc4 ffc4     ................
  407178:	ffcb ffcb ffe4 ffe4 fffb fffb 0007 0007     ................
  407188:	0006 0006 fff8 fff8 ffe8 ffe8 ffdb ffdb     ................
  407198:	ffdd ffdd ffee ffee fffd fffd 000c 000c     ................
  4071a8:	000d 000d 0004 0004 fff6 fff6 fffa fffa     ................
  4071b8:	0010 0010 0034 0034 0052 0052 006b 006b     ....4.4.R.R.k.k.
  4071c8:	0076 0076 0061 0061 0037 0037 0012 0012     v.v.a.a.7.7.....
  4071d8:	fffc fffc fff4 fff4 0000 0000 000b 000b     ................
  4071e8:	000b 000b fffc fffc ffea ffea ffd9 ffd9     ................
  4071f8:	ffd7 ffd7 ffe1 ffe1 ffe0 ffe0 ffd9 ffd9     ................
  407208:	ffc1 ffc1 ff94 ff94 ff64 ff64 ff53 ff53     ........d.d.S.S.
  407218:	ff69 ff69 ff95 ff95 ffd2 ffd2 0004 0004     i.i.............
  407228:	001e 001e 001c 001c 0013 0013 000b 000b     ................
  407238:	000b 000b 001d 001d 0038 0038 0052 0052     ........8.8.R.R.
  407248:	0059 0059 0052 0052 0041 0041 002e 002e     Y.Y.R.R.A.A.....
  407258:	0024 0024 001b 001b 000f 000f 0006 0006     $.$.............
  407268:	fffc fffc ffff ffff 0005 0005 000d 000d     ................
  407278:	0015 0015 001a 001a 0018 0018 000b 000b     ................
  407288:	fff4 fff4 ffdd ffdd ffd0 ffd0 ffcb ffcb     ................
  407298:	ffd2 ffd2 ffdd ffdd ffde ffde ffdb ffdb     ................
  4072a8:	ffd7 ffd7 ffd2 ffd2 ffdd ffdd ffee ffee     ................
  4072b8:	fffa fffa fffe fffe ffec ffec ffc4 ffc4     ................
  4072c8:	ff8a ff8a ff5e ff5e ff4f ff4f ff5f ff5f     ....^.^.O.O._._.
  4072d8:	ff83 ff83 ffb1 ffb1 ffdc ffdc fffe fffe     ................
  4072e8:	0015 0015 002d 002d 004b 004b 0069 0069     ....-.-.K.K.i.i.
  4072f8:	0089 0089 009e 009e 009e 009e 008b 008b     ................
  407308:	0076 0076 005c 005c 0047 0047 0039 0039     v.v.\.\.G.G.9.9.
  407318:	0028 0028 0012 0012 0008 0008 0000 0000     (.(.............
  407328:	fffb fffb 0000 0000 000a 000a 000e 000e     ................
  407338:	0008 0008 fff9 fff9 ffd9 ffd9 ffb0 ffb0     ................
  407348:	ff8c ff8c ff7b ff7b ff7f ff7f ff9d ff9d     ....{.{.........
  407358:	ffbd ffbd ffd5 ffd5 ffe3 ffe3 ffea ffea     ................
  407368:	ffef ffef fff7 fff7 000c 000c 001e 001e     ................
  407378:	002c 002c 0029 0029 0004 0004 ffcf ffcf     ,.,.).).........
  407388:	ffa1 ffa1 ff85 ff85 ff83 ff83 ff92 ff92     ................
  407398:	ffbd ffbd ffeb ffeb 0015 0015 003b 003b     ............;.;.
  4073a8:	005a 005a 006d 006d 0079 0079 0081 0081     Z.Z.m.m.y.y.....
  4073b8:	0081 0081 007d 007d 0071 0071 0064 0064     ....}.}.q.q.d.d.
  4073c8:	0059 0059 004d 004d 0037 0037 001b 001b     Y.Y.M.M.7.7.....
  4073d8:	000a 000a fffc fffc fffd fffd 0008 0008     ................
  4073e8:	0018 0018 001f 001f 001b 001b 0004 0004     ................
  4073f8:	ffd0 ffd0 ff9c ff9c ff63 ff63 ff46 ff46     ........c.c.F.F.
  407408:	ff41 ff41 ff5c ff5c ff93 ff93 ffc4 ffc4     A.A.\.\.........
  407418:	ffe7 ffe7 ffef ffef ffe9 ffe9 ffdf ffdf     ................
  407428:	ffd7 ffd7 ffdc ffdc fff1 fff1 0006 0006     ................
  407438:	000f 000f 0011 0011 0006 0006 fffb fffb     ................
  407448:	fff2 fff2 fffd fffd 0012 0012 0031 0031     ............1.1.
  407458:	0052 0052 0075 0075 008d 008d 0092 0092     R.R.u.u.........
  407468:	008f 008f 0086 0086 0080 0080 007c 007c     ............|.|.
  407478:	0077 0077 006b 006b 0063 0063 005b 005b     w.w.k.k.c.c.[.[.
  407488:	0045 0045 0026 0026 0009 0009 ffea ffea     E.E.&.&.........
  407498:	ffd6 ffd6 ffcd ffcd ffcb ffcb ffd8 ffd8     ................
  4074a8:	ffde ffde ffdf ffdf ffd1 ffd1 ffaa ffaa     ................
  4074b8:	ff82 ff82 ff63 ff63 ff54 ff54 ff5e ff5e     ....c.c.T.T.^.^.
  4074c8:	ff83 ff83 ffb4 ffb4 ffda ffda fff6 fff6     ................
  4074d8:	fffd fffd ffee ffee ffe0 ffe0 ffdc ffdc     ................
  4074e8:	ffe4 ffe4 fff2 fff2 0004 0004 0012 0012     ................
  4074f8:	000b 000b fffe fffe ffeb ffeb ffe0 ffe0     ................
  407508:	ffdf ffdf fff2 fff2 000e 000e 002b 002b     ............+.+.
  407518:	0041 0041 004d 004d 0049 0049 0044 0044     A.A.M.M.I.I.D.D.
  407528:	0047 0047 0053 0053 0069 0069 007b 007b     G.G.S.S.i.i.{.{.
  407538:	008c 008c 008f 008f 007e 007e 005c 005c     ........~.~.\.\.
  407548:	0039 0039 001b 001b 0006 0006 0003 0003     9.9.............
  407558:	000a 000a 0015 0015 0011 0011 fffd fffd     ................
  407568:	ffdd ffdd ffa6 ffa6 ff74 ff74 ff50 ff50     ........t.t.P.P.
  407578:	ff46 ff46 ff4a ff4a ff61 ff61 ff85 ff85     F.F.J.J.a.a.....
  407588:	ffa5 ffa5 ffbd ffbd ffcd ffcd ffcf ffcf     ................
  407598:	ffce ffce ffcf ffcf ffda ffda ffe3 ffe3     ................
  4075a8:	fff4 fff4 0001 0001 0008 0008 0010 0010     ................
  4075b8:	001b 001b 002b 002b 0042 0042 005b 005b     ....+.+.B.B.[.[.
  4075c8:	0067 0067 006f 006f 0061 0061 003f 003f     g.g.o.o.a.a.?.?.
  4075d8:	001a 001a fffc fffc fff0 fff0 fffc fffc     ................
  4075e8:	0015 0015 0030 0030 0043 0043 0046 0046     ....0.0.C.C.F.F.
  4075f8:	003d 003d 0023 0023 000f 000f fffe fffe     =.=.#.#.........
  407608:	fff6 fff6 ffff ffff 000f 000f 0014 0014     ................
  407618:	000d 000d 0001 0001 ffe7 ffe7 ffcc ffcc     ................
  407628:	ffb0 ffb0 ff97 ff97 ff8b ff8b ff89 ff89     ................
  407638:	ff8e ff8e ff9f ff9f ffaf ffaf ffbf ffbf     ................
  407648:	ffcf ffcf ffd8 ffd8 ffdf ffdf ffe2 ffe2     ................
  407658:	ffed ffed fff2 fff2 fff3 fff3 fff3 fff3     ................
  407668:	ffee ffee ffeb ffeb ffe6 ffe6 fff6 fff6     ................
  407678:	000e 000e 0032 0032 0057 0057 006e 006e     ....2.2.W.W.n.n.
  407688:	0069 0069 0051 0051 002a 002a ffff ffff     i.i.Q.Q.*.*.....
  407698:	ffdf ffdf ffd6 ffd6 ffe5 ffe5 fff9 fff9     ................
  4076a8:	000f 000f 0019 0019 0017 0017 0005 0005     ................
  4076b8:	fff2 fff2 fff1 fff1 fff1 fff1 0003 0003     ................
  4076c8:	001b 001b 0023 0023 001b 001b 000e 000e     ....#.#.........
  4076d8:	fffb fffb ffe3 ffe3 ffd4 ffd4 ffd3 ffd3     ................
  4076e8:	ffde ffde ffea ffea fff2 fff2 ffef ffef     ................
  4076f8:	ffe2 ffe2 ffd4 ffd4 ffc9 ffc9 ffca ffca     ................
  407708:	ffd3 ffd3 ffe1 ffe1 fff3 fff3 fffd fffd     ................
  407718:	fffa fffa ffef ffef ffda ffda ffc7 ffc7     ................
  407728:	ffb6 ffb6 ffb4 ffb4 ffc1 ffc1 ffda ffda     ................
  407738:	fffb fffb 0021 0021 0036 0036 0037 0037     ....!.!.6.6.7.7.
  407748:	002d 002d 0021 0021 000d 000d fffb fffb     -.-.!.!.........
  407758:	fff7 fff7 fffb fffb 0008 0008 001b 001b     ................
  407768:	002a 002a 0030 0030 0030 0030 002b 002b     *.*.0.0.0.0.+.+.
  407778:	002d 002d 0031 0031 003c 003c 003e 003e     -.-.1.1.<.<.>.>.
  407788:	0037 0037 0029 0029 001b 001b 0001 0001     7.7.).).........
  407798:	ffe8 ffe8 ffdc ffdc ffd6 ffd6 ffd8 ffd8     ................
  4077a8:	ffe3 ffe3 ffed ffed ffef ffef ffe7 ffe7     ................
  4077b8:	ffd4 ffd4 ffbf ffbf ffae ffae ffa7 ffa7     ................
  4077c8:	ffb0 ffb0 ffc6 ffc6 ffe4 ffe4 fffa fffa     ................
  4077d8:	0004 0004 fffb fffb ffe0 ffe0 ffbc ffbc     ................
  4077e8:	ffa9 ffa9 ffab ffab ffc0 ffc0 ffee ffee     ................
  4077f8:	001c 001c 0040 0040 004a 004a 004a 004a     ....@.@.J.J.J.J.
  407808:	0036 0036 001b 001b 0009 0009 0007 0007     6.6.............
  407818:	000e 000e 001e 001e 0029 0029 002b 002b     ........).).+.+.
  407828:	0024 0024 0017 0017 000f 000f 0014 0014     $.$.............
  407838:	0025 0025 0039 0039 0042 0042 0048 0048     %.%.9.9.B.B.H.H.
  407848:	0043 0043 0030 0030 0019 0019 0006 0006     C.C.0.0.........
  407858:	ffff ffff fffd fffd 0009 0009 0015 0015     ................
  407868:	0018 0018 000e 000e ffef ffef ffcc ffcc     ................
  407878:	ffaa ffaa ffa2 ffa2 ffa8 ffa8 ffc0 ffc0     ................
  407888:	ffe9 ffe9 000c 000c 0019 0019 0011 0011     ................
  407898:	ffec ffec ffb3 ffb3 ff84 ff84 ff72 ff72     ............r.r.
  4078a8:	ff74 ff74 ff92 ff92 ffc0 ffc0 ffed ffed     t.t.............
  4078b8:	0012 0012 002a 002a 0031 0031 0027 0027     ....*.*.1.1.'.'.
  4078c8:	0022 0022 0026 0026 0031 0031 003c 003c     ".".&.&.1.1.<.<.
  4078d8:	004a 004a 0044 0044 0033 0033 0026 0026     J.J.D.D.3.3.&.&.
  4078e8:	001c 001c 0020 0020 002b 002b 003e 003e     .... . .+.+.>.>.
  4078f8:	004a 004a 0053 0053 004e 004e 003b 003b     J.J.S.S.N.N.;.;.
  407908:	0020 0020 0009 0009 fff7 fff7 fff7 fff7      . .............
  407918:	000c 000c 0027 0027 003d 003d 0042 0042     ....'.'.=.=.B.B.
  407928:	002c 002c fff8 fff8 ffc4 ffc4 ff9c ff9c     ,.,.............
  407938:	ff8b ff8b ff95 ff95 ffb8 ffb8 ffe4 ffe4     ................
  407948:	000b 000b 001d 001d 0007 0007 ffdc ffdc     ................
  407958:	ffac ffac ff8e ff8e ff80 ff80 ff8d ff8d     ................
  407968:	ffa3 ffa3 ffbf ffbf ffcf ffcf ffd5 ffd5     ................
  407978:	ffd1 ffd1 ffcb ffcb ffd6 ffd6 fff5 fff5     ................
  407988:	001e 001e 0047 0047 0065 0065 006e 006e     ....G.G.e.e.n.n.
  407998:	005d 005d 0048 0048 002b 002b 0020 0020     ].].H.H.+.+. . .
  4079a8:	0026 0026 0035 0035 0049 0049 005e 005e     &.&.5.5.I.I.^.^.
  4079b8:	0065 0065 005b 005b 0040 0040 0028 0028     e.e.[.[.@.@.(.(.
  4079c8:	001a 001a 0019 0019 002a 002a 0043 0043     ........*.*.C.C.
  4079d8:	0057 0057 005a 005a 003a 003a fffd fffd     W.W.Z.Z.:.:.....
  4079e8:	ffb6 ffb6 ff7b ff7b ff5c ff5c ff5f ff5f     ....{.{.\.\._._.
  4079f8:	ff82 ff82 ffaf ffaf ffdd ffdd fff7 fff7     ................
  407a08:	ffeb ffeb ffc8 ffc8 ffa3 ffa3 ff89 ff89     ................
  407a18:	ff87 ff87 ff8b ff8b ffa3 ffa3 ffb9 ffb9     ................
  407a28:	ffc8 ffc8 ffce ffce ffcf ffcf ffd5 ffd5     ................
  407a38:	ffec ffec 001d 001d 005c 005c 0094 0094     ........\.\.....
  407a48:	00b3 00b3 00b7 00b7 009d 009d 0079 0079     ............y.y.
  407a58:	0055 0055 0036 0036 002b 002b 0030 0030     U.U.6.6.+.+.0.0.
  407a68:	0037 0037 0042 0042 0049 0049 0045 0045     7.7.B.B.I.I.E.E.
  407a78:	0032 0032 0019 0019 000e 000e 0005 0005     2.2.............
  407a88:	0006 0006 0017 0017 002d 002d 0033 0033     ........-.-.3.3.
  407a98:	0020 0020 fffa fffa ffbf ffbf ff88 ff88      . .............
  407aa8:	ff5f ff5f ff4f ff4f ff5b ff5b ff7f ff7f     _._.O.O.[.[.....
  407ab8:	ffb3 ffb3 ffd8 ffd8 ffee ffee ffea ffea     ................
  407ac8:	ffdd ffdd ffd0 ffd0 ffc2 ffc2 ffbc ffbc     ................
  407ad8:	ffbd ffbd ffc3 ffc3 ffc8 ffc8 ffcb ffcb     ................
  407ae8:	ffcd ffcd ffd5 ffd5 ffeb ffeb 0018 0018     ................
  407af8:	0052 0052 008f 008f 00bc 00bc 00c3 00c3     R.R.............
  407b08:	00af 00af 0086 0086 005e 005e 003b 003b     ........^.^.;.;.
  407b18:	0022 0022 001c 001c 0028 0028 002e 002e     ".".....(.(.....
  407b28:	0034 0034 0036 0036 002d 002d 0016 0016     4.4.6.6.-.-.....
  407b38:	000a 000a 0005 0005 000a 000a 001d 001d     ................
  407b48:	002c 002c 0033 0033 0022 0022 000b 000b     ,.,.3.3.".".....
  407b58:	ffe3 ffe3 ffb7 ffb7 ff97 ff97 ff82 ff82     ................
  407b68:	ff7a ff7a ff7c ff7c ff82 ff82 ff8d ff8d     z.z.|.|.........
  407b78:	ff99 ff99 ffac ffac ffc4 ffc4 ffda ffda     ................
  407b88:	ffe6 ffe6 ffe0 ffe0 ffd0 ffd0 ffb9 ffb9     ................
  407b98:	ff9a ff9a ff8a ff8a ff8a ff8a ffa1 ffa1     ................
  407ba8:	ffd0 ffd0 000e 000e 004c 004c 0084 0084     ........L.L.....
  407bb8:	00af 00af 00bf 00bf 00ba 00ba 00a8 00a8     ................
  407bc8:	008e 008e 0075 0075 0060 0060 0050 0050     ....u.u.`.`.P.P.
  407bd8:	0045 0045 0043 0043 0043 0043 0043 0043     E.E.C.C.C.C.C.C.
  407be8:	0040 0040 003c 003c 0038 0038 0036 0036     @.@.<.<.8.8.6.6.
  407bf8:	002c 002c 0025 0025 0015 0015 fff8 fff8     ,.,.%.%.........
  407c08:	ffda ffda ffb6 ffb6 ff99 ff99 ff87 ff87     ................
  407c18:	ff7f ff7f ff77 ff77 ff75 ff75 ff6f ff6f     ....w.w.u.u.o.o.
  407c28:	ff64 ff64 ff5c ff5c ff5f ff5f ff71 ff71     d.d.\.\._._.q.q.
  407c38:	ff97 ff97 ffbd ffbd ffd8 ffd8 ffe0 ffe0     ................
  407c48:	ffcb ffcb ffa8 ffa8 ff90 ff90 ff8d ff8d     ................
  407c58:	ffaa ffaa ffdc ffdc 0020 0020 005f 005f     ........ . ._._.
  407c68:	0090 0090 00af 00af 00c2 00c2 00be 00be     ................
  407c78:	00b7 00b7 00b2 00b2 00b1 00b1 00b1 00b1     ................
  407c88:	00a9 00a9 0091 0091 006e 006e 0049 0049     ........n.n.I.I.
  407c98:	0026 0026 0014 0014 000f 000f 0012 0012     &.&.............
  407ca8:	0012 0012 0014 0014 000c 000c fffc fffc     ................
  407cb8:	ffe5 ffe5 ffc4 ffc4 ffab ffab ff95 ff95     ................
  407cc8:	ff85 ff85 ff80 ff80 ff7d ff7d ff73 ff73     ........}.}.s.s.
  407cd8:	ff63 ff63 ff5e ff5e ff58 ff58 ff57 ff57     c.c.^.^.X.X.W.W.
  407ce8:	ff6f ff6f ff97 ff97 ffc7 ffc7 fff7 fff7     o.o.............
  407cf8:	0012 0012 0013 0013 0000 0000 ffdd ffdd     ................
  407d08:	ffbe ffbe ffaf ffaf ffb7 ffb7 ffd8 ffd8     ................
  407d18:	fffa fffa 001f 001f 003b 003b 0052 0052     ........;.;.R.R.
  407d28:	0062 0062 006f 006f 007b 007b 007a 007a     b.b.o.o.{.{.z.z.
  407d38:	007b 007b 007f 007f 007e 007e 006f 006f     {.{.....~.~.o.o.
  407d48:	0059 0059 003e 003e 002c 002c 0023 0023     Y.Y.>.>.,.,.#.#.
  407d58:	0025 0025 0031 0031 003c 003c 004e 004e     %.%.1.1.<.<.N.N.
  407d68:	005a 005a 0062 0062 005d 005d 0048 0048     Z.Z.b.b.].].H.H.
  407d78:	0028 0028 0003 0003 ffdc ffdc ffc2 ffc2     (.(.............
  407d88:	ffb6 ffb6 ffaf ffaf ffa8 ffa8 ffa3 ffa3     ................
  407d98:	ff9b ff9b ff8c ff8c ff89 ff89 ff8f ff8f     ................
  407da8:	ffa1 ffa1 ffb5 ffb5 ffc7 ffc7 ffcc ffcc     ................
  407db8:	ffb8 ffb8 ffa4 ffa4 ff82 ff82 ff70 ff70     ............p.p.
  407dc8:	ff77 ff77 ff8f ff8f ffb9 ffb9 ffe6 ffe6     w.w.............
  407dd8:	000b 000b 0022 0022 0035 0035 003f 003f     ....".".5.5.?.?.
  407de8:	0048 0048 0052 0052 0069 0069 0080 0080     H.H.R.R.i.i.....
  407df8:	009b 009b 00ab 00ab 00ae 00ae 009f 009f     ................
  407e08:	008c 008c 007f 007f 0074 0074 0075 0075     ........t.t.u.u.
  407e18:	007f 007f 0087 0087 008b 008b 008d 008d     ................
  407e28:	0087 0087 006d 006d 0051 0051 002e 002e     ....m.m.Q.Q.....
  407e38:	000d 000d fff0 fff0 ffd6 ffd6 ffbf ffbf     ................
  407e48:	ffa8 ffa8 ff91 ff91 ff83 ff83 ff7d ff7d     ............}.}.
  407e58:	ff8b ff8b ff9d ff9d ffb4 ffb4 ffc4 ffc4     ................
  407e68:	ffc3 ffc3 ffb0 ffb0 ff93 ff93 ff78 ff78     ............x.x.
  407e78:	ff60 ff60 ff59 ff59 ff66 ff66 ff7e ff7e     `.`.Y.Y.f.f.~.~.
  407e88:	ff9c ff9c ffba ffba ffcc ffcc ffdc ffdc     ................
  407e98:	ffea ffea fffc fffc 0011 0011 0029 0029     ............).).
  407ea8:	0043 0043 0053 0053 006c 006c 0075 0075     C.C.S.S.l.l.u.u.
  407eb8:	0070 0070 0066 0066 0061 0061 0067 0067     p.p.f.f.a.a.g.g.
  407ec8:	0074 0074 0087 0087 009f 009f 00b5 00b5     t.t.............
  407ed8:	00bb 00bb 00ba 00ba 00b0 00b0 009c 009c     ................
  407ee8:	007c 007c 0054 0054 0035 0035 0011 0011     |.|.T.T.5.5.....
  407ef8:	fff2 fff2 ffcf ffcf ffb6 ffb6 ffa1 ffa1     ................
  407f08:	ff9a ff9a ff9f ff9f ffbd ffbd ffd7 ffd7     ................
  407f18:	ffeb ffeb fff9 fff9 ffeb ffeb ffce ffce     ................
  407f28:	ffa8 ffa8 ff8a ff8a ff75 ff75 ff75 ff75     ........u.u.u.u.
  407f38:	ff86 ff86 ff9f ff9f ffae ffae ffb7 ffb7     ................
  407f48:	ffb6 ffb6 ffb0 ffb0 ffb4 ffb4 ffbe ffbe     ................
  407f58:	ffce ffce ffe0 ffe0 ffe9 ffe9 ffee ffee     ................
  407f68:	ffee ffee fff1 fff1 fff8 fff8 0005 0005     ................
  407f78:	001e 001e 003a 003a 0061 0061 0081 0081     ....:.:.a.a.....
  407f88:	008f 008f 0094 0094 0091 0091 008f 008f     ................
  407f98:	0094 0094 0093 0093 008f 008f 0086 0086     ................
  407fa8:	006e 006e 0054 0054 0030 0030 000a 000a     n.n.T.T.0.0.....
  407fb8:	fff1 fff1 ffe0 ffe0 ffdf ffdf ffea ffea     ................
  407fc8:	fffd fffd 0010 0010 000d 000d ffff ffff     ................
  407fd8:	ffe7 ffe7 ffc4 ffc4 ffa9 ffa9 ff9c ff9c     ................
  407fe8:	ff99 ff99 ff9d ff9d ffa8 ffa8 ffae ffae     ................
  407ff8:	ffaa ffaa ffa6 ffa6 ff9e ff9e ff96 ff96     ................
  408008:	ff94 ff94 ff9e ff9e ffa8 ffa8 ffaf ffaf     ................
  408018:	ffb0 ffb0 ffaf ffaf ffb0 ffb0 ffbc ffbc     ................
  408028:	ffd1 ffd1 fff2 fff2 001c 001c 0048 0048     ............H.H.
  408038:	0069 0069 007c 007c 0080 0080 007f 007f     i.i.|.|.........
  408048:	007a 007a 007d 007d 0086 0086 008a 008a     z.z.}.}.........
  408058:	0087 0087 0085 0085 0077 0077 006d 006d     ........w.w.m.m.
  408068:	0058 0058 003f 003f 0023 0023 0009 0009     X.X.?.?.#.#.....
  408078:	fff5 fff5 ffe5 ffe5 ffdc ffdc ffd8 ffd8     ................
  408088:	ffcf ffcf ffc9 ffc9 ffc2 ffc2 ffbe ffbe     ................
  408098:	ffbc ffbc ffbd ffbd ffc1 ffc1 ffc2 ffc2     ................
  4080a8:	ffc5 ffc5 ffc4 ffc4 ffbc ffbc ffab ffab     ................
  4080b8:	ff9d ff9d ff92 ff92 ff95 ff95 ffa7 ffa7     ................
  4080c8:	ffbe ffbe ffd5 ffd5 ffe1 ffe1 ffde ffde     ................
  4080d8:	ffd6 ffd6 ffc8 ffc8 ffc6 ffc6 ffcb ffcb     ................
  4080e8:	ffe0 ffe0 ffff ffff 0024 0024 0049 0049     ........$.$.I.I.
  4080f8:	005e 005e 0067 0067 0069 0069 0068 0068     ^.^.g.g.i.i.h.h.
  408108:	006c 006c 007a 007a 008a 008a 0091 0091     l.l.z.z.........
  408118:	008e 008e 0076 0076 0058 0058 002e 002e     ....v.v.X.X.....
  408128:	0008 0008 ffe9 ffe9 ffde ffde ffe0 ffe0     ................
  408138:	ffe5 ffe5 ffe8 ffe8 ffe3 ffe3 ffcf ffcf     ................
  408148:	ffbb ffbb ffb5 ffb5 ffb7 ffb7 ffce ffce     ................
  408158:	ffe6 ffe6 fff8 fff8 fffe fffe fff1 fff1     ................
  408168:	ffe0 ffe0 ffc7 ffc7 ffb3 ffb3 ffac ffac     ................
  408178:	ffb7 ffb7 ffd4 ffd4 ffea ffea fff2 fff2     ................
  408188:	ffeb ffeb ffda ffda ffc4 ffc4 ffb8 ffb8     ................
  408198:	ffb9 ffb9 ffc5 ffc5 ffdc ffdc ffed ffed     ................
  4081a8:	fff8 fff8 fffc fffc 0000 0000 0009 0009     ................
  4081b8:	0016 0016 002d 002d 0051 0051 0069 0069     ....-.-.Q.Q.i.i.
  4081c8:	007a 007a 0085 0085 0084 0084 007b 007b     z.z.........{.{.
  4081d8:	0071 0071 0063 0063 005d 005d 004c 004c     q.q.c.c.].].L.L.
  4081e8:	0040 0040 0029 0029 0008 0008 ffed ffed     @.@.).).........
  4081f8:	ffcb ffcb ffb0 ffb0 ffa8 ffa8 ffb0 ffb0     ................
  408208:	ffc2 ffc2 ffd7 ffd7 ffdf ffdf ffdf ffdf     ................
  408218:	ffcc ffcc ffaf ffaf ff93 ff93 ff7f ff7f     ................
  408228:	ff7c ff7c ff85 ff85 ff9a ff9a ffb4 ffb4     |.|.............
  408238:	ffcd ffcd ffdb ffdb ffe1 ffe1 ffdf ffdf     ................
  408248:	ffe6 ffe6 fff4 fff4 0007 0007 0015 0015     ................
  408258:	001d 001d 0015 0015 0008 0008 0000 0000     ................
  408268:	0007 0007 001f 001f 003c 003c 0064 0064     ........<.<.d.d.
  408278:	0082 0082 008e 008e 008c 008c 0082 0082     ................
  408288:	0081 0081 0084 0084 0088 0088 008b 008b     ................
  408298:	008c 008c 007b 007b 005a 005a 0029 0029     ....{.{.Z.Z.).).
  4082a8:	fffb fffb ffcf ffcf ffb0 ffb0 ff9a ff9a     ................
  4082b8:	ff90 ff90 ff95 ff95 ff9f ff9f ffa8 ffa8     ................
  4082c8:	ffb0 ffb0 ffb1 ffb1 ffa5 ffa5 ff9b ff9b     ................
  4082d8:	ff8c ff8c ff80 ff80 ff7e ff7e ff88 ff88     ........~.~.....
  4082e8:	ff9a ff9a ffb2 ffb2 ffd1 ffd1 ffe4 ffe4     ................
  4082f8:	ffe9 ffe9 fff2 fff2 fffe fffe 000b 000b     ................
  408308:	001d 001d 0032 0032 0033 0033 0025 0025     ....2.2.3.3.%.%.
  408318:	0012 0012 fffa fffa ffed ffed fff9 fff9     ................
  408328:	0015 0015 003c 003c 0060 0060 0072 0072     ....<.<.`.`.r.r.
  408338:	0071 0071 006a 006a 0061 0061 0062 0062     q.q.j.j.a.a.b.b.
  408348:	0069 0069 0076 0076 0082 0082 007b 007b     i.i.v.v.....{.{.
  408358:	0067 0067 0044 0044 001a 001a fffa fffa     g.g.D.D.........
  408368:	ffec ffec ffe4 ffe4 ffdf ffdf ffdc ffdc     ................
  408378:	ffcf ffcf ffc0 ffc0 ffac ffac ff9a ff9a     ................
  408388:	ff8b ff8b ff84 ff84 ff7e ff7e ff7d ff7d     ........~.~.}.}.
  408398:	ff81 ff81 ff89 ff89 ff97 ff97 ffa0 ffa0     ................
  4083a8:	ffad ffad ffb7 ffb7 ffbc ffbc ffc2 ffc2     ................
  4083b8:	ffcb ffcb ffdb ffdb fff0 fff0 000f 000f     ................
  4083c8:	0027 0027 002f 002f 0034 0034 002d 002d     '.'././.4.4.-.-.
  4083d8:	0022 0022 0022 0022 0033 0033 004a 004a     ".".".".3.3.J.J.
  4083e8:	0060 0060 006b 006b 0067 0067 0060 0060     `.`.k.k.g.g.`.`.
  4083f8:	0058 0058 0060 0060 006c 006c 0083 0083     X.X.`.`.l.l.....
  408408:	0090 0090 008f 008f 007c 007c 0056 0056     ........|.|.V.V.
  408418:	0026 0026 fffe fffe ffe3 ffe3 ffd3 ffd3     &.&.............
  408428:	ffca ffca ffc2 ffc2 ffb2 ffb2 ff95 ff95     ................
  408438:	ff7a ff7a ff63 ff63 ff59 ff59 ff61 ff61     z.z.c.c.Y.Y.a.a.
  408448:	ff73 ff73 ff91 ff91 ffa6 ffa6 ffb2 ffb2     s.s.............
  408458:	ffaf ffaf ffa6 ffa6 ff9a ff9a ff96 ff96     ................
  408468:	ff9e ff9e ffa8 ffa8 ffbf ffbf ffe0 ffe0     ................
  408478:	0000 0000 0022 0022 003c 003c 0048 0048     ....".".<.<.H.H.
  408488:	004e 004e 0053 0053 0057 0057 005c 005c     N.N.S.S.W.W.\.\.
  408498:	0062 0062 0064 0064 0061 0061 0054 0054     b.b.d.d.a.a.T.T.
  4084a8:	0044 0044 0038 0038 003f 003f 0054 0054     D.D.8.8.?.?.T.T.
  4084b8:	0072 0072 008e 008e 009b 009b 0096 0096     r.r.............
  4084c8:	007a 007a 004a 004a 001c 001c fff9 fff9     z.z.J.J.........
  4084d8:	ffe2 ffe2 ffdb ffdb ffd0 ffd0 ffc0 ffc0     ................
  4084e8:	ffa5 ffa5 ff80 ff80 ff60 ff60 ff4a ff4a     ........`.`.J.J.
  4084f8:	ff4c ff4c ff62 ff62 ff7d ff7d ff95 ff95     L.L.b.b.}.}.....
  408508:	ffa7 ffa7 ffa5 ffa5 ff99 ff99 ff8f ff8f     ................
  408518:	ff8c ff8c ff9a ff9a ffae ffae ffcb ffcb     ................
  408528:	ffdf ffdf ffec ffec 0000 0000 000a 000a     ................
  408538:	0020 0020 003f 003f 0058 0058 0077 0077      . .?.?.X.X.w.w.
  408548:	0089 0089 008f 008f 0087 0087 0080 0080     ................
  408558:	0070 0070 0063 0063 0062 0062 006a 006a     p.p.c.c.b.b.j.j.
  408568:	0070 0070 0075 0075 0074 0074 0073 0073     p.p.u.u.t.t.s.s.
  408578:	0062 0062 004d 004d 002f 002f 000e 000e     b.b.M.M././.....
  408588:	fff4 fff4 ffdf ffdf ffcd ffcd ffbf ffbf     ................
  408598:	ffb5 ffb5 ffb0 ffb0 ffa4 ffa4 ff98 ff98     ................
  4085a8:	ff85 ff85 ff73 ff73 ff6e ff6e ff76 ff76     ....s.s.n.n.v.v.
  4085b8:	ff7f ff7f ff89 ff89 ff97 ff97 ffa0 ffa0     ................
  4085c8:	ffa9 ffa9 ffb1 ffb1 ffc1 ffc1 ffd5 ffd5     ................
  4085d8:	fff4 fff4 0015 0015 0029 0029 002a 002a     ........).).*.*.
  4085e8:	0025 0025 0019 0019 0014 0014 001d 001d     %.%.............
  4085f8:	0032 0032 004b 004b 006e 006e 0085 0085     2.2.K.K.n.n.....
  408608:	008d 008d 0089 0089 007b 007b 0066 0066     ........{.{.f.f.
  408618:	0059 0059 0051 0051 0054 0054 0052 0052     Y.Y.Q.Q.T.T.R.R.
  408628:	004d 004d 0042 0042 0033 0033 001e 001e     M.M.B.B.3.3.....
  408638:	000f 000f 0000 0000 fff4 fff4 ffeb ffeb     ................
  408648:	ffd8 ffd8 ffc0 ffc0 ffaf ffaf ffa0 ffa0     ................
  408658:	ff98 ff98 ff95 ff95 ff93 ff93 ff96 ff96     ................
  408668:	ff9f ff9f ffad ffad ffba ffba ffc1 ffc1     ................
  408678:	ffc6 ffc6 ffce ffce ffd2 ffd2 ffd6 ffd6     ................
  408688:	ffdc ffdc ffe8 ffe8 0000 0000 001d 001d     ................
  408698:	0035 0035 003c 003c 0039 0039 0027 0027     5.5.<.<.9.9.'.'.
  4086a8:	0016 0016 0007 0007 0004 0004 0012 0012     ................
  4086b8:	002b 002b 0047 0047 005a 005a 0060 0060     +.+.G.G.Z.Z.`.`.
  4086c8:	0054 0054 0045 0045 0038 0038 0033 0033     T.T.E.E.8.8.3.3.
  4086d8:	0038 0038 0039 0039 0035 0035 0024 0024     8.8.9.9.5.5.$.$.
  4086e8:	000c 000c fff3 fff3 ffe3 ffe3 ffe3 ffe3     ................
  4086f8:	ffed ffed fff1 fff1 ffec ffec ffd4 ffd4     ................
  408708:	ffb4 ffb4 ff93 ff93 ff79 ff79 ff71 ff71     ........y.y.q.q.
  408718:	ff78 ff78 ff8e ff8e ffab ffab ffc5 ffc5     x.x.............
  408728:	ffcd ffcd ffd3 ffd3 ffcc ffcc ffca ffca     ................
  408738:	ffcf ffcf ffda ffda ffef ffef 0005 0005     ................
  408748:	001d 001d 0037 0037 0050 0050 005a 005a     ....7.7.P.P.Z.Z.
  408758:	005a 005a 004f 004f 0043 0043 0031 0031     Z.Z.O.O.C.C.1.1.
  408768:	0027 0027 0025 0025 002b 002b 003a 003a     '.'.%.%.+.+.:.:.
  408778:	0040 0040 0042 0042 003f 003f 003a 003a     @.@.B.B.?.?.:.:.
  408788:	0032 0032 0034 0034 0037 0037 002e 002e     2.2.4.4.7.7.....
  408798:	001d 001d 0000 0000 ffdc ffdc ffb8 ffb8     ................
  4087a8:	ffa6 ffa6 ffa7 ffa7 ffb9 ffb9 ffd2 ffd2     ................
  4087b8:	ffe0 ffe0 ffda ffda ffc2 ffc2 ffa9 ffa9     ................
  4087c8:	ff91 ff91 ff87 ff87 ff93 ff93 ffae ffae     ................
  4087d8:	ffd5 ffd5 fff3 fff3 0003 0003 ffff ffff     ................
  4087e8:	fff3 fff3 ffe4 ffe4 ffe2 ffe2 fff1 fff1     ................
  4087f8:	0008 0008 001d 001d 0037 0037 0050 0050     ........7.7.P.P.
  408808:	0060 0060 005f 005f 0059 0059 0049 0049     `.`._._.Y.Y.I.I.
  408818:	003b 003b 002c 002c 001c 001c 0015 0015     ;.;.,.,.........
  408828:	0014 0014 0014 0014 0015 0015 0017 0017     ................
  408838:	0016 0016 0015 0015 001a 001a 0025 0025     ............%.%.
  408848:	0029 0029 0028 0028 001f 001f 000b 000b     ).).(.(.........
  408858:	fff0 fff0 ffd5 ffd5 ffc3 ffc3 ffbc ffbc     ................
  408868:	ffc8 ffc8 ffd5 ffd5 ffde ffde ffdf ffdf     ................
  408878:	ffd0 ffd0 ffbe ffbe ffad ffad ffa8 ffa8     ................
  408888:	ffb2 ffb2 ffc9 ffc9 ffe4 ffe4 0000 0000     ................
  408898:	0014 0014 0011 0011 0003 0003 fff4 fff4     ................
  4088a8:	ffe7 ffe7 ffe7 ffe7 fff1 fff1 0003 0003     ................
  4088b8:	0018 0018 0030 0030 0048 0048 0052 0052     ....0.0.H.H.R.R.
  4088c8:	0057 0057 0052 0052 004a 004a 003c 003c     W.W.R.R.J.J.<.<.
  4088d8:	0028 0028 0018 0018 000c 000c 0004 0004     (.(.............
  4088e8:	0001 0001 ffff ffff 0005 0005 0006 0006     ................
  4088f8:	0012 0012 0021 0021 002e 002e 0032 0032     ....!.!.....2.2.
  408908:	002c 002c 001f 001f 0007 0007 ffec ffec     ,.,.............
  408918:	ffd2 ffd2 ffc6 ffc6 ffcc ffcc ffd9 ffd9     ................
  408928:	ffe3 ffe3 ffe6 ffe6 ffe3 ffe3 ffdb ffdb     ................
  408938:	ffd0 ffd0 ffcb ffcb ffc9 ffc9 ffd3 ffd3     ................
  408948:	ffea ffea fffe fffe 0012 0012 0015 0015     ................
  408958:	000e 000e 0002 0002 fffd fffd fff2 fff2     ................
  408968:	ffea ffea ffe6 ffe6 ffea ffea fff1 fff1     ................
  408978:	fffc fffc 000e 000e 001b 001b 002d 002d     ............-.-.
  408988:	0037 0037 003a 003a 0032 0032 0021 0021     7.7.:.:.2.2.!.!.
  408998:	000f 000f 0004 0004 0000 0000 fffe fffe     ................
  4089a8:	ffff ffff fffa fffa fff9 fff9 fffa fffa     ................
  4089b8:	0005 0005 0014 0014 0024 0024 0030 0030     ........$.$.0.0.
  4089c8:	0036 0036 002a 002a 0014 0014 fff8 fff8     6.6.*.*.........
  4089d8:	ffe7 ffe7 ffe1 ffe1 ffdc ffdc ffdf ffdf     ................
  4089e8:	ffe4 ffe4 ffec ffec fff2 fff2 fff6 fff6     ................
  4089f8:	fffe fffe 0007 0007 0011 0011 0020 0020     ............ . .
  408a08:	0025 0025 001b 001b 000d 000d fff9 fff9     %.%.............
  408a18:	ffe8 ffe8 ffd9 ffd9 ffd4 ffd4 ffd7 ffd7     ................
  408a28:	ffda ffda ffe3 ffe3 ffe9 ffe9 ffe7 ffe7     ................
  408a38:	ffe9 ffe9 ffe7 ffe7 ffe9 ffe9 fff0 fff0     ................
  408a48:	fff5 fff5 fff3 fff3 ffe9 ffe9 ffe2 ffe2     ................
  408a58:	ffdd ffdd ffdd ffdd ffe3 ffe3 ffee ffee     ................
  408a68:	fffa fffa 000c 000c 001a 001a 0023 0023     ............#.#.
  408a78:	002b 002b 002e 002e 002a 002a 0026 0026     +.+.....*.*.&.&.
  408a88:	001a 001a 0014 0014 0018 0018 0018 0018     ................
  408a98:	0014 0014 000f 000f 0000 0000 fff9 fff9     ................
  408aa8:	fffd fffd 000a 000a 001d 001d 002a 002a     ............*.*.
  408ab8:	003d 003d 0044 0044 0042 0042 0031 0031     =.=.D.D.B.B.1.1.
  408ac8:	001f 001f 0013 0013 0005 0005 ffff ffff     ................
  408ad8:	fff7 fff7 fff2 fff2 ffed ffed ffe2 ffe2     ................
  408ae8:	ffe0 ffe0 ffd5 ffd5 ffd5 ffd5 ffd8 ffd8     ................
  408af8:	ffe1 ffe1 ffe8 ffe8 ffe9 ffe9 ffe3 ffe3     ................
  408b08:	ffcd ffcd ffc2 ffc2 ffbc ffbc ffbd ffbd     ................
  408b18:	ffcc ffcc ffda ffda ffeb ffeb fffa fffa     ................
  408b28:	0005 0005 000c 000c 0010 0010 0015 0015     ................
  408b38:	001a 001a 001f 001f 001f 001f 0023 0023     ............#.#.
  408b48:	0030 0030 003b 003b 0045 0045 004a 004a     0.0.;.;.E.E.J.J.
  408b58:	004a 004a 0040 0040 0040 0040 003a 003a     J.J.@.@.@.@.:.:.
  408b68:	003a 003a 003d 003d 0045 0045 004c 004c     :.:.=.=.E.E.L.L.
  408b78:	004b 004b 0044 0044 0031 0031 001c 001c     K.K.D.D.1.1.....
  408b88:	000b 000b 0001 0001 fffb fffb fff9 fff9     ................
  408b98:	fff2 fff2 ffe6 ffe6 ffd2 ffd2 ffbc ffbc     ................
  408ba8:	ffa7 ffa7 ff9e ff9e ffa6 ffa6 ffb6 ffb6     ................
  408bb8:	ffce ffce ffe1 ffe1 ffe9 ffe9 ffe9 ffe9     ................
  408bc8:	ffe6 ffe6 ffe9 ffe9 ffeb ffeb fff6 fff6     ................
  408bd8:	0006 0006 000e 000e 0010 0010 0018 0018     ................
  408be8:	0017 0017 0018 0018 001f 001f 0027 0027     ............'.'.
  408bf8:	002a 002a 002f 002f 0034 0034 003b 003b     *.*././.4.4.;.;.
  408c08:	0040 0040 003d 003d 003c 003c 0033 0033     @.@.=.=.<.<.3.3.
  408c18:	002a 002a 001e 001e 0017 0017 000e 000e     *.*.............
  408c28:	0015 0015 0021 0021 002f 002f 003b 003b     ....!.!././.;.;.
  408c38:	0030 0030 0020 0020 0005 0005 fff0 fff0     0.0. . .........
  408c48:	ffe0 ffe0 ffdc ffdc ffe5 ffe5 ffeb ffeb     ................
  408c58:	ffe7 ffe7 ffd9 ffd9 ffc5 ffc5 ffb0 ffb0     ................
  408c68:	ffad ffad ffb7 ffb7 ffd1 ffd1 ffeb ffeb     ................
  408c78:	0002 0002 0005 0005 0001 0001 fff7 fff7     ................
  408c88:	fff4 fff4 fff3 fff3 0007 0007 001c 001c     ................
  408c98:	002d 002d 0035 0035 0032 0032 0025 0025     -.-.5.5.2.2.%.%.
  408ca8:	0016 0016 000a 000a 0006 0006 000f 000f     ................
  408cb8:	001b 001b 0025 0025 0025 0025 001e 001e     ....%.%.%.%.....
  408cc8:	000f 000f ffff ffff fff3 fff3 ffe5 ffe5     ................
  408cd8:	ffd9 ffd9 ffd6 ffd6 ffdf ffdf ffe8 ffe8     ................
  408ce8:	fff7 fff7 0002 0002 ffff ffff fffa fffa     ................
  408cf8:	fff0 fff0 ffe9 ffe9 ffdc ffdc ffd9 ffd9     ................
  408d08:	ffda ffda ffdd ffdd ffdc ffdc ffdd ffdd     ................
  408d18:	ffd9 ffd9 ffd1 ffd1 ffd7 ffd7 ffe6 ffe6     ................
  408d28:	0004 0004 0023 0023 0034 0034 003a 003a     ....#.#.4.4.:.:.
  408d38:	0037 0037 002a 002a 001b 001b 0013 0013     7.7.*.*.........
  408d48:	0017 0017 001e 001e 0022 0022 0026 0026     ........".".&.&.
  408d58:	001d 001d 0010 0010 ffff ffff fff6 fff6     ................
  408d68:	fff7 fff7 fffd fffd 000a 000a 0010 0010     ................
  408d78:	000d 000d 0003 0003 fff6 fff6 ffe7 ffe7     ................
  408d88:	ffd5 ffd5 ffc7 ffc7 ffbb ffbb ffad ffad     ................
  408d98:	ffa3 ffa3 ffa1 ffa1 ffac ffac ffb7 ffb7     ................
  408da8:	ffc7 ffc7 ffcd ffcd ffd3 ffd3 ffd2 ffd2     ................
  408db8:	ffcf ffcf ffd2 ffd2 ffd3 ffd3 ffd8 ffd8     ................
  408dc8:	ffd8 ffd8 ffd7 ffd7 ffdb ffdb ffda ffda     ................
  408dd8:	ffdc ffdc ffee ffee 000b 000b 0030 0030     ............0.0.
  408de8:	0053 0053 006d 006d 007c 007c 007f 007f     S.S.m.m.|.|.....
  408df8:	0074 0074 0065 0065 005d 005d 0057 0057     t.t.e.e.].].W.W.
  408e08:	0057 0057 0055 0055 004c 004c 003c 003c     W.W.U.U.L.L.<.<.
  408e18:	0020 0020 000e 000e fff9 fff9 fff5 fff5      . .............
  408e28:	fff6 fff6 fff9 fff9 fffa fffa fffc fffc     ................
  408e38:	fff1 fff1 ffe0 ffe0 ffc2 ffc2 ffaa ffaa     ................
  408e48:	ff8e ff8e ff7e ff7e ff72 ff72 ff72 ff72     ....~.~.r.r.r.r.
  408e58:	ff80 ff80 ff9a ff9a ffb8 ffb8 ffca ffca     ................
  408e68:	ffd9 ffd9 ffe4 ffe4 ffea ffea fff1 fff1     ................
  408e78:	fff9 fff9 fffe fffe fffd fffd fffc fffc     ................
  408e88:	fff8 fff8 fff1 fff1 fff5 fff5 0004 0004     ................
  408e98:	001a 001a 003a 003a 005c 005c 0073 0073     ....:.:.\.\.s.s.
  408ea8:	007d 007d 0074 0074 0061 0061 004c 004c     }.}.t.t.a.a.L.L.
  408eb8:	003e 003e 0034 0034 0031 0031 0030 0030     >.>.4.4.1.1.0.0.
  408ec8:	002c 002c 0022 0022 0014 0014 0005 0005     ,.,.".".........
  408ed8:	fff7 fff7 fff4 fff4 fff8 fff8 ffff ffff     ................
  408ee8:	fffe fffe fffb fffb fff2 fff2 ffe7 ffe7     ................
  408ef8:	ffd6 ffd6 ffc3 ffc3 ffb9 ffb9 ffb1 ffb1     ................
  408f08:	ffb3 ffb3 ffb1 ffb1 ffb1 ffb1 ffb8 ffb8     ................
  408f18:	ffbd ffbd ffc2 ffc2 ffcd ffcd ffd8 ffd8     ................
  408f28:	ffe5 ffe5 ffee ffee fffd fffd ffff ffff     ................
  408f38:	0004 0004 0007 0007 0004 0004 0008 0008     ................
  408f48:	0009 0009 0010 0010 0021 0021 0034 0034     ........!.!.4.4.
  408f58:	004c 004c 005a 005a 0060 0060 005e 005e     L.L.Z.Z.`.`.^.^.
  408f68:	004f 004f 003e 003e 0029 0029 0020 0020     O.O.>.>.).). . .
  408f78:	0014 0014 0012 0012 0011 0011 0009 0009     ................
  408f88:	0007 0007 0000 0000 fff3 fff3 ffef ffef     ................
  408f98:	ffe9 ffe9 ffe7 ffe7 ffe7 ffe7 ffea ffea     ................
  408fa8:	ffea ffea ffed ffed ffed ffed ffe4 ffe4     ................
  408fb8:	ffe1 ffe1 ffdd ffdd ffde ffde ffde ffde     ................
  408fc8:	ffdc ffdc ffe2 ffe2 ffea ffea ffed ffed     ................
  408fd8:	ffef ffef fff0 fff0 fff6 fff6 fff8 fff8     ................
  408fe8:	fffc fffc 0005 0005 0007 0007 0007 0007     ................
  408ff8:	0008 0008 0007 0007 0005 0005 0000 0000     ................
  409008:	0000 0000 0004 0004 000a 000a 001b 001b     ................
  409018:	002c 002c 0038 0038 0039 0039 0035 0035     ,.,.8.8.9.9.5.5.
  409028:	0024 0024 0011 0011 0004 0004 fffb fffb     $.$.............
  409038:	fff9 fff9 0000 0000 0003 0003 0000 0000     ................
  409048:	fff5 fff5 ffe2 ffe2 ffd6 ffd6 ffc7 ffc7     ................
  409058:	ffc3 ffc3 ffca ffca ffd6 ffd6 ffe7 ffe7     ................
  409068:	ffed ffed ffef ffef ffef ffef fff0 fff0     ................
  409078:	fffd fffd 0005 0005 0012 0012 0022 0022     ............".".
  409088:	002d 002d 002c 002c 0021 0021 0015 0015     -.-.,.,.!.!.....
  409098:	000e 000e 000f 000f 001b 001b 002c 002c     ............,.,.
  4090a8:	0033 0033 002c 002c 001b 001b 0007 0007     3.3.,.,.........
  4090b8:	fff6 fff6 ffe5 ffe5 ffe1 ffe1 ffe2 ffe2     ................
  4090c8:	ffe5 ffe5 fff0 fff0 ffed ffed ffe6 ffe6     ................
  4090d8:	ffde ffde ffd8 ffd8 ffce ffce ffd1 ffd1     ................
  4090e8:	ffdd ffdd ffe7 ffe7 fff1 fff1 fff8 fff8     ................
  4090f8:	fffd fffd fffd fffd fffb fffb fff9 fff9     ................
  409108:	fff6 fff6 fff6 fff6 fffc fffc 0003 0003     ................
  409118:	000d 000d 0015 0015 001f 001f 0026 0026     ............&.&.
  409128:	002a 002a 0031 0031 0036 0036 0039 0039     *.*.1.1.6.6.9.9.
  409138:	003e 003e 003c 003c 003b 003b 0031 0031     >.>.<.<.;.;.1.1.
  409148:	0021 0021 000f 000f ffff ffff fffa fffa     !.!.............
  409158:	fff7 fff7 fff6 fff6 fff7 fff7 fff8 fff8     ................
  409168:	ffec ffec ffe3 ffe3 ffdd ffdd ffd3 ffd3     ................
  409178:	ffc9 ffc9 ffc5 ffc5 ffbe ffbe ffbf ffbf     ................
  409188:	ffc3 ffc3 ffcb ffcb ffd3 ffd3 ffdb ffdb     ................
  409198:	ffe1 ffe1 ffe5 ffe5 fff0 fff0 fff9 fff9     ................
  4091a8:	0002 0002 000d 000d 001a 001a 0025 0025     ............%.%.
  4091b8:	0025 0025 0023 0023 001c 001c 0011 0011     %.%.#.#.........
  4091c8:	0005 0005 0008 0008 000a 000a 0015 0015     ................
  4091d8:	0023 0023 002d 002d 0032 0032 0032 0032     #.#.-.-.2.2.2.2.
  4091e8:	002f 002f 0029 0029 0024 0024 0024 0024     /./.).).$.$.$.$.
  4091f8:	0023 0023 0029 0029 002a 002a 0025 0025     #.#.).).*.*.%.%.
  409208:	0016 0016 0005 0005 fff6 fff6 ffea ffea     ................
  409218:	ffe3 ffe3 ffe0 ffe0 ffd7 ffd7 ffd1 ffd1     ................
  409228:	ffd0 ffd0 ffcb ffcb ffbe ffbe ffb1 ffb1     ................
  409238:	ffac ffac ffa9 ffa9 ffac ffac ffb6 ffb6     ................
  409248:	ffbd ffbd ffc5 ffc5 ffcb ffcb ffcf ffcf     ................
  409258:	ffd3 ffd3 ffda ffda ffe1 ffe1 fff3 fff3     ................
  409268:	0004 0004 0015 0015 001a 001a 001a 001a     ................
  409278:	0019 0019 0010 0010 0008 0008 000b 000b     ................
  409288:	0011 0011 001b 001b 002e 002e 003c 003c     ............<.<.
  409298:	0041 0041 0045 0045 0043 0043 003f 003f     A.A.E.E.C.C.?.?.
  4092a8:	0037 0037 0033 0033 0030 0030 0029 0029     7.7.3.3.0.0.).).
  4092b8:	0027 0027 0024 0024 001c 001c 0013 0013     '.'.$.$.........
  4092c8:	0005 0005 fff7 fff7 ffe4 ffe4 ffd8 ffd8     ................
  4092d8:	ffcd ffcd ffbd ffbd ffb9 ffb9 ffb2 ffb2     ................
  4092e8:	ffad ffad ffa5 ffa5 ff9e ff9e ff99 ff99     ................
  4092f8:	ff95 ff95 ff97 ff97 ff97 ff97 ff98 ff98     ................
  409308:	ffa3 ffa3 ffa9 ffa9 ffb8 ffb8 ffcb ffcb     ................
  409318:	ffe1 ffe1 fff6 fff6 000e 000e 0022 0022     ............".".
  409328:	002f 002f 0033 0033 0034 0034 0033 0033     /./.3.3.4.4.3.3.
  409338:	0031 0031 002f 002f 002f 002f 0034 0034     1.1././././.4.4.
  409348:	003e 003e 004d 004d 0054 0054 0059 0059     >.>.M.M.T.T.Y.Y.
  409358:	005a 005a 0051 0051 0041 0041 0031 0031     Z.Z.Q.Q.A.A.1.1.
  409368:	0026 0026 0015 0015 0009 0009 0004 0004     &.&.............
  409378:	fffd fffd fff1 fff1 ffe5 ffe5 ffda ffda     ................
  409388:	ffcb ffcb ffc4 ffc4 ffb6 ffb6 ffb2 ffb2     ................
  409398:	ffb2 ffb2 ffb3 ffb3 ffb6 ffb6 ffb7 ffb7     ................
  4093a8:	ffb9 ffb9 ffb9 ffb9 ffb7 ffb7 ffbb ffbb     ................
  4093b8:	ffc1 ffc1 ffc3 ffc3 ffcf ffcf ffdc ffdc     ................
  4093c8:	ffe9 ffe9 fff3 fff3 ffff ffff 0009 0009     ................
  4093d8:	0012 0012 001c 001c 0029 0029 0039 0039     ........).).9.9.
  4093e8:	0046 0046 0047 0047 0044 0044 003b 003b     F.F.G.G.D.D.;.;.
  4093f8:	002b 002b 0020 0020 0020 0020 0025 0025     +.+. . . . .%.%.
  409408:	0034 0034 0040 0040 0049 0049 0048 0048     4.4.@.@.I.I.H.H.
  409418:	0039 0039 0028 0028 0019 0019 000e 000e     9.9.(.(.........
  409428:	000a 000a 000c 000c 000e 000e ffff ffff     ................
  409438:	fff0 fff0 ffdc ffdc ffc8 ffc8 ffb6 ffb6     ................
  409448:	ffb2 ffb2 ffb7 ffb7 ffc3 ffc3 ffd0 ffd0     ................
  409458:	ffd7 ffd7 ffd7 ffd7 ffd3 ffd3 ffcd ffcd     ................
  409468:	ffcb ffcb ffcd ffcd ffd7 ffd7 ffdf ffdf     ................
  409478:	ffec ffec fff8 fff8 0000 0000 0007 0007     ................
  409488:	0006 0006 0009 0009 000c 000c 0013 0013     ................
  409498:	001d 001d 0025 0025 0033 0033 0036 0036     ....%.%.3.3.6.6.
  4094a8:	003f 003f 0040 0040 003f 003f 0036 0036     ?.?.@.@.?.?.6.6.
  4094b8:	0033 0033 0038 0038 003d 003d 0043 0043     3.3.8.8.=.=.C.C.
  4094c8:	0046 0046 0044 0044 003a 003a 002e 002e     F.F.D.D.:.:.....
  4094d8:	0020 0020 0017 0017 000e 000e 000a 000a      . .............
  4094e8:	0005 0005 fffd fffd fff3 fff3 ffe4 ffe4     ................
  4094f8:	ffd8 ffd8 ffc3 ffc3 ffba ffba ffad ffad     ................
  409508:	ffac ffac ffb4 ffb4 ffbe ffbe ffc9 ffc9     ................
  409518:	ffd0 ffd0 ffcc ffcc ffc6 ffc6 ffbf ffbf     ................
  409528:	ffbe ffbe ffc1 ffc1 ffcd ffcd ffe9 ffe9     ................
  409538:	0001 0001 0019 0019 0023 0023 0026 0026     ........#.#.&.&.
  409548:	0024 0024 0024 0024 002b 002b 0037 0037     $.$.$.$.+.+.7.7.
  409558:	004c 004c 005e 005e 0067 0067 0068 0068     L.L.^.^.g.g.h.h.
  409568:	005c 005c 0052 0052 004b 004b 0049 0049     \.\.R.R.K.K.I.I.
  409578:	004a 004a 004d 004d 004c 004c 0040 0040     J.J.M.M.L.L.@.@.
  409588:	0030 0030 0018 0018 0003 0003 fff6 fff6     0.0.............
  409598:	ffed ffed ffe5 ffe5 ffe1 ffe1 ffd0 ffd0     ................
  4095a8:	ffc1 ffc1 ffb0 ffb0 ffa3 ffa3 ff9c ff9c     ................
  4095b8:	ff96 ff96 ff9b ff9b ffa6 ffa6 ffaf ffaf     ................
  4095c8:	ffbb ffbb ffca ffca ffd6 ffd6 ffe5 ffe5     ................
  4095d8:	ffef ffef fff6 fff6 fff2 fff2 fff6 fff6     ................
  4095e8:	fffc fffc 0004 0004 0013 0013 001e 001e     ................
  4095f8:	0028 0028 0032 0032 0036 0036 0031 0031     (.(.2.2.6.6.1.1.
  409608:	0033 0033 003a 003a 0040 0040 0049 0049     3.3.:.:.@.@.I.I.
  409618:	004d 004d 004b 004b 0042 0042 0035 0035     M.M.K.K.B.B.5.5.
  409628:	0026 0026 0021 0021 001d 001d 0021 0021     &.&.!.!.....!.!.
  409638:	0024 0024 0024 0024 001d 001d 0012 0012     $.$.$.$.........
  409648:	000a 000a 0000 0000 fff6 fff6 fff0 fff0     ................
  409658:	ffe5 ffe5 ffd1 ffd1 ffb9 ffb9 ffa1 ffa1     ................
  409668:	ff8e ff8e ff85 ff85 ff81 ff81 ff8d ff8d     ................
  409678:	ff9c ff9c ffb3 ffb3 ffca ffca ffda ffda     ................
  409688:	ffe5 ffe5 ffec ffec fff1 fff1 fff9 fff9     ................
  409698:	ffff ffff 0003 0003 0008 0008 000d 000d     ................
  4096a8:	0011 0011 0013 0013 001d 001d 0026 0026     ............&.&.
  4096b8:	0032 0032 003b 003b 0040 0040 0048 0048     2.2.;.;.@.@.H.H.
  4096c8:	004c 004c 004a 004a 0047 0047 003c 003c     L.L.J.J.G.G.<.<.
  4096d8:	002f 002f 0028 0028 001e 001e 0019 0019     /./.(.(.........
  4096e8:	0016 0016 0013 0013 000e 000e 000b 000b     ................
  4096f8:	000a 000a 0006 0006 000c 000c 000d 000d     ................
  409708:	0009 0009 0003 0003 fffb fffb ffe5 ffe5     ................
  409718:	ffcf ffcf ffb9 ffb9 ffab ffab ffa1 ffa1     ................
  409728:	ffa1 ffa1 ffa5 ffa5 ffb1 ffb1 ffc0 ffc0     ................
  409738:	ffcc ffcc ffdb ffdb ffe1 ffe1 ffe7 ffe7     ................
  409748:	ffeb ffeb ffef ffef fff4 fff4 fffc fffc     ................
  409758:	0005 0005 0011 0011 0018 0018 001e 001e     ................
  409768:	0028 0028 0031 0031 003e 003e 0042 0042     (.(.1.1.>.>.B.B.
  409778:	004d 004d 0054 0054 005b 005b 0059 0059     M.M.T.T.[.[.Y.Y.
  409788:	0054 0054 0045 0045 002d 002d 001c 001c     T.T.E.E.-.-.....
  409798:	000f 000f 0006 0006 0002 0002 0000 0000     ................
  4097a8:	0001 0001 0003 0003 0005 0005 0007 0007     ................
  4097b8:	0005 0005 fffe fffe fffc fffc fff1 fff1     ................
  4097c8:	ffe2 ffe2 ffd2 ffd2 ffbe ffbe ffac ffac     ................
  4097d8:	ff9f ff9f ff9c ff9c ffa3 ffa3 ffb1 ffb1     ................
  4097e8:	ffc3 ffc3 ffdc ffdc ffed ffed fffc fffc     ................
  4097f8:	fff9 fff9 fff5 fff5 ffed ffed ffed ffed     ................
  409808:	fff3 fff3 0001 0001 0018 0018 002b 002b     ............+.+.
  409818:	0037 0037 003c 003c 003c 003c 003e 003e     7.7.<.<.<.<.>.>.
  409828:	003f 003f 0043 0043 004b 004b 0052 0052     ?.?.C.C.K.K.R.R.
  409838:	0054 0054 004e 004e 003b 003b 0022 0022     T.T.N.N.;.;.".".
  409848:	000a 000a fff6 fff6 ffec ffec ffea ffea     ................
  409858:	ffe7 ffe7 ffec ffec ffe9 ffe9 ffe2 ffe2     ................
  409868:	ffdb ffdb ffd8 ffd8 ffd4 ffd4 ffd8 ffd8     ................
  409878:	ffdf ffdf ffef ffef fff5 fff5 fff3 fff3     ................
  409888:	ffee ffee ffe2 ffe2 ffd6 ffd6 ffd6 ffd6     ................
  409898:	ffd9 ffd9 ffe6 ffe6 fffe fffe 0012 0012     ................
  4098a8:	0022 0022 0026 0026 001f 001f 000b 000b     ".".&.&.........
  4098b8:	fffd fffd ffef ffef ffec ffec fff4 fff4     ................
  4098c8:	0000 0000 0014 0014 001f 001f 0024 0024     ............$.$.
  4098d8:	001b 001b 0017 0017 0015 0015 0017 0017     ................
  4098e8:	0019 0019 001a 001a 0018 0018 0011 0011     ................
  4098f8:	0005 0005 fff6 fff6 ffea ffea ffe0 ffe0     ................
  409908:	ffe3 ffe3 ffe9 ffe9 fff5 fff5 fff5 fff5     ................
  409918:	fff6 fff6 ffeb ffeb ffe6 ffe6 ffde ffde     ................
  409928:	ffdf ffdf ffe4 ffe4 ffed ffed fffc fffc     ................
  409938:	0008 0008 0010 0010 0017 0017 0018 0018     ................
  409948:	001b 001b 001e 001e 0023 0023 0024 0024     ........#.#.$.$.
  409958:	002a 002a 0031 0031 0032 0032 0034 0034     *.*.1.1.2.2.4.4.
  409968:	0031 0031 0025 0025 000f 000f fffe fffe     1.1.%.%.........
  409978:	ffee ffee ffe5 ffe5 ffe7 ffe7 ffed ffed     ................
  409988:	fff4 fff4 fffd fffd fffd fffd fffb fffb     ................
  409998:	fff7 fff7 fff5 fff5 fff5 fff5 fff0 fff0     ................
  4099a8:	ffeb ffeb ffe9 ffe9 ffe8 ffe8 ffdf ffdf     ................
  4099b8:	ffda ffda ffd9 ffd9 ffda ffda ffe4 ffe4     ................
  4099c8:	ffed ffed fff9 fff9 0000 0000 0009 0009     ................
  4099d8:	000b 000b 0009 0009 0009 0009 0009 0009     ................
  4099e8:	000c 000c 0013 0013 001b 001b 0025 0025     ............%.%.
  4099f8:	002e 002e 0038 0038 003f 003f 0040 0040     ....8.8.?.?.@.@.
  409a08:	003d 003d 0034 0034 0028 0028 0029 0029     =.=.4.4.(.(.).).
  409a18:	0029 0029 002a 002a 002d 002d 0026 0026     ).).*.*.-.-.&.&.
  409a28:	0016 0016 0005 0005 ffef ffef ffe2 ffe2     ................
  409a38:	ffd8 ffd8 ffd7 ffd7 ffdb ffdb ffdb ffdb     ................
  409a48:	ffdd ffdd ffd8 ffd8 ffd5 ffd5 ffd7 ffd7     ................
  409a58:	ffe0 ffe0 ffea ffea fff5 fff5 fffd fffd     ................
  409a68:	fff8 fff8 ffec ffec ffe1 ffe1 ffd7 ffd7     ................
  409a78:	ffd1 ffd1 ffd9 ffd9 ffe6 ffe6 fff5 fff5     ................
  409a88:	0001 0001 0003 0003 0002 0002 fffe fffe     ................
  409a98:	fffe fffe 0007 0007 0018 0018 002b 002b     ............+.+.
  409aa8:	003d 003d 004a 004a 0051 0051 004f 004f     =.=.J.J.Q.Q.O.O.
  409ab8:	004e 004e 004d 004d 004a 004a 004a 004a     N.N.M.M.J.J.J.J.
  409ac8:	004b 004b 0049 0049 0045 0045 003a 003a     K.K.I.I.E.E.:.:.
  409ad8:	002c 002c 001d 001d 000f 000f ffff ffff     ,.,.............
  409ae8:	fff4 fff4 ffed ffed ffe2 ffe2 ffdb ffdb     ................
  409af8:	ffc9 ffc9 ffba ffba ffac ffac ffa2 ffa2     ................
  409b08:	ffa4 ffa4 ffaf ffaf ffbe ffbe ffd5 ffd5     ................
  409b18:	ffe3 ffe3 ffea ffea ffeb ffeb ffe3 ffe3     ................
  409b28:	ffd7 ffd7 ffd4 ffd4 ffd5 ffd5 ffe5 ffe5     ................
  409b38:	ffee ffee fff9 fff9 0003 0003 000a 000a     ................
  409b48:	0011 0011 001b 001b 0026 0026 0032 0032     ........&.&.2.2.
  409b58:	003b 003b 0045 0045 0045 0045 003f 003f     ;.;.E.E.E.E.?.?.
  409b68:	0037 0037 0033 0033 0036 0036 003d 003d     7.7.3.3.6.6.=.=.
  409b78:	0046 0046 0047 0047 0041 0041 0036 0036     F.F.G.G.A.A.6.6.
  409b88:	0028 0028 0018 0018 000b 000b ffff ffff     (.(.............
  409b98:	fff4 fff4 ffe7 ffe7 ffd7 ffd7 ffc5 ffc5     ................
  409ba8:	ffb0 ffb0 ff9e ff9e ff92 ff92 ff90 ff90     ................
  409bb8:	ff94 ff94 ffa0 ffa0 ffb1 ffb1 ffbc ffbc     ................
  409bc8:	ffca ffca ffd9 ffd9 ffe7 ffe7 fff3 fff3     ................
  409bd8:	fffd fffd 0003 0003 0006 0006 0007 0007     ................
  409be8:	000a 000a 0009 0009 000c 000c 0014 0014     ................
  409bf8:	001a 001a 001d 001d 0022 0022 0027 0027     ........".".'.'.
  409c08:	002a 002a 002c 002c 002a 002a 0026 0026     *.*.,.,.*.*.&.&.
  409c18:	0027 0027 0029 0029 0023 0023 0023 0023     '.'.).).#.#.#.#.
  409c28:	0027 0027 0021 0021 0021 0021 0020 0020     '.'.!.!.!.!. . .
  409c38:	001a 001a 0015 0015 000f 000f 000c 000c     ................
  409c48:	000a 000a 0006 0006 0004 0004 fffa fffa     ................
  409c58:	ffee ffee ffe3 ffe3 ffd5 ffd5 ffc5 ffc5     ................
  409c68:	ffbc ffbc ffb5 ffb5 ffb2 ffb2 ffb2 ffb2     ................
  409c78:	ffb8 ffb8 ffc1 ffc1 ffd1 ffd1 ffe7 ffe7     ................
  409c88:	ffff ffff 0013 0013 0021 0021 0022 0022     ........!.!.".".
  409c98:	001f 001f 0015 0015 0016 0016 0016 0016     ................
  409ca8:	001e 001e 002a 002a 0034 0034 0038 0038     ....*.*.4.4.8.8.
  409cb8:	0038 0038 0037 0037 0033 0033 002d 002d     8.8.7.7.3.3.-.-.
  409cc8:	002b 002b 0027 0027 0023 0023 001a 001a     +.+.'.'.#.#.....
  409cd8:	000c 000c fffb fffb ffec ffec ffe7 ffe7     ................
  409ce8:	ffed ffed fffd fffd 0006 0006 0010 0010     ................
  409cf8:	000e 000e 0002 0002 fffa fffa ffed ffed     ................
  409d08:	ffe1 ffe1 ffe0 ffe0 ffdf ffdf ffdf ffdf     ................
  409d18:	ffe3 ffe3 ffe5 ffe5 ffe8 ffe8 ffe2 ffe2     ................
  409d28:	ffe3 ffe3 ffe6 ffe6 ffef ffef fff8 fff8     ................
  409d38:	ffff ffff 000a 000a 0010 0010 0015 0015     ................
  409d48:	001c 001c 0021 0021 0021 0021 0023 0023     ....!.!.!.!.#.#.
  409d58:	002d 002d 0030 0030 0039 0039 003f 003f     -.-.0.0.9.9.?.?.
  409d68:	0044 0044 0045 0045 003b 003b 0036 0036     D.D.E.E.;.;.6.6.
  409d78:	002c 002c 0021 0021 0021 0021 0018 0018     ,.,.!.!.!.!.....
  409d88:	0012 0012 000a 000a fffc fffc ffec ffec     ................
  409d98:	ffdb ffdb ffd4 ffd4 ffd5 ffd5 ffdc ffdc     ................
  409da8:	ffe3 ffe3 ffec ffec ffe8 ffe8 ffe6 ffe6     ................
  409db8:	ffdd ffdd ffd7 ffd7 ffd2 ffd2 ffd0 ffd0     ................
  409dc8:	ffd6 ffd6 ffda ffda ffe2 ffe2 ffea ffea     ................
  409dd8:	ffec ffec fff1 fff1 fff7 fff7 fffd fffd     ................
  409de8:	0003 0003 0006 0006 0007 0007 0005 0005     ................
  409df8:	0006 0006 0006 0006 0007 0007 000b 000b     ................
  409e08:	0018 0018 001e 001e 0024 0024 002d 002d     ........$.$.-.-.
  409e18:	0030 0030 0030 0030 0036 0036 0033 0033     0.0.0.0.6.6.3.3.
  409e28:	0031 0031 002b 002b 0022 0022 0018 0018     1.1.+.+.".".....
  409e38:	0011 0011 0009 0009 0008 0008 0002 0002     ................
  409e48:	ffff ffff fff5 fff5 ffe7 ffe7 ffdc ffdc     ................
  409e58:	ffce ffce ffc8 ffc8 ffbf ffbf ffba ffba     ................
  409e68:	ffba ffba ffb9 ffb9 ffb9 ffb9 ffbc ffbc     ................
  409e78:	ffb8 ffb8 ffb9 ffb9 ffba ffba ffc0 ffc0     ................
  409e88:	ffca ffca ffd9 ffd9 ffe8 ffe8 fffb fffb     ................
  409e98:	0009 0009 000e 000e 0013 0013 0013 0013     ................
  409ea8:	000f 000f 0012 0012 0015 0015 0021 0021     ............!.!.
  409eb8:	0027 0027 002a 002a 002c 002c 002b 002b     '.'.*.*.,.,.+.+.
  409ec8:	0029 0029 0028 0028 002b 002b 0030 0030     ).).(.(.+.+.0.0.
  409ed8:	0037 0037 0035 0035 0031 0031 0024 0024     7.7.5.5.1.1.$.$.
  409ee8:	0010 0010 0000 0000 fff6 fff6 fff6 fff6     ................
  409ef8:	fff8 fff8 fffb fffb fffc fffc ffef ffef     ................
  409f08:	ffdf ffdf ffd1 ffd1 ffc3 ffc3 ffc4 ffc4     ................
  409f18:	ffcc ffcc ffd3 ffd3 ffd8 ffd8 ffd8 ffd8     ................
  409f28:	ffd0 ffd0 ffc7 ffc7 ffbf ffbf ffbb ffbb     ................
  409f38:	ffbc ffbc ffc7 ffc7 ffd9 ffd9 ffec ffec     ................
  409f48:	0001 0001 0015 0015 0025 0025 002f 002f     ........%.%././.
  409f58:	0034 0034 0035 0035 0031 0031 0025 0025     4.4.5.5.1.1.%.%.
  409f68:	001b 001b 0014 0014 0010 0010 0010 0010     ................
  409f78:	0018 0018 0020 0020 0029 0029 002f 002f     .... . .).)././.
  409f88:	0033 0033 0034 0034 0036 0036 002d 002d     3.3.4.4.6.6.-.-.
  409f98:	0024 0024 0015 0015 0003 0003 fff6 fff6     $.$.............
  409fa8:	ffec ffec ffe9 ffe9 fff4 fff4 0005 0005     ................
  409fb8:	000e 000e 0014 0014 0011 0011 0008 0008     ................
  409fc8:	fff8 fff8 ffed ffed ffe2 ffe2 ffdf ffdf     ................
  409fd8:	ffdb ffdb ffe1 ffe1 ffe2 ffe2 ffde ffde     ................
  409fe8:	ffd9 ffd9 ffd6 ffd6 ffd5 ffd5 ffd5 ffd5     ................
  409ff8:	ffda ffda ffe7 ffe7 fff6 fff6 0006 0006     ................
  40a008:	0016 0016 0020 0020 0025 0025 0023 0023     .... . .%.%.#.#.
  40a018:	001e 001e 0014 0014 000f 000f 000a 000a     ................
  40a028:	0007 0007 0008 0008 000b 000b 000c 000c     ................
  40a038:	000f 000f 0018 0018 0026 0026 0033 0033     ........&.&.3.3.
  40a048:	0041 0041 0044 0044 0045 0045 0038 0038     A.A.D.D.E.E.8.8.
  40a058:	0024 0024 000e 000e fff8 fff8 fff4 fff4     $.$.............
  40a068:	fff5 fff5 0003 0003 0012 0012 001b 001b     ................
  40a078:	0020 0020 001d 001d 0015 0015 000c 000c      . .............
  40a088:	0003 0003 fff8 fff8 ffed ffed ffe1 ffe1     ................
  40a098:	ffd5 ffd5 ffc6 ffc6 ffb9 ffb9 ffb2 ffb2     ................
  40a0a8:	ffb1 ffb1 ffb6 ffb6 ffc3 ffc3 ffd3 ffd3     ................
  40a0b8:	ffe3 ffe3 fff5 fff5 0005 0005 0013 0013     ................
  40a0c8:	001e 001e 0023 0023 0026 0026 0022 0022     ....#.#.&.&.".".
  40a0d8:	0022 0022 0020 0020 0023 0023 001f 001f     ".". . .#.#.....
  40a0e8:	001c 001c 0013 0013 0011 0011 000f 000f     ................
  40a0f8:	001a 001a 0025 0025 0037 0037 0049 0049     ....%.%.7.7.I.I.
  40a108:	0044 0044 003c 003c 0024 0024 000c 000c     D.D.<.<.$.$.....
  40a118:	fff6 fff6 ffe6 ffe6 ffe0 ffe0 ffe6 ffe6     ................
  40a128:	fff1 fff1 fff9 fff9 fffc fffc 0003 0003     ................
  40a138:	0004 0004 000d 000d 0017 0017 001d 001d     ................
  40a148:	0024 0024 001d 001d 000c 000c fff2 fff2     $.$.............
  40a158:	ffda ffda ffc6 ffc6 ffbb ffbb ffb9 ffb9     ................
  40a168:	ffc5 ffc5 ffd8 ffd8 fff0 fff0 0002 0002     ................
  40a178:	0012 0012 001d 001d 0024 0024 0021 0021     ........$.$.!.!.
  40a188:	001b 001b 0016 0016 000d 000d 000b 000b     ................
  40a198:	0004 0004 fffe fffe fff4 fff4 fff4 fff4     ................
  40a1a8:	fff1 fff1 fffa fffa 000d 000d 0021 0021     ............!.!.
  40a1b8:	0033 0033 0039 0039 003a 003a 0027 0027     3.3.9.9.:.:.'.'.
  40a1c8:	0012 0012 fffb fffb ffe7 ffe7 ffdb ffdb     ................
  40a1d8:	ffd8 ffd8 ffde ffde ffe4 ffe4 fff3 fff3     ................
  40a1e8:	fffb fffb 000a 000a 0013 0013 001a 001a     ................
  40a1f8:	001e 001e 0020 0020 001c 001c 000f 000f     .... . .........
  40a208:	0000 0000 ffec ffec ffda ffda ffcd ffcd     ................
  40a218:	ffc9 ffc9 ffc5 ffc5 ffcb ffcb ffd9 ffd9     ................
  40a228:	ffe9 ffe9 fff5 fff5 0000 0000 0005 0005     ................
  40a238:	0008 0008 0006 0006 0002 0002 0000 0000     ................
  40a248:	fffc fffc 0002 0002 000b 000b 0014 0014     ................
  40a258:	0017 0017 0017 0017 000f 000f 000e 000e     ................
  40a268:	0010 0010 001d 001d 002b 002b 0039 0039     ........+.+.9.9.
  40a278:	0040 0040 0038 0038 0028 0028 0012 0012     @.@.8.8.(.(.....
  40a288:	fffb fffb ffe4 ffe4 ffd7 ffd7 ffd1 ffd1     ................
  40a298:	ffd3 ffd3 ffd3 ffd3 ffd7 ffd7 ffdc ffdc     ................
  40a2a8:	ffe7 ffe7 fff7 fff7 0006 0006 001a 001a     ................
  40a2b8:	0025 0025 001f 001f 0013 0013 ffff ffff     %.%.............
  40a2c8:	ffe5 ffe5 ffd4 ffd4 ffc5 ffc5 ffc3 ffc3     ................
  40a2d8:	ffcd ffcd ffde ffde fff1 fff1 0008 0008     ................
  40a2e8:	0014 0014 001c 001c 001d 001d 001c 001c     ................
  40a2f8:	0018 0018 0016 0016 0015 0015 0019 0019     ................
  40a308:	0013 0013 0011 0011 0010 0010 000d 000d     ................
  40a318:	000a 000a 000a 000a 0011 0011 001d 001d     ................
  40a328:	0024 0024 0027 0027 0026 0026 0019 0019     $.$.'.'.&.&.....
  40a338:	000e 000e 0003 0003 fff7 fff7 ffee ffee     ................
  40a348:	ffe5 ffe5 ffdc ffdc ffd2 ffd2 ffc8 ffc8     ................
  40a358:	ffc6 ffc6 ffcc ffcc ffd8 ffd8 ffee ffee     ................
  40a368:	0004 0004 0017 0017 0024 0024 0025 0025     ........$.$.%.%.
  40a378:	001c 001c 0011 0011 0001 0001 fff7 fff7     ................
  40a388:	ffef ffef ffee ffee fff0 fff0 fff7 fff7     ................
  40a398:	ffff ffff 0006 0006 000d 000d 0013 0013     ................
  40a3a8:	0019 0019 001c 001c 0019 0019 001a 001a     ................
  40a3b8:	0012 0012 000c 000c 0004 0004 0004 0004     ................
  40a3c8:	0003 0003 000c 000c 0015 0015 001b 001b     ................
  40a3d8:	001f 001f 0028 0028 002b 002b 002c 002c     ....(.(.+.+.,.,.
  40a3e8:	0023 0023 001d 001d 0013 0013 0009 0009     #.#.............
  40a3f8:	fff9 fff9 fff4 fff4 ffed ffed ffe5 ffe5     ................
  40a408:	ffe3 ffe3 ffe0 ffe0 ffdd ffdd ffde ffde     ................
  40a418:	ffe5 ffe5 ffe7 ffe7 fff2 fff2 fff7 fff7     ................
  40a428:	fff8 fff8 fff7 fff7 fff3 fff3 ffed ffed     ................
  40a438:	ffe9 ffe9 ffe4 ffe4 ffe8 ffe8 fff1 fff1     ................
  40a448:	fff7 fff7 0006 0006 0009 0009 000a 000a     ................
  40a458:	0005 0005 0004 0004 0002 0002 0002 0002     ................
  40a468:	0005 0005 0008 0008 0011 0011 0018 0018     ................
  40a478:	001a 001a 001f 001f 0022 0022 0022 0022     ........".".".".
  40a488:	0028 0028 0029 0029 002b 002b 002e 002e     (.(.).).+.+.....
  40a498:	002c 002c 002b 002b 0025 0025 001b 001b     ,.,.+.+.%.%.....
  40a4a8:	0016 0016 000d 000d 0004 0004 0001 0001     ................
  40a4b8:	fffe fffe fff8 fff8 fff8 fff8 fff1 fff1     ................
  40a4c8:	ffeb ffeb ffe9 ffe9 ffe5 ffe5 ffe9 ffe9     ................
  40a4d8:	ffee ffee fff6 fff6 fff9 fff9 fff7 fff7     ................
  40a4e8:	fff7 fff7 ffec ffec ffe2 ffe2 ffda ffda     ................
  40a4f8:	ffdd ffdd ffe0 ffe0 ffed ffed fffa fffa     ................
  40a508:	ffff ffff fffe fffe fffa fffa fff3 fff3     ................
  40a518:	fff4 fff4 fffc fffc 0004 0004 0013 0013     ................
  40a528:	001c 001c 001f 001f 001d 001d 0018 0018     ................
  40a538:	0010 0010 0014 0014 001b 001b 0023 0023     ............#.#.
  40a548:	002e 002e 0034 0034 0037 0037 0035 0035     ....4.4.7.7.5.5.
  40a558:	002e 002e 0022 0022 0012 0012 000b 000b     ....".".........
  40a568:	0003 0003 fffe fffe fff6 fff6 ffee ffee     ................
  40a578:	ffec ffec ffe6 ffe6 ffe1 ffe1 ffdd ffdd     ................
  40a588:	ffe0 ffe0 ffe3 ffe3 ffe7 ffe7 fff0 fff0     ................
  40a598:	fff4 fff4 fff8 fff8 fff4 fff4 ffef ffef     ................
  40a5a8:	ffe7 ffe7 ffe1 ffe1 ffe5 ffe5 ffea ffea     ................
  40a5b8:	fff8 fff8 0002 0002 000a 000a 0005 0005     ................
  40a5c8:	fff7 fff7 fff1 fff1 ffed ffed ffea ffea     ................
  40a5d8:	fffb fffb 0005 0005 0012 0012 0015 0015     ................
  40a5e8:	0013 0013 000c 000c 0007 0007 0008 0008     ................
  40a5f8:	000c 000c 0017 0017 0021 0021 0029 0029     ........!.!.).).
  40a608:	002e 002e 002e 002e 002a 002a 0023 0023     ........*.*.#.#.
  40a618:	001c 001c 0011 0011 0004 0004 fffa fffa     ................
  40a628:	fff2 fff2 ffed ffed ffe3 ffe3 ffdd ffdd     ................
  40a638:	ffd5 ffd5 ffd1 ffd1 ffd0 ffd0 ffd0 ffd0     ................
  40a648:	ffd5 ffd5 ffdd ffdd ffe4 ffe4 ffeb ffeb     ................
  40a658:	fff1 fff1 fff4 fff4 ffef ffef ffee ffee     ................
  40a668:	fff0 fff0 fff3 fff3 0000 0000 000a 000a     ................
  40a678:	0017 0017 0017 0017 0011 0011 0006 0006     ................
  40a688:	fffd fffd fff8 fff8 0000 0000 0007 0007     ................
  40a698:	0014 0014 001e 001e 001e 001e 001c 001c     ................
  40a6a8:	0013 0013 000b 000b 0005 0005 0003 0003     ................
  40a6b8:	0008 0008 000f 000f 0016 0016 001f 001f     ................
  40a6c8:	0024 0024 001e 001e 0016 0016 000a 000a     $.$.............
  40a6d8:	0002 0002 fffd fffd fff9 fff9 fff8 fff8     ................
  40a6e8:	fff7 fff7 fff0 fff0 ffe4 ffe4 ffd7 ffd7     ................
  40a6f8:	ffcf ffcf ffcb ffcb ffd2 ffd2 ffdd ffdd     ................
  40a708:	ffeb ffeb fffa fffa 0002 0002 0004 0004     ................
  40a718:	0001 0001 fffb fffb fff9 fff9 0000 0000     ................
  40a728:	000f 000f 0021 0021 0029 0029 0034 0034     ....!.!.).).4.4.
  40a738:	0031 0031 0029 0029 0022 0022 001f 001f     1.1.).).".".....
  40a748:	0022 0022 0029 0029 0030 0030 002f 002f     ".".).).0.0././.
  40a758:	0026 0026 001a 001a 000a 000a 0002 0002     &.&.............
  40a768:	fffc fffc fff9 fff9 fff8 fff8 fffd fffd     ................
  40a778:	ffff ffff ffff ffff fffa fffa fff3 fff3     ................
  40a788:	ffeb ffeb ffe4 ffe4 ffdd ffdd ffe2 ffe2     ................
  40a798:	ffe6 ffe6 ffe7 ffe7 ffe9 ffe9 ffe4 ffe4     ................
  40a7a8:	ffdb ffdb ffcf ffcf ffc5 ffc5 ffc8 ffc8     ................
  40a7b8:	ffd0 ffd0 ffe4 ffe4 fff9 fff9 0010 0010     ................
  40a7c8:	0021 0021 0028 0028 002a 002a 002b 002b     !.!.(.(.*.*.+.+.
  40a7d8:	002d 002d 002f 002f 0034 0034 003d 003d     -.-././.4.4.=.=.
  40a7e8:	0047 0047 0049 0049 0049 0049 0040 0040     G.G.I.I.I.I.@.@.
  40a7f8:	003c 003c 003e 003e 0042 0042 0045 0045     <.<.>.>.B.B.E.E.
  40a808:	0046 0046 0042 0042 0037 0037 0024 0024     F.F.B.B.7.7.$.$.
  40a818:	0007 0007 fff0 fff0 ffda ffda ffcf ffcf     ................
  40a828:	ffca ffca ffcc ffcc ffd2 ffd2 ffd7 ffd7     ................
  40a838:	ffd7 ffd7 ffcf ffcf ffc5 ffc5 ffbe ffbe     ................
  40a848:	ffb8 ffb8 ffb9 ffb9 ffc2 ffc2 ffcd ffcd     ................
  40a858:	ffd8 ffd8 ffdd ffdd ffdf ffdf ffdc ffdc     ................
  40a868:	ffdb ffdb ffdd ffdd ffed ffed fffa fffa     ................
  40a878:	0012 0012 001e 001e 002b 002b 0033 0033     ........+.+.3.3.
  40a888:	0031 0031 0034 0034 0036 0036 003b 003b     1.1.4.4.6.6.;.;.
  40a898:	0041 0041 0048 0048 004f 004f 0050 0050     A.A.H.H.O.O.P.P.
  40a8a8:	004e 004e 0048 0048                         N.N.H.H.

0040a8b0 <click_low>:
  40a8b0:	00df 00df 058f 058f 12a1 12a1 21a5 21a5     .............!.!
  40a8c0:	2ded 2ded 3860 3860 3968 3968 29a8 29a8     .-.-`8`8h9h9.).)
  40a8d0:	0e12 0e12 ef21 ef21 d39c d39c c50a c50a     ....!.!.........
  40a8e0:	c940 c940 dad8 dad8 f035 f035 0054 0054     @.@.....5.5.T.T.
  40a8f0:	0489 0489 fd52 fd52 f2ea f2ea ea8a ea8a     ....R.R.........
  40a900:	e597 e597 e842 e842 ec47 ec47 f089 f089     ....B.B.G.G.....
  40a910:	f46d f46d f6f0 f6f0 f85a f85a fbd0 fbd0     m.m.....Z.Z.....
  40a920:	01a0 01a0 0461 0461 fe43 fe43 f300 f300     ....a.a.C.C.....
  40a930:	e642 e642 d7ba d7ba d127 d127 dcdf dcdf     B.B.....'.'.....
  40a940:	f839 f839 19cd 19cd 38be 38be 4961 4961     9.9......8.8aIaI
  40a950:	43de 43de 2d81 2d81 130a 130a fe9a fe9a     .C.C.-.-........
  40a960:	f788 f788 fd8c fd8c 0938 0938 126f 126f     ........8.8.o.o.
  40a970:	17a5 17a5 1804 1804 12de 12de 0d1c 0d1c     ................
  40a980:	06e5 06e5 02c1 02c1 0021 0021 fc5a fc5a     ........!.!.Z.Z.
  40a990:	f688 f688 f13e f13e f20a f20a fd75 fd75     ....>.>.....u.u.
  40a9a0:	0e51 0e51 2043 2043 2fd4 2fd4 320e 320e     Q.Q.C C ././.2.2
  40a9b0:	201e 201e 0042 0042 dd26 dd26 c099 c099     . . B.B.&.&.....
  40a9c0:	b5c0 b5c0 bfe8 bfe8 d620 d620 ed12 ed12     ........ . .....
  40a9d0:	fcbb fcbb ff4f ff4f f775 f775 ece9 ece9     ....O.O.u.u.....
  40a9e0:	e5a9 e5a9 e13e e13e e3f1 e3f1 ea73 ea73     ....>.>.....s.s.
  40a9f0:	f151 f151 f862 f862 fe03 fe03 0331 0331     Q.Q.b.b.....1.1.
  40aa00:	0a38 0a38 12d4 12d4 186a 186a 146a 146a     8.8.....j.j.j.j.
  40aa10:	070d 070d f69e f69e e4f5 e4f5 d8f6 d8f6     ................
  40aa20:	ddf6 ddf6 f4e1 f4e1 1480 1480 3385 3385     .............3.3
  40aa30:	47d7 47d7 4800 4800 35cf 35cf 1c1b 1c1b     .G.G.H.H.5.5....
  40aa40:	04ee 04ee f7e8 f7e8 f864 f864 00e4 00e4     ........d.d.....
  40aa50:	09ea 09ea 1000 1000 137c 137c 1118 1118     ........|.|.....
  40aa60:	0ca9 0ca9 0726 0726 01be 01be fde6 fde6     ....&.&.........
  40aa70:	f9a2 f9a2 f34d f34d ecd4 ecd4 eb13 eb13     ....M.M.........
  40aa80:	f3cd f3cd 048d 048d 170e 170e 288c 288c     .............(.(
  40aa90:	30a9 30a9 2608 2608 0ac2 0ac2 e905 e905     .0.0.&.&........
  40aaa0:	ca57 ca57 b980 b980 bd14 bd14 cfc5 cfc5     W.W.............
  40aab0:	e653 e653 f8a6 f8a6 001d 001d fc11 fc11     S.S.............
  40aac0:	f274 f274 eaaa eaaa e596 e596 e62d e62d     t.t.........-.-.
  40aad0:	ed08 ed08 f498 f498 fca8 fca8 0334 0334     ............4.4.
  40aae0:	0848 0848 0db1 0db1 149c 149c 19df 19df     H.H.............
  40aaf0:	17e2 17e2 0c01 0c01 fc20 fc20 eb2c eb2c     ........ . .,.,.
  40ab00:	dcc0 dcc0 db7d db7d ec4f ec4f 087d 087d     ....}.}.O.O.}.}.
  40ab10:	26c0 26c0 3e49 3e49 450c 450c 389f 389f     .&.&I>I>.E.E.8.8
  40ab20:	216e 216e 09ba 09ba f9a4 f9a4 f658 f658     n!n!........X.X.
  40ab30:	fd07 fd07 0604 0604 0cda 0cda 0fa5 0fa5     ................
  40ab40:	0e93 0e93 0b16 0b16 0622 0622 00ca 00ca     ........".".....
  40ab50:	fced fced f9fc f9fc f51d f51d ef1f ef1f     ................
  40ab60:	ea66 ea66 e81a e81a e971 e971 eee8 eee8     f.f.....q.q.....
  40ab70:	f60f f60f fb5d fb5d fcd2 fcd2 f9ed f9ed     ....].].........
  40ab80:	f406 f406 ee5d ee5d ec1e ec1e ee54 ee54     ....].].....T.T.
  40ab90:	f33c f33c f824 f824 fbd4 fbd4 fe2e fe2e     <.<.$.$.........
  40aba0:	ff27 ff27 ff34 ff34 fef3 fef3 fed2 fed2     '.'.4.4.........
  40abb0:	ff53 ff53 011f 011f 040d 040d 0715 0715     S.S.............
  40abc0:	0986 0986 0b6f 0b6f 0d1b 0d1b 0ea7 0ea7     ....o.o.........
  40abd0:	0f79 0f79 0ef9 0ef9 0d72 0d72 0b51 0b51     y.y.....r.r.Q.Q.
  40abe0:	08f5 08f5 0721 0721 0629 0629 05bd 05bd     ....!.!.).).....
  40abf0:	05bc 05bc 061d 061d 0675 0675 0666 0666     ........u.u.f.f.
  40ac00:	05f6 05f6 04fc 04fc 037b 037b 01b9 01b9     ........{.{.....
  40ac10:	ffa1 ffa1 fd46 fd46 fb32 fb32 fa03 fa03     ....F.F.2.2.....
  40ac20:	f9d8 f9d8 fa80 fa80 fba7 fba7 fc9a fc9a     ................
  40ac30:	fcb8 fcb8 fc45 fc45 fb5f fb5f fa13 fa13     ....E.E._._.....
  40ac40:	f8e6 f8e6 f864 f864 f8f3 f8f3 fa57 fa57     ....d.d.....W.W.
  40ac50:	fbed fbed fd38 fd38 fdf5 fdf5 fe33 fe33     ....8.8.....3.3.
  40ac60:	fe47 fe47 fe70 fe70 fead fead ff19 ff19     G.G.p.p.........
  40ac70:	ffa6 ffa6 002b 002b 0091 0091 00b5 00b5     ....+.+.........
  40ac80:	00ba 00ba 00fd 00fd 019f 019f 028a 028a     ................
  40ac90:	0390 0390 0460 0460 04be 04be 04a9 04a9     ....`.`.........
  40aca0:	046d 046d 0457 0457 044d 044d 0444 0444     m.m.W.W.M.M.D.D.
  40acb0:	0424 0424 03ae 03ae 02d1 02d1 01ca 01ca     $.$.............
  40acc0:	00fb 00fb 0091 0091 0087 0087 00c7 00c7     ................
  40acd0:	00fd 00fd 00d6 00d6 004f 004f ff86 ff86     ........O.O.....
  40ace0:	feb6 feb6 fe1b fe1b fdec fdec fe2e fe2e     ................
  40acf0:	feb7 feb7 ff30 ff30 ff4b ff4b feff feff     ....0.0.K.K.....
  40ad00:	fe74 fe74 fde1 fde1 fd9e fd9e fdd2 fdd2     t.t.............
  40ad10:	fe49 fe49 fe97 fe97 fe93 fe93 fe5b fe5b     I.I.........[.[.
  40ad20:	fe20 fe20 fe0c fe0c fe5f fe5f ff17 ff17      . ....._._.....
  40ad30:	fff9 fff9 00b7 00b7 0122 0122 010a 010a     ........".".....
  40ad40:	0096 0096 0028 0028 0009 0009 003c 003c     ....(.(.....<.<.
  40ad50:	00a1 00a1 00f4 00f4 00fa 00fa 00b8 00b8     ................
  40ad60:	0035 0035 ff99 ff99 ff4d ff4d ff86 ff86     5.5.....M.M.....
  40ad70:	000c 000c 009c 009c 00f4 00f4 00d0 00d0     ................
  40ad80:	003e 003e ffb4 ffb4 ff79 ff79 ff94 ff94     >.>.....y.y.....
  40ad90:	fffc fffc 007e 007e 00c9 00c9 0098 0098     ....~.~.........
  40ada0:	0011 0011 ff5e ff5e feb1 feb1 fe4e fe4e     ....^.^.....N.N.
  40adb0:	fe73 fe73 fee6 fee6 ff59 ff59 ffa4 ffa4     s.s.....Y.Y.....
  40adc0:	ffab ffab ff8e ff8e ff80 ff80 ffae ffae     ................
  40add0:	0015 0015 007c 007c 00bc 00bc 00ab 00ab     ....|.|.........
  40ade0:	0057 0057 ffec ffec ff9e ff9e ff89 ff89     W.W.............
  40adf0:	ffbd ffbd 0019 0019 005c 005c 0064 0064     ........\.\.d.d.
  40ae00:	0026 0026 ffbf ffbf ff60 ff60 ff5c ff5c     &.&.....`.`.\.\.
  40ae10:	ffb4 ffb4 0042 0042 00c4 00c4 010e 010e     ....B.B.........
  40ae20:	00f2 00f2 0080 0080 fff9 fff9 ff8d ff8d     ................
  40ae30:	ff52 ff52 ff48 ff48 ff4d ff4d ff3a ff3a     R.R.H.H.M.M.:.:.
  40ae40:	ff00 ff00 feaf feaf fe67 fe67 fe58 fe58     ........g.g.X.X.
  40ae50:	fe9c fe9c ff1c ff1c ffad ffad 0011 0011     ................
  40ae60:	0024 0024 ffeb ffeb ff98 ff98 ff58 ff58     $.$.........X.X.
  40ae70:	ff4d ff4d ff76 ff76 ffb2 ffb2 ffcf ffcf     M.M.v.v.........
  40ae80:	ffb4 ffb4 ff71 ff71 ff1c ff1c fedd fedd     ....q.q.........
  40ae90:	fed9 fed9 ff1e ff1e ff99 ff99 0010 0010     ................
  40aea0:	005c 005c 0074 0074 006c 006c 0066 0066     \.\.t.t.l.l.f.f.
  40aeb0:	0085 0085 00c4 00c4 0117 0117 0153 0153     ............S.S.
  40aec0:	0154 0154 011b 011b 00b7 00b7 0046 0046     T.T.........F.F.
  40aed0:	fff9 fff9 ffec ffec 0017 0017 004d 004d     ............M.M.
  40aee0:	006c 006c 005a 005a 000f 000f ffb3 ffb3     l.l.Z.Z.........
  40aef0:	ff7a ff7a ff76 ff76 ff95 ff95 ffc6 ffc6     z.z.v.v.........
  40af00:	fff2 fff2 fffe fffe ffd7 ffd7 ff8e ff8e     ................
  40af10:	ff4f ff4f ff26 ff26 ff20 ff20 ff3a ff3a     O.O.&.&. . .:.:.
  40af20:	ff57 ff57 ff62 ff62 ff59 ff59 ff47 ff47     W.W.b.b.Y.Y.G.G.
  40af30:	ff3a ff3a ff44 ff44 ff75 ff75 ffb3 ffb3     :.:.D.D.u.u.....
  40af40:	ffec ffec ffff ffff fff8 fff8 ffda ffda     ................
  40af50:	ffb7 ffb7 ffa8 ffa8 ffc2 ffc2 0006 0006     ................
  40af60:	0050 0050 0088 0088 009f 009f 0089 0089     P.P.............
  40af70:	006b 006b 004a 004a 0042 0042 0059 0059     k.k.J.J.B.B.Y.Y.
  40af80:	007a 007a 0090 0090 0099 0099 0093 0093     z.z.............
  40af90:	007c 007c 006d 006d 006c 006c 0073 0073     |.|.m.m.l.l.s.s.
  40afa0:	0087 0087 0098 0098 0095 0095 007d 007d     ............}.}.
  40afb0:	004b 004b 0012 0012 ffe3 ffe3 ffcb ffcb     K.K.............
  40afc0:	ffd9 ffd9 ffee ffee fffc fffc fff8 fff8     ................
  40afd0:	ffe9 ffe9 ffd5 ffd5 ffbf ffbf ffa5 ffa5     ................
  40afe0:	ff87 ff87 ff74 ff74 ff5b ff5b ff47 ff47     ....t.t.[.[.G.G.
  40aff0:	ff36 ff36 ff3d ff3d ff58 ff58 ff84 ff84     6.6.=.=.X.X.....
  40b000:	ffbe ffbe ffec ffec 0001 0001 fffa fffa     ................
  40b010:	ffe7 ffe7 ffc7 ffc7 ffb1 ffb1 ffbb ffbb     ................
  40b020:	ffe0 ffe0 0019 0019 0052 0052 0081 0081     ........R.R.....
  40b030:	0093 0093 0085 0085 0064 0064 003d 003d     ........d.d.=.=.
  40b040:	001c 001c 0012 0012 001c 001c 0034 0034     ............4.4.
  40b050:	0054 0054 0069 0069 0077 0077 007b 007b     T.T.i.i.w.w.{.{.
  40b060:	007a 007a 0069 0069 004a 004a 0026 0026     z.z.i.i.J.J.&.&.
  40b070:	0001 0001 ffe8 ffe8 ffd5 ffd5 ffdc ffdc     ................
  40b080:	fff2 fff2 000d 000d 002a 002a 003c 003c     ........*.*.<.<.
  40b090:	0035 0035 0017 0017 ffe4 ffe4 ffb1 ffb1     5.5.............
  40b0a0:	ff94 ff94 ff93 ff93 ffb0 ffb0 ffd9 ffd9     ................
  40b0b0:	fffb fffb 0014 0014 001c 001c 0013 0013     ................
  40b0c0:	0003 0003 fff1 fff1 ffe5 ffe5 ffea ffea     ................
  40b0d0:	fff3 fff3 fff8 fff8 0001 0001 0012 0012     ................
  40b0e0:	0024 0024 003f 003f 0057 0057 0063 0063     $.$.?.?.W.W.c.c.
  40b0f0:	005d 005d 0043 0043 0021 0021 fff3 fff3     ].].C.C.!.!.....
  40b100:	ffd6 ffd6 ffcb ffcb ffe2 ffe2 0009 0009     ................
  40b110:	002e 002e 0048 0048 0048 0048 003b 003b     ....H.H.H.H.;.;.
  40b120:	0028 0028 0013 0013 ffff ffff fff2 fff2     (.(.............
  40b130:	ffe5 ffe5 ffdd ffdd ffda ffda ffd9 ffd9     ................
  40b140:	ffd8 ffd8 ffdf ffdf ffee ffee fff3 fff3     ................
  40b150:	fff0 fff0 ffed ffed ffe4 ffe4 ffdc ffdc     ................
  40b160:	ffe5 ffe5 fffa fffa 0012 0012 002a 002a     ............*.*.
  40b170:	0037 0037 0030 0030 001a 001a 0000 0000     7.7.0.0.........
  40b180:	ffe3 ffe3 ffca ffca ffc0 ffc0 ffba ffba     ................
  40b190:	ffc2 ffc2 ffcc ffcc ffdd ffdd ffea ffea     ................
  40b1a0:	fffd fffd 0016 0016 002b 002b 003c 003c     ........+.+.<.<.
  40b1b0:	0052 0052 005b 005b 0059 0059 0052 0052     R.R.[.[.Y.Y.R.R.
  40b1c0:	0044 0044 0033 0033 0019 0019 ffff ffff     D.D.3.3.........
  40b1d0:	ffe7 ffe7 ffd5 ffd5 ffc6 ffc6 ffc8 ffc8     ................
  40b1e0:	ffce ffce ffdc ffdc ffe5 ffe5 ffed ffed     ................
  40b1f0:	fffc fffc 0002 0002 000a 000a 0012 0012     ................
  40b200:	001c 001c 002a 002a 0035 0035 003b 003b     ....*.*.5.5.;.;.
  40b210:	0035 0035 0017 0017 fff4 fff4 ffd5 ffd5     5.5.............
  40b220:	ffb4 ffb4 ff9a ff9a ff8d ff8d ff8a ff8a     ................
  40b230:	ff95 ff95 ffa5 ffa5 ffc4 ffc4 ffe9 ffe9     ................
  40b240:	0008 0008 0025 0025 003e 003e 003f 003f     ....%.%.>.>.?.?.
  40b250:	0033 0033 001d 001d ffff ffff ffe8 ffe8     3.3.............
  40b260:	ffde ffde ffe7 ffe7 fff1 fff1 fffd fffd     ................
  40b270:	fffe fffe fff3 fff3 ffd7 ffd7 ffad ffad     ................
  40b280:	ff8a ff8a ff7e ff7e ff8f ff8f ffbb ffbb     ....~.~.........
  40b290:	0002 0002 0059 0059 00ac 00ac 00eb 00eb     ....Y.Y.........
  40b2a0:	0103 0103 00f4 00f4 00ba 00ba 006c 006c     ............l.l.
  40b2b0:	001b 001b ffdb ffdb ffae ffae ffa2 ffa2     ................
  40b2c0:	ffb8 ffb8 ffda ffda 0001 0001 001a 001a     ................
  40b2d0:	001c 001c 000f 000f 0003 0003 fff3 fff3     ................
  40b2e0:	ffe5 ffe5 ffd9 ffd9 ffe3 ffe3 fffe fffe     ................
  40b2f0:	002a 002a 0055 0055 0069 0069 0067 0067     *.*.U.U.i.i.g.g.
  40b300:	0047 0047 0015 0015 ffc5 ffc5 ff70 ff70     G.G.........p.p.
  40b310:	ff28 ff28 ff05 ff05 ff12 ff12 ff4e ff4e     (.(.........N.N.
  40b320:	ff9e ff9e ffeb ffeb 002a 002a 0047 0047     ........*.*.G.G.
  40b330:	0045 0045 002a 002a 0001 0001 ffd5 ffd5     E.E.*.*.........
  40b340:	ffb8 ffb8 ffb3 ffb3 ffbe ffbe ffd3 ffd3     ................
  40b350:	ffee ffee 0012 0012 002a 002a 0031 0031     ........*.*.1.1.
  40b360:	0021 0021 ffff ffff ffd8 ffd8 ffbd ffbd     !.!.............
  40b370:	ffb4 ffb4 ffc2 ffc2 fff4 fff4 0046 0046     ............F.F.
  40b380:	0094 0094 00cd 00cd 00e0 00e0 00c3 00c3     ................
  40b390:	007e 007e 0034 0034 fff0 fff0 ffc0 ffc0     ~.~.4.4.........
  40b3a0:	ffb0 ffb0 ffbb ffbb ffd8 ffd8 fffd fffd     ................
  40b3b0:	001e 001e 002b 002b 0029 0029 001a 001a     ....+.+.).).....
  40b3c0:	000a 000a fff0 fff0 ffda ffda ffc8 ffc8     ................
  40b3d0:	ffc0 ffc0 ffcf ffcf ffec ffec 000b 000b     ................
  40b3e0:	001d 001d 0021 0021 000e 000e ffea ffea     ....!.!.........
  40b3f0:	ffc0 ffc0 ff9a ff9a ff89 ff89 ff93 ff93     ................
  40b400:	ffbb ffbb ffeb ffeb 0017 0017 0034 0034     ............4.4.
  40b410:	0043 0043 0040 0040 003b 003b 0035 0035     C.C.@.@.;.;.5.5.
  40b420:	0030 0030 001e 001e 0005 0005 ffea ffea     0.0.............
  40b430:	ffce ffce ffbb ffbb ffbf ffbf ffde ffde     ................
  40b440:	0008 0008 002b 002b 0035 0035 0028 0028     ....+.+.5.5.(.(.
  40b450:	0006 0006 ffe3 ffe3 ffcc ffcc ffd4 ffd4     ................
  40b460:	fff2 fff2 0020 0020 004b 004b 0060 0060     .... . .K.K.`.`.
  40b470:	0055 0055 0034 0034 0010 0010 ffe6 ffe6     U.U.4.4.........
  40b480:	ffca ffca ffb8 ffb8 ffb5 ffb5 ffc0 ffc0     ................
  40b490:	ffc9 ffc9 ffdc ffdc fff7 fff7 0012 0012     ................
  40b4a0:	0030 0030 0041 0041 0044 0044 002a 002a     0.0.A.A.D.D.*.*.
  40b4b0:	0000 0000 ffd5 ffd5 ffc2 ffc2 ffc4 ffc4     ................
  40b4c0:	ffd8 ffd8 fffb fffb 0018 0018 0027 0027     ............'.'.
  40b4d0:	0021 0021 0007 0007 ffe1 ffe1 ffc4 ffc4     !.!.............
  40b4e0:	ffb5 ffb5 ffc3 ffc3 ffdd ffdd 0006 0006     ................
  40b4f0:	002d 002d 0051 0051 0063 0063 0060 0060     -.-.Q.Q.c.c.`.`.
  40b500:	0051 0051 0034 0034 0016 0016 ffec ffec     Q.Q.4.4.........
  40b510:	ffbf ffbf ff98 ff98 ff7c ff7c ff7c ff7c     ........|.|.|.|.
  40b520:	ff99 ff99 ffcb ffcb fffe fffe 0032 0032     ............2.2.
  40b530:	0048 0048 0046 0046 0031 0031 000b 000b     H.H.F.F.1.1.....
  40b540:	ffe0 ffe0 ffc4 ffc4 ffbe ffbe ffd0 ffd0     ................
  40b550:	fff2 fff2 000e 000e 0022 0022 0022 0022     ........".".".".
  40b560:	0011 0011 fff7 fff7 ffd9 ffd9 ffc1 ffc1     ................
  40b570:	ffb9 ffb9 ffbc ffbc ffc8 ffc8 ffda ffda     ................
  40b580:	fff0 fff0 0005 0005 0015 0015 0025 0025     ............%.%.
  40b590:	002b 002b 0027 0027 0018 0018 0003 0003     +.+.'.'.........
  40b5a0:	ffed ffed ffd1 ffd1 ffc7 ffc7 ffd2 ffd2     ................
  40b5b0:	fff3 fff3 001c 001c 0050 0050 0074 0074     ........P.P.t.t.
  40b5c0:	0082 0082 0079 0079 0062 0062 0043 0043     ....y.y.b.b.C.C.
  40b5d0:	0028 0028 0019 0019 000d 000d 0006 0006     (.(.............
  40b5e0:	0008 0008 000d 000d 0013 0013 0020 0020     ............ . .
  40b5f0:	0028 0028 0020 0020 0007 0007 ffe9 ffe9     (.(. . .........
  40b600:	ffc4 ffc4 ffa6 ffa6 ff99 ff99 ffa5 ffa5     ................
  40b610:	ffc3 ffc3 fff0 fff0 0012 0012 001f 001f     ................
  40b620:	000f 000f ffef ffef ffcd ffcd ffa9 ffa9     ................
  40b630:	ff9d ff9d ffb4 ffb4 ffd3 ffd3 fff5 fff5     ................
  40b640:	000e 000e 0014 0014 000e 000e fffe fffe     ................
  40b650:	ffef ffef ffe1 ffe1 ffd7 ffd7 ffcd ffcd     ................
  40b660:	ffc9 ffc9 ffc9 ffc9 ffd7 ffd7 fff0 fff0     ................
  40b670:	000c 000c 0023 0023 002b 002b 0029 0029     ....#.#.+.+.).).
  40b680:	001c 001c 0006 0006 fffb fffb 0000 0000     ................
  40b690:	0013 0013 0036 0036 0058 0058 0071 0071     ....6.6.X.X.q.q.
  40b6a0:	007b 007b 006f 006f 0055 0055 003d 003d     {.{.o.o.U.U.=.=.
  40b6b0:	0024 0024 0017 0017 0013 0013 000d 000d     $.$.............
  40b6c0:	0005 0005 fff9 fff9 ffeb ffeb ffe6 ffe6     ................
  40b6d0:	ffea ffea fff4 fff4 fffb fffb fffb fffb     ................
  40b6e0:	fff2 fff2 ffe8 ffe8 ffde ffde ffd0 ffd0     ................
  40b6f0:	ffc5 ffc5 ffc8 ffc8 ffd5 ffd5 ffec ffec     ................
  40b700:	0001 0001 000c 000c 0009 0009 0003 0003     ................
  40b710:	ffff ffff fff9 fff9 fffa fffa 0005 0005     ................
  40b720:	000e 000e 0014 0014 001f 001f 0025 0025     ............%.%.
  40b730:	0026 0026 0023 0023 001d 001d 000b 000b     &.&.#.#.........
  40b740:	fffa fffa ffe7 ffe7 ffd3 ffd3 ffc2 ffc2     ................
  40b750:	ffbc ffbc ffbf ffbf ffc9 ffc9 ffe2 ffe2     ................
  40b760:	0001 0001 0020 0020 0035 0035 0041 0041     .... . .5.5.A.A.
  40b770:	0043 0043 003e 003e 0035 0035 0031 0031     C.C.>.>.5.5.1.1.
  40b780:	0028 0028 0027 0027 0025 0025 0024 0024     (.(.'.'.%.%.$.$.
  40b790:	0021 0021 001d 001d 0014 0014 0000 0000     !.!.............
  40b7a0:	ffe4 ffe4 ffc8 ffc8 ffb8 ffb8 ffb5 ffb5     ................
  40b7b0:	ffc9 ffc9 ffe3 ffe3 0004 0004 001d 001d     ................
  40b7c0:	002a 002a 0023 0023 000d 000d fff4 fff4     *.*.#.#.........
  40b7d0:	ffe0 ffe0 ffd1 ffd1 ffd1 ffd1 ffd7 ffd7     ................
  40b7e0:	ffe8 ffe8 fff8 fff8 0005 0005 0007 0007     ................
  40b7f0:	000a 000a 0009 0009 0008 0008 0007 0007     ................
  40b800:	fffe fffe fff6 fff6 ffef ffef fff0 fff0     ................
  40b810:	fffa fffa 000f 000f 001e 001e 0027 0027     ............'.'.
  40b820:	001d 001d 0002 0002 ffe2 ffe2 ffcb ffcb     ................
  40b830:	ffbc ffbc ffba ffba ffcf ffcf ffe6 ffe6     ................
  40b840:	fffd fffd 0010 0010 0019 0019 0014 0014     ................
  40b850:	0016 0016 0017 0017 0016 0016 0014 0014     ................
  40b860:	0011 0011 0007 0007 fffc fffc fffa fffa     ................
  40b870:	fffa fffa fffb fffb ffff ffff 0008 0008     ................
  40b880:	0003 0003 fffc fffc fff5 fff5 ffef ffef     ................
  40b890:	fff1 fff1 fffe fffe 000e 000e 001a 001a     ................
  40b8a0:	0026 0026 002b 002b 001e 001e 0010 0010     &.&.+.+.........
  40b8b0:	0005 0005 fff9 fff9 fff7 fff7 0001 0001     ................
  40b8c0:	0006 0006 000a 000a 000a 000a 0011 0011     ................
  40b8d0:	0015 0015 0015 0015 001e 001e 001d 001d     ................
  40b8e0:	0011 0011 0002 0002 fff5 fff5 ffe3 ffe3     ................
  40b8f0:	ffd4 ffd4 ffd5 ffd5 ffdb ffdb ffe5 ffe5     ................
  40b900:	ffee ffee ffed ffed ffe1 ffe1 ffcf ffcf     ................
  40b910:	ffc1 ffc1 ffb8 ffb8 ffb5 ffb5 ffbf ffbf     ................
  40b920:	ffd2 ffd2 ffe5 ffe5 fffb fffb 000c 000c     ................
  40b930:	0019 0019 0022 0022 0027 0027 0023 0023     ....".".'.'.#.#.
  40b940:	0020 0020 001b 001b 0012 0012 fffe fffe      . .............
  40b950:	fffe fffe 0002 0002 0006 0006 0011 0011     ................
  40b960:	0019 0019 0023 0023 0020 0020 000e 000e     ....#.#. . .....
  40b970:	fff7 fff7 ffe7 ffe7 ffe4 ffe4 fff2 fff2     ................
  40b980:	000b 000b 0024 0024 003c 003c 004a 004a     ....$.$.<.<.J.J.
  40b990:	0049 0049 003d 003d 0029 0029 0015 0015     I.I.=.=.).).....
  40b9a0:	0008 0008 0005 0005 0004 0004 0004 0004     ................
  40b9b0:	0009 0009 0005 0005 0000 0000 fff3 fff3     ................
  40b9c0:	ffe7 ffe7 ffd7 ffd7 ffca ffca ffba ffba     ................
  40b9d0:	ffaa ffaa ff99 ff99 ff8a ff8a ff8d ff8d     ................
  40b9e0:	ff96 ff96 ffaa ffaa ffbc ffbc ffcc ffcc     ................
  40b9f0:	ffcd ffcd ffd1 ffd1 ffcc ffcc ffc8 ffc8     ................
  40ba00:	ffc1 ffc1 ffca ffca ffd6 ffd6 ffe1 ffe1     ................
  40ba10:	ffef ffef fffe fffe 0005 0005 000b 000b     ................
  40ba20:	000e 000e 000e 000e 000f 000f 0015 0015     ................
  40ba30:	001f 001f 0026 0026 0035 0035 0042 0042     ....&.&.5.5.B.B.
  40ba40:	004a 004a 0056 0056 0061 0061 0063 0063     J.J.V.V.a.a.c.c.
  40ba50:	0059 0059 0046 0046 0026 0026 000c 000c     Y.Y.F.F.&.&.....
  40ba60:	fff5 fff5 ffef ffef fff8 fff8 000f 000f     ................
  40ba70:	0028 0028 0047 0047 0055 0055 0055 0055     (.(.G.G.U.U.U.U.
  40ba80:	0042 0042 0020 0020 0004 0004 ffe9 ffe9     B.B. . .........
  40ba90:	ffe1 ffe1 ffe1 ffe1 ffe6 ffe6 ffec ffec     ................
  40baa0:	ffe8 ffe8 ffdf ffdf ffcd ffcd ffbb ffbb     ................
  40bab0:	ffa8 ffa8 ff99 ff99 ff95 ff95 ff92 ff92     ................
  40bac0:	ff9a ff9a ffa3 ffa3 ffb3 ffb3 ffc6 ffc6     ................
  40bad0:	ffd6 ffd6 ffe2 ffe2 ffe8 ffe8 ffe7 ffe7     ................
  40bae0:	ffdd ffdd ffc8 ffc8 ffb4 ffb4 ffa8 ffa8     ................
  40baf0:	ffa7 ffa7 ffb7 ffb7 ffdc ffdc 0004 0004     ................
  40bb00:	0026 0026 003c 003c 0043 0043 003c 003c     &.&.<.<.C.C.<.<.
  40bb10:	002d 002d 0020 0020 001a 001a 0014 0014     -.-. . .........
  40bb20:	0020 0020 0035 0035 0047 0047 0051 0051      . .5.5.G.G.Q.Q.
  40bb30:	005a 005a 0058 0058 0044 0044 0031 0031     Z.Z.X.X.D.D.1.1.
  40bb40:	0017 0017 0003 0003 fffc fffc fffb fffb     ................
  40bb50:	0006 0006 0019 0019 0031 0031 0040 0040     ........1.1.@.@.
  40bb60:	0045 0045 003b 003b 001d 001d fff3 fff3     E.E.;.;.........
  40bb70:	ffd4 ffd4 ffc2 ffc2 ffbe ffbe ffc8 ffc8     ................
  40bb80:	ffdb ffdb ffeb ffeb fff4 fff4 fff6 fff6     ................
  40bb90:	fff1 fff1 ffe5 ffe5 ffd6 ffd6 ffd2 ffd2     ................
  40bba0:	ffd0 ffd0 ffce ffce ffce ffce ffd1 ffd1     ................
  40bbb0:	ffd4 ffd4 ffda ffda ffe2 ffe2 ffe6 ffe6     ................
  40bbc0:	ffec ffec ffe6 ffe6 ffdf ffdf ffda ffda     ................
  40bbd0:	ffdc ffdc ffe2 ffe2 ffed ffed 0007 0007     ................
  40bbe0:	001d 001d 0029 0029 0027 0027 001e 001e     ....).).'.'.....
  40bbf0:	0016 0016 0011 0011 0011 0011 001a 001a     ................
  40bc00:	001e 001e 001d 001d 001f 001f 0018 0018     ................
  40bc10:	000c 000c 0002 0002 fffc fffc fff8 fff8     ................
  40bc20:	fff6 fff6 fff9 fff9 fff4 fff4 fff4 fff4     ................
  40bc30:	ffff ffff 0009 0009 0016 0016 0022 0022     ............".".
  40bc40:	001e 001e 0019 0019 0010 0010 0007 0007     ................
  40bc50:	0001 0001 0003 0003 0015 0015 001c 001c     ................
  40bc60:	0020 0020 0021 0021 0019 0019 0002 0002      . .!.!.........
  40bc70:	ffeb ffeb ffe0 ffe0 ffdf ffdf ffe6 ffe6     ................
  40bc80:	fffe fffe 0014 0014 0029 0029 002f 002f     ........).)././.
  40bc90:	002a 002a 0020 0020 000c 000c fff6 fff6     *.*. . .........
  40bca0:	ffde ffde ffc7 ffc7 ffb4 ffb4 ffaa ffaa     ................
  40bcb0:	ffae ffae ffbf ffbf ffd5 ffd5 ffe9 ffe9     ................
  40bcc0:	fff8 fff8 fffc fffc fff1 fff1 ffd3 ffd3     ................
  40bcd0:	ffbc ffbc ffb0 ffb0 ffba ffba ffd5 ffd5     ................
  40bce0:	0000 0000 001d 001d 0028 0028 001c 001c     ........(.(.....
  40bcf0:	0006 0006 ffe9 ffe9 ffd7 ffd7 ffd3 ffd3     ................
  40bd00:	ffd8 ffd8 ffec ffec 0008 0008 001f 001f     ................
  40bd10:	0037 0037 0045 0045 0053 0053 005c 005c     7.7.E.E.S.S.\.\.
  40bd20:	0054 0054 003c 003c 0020 0020 0000 0000     T.T.<.<. . .....
  40bd30:	fff0 fff0 fff4 fff4 000d 000d 0034 0034     ............4.4.
  40bd40:	0060 0060 0076 0076 0078 0078 0062 0062     `.`.v.v.x.x.b.b.
  40bd50:	0037 0037 000b 000b ffec ffec ffe9 ffe9     7.7.............
  40bd60:	ffef ffef fffd fffd 000c 000c 0010 0010     ................
  40bd70:	000d 000d 0006 0006 fff8 fff8 ffec ffec     ................
  40bd80:	ffdc ffdc ffce ffce ffbe ffbe ffad ffad     ................
  40bd90:	ffab ffab ffba ffba ffd7 ffd7 fffb fffb     ................
  40bda0:	001b 001b 0025 0025 001c 001c fff2 fff2     ....%.%.........
  40bdb0:	ffbc ffbc ff8e ff8e ff79 ff79 ff86 ff86     ........y.y.....
  40bdc0:	ffaf ffaf ffe9 ffe9 001a 001a 0031 0031     ............1.1.
  40bdd0:	0033 0033 001d 001d 0006 0006 ffef ffef     3.3.............
  40bde0:	ffe3 ffe3 ffe7 ffe7 fff2 fff2 0000 0000     ................
  40bdf0:	000f 000f 001e 001e 0027 0027 0038 0038     ........'.'.8.8.
  40be00:	0043 0043 004c 004c 004d 004d 0045 0045     C.C.L.L.M.M.E.E.
  40be10:	0036 0036 0024 0024 001c 001c 002d 002d     6.6.$.$.....-.-.
  40be20:	0049 0049 0068 0068 0080 0080 0081 0081     I.I.h.h.........
  40be30:	0068 0068 0041 0041 0015 0015 fff4 fff4     h.h.A.A.........
  40be40:	ffe5 ffe5 ffdf ffdf ffef ffef fffb fffb     ................
  40be50:	0005 0005 000c 000c 0005 0005 fff4 fff4     ................
  40be60:	ffe6 ffe6 ffdc ffdc ffd3 ffd3 ffc4 ffc4     ................
  40be70:	ffb6 ffb6 ffaa ffaa ffa9 ffa9 ffb1 ffb1     ................
  40be80:	ffbb ffbb ffd4 ffd4 ffe2 ffe2 ffe8 ffe8     ................
  40be90:	ffe3 ffe3 ffda ffda ffc9 ffc9 ffbc ffbc     ................
  40bea0:	ffc2 ffc2 ffd9 ffd9 fff9 fff9 0018 0018     ................
  40beb0:	002e 002e 0036 0036 002d 002d 0022 0022     ....6.6.-.-.".".
  40bec0:	0018 0018 0011 0011 0010 0010 0019 0019     ................
  40bed0:	0020 0020 0021 0021 001c 001c 001b 001b      . .!.!.........
  40bee0:	0018 0018 001b 001b 001e 001e 0020 0020     ............ . .
  40bef0:	001f 001f 0019 0019 0009 0009 0003 0003     ................
  40bf00:	0003 0003 0009 0009 0011 0011 001c 001c     ................
  40bf10:	0022 0022 001b 001b 0011 0011 0005 0005     ".".............
  40bf20:	0001 0001 ffff ffff 0002 0002 0008 0008     ................
  40bf30:	000c 000c 0012 0012 0011 0011 000f 000f     ................
  40bf40:	0009 0009 000a 000a 0004 0004 0003 0003     ................
  40bf50:	fffc fffc fff2 fff2 ffee ffee ffef ffef     ................
  40bf60:	fff1 fff1 fff4 fff4 fff7 fff7 fffc fffc     ................
  40bf70:	fffe fffe fff8 fff8 fffe fffe fff7 fff7     ................
  40bf80:	fff8 fff8 fff9 fff9 fff9 fff9 fff1 fff1     ................
  40bf90:	ffe9 ffe9 ffdd ffdd ffcf ffcf ffc5 ffc5     ................
  40bfa0:	ffc3 ffc3 ffbe ffbe ffc3 ffc3 ffca ffca     ................
  40bfb0:	ffd4 ffd4 ffdc ffdc ffea ffea fff0 fff0     ................
  40bfc0:	ffea ffea ffed ffed ffe7 ffe7 ffe9 ffe9     ................
  40bfd0:	ffea ffea fff6 fff6 0003 0003 000e 000e     ................
  40bfe0:	0015 0015 0019 0019 0014 0014 0005 0005     ................
  40bff0:	fff3 fff3 ffde ffde ffd7 ffd7 ffdb ffdb     ................
  40c000:	ffee ffee 000b 000b 002b 002b 004b 004b     ........+.+.K.K.
  40c010:	0057 0057 0053 0053 0041 0041 0029 0029     W.W.S.S.A.A.).).
  40c020:	0013 0013 0005 0005 0008 0008 0019 0019     ................
  40c030:	0034 0034 0042 0042 0046 0046 0038 0038     4.4.B.B.F.F.8.8.
  40c040:	001e 001e 0006 0006 ffe7 ffe7 ffd6 ffd6     ................
  40c050:	ffcc ffcc ffc8 ffc8 ffcc ffcc ffd5 ffd5     ................
  40c060:	ffe7 ffe7 fffc fffc 000c 000c 0017 0017     ................
  40c070:	0009 0009 ffef ffef ffce ffce ffad ffad     ................
  40c080:	ff93 ff93 ff8f ff8f ff9c ff9c ffb6 ffb6     ................
  40c090:	ffd0 ffd0 ffe4 ffe4 ffe5 ffe5 ffda ffda     ................
  40c0a0:	ffcf ffcf ffc0 ffc0 ffc4 ffc4 ffcd ffcd     ................
  40c0b0:	ffdb ffdb ffea ffea fff8 fff8 fffe fffe     ................
  40c0c0:	0009 0009 0018 0018 002d 002d 003e 003e     ........-.-.>.>.
  40c0d0:	0043 0043 0039 0039 001d 001d 0001 0001     C.C.9.9.........
  40c0e0:	fff1 fff1 fffc fffc 001a 001a 0047 0047     ............G.G.
  40c0f0:	0070 0070 0085 0085 007d 007d 005f 005f     p.p.....}.}._._.
  40c100:	0038 0038 0012 0012 0002 0002 0009 0009     8.8.............
  40c110:	0019 0019 002b 002b 0034 0034 0037 0037     ....+.+.4.4.7.7.
  40c120:	0028 0028 0014 0014 0005 0005 fff6 fff6     (.(.............
  40c130:	ffe7 ffe7 ffd7 ffd7 ffc2 ffc2 ffad ffad     ................
  40c140:	ffa2 ffa2 ffab ffab ffc7 ffc7 ffea ffea     ................
  40c150:	ffff ffff 0007 0007 ffef ffef ffd0 ffd0     ................
  40c160:	ffab ffab ff91 ff91 ff92 ff92 ffb1 ffb1     ................
  40c170:	ffe2 ffe2 000e 000e 002f 002f 0039 0039     .......././.9.9.
  40c180:	0029 0029 000f 000f fff5 fff5 ffe5 ffe5     ).).............
  40c190:	ffe6 ffe6 fff6 fff6 000f 000f 0026 0026     ............&.&.
  40c1a0:	0039 0039 0048 0048 0055 0055 005e 005e     9.9.H.H.U.U.^.^.
  40c1b0:	005c 005c 0050 0050 003e 003e 001e 001e     \.\.P.P.>.>.....
  40c1c0:	fffd fffd ffef ffef fff3 fff3 000d 000d     ................
  40c1d0:	0038 0038 005b 005b 0069 0069 0054 0054     8.8.[.[.i.i.T.T.
  40c1e0:	0026 0026 fff4 fff4 ffc8 ffc8 ffb8 ffb8     &.&.............
  40c1f0:	ffc0 ffc0 ffe1 ffe1 0008 0008 0028 0028     ............(.(.
  40c200:	0036 0036 0026 0026 0001 0001 ffda ffda     6.6.&.&.........
  40c210:	ffbd ffbd ffaf ffaf ffaa ffaa ffac ffac     ................
  40c220:	ffae ffae ffb6 ffb6 ffcc ffcc ffe8 ffe8     ................
  40c230:	0006 0006 001f 001f 0029 0029 001e 001e     ........).).....
  40c240:	000a 000a fff5 fff5 fff1 fff1 ffff ffff     ................
  40c250:	0023 0023 0059 0059 0082 0082 009b 009b     #.#.Y.Y.........
  40c260:	0092 0092 006f 006f 0036 0036 000c 000c     ....o.o.6.6.....
  40c270:	fff4 fff4 fff5 fff5 000d 000d 002c 002c     ............,.,.
  40c280:	004b 004b 0055 0055 0052 0052 0048 0048     K.K.U.U.R.R.H.H.
  40c290:	0035 0035 0025 0025 0015 0015 0003 0003     5.5.%.%.........
  40c2a0:	ffeb ffeb ffd7 ffd7 ffcc ffcc ffca ffca     ................
  40c2b0:	ffd4 ffd4 ffdc ffdc ffe3 ffe3 ffdd ffdd     ................
  40c2c0:	ffcb ffcb ffb0 ffb0 ff95 ff95 ff80 ff80     ................
  40c2d0:	ff7d ff7d ff86 ff86 ffa4 ffa4 ffcc ffcc     }.}.............
  40c2e0:	ffeb ffeb 0005 0005 0014 0014 000e 000e     ................
  40c2f0:	fffe fffe fff4 fff4 ffe9 ffe9 ffda ffda     ................
  40c300:	ffdb ffdb ffe3 ffe3 fff2 fff2 000a 000a     ................
  40c310:	002a 002a 0047 0047 0053 0053 0059 0059     *.*.G.G.S.S.Y.Y.
  40c320:	0050 0050 0046 0046 0040 0040 003a 003a     P.P.F.F.@.@.:.:.
  40c330:	0047 0047 005c 005c 0076 0076 008e 008e     G.G.\.\.v.v.....
  40c340:	009d 009d 009b 009b 0086 0086 0062 0062     ............b.b.
  40c350:	0038 0038 0008 0008 ffe0 ffe0 ffc8 ffc8     8.8.............
  40c360:	ffc5 ffc5 ffc6 ffc6 ffce ffce ffd7 ffd7     ................
  40c370:	ffe0 ffe0 ffd5 ffd5 ffc2 ffc2 ffab ffab     ................
  40c380:	ff92 ff92 ff86 ff86 ff7c ff7c ff88 ff88     ........|.|.....
  40c390:	ff9c ff9c ffb5 ffb5 ffc6 ffc6 ffd0 ffd0     ................
  40c3a0:	ffcb ffcb ffbc ffbc ffac ffac ff95 ff95     ................
  40c3b0:	ff89 ff89 ff88 ff88 ff9a ff9a ffbf ffbf     ................
  40c3c0:	ffeb ffeb 0015 0015 003b 003b 0052 0052     ........;.;.R.R.
  40c3d0:	004b 004b 003b 003b 002a 002a 001c 001c     K.K.;.;.*.*.....
  40c3e0:	0016 0016 0020 0020 0033 0033 004a 004a     .... . .3.3.J.J.
  40c3f0:	0061 0061 0074 0074 007c 007c 007a 007a     a.a.t.t.|.|.z.z.
  40c400:	006c 006c 0056 0056 0042 0042 0039 0039     l.l.V.V.B.B.9.9.
  40c410:	0038 0038 003e 003e 004c 004c 005b 005b     8.8.>.>.L.L.[.[.
  40c420:	006d 006d 0074 0074 006e 006e 0051 0051     m.m.t.t.n.n.Q.Q.
  40c430:	002f 002f 0000 0000 ffd7 ffd7 ffb2 ffb2     /./.............
  40c440:	ffa5 ffa5 ffa8 ffa8 ffb3 ffb3 ffc3 ffc3     ................
  40c450:	ffcb ffcb ffc7 ffc7 ffb9 ffb9 ffa0 ffa0     ................
  40c460:	ff86 ff86 ff78 ff78 ff73 ff73 ff7d ff7d     ....x.x.s.s.}.}.
  40c470:	ff9a ff9a ffb7 ffb7 ffcd ffcd ffda ffda     ................
  40c480:	ffd8 ffd8 ffcd ffcd ffc2 ffc2 ffb1 ffb1     ................
  40c490:	ffad ffad ffa9 ffa9 ffb0 ffb0 ffbe ffbe     ................
  40c4a0:	ffdc ffdc 0000 0000 0025 0025 004f 004f     ........%.%.O.O.
  40c4b0:	0067 0067 0080 0080 0083 0083 007e 007e     g.g.........~.~.
  40c4c0:	0073 0073 0067 0067 0062 0062 0068 0068     s.s.g.g.b.b.h.h.
  40c4d0:	006c 006c 0073 0073 0074 0074 006f 006f     l.l.s.s.t.t.o.o.
  40c4e0:	0062 0062 0048 0048 0033 0033 001d 001d     b.b.H.H.3.3.....
  40c4f0:	0011 0011 000c 000c 000f 000f 0012 0012     ................
  40c500:	0013 0013 0012 0012 0018 0018 0015 0015     ................
  40c510:	000c 000c 0004 0004 fff9 fff9 ffe9 ffe9     ................
  40c520:	ffd7 ffd7 ffc9 ffc9 ffb9 ffb9 ffb1 ffb1     ................
  40c530:	ffb5 ffb5 ffb5 ffb5 ffb8 ffb8 ffbc ffbc     ................
  40c540:	ffbd ffbd ffbc ffbc ffbb ffbb ffc3 ffc3     ................
  40c550:	ffd1 ffd1 ffe3 ffe3 fffc fffc 000f 000f     ................
  40c560:	0016 0016 001c 001c 0017 0017 000c 000c     ................
  40c570:	0003 0003 fff9 fff9 fff4 fff4 fff7 fff7     ................
  40c580:	0001 0001 0010 0010 0016 0016 001e 001e     ................
  40c590:	0016 0016 000b 000b 0005 0005 fffc fffc     ................
  40c5a0:	fffd fffd 0001 0001 000d 000d 001e 001e     ................
  40c5b0:	0032 0032 003f 003f 0045 0045 003f 003f     2.2.?.?.E.E.?.?.
  40c5c0:	0032 0032 0022 0022 000b 000b fff6 fff6     2.2.".".........
  40c5d0:	ffea ffea ffe6 ffe6 ffec ffec fff6 fff6     ................
  40c5e0:	0007 0007 0011 0011 0014 0014 000a 000a     ................
  40c5f0:	fffb fffb ffed ffed ffe9 ffe9 fff4 fff4     ................
  40c600:	0003 0003 001c 001c 0031 0031 0039 0039     ........1.1.9.9.
  40c610:	0038 0038 0028 0028 0015 0015 fffe fffe     8.8.(.(.........
  40c620:	ffea ffea ffdc ffdc ffcf ffcf ffc7 ffc7     ................
  40c630:	ffd3 ffd3 ffe0 ffe0 ffed ffed fffe fffe     ................
  40c640:	000f 000f 001c 001c 001a 001a 0011 0011     ................
  40c650:	0001 0001 fff0 fff0 ffe6 ffe6 ffe8 ffe8     ................
  40c660:	fff4 fff4 0000 0000 0009 0009 0002 0002     ................
  40c670:	fff4 fff4 ffdd ffdd ffc7 ffc7 ffb7 ffb7     ................
  40c680:	ffbb ffbb ffc8 ffc8 ffd9 ffd9 fff1 fff1     ................
  40c690:	0004 0004 0016 0016 0028 0028 0037 0037     ........(.(.7.7.
  40c6a0:	0039 0039 0032 0032 0024 0024 0013 0013     9.9.2.2.$.$.....
  40c6b0:	0000 0000 ffee ffee ffe7 ffe7 fff0 fff0     ................
  40c6c0:	0006 0006 0022 0022 0031 0031 0032 0032     ....".".1.1.2.2.
  40c6d0:	0028 0028 0010 0010 fff5 fff5 ffe9 ffe9     (.(.............
  40c6e0:	fff2 fff2 0009 0009 0029 0029 004d 004d     ........).).M.M.
  40c6f0:	0063 0063 0069 0069 0060 0060 0043 0043     c.c.i.i.`.`.C.C.
  40c700:	0026 0026 0007 0007 ffef ffef ffda ffda     &.&.............
  40c710:	ffcc ffcc ffc5 ffc5 ffc9 ffc9 ffd6 ffd6     ................
  40c720:	ffe2 ffe2 ffed ffed fff6 fff6 fff3 fff3     ................
  40c730:	ffe3 ffe3 ffcf ffcf ffbf ffbf ffbc ffbc     ................
  40c740:	ffc6 ffc6 ffdf ffdf fffe fffe 0018 0018     ................
  40c750:	0025 0025 0026 0026 000e 000e ffe9 ffe9     %.%.&.&.........
  40c760:	ffc3 ffc3 ffa7 ffa7 ff9c ff9c ff9d ff9d     ................
  40c770:	ffb5 ffb5 ffd6 ffd6 fffc fffc 0022 0022     ............".".
  40c780:	0042 0042 004f 004f 004e 004e 0042 0042     B.B.O.O.N.N.B.B.
  40c790:	0033 0033 0021 0021 0018 0018 0010 0010     3.3.!.!.........
  40c7a0:	0017 0017 0027 0027 0038 0038 0045 0045     ....'.'.8.8.E.E.
  40c7b0:	004b 004b 003d 003d 0025 0025 0007 0007     K.K.=.=.%.%.....
  40c7c0:	ffea ffea ffd8 ffd8 ffd7 ffd7 ffee ffee     ................
  40c7d0:	000f 000f 0036 0036 0050 0050 0056 0056     ....6.6.P.P.V.V.
  40c7e0:	0045 0045 0019 0019 ffeb ffeb ffbe ffbe     E.E.............
  40c7f0:	ff99 ff99 ff8b ff8b ff8e ff8e ff9f ff9f     ................
  40c800:	ffb1 ffb1 ffc8 ffc8 ffd2 ffd2 ffe0 ffe0     ................
  40c810:	ffe4 ffe4 ffe4 ffe4 ffe4 ffe4 ffe5 ffe5     ................
  40c820:	ffec ffec fff7 fff7 0007 0007 001b 001b     ................
  40c830:	002b 002b 0038 0038 003d 003d 0030 0030     +.+.8.8.=.=.0.0.
  40c840:	001d 001d 0000 0000 ffe9 ffe9 ffd8 ffd8     ................
  40c850:	ffe3 ffe3 ffff ffff 0021 0021 0043 0043     ........!.!.C.C.
  40c860:	0058 0058 005a 005a 004c 004c 003a 003a     X.X.Z.Z.L.L.:.:.
  40c870:	0025 0025 001a 001a 0013 0013 0012 0012     %.%.............
  40c880:	0014 0014 0013 0013 0013 0013 0017 0017     ................
  40c890:	0013 0013 000c 000c 0001 0001 fff0 fff0     ................
  40c8a0:	ffdf ffdf ffc8 ffc8 ffb6 ffb6 ffab ffab     ................
  40c8b0:	ffb8 ffb8 ffd8 ffd8 fffc fffc 001c 001c     ................
  40c8c0:	0027 0027 0022 0022 0005 0005 ffe5 ffe5     '.'.".".........
  40c8d0:	ffcf ffcf ffc9 ffc9 ffd6 ffd6 ffe8 ffe8     ................
  40c8e0:	0003 0003 000e 000e 000e 000e 0001 0001     ................
  40c8f0:	ffe9 ffe9 ffd6 ffd6 ffcd ffcd ffcb ffcb     ................
  40c900:	ffd3 ffd3 ffe4 ffe4 fff8 fff8 0005 0005     ................
  40c910:	000a 000a 0010 0010 001a 001a 0025 0025     ............%.%.
  40c920:	0026 0026 001b 001b 000c 000c fffa fffa     &.&.............
  40c930:	fff0 fff0 fff4 fff4 000a 000a 0024 0024     ............$.$.
  40c940:	0035 0035 0039 0039 0032 0032 0011 0011     5.5.9.9.2.2.....
  40c950:	ffe7 ffe7 ffc8 ffc8 ffbd ffbd ffc4 ffc4     ................
  40c960:	ffe2 ffe2 0000 0000 0014 0014 001c 001c     ................
  40c970:	0013 0013 ffff ffff ffe5 ffe5 ffd5 ffd5     ................
  40c980:	ffda ffda ffe6 ffe6 fff8 fff8 0004 0004     ................
  40c990:	0008 0008 0006 0006 000a 000a 0010 0010     ................
  40c9a0:	0011 0011 0010 0010 0007 0007 fffd fffd     ................
  40c9b0:	fff0 fff0 ffe4 ffe4 ffe5 ffe5 fff1 fff1     ................
  40c9c0:	000d 000d 0025 0025 0038 0038 0038 0038     ....%.%.8.8.8.8.
  40c9d0:	0029 0029 000c 000c ffee ffee ffdd ffdd     ).).............
  40c9e0:	ffd5 ffd5 ffe0 ffe0 fff3 fff3 0007 0007     ................
  40c9f0:	000d 000d 0001 0001 ffee ffee ffd5 ffd5     ................
  40ca00:	ffc3 ffc3 ffbf ffbf ffbe ffbe ffc9 ffc9     ................
  40ca10:	ffdb ffdb ffef ffef 0002 0002 0012 0012     ................
  40ca20:	001c 001c 001b 001b 0015 0015 000d 000d     ................
  40ca30:	fffd fffd ffe8 ffe8 ffdb ffdb ffd6 ffd6     ................
  40ca40:	ffdd ffdd ffef ffef 0002 0002 0016 0016     ................
  40ca50:	0025 0025 0025 0025 001c 001c 000f 000f     %.%.%.%.........
  40ca60:	fffb fffb fff3 fff3 fffe fffe 000f 000f     ................
  40ca70:	001d 001d 0022 0022 001e 001e 0012 0012     ....".".........
  40ca80:	0001 0001 fff7 fff7 fff4 fff4 fffb fffb     ................
  40ca90:	0003 0003 000b 000b 0015 0015 001e 001e     ................
  40caa0:	001f 001f 0026 0026 002d 002d 002f 002f     ....&.&.-.-././.
  40cab0:	002c 002c 0025 0025 0014 0014 fffc fffc     ,.,.%.%.........
  40cac0:	ffe5 ffe5 ffd6 ffd6 ffcb ffcb ffcc ffcc     ................
  40cad0:	ffd8 ffd8 ffd7 ffd7 ffd1 ffd1 ffc5 ffc5     ................
  40cae0:	ffb8 ffb8 ffb9 ffb9 ffc2 ffc2 ffd7 ffd7     ................
  40caf0:	fff1 fff1 0006 0006 0014 0014 0017 0017     ................
  40cb00:	000b 000b fffc fffc ffef ffef ffe7 ffe7     ................
  40cb10:	ffe9 ffe9 ffef ffef fffa fffa fffd fffd     ................
  40cb20:	fffb fffb ffff ffff 0008 0008 0011 0011     ................
  40cb30:	0018 0018 0020 0020 0022 0022 001d 001d     .... . .".".....
  40cb40:	001c 001c 001f 001f 002e 002e 0046 0046     ............F.F.
  40cb50:	0055 0055 0062 0062 0057 0057 003f 003f     U.U.b.b.W.W.?.?.
  40cb60:	0022 0022 0000 0000 ffed ffed ffe9 ffe9     ".".............
  40cb70:	fffa fffa 0015 0015 002e 002e 003d 003d     ............=.=.
  40cb80:	0040 0040 0037 0037 0022 0022 000b 000b     @.@.7.7.".".....
  40cb90:	fff1 fff1 ffe7 ffe7 ffde ffde ffe4 ffe4     ................
  40cba0:	ffee ffee fff6 fff6 0006 0006 000e 000e     ................
  40cbb0:	000a 000a fffc fffc ffe9 ffe9 ffcf ffcf     ................
  40cbc0:	ffbf ffbf ffb8 ffb8 ffc4 ffc4 ffda ffda     ................
  40cbd0:	fff6 fff6 0010 0010 0025 0025 0028 0028     ........%.%.(.(.
  40cbe0:	001f 001f 0006 0006 ffeb ffeb ffd7 ffd7     ................
  40cbf0:	ffd1 ffd1 ffcf ffcf ffdc ffdc fff3 fff3     ................
  40cc00:	000f 000f 0025 0025 0035 0035 003b 003b     ....%.%.5.5.;.;.
  40cc10:	0030 0030 0023 0023 000f 000f 0000 0000     0.0.#.#.........
  40cc20:	fffc fffc fffe fffe 0007 0007 001a 001a     ................
  40cc30:	0028 0028 002f 002f 002e 002e 0022 0022     (.(././.....".".
  40cc40:	0014 0014 0003 0003 fff5 fff5 ffef ffef     ................
  40cc50:	fff0 fff0 fff7 fff7 0009 0009 0022 0022     ............".".
  40cc60:	0036 0036 0043 0043 0045 0045 003b 003b     6.6.C.C.E.E.;.;.
  40cc70:	0020 0020 fffa fffa ffe0 ffe0 ffca ffca      . .............
  40cc80:	ffc6 ffc6 ffd6 ffd6 ffe9 ffe9 0002 0002     ................
  40cc90:	0012 0012 0012 0012 0004 0004 fff1 fff1     ................
  40cca0:	ffde ffde ffd3 ffd3 ffd9 ffd9 ffe6 ffe6     ................
  40ccb0:	fffb fffb 000c 000c 0013 0013 0013 0013     ................
  40ccc0:	0010 0010 000e 000e 0005 0005 fff8 fff8     ................
  40ccd0:	ffe9 ffe9 ffd7 ffd7 ffc3 ffc3 ffb6 ffb6     ................
  40cce0:	ffb2 ffb2 ffbf ffbf ffd5 ffd5 fff6 fff6     ................
  40ccf0:	0011 0011 0020 0020 0019 0019 0007 0007     .... . .........
  40cd00:	fff6 fff6 ffe3 ffe3 ffe7 ffe7 fff8 fff8     ................
  40cd10:	0013 0013 0029 0029 0039 0039 0037 0037     ....).).9.9.7.7.
  40cd20:	002d 002d 001e 001e 0015 0015 000f 000f     -.-.............
  40cd30:	000a 000a 0007 0007 0008 0008 000a 000a     ................
  40cd40:	0017 0017 0027 0027 0038 0038 004e 004e     ....'.'.8.8.N.N.
  40cd50:	0053 0053 0046 0046 002a 002a fffb fffb     S.S.F.F.*.*.....
  40cd60:	ffd3 ffd3 ffbc ffbc ffb6 ffb6 ffca ffca     ................
  40cd70:	ffed ffed 000c 000c 0020 0020 001b 001b     ........ . .....
  40cd80:	0014 0014 0000 0000 ffec ffec ffeb ffeb     ................
  40cd90:	ffed ffed fff0 fff0 fff3 fff3 fff4 fff4     ................
  40cda0:	fff0 fff0 ffeb ffeb ffe6 ffe6 ffec ffec     ................
  40cdb0:	ffe8 ffe8 ffe0 ffe0 ffd3 ffd3 ffc7 ffc7     ................
  40cdc0:	ffbb ffbb ffb9 ffb9 ffc9 ffc9 ffe1 ffe1     ................
  40cdd0:	fff8 fff8 000e 000e 0016 0016 0013 0013     ................
  40cde0:	0007 0007 fff4 fff4 ffec ffec ffee ffee     ................
  40cdf0:	fff6 fff6 0000 0000 0008 0008 000a 000a     ................
  40ce00:	0005 0005 0007 0007 000f 000f 001b 001b     ................
  40ce10:	002c 002c 003a 003a 003d 003d 0035 0035     ,.,.:.:.=.=.5.5.
  40ce20:	0025 0025 0019 0019 0015 0015 001d 001d     %.%.............
  40ce30:	0029 0029 0034 0034 0037 0037 0031 0031     ).).4.4.7.7.1.1.
  40ce40:	0020 0020 000a 000a fff9 fff9 fff1 fff1      . .............
  40ce50:	ffec ffec fff2 fff2 ffef ffef ffeb ffeb     ................
  40ce60:	ffe4 ffe4 ffe1 ffe1 ffe4 ffe4 ffeb ffeb     ................
  40ce70:	fff4 fff4 fff7 fff7 fff4 fff4 ffec ffec     ................
  40ce80:	ffe4 ffe4 ffe1 ffe1 ffe7 ffe7 ffee ffee     ................
  40ce90:	fffe fffe 000b 000b 000d 000d 0004 0004     ................
  40cea0:	fff4 fff4 ffe8 ffe8 ffe2 ffe2 ffe5 ffe5     ................
  40ceb0:	ffeb ffeb fff7 fff7 0000 0000 0004 0004     ................
  40cec0:	0006 0006 0006 0006 000f 000f 001d 001d     ................
  40ced0:	002e 002e 003b 003b 003e 003e 003b 003b     ....;.;.>.>.;.;.
  40cee0:	003a 003a 0031 0031 0039 0039 003f 003f     :.:.1.1.9.9.?.?.
  40cef0:	0042 0042 0040 0040 0038 0038 001f 001f     B.B.@.@.8.8.....
  40cf00:	fffe fffe ffe9 ffe9 ffe1 ffe1 ffec ffec     ................
  40cf10:	0000 0000 0018 0018 0027 0027 002a 002a     ........'.'.*.*.
  40cf20:	001f 001f 000e 000e fff9 fff9 fff1 fff1     ................
  40cf30:	ffef ffef fff2 fff2 fff3 fff3 fff6 fff6     ................
  40cf40:	ffeb ffeb ffde ffde ffd8 ffd8 ffd2 ffd2     ................
  40cf50:	ffd4 ffd4 ffd6 ffd6 ffd2 ffd2 ffce ffce     ................
  40cf60:	ffc8 ffc8 ffca ffca ffd5 ffd5 ffeb ffeb     ................
  40cf70:	0007 0007 001e 001e 002c 002c 0025 0025     ........,.,.%.%.
  40cf80:	0016 0016 fffe fffe fff2 fff2 fff2 fff2     ................
  40cf90:	0000 0000 0018 0018 0029 0029 0034 0034     ........).).4.4.
  40cfa0:	002e 002e 001d 001d 0010 0010 0009 0009     ................
  40cfb0:	000c 000c 0019 0019 0028 0028 0033 0033     ........(.(.3.3.
  40cfc0:	0034 0034 0031 0031 002a 002a 002e 002e     4.4.1.1.*.*.....
  40cfd0:	0033 0033 0037 0037 0034 0034 002e 002e     3.3.7.7.4.4.....
  40cfe0:	001e 001e 0004 0004 fff3 fff3 ffe8 ffe8     ................
  40cff0:	ffec ffec fff0 fff0 fff5 fff5 fffb fffb     ................
  40d000:	fff6 fff6 ffef ffef ffe4 ffe4 ffdf ffdf     ................
  40d010:	ffdf ffdf ffe8 ffe8 fff3 fff3 fffc fffc     ................
  40d020:	fff8 fff8 ffed ffed ffe3 ffe3 ffd7 ffd7     ................
  40d030:	ffd4 ffd4 ffdb ffdb ffe4 ffe4 ffec ffec     ................
  40d040:	fff4 fff4 fff4 fff4 fff3 fff3 fff7 fff7     ................
  40d050:	0001 0001 000e 000e 001e 001e 002c 002c     ............,.,.
  40d060:	0031 0031 0033 0033 002a 002a 0019 0019     1.1.3.3.*.*.....
  40d070:	000e 000e 0007 0007 0009 0009 000e 000e     ................
  40d080:	001a 001a 001e 001e 001c 001c 0010 0010     ................
  40d090:	000b 000b 0009 0009 000d 000d 001a 001a     ................
  40d0a0:	0029 0029 0034 0034 0037 0037 0038 0038     ).).4.4.7.7.8.8.
  40d0b0:	0030 0030 0024 0024 001f 001f 0011 0011     0.0.$.$.........
  40d0c0:	0007 0007 fffc fffc ffec ffec ffe1 ffe1     ................
  40d0d0:	ffd7 ffd7 ffd3 ffd3 ffdb ffdb ffe7 ffe7     ................
  40d0e0:	fff6 fff6 0004 0004 0009 0009 0003 0003     ................
  40d0f0:	fff5 fff5 ffea ffea ffe6 ffe6 ffec ffec     ................
  40d100:	fffa fffa 0007 0007 000c 000c 0003 0003     ................
  40d110:	fff0 fff0 ffdb ffdb ffcc ffcc ffc7 ffc7     ................
  40d120:	ffcc ffcc ffda ffda ffec ffec fff7 fff7     ................
  40d130:	fffd fffd fffd fffd 0004 0004 0003 0003     ................
  40d140:	000c 000c 0012 0012 0013 0013 0011 0011     ................
  40d150:	0008 0008 fffd fffd fff0 fff0 fff2 fff2     ................
  40d160:	0002 0002 0011 0011 001f 001f 0025 0025     ............%.%.
  40d170:	001d 001d 000e 000e 0003 0003 ffff ffff     ................
  40d180:	0002 0002 0012 0012 001f 001f 002a 002a     ............*.*.
  40d190:	002a 002a 001c 001c 0009 0009 fff7 fff7     *.*.............
  40d1a0:	fff0 fff0 fff1 fff1 fff5 fff5 fffd fffd     ................
  40d1b0:	0000 0000 fffa fffa ffeb ffeb ffde ffde     ................
  40d1c0:	ffce ffce ffc9 ffc9 ffc7 ffc7 ffd1 ffd1     ................
  40d1d0:	ffd5 ffd5 ffd7 ffd7 ffda ffda ffd3 ffd3     ................
  40d1e0:	ffd4 ffd4 ffda ffda ffe1 ffe1 ffe7 ffe7     ................
  40d1f0:	ffea ffea ffe7 ffe7 ffe3 ffe3 ffe5 ffe5     ................
  40d200:	ffe9 ffe9 fff2 fff2 fffd fffd 000f 000f     ................
  40d210:	001e 001e 0021 0021 001e 001e 001b 001b     ....!.!.........
  40d220:	0015 0015 0016 0016 0018 0018 0025 0025     ............%.%.
  40d230:	002d 002d 0038 0038 0035 0035 0028 0028     -.-.8.8.5.5.(.(.
  40d240:	001b 001b 0008 0008 fffa fffa fff9 fff9     ................
  40d250:	ffff ffff 0007 0007 000f 000f 0014 0014     ................
  40d260:	0017 0017 0018 0018 0018 0018 0019 0019     ................
  40d270:	0018 0018 0019 0019 0012 0012 0003 0003     ................
  40d280:	ffee ffee ffda ffda ffcb ffcb ffbf ffbf     ................
  40d290:	ffbc ffbc ffbf ffbf ffc4 ffc4 ffc8 ffc8     ................
  40d2a0:	ffc1 ffc1 ffc4 ffc4 ffc1 ffc1 ffc5 ffc5     ................
  40d2b0:	ffd2 ffd2 ffe3 ffe3 fff6 fff6 0001 0001     ................
  40d2c0:	0007 0007 0006 0006 0001 0001 fffb fffb     ................
  40d2d0:	fff6 fff6 fff2 fff2 fff2 fff2 fff3 fff3     ................
  40d2e0:	fff3 fff3 fff7 fff7 fff9 fff9 0005 0005     ................
  40d2f0:	0017 0017 0029 0029 003a 003a 0040 0040     ....).).:.:.@.@.
  40d300:	0043 0043 003d 003d 002d 002d 0023 0023     C.C.=.=.-.-.#.#.
  40d310:	0017 0017 0012 0012 0016 0016 001e 001e     ................
  40d320:	0023 0023 0021 0021 0016 0016 0009 0009     #.#.!.!.........
  40d330:	fff5 fff5 ffea ffea ffea ffea ffed ffed     ................
  40d340:	fffe fffe 000c 000c 0018 0018 001e 001e     ................
  40d350:	001e 001e 001d 001d 0018 0018 000e 000e     ................
  40d360:	0004 0004 fff6 fff6 ffe5 ffe5 ffd6 ffd6     ................
  40d370:	ffcb ffcb ffc6 ffc6 ffcb ffcb ffd5 ffd5     ................
  40d380:	ffe0 ffe0 ffe8 ffe8 ffe5 ffe5 ffde ffde     ................
  40d390:	ffd2 ffd2 ffc7 ffc7 ffc7 ffc7 ffcc ffcc     ................
  40d3a0:	ffd8 ffd8 ffe9 ffe9 fff4 fff4 fffd fffd     ................
  40d3b0:	fffe fffe ffff ffff fffb fffb 0000 0000     ................
  40d3c0:	0003 0003 0009 0009 000f 000f 0010 0010     ................
  40d3d0:	0012 0012 0016 0016 0021 0021 002c 002c     ........!.!.,.,.
  40d3e0:	003b 003b 0048 0048 0053 0053 004d 004d     ;.;.H.H.S.S.M.M.
  40d3f0:	003d 003d 002f 002f 0029 0029 0025 0025     =.=././.).).%.%.
  40d400:	0029 0029 0033 0033 0033 0033 0029 0029     ).).3.3.3.3.).).
  40d410:	0016 0016 0005 0005 fff4 fff4 ffea ffea     ................
  40d420:	ffe9 ffe9 fff0 fff0 fff6 fff6 ffff ffff     ................
  40d430:	ffff ffff fffe fffe fff9 fff9 fffb fffb     ................
  40d440:	fffe fffe 0001 0001 0003 0003 0001 0001     ................
  40d450:	fff2 fff2 ffe0 ffe0 ffcc ffcc ffbd ffbd     ................
  40d460:	ffb8 ffb8 ffbc ffbc ffc7 ffc7 ffd2 ffd2     ................
  40d470:	ffdc ffdc ffe7 ffe7 ffed ffed fff0 fff0     ................
  40d480:	fff0 fff0 fff6 fff6 fffe fffe 0002 0002     ................
  40d490:	0009 0009 0010 0010 0012 0012 0017 0017     ................
  40d4a0:	0019 0019 001d 001d 001e 001e 001d 001d     ................
  40d4b0:	001a 001a 0013 0013 000f 000f 0011 0011     ................
  40d4c0:	0019 0019 0029 0029 0038 0038 0047 0047     ....).).8.8.G.G.
  40d4d0:	004d 004d 004f 004f 0045 0045 0039 0039     M.M.O.O.E.E.9.9.
  40d4e0:	0025 0025 0017 0017 000f 000f 000c 000c     %.%.............
  40d4f0:	000e 000e 0011 0011 0013 0013 0009 0009     ................
  40d500:	0000 0000 fff7 fff7 fff9 fff9 fffb fffb     ................
  40d510:	fffa fffa fffa fffa fffb fffb fffc fffc     ................
  40d520:	fffc fffc 0001 0001 0004 0004 0008 0008     ................
  40d530:	0008 0008 0001 0001 fff6 fff6 ffe9 ffe9     ................
  40d540:	ffd8 ffd8 ffc9 ffc9 ffc5 ffc5 ffc8 ffc8     ................
  40d550:	ffd2 ffd2 ffe9 ffe9 fff3 fff3 fff8 fff8     ................
  40d560:	fff8 fff8 fff5 fff5 fff3 fff3 fff5 fff5     ................
  40d570:	fffe fffe 0007 0007 000b 000b 000f 000f     ................
  40d580:	000e 000e 0009 0009 000b 000b 0007 0007     ................
  40d590:	000b 000b 000e 000e 0008 0008 ffff ffff     ................
  40d5a0:	fff0 fff0 ffe9 ffe9 ffe7 ffe7 fff2 fff2     ................
  40d5b0:	0001 0001 0013 0013 001f 001f 0024 0024     ............$.$.
  40d5c0:	001f 001f 000d 000d 0000 0000 fff4 fff4     ................
  40d5d0:	fff6 fff6 fffb fffb 0005 0005 0009 0009     ................
  40d5e0:	0007 0007 0004 0004 0001 0001 fffc fffc     ................
  40d5f0:	fff9 fff9 fff6 fff6 fff7 fff7 fff5 fff5     ................
  40d600:	fff5 fff5 fff6 fff6 fffa fffa 0007 0007     ................
  40d610:	0015 0015 0023 0023 002a 002a 0024 0024     ....#.#.*.*.$.$.
  40d620:	0013 0013 0002 0002 ffe8 ffe8 ffd9 ffd9     ................
  40d630:	ffd4 ffd4 ffd6 ffd6 ffdb ffdb ffe6 ffe6     ................
  40d640:	ffe5 ffe5 ffe5 ffe5 ffdc ffdc ffd6 ffd6     ................
  40d650:	ffd4 ffd4 ffdc ffdc ffe6 ffe6 fff3 fff3     ................
  40d660:	fffe fffe 0002 0002 0000 0000 fffc fffc     ................
  40d670:	fff8 fff8 fff5 fff5 fff2 fff2 fff1 fff1     ................
  40d680:	ffe8 ffe8 ffde ffde ffd9 ffd9 ffd3 ffd3     ................
  40d690:	ffd6 ffd6 ffe1 ffe1 ffef ffef fffd fffd     ................
  40d6a0:	0006 0006 000d 000d 0011 0011 0010 0010     ................
  40d6b0:	0012 0012 0018 0018 0020 0020 0024 0024     ........ . .$.$.
  40d6c0:	0032 0032 002c 002c 0022 0022 0018 0018     2.2.,.,.".".....
  40d6d0:	0010 0010 0011 0011 0010 0010 0010 0010     ................
  40d6e0:	000d 000d 0010 0010 000f 000f 000e 000e     ................
  40d6f0:	000f 000f 000f 000f 000c 000c 000a 000a     ................
  40d700:	0007 0007 fffe fffe fff4 fff4 ffe7 ffe7     ................
  40d710:	ffe4 ffe4 ffe1 ffe1 ffe4 ffe4 ffe1 ffe1     ................
  40d720:	ffdf ffdf ffd9 ffd9 ffd9 ffd9 ffd9 ffd9     ................
  40d730:	ffd8 ffd8 ffe0 ffe0 ffe7 ffe7 ffee ffee     ................
  40d740:	fff5 fff5 fff3 fff3 ffeb ffeb ffe9 ffe9     ................
  40d750:	ffe2 ffe2 ffe2 ffe2 ffe0 ffe0 ffe0 ffe0     ................
  40d760:	ffe1 ffe1 ffe1 ffe1 ffe3 ffe3 ffeb ffeb     ................
  40d770:	fff0 fff0 fffb fffb 0000 0000 0003 0003     ................
  40d780:	0009 0009 000e 000e 000e 000e 0010 0010     ................
  40d790:	0016 0016 001e 001e 0025 0025 002c 002c     ........%.%.,.,.
  40d7a0:	002f 002f 002e 002e 0030 0030 002c 002c     /./.....0.0.,.,.
  40d7b0:	002c 002c 0023 0023 0022 0022 001e 001e     ,.,.#.#.".".....
  40d7c0:	001f 001f 001f 001f 0024 0024 0024 0024     ........$.$.$.$.
  40d7d0:	0024 0024 0020 0020 0020 0020 0019 0019     $.$. . . . .....
  40d7e0:	0012 0012 0008 0008 fffb fffb fff7 fff7     ................
  40d7f0:	ffeb ffeb ffe6 ffe6 ffdf ffdf ffdb ffdb     ................
  40d800:	ffdd ffdd ffdf ffdf ffde ffde ffdf ffdf     ................
  40d810:	ffdc ffdc ffd5 ffd5 ffc9 ffc9 ffc4 ffc4     ................
  40d820:	ffc5 ffc5 ffd2 ffd2 ffe5 ffe5 fff6 fff6     ................
  40d830:	0002 0002 000c 000c 0009 0009 ffff ffff     ................
  40d840:	fff7 fff7 ffe9 ffe9 ffe3 ffe3 ffe7 ffe7     ................
  40d850:	fff5 fff5 fff7 fff7 0006 0006 0009 0009     ................
  40d860:	000c 000c 000e 000e 0010 0010 0015 0015     ................
  40d870:	0019 0019 001c 001c 001b 001b 001c 001c     ................
  40d880:	0018 0018 0020 0020 0025 0025 0035 0035     .... . .%.%.5.5.
  40d890:	0041 0041 0039 0039 002e 002e 001f 001f     A.A.9.9.........
  40d8a0:	0008 0008 fff1 fff1 ffed ffed fff2 fff2     ................
  40d8b0:	0002 0002 0016 0016 0020 0020 0020 0020     ........ . . . .
  40d8c0:	0010 0010 fffe fffe ffef ffef ffe6 ffe6     ................
  40d8d0:	ffe9 ffe9 ffef ffef fff6 fff6 fff7 fff7     ................
  40d8e0:	ffee ffee ffea ffea ffe0 ffe0 ffe0 ffe0     ................
  40d8f0:	ffe8 ffe8 ffee ffee fff8 fff8 fff5 fff5     ................
  40d900:	ffe8 ffe8 ffde ffde ffdd ffdd ffe5 ffe5     ................
  40d910:	fff6 fff6 0008 0008 0016 0016 0017 0017     ................
  40d920:	000b 000b fff5 fff5 ffe1 ffe1 ffd1 ffd1     ................
  40d930:	ffd4 ffd4 ffe2 ffe2 fff1 fff1 fffb fffb     ................
  40d940:	ffff ffff fffb fffb fffa fffa fff4 fff4     ................
  40d950:	fff6 fff6 ffff ffff 0002 0002 000a 000a     ................
  40d960:	000c 000c 000a 000a 0006 0006 0009 0009     ................
  40d970:	0013 0013 001a 001a 0019 0019 0012 0012     ................
  40d980:	0003 0003 fff5 fff5 ffe9 ffe9 ffe7 ffe7     ................
  40d990:	fff1 fff1 0003 0003 001b 001b 002d 002d     ............-.-.
  40d9a0:	0032 0032 0028 0028 0020 0020 0010 0010     2.2.(.(. . .....
  40d9b0:	000b 000b 000e 000e 0010 0010 0013 0013     ................
  40d9c0:	0017 0017 000d 000d 0001 0001 fff3 fff3     ................
  40d9d0:	ffea ffea ffe4 ffe4 ffe1 ffe1 ffe6 ffe6     ................
  40d9e0:	ffe7 ffe7 ffe7 ffe7 ffe1 ffe1 ffe5 ffe5     ................
  40d9f0:	ffe9 ffe9 fff6 fff6 0000 0000 0009 0009     ................
  40da00:	000a 000a 0004 0004 fff4 fff4 ffe2 ffe2     ................
  40da10:	ffd2 ffd2 ffca ffca ffca ffca ffcc ffcc     ................
  40da20:	ffd3 ffd3 ffd7 ffd7 ffd1 ffd1 ffd0 ffd0     ................
  40da30:	ffd3 ffd3 ffd9 ffd9 ffe8 ffe8 fff9 fff9     ................
  40da40:	000c 000c 0018 0018 0025 0025 0028 0028     ........%.%.(.(.
  40da50:	0029 0029 002b 002b 002c 002c 002d 002d     ).).+.+.,.,.-.-.
  40da60:	0026 0026 001e 001e 000b 000b fffc fffc     &.&.............
  40da70:	ffef ffef ffe5 ffe5 ffed ffed fffb fffb     ................
  40da80:	0010 0010 0019 0019 0023 0023 0021 0021     ........#.#.!.!.
  40da90:	0015 0015 0012 0012 0011 0011 0017 0017     ................
  40daa0:	0020 0020 0026 0026 0027 0027 001e 001e      . .&.&.'.'.....
  40dab0:	000b 000b fff5 fff5 ffe8 ffe8 ffdb ffdb     ................
  40dac0:	ffd4 ffd4 ffd8 ffd8 ffdc ffdc ffe3 ffe3     ................
  40dad0:	ffe6 ffe6 ffee ffee fff5 fff5 fffb fffb     ................
  40dae0:	fffd fffd fffd fffd fffc fffc fff3 fff3     ................
  40daf0:	ffe7 ffe7 ffdc ffdc ffdb ffdb ffdc ffdc     ................
  40db00:	ffe7 ffe7 ffeb ffeb fff0 fff0 ffe9 ffe9     ................
  40db10:	ffe1 ffe1 ffda ffda ffd5 ffd5 ffd8 ffd8     ................
  40db20:	ffe6 ffe6 fff9 fff9 0013 0013 0027 0027     ............'.'.
  40db30:	0030 0030 0036 0036 002f 002f 0028 0028     0.0.6.6././.(.(.
  40db40:	0024 0024 0017 0017 0011 0011 0006 0006     $.$.............
  40db50:	0000 0000 fff9 fff9 fff5 fff5 fff4 fff4     ................
  40db60:	fff8 fff8 0004 0004 0009 0009 0008 0008     ................
  40db70:	000c 000c 000c 000c 0008 0008 0009 0009     ................
  40db80:	000f 000f 0019 0019 0025 0025 002a 002a     ........%.%.*.*.
  40db90:	002b 002b 0023 0023 000f 000f fffa fffa     +.+.#.#.........
  40dba0:	ffe5 ffe5 ffd9 ffd9 ffdb ffdb ffe3 ffe3     ................
  40dbb0:	ffee ffee fffb fffb 0008 0008 000b 000b     ................
  40dbc0:	000f 000f 0005 0005 0001 0001 0001 0001     ................
  40dbd0:	ffff ffff fffd fffd fffc fffc fffe fffe     ................
  40dbe0:	fffc fffc fffd fffd 0002 0002 0002 0002     ................
  40dbf0:	fffc fffc fff4 fff4 ffee ffee fff2 fff2     ................
  40dc00:	fff4 fff4 fffe fffe 0008 0008 0017 0017     ................
  40dc10:	0021 0021 0025 0025 0021 0021 0020 0020     !.!.%.%.!.!. . .
  40dc20:	0020 0020 001d 001d 001e 001e 0011 0011      . .............
  40dc30:	000d 000d 0001 0001 fff4 fff4 ffe9 ffe9     ................
  40dc40:	ffe6 ffe6 ffea ffea fff6 fff6 fffc fffc     ................
  40dc50:	0002 0002 0003 0003 0001 0001 0002 0002     ................
  40dc60:	0004 0004 000c 000c 0012 0012 001c 001c     ................
  40dc70:	0022 0022 0025 0025 001d 001d 0017 0017     ".".%.%.........
  40dc80:	0010 0010 0005 0005 fffd fffd fff5 fff5     ................
  40dc90:	fff5 fff5 fff6 fff6 0000 0000 000d 000d     ................
  40dca0:	001d 001d 0027 0027 002c 002c 0023 0023     ....'.'.,.,.#.#.
  40dcb0:	0017 0017 0004 0004 fff6 fff6 ffee ffee     ................
  40dcc0:	fff1 fff1 fffa fffa 0004 0004 000b 000b     ................
  40dcd0:	000e 000e 000b 000b fffc fffc ffef ffef     ................
  40dce0:	ffe9 ffe9 ffe7 ffe7 ffea ffea fff1 fff1     ................
  40dcf0:	fff7 fff7 fffc fffc 000b 000b 000e 000e     ................
  40dd00:	0011 0011 0011 0011 0006 0006 fff8 fff8     ................
  40dd10:	ffe7 ffe7 ffda ffda ffd6 ffd6 ffdd ffdd     ................
  40dd20:	ffec ffec fffd fffd 000d 000d 0015 0015     ................
  40dd30:	0014 0014 0006 0006 fff7 fff7 fff0 fff0     ................
  40dd40:	ffed ffed fff9 fff9 0003 0003 0010 0010     ................
  40dd50:	0016 0016 0012 0012 000b 000b 0002 0002     ................
  40dd60:	fffb fffb fff5 fff5 fff8 fff8 fffa fffa     ................
  40dd70:	fff9 fff9 fffb fffb fffe fffe 0008 0008     ................
  40dd80:	0016 0016 0025 0025 0032 0032 0033 0033     ....%.%.2.2.3.3.
  40dd90:	0030 0030 0022 0022 0010 0010 0001 0001     0.0.".".........
  40dda0:	fff4 fff4 fff1 fff1 fff9 fff9 fffe fffe     ................
  40ddb0:	0003 0003 ffff ffff fff8 fff8 fff4 fff4     ................
  40ddc0:	ffea ffea ffee ffee fff4 fff4 fffc fffc     ................
  40ddd0:	fffc fffc fff6 fff6 fff2 fff2 ffe2 ffe2     ................
  40dde0:	ffd8 ffd8 ffcc ffcc ffca ffca ffce ffce     ................
  40ddf0:	ffce ffce ffd1 ffd1 ffd2 ffd2 ffd0 ffd0     ................
  40de00:	ffd7 ffd7 ffe1 ffe1 ffec ffec 0000 0000     ................
  40de10:	0010 0010 0020 0020 0025 0025 0025 0025     .... . .%.%.%.%.
  40de20:	0023 0023 001f 001f 001e 001e 0023 0023     #.#.........#.#.
  40de30:	0024 0024 0023 0023 0017 0017 000e 000e     $.$.#.#.........
  40de40:	0004 0004 0001 0001 0000 0000 000f 000f     ................
  40de50:	0019 0019 0021 0021 0026 0026 0025 0025     ....!.!.&.&.%.%.
  40de60:	0020 0020 001d 001d 0018 0018 001d 001d      . .............
  40de70:	001f 001f 001e 001e 001a 001a 0010 0010     ................
  40de80:	fffd fffd ffee ffee ffe1 ffe1 ffda ffda     ................
  40de90:	ffd5 ffd5 ffd5 ffd5 ffd7 ffd7 ffd5 ffd5     ................
  40dea0:	ffd6 ffd6 ffd4 ffd4 ffd6 ffd6 ffda ffda     ................
  40deb0:	ffdf ffdf ffe1 ffe1 ffe2 ffe2 ffe1 ffe1     ................
  40dec0:	ffdd ffdd ffd9 ffd9 ffdf ffdf ffe7 ffe7     ................
  40ded0:	ffef ffef fff6 fff6 fffa fffa ffff ffff     ................
  40dee0:	0003 0003 000c 000c 0012 0012 0015 0015     ................
  40def0:	0018 0018 001b 001b 001a 001a 0014 0014     ................
  40df00:	0012 0012 000f 000f 000f 000f 000e 000e     ................
  40df10:	0010 0010 0013 0013 0011 0011 0009 0009     ................
  40df20:	0003 0003 0003 0003 0006 0006 0009 0009     ................
  40df30:	000c 000c 0010 0010 0009 0009 0006 0006     ................
  40df40:	0000 0000 fffc fffc fff9 fff9 fffb fffb     ................
  40df50:	0001 0001 0001 0001 fffe fffe fff9 fff9     ................
  40df60:	fff8 fff8 fff2 fff2 fff2 fff2 fff0 fff0     ................
  40df70:	fff1 fff1 fff0 fff0 ffec ffec ffe7 ffe7     ................
  40df80:	ffe3 ffe3 ffe0 ffe0 ffe0 ffe0 ffe6 ffe6     ................
  40df90:	ffe9 ffe9 ffeb ffeb ffec ffec ffec ffec     ................
  40dfa0:	ffe9 ffe9 ffe2 ffe2 ffde ffde ffe2 ffe2     ................
  40dfb0:	ffe5 ffe5 ffeb ffeb fff2 fff2 fff4 fff4     ................
  40dfc0:	fff9 fff9 fffa fffa fffc fffc fffd fffd     ................
  40dfd0:	fffe fffe fffe fffe 0004 0004 000d 000d     ................
  40dfe0:	000f 000f 0014 0014 0010 0010 000e 000e     ................
  40dff0:	0007 0007 0007 0007 0005 0005 0009 0009     ................
  40e000:	000c 000c 0011 0011 0014 0014 0013 0013     ................
  40e010:	0010 0010 000a 000a 0005 0005 0003 0003     ................
  40e020:	0001 0001 ffff ffff fff9 fff9 fff8 fff8     ................
  40e030:	fff3 fff3 fff4 fff4 fff2 fff2 fff0 fff0     ................
  40e040:	fff3 fff3 fff6 fff6 fff6 fff6 fff6 fff6     ................
  40e050:	fff1 fff1 ffee ffee ffef ffef ffed ffed     ................
  40e060:	fff1 fff1 fff6 fff6 fff8 fff8 fff6 fff6     ................
  40e070:	ffef ffef ffea ffea ffe1 ffe1 ffe0 ffe0     ................
  40e080:	ffe4 ffe4 ffeb ffeb fff2 fff2 fffc fffc     ................
  40e090:	0003 0003 0006 0006 0004 0004 0001 0001     ................
  40e0a0:	fffd fffd ffff ffff 0009 0009 0014 0014     ................
  40e0b0:	0014 0014 0017 0017 0011 0011 0006 0006     ................
  40e0c0:	fffe fffe fff8 fff8 fff2 fff2 ffed ffed     ................
  40e0d0:	fff0 fff0 fff0 fff0 ffeb ffeb ffed ffed     ................
  40e0e0:	fff2 fff2 fff4 fff4 fffc fffc 0004 0004     ................
  40e0f0:	0006 0006 0003 0003 0002 0002 fffa fffa     ................
  40e100:	fff5 fff5 fff5 fff5 fff9 fff9 ffff ffff     ................
  40e110:	0007 0007 0006 0006 fffd fffd fff7 fff7     ................
  40e120:	ffee ffee ffec ffec fff0 fff0 fff2 fff2     ................
  40e130:	fffb fffb 0008 0008 0011 0011 0011 0011     ................
  40e140:	000f 000f 000b 000b 0009 0009 0002 0002     ................
  40e150:	0004 0004 0003 0003 fff9 fff9 fff8 fff8     ................
  40e160:	fff6 fff6 fff9 fff9 fffc fffc 0003 0003     ................
  40e170:	0009 0009 0008 0008 0008 0008 0001 0001     ................
  40e180:	fff6 fff6 fff0 fff0 ffee ffee fff0 fff0     ................
  40e190:	fff5 fff5 fffd fffd fffe fffe 0004 0004     ................
  40e1a0:	ffff ffff 0001 0001 fffd fffd ffff ffff     ................
  40e1b0:	fffc fffc fffd fffd 0002 0002 fffe fffe     ................
  40e1c0:	ffff ffff fffc fffc 0000 0000 fffc fffc     ................
  40e1d0:	fffd fffd fff6 fff6 ffee ffee ffe8 ffe8     ................
  40e1e0:	ffe1 ffe1 ffe1 ffe1 ffe6 ffe6 ffed ffed     ................
  40e1f0:	fff1 fff1 fff6 fff6 fff7 fff7 fff4 fff4     ................
  40e200:	ffec ffec ffe7 ffe7 ffe8 ffe8 fff5 fff5     ................
  40e210:	0004 0004 0012 0012 001b 001b 001d 001d     ................
  40e220:	001b 001b 0010 0010 0008 0008 0003 0003     ................
  40e230:	0007 0007 000c 000c 0013 0013 0019 0019     ................
  40e240:	0017 0017 0010 0010 000f 000f 0011 0011     ................
  40e250:	0010 0010 0014 0014 0010 0010 000b 000b     ................
  40e260:	0001 0001 fffc fffc fff6 fff6 fff9 fff9     ................
  40e270:	fffe fffe 0008 0008 0014 0014 0012 0012     ................
  40e280:	0006 0006 fff1 fff1 ffe5 ffe5 ffdd ffdd     ................
  40e290:	ffdd ffdd ffe8 ffe8 fff4 fff4 fffc fffc     ................
  40e2a0:	0003 0003 fffe fffe ffee ffee ffe1 ffe1     ................
  40e2b0:	ffd9 ffd9 ffdd ffdd ffdd ffdd ffea ffea     ................
  40e2c0:	fff0 fff0 fff6 fff6 fff5 fff5 fff6 fff6     ................
  40e2d0:	fff7 fff7 fff6 fff6 fff6 fff6 fff5 fff5     ................
  40e2e0:	ffed ffed ffe2 ffe2 ffd8 ffd8 ffd2 ffd2     ................
  40e2f0:	ffdf ffdf fff2 fff2 0008 0008 001b 001b     ................
  40e300:	0022 0022 001f 001f 0014 0014 000a 000a     ".".............
  40e310:	fffc fffc fffb fffb 0001 0001 0010 0010     ................
  40e320:	001e 001e 0024 0024 0024 0024 001a 001a     ....$.$.$.$.....
  40e330:	000c 000c 0001 0001 fff5 fff5 fff1 fff1     ................
  40e340:	fff3 fff3 fff6 fff6 fffb fffb 0000 0000     ................
  40e350:	0002 0002 0008 0008 0007 0007 000b 000b     ................
  40e360:	0008 0008 fffd fffd ffef ffef ffe0 ffe0     ................
  40e370:	ffd4 ffd4 ffd2 ffd2 ffd5 ffd5 ffdf ffdf     ................
  40e380:	ffea ffea ffef ffef fff0 fff0 ffe9 ffe9     ................
  40e390:	ffdc ffdc ffce ffce ffcc ffcc ffcf ffcf     ................
  40e3a0:	ffde ffde ffec ffec fffb fffb fffe fffe     ................
  40e3b0:	fffd fffd fff4 fff4 ffec ffec ffe6 ffe6     ................
  40e3c0:	ffe1 ffe1 ffe7 ffe7 ffe5 ffe5 ffe8 ffe8     ................
  40e3d0:	ffe8 ffe8 ffef ffef fff4 fff4 ffff ffff     ................
  40e3e0:	0002 0002 0009 0009 000a 000a 0004 0004     ................
  40e3f0:	fffd fffd fff7 fff7 fff2 fff2 fff9 fff9     ................
  40e400:	0009 0009 001c 001c 002d 002d 0032 0032     ........-.-.2.2.
  40e410:	0027 0027 0016 0016 0000 0000 ffef ffef     '.'.............
  40e420:	ffe9 ffe9 ffe7 ffe7 fff3 fff3 fff9 fff9     ................
  40e430:	0002 0002 0006 0006 0002 0002 0006 0006     ................
  40e440:	0001 0001 fffb fffb fff2 fff2 ffe4 ffe4     ................
  40e450:	ffd6 ffd6 ffd0 ffd0 ffd4 ffd4 ffd7 ffd7     ................
  40e460:	ffe0 ffe0 ffec ffec fff4 fff4 fff2 fff2     ................
  40e470:	ffe8 ffe8 ffda ffda ffcb ffcb ffc7 ffc7     ................
  40e480:	ffce ffce ffde ffde fff2 fff2 0009 0009     ................
  40e490:	0019 0019 001b 001b 001d 001d 0015 0015     ................
  40e4a0:	000d 000d 0006 0006 0005 0005 0000 0000     ................
  40e4b0:	fffc fffc fffd fffd fff9 fff9 fffb fffb     ................
  40e4c0:	fffe fffe 0006 0006 0009 0009 000d 000d     ................
  40e4d0:	000b 000b 000b 000b ffff ffff ffff ffff     ................
  40e4e0:	fffd fffd 0000 0000 000d 000d 0019 0019     ................
  40e4f0:	001a 001a 0018 0018 0010 0010 fffd fffd     ................
  40e500:	ffef ffef ffe3 ffe3 ffde ffde ffe2 ffe2     ................
  40e510:	ffea ffea ffef ffef fff7 fff7 fff9 fff9     ................
  40e520:	fffb fffb fffc fffc 0001 0001 0008 0008     ................
  40e530:	000e 000e 000d 000d 000f 000f 000f 000f     ................
  40e540:	0009 0009 0008 0008 0006 0006 0007 0007     ................
  40e550:	0005 0005 0007 0007 0003 0003 fff6 fff6     ................
  40e560:	fff5 fff5 fff1 fff1 fff5 fff5 ffff ffff     ................
  40e570:	000d 000d 0016 0016 001f 001f 0020 0020     ............ . .
  40e580:	001d 001d 0017 0017 000f 000f 000b 000b     ................
  40e590:	0006 0006 0000 0000 fffc fffc fff1 fff1     ................
  40e5a0:	ffee ffee ffe9 ffe9 ffe7 ffe7 ffec ffec     ................
  40e5b0:	fff0 fff0 fff9 fff9 ffff ffff 0004 0004     ................
  40e5c0:	0003 0003 0006 0006 000b 000b 000d 000d     ................
  40e5d0:	0010 0010 0012 0012 0011 0011 0009 0009     ................
  40e5e0:	ffff ffff fff8 fff8 fff9 fff9 fffa fffa     ................
  40e5f0:	ffff ffff 0003 0003 000c 000c 000a 000a     ................
  40e600:	0010 0010 000b 000b 000a 000a 000e 000e     ................
  40e610:	000a 000a 0012 0012 0016 0016 0016 0016     ................
  40e620:	001a 001a 001a 001a 0014 0014 0011 0011     ................
  40e630:	0010 0010 000e 000e 0008 0008 0007 0007     ................
  40e640:	0001 0001 0000 0000 0000 0000 0000 0000     ................
  40e650:	0006 0006 0009 0009 0008 0008 0009 0009     ................
  40e660:	000a 000a 000a 000a 000a 000a 0008 0008     ................
  40e670:	0004 0004 0009 0009 0007 0007 000b 000b     ................
  40e680:	0007 0007 0002 0002 fff9 fff9 fff1 fff1     ................
  40e690:	ffe6 ffe6 ffe3 ffe3 ffe8 ffe8 ffef ffef     ................
  40e6a0:	fffb fffb 0000 0000 0001 0001 0001 0001     ................
  40e6b0:	fffd fffd fffa fffa fff6 fff6 fffb fffb     ................
  40e6c0:	ffff ffff 0005 0005 0005 0005 0007 0007     ................
  40e6d0:	0002 0002 0002 0002 0002 0002 0000 0000     ................
  40e6e0:	0000 0000 fffe fffe fffa fffa fff6 fff6     ................
  40e6f0:	fff1 fff1 fff5 fff5 fffd fffd 000a 000a     ................
  40e700:	001d 001d 0024 0024 0022 0022 001b 001b     ....$.$.".".....
  40e710:	000e 000e 0002 0002 ffff ffff ffff ffff     ................
  40e720:	0006 0006 000f 000f 0011 0011 0012 0012     ................
  40e730:	000d 000d 0004 0004 ffff ffff fffb fffb     ................
  40e740:	fffc fffc fffd fffd ffff ffff fffd fffd     ................
  40e750:	fff6 fff6 fff4 fff4 fff3 fff3 fffa fffa     ................
  40e760:	0005 0005 000f 000f 0013 0013 0013 0013     ................
  40e770:	0008 0008 fffc fffc fff3 fff3 ffee ffee     ................
  40e780:	fff0 fff0 fffa fffa fffd fffd fffd fffd     ................
  40e790:	fffa fffa fff6 fff6 fff2 fff2 fff1 fff1     ................
  40e7a0:	fff5 fff5 fffb fffb 0001 0001 0005 0005     ................
  40e7b0:	0001 0001 0000 0000 fffa fffa fffb fffb     ................
  40e7c0:	0002 0002 0007 0007 000f 000f 000f 000f     ................
  40e7d0:	0005 0005 fff7 fff7 ffe7 ffe7 ffe4 ffe4     ................
  40e7e0:	ffe5 ffe5 ffed ffed fffa fffa 0004 0004     ................
  40e7f0:	000d 000d 0011 0011 0011 0011 000b 000b     ................
  40e800:	000a 000a 000d 000d 000e 000e 000c 000c     ................
  40e810:	000d 000d 0007 0007 fffd fffd fff3 fff3     ................
  40e820:	fff2 fff2 fff5 fff5 fffa fffa fffe fffe     ................
  40e830:	ffff ffff fffa fffa fff4 fff4 fff3 fff3     ................
  40e840:	fff6 fff6 0000 0000 000e 000e 001b 001b     ................
  40e850:	0024 0024 001e 001e 0017 0017 0004 0004     $.$.............
  40e860:	fffb fffb ffed ffed ffe5 ffe5 ffe1 ffe1     ................
  40e870:	ffd9 ffd9 ffd9 ffd9 ffd7 ffd7 ffd8 ffd8     ................
  40e880:	ffd8 ffd8 ffe2 ffe2 ffee ffee fff5 fff5     ................
  40e890:	fffd fffd fffe fffe fff6 fff6 fff4 fff4     ................
  40e8a0:	fff2 fff2 fff4 fff4 fffa fffa 0002 0002     ................
  40e8b0:	0001 0001 fffa fffa fff2 fff2 ffed ffed     ................
  40e8c0:	ffe6 ffe6 ffe5 ffe5 ffeb ffeb fff5 fff5     ................
  40e8d0:	fffe fffe 0005 0005 0008 0008 0005 0005     ................
	...
  40e8e8:	ffff ffff 0002 0002 0003 0003 0005 0005     ................
  40e8f8:	0005 0005 fffc fffc fff7 fff7 ffef ffef     ................
  40e908:	fff1 fff1 fff4 fff4 fff1 fff1 ffef ffef     ................
  40e918:	ffed ffed ffee ffee ffe7 ffe7 ffe8 ffe8     ................
  40e928:	ffe4 ffe4 ffea ffea fff3 fff3 fffb fffb     ................
  40e938:	fffe fffe fffe fffe fff6 fff6 ffed ffed     ................
  40e948:	ffe7 ffe7 ffe2 ffe2 ffe5 ffe5 ffe4 ffe4     ................
  40e958:	ffeb ffeb ffee ffee fff3 fff3 fff6 fff6     ................
  40e968:	fff6 fff6 fff8 fff8 fff7 fff7 fffd fffd     ................
  40e978:	fffc fffc 0001 0001 0000 0000 ffff ffff     ................
  40e988:	0004 0004 0007 0007 000a 000a 000b 000b     ................
  40e998:	000b 000b 0007 0007 ffff ffff fffb fffb     ................
  40e9a8:	fff6 fff6 fff5 fff5 ffff ffff 000c 000c     ................
  40e9b8:	0017 0017 0023 0023 0027 0027 0029 0029     ....#.#.'.'.).).
  40e9c8:	0023 0023 0019 0019 0015 0015 0008 0008     #.#.............
  40e9d8:	0000 0000 fff9 fff9 fff3 fff3 ffee ffee     ................
  40e9e8:	ffea ffea ffe9 ffe9 ffe3 ffe3 ffe4 ffe4     ................
  40e9f8:	ffe2 ffe2 ffe4 ffe4 ffe9 ffe9 fff3 fff3     ................
  40ea08:	fff9 fff9 0002 0002 0006 0006 000a 000a     ................
  40ea18:	000b 000b 0008 0008 0009 0009 0001 0001     ................
  40ea28:	0000 0000 fff9 fff9 fff7 fff7 fff0 fff0     ................
  40ea38:	fff5 fff5 fff8 fff8 fffb fffb 0004 0004     ................
  40ea48:	000b 000b 000c 000c 0011 0011 000e 000e     ................
  40ea58:	0011 0011 0019 0019 0020 0020 002f 002f     ........ . ././.
  40ea68:	0032 0032 0035 0035 002d 002d 0021 0021     2.2.5.5.-.-.!.!.
  40ea78:	000e 000e 0002 0002 fff7 fff7 0001 0001     ................
  40ea88:	0009 0009 0016 0016 0020 0020 0022 0022     ........ . .".".
  40ea98:	0020 0020 0021 0021 001e 001e 0020 0020      . .!.!..... . .
  40eaa8:	0021 0021 0026 0026 001d 001d 001a 001a     !.!.&.&.........
  40eab8:	0013 0013 000c 000c 000b 000b 000a 000a     ................
  40eac8:	0011 0011 000c 000c 0006 0006 fffc fffc     ................
  40ead8:	ffef ffef ffe9 ffe9 ffe6 ffe6 fff1 fff1     ................
  40eae8:	0004 0004 0016 0016 0021 0021 0020 0020     ........!.!. . .
  40eaf8:	0019 0019 000e 000e 0003 0003 fffd fffd     ................
  40eb08:	fff9 fff9 fffb fffb 0003 0003 0003 0003     ................
  40eb18:	0002 0002 0003 0003 0002 0002 ffff ffff     ................
  40eb28:	fffa fffa ffff ffff ffff ffff 0003 0003     ................
  40eb38:	0001 0001 fffd fffd 0001 0001 000a 000a     ................
  40eb48:	0017 0017 0022 0022 0029 0029 0028 0028     ....".".).).(.(.
  40eb58:	001f 001f 0010 0010 0000 0000 fff9 fff9     ................
  40eb68:	fff5 fff5 fffc fffc 0007 0007 000f 000f     ................
  40eb78:	0012 0012 000d 000d 000b 000b 0008 0008     ................
  40eb88:	0007 0007 000e 000e 0014 0014 001b 001b     ................
  40eb98:	001b 001b 001a 001a 0014 0014 0013 0013     ................
  40eba8:	0013 0013 0015 0015 0012 0012 000e 000e     ................
  40ebb8:	0004 0004 fff1 fff1 ffe1 ffe1 ffd9 ffd9     ................
  40ebc8:	ffdd ffdd ffe7 ffe7 fffd fffd 000e 000e     ................
  40ebd8:	0012 0012 000d 000d 0006 0006 fffb fffb     ................
  40ebe8:	fff1 fff1 ffef ffef fff6 fff6 fffc fffc     ................
  40ebf8:	0000 0000 ffff ffff fffc fffc fff7 fff7     ................
  40ec08:	ffef ffef ffeb ffeb ffe9 ffe9 fff0 fff0     ................
  40ec18:	fff5 fff5 fff9 fff9 fffb fffb 0004 0004     ................
  40ec28:	000c 000c 0018 0018 0024 0024 0029 0029     ........$.$.).).
  40ec38:	0027 0027 001d 001d 000c 000c 0002 0002     '.'.............
  40ec48:	fffa fffa fffb fffb ffff ffff 0008 0008     ................
  40ec58:	0010 0010 000c 000c 0000 0000 fff8 fff8     ................
  40ec68:	fff0 fff0 ffe7 ffe7 ffe7 ffe7 ffeb ffeb     ................
  40ec78:	fff0 fff0 fff5 fff5 fff7 fff7 fff8 fff8     ................
  40ec88:	fff8 fff8 fff6 fff6 fff6 fff6 fff4 fff4     ................
  40ec98:	fff2 fff2 fff0 fff0 ffeb ffeb ffe8 ffe8     ................
  40eca8:	ffed ffed fff9 fff9 0006 0006 0011 0011     ................
  40ecb8:	001e 001e 0020 0020 0018 0018 000f 000f     .... . .........
  40ecc8:	0007 0007 0005 0005 0004 0004 000a 000a     ................
  40ecd8:	0010 0010 0015 0015 0019 0019 0019 0019     ................
  40ece8:	0016 0016 0013 0013 0017 0017 0015 0015     ................
  40ecf8:	001b 001b 001a 001a 001c 001c 0019 0019     ................
  40ed08:	0014 0014 0015 0015 0014 0014 0017 0017     ................
  40ed18:	0015 0015 0014 0014 000b 000b 0002 0002     ................
  40ed28:	fff7 fff7 fff3 fff3 fff3 fff3 fff3 fff3     ................
  40ed38:	fff3 fff3 fff0 fff0 fff0 fff0 ffee ffee     ................
  40ed48:	fff3 fff3 fff0 fff0 fff3 fff3 fff6 fff6     ................
  40ed58:	fff5 fff5 fff8 fff8 fff8 fff8 fffa fffa     ................
  40ed68:	fff4 fff4 fff4 fff4 fff5 fff5 fff9 fff9     ................
  40ed78:	fffa fffa 0001 0001 0003 0003 0005 0005     ................
  40ed88:	0004 0004 ffff ffff 0004 0004 000a 000a     ................
  40ed98:	452d 092d 4d57 3938 3430 6920 696e 6974     -E-.WM8904 initi
  40eda8:	6c61 7a69 7461 6f69 206e 6166 6c69 6465     alization failed
  40edb8:	0d2e 0000 4d57 3938 3430 6e20 746f 6620     ....WM8904 not f
  40edc8:	756f 646e 0a21 000d                         ound!...

0040edd0 <midi_note_frequencies>:
  40edd0:	d0e5 4102 978d 410a d4fe 4112 9168 411b     ...A...A...Ah..A
  40ede0:	d0e5 4124 9ba6 412e fdf4 4138 0000 4144     ..$A...A..8A..DA
  40edf0:	a5e3 414f 0000 415c 1687 4169 f1aa 4176     ..OA..\A..iA..vA
  40ee00:	d0e5 4182 978d 418a d4fe 4192 8f5c 419b     ...A...A...A\..A
  40ee10:	d0e5 41a4 9db2 41ae 0000 41b9 0000 41c4     ...A...A...A...A
  40ee20:	a7f0 41cf 0000 41dc 147b 41e9 f1aa 41f6     ...A...A{..A...A
  40ee30:	cfdf 4202 978d 420a d4fe 4212 9062 421b     ...B...B...Bb..B
  40ee40:	cfdf 4224 9db2 422e fefa 4238 fefa 4243     ..$B...B..8B..CB
  40ee50:	a6e9 424f 0000 425c 147b 4269 f0a4 4276     ..OB..\B{.iB..vB
  40ee60:	cfdf 4282 978d 428a d4fe 4292 9062 429b     ...B...B...Bb..B
  40ee70:	d062 42a4 9d2f 42ae ff7d 42b8 ff7d 42c3     b..B/..B}..B}..B
  40ee80:	a6e9 42cf 0000 42dc 14fe 42e9 f127 42f6     ...B...B...B'..B
  40ee90:	d021 4302 974c 430a d4fe 4312 9021 431b     !..CL..C...C!..C
  40eea0:	d062 4324 9d2f 432e ff3b 4338 ff7d 4343     b.$C/..C;.8C}.CC
  40eeb0:	a6e9 434f 0000 435c 14fe 4369 f127 4376     ..OC..\C..iC'.vC
  40eec0:	d021 4382 976d 438a d51f 4392 9042 439b     !..Cm..C...CB..C
  40eed0:	d062 43a4 9d2f 43ae ff3b 43b8 ff5c 43c3     b..C/..C;..C\..C
  40eee0:	a70a 43cf 0000 43dc 14fe 43e9 f106 43f6     ...C...C...C...C
  40eef0:	d010 4402 975c 440a d51f 4412 9042 441b     ...D\..D...DB..D
  40ef00:	d052 4424 9d2f 442e ff4c 4438 ff6d 4443     R.$D/..DL.8Dm.CD
  40ef10:	a6fa 444f 0000 445c 14fe 4469 f117 4476     ..OD..\D..iD..vD
  40ef20:	d010 4482 9764 448a d517 4492 9042 449b     ...Dd..D...DB..D
  40ef30:	d052 44a4 9d37 44ae ff4c 44b8 ff6d 44c3     R..D7..DL..Dm..D
  40ef40:	a702 44cf 0000 44dc 14f6 44e9 f10e 44f6     ...D...D...D...D
  40ef50:	d014 4502 9760 450a d517 4512 9042 451b     ...E`..E...EB..E
  40ef60:	d052 4524 9d37 452e ff48 4538 ff68 4543     R.$E7..EH.8Eh.CE
  40ef70:	a702 454f 0000 455c 14f6 4569 f10e 4576     ..OE..\E..iE..vE
  40ef80:	d012 4582 9760 458a d517 4592 9042 459b     ...E`..E...EB..E
  40ef90:	d054 45a4 9d37 45ae ff4a 45b8 ff6a 45c3     T..E7..EJ..Ej..E
  40efa0:	a700 45cf 0000 45dc 14f6 45e9 f110 45f6     ...E...E...E...E
  40efb0:	d012 4602 9760 460a d518 4612 9041 461b     ...F`..F...FA..F
  40efc0:	d052 4624 9d33 462e ff48 4638 ff66 4643     R.$F3..FH.8Ff.CF
  40efd0:	002d 0000 3025 7832 0000 0000 654d 6f6c     -...%02x....Melo
  40efe0:	7964 0000                                   dy..

0040efe4 <CSWTCH.7>:
  40efe4:	0100 0000 0300 0000 0200 0000 c200 0001     ................
  40eff4:	00c0 0000 0800 0000 0000 0000 0404 0000     ................
  40f004:	6954 6c74 2065 6548 6572 0000 0000 0000     Title Here......
	...

0040f02c <_global_impure_ptr>:
  40f02c:	0040 2040 3130 3332 3534 3736 3938 4241     @.@ 0123456789AB
  40f03c:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  40f04c:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  40f05c:	296c 0000                                   l)..

0040f060 <blanks.7217>:
  40f060:	2020 2020 2020 2020 2020 2020 2020 2020                     

0040f070 <zeroes.7218>:
  40f070:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  40f080:	0043 0000 4f50 4953 0058 0000 002e 0000     C...POSIX.......

0040f090 <_ctype_>:
  40f090:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  40f0a0:	2020 2020 2020 2020 2020 2020 2020 2020                     
  40f0b0:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  40f0c0:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  40f0d0:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  40f0e0:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  40f0f0:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  40f100:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  40f110:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

0040f194 <_init>:
  40f194:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40f196:	bf00      	nop
  40f198:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40f19a:	bc08      	pop	{r3}
  40f19c:	469e      	mov	lr, r3
  40f19e:	4770      	bx	lr

0040f1a0 <__init_array_start>:
  40f1a0:	00404ae5 	.word	0x00404ae5

0040f1a4 <__frame_dummy_init_array_entry>:
  40f1a4:	00400165                                e.@.

0040f1a8 <_fini>:
  40f1a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40f1aa:	bf00      	nop
  40f1ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40f1ae:	bc08      	pop	{r3}
  40f1b0:	469e      	mov	lr, r3
  40f1b2:	4770      	bx	lr

0040f1b4 <__fini_array_start>:
  40f1b4:	00400141 	.word	0x00400141

Disassembly of section .relocate:

20400000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20400000:	f3bf 8f5f 	dmb	sy
20400004:	3801      	subs	r0, #1
20400006:	d1fb      	bne.n	20400000 <portable_delay_cycles>
20400008:	4770      	bx	lr
	...

2040000c <fillBuffer>:
2040000c:	9ad0 2040                                   ..@ 

20400010 <inBuffer>:
20400010:	9dd0 2042                                   ..B 

20400014 <inPingMode>:
20400014:	0001 0000                                   ....

20400018 <outBuffer>:
20400018:	9bd0 2041                                   ..A 

2040001c <outPingMode>:
2040001c:	0001 0000                                   ....

20400020 <processBuffer>:
20400020:	9dd0 2041                                   ..A 

20400024 <processPingMode>:
20400024:	0001 0000                                   ....

20400028 <pitchtracker>:
20400028:	0000 bf80 ffff ffff                         ........

20400030 <g_interrupt_enabled>:
20400030:	0001 0000                                   ....

20400034 <SystemCoreClock>:
20400034:	0900 003d                                   ..=.

20400038 <_impure_ptr>:
20400038:	0040 2040 0000 0000                         @.@ ....

20400040 <impure_data>:
20400040:	0000 0000 032c 2040 0394 2040 03fc 2040     ....,.@ ..@ ..@ 
	...
204000e8:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
204000f8:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20400468 <__malloc_av_>:
	...
20400470:	0468 2040 0468 2040 0470 2040 0470 2040     h.@ h.@ p.@ p.@ 
20400480:	0478 2040 0478 2040 0480 2040 0480 2040     x.@ x.@ ..@ ..@ 
20400490:	0488 2040 0488 2040 0490 2040 0490 2040     ..@ ..@ ..@ ..@ 
204004a0:	0498 2040 0498 2040 04a0 2040 04a0 2040     ..@ ..@ ..@ ..@ 
204004b0:	04a8 2040 04a8 2040 04b0 2040 04b0 2040     ..@ ..@ ..@ ..@ 
204004c0:	04b8 2040 04b8 2040 04c0 2040 04c0 2040     ..@ ..@ ..@ ..@ 
204004d0:	04c8 2040 04c8 2040 04d0 2040 04d0 2040     ..@ ..@ ..@ ..@ 
204004e0:	04d8 2040 04d8 2040 04e0 2040 04e0 2040     ..@ ..@ ..@ ..@ 
204004f0:	04e8 2040 04e8 2040 04f0 2040 04f0 2040     ..@ ..@ ..@ ..@ 
20400500:	04f8 2040 04f8 2040 0500 2040 0500 2040     ..@ ..@ ..@ ..@ 
20400510:	0508 2040 0508 2040 0510 2040 0510 2040     ..@ ..@ ..@ ..@ 
20400520:	0518 2040 0518 2040 0520 2040 0520 2040     ..@ ..@  .@  .@ 
20400530:	0528 2040 0528 2040 0530 2040 0530 2040     (.@ (.@ 0.@ 0.@ 
20400540:	0538 2040 0538 2040 0540 2040 0540 2040     8.@ 8.@ @.@ @.@ 
20400550:	0548 2040 0548 2040 0550 2040 0550 2040     H.@ H.@ P.@ P.@ 
20400560:	0558 2040 0558 2040 0560 2040 0560 2040     X.@ X.@ `.@ `.@ 
20400570:	0568 2040 0568 2040 0570 2040 0570 2040     h.@ h.@ p.@ p.@ 
20400580:	0578 2040 0578 2040 0580 2040 0580 2040     x.@ x.@ ..@ ..@ 
20400590:	0588 2040 0588 2040 0590 2040 0590 2040     ..@ ..@ ..@ ..@ 
204005a0:	0598 2040 0598 2040 05a0 2040 05a0 2040     ..@ ..@ ..@ ..@ 
204005b0:	05a8 2040 05a8 2040 05b0 2040 05b0 2040     ..@ ..@ ..@ ..@ 
204005c0:	05b8 2040 05b8 2040 05c0 2040 05c0 2040     ..@ ..@ ..@ ..@ 
204005d0:	05c8 2040 05c8 2040 05d0 2040 05d0 2040     ..@ ..@ ..@ ..@ 
204005e0:	05d8 2040 05d8 2040 05e0 2040 05e0 2040     ..@ ..@ ..@ ..@ 
204005f0:	05e8 2040 05e8 2040 05f0 2040 05f0 2040     ..@ ..@ ..@ ..@ 
20400600:	05f8 2040 05f8 2040 0600 2040 0600 2040     ..@ ..@ ..@ ..@ 
20400610:	0608 2040 0608 2040 0610 2040 0610 2040     ..@ ..@ ..@ ..@ 
20400620:	0618 2040 0618 2040 0620 2040 0620 2040     ..@ ..@  .@  .@ 
20400630:	0628 2040 0628 2040 0630 2040 0630 2040     (.@ (.@ 0.@ 0.@ 
20400640:	0638 2040 0638 2040 0640 2040 0640 2040     8.@ 8.@ @.@ @.@ 
20400650:	0648 2040 0648 2040 0650 2040 0650 2040     H.@ H.@ P.@ P.@ 
20400660:	0658 2040 0658 2040 0660 2040 0660 2040     X.@ X.@ `.@ `.@ 
20400670:	0668 2040 0668 2040 0670 2040 0670 2040     h.@ h.@ p.@ p.@ 
20400680:	0678 2040 0678 2040 0680 2040 0680 2040     x.@ x.@ ..@ ..@ 
20400690:	0688 2040 0688 2040 0690 2040 0690 2040     ..@ ..@ ..@ ..@ 
204006a0:	0698 2040 0698 2040 06a0 2040 06a0 2040     ..@ ..@ ..@ ..@ 
204006b0:	06a8 2040 06a8 2040 06b0 2040 06b0 2040     ..@ ..@ ..@ ..@ 
204006c0:	06b8 2040 06b8 2040 06c0 2040 06c0 2040     ..@ ..@ ..@ ..@ 
204006d0:	06c8 2040 06c8 2040 06d0 2040 06d0 2040     ..@ ..@ ..@ ..@ 
204006e0:	06d8 2040 06d8 2040 06e0 2040 06e0 2040     ..@ ..@ ..@ ..@ 
204006f0:	06e8 2040 06e8 2040 06f0 2040 06f0 2040     ..@ ..@ ..@ ..@ 
20400700:	06f8 2040 06f8 2040 0700 2040 0700 2040     ..@ ..@ ..@ ..@ 
20400710:	0708 2040 0708 2040 0710 2040 0710 2040     ..@ ..@ ..@ ..@ 
20400720:	0718 2040 0718 2040 0720 2040 0720 2040     ..@ ..@  .@  .@ 
20400730:	0728 2040 0728 2040 0730 2040 0730 2040     (.@ (.@ 0.@ 0.@ 
20400740:	0738 2040 0738 2040 0740 2040 0740 2040     8.@ 8.@ @.@ @.@ 
20400750:	0748 2040 0748 2040 0750 2040 0750 2040     H.@ H.@ P.@ P.@ 
20400760:	0758 2040 0758 2040 0760 2040 0760 2040     X.@ X.@ `.@ `.@ 
20400770:	0768 2040 0768 2040 0770 2040 0770 2040     h.@ h.@ p.@ p.@ 
20400780:	0778 2040 0778 2040 0780 2040 0780 2040     x.@ x.@ ..@ ..@ 
20400790:	0788 2040 0788 2040 0790 2040 0790 2040     ..@ ..@ ..@ ..@ 
204007a0:	0798 2040 0798 2040 07a0 2040 07a0 2040     ..@ ..@ ..@ ..@ 
204007b0:	07a8 2040 07a8 2040 07b0 2040 07b0 2040     ..@ ..@ ..@ ..@ 
204007c0:	07b8 2040 07b8 2040 07c0 2040 07c0 2040     ..@ ..@ ..@ ..@ 
204007d0:	07c8 2040 07c8 2040 07d0 2040 07d0 2040     ..@ ..@ ..@ ..@ 
204007e0:	07d8 2040 07d8 2040 07e0 2040 07e0 2040     ..@ ..@ ..@ ..@ 
204007f0:	07e8 2040 07e8 2040 07f0 2040 07f0 2040     ..@ ..@ ..@ ..@ 
20400800:	07f8 2040 07f8 2040 0800 2040 0800 2040     ..@ ..@ ..@ ..@ 
20400810:	0808 2040 0808 2040 0810 2040 0810 2040     ..@ ..@ ..@ ..@ 
20400820:	0818 2040 0818 2040 0820 2040 0820 2040     ..@ ..@  .@  .@ 
20400830:	0828 2040 0828 2040 0830 2040 0830 2040     (.@ (.@ 0.@ 0.@ 
20400840:	0838 2040 0838 2040 0840 2040 0840 2040     8.@ 8.@ @.@ @.@ 
20400850:	0848 2040 0848 2040 0850 2040 0850 2040     H.@ H.@ P.@ P.@ 
20400860:	0858 2040 0858 2040 0860 2040 0860 2040     X.@ X.@ `.@ `.@ 

20400870 <__malloc_sbrk_base>:
20400870:	ffff ffff                                   ....

20400874 <__malloc_trim_threshold>:
20400874:	0000 0002                                   ....

20400878 <__atexit_recursive_mutex>:
20400878:	257c 2044                                   |%D 

2040087c <__global_locale>:
2040087c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040089c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008bc:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008dc:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008fc:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040091c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040093c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040095c:	5e21 0040 556d 0040 0000 0000 f090 0040     !^@.mU@.......@.
2040096c:	f08c 0040 f040 0040 f040 0040 f040 0040     ..@.@.@.@.@.@.@.
2040097c:	f040 0040 f040 0040 f040 0040 f040 0040     @.@.@.@.@.@.@.@.
2040098c:	f040 0040 f040 0040 ffff ffff ffff ffff     @.@.@.@.........
2040099c:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
204009c4:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
