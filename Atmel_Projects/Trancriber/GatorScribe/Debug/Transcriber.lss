
Transcriber.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00014c24  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00414c24  00414c24  00024c24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000a00  20400000  00414c2c  00030000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          0003ae38  20400a00  0041562c  00030a00  2**2
                  ALLOC
  4 .stack        00002000  2043b838  00450464  00030a00  2**0
                  ALLOC
  5 .heap         00000200  2043d838  00452464  00030a00  2**0
                  ALLOC
  6 .ARM.attributes 0000002c  00000000  00000000  00030a00  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  00030a2c  2**0
                  CONTENTS, READONLY
  8 .debug_info   0002a4be  00000000  00000000  00030a85  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000061d9  00000000  00000000  0005af43  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000de25  00000000  00000000  0006111c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00001068  00000000  00000000  0006ef41  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00002618  00000000  00000000  0006ffa9  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00028400  00000000  00000000  000725c1  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0001a3a7  00000000  00000000  0009a9c1  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    0009ddce  00000000  00000000  000b4d68  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00003c70  00000000  00000000  00152b38  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	38 d8 43 20 81 42 40 00 79 42 40 00 7d 42 40 00     8.C .B@.yB@.}B@.
  400010:	79 42 40 00 79 42 40 00 79 42 40 00 00 00 00 00     yB@.yB@.yB@.....
	...
  40002c:	79 42 40 00 79 42 40 00 00 00 00 00 79 42 40 00     yB@.yB@.....yB@.
  40003c:	69 48 40 00 79 42 40 00 79 42 40 00 79 42 40 00     iH@.yB@.yB@.yB@.
  40004c:	f5 0e 40 00 79 42 40 00 79 42 40 00 79 42 40 00     ..@.yB@.yB@.yB@.
  40005c:	79 42 40 00 79 42 40 00 00 00 00 00 dd 3f 40 00     yB@.yB@......?@.
  40006c:	ed 3f 40 00 fd 3f 40 00 79 42 40 00 75 47 40 00     .?@..?@.yB@.uG@.
  40007c:	79 42 40 00 0d 40 40 00 1d 40 40 00 79 42 40 00     yB@..@@..@@.yB@.
  40008c:	79 42 40 00 79 42 40 00 79 42 40 00 79 42 40 00     yB@.yB@.yB@.yB@.
  40009c:	79 42 40 00 79 42 40 00 79 42 40 00 79 42 40 00     yB@.yB@.yB@.yB@.
  4000ac:	79 42 40 00 79 42 40 00 79 42 40 00 79 42 40 00     yB@.yB@.yB@.yB@.
  4000bc:	79 42 40 00 79 42 40 00 79 42 40 00 79 42 40 00     yB@.yB@.yB@.yB@.
  4000cc:	79 42 40 00 00 00 00 00 79 42 40 00 00 00 00 00     yB@.....yB@.....
  4000dc:	79 42 40 00 79 42 40 00 79 42 40 00 79 42 40 00     yB@.yB@.yB@.yB@.
  4000ec:	79 42 40 00 79 42 40 00 79 42 40 00 79 42 40 00     yB@.yB@.yB@.yB@.
  4000fc:	79 42 40 00 79 42 40 00 79 42 40 00 79 42 40 00     yB@.yB@.yB@.yB@.
  40010c:	79 42 40 00 79 42 40 00 79 42 40 00 00 00 00 00     yB@.yB@.yB@.....
  40011c:	00 00 00 00 79 42 40 00 79 42 40 00 ad 01 40 00     ....yB@.yB@...@.
  40012c:	79 42 40 00 79 42 40 00 00 00 00 00 79 42 40 00     yB@.yB@.....yB@.
  40013c:	79 42 40 00                                         yB@.

00400140 <__do_global_dtors_aux>:
  400140:	b510      	push	{r4, lr}
  400142:	4c05      	ldr	r4, [pc, #20]	; (400158 <__do_global_dtors_aux+0x18>)
  400144:	7823      	ldrb	r3, [r4, #0]
  400146:	b933      	cbnz	r3, 400156 <__do_global_dtors_aux+0x16>
  400148:	4b04      	ldr	r3, [pc, #16]	; (40015c <__do_global_dtors_aux+0x1c>)
  40014a:	b113      	cbz	r3, 400152 <__do_global_dtors_aux+0x12>
  40014c:	4804      	ldr	r0, [pc, #16]	; (400160 <__do_global_dtors_aux+0x20>)
  40014e:	f3af 8000 	nop.w
  400152:	2301      	movs	r3, #1
  400154:	7023      	strb	r3, [r4, #0]
  400156:	bd10      	pop	{r4, pc}
  400158:	20400a00 	.word	0x20400a00
  40015c:	00000000 	.word	0x00000000
  400160:	00414c2c 	.word	0x00414c2c

00400164 <frame_dummy>:
  400164:	4b0c      	ldr	r3, [pc, #48]	; (400198 <frame_dummy+0x34>)
  400166:	b143      	cbz	r3, 40017a <frame_dummy+0x16>
  400168:	480c      	ldr	r0, [pc, #48]	; (40019c <frame_dummy+0x38>)
  40016a:	490d      	ldr	r1, [pc, #52]	; (4001a0 <frame_dummy+0x3c>)
  40016c:	b510      	push	{r4, lr}
  40016e:	f3af 8000 	nop.w
  400172:	480c      	ldr	r0, [pc, #48]	; (4001a4 <frame_dummy+0x40>)
  400174:	6803      	ldr	r3, [r0, #0]
  400176:	b923      	cbnz	r3, 400182 <frame_dummy+0x1e>
  400178:	bd10      	pop	{r4, pc}
  40017a:	480a      	ldr	r0, [pc, #40]	; (4001a4 <frame_dummy+0x40>)
  40017c:	6803      	ldr	r3, [r0, #0]
  40017e:	b933      	cbnz	r3, 40018e <frame_dummy+0x2a>
  400180:	4770      	bx	lr
  400182:	4b09      	ldr	r3, [pc, #36]	; (4001a8 <frame_dummy+0x44>)
  400184:	2b00      	cmp	r3, #0
  400186:	d0f7      	beq.n	400178 <frame_dummy+0x14>
  400188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40018c:	4718      	bx	r3
  40018e:	4b06      	ldr	r3, [pc, #24]	; (4001a8 <frame_dummy+0x44>)
  400190:	2b00      	cmp	r3, #0
  400192:	d0f5      	beq.n	400180 <frame_dummy+0x1c>
  400194:	4718      	bx	r3
  400196:	bf00      	nop
  400198:	00000000 	.word	0x00000000
  40019c:	00414c2c 	.word	0x00414c2c
  4001a0:	20400a04 	.word	0x20400a04
  4001a4:	00414c2c 	.word	0x00414c2c
  4001a8:	00000000 	.word	0x00000000

004001ac <XDMAC_Handler>:
 */
static inline uint32_t xdmac_channel_get_interrupt_status(Xdmac *xdmac, uint32_t channel_num)
{
	Assert(xdmac);
	Assert(channel_num < XDMACCHID_NUMBER);
	return xdmac->XDMAC_CHID[channel_num].XDMAC_CIS;
  4001ac:	4b87      	ldr	r3, [pc, #540]	; (4003cc <XDMAC_Handler+0x220>)
  4001ae:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
void XDMAC_Handler(void)
{
    uint32_t dma_status;
    
    dma_status = xdmac_channel_get_interrupt_status(XDMAC, XDMA_CH_SSC_RX);
    if (dma_status & XDMAC_CIS_BIS)
  4001b0:	07d8      	lsls	r0, r3, #31
  4001b2:	d556      	bpl.n	400262 <XDMAC_Handler+0xb6>
    {
		if(inPingMode)
  4001b4:	4a86      	ldr	r2, [pc, #536]	; (4003d0 <XDMAC_Handler+0x224>)
{
  4001b6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		if(inPingMode)
  4001ba:	7813      	ldrb	r3, [r2, #0]
  4001bc:	2b00      	cmp	r3, #0
  4001be:	d162      	bne.n	400286 <XDMAC_Handler+0xda>
		{
			inBuffer = inPingBuffer; 
		}
		else 
		{
			inBuffer = inPongBuffer; 
  4001c0:	4984      	ldr	r1, [pc, #528]	; (4003d4 <XDMAC_Handler+0x228>)
  4001c2:	4885      	ldr	r0, [pc, #532]	; (4003d8 <XDMAC_Handler+0x22c>)
  4001c4:	460b      	mov	r3, r1
  4001c6:	6001      	str	r1, [r0, #0]
		}
		inPingMode = !inPingMode; 
  4001c8:	7811      	ldrb	r1, [r2, #0]
  4001ca:	f081 0101 	eor.w	r1, r1, #1
  4001ce:	7011      	strb	r1, [r2, #0]
		int processIdx = 0; 
		if (metronome_on)
  4001d0:	4a82      	ldr	r2, [pc, #520]	; (4003dc <XDMAC_Handler+0x230>)
  4001d2:	7811      	ldrb	r1, [r2, #0]
  4001d4:	f001 02ff 	and.w	r2, r1, #255	; 0xff
  4001d8:	2900      	cmp	r1, #0
  4001da:	d15d      	bne.n	400298 <XDMAC_Handler+0xec>
  4001dc:	4c80      	ldr	r4, [pc, #512]	; (4003e0 <XDMAC_Handler+0x234>)
  4001de:	e000      	b.n	4001e2 <XDMAC_Handler+0x36>
  4001e0:	6803      	ldr	r3, [r0, #0]
			}
		}
		else 
		{
			for(int i = 0; i < BUF_SIZE; i++)
				outBuffer[i] = (uint16_t)((int16_t)inBuffer[i] / 2);	
  4001e2:	5a9b      	ldrh	r3, [r3, r2]
  4001e4:	6821      	ldr	r1, [r4, #0]
  4001e6:	b21b      	sxth	r3, r3
  4001e8:	4411      	add	r1, r2
  4001ea:	3202      	adds	r2, #2
  4001ec:	2b00      	cmp	r3, #0
  4001ee:	bfb8      	it	lt
  4001f0:	3301      	addlt	r3, #1
			for(int i = 0; i < BUF_SIZE; i++)
  4001f2:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
				outBuffer[i] = (uint16_t)((int16_t)inBuffer[i] / 2);	
  4001f6:	f3c3 034f 	ubfx	r3, r3, #1, #16
  4001fa:	800b      	strh	r3, [r1, #0]
			for(int i = 0; i < BUF_SIZE; i++)
  4001fc:	d1f0      	bne.n	4001e0 <XDMAC_Handler+0x34>
  4001fe:	2300      	movs	r3, #0
  400200:	4d78      	ldr	r5, [pc, #480]	; (4003e4 <XDMAC_Handler+0x238>)
  400202:	461c      	mov	r4, r3
		
		// Fill process buffer 
		for(int i = 0; i < BUF_SIZE; i++)
		{
			/* Check if divisible by 4 for decimation by 2 */
			if ((i & 0x03) == 0)
  400204:	0799      	lsls	r1, r3, #30
  400206:	d10d      	bne.n	400224 <XDMAC_Handler+0x78>
				fillBuffer[processIdx++] = (float32_t)((int16_t)inBuffer[i]);
  400208:	6802      	ldr	r2, [r0, #0]
  40020a:	6829      	ldr	r1, [r5, #0]
  40020c:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
  400210:	eb01 0184 	add.w	r1, r1, r4, lsl #2
  400214:	3401      	adds	r4, #1
  400216:	b212      	sxth	r2, r2
  400218:	ee07 2a90 	vmov	s15, r2
  40021c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
  400220:	edc1 7a00 	vstr	s15, [r1]
		for(int i = 0; i < BUF_SIZE; i++)
  400224:	3301      	adds	r3, #1
  400226:	2b80      	cmp	r3, #128	; 0x80
  400228:	d1ec      	bne.n	400204 <XDMAC_Handler+0x58>
		}
		
		if (processPingMode)
  40022a:	4b6f      	ldr	r3, [pc, #444]	; (4003e8 <XDMAC_Handler+0x23c>)
  40022c:	781b      	ldrb	r3, [r3, #0]
  40022e:	2b00      	cmp	r3, #0
  400230:	d02d      	beq.n	40028e <XDMAC_Handler+0xe2>
		{
			if (fillBuffer == &processPingBuffer[PROCESS_BUF_SIZE - (BUF_SIZE >> 1)])
  400232:	682b      	ldr	r3, [r5, #0]
  400234:	4a6d      	ldr	r2, [pc, #436]	; (4003ec <XDMAC_Handler+0x240>)
  400236:	4293      	cmp	r3, r2
  400238:	d001      	beq.n	40023e <XDMAC_Handler+0x92>
			{
				// out of time 
			}
			else
			{
				fillBuffer += PROCESS_BUF_SIZE_INCREMENT;
  40023a:	3380      	adds	r3, #128	; 0x80
  40023c:	602b      	str	r3, [r5, #0]
  40023e:	4b63      	ldr	r3, [pc, #396]	; (4003cc <XDMAC_Handler+0x220>)
  400240:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
			}
		}
    }
	
	dma_status = xdmac_channel_get_interrupt_status(XDMAC, XDMA_CH_SSC_TX);
	if (dma_status & XDMAC_CIS_BIS)
  400244:	07da      	lsls	r2, r3, #31
  400246:	d50a      	bpl.n	40025e <XDMAC_Handler+0xb2>
	{
		if(outPingMode)
  400248:	4b69      	ldr	r3, [pc, #420]	; (4003f0 <XDMAC_Handler+0x244>)
  40024a:	781a      	ldrb	r2, [r3, #0]
  40024c:	2a00      	cmp	r2, #0
  40024e:	d152      	bne.n	4002f6 <XDMAC_Handler+0x14a>
		{
			outBuffer = outPingBuffer; 
		}
		else
		{
			outBuffer = outPongBuffer; 
  400250:	4a63      	ldr	r2, [pc, #396]	; (4003e0 <XDMAC_Handler+0x234>)
  400252:	4968      	ldr	r1, [pc, #416]	; (4003f4 <XDMAC_Handler+0x248>)
  400254:	6011      	str	r1, [r2, #0]
		}
		outPingMode = !outPingMode; 
  400256:	781a      	ldrb	r2, [r3, #0]
  400258:	f082 0201 	eor.w	r2, r2, #1
  40025c:	701a      	strb	r2, [r3, #0]
  40025e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  400262:	4b5a      	ldr	r3, [pc, #360]	; (4003cc <XDMAC_Handler+0x220>)
  400264:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
	if (dma_status & XDMAC_CIS_BIS)
  400268:	07db      	lsls	r3, r3, #31
  40026a:	d50b      	bpl.n	400284 <XDMAC_Handler+0xd8>
		if(outPingMode)
  40026c:	4b60      	ldr	r3, [pc, #384]	; (4003f0 <XDMAC_Handler+0x244>)
  40026e:	781a      	ldrb	r2, [r3, #0]
  400270:	2a00      	cmp	r2, #0
  400272:	d144      	bne.n	4002fe <XDMAC_Handler+0x152>
			outBuffer = outPongBuffer; 
  400274:	4a5a      	ldr	r2, [pc, #360]	; (4003e0 <XDMAC_Handler+0x234>)
  400276:	495f      	ldr	r1, [pc, #380]	; (4003f4 <XDMAC_Handler+0x248>)
  400278:	6011      	str	r1, [r2, #0]
		outPingMode = !outPingMode; 
  40027a:	781a      	ldrb	r2, [r3, #0]
  40027c:	f082 0201 	eor.w	r2, r2, #1
  400280:	701a      	strb	r2, [r3, #0]
  400282:	4770      	bx	lr
  400284:	4770      	bx	lr
			inBuffer = inPingBuffer; 
  400286:	4854      	ldr	r0, [pc, #336]	; (4003d8 <XDMAC_Handler+0x22c>)
  400288:	4b5b      	ldr	r3, [pc, #364]	; (4003f8 <XDMAC_Handler+0x24c>)
  40028a:	6003      	str	r3, [r0, #0]
  40028c:	e79c      	b.n	4001c8 <XDMAC_Handler+0x1c>
			if (fillBuffer == &processPongBuffer[PROCESS_BUF_SIZE - (BUF_SIZE >> 1)])
  40028e:	682b      	ldr	r3, [r5, #0]
  400290:	4a5a      	ldr	r2, [pc, #360]	; (4003fc <XDMAC_Handler+0x250>)
  400292:	4293      	cmp	r3, r2
  400294:	d1d1      	bne.n	40023a <XDMAC_Handler+0x8e>
  400296:	e7d2      	b.n	40023e <XDMAC_Handler+0x92>
			if (one_beat)
  400298:	4a59      	ldr	r2, [pc, #356]	; (400400 <XDMAC_Handler+0x254>)
  40029a:	7812      	ldrb	r2, [r2, #0]
  40029c:	f002 01ff 	and.w	r1, r2, #255	; 0xff
  4002a0:	2a00      	cmp	r2, #0
  4002a2:	d134      	bne.n	40030e <XDMAC_Handler+0x162>
			else if (up_beat)
  4002a4:	4a57      	ldr	r2, [pc, #348]	; (400404 <XDMAC_Handler+0x258>)
  4002a6:	7812      	ldrb	r2, [r2, #0]
  4002a8:	f002 04ff 	and.w	r4, r2, #255	; 0xff
  4002ac:	2a00      	cmp	r2, #0
  4002ae:	d162      	bne.n	400376 <XDMAC_Handler+0x1ca>
  4002b0:	4621      	mov	r1, r4
  4002b2:	4a55      	ldr	r2, [pc, #340]	; (400408 <XDMAC_Handler+0x25c>)
  4002b4:	4c4a      	ldr	r4, [pc, #296]	; (4003e0 <XDMAC_Handler+0x234>)
					if(clickIdx == CLICK_LENGTH)
  4002b6:	f242 2e74 	movw	lr, #8820	; 0x2274
						clickIdx = 0;
  4002ba:	4688      	mov	r8, r1
  4002bc:	4e53      	ldr	r6, [pc, #332]	; (40040c <XDMAC_Handler+0x260>)
  4002be:	e003      	b.n	4002c8 <XDMAC_Handler+0x11c>
				for(int i = 0; i < BUF_SIZE; i++)
  4002c0:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
  4002c4:	d048      	beq.n	400358 <XDMAC_Handler+0x1ac>
  4002c6:	6803      	ldr	r3, [r0, #0]
					outBuffer[i] = (uint16_t) ( ( (int32_t)((int16_t)inBuffer[i]) + (int32_t)(click_low[clickIdx++]) ) / 2 );
  4002c8:	5a5b      	ldrh	r3, [r3, r1]
  4002ca:	6817      	ldr	r7, [r2, #0]
  4002cc:	6825      	ldr	r5, [r4, #0]
  4002ce:	f936 9017 	ldrsh.w	r9, [r6, r7, lsl #1]
  4002d2:	3701      	adds	r7, #1
  4002d4:	440d      	add	r5, r1
  4002d6:	3102      	adds	r1, #2
  4002d8:	fa09 f383 	sxtah	r3, r9, r3
  4002dc:	6017      	str	r7, [r2, #0]
  4002de:	2b00      	cmp	r3, #0
  4002e0:	bfb8      	it	lt
  4002e2:	3301      	addlt	r3, #1
  4002e4:	f3c3 034f 	ubfx	r3, r3, #1, #16
  4002e8:	802b      	strh	r3, [r5, #0]
					if(clickIdx == CLICK_LENGTH)
  4002ea:	6813      	ldr	r3, [r2, #0]
  4002ec:	4573      	cmp	r3, lr
  4002ee:	d1e7      	bne.n	4002c0 <XDMAC_Handler+0x114>
						clickIdx = 0;
  4002f0:	f8c2 8000 	str.w	r8, [r2]
  4002f4:	e7e4      	b.n	4002c0 <XDMAC_Handler+0x114>
			outBuffer = outPingBuffer; 
  4002f6:	4a3a      	ldr	r2, [pc, #232]	; (4003e0 <XDMAC_Handler+0x234>)
  4002f8:	4945      	ldr	r1, [pc, #276]	; (400410 <XDMAC_Handler+0x264>)
  4002fa:	6011      	str	r1, [r2, #0]
  4002fc:	e7ab      	b.n	400256 <XDMAC_Handler+0xaa>
  4002fe:	4a38      	ldr	r2, [pc, #224]	; (4003e0 <XDMAC_Handler+0x234>)
  400300:	4943      	ldr	r1, [pc, #268]	; (400410 <XDMAC_Handler+0x264>)
  400302:	6011      	str	r1, [r2, #0]
		outPingMode = !outPingMode; 
  400304:	781a      	ldrb	r2, [r3, #0]
  400306:	f082 0201 	eor.w	r2, r2, #1
  40030a:	701a      	strb	r2, [r3, #0]
  40030c:	4770      	bx	lr
  40030e:	2100      	movs	r1, #0
  400310:	4c33      	ldr	r4, [pc, #204]	; (4003e0 <XDMAC_Handler+0x234>)
  400312:	4a3d      	ldr	r2, [pc, #244]	; (400408 <XDMAC_Handler+0x25c>)
					if(clickIdx == CLICK_LENGTH) 
  400314:	f242 2e74 	movw	lr, #8820	; 0x2274
						clickIdx = 0;
  400318:	4688      	mov	r8, r1
  40031a:	4f3e      	ldr	r7, [pc, #248]	; (400414 <XDMAC_Handler+0x268>)
  40031c:	e003      	b.n	400326 <XDMAC_Handler+0x17a>
				for(int i = 0; i < BUF_SIZE; i++)
  40031e:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
  400322:	d019      	beq.n	400358 <XDMAC_Handler+0x1ac>
  400324:	6803      	ldr	r3, [r0, #0]
					outBuffer[i] = (uint16_t) ( ( (int32_t)((int16_t)inBuffer[i]) + (int32_t)(click_high[clickIdx++]) ) / 2 );
  400326:	5a5b      	ldrh	r3, [r3, r1]
  400328:	6815      	ldr	r5, [r2, #0]
  40032a:	6826      	ldr	r6, [r4, #0]
  40032c:	f937 9015 	ldrsh.w	r9, [r7, r5, lsl #1]
  400330:	3501      	adds	r5, #1
  400332:	440e      	add	r6, r1
  400334:	3102      	adds	r1, #2
  400336:	fa09 f383 	sxtah	r3, r9, r3
  40033a:	6015      	str	r5, [r2, #0]
  40033c:	2b00      	cmp	r3, #0
  40033e:	bfb8      	it	lt
  400340:	3301      	addlt	r3, #1
  400342:	f3c3 034f 	ubfx	r3, r3, #1, #16
  400346:	8033      	strh	r3, [r6, #0]
					if(clickIdx == CLICK_LENGTH) 
  400348:	6813      	ldr	r3, [r2, #0]
  40034a:	4573      	cmp	r3, lr
  40034c:	d1e7      	bne.n	40031e <XDMAC_Handler+0x172>
				for(int i = 0; i < BUF_SIZE; i++)
  40034e:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
						clickIdx = 0;
  400352:	f8c2 8000 	str.w	r8, [r2]
				for(int i = 0; i < BUF_SIZE; i++)
  400356:	d1e5      	bne.n	400324 <XDMAC_Handler+0x178>
			metronome_time_elapsed += BUF_SIZE_PER_CHANNEL; 
  400358:	4b2f      	ldr	r3, [pc, #188]	; (400418 <XDMAC_Handler+0x26c>)
  40035a:	6819      	ldr	r1, [r3, #0]
  40035c:	3140      	adds	r1, #64	; 0x40
  40035e:	6019      	str	r1, [r3, #0]
			if (metronome_time_elapsed >= CLICK_DURATION)
  400360:	6819      	ldr	r1, [r3, #0]
  400362:	f5b1 6f7a 	cmp.w	r1, #4000	; 0xfa0
  400366:	f4ff af4a 	bcc.w	4001fe <XDMAC_Handler+0x52>
				metronome_on = false; 
  40036a:	2100      	movs	r1, #0
  40036c:	4c1b      	ldr	r4, [pc, #108]	; (4003dc <XDMAC_Handler+0x230>)
  40036e:	7021      	strb	r1, [r4, #0]
				metronome_time_elapsed = 0; 
  400370:	6019      	str	r1, [r3, #0]
				clickIdx = 0; 
  400372:	6011      	str	r1, [r2, #0]
  400374:	e743      	b.n	4001fe <XDMAC_Handler+0x52>
  400376:	4c1a      	ldr	r4, [pc, #104]	; (4003e0 <XDMAC_Handler+0x234>)
					if(clickIdx == CLICK_LENGTH)
  400378:	f242 2e74 	movw	lr, #8820	; 0x2274
  40037c:	4a22      	ldr	r2, [pc, #136]	; (400408 <XDMAC_Handler+0x25c>)
						clickIdx = 0;
  40037e:	4688      	mov	r8, r1
  400380:	4e22      	ldr	r6, [pc, #136]	; (40040c <XDMAC_Handler+0x260>)
					outBuffer[i] = (uint16_t) ( ( (int32_t)((int16_t)inBuffer[i]) + (int32_t)(click_low[clickIdx++]/6) ) / 2 );
  400382:	4f26      	ldr	r7, [pc, #152]	; (40041c <XDMAC_Handler+0x270>)
  400384:	e003      	b.n	40038e <XDMAC_Handler+0x1e2>
				for(int i = 0; i < BUF_SIZE; i++)
  400386:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
  40038a:	d0e5      	beq.n	400358 <XDMAC_Handler+0x1ac>
  40038c:	6803      	ldr	r3, [r0, #0]
					outBuffer[i] = (uint16_t) ( ( (int32_t)((int16_t)inBuffer[i]) + (int32_t)(click_low[clickIdx++]/6) ) / 2 );
  40038e:	f833 9001 	ldrh.w	r9, [r3, r1]
  400392:	6813      	ldr	r3, [r2, #0]
  400394:	fa0f f989 	sxth.w	r9, r9
  400398:	6825      	ldr	r5, [r4, #0]
  40039a:	f936 a013 	ldrsh.w	sl, [r6, r3, lsl #1]
  40039e:	3301      	adds	r3, #1
  4003a0:	440d      	add	r5, r1
  4003a2:	3102      	adds	r1, #2
  4003a4:	fb87 cb0a 	smull	ip, fp, r7, sl
  4003a8:	6013      	str	r3, [r2, #0]
  4003aa:	ebab 73ea 	sub.w	r3, fp, sl, asr #31
  4003ae:	fa09 f383 	sxtah	r3, r9, r3
  4003b2:	2b00      	cmp	r3, #0
  4003b4:	bfb8      	it	lt
  4003b6:	3301      	addlt	r3, #1
  4003b8:	f3c3 034f 	ubfx	r3, r3, #1, #16
  4003bc:	802b      	strh	r3, [r5, #0]
					if(clickIdx == CLICK_LENGTH)
  4003be:	6813      	ldr	r3, [r2, #0]
  4003c0:	4573      	cmp	r3, lr
  4003c2:	d1e0      	bne.n	400386 <XDMAC_Handler+0x1da>
						clickIdx = 0;
  4003c4:	f8c2 8000 	str.w	r8, [r2]
  4003c8:	e7dd      	b.n	400386 <XDMAC_Handler+0x1da>
  4003ca:	bf00      	nop
  4003cc:	40078000 	.word	0x40078000
  4003d0:	20400014 	.word	0x20400014
  4003d4:	20412d3c 	.word	0x20412d3c
  4003d8:	20400010 	.word	0x20400010
  4003dc:	20402a6d 	.word	0x20402a6d
  4003e0:	20400018 	.word	0x20400018
  4003e4:	2040000c 	.word	0x2040000c
  4003e8:	20400024 	.word	0x20400024
  4003ec:	20412c3c 	.word	0x20412c3c
  4003f0:	2040001c 	.word	0x2040001c
  4003f4:	20412f3c 	.word	0x20412f3c
  4003f8:	2042303c 	.word	0x2042303c
  4003fc:	20422f3c 	.word	0x20422f3c
  400400:	20402c71 	.word	0x20402c71
  400404:	20402c74 	.word	0x20402c74
  400408:	20400a1c 	.word	0x20400a1c
  40040c:	0040df30 	.word	0x0040df30
  400410:	20412e3c 	.word	0x20412e3c
  400414:	00409a48 	.word	0x00409a48
  400418:	20400a60 	.word	0x20400a60
  40041c:	2aaaaaab 	.word	0x2aaaaaab

00400420 <configure_xdma>:
}
/******************************* XDMAC Interrupt Handler End *******************************/

/********************************** Public Functions Start **********************************/
void configure_xdma(void)
{
  400420:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t *src;
    
    xdmac_channel_config_t xdmac_channel_cfg = {0};
  400424:	2620      	movs	r6, #32
{
  400426:	b088      	sub	sp, #32
    xdmac_channel_config_t xdmac_channel_cfg = {0};
  400428:	2100      	movs	r1, #0
  40042a:	4b30      	ldr	r3, [pc, #192]	; (4004ec <configure_xdma+0xcc>)
  40042c:	4632      	mov	r2, r6
  40042e:	4668      	mov	r0, sp
  400430:	4798      	blx	r3
    
    /* Initialize and enable DMA controller */
    pmc_enable_periph_clk(ID_XDMAC);
  400432:	4b2f      	ldr	r3, [pc, #188]	; (4004f0 <configure_xdma+0xd0>)
  400434:	203a      	movs	r0, #58	; 0x3a
    | XDMAC_CC_DIF_AHB_IF0
    | XDMAC_CC_SAM_FIXED_AM
    | XDMAC_CC_DAM_INCREMENTED_AM
    | XDMAC_CC_PERID(33);
	
    xdmac_configure_transfer(XDMAC, XDMA_CH_SSC_RX, &xdmac_channel_cfg);
  400436:	4c2f      	ldr	r4, [pc, #188]	; (4004f4 <configure_xdma+0xd4>)
    pmc_enable_periph_clk(ID_XDMAC);
  400438:	4798      	blx	r3

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  40043a:	f04f 6580 	mov.w	r5, #67108864	; 0x4000000
  40043e:	4b2e      	ldr	r3, [pc, #184]	; (4004f8 <configure_xdma+0xd8>)
    xdmac_configure_transfer(XDMAC, XDMA_CH_SSC_RX, &xdmac_channel_cfg);
  400440:	466a      	mov	r2, sp
    xdmac_channel_cfg.mbr_cfg = XDMAC_CC_TYPE_PER_TRAN
  400442:	f8df e0c8 	ldr.w	lr, [pc, #200]	; 40050c <configure_xdma+0xec>
    xdmac_configure_transfer(XDMAC, XDMA_CH_SSC_RX, &xdmac_channel_cfg);
  400446:	4620      	mov	r0, r4
  400448:	f8c3 5184 	str.w	r5, [r3, #388]	; 0x184
  40044c:	2100      	movs	r1, #0
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHPR[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  40044e:	f883 633a 	strb.w	r6, [r3, #826]	; 0x33a
 */
static inline void xdmac_channel_set_descriptor_control(Xdmac *xdmac, uint32_t channel_num, uint32_t config)
{
	Assert(xdmac);
	Assert(channel_num < XDMACCHID_NUMBER);
	xdmac->XDMAC_CHID[channel_num].XDMAC_CNDC = config;
  400452:	270f      	movs	r7, #15
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  400454:	605d      	str	r5, [r3, #4]
	xdmac->XDMAC_GIE = ( XDMAC_GIE_IE0 << channel_num) ;
  400456:	2501      	movs	r5, #1
  400458:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 400510 <configure_xdma+0xf0>
    xdmac_channel_cfg.mbr_cfg = XDMAC_CC_TYPE_PER_TRAN
  40045c:	f8cd e00c 	str.w	lr, [sp, #12]
    xdmac_configure_transfer(XDMAC, XDMA_CH_SSC_RX, &xdmac_channel_cfg);
  400460:	47c0      	blx	r8
    
    /* Initialize linked list descriptor */
    src = (uint16_t *)&inPingBuffer[0];
    linklist_read[0].mbr_ubc = XDMAC_UBC_NVIEW_NDV1
  400462:	4b26      	ldr	r3, [pc, #152]	; (4004fc <configure_xdma+0xdc>)
    | XDMAC_CC_DIF_AHB_IF1
    | XDMAC_CC_SAM_INCREMENTED_AM
    | XDMAC_CC_DAM_FIXED_AM
    | XDMAC_CC_PERID(32);
	
    xdmac_configure_transfer(XDMAC, XDMA_CH_SSC_TX, &xdmac_channel_cfg);
  400464:	466a      	mov	r2, sp
    linklist_read[0].mbr_da = (uint32_t)(src);
  400466:	f8df e0ac 	ldr.w	lr, [pc, #172]	; 400514 <configure_xdma+0xf4>
    xdmac_configure_transfer(XDMAC, XDMA_CH_SSC_TX, &xdmac_channel_cfg);
  40046a:	4629      	mov	r1, r5
    linklist_read[0].mbr_nda = (uint32_t)&linklist_read[1];
  40046c:	f103 0010 	add.w	r0, r3, #16
	xdmac->XDMAC_CHID[channel_num].XDMAC_CNDA = (desc_addr & 0xFFFFFFFC) | ndaif;
  400470:	f023 0603 	bic.w	r6, r3, #3
	linklist_read[1].mbr_da = (uint32_t)(src);
  400474:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 400518 <configure_xdma+0xf8>
    linklist_read[0].mbr_nda = (uint32_t)&linklist_read[1];
  400478:	6018      	str	r0, [r3, #0]
    xdmac_configure_transfer(XDMAC, XDMA_CH_SSC_TX, &xdmac_channel_cfg);
  40047a:	4620      	mov	r0, r4
	xdmac->XDMAC_CHID[channel_num].XDMAC_CNDC = config;
  40047c:	66e7      	str	r7, [r4, #108]	; 0x6c
	xdmac->XDMAC_CHID[channel_num].XDMAC_CNDA = (desc_addr & 0xFFFFFFFC) | ndaif;
  40047e:	66a6      	str	r6, [r4, #104]	; 0x68
	xdmac->XDMAC_GIE = ( XDMAC_GIE_IE0 << channel_num) ;
  400480:	60e5      	str	r5, [r4, #12]
    linklist_read[0].mbr_ubc = XDMAC_UBC_NVIEW_NDV1
  400482:	4e1f      	ldr	r6, [pc, #124]	; (400500 <configure_xdma+0xe0>)
	xdmac->XDMAC_CHID[channel_num].XDMAC_CIE = mask;
  400484:	6525      	str	r5, [r4, #80]	; 0x50
    linklist_read[0].mbr_da = (uint32_t)(src);
  400486:	f8c3 e00c 	str.w	lr, [r3, #12]
    linklist_read[0].mbr_sa  = (uint32_t)&(SSC->SSC_RHR);
  40048a:	f8df e090 	ldr.w	lr, [pc, #144]	; 40051c <configure_xdma+0xfc>
	linklist_read[1].mbr_da = (uint32_t)(src);
  40048e:	f8c3 c01c 	str.w	ip, [r3, #28]
    xdmac_channel_cfg.mbr_cfg = XDMAC_CC_TYPE_PER_TRAN
  400492:	f8df c08c 	ldr.w	ip, [pc, #140]	; 400520 <configure_xdma+0x100>
    linklist_read[0].mbr_ubc = XDMAC_UBC_NVIEW_NDV1
  400496:	605e      	str	r6, [r3, #4]
	linklist_read[1].mbr_ubc = XDMAC_UBC_NVIEW_NDV1
  400498:	615e      	str	r6, [r3, #20]
    linklist_read[0].mbr_sa  = (uint32_t)&(SSC->SSC_RHR);
  40049a:	f8c3 e008 	str.w	lr, [r3, #8]
	linklist_read[1].mbr_sa  = (uint32_t)&(SSC->SSC_RHR);
  40049e:	f8c3 e018 	str.w	lr, [r3, #24]
	linklist_read[1].mbr_nda = (uint32_t)&linklist_read[0];
  4004a2:	611b      	str	r3, [r3, #16]
    xdmac_channel_cfg.mbr_cfg = XDMAC_CC_TYPE_PER_TRAN
  4004a4:	f8cd c00c 	str.w	ip, [sp, #12]
    xdmac_configure_transfer(XDMAC, XDMA_CH_SSC_TX, &xdmac_channel_cfg);
  4004a8:	47c0      	blx	r8
    
    src = (uint16_t *)&outPingBuffer[0];
    linklist_write[0].mbr_ubc = XDMAC_UBC_NVIEW_NDV1
  4004aa:	4b16      	ldr	r3, [pc, #88]	; (400504 <configure_xdma+0xe4>)
	xdmac->XDMAC_GIE = ( XDMAC_GIE_IE0 << channel_num) ;
  4004ac:	2102      	movs	r1, #2
		 | XDMAC_UBC_NDE_FETCH_EN
		 | XDMAC_UBC_NSEN_UPDATED
			| XDMAC_CUBC_UBLEN(BUF_SIZE);
    linklist_write[0].mbr_sa = (uint32_t)(src);
    linklist_write[0].mbr_da = (uint32_t)&(SSC->SSC_THR);
  4004ae:	4a16      	ldr	r2, [pc, #88]	; (400508 <configure_xdma+0xe8>)
    linklist_write[0].mbr_sa = (uint32_t)(src);
  4004b0:	f8df c070 	ldr.w	ip, [pc, #112]	; 400524 <configure_xdma+0x104>
    linklist_write[0].mbr_nda = (uint32_t)&linklist_write[1];
  4004b4:	f103 0810 	add.w	r8, r3, #16
	xdmac->XDMAC_CHID[channel_num].XDMAC_CNDA = (desc_addr & 0xFFFFFFFC) | ndaif;
  4004b8:	f023 0003 	bic.w	r0, r3, #3
	src = (uint16_t *)&outPongBuffer[0];
	linklist_write[1].mbr_ubc = XDMAC_UBC_NVIEW_NDV1
	    | XDMAC_UBC_NDE_FETCH_EN
	    | XDMAC_UBC_NSEN_UPDATED
	    | XDMAC_CUBC_UBLEN(BUF_SIZE);
	linklist_write[1].mbr_sa = (uint32_t)(src);
  4004bc:	f8df e068 	ldr.w	lr, [pc, #104]	; 400528 <configure_xdma+0x108>
    linklist_write[0].mbr_ubc = XDMAC_UBC_NVIEW_NDV1
  4004c0:	605e      	str	r6, [r3, #4]
	linklist_write[1].mbr_ubc = XDMAC_UBC_NVIEW_NDV1
  4004c2:	615e      	str	r6, [r3, #20]
	linklist_write[1].mbr_da = (uint32_t)&(SSC->SSC_THR);
	linklist_write[1].mbr_nda = (uint32_t)&linklist_write[0];
  4004c4:	611b      	str	r3, [r3, #16]
    linklist_write[0].mbr_nda = (uint32_t)&linklist_write[1];
  4004c6:	f8c3 8000 	str.w	r8, [r3]
    linklist_write[0].mbr_sa = (uint32_t)(src);
  4004ca:	f8c3 c008 	str.w	ip, [r3, #8]
	xdmac->XDMAC_CHID[channel_num].XDMAC_CNDC = config;
  4004ce:	f8c4 70ac 	str.w	r7, [r4, #172]	; 0xac
	linklist_write[1].mbr_sa = (uint32_t)(src);
  4004d2:	f8c3 e018 	str.w	lr, [r3, #24]
	xdmac->XDMAC_CHID[channel_num].XDMAC_CNDA = (desc_addr & 0xFFFFFFFC) | ndaif;
  4004d6:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
    linklist_write[0].mbr_da = (uint32_t)&(SSC->SSC_THR);
  4004da:	60da      	str	r2, [r3, #12]
	xdmac->XDMAC_GIE = ( XDMAC_GIE_IE0 << channel_num) ;
  4004dc:	60e1      	str	r1, [r4, #12]
	linklist_write[1].mbr_da = (uint32_t)&(SSC->SSC_THR);
  4004de:	61da      	str	r2, [r3, #28]
	xdmac->XDMAC_CHID[channel_num].XDMAC_CIE = mask;
  4004e0:	f8c4 5090 	str.w	r5, [r4, #144]	; 0x90
    xdmac_channel_set_descriptor_addr(XDMAC, XDMA_CH_SSC_TX, (uint32_t)(&linklist_write[0]), 0);
    
    xdmac_enable_interrupt(XDMAC, XDMA_CH_SSC_TX);
    xdmac_channel_enable_interrupt(XDMAC, XDMA_CH_SSC_TX, XDMAC_CIE_BIE);
    
}
  4004e4:	b008      	add	sp, #32
  4004e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4004ea:	bf00      	nop
  4004ec:	00407091 	.word	0x00407091
  4004f0:	004041b5 	.word	0x004041b5
  4004f4:	40078000 	.word	0x40078000
  4004f8:	e000e100 	.word	0xe000e100
  4004fc:	20400a20 	.word	0x20400a20
  400500:	0b000080 	.word	0x0b000080
  400504:	20400a40 	.word	0x20400a40
  400508:	40004024 	.word	0x40004024
  40050c:	21042801 	.word	0x21042801
  400510:	004039b1 	.word	0x004039b1
  400514:	2042303c 	.word	0x2042303c
  400518:	20412d3c 	.word	0x20412d3c
  40051c:	40004020 	.word	0x40004020
  400520:	20014811 	.word	0x20014811
  400524:	20412e3c 	.word	0x20412e3c
  400528:	20412f3c 	.word	0x20412f3c

0040052c <audio_init>:

#include "DMA_Audio.h"
#include "WM8904_Driver.h"

void audio_init(void)
{
  40052c:	b510      	push	{r4, lr}
	/* Initialize WM8904 TWI interface*/
	if (wm8904_twi_init() != TWIHS_SUCCESS) {
  40052e:	4b13      	ldr	r3, [pc, #76]	; (40057c <audio_init+0x50>)
  400530:	4798      	blx	r3
  400532:	b118      	cbz	r0, 40053c <audio_init+0x10>
		printf("-E-\tWM8904 initialization failed.\r");
  400534:	4812      	ldr	r0, [pc, #72]	; (400580 <audio_init+0x54>)
  400536:	4b13      	ldr	r3, [pc, #76]	; (400584 <audio_init+0x58>)
  400538:	4798      	blx	r3
  40053a:	e7fe      	b.n	40053a <audio_init+0xe>
			/* Capture error */
		}
	}
		
	/* Configure CODEC */
	configure_codec();
  40053c:	4b12      	ldr	r3, [pc, #72]	; (400588 <audio_init+0x5c>)
  40053e:	4604      	mov	r4, r0
  400540:	4798      	blx	r3
		
	/* Configure SSC */
	configure_ssc();
  400542:	4b12      	ldr	r3, [pc, #72]	; (40058c <audio_init+0x60>)
  400544:	4798      	blx	r3
		
	/* Configure XDMA */
	configure_xdma();
  400546:	4b12      	ldr	r3, [pc, #72]	; (400590 <audio_init+0x64>)
  400548:	4798      	blx	r3
		
	/* Enable the DAC master clock */
	pmc_pck_set_prescaler(PMC_PCK_2, PMC_MCKR_PRES_CLK_1);
  40054a:	4621      	mov	r1, r4
  40054c:	2002      	movs	r0, #2
  40054e:	4b11      	ldr	r3, [pc, #68]	; (400594 <audio_init+0x68>)
  400550:	4798      	blx	r3
	pmc_pck_set_source(PMC_PCK_2, PMC_MCKR_CSS_SLOW_CLK);
  400552:	4621      	mov	r1, r4
  400554:	2002      	movs	r0, #2
  400556:	4b10      	ldr	r3, [pc, #64]	; (400598 <audio_init+0x6c>)
  400558:	4798      	blx	r3
	pmc_enable_pck(PMC_PCK_2);
  40055a:	2002      	movs	r0, #2
  40055c:	4b0f      	ldr	r3, [pc, #60]	; (40059c <audio_init+0x70>)
  40055e:	4798      	blx	r3
		
	/* Start playing */
	ssc_enable_rx(SSC);
  400560:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
  400564:	4b0e      	ldr	r3, [pc, #56]	; (4005a0 <audio_init+0x74>)
  400566:	4798      	blx	r3
	xdmac->XDMAC_GE = (XDMAC_GE_EN0 << channel_num);
  400568:	4c0e      	ldr	r4, [pc, #56]	; (4005a4 <audio_init+0x78>)
  40056a:	2201      	movs	r2, #1
	xdmac_channel_enable(XDMAC, XDMA_CH_SSC_RX);
	// might want to enable in the first xdma interrupt (if you care)
	ssc_enable_tx(SSC);
  40056c:	4b0e      	ldr	r3, [pc, #56]	; (4005a8 <audio_init+0x7c>)
  40056e:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
  400572:	61e2      	str	r2, [r4, #28]
  400574:	4798      	blx	r3
  400576:	2302      	movs	r3, #2
  400578:	61e3      	str	r3, [r4, #28]
  40057a:	bd10      	pop	{r4, pc}
  40057c:	0040344d 	.word	0x0040344d
  400580:	00412418 	.word	0x00412418
  400584:	00406ae9 	.word	0x00406ae9
  400588:	00400671 	.word	0x00400671
  40058c:	004005ad 	.word	0x004005ad
  400590:	00400421 	.word	0x00400421
  400594:	004041fd 	.word	0x004041fd
  400598:	00404231 	.word	0x00404231
  40059c:	00404265 	.word	0x00404265
  4005a0:	0040355d 	.word	0x0040355d
  4005a4:	40078000 	.word	0x40078000
  4005a8:	0040356d 	.word	0x0040356d

004005ac <configure_ssc>:
#include "WM8904_Driver.h"


/********************************** Public Functions Start **********************************/
void configure_ssc(void)
{
  4005ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	clock_opt_t tx_clk_option, rx_clk_option;
	data_frame_opt_t tx_data_frame_option, rx_data_frame_option;

	/* Initialize clock */
	pmc_enable_periph_clk(ID_SSC);
  4005b0:	4b28      	ldr	r3, [pc, #160]	; (400654 <configure_ssc+0xa8>)
{
  4005b2:	b09c      	sub	sp, #112	; 0x70
	pmc_enable_periph_clk(ID_SSC);
  4005b4:	2016      	movs	r0, #22
	/* Reset SSC */
	ssc_reset(SSC);

	/* Transmitter clock mode configuration. */
	tx_clk_option.ul_cks = SSC_TCMR_CKS_TK;
	tx_clk_option.ul_cko = SSC_TCMR_CKO_NONE;
  4005b6:	2400      	movs	r4, #0
	pmc_enable_periph_clk(ID_SSC);
  4005b8:	4798      	blx	r3
	ssc_reset(SSC);
  4005ba:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
  4005be:	4b26      	ldr	r3, [pc, #152]	; (400658 <configure_ssc+0xac>)
	tx_clk_option.ul_cki = 0;
	tx_clk_option.ul_ckg = SSC_TCMR_CKG_CONTINUOUS;
	tx_clk_option.ul_start_sel = SSC_TCMR_START_TF_EDGE;
	tx_clk_option.ul_sttdly = 1;
	tx_clk_option.ul_period = BITS_BY_SLOT - 1;
  4005c0:	250f      	movs	r5, #15
	ssc_reset(SSC);
  4005c2:	4798      	blx	r3
	tx_clk_option.ul_sttdly = 1;
  4005c4:	2601      	movs	r6, #1
	tx_clk_option.ul_start_sel = SSC_TCMR_START_TF_EDGE;
  4005c6:	f44f 68e0 	mov.w	r8, #1792	; 0x700
	tx_clk_option.ul_cks = SSC_TCMR_CKS_TK;
  4005ca:	f04f 0e02 	mov.w	lr, #2
	/* Transmitter frame mode configuration. */
	tx_data_frame_option.ul_datlen = BITS_BY_SLOT - 1;
	tx_data_frame_option.ul_msbf = SSC_TFMR_MSBF;
  4005ce:	2780      	movs	r7, #128	; 0x80
	tx_data_frame_option.ul_fslen = BITS_BY_SLOT - 1;
	tx_data_frame_option.ul_fslen_ext = 0;
	tx_data_frame_option.ul_fsos = SSC_TFMR_FSOS_NONE;
	tx_data_frame_option.ul_fsedge = SSC_TFMR_FSEDGE_POSITIVE;
	/* Configure the SSC transmitter to I2S mode. */
	ssc_set_transmitter(SSC, &tx_clk_option, &tx_data_frame_option);
  4005d0:	aa0e      	add	r2, sp, #56	; 0x38
  4005d2:	4669      	mov	r1, sp
  4005d4:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
  4005d8:	4b20      	ldr	r3, [pc, #128]	; (40065c <configure_ssc+0xb0>)
	tx_clk_option.ul_cks = SSC_TCMR_CKS_TK;
  4005da:	f8cd e000 	str.w	lr, [sp]
	tx_clk_option.ul_cko = SSC_TCMR_CKO_NONE;
  4005de:	9401      	str	r4, [sp, #4]
	tx_clk_option.ul_cki = 0;
  4005e0:	9402      	str	r4, [sp, #8]
	tx_clk_option.ul_ckg = SSC_TCMR_CKG_CONTINUOUS;
  4005e2:	9403      	str	r4, [sp, #12]
	tx_data_frame_option.ul_datnb = 0;
  4005e4:	9410      	str	r4, [sp, #64]	; 0x40
	tx_data_frame_option.ul_fslen_ext = 0;
  4005e6:	9412      	str	r4, [sp, #72]	; 0x48
	tx_data_frame_option.ul_fsos = SSC_TFMR_FSOS_NONE;
  4005e8:	9413      	str	r4, [sp, #76]	; 0x4c
	tx_data_frame_option.ul_fsedge = SSC_TFMR_FSEDGE_POSITIVE;
  4005ea:	9414      	str	r4, [sp, #80]	; 0x50
	tx_clk_option.ul_start_sel = SSC_TCMR_START_TF_EDGE;
  4005ec:	f8cd 8018 	str.w	r8, [sp, #24]
	tx_clk_option.ul_sttdly = 1;
  4005f0:	9605      	str	r6, [sp, #20]
	tx_clk_option.ul_period = BITS_BY_SLOT - 1;
  4005f2:	9504      	str	r5, [sp, #16]
	tx_data_frame_option.ul_datlen = BITS_BY_SLOT - 1;
  4005f4:	950e      	str	r5, [sp, #56]	; 0x38
	tx_data_frame_option.ul_fslen = BITS_BY_SLOT - 1;
  4005f6:	9511      	str	r5, [sp, #68]	; 0x44
	tx_data_frame_option.ul_msbf = SSC_TFMR_MSBF;
  4005f8:	970f      	str	r7, [sp, #60]	; 0x3c
	ssc_set_transmitter(SSC, &tx_clk_option, &tx_data_frame_option);
  4005fa:	4798      	blx	r3

	/* Receiver clock mode configuration. */
	rx_clk_option.ul_cks = SSC_RCMR_CKS_TK;
	rx_clk_option.ul_cko = SSC_RCMR_CKO_NONE;
	rx_clk_option.ul_cki = SSC_RCMR_CKI;
  4005fc:	f04f 0c20 	mov.w	ip, #32
	rx_clk_option.ul_ckg = SSC_RCMR_CKG_CONTINUOUS;
	rx_clk_option.ul_start_sel = SSC_RCMR_START_RF_EDGE;
	rx_clk_option.ul_sttdly = 1;	
	rx_clk_option.ul_period = BITS_BY_SLOT;	
  400600:	f04f 0e10 	mov.w	lr, #16
	rx_data_frame_option.ul_fslen = BITS_BY_SLOT - 1;	
	rx_data_frame_option.ul_fslen_ext = 0;
	rx_data_frame_option.ul_fsos = SSC_TFMR_FSOS_NONE;
	rx_data_frame_option.ul_fsedge = SSC_TFMR_FSEDGE_POSITIVE;
	/* Configure the SSC transmitter to I2S mode. */
	ssc_set_receiver(SSC, &rx_clk_option, &rx_data_frame_option);
  400604:	aa15      	add	r2, sp, #84	; 0x54
  400606:	a907      	add	r1, sp, #28
  400608:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
  40060c:	4b14      	ldr	r3, [pc, #80]	; (400660 <configure_ssc+0xb4>)
	rx_clk_option.ul_cki = SSC_RCMR_CKI;
  40060e:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
	rx_clk_option.ul_period = BITS_BY_SLOT;	
  400612:	f8cd e02c 	str.w	lr, [sp, #44]	; 0x2c
	rx_clk_option.ul_start_sel = SSC_RCMR_START_RF_EDGE;
  400616:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
	rx_clk_option.ul_cks = SSC_RCMR_CKS_TK;
  40061a:	9607      	str	r6, [sp, #28]
	rx_clk_option.ul_cko = SSC_RCMR_CKO_NONE;
  40061c:	9408      	str	r4, [sp, #32]
	rx_clk_option.ul_ckg = SSC_RCMR_CKG_CONTINUOUS;
  40061e:	940a      	str	r4, [sp, #40]	; 0x28
	rx_clk_option.ul_sttdly = 1;	
  400620:	960c      	str	r6, [sp, #48]	; 0x30
	rx_data_frame_option.ul_datlen = BITS_BY_SLOT - 1;
  400622:	9515      	str	r5, [sp, #84]	; 0x54
	rx_data_frame_option.ul_msbf = SSC_RFMR_MSBF;
  400624:	9716      	str	r7, [sp, #88]	; 0x58
	rx_data_frame_option.ul_datnb = 0;
  400626:	9417      	str	r4, [sp, #92]	; 0x5c
	rx_data_frame_option.ul_fslen = BITS_BY_SLOT - 1;	
  400628:	9518      	str	r5, [sp, #96]	; 0x60
	rx_data_frame_option.ul_fslen_ext = 0;
  40062a:	9419      	str	r4, [sp, #100]	; 0x64
	rx_data_frame_option.ul_fsos = SSC_TFMR_FSOS_NONE;
  40062c:	941a      	str	r4, [sp, #104]	; 0x68
	rx_data_frame_option.ul_fsedge = SSC_TFMR_FSEDGE_POSITIVE;
  40062e:	941b      	str	r4, [sp, #108]	; 0x6c
	ssc_set_receiver(SSC, &rx_clk_option, &rx_data_frame_option);
  400630:	4798      	blx	r3

	/* Disable transmitter first */
	ssc_disable_tx(SSC);
  400632:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
  400636:	4b0b      	ldr	r3, [pc, #44]	; (400664 <configure_ssc+0xb8>)
  400638:	4798      	blx	r3
	ssc_disable_rx(SSC);
  40063a:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
  40063e:	4b0a      	ldr	r3, [pc, #40]	; (400668 <configure_ssc+0xbc>)
  400640:	4798      	blx	r3

	/* Disable All Interrupt */
	ssc_disable_interrupt(SSC, 0xFFFFFFFF);
  400642:	f04f 31ff 	mov.w	r1, #4294967295
  400646:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
  40064a:	4b08      	ldr	r3, [pc, #32]	; (40066c <configure_ssc+0xc0>)
  40064c:	4798      	blx	r3
}
  40064e:	b01c      	add	sp, #112	; 0x70
  400650:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400654:	004041b5 	.word	0x004041b5
  400658:	00403549 	.word	0x00403549
  40065c:	004035f1 	.word	0x004035f1
  400660:	0040357d 	.word	0x0040357d
  400664:	00403575 	.word	0x00403575
  400668:	00403565 	.word	0x00403565
  40066c:	00403665 	.word	0x00403665

00400670 <configure_codec>:


void configure_codec(void)
{
  400670:	b570      	push	{r4, r5, r6, lr}
	uint16_t data = 0;
	/* check that WM8904 is present */
	wm8904_write_register(WM8904_SW_RESET_AND_ID, 0xFFFF);
  400672:	f64f 71ff 	movw	r1, #65535	; 0xffff
  400676:	2000      	movs	r0, #0
  400678:	4c40      	ldr	r4, [pc, #256]	; (40077c <configure_codec+0x10c>)
  40067a:	47a0      	blx	r4
	data = wm8904_read_register(WM8904_SW_RESET_AND_ID);
  40067c:	4b40      	ldr	r3, [pc, #256]	; (400780 <configure_codec+0x110>)
  40067e:	2000      	movs	r0, #0
  400680:	4798      	blx	r3
	if(data != 0x8904) {
  400682:	f648 1304 	movw	r3, #35076	; 0x8904
  400686:	4298      	cmp	r0, r3
  400688:	d003      	beq.n	400692 <configure_codec+0x22>
		printf("WM8904 not found!\n\r");
  40068a:	483e      	ldr	r0, [pc, #248]	; (400784 <configure_codec+0x114>)
  40068c:	4b3e      	ldr	r3, [pc, #248]	; (400788 <configure_codec+0x118>)
  40068e:	4798      	blx	r3
  400690:	e7fe      	b.n	400690 <configure_codec+0x20>
		while(1);
	}

	wm8904_write_register(WM8904_BIAS_CONTROL_0, WM8904_ISEL_HP_BIAS);	
  400692:	2108      	movs	r1, #8
  400694:	2004      	movs	r0, #4
  400696:	47a0      	blx	r4
	wm8904_write_register(WM8904_VMID_CONTROL_0, WM8904_VMID_BUF_ENA |	
  400698:	2147      	movs	r1, #71	; 0x47
  40069a:	2005      	movs	r0, #5
	WM8904_VMID_RES_FAST | WM8904_VMID_ENA);
	delay_ms(5);
  40069c:	4d3b      	ldr	r5, [pc, #236]	; (40078c <configure_codec+0x11c>)
	wm8904_write_register(WM8904_VMID_CONTROL_0, WM8904_VMID_BUF_ENA |	
  40069e:	47a0      	blx	r4
	delay_ms(5);
  4006a0:	483b      	ldr	r0, [pc, #236]	; (400790 <configure_codec+0x120>)
  4006a2:	47a8      	blx	r5
	wm8904_write_register(WM8904_VMID_CONTROL_0, WM8904_VMID_BUF_ENA |
  4006a4:	2143      	movs	r1, #67	; 0x43
  4006a6:	2005      	movs	r0, #5
  4006a8:	47a0      	blx	r4
	WM8904_VMID_RES_NORMAL | WM8904_VMID_ENA);
	wm8904_write_register(WM8904_BIAS_CONTROL_0, WM8904_ISEL_HP_BIAS | WM8904_BIAS_ENA);
  4006aa:	2109      	movs	r1, #9
  4006ac:	2004      	movs	r0, #4
  4006ae:	47a0      	blx	r4
	wm8904_write_register(WM8904_POWER_MANAGEMENT_0, WM8904_INL_ENA | WM8904_INR_ENA);
  4006b0:	2103      	movs	r1, #3
  4006b2:	200c      	movs	r0, #12
  4006b4:	47a0      	blx	r4
	wm8904_write_register(WM8904_POWER_MANAGEMENT_2, WM8904_HPL_PGA_ENA | WM8904_HPR_PGA_ENA);
  4006b6:	2103      	movs	r1, #3
  4006b8:	200e      	movs	r0, #14
  4006ba:	47a0      	blx	r4
	wm8904_write_register(WM8904_DAC_DIGITAL_1, WM8904_DEEMPH(0));
  4006bc:	2100      	movs	r1, #0
  4006be:	2021      	movs	r0, #33	; 0x21
  4006c0:	47a0      	blx	r4
	wm8904_write_register(WM8904_ANALOGUE_OUT12_ZC, 0x0000);
  4006c2:	2100      	movs	r1, #0
  4006c4:	203d      	movs	r0, #61	; 0x3d
  4006c6:	47a0      	blx	r4
	wm8904_write_register(WM8904_CHARGE_PUMP_0, WM8904_CP_ENA);
  4006c8:	2101      	movs	r1, #1
  4006ca:	2062      	movs	r0, #98	; 0x62
  4006cc:	47a0      	blx	r4
	wm8904_write_register(WM8904_CLASS_W_0, WM8904_CP_DYN_PWR);
  4006ce:	2101      	movs	r1, #1
  4006d0:	2068      	movs	r0, #104	; 0x68
  4006d2:	47a0      	blx	r4
	wm8904_write_register(WM8904_FLL_CONTROL_1, 0x0000);
  4006d4:	2100      	movs	r1, #0
  4006d6:	2074      	movs	r0, #116	; 0x74
  4006d8:	47a0      	blx	r4
	wm8904_write_register(WM8904_FLL_CONTROL_2, WM8904_FLL_OUTDIV(7)| WM8904_FLL_FRATIO(4));
  4006da:	f240 7104 	movw	r1, #1796	; 0x704
  4006de:	2075      	movs	r0, #117	; 0x75
  4006e0:	47a0      	blx	r4
	wm8904_write_register(WM8904_FLL_CONTROL_3, WM8904_FLL_K(0x8000));
  4006e2:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  4006e6:	2076      	movs	r0, #118	; 0x76
  4006e8:	47a0      	blx	r4
	wm8904_write_register(WM8904_FLL_CONTROL_4, WM8904_FLL_N(0xBB));
  4006ea:	f44f 51bb 	mov.w	r1, #5984	; 0x1760
  4006ee:	2077      	movs	r0, #119	; 0x77
  4006f0:	47a0      	blx	r4
	wm8904_write_register(WM8904_FLL_CONTROL_1, WM8904_FLL_FRACN_ENA | WM8904_FLL_ENA);
  4006f2:	2105      	movs	r1, #5
  4006f4:	2074      	movs	r0, #116	; 0x74
  4006f6:	47a0      	blx	r4
	delay_ms(5);
  4006f8:	4825      	ldr	r0, [pc, #148]	; (400790 <configure_codec+0x120>)
  4006fa:	47a8      	blx	r5
	wm8904_write_register(WM8904_CLOCK_RATES_1, WM8904_CLK_SYS_RATE(3) | WM8904_SAMPLE_RATE(SAMPLE_RATE));
  4006fc:	f640 4105 	movw	r1, #3077	; 0xc05
  400700:	2015      	movs	r0, #21
  400702:	47a0      	blx	r4
	wm8904_write_register(WM8904_CLOCK_RATES_0, 0x0000);
  400704:	2100      	movs	r1, #0
  400706:	2014      	movs	r0, #20
  400708:	47a0      	blx	r4
	wm8904_write_register(WM8904_CLOCK_RATES_2,
  40070a:	f244 0106 	movw	r1, #16390	; 0x4006
  40070e:	2016      	movs	r0, #22
  400710:	47a0      	blx	r4
	WM8904_SYSCLK_SRC | WM8904_CLK_SYS_ENA | WM8904_CLK_DSP_ENA);
	wm8904_write_register(WM8904_AUDIO_INTERFACE_1, WM8904_BCLK_DIR | WM8904_AIF_FMT_I2S); 
  400712:	2142      	movs	r1, #66	; 0x42
  400714:	2019      	movs	r0, #25
  400716:	47a0      	blx	r4
	wm8904_write_register(WM8904_AUDIO_INTERFACE_2, WM8904_BCLK_DIV(8));
  400718:	2108      	movs	r1, #8
  40071a:	201a      	movs	r0, #26
  40071c:	47a0      	blx	r4
	wm8904_write_register(WM8904_AUDIO_INTERFACE_3, WM8904_LRCLK_DIR | WM8904_LRCLK_RATE(0x20));
  40071e:	f44f 6102 	mov.w	r1, #2080	; 0x820
  400722:	201b      	movs	r0, #27
  400724:	47a0      	blx	r4
	wm8904_write_register(WM8904_POWER_MANAGEMENT_6,
  400726:	210f      	movs	r1, #15
  400728:	2012      	movs	r0, #18
  40072a:	47a0      	blx	r4
	WM8904_DACL_ENA | WM8904_DACR_ENA |
	WM8904_ADCL_ENA | WM8904_ADCR_ENA);
	delay_ms(5);
  40072c:	4818      	ldr	r0, [pc, #96]	; (400790 <configure_codec+0x120>)
  40072e:	47a8      	blx	r5
	wm8904_write_register(WM8904_ANALOGUE_LEFT_INPUT_0, WM8904_LIN_VOL(0x10));
  400730:	2110      	movs	r1, #16
  400732:	202c      	movs	r0, #44	; 0x2c
  400734:	47a0      	blx	r4
	wm8904_write_register(WM8904_ANALOGUE_RIGHT_INPUT_0, WM8904_RIN_VOL(0x10));
  400736:	2110      	movs	r1, #16
  400738:	202d      	movs	r0, #45	; 0x2d
  40073a:	47a0      	blx	r4
	wm8904_write_register(WM8904_ANALOGUE_HP_0,
  40073c:	2111      	movs	r1, #17
  40073e:	205a      	movs	r0, #90	; 0x5a
  400740:	47a0      	blx	r4
	WM8904_HPL_ENA | WM8904_HPR_ENA);
	wm8904_write_register(WM8904_ANALOGUE_HP_0,
  400742:	2133      	movs	r1, #51	; 0x33
  400744:	205a      	movs	r0, #90	; 0x5a
  400746:	47a0      	blx	r4
	WM8904_HPL_ENA_DLY | WM8904_HPL_ENA |
	WM8904_HPR_ENA_DLY | WM8904_HPR_ENA);
	wm8904_write_register(WM8904_DC_SERVO_0,
  400748:	210f      	movs	r1, #15
  40074a:	2043      	movs	r0, #67	; 0x43
  40074c:	47a0      	blx	r4
	WM8904_DCS_ENA_CHAN_3 | WM8904_DCS_ENA_CHAN_2 |
	WM8904_DCS_ENA_CHAN_1 | WM8904_DCS_ENA_CHAN_0);
	wm8904_write_register(WM8904_DC_SERVO_1,
  40074e:	21f0      	movs	r1, #240	; 0xf0
  400750:	2044      	movs	r0, #68	; 0x44
  400752:	47a0      	blx	r4
	WM8904_DCS_TRIG_STARTUP_3 | WM8904_DCS_TRIG_STARTUP_2 |
	WM8904_DCS_TRIG_STARTUP_1 | WM8904_DCS_TRIG_STARTUP_0);
	delay_ms(100);
  400754:	480f      	ldr	r0, [pc, #60]	; (400794 <configure_codec+0x124>)
  400756:	47a8      	blx	r5
	wm8904_write_register(WM8904_ANALOGUE_HP_0,
  400758:	2177      	movs	r1, #119	; 0x77
  40075a:	205a      	movs	r0, #90	; 0x5a
  40075c:	47a0      	blx	r4
	WM8904_HPL_ENA_OUTP | WM8904_HPL_ENA_DLY | WM8904_HPL_ENA |
	WM8904_HPR_ENA_OUTP | WM8904_HPR_ENA_DLY | WM8904_HPR_ENA);
	wm8904_write_register(WM8904_ANALOGUE_HP_0,
  40075e:	21ff      	movs	r1, #255	; 0xff
  400760:	205a      	movs	r0, #90	; 0x5a
  400762:	47a0      	blx	r4
	WM8904_HPL_RMV_SHORT | WM8904_HPL_ENA_OUTP | WM8904_HPL_ENA_DLY | WM8904_HPL_ENA |
	WM8904_HPR_RMV_SHORT | WM8904_HPR_ENA_OUTP | WM8904_HPR_ENA_DLY | WM8904_HPR_ENA);
	wm8904_write_register(WM8904_ANALOGUE_OUT1_LEFT, WM8904_HPOUT_VU | WM8904_HPOUTL_VOL(0x3A));
  400764:	21ba      	movs	r1, #186	; 0xba
  400766:	2039      	movs	r0, #57	; 0x39
  400768:	47a0      	blx	r4
	wm8904_write_register(WM8904_ANALOGUE_OUT1_RIGHT, WM8904_HPOUT_VU | WM8904_HPOUTR_VOL(0x3A));
  40076a:	203a      	movs	r0, #58	; 0x3a
  40076c:	21ba      	movs	r1, #186	; 0xba
  40076e:	47a0      	blx	r4
	delay_ms(100);
  400770:	462b      	mov	r3, r5
  400772:	4808      	ldr	r0, [pc, #32]	; (400794 <configure_codec+0x124>)
}
  400774:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	delay_ms(100);
  400778:	4718      	bx	r3
  40077a:	bf00      	nop
  40077c:	004033d5 	.word	0x004033d5
  400780:	00403411 	.word	0x00403411
  400784:	0041243c 	.word	0x0041243c
  400788:	00406ae9 	.word	0x00406ae9
  40078c:	20400001 	.word	0x20400001
  400790:	0003dbc2 	.word	0x0003dbc2
  400794:	004d2b25 	.word	0x004d2b25

00400798 <get_midi_note>:
static const float32_t lp_filter[] = {0.0027, 0.0103, 0.0258, 0.0499, 0.0801, 0.1105, 0.1332, 0.1416, 0.1332, 0.1105, 0.0801, 0.0499, 0.0258, 0.0103, 0.0027};
static uint32_t lp_filter_length = 15;
static float32_t y[YIN_BUF_SIZE]; // buffer for processed input
/**************************** Public Functions Start *********************************/
void get_midi_note(float32_t *buffer, midi_note_t *note, aubio_pitchyinfast_t *yin)
{		
  400798:	b5f0      	push	{r4, r5, r6, r7, lr}
	
	// LP-filtering
	uint32_t j,i;
	
	fvec_t processed_input;
	processed_input.data = (smpl_t *)y;
  40079a:	4d81      	ldr	r5, [pc, #516]	; (4009a0 <get_midi_note+0x208>)
	processed_input.length = YIN_BUF_SIZE;
  40079c:	f44f 6600 	mov.w	r6, #2048	; 0x800
{		
  4007a0:	460c      	mov	r4, r1
  4007a2:	f100 073c 	add.w	r7, r0, #60	; 0x3c
	processed_input.length = YIN_BUF_SIZE;
  4007a6:	4603      	mov	r3, r0
  4007a8:	4629      	mov	r1, r5
{		
  4007aa:	ed2d 8b02 	vpush	{d8}
  4007ae:	b085      	sub	sp, #20
	processed_input.data = (smpl_t *)y;
  4007b0:	9503      	str	r5, [sp, #12]
	processed_input.length = YIN_BUF_SIZE;
  4007b2:	9602      	str	r6, [sp, #8]
  4007b4:	e000      	b.n	4007b8 <get_midi_note+0x20>
  4007b6:	9903      	ldr	r1, [sp, #12]
	for (j = 0; j < lp_filter_length; j++)
	processed_input.data[j] = input.data[j];
  4007b8:	1a1e      	subs	r6, r3, r0
  4007ba:	f853 5b04 	ldr.w	r5, [r3], #4
  4007be:	4431      	add	r1, r6
	for (j = 0; j < lp_filter_length; j++)
  4007c0:	429f      	cmp	r7, r3
	processed_input.data[j] = input.data[j];
  4007c2:	600d      	str	r5, [r1, #0]
	for (j = 0; j < lp_filter_length; j++)
  4007c4:	d1f7      	bne.n	4007b6 <get_midi_note+0x1e>
  4007c6:	263c      	movs	r6, #60	; 0x3c
  4007c8:	4f76      	ldr	r7, [pc, #472]	; (4009a4 <get_midi_note+0x20c>)
	for(j = lp_filter_length; j < input.length; j++)
	{
		processed_input.data[j] = 0;
  4007ca:	f04f 0c00 	mov.w	ip, #0
  4007ce:	ed9f 6a76 	vldr	s12, [pc, #472]	; 4009a8 <get_midi_note+0x210>
  4007d2:	9b03      	ldr	r3, [sp, #12]
  4007d4:	f106 0e04 	add.w	lr, r6, #4
  4007d8:	4974      	ldr	r1, [pc, #464]	; (4009ac <get_midi_note+0x214>)
  4007da:	eeb0 7a46 	vmov.f32	s14, s12
  4007de:	4433      	add	r3, r6
  4007e0:	eb00 050e 	add.w	r5, r0, lr
  4007e4:	f8c3 c000 	str.w	ip, [r3]
  4007e8:	e001      	b.n	4007ee <get_midi_note+0x56>
  4007ea:	ecb1 7a01 	vldmia	r1!, {s14}
		for(i = 0; i < lp_filter_length; i++)
		{
			processed_input.data[j] += input.data[j-i]*lp_filter[i];
  4007ee:	9b03      	ldr	r3, [sp, #12]
		for(i = 0; i < lp_filter_length; i++)
  4007f0:	428f      	cmp	r7, r1
			processed_input.data[j] += input.data[j-i]*lp_filter[i];
  4007f2:	ed75 6a01 	vldmdb	r5!, {s13}
  4007f6:	4433      	add	r3, r6
  4007f8:	edd3 7a00 	vldr	s15, [r3]
  4007fc:	eee6 7a87 	vfma.f32	s15, s13, s14
  400800:	edc3 7a00 	vstr	s15, [r3]
		for(i = 0; i < lp_filter_length; i++)
  400804:	d1f1      	bne.n	4007ea <get_midi_note+0x52>
	for(j = lp_filter_length; j < input.length; j++)
  400806:	f5be 5f00 	cmp.w	lr, #8192	; 0x2000
  40080a:	4676      	mov	r6, lr
  40080c:	d1e1      	bne.n	4007d2 <get_midi_note+0x3a>
		}
	}
	
	// apply hanning window
	for (i = 0; i < processed_input.length; i++)
  40080e:	9b02      	ldr	r3, [sp, #8]
  400810:	b19b      	cbz	r3, 40083a <get_midi_note+0xa2>
  400812:	4867      	ldr	r0, [pc, #412]	; (4009b0 <get_midi_note+0x218>)
  400814:	2100      	movs	r1, #0
  400816:	ed9f 7a67 	vldr	s14, [pc, #412]	; 4009b4 <get_midi_note+0x21c>
  40081a:	e001      	b.n	400820 <get_midi_note+0x88>
  40081c:	ecb0 7a01 	vldmia	r0!, {s14}
	processed_input.data[i] *= hanning[i];
  400820:	9b03      	ldr	r3, [sp, #12]
  400822:	eb03 0381 	add.w	r3, r3, r1, lsl #2
	for (i = 0; i < processed_input.length; i++)
  400826:	3101      	adds	r1, #1
	processed_input.data[i] *= hanning[i];
  400828:	edd3 7a00 	vldr	s15, [r3]
  40082c:	ee67 7a87 	vmul.f32	s15, s15, s14
  400830:	edc3 7a00 	vstr	s15, [r3]
	for (i = 0; i < processed_input.length; i++)
  400834:	9b02      	ldr	r3, [sp, #8]
  400836:	428b      	cmp	r3, r1
  400838:	d8f0      	bhi.n	40081c <get_midi_note+0x84>
	
	uint32_t power = get_average_power(processed_input.data);
  40083a:	9903      	ldr	r1, [sp, #12]
	uint32_t power = 0;
  40083c:	2000      	movs	r0, #0
  40083e:	f501 5500 	add.w	r5, r1, #8192	; 0x2000
		power += (abs(buffer[i]))^2;
  400842:	ecf1 7a01 	vldmia	r1!, {s15}
  400846:	eefd 7ae7 	vcvt.s32.f32	s15, s15
  40084a:	ee17 3a90 	vmov	r3, s15
  40084e:	2b00      	cmp	r3, #0
  400850:	bfb8      	it	lt
  400852:	425b      	neglt	r3, r3
	for ( i = 0; i < (WIN_SIZE); i++)
  400854:	428d      	cmp	r5, r1
		power += (abs(buffer[i]))^2;
  400856:	f083 0302 	eor.w	r3, r3, #2
  40085a:	4418      	add	r0, r3
	for ( i = 0; i < (WIN_SIZE); i++)
  40085c:	d1f1      	bne.n	400842 <get_midi_note+0xaa>
	if (power > max_power)
  40085e:	4956      	ldr	r1, [pc, #344]	; (4009b8 <get_midi_note+0x220>)
	return (power/(WIN_SIZE));
  400860:	0ac5      	lsrs	r5, r0, #11
	if (power > max_power)
  400862:	680b      	ldr	r3, [r1, #0]
  400864:	42ab      	cmp	r3, r5
  400866:	d201      	bcs.n	40086c <get_midi_note+0xd4>
	{
		max_power = power;
  400868:	462b      	mov	r3, r5
  40086a:	600d      	str	r5, [r1, #0]
	}
	
	if (power < 0.001f*max_power)
  40086c:	ee07 3a90 	vmov	s15, r3
  400870:	ed9f 7a52 	vldr	s14, [pc, #328]	; 4009bc <get_midi_note+0x224>
  400874:	eef8 7a67 	vcvt.f32.u32	s15, s15
  400878:	ee67 7a87 	vmul.f32	s15, s15, s14
  40087c:	ee07 5a10 	vmov	s14, r5
  400880:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
  400884:	eeb4 7ae7 	vcmpe.f32	s14, s15
  400888:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  40088c:	d507      	bpl.n	40089e <get_midi_note+0x106>
	{
		note->note_number = NO_NOTE;
  40088e:	f64f 73ff 	movw	r3, #65535	; 0xffff
  400892:	8023      	strh	r3, [r4, #0]
		note->velocity = NO_NOTE;
  400894:	8063      	strh	r3, [r4, #2]
		note->velocity = NO_NOTE;
		return;
	}
	note->note_number = get_midi_number(freq);
	note->velocity = power;
}
  400896:	b005      	add	sp, #20
  400898:	ecbd 8b02 	vpop	{d8}
  40089c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	float32_t freq = aubio_pitchyinfast_do(yin, &processed_input); 
  40089e:	a902      	add	r1, sp, #8
  4008a0:	4610      	mov	r0, r2
  4008a2:	4b47      	ldr	r3, [pc, #284]	; (4009c0 <get_midi_note+0x228>)
  4008a4:	9201      	str	r2, [sp, #4]
  4008a6:	4798      	blx	r3
	if (freq < 39.0f || freq > 4000.0f || aubio_pitchyinfast_get_confidence(yin) < 0.8)
  4008a8:	eddf 7a46 	vldr	s15, [pc, #280]	; 4009c4 <get_midi_note+0x22c>
	float32_t freq = aubio_pitchyinfast_do(yin, &processed_input); 
  4008ac:	ee08 0a10 	vmov	s16, r0
	if (freq < 39.0f || freq > 4000.0f || aubio_pitchyinfast_get_confidence(yin) < 0.8)
  4008b0:	eeb4 8ae7 	vcmpe.f32	s16, s15
  4008b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4008b8:	d4e9      	bmi.n	40088e <get_midi_note+0xf6>
  4008ba:	eddf 7a43 	vldr	s15, [pc, #268]	; 4009c8 <get_midi_note+0x230>
  4008be:	eeb4 8a67 	vcmp.f32	s16, s15
  4008c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4008c6:	dce2      	bgt.n	40088e <get_midi_note+0xf6>
  4008c8:	9a01      	ldr	r2, [sp, #4]
  4008ca:	4b40      	ldr	r3, [pc, #256]	; (4009cc <get_midi_note+0x234>)
  4008cc:	4610      	mov	r0, r2
  4008ce:	4e40      	ldr	r6, [pc, #256]	; (4009d0 <get_midi_note+0x238>)
  4008d0:	4798      	blx	r3
  4008d2:	4b40      	ldr	r3, [pc, #256]	; (4009d4 <get_midi_note+0x23c>)
  4008d4:	4798      	blx	r3
  4008d6:	a330      	add	r3, pc, #192	; (adr r3, 400998 <get_midi_note+0x200>)
  4008d8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4008dc:	47b0      	blx	r6
  4008de:	2800      	cmp	r0, #0
  4008e0:	d1d5      	bne.n	40088e <get_midi_note+0xf6>
  4008e2:	ed9f 7a3d 	vldr	s14, [pc, #244]	; 4009d8 <get_midi_note+0x240>
  4008e6:	267f      	movs	r6, #127	; 0x7f
  4008e8:	eddf 7a3c 	vldr	s15, [pc, #240]	; 4009dc <get_midi_note+0x244>
  4008ec:	f04f 0e0c 	mov.w	lr, #12
		d1 = abs(midi_note_frequencies[mid] - frequency); 
  4008f0:	4f3b      	ldr	r7, [pc, #236]	; (4009e0 <get_midi_note+0x248>)
		d2 = abs(midi_note_frequencies[mid+1] - frequency);
  4008f2:	ee37 7a48 	vsub.f32	s14, s14, s16
		mid = (hi + lo) >> 1; 
  4008f6:	eb06 030e 	add.w	r3, r6, lr
		d1 = abs(midi_note_frequencies[mid] - frequency); 
  4008fa:	ee77 7ac8 	vsub.f32	s15, s15, s16
		mid = (hi + lo) >> 1; 
  4008fe:	085b      	lsrs	r3, r3, #1
		d2 = abs(midi_note_frequencies[mid+1] - frequency);
  400900:	eebd 7ac7 	vcvt.s32.f32	s14, s14
		d1 = abs(midi_note_frequencies[mid] - frequency); 
  400904:	eefd 7ae7 	vcvt.s32.f32	s15, s15
		d2 = abs(midi_note_frequencies[mid+1] - frequency);
  400908:	1c58      	adds	r0, r3, #1
  40090a:	ee17 1a10 	vmov	r1, s14
		d1 = abs(midi_note_frequencies[mid] - frequency); 
  40090e:	ee17 2a90 	vmov	r2, s15
		d2 = abs(midi_note_frequencies[mid+1] - frequency);
  400912:	2900      	cmp	r1, #0
  400914:	bfb8      	it	lt
  400916:	4249      	neglt	r1, r1
		d1 = abs(midi_note_frequencies[mid] - frequency); 
  400918:	2a00      	cmp	r2, #0
  40091a:	bfb8      	it	lt
  40091c:	4252      	neglt	r2, r2
        if (d2 <= d1)
  40091e:	4291      	cmp	r1, r2
  400920:	d91f      	bls.n	400962 <get_midi_note+0x1ca>
  400922:	e026      	b.n	400972 <get_midi_note+0x1da>
		d1 = abs(midi_note_frequencies[mid] - frequency); 
  400924:	eb07 0283 	add.w	r2, r7, r3, lsl #2
		d2 = abs(midi_note_frequencies[mid+1] - frequency);
  400928:	f103 0e01 	add.w	lr, r3, #1
		d1 = abs(midi_note_frequencies[mid] - frequency); 
  40092c:	ed92 7a00 	vldr	s14, [r2]
		d2 = abs(midi_note_frequencies[mid+1] - frequency);
  400930:	eb07 018e 	add.w	r1, r7, lr, lsl #2
		d1 = abs(midi_note_frequencies[mid] - frequency); 
  400934:	ee37 7a48 	vsub.f32	s14, s14, s16
		d2 = abs(midi_note_frequencies[mid+1] - frequency);
  400938:	edd1 7a00 	vldr	s15, [r1]
  40093c:	ee77 7ac8 	vsub.f32	s15, s15, s16
		d1 = abs(midi_note_frequencies[mid] - frequency); 
  400940:	eebd 7ac7 	vcvt.s32.f32	s14, s14
		d2 = abs(midi_note_frequencies[mid+1] - frequency);
  400944:	eefd 7ae7 	vcvt.s32.f32	s15, s15
		d1 = abs(midi_note_frequencies[mid] - frequency); 
  400948:	ee17 1a10 	vmov	r1, s14
		d2 = abs(midi_note_frequencies[mid+1] - frequency);
  40094c:	ee17 2a90 	vmov	r2, s15
		d1 = abs(midi_note_frequencies[mid] - frequency); 
  400950:	2900      	cmp	r1, #0
  400952:	bfb8      	it	lt
  400954:	4249      	neglt	r1, r1
		d2 = abs(midi_note_frequencies[mid+1] - frequency);
  400956:	2a00      	cmp	r2, #0
  400958:	bfb8      	it	lt
  40095a:	4252      	neglt	r2, r2
        if (d2 <= d1)
  40095c:	4291      	cmp	r1, r2
  40095e:	d309      	bcc.n	400974 <get_midi_note+0x1dc>
		d2 = abs(midi_note_frequencies[mid+1] - frequency);
  400960:	4670      	mov	r0, lr
		mid = (hi + lo) >> 1; 
  400962:	1833      	adds	r3, r6, r0
	while (lo < hi)
  400964:	4286      	cmp	r6, r0
		mid = (hi + lo) >> 1; 
  400966:	ea4f 0353 	mov.w	r3, r3, lsr #1
	while (lo < hi)
  40096a:	d8db      	bhi.n	400924 <get_midi_note+0x18c>
	note->note_number = get_midi_number(freq);
  40096c:	8026      	strh	r6, [r4, #0]
	note->velocity = power;
  40096e:	8065      	strh	r5, [r4, #2]
  400970:	e791      	b.n	400896 <get_midi_note+0xfe>
        if (d2 <= d1)
  400972:	4670      	mov	r0, lr
	while (lo < hi)
  400974:	4298      	cmp	r0, r3
  400976:	d20a      	bcs.n	40098e <get_midi_note+0x1f6>
  400978:	18c2      	adds	r2, r0, r3
  40097a:	461e      	mov	r6, r3
  40097c:	4686      	mov	lr, r0
  40097e:	0853      	lsrs	r3, r2, #1
  400980:	eb07 0283 	add.w	r2, r7, r3, lsl #2
  400984:	edd2 7a00 	vldr	s15, [r2]
  400988:	ed92 7a01 	vldr	s14, [r2, #4]
  40098c:	e7b1      	b.n	4008f2 <get_midi_note+0x15a>
  40098e:	461e      	mov	r6, r3
  400990:	e7ec      	b.n	40096c <get_midi_note+0x1d4>
  400992:	bf00      	nop
  400994:	f3af 8000 	nop.w
  400998:	9999999a 	.word	0x9999999a
  40099c:	3fe99999 	.word	0x3fe99999
  4009a0:	20400a68 	.word	0x20400a68
  4009a4:	0041448c 	.word	0x0041448c
  4009a8:	3b30f27c 	.word	0x3b30f27c
  4009ac:	00414454 	.word	0x00414454
  4009b0:	00412454 	.word	0x00412454
  4009b4:	361dc26b 	.word	0x361dc26b
  4009b8:	20400a64 	.word	0x20400a64
  4009bc:	3a83126f 	.word	0x3a83126f
  4009c0:	00402f49 	.word	0x00402f49
  4009c4:	421c0000 	.word	0x421c0000
  4009c8:	457a0000 	.word	0x457a0000
  4009cc:	00403329 	.word	0x00403329
  4009d0:	004062f5 	.word	0x004062f5
  4009d4:	00405d69 	.word	0x00405d69
  4009d8:	43e914fe 	.word	0x43e914fe
  4009dc:	43dc0000 	.word	0x43dc0000
  4009e0:	0041448c 	.word	0x0041448c
  4009e4:	00000000 	.word	0x00000000

004009e8 <write_midi_file>:
    }
    write_out(bytes[3]);
}

void write_midi_file(uint32_t bpm, midi_instrument_t playback_instrument, time_signature_t *time_signature , key_signature_t *key_signature, char *title, midi_event_t *events, uint32_t number_of_events)
{
  4009e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4009ec:	b09d      	sub	sp, #116	; 0x74
    out[outIdx++] = val;
  4009ee:	4f9c      	ldr	r7, [pc, #624]	; (400c60 <write_midi_file+0x278>)
    char ch;
    uint32_t i;
    uint32_t longdata;
    char endoftrack[4] = {0, 0xff, 0x2f, 0x00};
  4009f0:	2400      	movs	r4, #0
    out[outIdx++] = val;
  4009f2:	f04f 0864 	mov.w	r8, #100	; 0x64
{
  4009f6:	9115      	str	r1, [sp, #84]	; 0x54
    out[outIdx++] = val;
  4009f8:	2102      	movs	r1, #2
  4009fa:	f04f 0c06 	mov.w	ip, #6
  4009fe:	2501      	movs	r5, #1
  400a00:	72f9      	strb	r1, [r7, #11]
  400a02:	2154      	movs	r1, #84	; 0x54
{
  400a04:	f8dd e098 	ldr.w	lr, [sp, #152]	; 0x98
    out[outIdx++] = val;
  400a08:	f04f 0968 	mov.w	r9, #104	; 0x68
{
  400a0c:	9316      	str	r3, [sp, #88]	; 0x58
    ch = 'T'; write_out(ch);
    ch = 'r'; write_out(ch);
    ch = 'k'; write_out(ch);
    
    // size of track
    uint32_t size_of_title = 0;
  400a0e:	4623      	mov	r3, r4
    char endoftrack[4] = {0, 0xff, 0x2f, 0x00};
  400a10:	f88d 4060 	strb.w	r4, [sp, #96]	; 0x60
  400a14:	f10e 36ff 	add.w	r6, lr, #4294967295
  400a18:	f88d 4063 	strb.w	r4, [sp, #99]	; 0x63
    out[outIdx++] = val;
  400a1c:	713c      	strb	r4, [r7, #4]
  400a1e:	717c      	strb	r4, [r7, #5]
  400a20:	71bc      	strb	r4, [r7, #6]
  400a22:	723c      	strb	r4, [r7, #8]
  400a24:	72bc      	strb	r4, [r7, #10]
  400a26:	733c      	strb	r4, [r7, #12]
  400a28:	2478      	movs	r4, #120	; 0x78
  400a2a:	f887 8003 	strb.w	r8, [r7, #3]
  400a2e:	f04f 0872 	mov.w	r8, #114	; 0x72
  400a32:	7079      	strb	r1, [r7, #1]
  400a34:	73f9      	strb	r1, [r7, #15]
{
  400a36:	9927      	ldr	r1, [sp, #156]	; 0x9c
    out[outIdx++] = val;
  400a38:	f887 c007 	strb.w	ip, [r7, #7]
  400a3c:	f04f 0c6b 	mov.w	ip, #107	; 0x6b
  400a40:	727d      	strb	r5, [r7, #9]
  400a42:	254d      	movs	r5, #77	; 0x4d
  400a44:	737c      	strb	r4, [r7, #13]
    char endoftrack[4] = {0, 0xff, 0x2f, 0x00};
  400a46:	24ff      	movs	r4, #255	; 0xff
    out[outIdx++] = val;
  400a48:	f887 8010 	strb.w	r8, [r7, #16]
    char endoftrack[4] = {0, 0xff, 0x2f, 0x00};
  400a4c:	f04f 082f 	mov.w	r8, #47	; 0x2f
{
  400a50:	9117      	str	r1, [sp, #92]	; 0x5c
  400a52:	9928      	ldr	r1, [sp, #160]	; 0xa0
  400a54:	9201      	str	r2, [sp, #4]
    while(title[size_of_title++]); // size of title
  400a56:	4632      	mov	r2, r6
    out[outIdx++] = val;
  400a58:	f887 9002 	strb.w	r9, [r7, #2]
  400a5c:	f887 c011 	strb.w	ip, [r7, #17]
  400a60:	703d      	strb	r5, [r7, #0]
  400a62:	73bd      	strb	r5, [r7, #14]
    char endoftrack[4] = {0, 0xff, 0x2f, 0x00};
  400a64:	f88d 4061 	strb.w	r4, [sp, #97]	; 0x61
  400a68:	f88d 8062 	strb.w	r8, [sp, #98]	; 0x62
{
  400a6c:	9102      	str	r1, [sp, #8]
    while(title[size_of_title++]); // size of title
  400a6e:	e000      	b.n	400a72 <write_midi_file+0x8a>
  400a70:	460b      	mov	r3, r1
  400a72:	f812 5f01 	ldrb.w	r5, [r2, #1]!
  400a76:	1c59      	adds	r1, r3, #1
  400a78:	2d00      	cmp	r5, #0
  400a7a:	d1f9      	bne.n	400a70 <write_midi_file+0x88>
    longdata = 29 + size_of_title - 1;
  400a7c:	f103 091d 	add.w	r9, r3, #29
    out[outIdx++] = val;
  400a80:	24ff      	movs	r4, #255	; 0xff
  400a82:	2103      	movs	r1, #3
  400a84:	9503      	str	r5, [sp, #12]
    write_out(data.bytes[3]);
  400a86:	f3c9 6c07 	ubfx	ip, r9, #24, #8
    write_out(data.bytes[2]);
  400a8a:	f3c9 4207 	ubfx	r2, r9, #16, #8
    out[outIdx++] = val;
  400a8e:	75fc      	strb	r4, [r7, #23]
  400a90:	f887 c012 	strb.w	ip, [r7, #18]
    write_out(data.bytes[1]);
  400a94:	f3c9 2c07 	ubfx	ip, r9, #8, #8
    out[outIdx++] = val;
  400a98:	74fa      	strb	r2, [r7, #19]
  400a9a:	221a      	movs	r2, #26
  400a9c:	4c71      	ldr	r4, [pc, #452]	; (400c64 <write_midi_file+0x27c>)
  400a9e:	75bd      	strb	r5, [r7, #22]
  400aa0:	767b      	strb	r3, [r7, #25]
  400aa2:	f887 9015 	strb.w	r9, [r7, #21]
  400aa6:	f887 c014 	strb.w	ip, [r7, #20]
  400aaa:	7639      	strb	r1, [r7, #24]
  400aac:	6022      	str	r2, [r4, #0]
    // track name (title)
    write_out(0x00); // tick
    write_out(0xFF);
    write_out(0x03);
    write_out((uint8_t)size_of_title-1);
    for (i = 0; i < size_of_title-1; i++)
  400aae:	2b00      	cmp	r3, #0
  400ab0:	f000 81ed 	beq.w	400e8e <write_midi_file+0x4a6>
  400ab4:	1e59      	subs	r1, r3, #1
  400ab6:	4a6c      	ldr	r2, [pc, #432]	; (400c68 <write_midi_file+0x280>)
  400ab8:	448e      	add	lr, r1
        write_out(title[i]);
  400aba:	f816 1f01 	ldrb.w	r1, [r6, #1]!
    for (i = 0; i < size_of_title-1; i++)
  400abe:	4576      	cmp	r6, lr
    out[outIdx++] = val;
  400ac0:	f802 1f01 	strb.w	r1, [r2, #1]!
    for (i = 0; i < size_of_title-1; i++)
  400ac4:	d1f9      	bne.n	400aba <write_midi_file+0xd2>
  400ac6:	f103 0221 	add.w	r2, r3, #33	; 0x21
  400aca:	f103 0a1a 	add.w	sl, r3, #26
  400ace:	f103 061c 	add.w	r6, r3, #28
  400ad2:	f103 081b 	add.w	r8, r3, #27
  400ad6:	9204      	str	r2, [sp, #16]
  400ad8:	f103 0220 	add.w	r2, r3, #32
  400adc:	f103 0b2f 	add.w	fp, r3, #47	; 0x2f
  400ae0:	9503      	str	r5, [sp, #12]
  400ae2:	9205      	str	r2, [sp, #20]
  400ae4:	f103 021f 	add.w	r2, r3, #31
  400ae8:	9206      	str	r2, [sp, #24]
  400aea:	f103 021e 	add.w	r2, r3, #30
  400aee:	9207      	str	r2, [sp, #28]
  400af0:	f103 022e 	add.w	r2, r3, #46	; 0x2e
  400af4:	9208      	str	r2, [sp, #32]
  400af6:	f103 022d 	add.w	r2, r3, #45	; 0x2d
  400afa:	9209      	str	r2, [sp, #36]	; 0x24
  400afc:	f103 022c 	add.w	r2, r3, #44	; 0x2c
  400b00:	920a      	str	r2, [sp, #40]	; 0x28
  400b02:	f103 022b 	add.w	r2, r3, #43	; 0x2b
  400b06:	920b      	str	r2, [sp, #44]	; 0x2c
  400b08:	f103 022a 	add.w	r2, r3, #42	; 0x2a
  400b0c:	920c      	str	r2, [sp, #48]	; 0x30
  400b0e:	f103 0229 	add.w	r2, r3, #41	; 0x29
  400b12:	920d      	str	r2, [sp, #52]	; 0x34
  400b14:	f103 0228 	add.w	r2, r3, #40	; 0x28
  400b18:	920e      	str	r2, [sp, #56]	; 0x38
  400b1a:	f103 0227 	add.w	r2, r3, #39	; 0x27
  400b1e:	920f      	str	r2, [sp, #60]	; 0x3c
  400b20:	f103 0226 	add.w	r2, r3, #38	; 0x26
  400b24:	9210      	str	r2, [sp, #64]	; 0x40
  400b26:	f103 0225 	add.w	r2, r3, #37	; 0x25
  400b2a:	9211      	str	r2, [sp, #68]	; 0x44
  400b2c:	f103 0224 	add.w	r2, r3, #36	; 0x24
  400b30:	9212      	str	r2, [sp, #72]	; 0x48
  400b32:	f103 0223 	add.w	r2, r3, #35	; 0x23
  400b36:	3322      	adds	r3, #34	; 0x22
  400b38:	9213      	str	r2, [sp, #76]	; 0x4c
  400b3a:	9314      	str	r3, [sp, #80]	; 0x50
    
    // tempo
    int microseconds = (int)(60.0 / bpm * 1000000.0);
  400b3c:	4b4b      	ldr	r3, [pc, #300]	; (400c6c <write_midi_file+0x284>)
  400b3e:	4798      	blx	r3
  400b40:	4d4b      	ldr	r5, [pc, #300]	; (400c70 <write_midi_file+0x288>)
  400b42:	4602      	mov	r2, r0
  400b44:	460b      	mov	r3, r1
  400b46:	a144      	add	r1, pc, #272	; (adr r1, 400c58 <write_midi_file+0x270>)
  400b48:	e9d1 0100 	ldrd	r0, r1, [r1]
  400b4c:	47a8      	blx	r5
  400b4e:	4b49      	ldr	r3, [pc, #292]	; (400c74 <write_midi_file+0x28c>)
  400b50:	4798      	blx	r3
    out[outIdx++] = val;
  400b52:	2100      	movs	r1, #0
  400b54:	22ff      	movs	r2, #255	; 0xff
    write_out(0x00); // tick
    write_out(0xFF);
    write_out(0x51);
    write_out(0x03);
    write_out((microseconds >> 16) & 0xff);
  400b56:	ea4f 4e20 	mov.w	lr, r0, asr #16
  400b5a:	9d07      	ldr	r5, [sp, #28]
    out[outIdx++] = val;
  400b5c:	f04f 0c51 	mov.w	ip, #81	; 0x51
  400b60:	2303      	movs	r3, #3
  400b62:	f807 100a 	strb.w	r1, [r7, sl]
  400b66:	f807 2008 	strb.w	r2, [r7, r8]
    write_out((microseconds >> 8) & 0xff);
  400b6a:	ea4f 2a20 	mov.w	sl, r0, asr #8
    out[outIdx++] = val;
  400b6e:	f807 c006 	strb.w	ip, [r7, r6]
  400b72:	f04f 0c58 	mov.w	ip, #88	; 0x58
  400b76:	f807 3009 	strb.w	r3, [r7, r9]
  400b7a:	2304      	movs	r3, #4
    write_out((microseconds >> 16) & 0xff);
  400b7c:	f807 e005 	strb.w	lr, [r7, r5]
  400b80:	f10d 0661 	add.w	r6, sp, #97	; 0x61
    write_out((microseconds >> 8) & 0xff);
  400b84:	9d06      	ldr	r5, [sp, #24]
    out[outIdx++] = val;
  400b86:	f04f 0e18 	mov.w	lr, #24
    write_out((microseconds >> 8) & 0xff);
  400b8a:	f807 a005 	strb.w	sl, [r7, r5]
    out[outIdx++] = val;
  400b8e:	f04f 0a59 	mov.w	sl, #89	; 0x59
    write_out((microseconds >> 0) & 0xff);
  400b92:	9d05      	ldr	r5, [sp, #20]
  400b94:	5578      	strb	r0, [r7, r5]
    out[outIdx++] = val;
  400b96:	9d04      	ldr	r5, [sp, #16]

    // time signature - base2 should be determined with log2(bottom) 
	uint8_t base2; 
	if (time_signature->bottom == 4)
  400b98:	9801      	ldr	r0, [sp, #4]
  400b9a:	9604      	str	r6, [sp, #16]
  400b9c:	f890 8001 	ldrb.w	r8, [r0, #1]
    out[outIdx++] = val;
  400ba0:	2002      	movs	r0, #2
  400ba2:	5579      	strb	r1, [r7, r5]
  400ba4:	9d14      	ldr	r5, [sp, #80]	; 0x50
		base2 = 2; 
  400ba6:	4598      	cmp	r8, r3
    out[outIdx++] = val;
  400ba8:	557a      	strb	r2, [r7, r5]
		base2 = 2; 
  400baa:	bf08      	it	eq
  400bac:	4680      	moveq	r8, r0
    out[outIdx++] = val;
  400bae:	9d13      	ldr	r5, [sp, #76]	; 0x4c
		base2 = 2; 
  400bb0:	bf18      	it	ne
  400bb2:	f04f 0803 	movne.w	r8, #3
    out[outIdx++] = val;
  400bb6:	f807 c005 	strb.w	ip, [r7, r5]
  400bba:	f10d 0c64 	add.w	ip, sp, #100	; 0x64
  400bbe:	9d12      	ldr	r5, [sp, #72]	; 0x48
  400bc0:	557b      	strb	r3, [r7, r5]
	
    write_out(0x00); // tick
    write_out(0xFF);
    write_out(0x58);
    write_out(0x04);
    write_out(0xff & time_signature->top);
  400bc2:	9b01      	ldr	r3, [sp, #4]
    out[outIdx++] = val;
  400bc4:	9d11      	ldr	r5, [sp, #68]	; 0x44
    write_out(0xff & time_signature->top);
  400bc6:	f893 9000 	ldrb.w	r9, [r3]
  400bca:	eb07 030b 	add.w	r3, r7, fp
    out[outIdx++] = val;
  400bce:	f807 9005 	strb.w	r9, [r7, r5]
  400bd2:	9d10      	ldr	r5, [sp, #64]	; 0x40
  400bd4:	f807 8005 	strb.w	r8, [r7, r5]
  400bd8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  400bda:	f807 e005 	strb.w	lr, [r7, r5]
  400bde:	f04f 0e08 	mov.w	lr, #8
  400be2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
  400be4:	f807 e005 	strb.w	lr, [r7, r5]
  400be8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
  400bea:	5579      	strb	r1, [r7, r5]
  400bec:	990c      	ldr	r1, [sp, #48]	; 0x30
  400bee:	9d03      	ldr	r5, [sp, #12]
  400bf0:	547a      	strb	r2, [r7, r1]
  400bf2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  400bf4:	9916      	ldr	r1, [sp, #88]	; 0x58
  400bf6:	f807 a002 	strb.w	sl, [r7, r2]
  400bfa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  400bfc:	54b8      	strb	r0, [r7, r2]
  400bfe:	9809      	ldr	r0, [sp, #36]	; 0x24
  400c00:	780a      	ldrb	r2, [r1, #0]
  400c02:	543a      	strb	r2, [r7, r0]
    write_out(0x00); // tick
    write_out(0xff);
    write_out(0x59);
    write_out(0x02);
    write_out(0xff & key_signature->key);
    write_out(0xff & key_signature->mode);
  400c04:	784a      	ldrb	r2, [r1, #1]
    out[outIdx++] = val;
  400c06:	9908      	ldr	r1, [sp, #32]
  400c08:	547a      	strb	r2, [r7, r1]
  400c0a:	4632      	mov	r2, r6
  400c0c:	f803 5b01 	strb.w	r5, [r3], #1
    
    // end of header track
    for (i = 0; i < 4; i++)
  400c10:	4562      	cmp	r2, ip
  400c12:	d005      	beq.n	400c20 <write_midi_file+0x238>
  400c14:	f812 5b01 	ldrb.w	r5, [r2], #1
  400c18:	4562      	cmp	r2, ip
    out[outIdx++] = val;
  400c1a:	f803 5b01 	strb.w	r5, [r3], #1
    for (i = 0; i < 4; i++)
  400c1e:	d1f9      	bne.n	400c14 <write_midi_file+0x22c>
    ch = 'T'; write_out(ch);
    ch = 'r'; write_out(ch);
    ch = 'k'; write_out(ch);
    
    // size of track name
    char track_name[] = "Melody";
  400c20:	4915      	ldr	r1, [pc, #84]	; (400c78 <write_midi_file+0x290>)
    out[outIdx++] = val;
  400c22:	eb07 030b 	add.w	r3, r7, fp
  400c26:	9201      	str	r2, [sp, #4]
  400c28:	224d      	movs	r2, #77	; 0x4d
  400c2a:	2654      	movs	r6, #84	; 0x54
  400c2c:	f10d 0567 	add.w	r5, sp, #103	; 0x67
  400c30:	711a      	strb	r2, [r3, #4]
  400c32:	2272      	movs	r2, #114	; 0x72
  400c34:	715e      	strb	r6, [r3, #5]
  400c36:	f10b 0a08 	add.w	sl, fp, #8
  400c3a:	719a      	strb	r2, [r3, #6]
  400c3c:	462a      	mov	r2, r5
    char track_name[] = "Melody";
  400c3e:	c903      	ldmia	r1, {r0, r1}
  400c40:	901a      	str	r0, [sp, #104]	; 0x68
  400c42:	0c08      	lsrs	r0, r1, #16
  400c44:	f8ad 106c 	strh.w	r1, [sp, #108]	; 0x6c
    out[outIdx++] = val;
  400c48:	216b      	movs	r1, #107	; 0x6b
    char track_name[] = "Melody";
  400c4a:	f88d 006e 	strb.w	r0, [sp, #110]	; 0x6e
    out[outIdx++] = val;
  400c4e:	71d9      	strb	r1, [r3, #7]
    uint32_t size_of_track_name = 0;
  400c50:	2300      	movs	r3, #0
    while(track_name[size_of_track_name++]); // size of track name
  400c52:	e016      	b.n	400c82 <write_midi_file+0x29a>
  400c54:	f3af 8000 	nop.w
  400c58:	00000000 	.word	0x00000000
  400c5c:	418c9c38 	.word	0x418c9c38
  400c60:	2042313c 	.word	0x2042313c
  400c64:	20402a68 	.word	0x20402a68
  400c68:	20423155 	.word	0x20423155
  400c6c:	00405d25 	.word	0x00405d25
  400c70:	00406065 	.word	0x00406065
  400c74:	00406345 	.word	0x00406345
  400c78:	00414698 	.word	0x00414698
  400c7c:	42f00000 	.word	0x42f00000
  400c80:	460b      	mov	r3, r1
  400c82:	f812 0f01 	ldrb.w	r0, [r2, #1]!
  400c86:	1c59      	adds	r1, r3, #1
  400c88:	2800      	cmp	r0, #0
  400c8a:	d1f9      	bne.n	400c80 <write_midi_file+0x298>
    
    // size of melody
    // number_events * 2 for on/off, * 4 for 4 chars each
    longdata = 11 + number_of_events*8 + size_of_track_name - 1;
  400c8c:	9a02      	ldr	r2, [sp, #8]
  400c8e:	4680      	mov	r8, r0
    out[outIdx++] = val;
  400c90:	f10b 0010 	add.w	r0, fp, #16
  400c94:	f04f 0eff 	mov.w	lr, #255	; 0xff
    longdata = 11 + number_of_events*8 + size_of_track_name - 1;
  400c98:	ea4f 09c2 	mov.w	r9, r2, lsl #3
    out[outIdx++] = val;
  400c9c:	eb07 020b 	add.w	r2, r7, fp
    longdata = 11 + number_of_events*8 + size_of_track_name - 1;
  400ca0:	f109 060a 	add.w	r6, r9, #10
  400ca4:	4431      	add	r1, r6
    write_out(data.bytes[3]);
  400ca6:	f3c1 6b07 	ubfx	fp, r1, #24, #8
    write_out(data.bytes[2]);
  400caa:	f3c1 4607 	ubfx	r6, r1, #16, #8
    out[outIdx++] = val;
  400cae:	f807 b00a 	strb.w	fp, [r7, sl]
    write_out(data.bytes[1]);
  400cb2:	f3c1 2a07 	ubfx	sl, r1, #8, #8
    out[outIdx++] = val;
  400cb6:	72d1      	strb	r1, [r2, #11]
  400cb8:	f04f 0103 	mov.w	r1, #3
  400cbc:	7256      	strb	r6, [r2, #9]
  400cbe:	f882 a00a 	strb.w	sl, [r2, #10]
  400cc2:	f882 800c 	strb.w	r8, [r2, #12]
  400cc6:	73d3      	strb	r3, [r2, #15]
  400cc8:	f882 e00d 	strb.w	lr, [r2, #13]
  400ccc:	7391      	strb	r1, [r2, #14]
    // track name
    write_out(0x00); // tick
    write_out(0xFF);
    write_out(0x03);
    write_out((uint8_t)size_of_track_name-1);
    for (i = 0; i < size_of_track_name-1; i++)
  400cce:	b153      	cbz	r3, 400ce6 <write_midi_file+0x2fe>
  400cd0:	aa1a      	add	r2, sp, #104	; 0x68
  400cd2:	1839      	adds	r1, r7, r0
  400cd4:	eb02 0e03 	add.w	lr, r2, r3
        write_out(track_name[i]);
  400cd8:	f812 6b01 	ldrb.w	r6, [r2], #1
    for (i = 0; i < size_of_track_name-1; i++)
  400cdc:	4572      	cmp	r2, lr
    out[outIdx++] = val;
  400cde:	f801 6b01 	strb.w	r6, [r1], #1
    for (i = 0; i < size_of_track_name-1; i++)
  400ce2:	d1f9      	bne.n	400cd8 <write_midi_file+0x2f0>
  400ce4:	4418      	add	r0, r3
    
    // patch name
    uint8_t channel = 0;
    write_out(0x00); // tick
    write_out(0xc0 | (0x0f & channel));
    write_out(0x7f & playback_instrument);
  400ce6:	9b15      	ldr	r3, [sp, #84]	; 0x54
    out[outIdx++] = val;
  400ce8:	2100      	movs	r1, #0
  400cea:	1cc6      	adds	r6, r0, #3
  400cec:	5439      	strb	r1, [r7, r0]
    write_out(0x7f & playback_instrument);
  400cee:	f003 027f 	and.w	r2, r3, #127	; 0x7f
    out[outIdx++] = val;
  400cf2:	183b      	adds	r3, r7, r0
  400cf4:	20c0      	movs	r0, #192	; 0xc0
  400cf6:	6026      	str	r6, [r4, #0]
  400cf8:	709a      	strb	r2, [r3, #2]
  400cfa:	7058      	strb	r0, [r3, #1]
    
    // write out track data
    uint32_t actiontick = 0;
    for (i = 0; i < number_of_events; i++)
  400cfc:	9b02      	ldr	r3, [sp, #8]
  400cfe:	2b00      	cmp	r3, #0
  400d00:	f000 8092 	beq.w	400e28 <write_midi_file+0x440>
  400d04:	9a17      	ldr	r2, [sp, #92]	; 0x5c
            actiontick = 0;
        }
        else
        {
            // length of rest
            actiontick += TICKS_PER_QUARTER_NOTE * events[i].rhythm;
  400d06:	ed1f 7a23 	vldr	s14, [pc, #-140]	; 400c7c <write_midi_file+0x294>
  400d0a:	4491      	add	r9, r2
        if (events[i].note_number >= 0)
  400d0c:	f9b2 3000 	ldrsh.w	r3, [r2]
  400d10:	2b00      	cmp	r3, #0
  400d12:	f2c0 80af 	blt.w	400e74 <write_midi_file+0x48c>
    bytes[1] = (unsigned char)((value >> 14) & 0x7f);
  400d16:	f3c1 3086 	ubfx	r0, r1, #14, #7
    bytes[0] = (unsigned char)((value >> 21) & 0x7f);
  400d1a:	f3c1 5346 	ubfx	r3, r1, #21, #7
    bytes[2] = (unsigned char)((value >> 7)  & 0x7f);
  400d1e:	f3c1 1ec6 	ubfx	lr, r1, #7, #7
    bytes[3] = (unsigned char)(value & 0x7f);
  400d22:	f001 017f 	and.w	r1, r1, #127	; 0x7f
    bytes[1] = (unsigned char)((value >> 14) & 0x7f);
  400d26:	f88d 0065 	strb.w	r0, [sp, #101]	; 0x65
    int start = 0;
  400d2a:	2000      	movs	r0, #0
    bytes[0] = (unsigned char)((value >> 21) & 0x7f);
  400d2c:	f88d 3064 	strb.w	r3, [sp, #100]	; 0x64
    bytes[2] = (unsigned char)((value >> 7)  & 0x7f);
  400d30:	f88d e066 	strb.w	lr, [sp, #102]	; 0x66
    bytes[3] = (unsigned char)(value & 0x7f);
  400d34:	f88d 1067 	strb.w	r1, [sp, #103]	; 0x67
    while ((start<4) && (bytes[start] == 0))  start++;
  400d38:	b933      	cbnz	r3, 400d48 <write_midi_file+0x360>
  400d3a:	3001      	adds	r0, #1
  400d3c:	2804      	cmp	r0, #4
  400d3e:	d017      	beq.n	400d70 <write_midi_file+0x388>
  400d40:	f81c 3000 	ldrb.w	r3, [ip, r0]
  400d44:	2b00      	cmp	r3, #0
  400d46:	d0f8      	beq.n	400d3a <write_midi_file+0x352>
    for (i=start; i<3; i++) {
  400d48:	2803      	cmp	r0, #3
  400d4a:	d011      	beq.n	400d70 <write_midi_file+0x388>
  400d4c:	eb0c 0100 	add.w	r1, ip, r0
  400d50:	eb07 0e06 	add.w	lr, r7, r6
  400d54:	e000      	b.n	400d58 <write_midi_file+0x370>
  400d56:	780b      	ldrb	r3, [r1, #0]
        bytes[i] = bytes[i] | 0x80;
  400d58:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  400d5c:	f801 3b01 	strb.w	r3, [r1], #1
    for (i=start; i<3; i++) {
  400d60:	42a9      	cmp	r1, r5
    out[outIdx++] = val;
  400d62:	f80e 3b01 	strb.w	r3, [lr], #1
    for (i=start; i<3; i++) {
  400d66:	d1f6      	bne.n	400d56 <write_midi_file+0x36e>
  400d68:	3603      	adds	r6, #3
  400d6a:	f89d 1067 	ldrb.w	r1, [sp, #103]	; 0x67
  400d6e:	1a36      	subs	r6, r6, r0
    out[outIdx++] = val;
  400d70:	55b9      	strb	r1, [r7, r6]
  400d72:	19bb      	adds	r3, r7, r6
  400d74:	f06f 016f 	mvn.w	r1, #111	; 0x6f
  400d78:	1d30      	adds	r0, r6, #4
    int start = 0;
  400d7a:	f04f 0e00 	mov.w	lr, #0
    out[outIdx++] = val;
  400d7e:	7059      	strb	r1, [r3, #1]
            write_out(events[i].note_number & 0x7f);
  400d80:	7811      	ldrb	r1, [r2, #0]
    out[outIdx++] = val;
  400d82:	6020      	str	r0, [r4, #0]
            write_out(events[i].note_number & 0x7f);
  400d84:	f001 017f 	and.w	r1, r1, #127	; 0x7f
    out[outIdx++] = val;
  400d88:	7099      	strb	r1, [r3, #2]
            write_out(events[i].velocity & 0x7f);
  400d8a:	7891      	ldrb	r1, [r2, #2]
  400d8c:	f001 017f 	and.w	r1, r1, #127	; 0x7f
    out[outIdx++] = val;
  400d90:	70d9      	strb	r1, [r3, #3]
            actiontick = TICKS_PER_QUARTER_NOTE * events[i].rhythm;
  400d92:	edd2 7a01 	vldr	s15, [r2, #4]
  400d96:	ee67 7a87 	vmul.f32	s15, s15, s14
  400d9a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
  400d9e:	ee17 1a90 	vmov	r1, s15
    bytes[0] = (unsigned char)((value >> 21) & 0x7f);
  400da2:	f3c1 5346 	ubfx	r3, r1, #21, #7
    bytes[1] = (unsigned char)((value >> 14) & 0x7f);
  400da6:	f3c1 3b86 	ubfx	fp, r1, #14, #7
    bytes[2] = (unsigned char)((value >> 7)  & 0x7f);
  400daa:	f3c1 1ac6 	ubfx	sl, r1, #7, #7
    bytes[3] = (unsigned char)(value & 0x7f);
  400dae:	f001 017f 	and.w	r1, r1, #127	; 0x7f
    bytes[0] = (unsigned char)((value >> 21) & 0x7f);
  400db2:	f88d 3064 	strb.w	r3, [sp, #100]	; 0x64
    bytes[1] = (unsigned char)((value >> 14) & 0x7f);
  400db6:	f88d b065 	strb.w	fp, [sp, #101]	; 0x65
    bytes[2] = (unsigned char)((value >> 7)  & 0x7f);
  400dba:	f88d a066 	strb.w	sl, [sp, #102]	; 0x66
    bytes[3] = (unsigned char)(value & 0x7f);
  400dbe:	f88d 1067 	strb.w	r1, [sp, #103]	; 0x67
    while ((start<4) && (bytes[start] == 0))  start++;
  400dc2:	b943      	cbnz	r3, 400dd6 <write_midi_file+0x3ee>
  400dc4:	f10e 0e01 	add.w	lr, lr, #1
  400dc8:	f1be 0f04 	cmp.w	lr, #4
  400dcc:	d018      	beq.n	400e00 <write_midi_file+0x418>
  400dce:	f81c 300e 	ldrb.w	r3, [ip, lr]
  400dd2:	2b00      	cmp	r3, #0
  400dd4:	d0f6      	beq.n	400dc4 <write_midi_file+0x3dc>
    for (i=start; i<3; i++) {
  400dd6:	f1be 0f03 	cmp.w	lr, #3
  400dda:	d011      	beq.n	400e00 <write_midi_file+0x418>
  400ddc:	4438      	add	r0, r7
  400dde:	eb0c 010e 	add.w	r1, ip, lr
  400de2:	e000      	b.n	400de6 <write_midi_file+0x3fe>
  400de4:	780b      	ldrb	r3, [r1, #0]
        bytes[i] = bytes[i] | 0x80;
  400de6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  400dea:	f801 3b01 	strb.w	r3, [r1], #1
    for (i=start; i<3; i++) {
  400dee:	42a9      	cmp	r1, r5
    out[outIdx++] = val;
  400df0:	f800 3b01 	strb.w	r3, [r0], #1
    for (i=start; i<3; i++) {
  400df4:	d1f6      	bne.n	400de4 <write_midi_file+0x3fc>
  400df6:	1df0      	adds	r0, r6, #7
  400df8:	f89d 1067 	ldrb.w	r1, [sp, #103]	; 0x67
  400dfc:	eba0 000e 	sub.w	r0, r0, lr
    out[outIdx++] = val;
  400e00:	5439      	strb	r1, [r7, r0]
  400e02:	183b      	adds	r3, r7, r0
  400e04:	1d06      	adds	r6, r0, #4
  400e06:	f06f 007f 	mvn.w	r0, #127	; 0x7f
            actiontick = 0;
  400e0a:	2100      	movs	r1, #0
    out[outIdx++] = val;
  400e0c:	7058      	strb	r0, [r3, #1]
            write_out(events[i].note_number & 0x7f);
  400e0e:	7810      	ldrb	r0, [r2, #0]
    out[outIdx++] = val;
  400e10:	6026      	str	r6, [r4, #0]
            write_out(events[i].note_number & 0x7f);
  400e12:	f000 007f 	and.w	r0, r0, #127	; 0x7f
    out[outIdx++] = val;
  400e16:	7098      	strb	r0, [r3, #2]
            write_out(events[i].velocity & 0x7f);
  400e18:	7890      	ldrb	r0, [r2, #2]
  400e1a:	f000 007f 	and.w	r0, r0, #127	; 0x7f
    out[outIdx++] = val;
  400e1e:	70d8      	strb	r0, [r3, #3]
  400e20:	3208      	adds	r2, #8
    for (i = 0; i < number_of_events; i++)
  400e22:	454a      	cmp	r2, r9
  400e24:	f47f af72 	bne.w	400d0c <write_midi_file+0x324>
  400e28:	9b04      	ldr	r3, [sp, #16]
  400e2a:	4437      	add	r7, r6
  400e2c:	9a01      	ldr	r2, [sp, #4]
    out[outIdx++] = val;
  400e2e:	f807 8b01 	strb.w	r8, [r7], #1
        }
    }
    
    // end of header track
    for (i = 0; i < 4; i++) 
  400e32:	4293      	cmp	r3, r2
  400e34:	d005      	beq.n	400e42 <write_midi_file+0x45a>
  400e36:	f813 8b01 	ldrb.w	r8, [r3], #1
  400e3a:	4293      	cmp	r3, r2
    out[outIdx++] = val;
  400e3c:	f807 8b01 	strb.w	r8, [r7], #1
    for (i = 0; i < 4; i++) 
  400e40:	d1f9      	bne.n	400e36 <write_midi_file+0x44e>
  400e42:	3604      	adds	r6, #4
	{
        write_out(endoftrack[i]);
	}

	printf("-"); // flag for beginning of midi file
  400e44:	4827      	ldr	r0, [pc, #156]	; (400ee4 <write_midi_file+0x4fc>)
  400e46:	4f28      	ldr	r7, [pc, #160]	; (400ee8 <write_midi_file+0x500>)
  400e48:	6026      	str	r6, [r4, #0]
  400e4a:	47b8      	blx	r7
	for (i = 0; i < outIdx; i++)
  400e4c:	6823      	ldr	r3, [r4, #0]
  400e4e:	b15b      	cbz	r3, 400e68 <write_midi_file+0x480>
  400e50:	4e26      	ldr	r6, [pc, #152]	; (400eec <write_midi_file+0x504>)
  400e52:	2500      	movs	r5, #0
	{
		printf("%02x", out[i]);
  400e54:	f8df 8098 	ldr.w	r8, [pc, #152]	; 400ef0 <write_midi_file+0x508>
  400e58:	f816 1f01 	ldrb.w	r1, [r6, #1]!
  400e5c:	4640      	mov	r0, r8
  400e5e:	47b8      	blx	r7
	for (i = 0; i < outIdx; i++)
  400e60:	3501      	adds	r5, #1
  400e62:	6823      	ldr	r3, [r4, #0]
  400e64:	42ab      	cmp	r3, r5
  400e66:	d8f7      	bhi.n	400e58 <write_midi_file+0x470>
	}
	printf("-"); // flag for end
  400e68:	481e      	ldr	r0, [pc, #120]	; (400ee4 <write_midi_file+0x4fc>)
  400e6a:	463b      	mov	r3, r7
}
  400e6c:	b01d      	add	sp, #116	; 0x74
  400e6e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	printf("-"); // flag for end
  400e72:	4718      	bx	r3
            actiontick += TICKS_PER_QUARTER_NOTE * events[i].rhythm;
  400e74:	ee07 1a90 	vmov	s15, r1
  400e78:	edd2 6a01 	vldr	s13, [r2, #4]
  400e7c:	eef8 7a67 	vcvt.f32.u32	s15, s15
  400e80:	eee6 7a87 	vfma.f32	s15, s13, s14
  400e84:	eefc 7ae7 	vcvt.u32.f32	s15, s15
  400e88:	ee17 1a90 	vmov	r1, s15
  400e8c:	e7c8      	b.n	400e20 <write_midi_file+0x438>
    for (i = 0; i < size_of_title-1; i++)
  400e8e:	2322      	movs	r3, #34	; 0x22
  400e90:	4692      	mov	sl, r2
  400e92:	f04f 0b2f 	mov.w	fp, #47	; 0x2f
  400e96:	f04f 081b 	mov.w	r8, #27
  400e9a:	9314      	str	r3, [sp, #80]	; 0x50
  400e9c:	2323      	movs	r3, #35	; 0x23
  400e9e:	261c      	movs	r6, #28
  400ea0:	f04f 091d 	mov.w	r9, #29
  400ea4:	9313      	str	r3, [sp, #76]	; 0x4c
  400ea6:	2324      	movs	r3, #36	; 0x24
  400ea8:	9312      	str	r3, [sp, #72]	; 0x48
  400eaa:	2325      	movs	r3, #37	; 0x25
  400eac:	9311      	str	r3, [sp, #68]	; 0x44
  400eae:	2326      	movs	r3, #38	; 0x26
  400eb0:	9310      	str	r3, [sp, #64]	; 0x40
  400eb2:	2327      	movs	r3, #39	; 0x27
  400eb4:	930f      	str	r3, [sp, #60]	; 0x3c
  400eb6:	2328      	movs	r3, #40	; 0x28
  400eb8:	930e      	str	r3, [sp, #56]	; 0x38
  400eba:	2329      	movs	r3, #41	; 0x29
  400ebc:	930d      	str	r3, [sp, #52]	; 0x34
  400ebe:	232a      	movs	r3, #42	; 0x2a
  400ec0:	930c      	str	r3, [sp, #48]	; 0x30
  400ec2:	232b      	movs	r3, #43	; 0x2b
  400ec4:	930b      	str	r3, [sp, #44]	; 0x2c
  400ec6:	232c      	movs	r3, #44	; 0x2c
  400ec8:	930a      	str	r3, [sp, #40]	; 0x28
  400eca:	232d      	movs	r3, #45	; 0x2d
  400ecc:	9309      	str	r3, [sp, #36]	; 0x24
  400ece:	232e      	movs	r3, #46	; 0x2e
  400ed0:	9308      	str	r3, [sp, #32]
  400ed2:	231e      	movs	r3, #30
  400ed4:	9307      	str	r3, [sp, #28]
  400ed6:	231f      	movs	r3, #31
  400ed8:	9306      	str	r3, [sp, #24]
  400eda:	2320      	movs	r3, #32
  400edc:	9305      	str	r3, [sp, #20]
  400ede:	2321      	movs	r3, #33	; 0x21
  400ee0:	9304      	str	r3, [sp, #16]
  400ee2:	e62b      	b.n	400b3c <write_midi_file+0x154>
  400ee4:	0041468c 	.word	0x0041468c
  400ee8:	00406ae9 	.word	0x00406ae9
  400eec:	2042313b 	.word	0x2042313b
  400ef0:	00414690 	.word	0x00414690

00400ef4 <RTT_Handler>:
 * \brief Interrupt handler for the RTT.
 *
 * Display the current time on the terminal.
 */
void RTT_Handler(void)
{
  400ef4:	b538      	push	{r3, r4, r5, lr}
	uint32_t ul_status;

	/* Get RTT status */
	ul_status = rtt_get_status(RTT);
  400ef6:	4823      	ldr	r0, [pc, #140]	; (400f84 <RTT_Handler+0x90>)
  400ef8:	4b23      	ldr	r3, [pc, #140]	; (400f88 <RTT_Handler+0x94>)
  400efa:	4798      	blx	r3

	/* Timer overflow */
	if ((ul_status & RTT_SR_RTTINC) == RTT_SR_RTTINC) 
  400efc:	0783      	lsls	r3, r0, #30
  400efe:	d51f      	bpl.n	400f40 <RTT_Handler+0x4c>
	{	
		if (processPingMode)
  400f00:	4b22      	ldr	r3, [pc, #136]	; (400f8c <RTT_Handler+0x98>)
  400f02:	781a      	ldrb	r2, [r3, #0]
  400f04:	b9ea      	cbnz	r2, 400f42 <RTT_Handler+0x4e>
		}
		else
		{
			processBuffer = processPongBuffer;
			fillBuffer = processPingBuffer;
			processPingMode = !processPingMode;
  400f06:	781a      	ldrb	r2, [r3, #0]
			processBuffer = processPongBuffer;
  400f08:	4c21      	ldr	r4, [pc, #132]	; (400f90 <RTT_Handler+0x9c>)
			processPingMode = !processPingMode;
  400f0a:	f082 0201 	eor.w	r2, r2, #1
			processBuffer = processPongBuffer;
  400f0e:	4d21      	ldr	r5, [pc, #132]	; (400f94 <RTT_Handler+0xa0>)
			fillBuffer = processPingBuffer;
  400f10:	4921      	ldr	r1, [pc, #132]	; (400f98 <RTT_Handler+0xa4>)
  400f12:	4822      	ldr	r0, [pc, #136]	; (400f9c <RTT_Handler+0xa8>)
			processPingMode = !processPingMode;
  400f14:	701a      	strb	r2, [r3, #0]
			processBuffer = processPongBuffer;
  400f16:	6025      	str	r5, [r4, #0]
			fillBuffer = processPingBuffer;
  400f18:	6008      	str	r0, [r1, #0]
		}
		
		note_16_received = true; 
		one_beat = false; 
  400f1a:	2100      	movs	r1, #0
		note_16_received = true; 
  400f1c:	4d20      	ldr	r5, [pc, #128]	; (400fa0 <RTT_Handler+0xac>)
  400f1e:	2201      	movs	r2, #1
		one_beat = false; 
  400f20:	4c20      	ldr	r4, [pc, #128]	; (400fa4 <RTT_Handler+0xb0>)
		up_beat = false; 
  400f22:	4821      	ldr	r0, [pc, #132]	; (400fa8 <RTT_Handler+0xb4>)
		
		// One beat, or quarter note has passed 
		if (sixteenth_note_cnt == 4)
  400f24:	4b21      	ldr	r3, [pc, #132]	; (400fac <RTT_Handler+0xb8>)
		note_16_received = true; 
  400f26:	702a      	strb	r2, [r5, #0]
		one_beat = false; 
  400f28:	7021      	strb	r1, [r4, #0]
		up_beat = false; 
  400f2a:	7001      	strb	r1, [r0, #0]
		if (sixteenth_note_cnt == 4)
  400f2c:	7819      	ldrb	r1, [r3, #0]
  400f2e:	2904      	cmp	r1, #4
  400f30:	d012      	beq.n	400f58 <RTT_Handler+0x64>
			}
		}
		else
		{
			// Check for every other 16th note -> eigth note 
			if (sixteenth_note_cnt == 2)
  400f32:	7819      	ldrb	r1, [r3, #0]
  400f34:	2902      	cmp	r1, #2
  400f36:	d01d      	beq.n	400f74 <RTT_Handler+0x80>
			{
				metronome_on = true;
				up_beat = true;
			}
			sixteenth_note_cnt++;
  400f38:	781a      	ldrb	r2, [r3, #0]
  400f3a:	3201      	adds	r2, #1
  400f3c:	b2d2      	uxtb	r2, r2
  400f3e:	701a      	strb	r2, [r3, #0]
  400f40:	bd38      	pop	{r3, r4, r5, pc}
			processPingMode = !processPingMode;
  400f42:	781a      	ldrb	r2, [r3, #0]
			processBuffer = processPingBuffer;
  400f44:	4c12      	ldr	r4, [pc, #72]	; (400f90 <RTT_Handler+0x9c>)
			processPingMode = !processPingMode;
  400f46:	f082 0201 	eor.w	r2, r2, #1
			processBuffer = processPingBuffer;
  400f4a:	4d14      	ldr	r5, [pc, #80]	; (400f9c <RTT_Handler+0xa8>)
			fillBuffer = processPongBuffer;
  400f4c:	4912      	ldr	r1, [pc, #72]	; (400f98 <RTT_Handler+0xa4>)
  400f4e:	4811      	ldr	r0, [pc, #68]	; (400f94 <RTT_Handler+0xa0>)
			processPingMode = !processPingMode;
  400f50:	701a      	strb	r2, [r3, #0]
			processBuffer = processPingBuffer;
  400f52:	6025      	str	r5, [r4, #0]
			fillBuffer = processPongBuffer;
  400f54:	6008      	str	r0, [r1, #0]
  400f56:	e7e0      	b.n	400f1a <RTT_Handler+0x26>
			metronome_on = true;
  400f58:	4d15      	ldr	r5, [pc, #84]	; (400fb0 <RTT_Handler+0xbc>)
			if (beat_cnt == number_of_beats_in_a_measure)
  400f5a:	4916      	ldr	r1, [pc, #88]	; (400fb4 <RTT_Handler+0xc0>)
  400f5c:	4816      	ldr	r0, [pc, #88]	; (400fb8 <RTT_Handler+0xc4>)
			metronome_on = true;
  400f5e:	702a      	strb	r2, [r5, #0]
			if (beat_cnt == number_of_beats_in_a_measure)
  400f60:	7800      	ldrb	r0, [r0, #0]
			sixteenth_note_cnt = 1;
  400f62:	701a      	strb	r2, [r3, #0]
			if (beat_cnt == number_of_beats_in_a_measure)
  400f64:	780b      	ldrb	r3, [r1, #0]
  400f66:	4298      	cmp	r0, r3
  400f68:	d008      	beq.n	400f7c <RTT_Handler+0x88>
				beat_cnt++;
  400f6a:	780b      	ldrb	r3, [r1, #0]
  400f6c:	3301      	adds	r3, #1
  400f6e:	b2db      	uxtb	r3, r3
  400f70:	700b      	strb	r3, [r1, #0]
  400f72:	bd38      	pop	{r3, r4, r5, pc}
				metronome_on = true;
  400f74:	490e      	ldr	r1, [pc, #56]	; (400fb0 <RTT_Handler+0xbc>)
  400f76:	700a      	strb	r2, [r1, #0]
				up_beat = true;
  400f78:	7002      	strb	r2, [r0, #0]
  400f7a:	e7dd      	b.n	400f38 <RTT_Handler+0x44>
				one_beat = true;
  400f7c:	7022      	strb	r2, [r4, #0]
				beat_cnt = 1;
  400f7e:	700a      	strb	r2, [r1, #0]
  400f80:	bd38      	pop	{r3, r4, r5, pc}
  400f82:	bf00      	nop
  400f84:	400e1830 	.word	0x400e1830
  400f88:	00403545 	.word	0x00403545
  400f8c:	20400024 	.word	0x20400024
  400f90:	20400020 	.word	0x20400020
  400f94:	2041303c 	.word	0x2041303c
  400f98:	2040000c 	.word	0x2040000c
  400f9c:	20402d3c 	.word	0x20402d3c
  400fa0:	20402a6e 	.word	0x20402a6e
  400fa4:	20402c71 	.word	0x20402c71
  400fa8:	20402c74 	.word	0x20402c74
  400fac:	20402c73 	.word	0x20402c73
  400fb0:	20402a6d 	.word	0x20402a6d
  400fb4:	20402a6c 	.word	0x20402a6c
  400fb8:	20402c70 	.word	0x20402c70

00400fbc <start_recording>:
#define NOTE_MASK (NOTE_BUF_SIZE-1)
static midi_note_t notes[NOTE_BUF_SIZE]; 
extern volatile int clickIdx; 
extern volatile bool start; 
void start_recording(midi_event_t *events, uint32_t *number_of_events, uint32_t bpm, midi_instrument_t playback_instrument, time_signature_t time_signature , key_signature_t key_signature, char *title)
{		
  400fbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400fc0:	461c      	mov	r4, r3
  400fc2:	4680      	mov	r8, r0
	aubio_pitchyinfast_t *yin = new_aubio_pitchyinfast(WIN_SIZE); 
  400fc4:	4b80      	ldr	r3, [pc, #512]	; (4011c8 <start_recording+0x20c>)
  400fc6:	f44f 6000 	mov.w	r0, #2048	; 0x800
{		
  400fca:	460d      	mov	r5, r1
  400fcc:	4617      	mov	r7, r2
  400fce:	ed2d 8b02 	vpush	{d8}
  400fd2:	b085      	sub	sp, #20
	aubio_pitchyinfast_t *yin = new_aubio_pitchyinfast(WIN_SIZE); 
  400fd4:	4798      	blx	r3
	/******** midi event variables *********/ 
	*number_of_events = 0; 
  400fd6:	2200      	movs	r2, #0
	float current_rhythm = 0.25;  // 16th note
	int note_cnt = 0; 
	
	uint32_t midi_note_offset = 0; 
  400fd8:	2c1b      	cmp	r4, #27
	if (playback_instrument == GUITAR)
		midi_note_offset = 12; 
	
	time_sig = time_signature.sig;
  400fda:	f89d 3042 	ldrb.w	r3, [sp, #66]	; 0x42
	*number_of_events = 0; 
  400fde:	602a      	str	r2, [r5, #0]
	uint32_t midi_note_offset = 0; 
  400fe0:	bf08      	it	eq
  400fe2:	220c      	moveq	r2, #12
	aubio_pitchyinfast_t *yin = new_aubio_pitchyinfast(WIN_SIZE); 
  400fe4:	9001      	str	r0, [sp, #4]
	uint32_t midi_note_offset = 0; 
  400fe6:	9202      	str	r2, [sp, #8]
	if (time_sig == FOUR_FOUR)
  400fe8:	2b00      	cmp	r3, #0
  400fea:	f040 8087 	bne.w	4010fc <start_recording+0x140>
		number_of_beats_in_a_measure = 4;
  400fee:	f8df a228 	ldr.w	sl, [pc, #552]	; 401218 <start_recording+0x25c>
  400ff2:	2204      	movs	r2, #4
  400ff4:	f88a 2000 	strb.w	r2, [sl]
	else if (time_sig == TWO_FOUR)
		number_of_beats_in_a_measure = 2;
	else // 6/8
		number_of_beats_in_a_measure = 6; 
	
	sixteenth_note_cnt = 4; 
  400ff8:	f04f 0e04 	mov.w	lr, #4
  400ffc:	4973      	ldr	r1, [pc, #460]	; (4011cc <start_recording+0x210>)
	beat_cnt = number_of_beats_in_a_measure; 
  400ffe:	4e74      	ldr	r6, [pc, #464]	; (4011d0 <start_recording+0x214>)
	one_beat = false; 
  401000:	2300      	movs	r3, #0
	sixteenth_note_cnt = 4; 
  401002:	f881 e000 	strb.w	lr, [r1]
	up_beat = false; 
	metronome_on = false;
	recording = true;
  401006:	2001      	movs	r0, #1
	beat_cnt = number_of_beats_in_a_measure; 
  401008:	7032      	strb	r2, [r6, #0]
	rtt_sel_source(RTT, false);
  40100a:	4619      	mov	r1, r3
	one_beat = false; 
  40100c:	4c71      	ldr	r4, [pc, #452]	; (4011d4 <start_recording+0x218>)
	up_beat = false; 
  40100e:	4a72      	ldr	r2, [pc, #456]	; (4011d8 <start_recording+0x21c>)
	one_beat = false; 
  401010:	7023      	strb	r3, [r4, #0]
	recording = true;
  401012:	4e72      	ldr	r6, [pc, #456]	; (4011dc <start_recording+0x220>)
	up_beat = false; 
  401014:	7013      	strb	r3, [r2, #0]
	metronome_on = false;
  401016:	4c72      	ldr	r4, [pc, #456]	; (4011e0 <start_recording+0x224>)
	clickIdx = 0; 
  401018:	4a72      	ldr	r2, [pc, #456]	; (4011e4 <start_recording+0x228>)
	metronome_on = false;
  40101a:	7023      	strb	r3, [r4, #0]
	recording = true;
  40101c:	7030      	strb	r0, [r6, #0]
	clickIdx = 0; 
  40101e:	6013      	str	r3, [r2, #0]
	rtt_sel_source(RTT, false);
  401020:	4871      	ldr	r0, [pc, #452]	; (4011e8 <start_recording+0x22c>)
  401022:	4b72      	ldr	r3, [pc, #456]	; (4011ec <start_recording+0x230>)
  401024:	4798      	blx	r3
	
	configure_rtt(32768 * 15 / bpm);
  401026:	f44f 21f0 	mov.w	r1, #491520	; 0x78000
	rtt_init(RTT, count_8_note);
  40102a:	486f      	ldr	r0, [pc, #444]	; (4011e8 <start_recording+0x22c>)
  40102c:	4b70      	ldr	r3, [pc, #448]	; (4011f0 <start_recording+0x234>)
	while (ul_previous_time == rtt_read_timer_value(RTT));
  40102e:	4681      	mov	r9, r0
	ul_previous_time = rtt_read_timer_value(RTT);
  401030:	4c70      	ldr	r4, [pc, #448]	; (4011f4 <start_recording+0x238>)
	configure_rtt(32768 * 15 / bpm);
  401032:	fbb1 f1f7 	udiv	r1, r1, r7
	rtt_init(RTT, count_8_note);
  401036:	b289      	uxth	r1, r1
  401038:	4798      	blx	r3
	ul_previous_time = rtt_read_timer_value(RTT);
  40103a:	4648      	mov	r0, r9
  40103c:	47a0      	blx	r4
  40103e:	4607      	mov	r7, r0
	while (ul_previous_time == rtt_read_timer_value(RTT));
  401040:	4648      	mov	r0, r9
  401042:	47a0      	blx	r4
  401044:	4287      	cmp	r7, r0
  401046:	d0fb      	beq.n	401040 <start_recording+0x84>
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  401048:	4b6b      	ldr	r3, [pc, #428]	; (4011f8 <start_recording+0x23c>)
  40104a:	2208      	movs	r2, #8
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  40104c:	2400      	movs	r4, #0
	rtt_enable_interrupt(RTT, RTT_MR_RTTINCIEN);
  40104e:	f44f 3100 	mov.w	r1, #131072	; 0x20000
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  401052:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  401056:	4864      	ldr	r0, [pc, #400]	; (4011e8 <start_recording+0x22c>)
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  401058:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  40105c:	f883 4303 	strb.w	r4, [r3, #771]	; 0x303
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  401060:	601a      	str	r2, [r3, #0]
  401062:	4b66      	ldr	r3, [pc, #408]	; (4011fc <start_recording+0x240>)
  401064:	4798      	blx	r3
  401066:	f89a 3000 	ldrb.w	r3, [sl]
  40106a:	2101      	movs	r1, #1
	
	// Wait a measure 
	int i; 
	for (i = 0; i < 4*number_of_beats_in_a_measure + 1;i++)
  40106c:	4622      	mov	r2, r4
	{
		while(!note_16_received); 
		note_16_received = 0; 
  40106e:	4620      	mov	r0, r4
  401070:	4c63      	ldr	r4, [pc, #396]	; (401200 <start_recording+0x244>)
  401072:	eb01 0183 	add.w	r1, r1, r3, lsl #2
		while(!note_16_received); 
  401076:	7823      	ldrb	r3, [r4, #0]
  401078:	2b00      	cmp	r3, #0
  40107a:	d0fc      	beq.n	401076 <start_recording+0xba>
	for (i = 0; i < 4*number_of_beats_in_a_measure + 1;i++)
  40107c:	3201      	adds	r2, #1
		note_16_received = 0; 
  40107e:	7020      	strb	r0, [r4, #0]
	for (i = 0; i < 4*number_of_beats_in_a_measure + 1;i++)
  401080:	428a      	cmp	r2, r1
  401082:	d1f8      	bne.n	401076 <start_recording+0xba>
  401084:	eeb5 8a00 	vmov.f32	s16, #80	; 0x3e800000  0.250
  401088:	f04f 0b00 	mov.w	fp, #0
  40108c:	f8df 918c 	ldr.w	r9, [pc, #396]	; 40121c <start_recording+0x260>
	}

	uint32_t record_cnt = 0;
	while(recording && *number_of_events < MAX_NUM_EVENTS-1 && start == true)
  401090:	4f5c      	ldr	r7, [pc, #368]	; (401204 <start_recording+0x248>)
  401092:	f242 720e 	movw	r2, #9998	; 0x270e
  401096:	e007      	b.n	4010a8 <start_recording+0xec>
  401098:	682b      	ldr	r3, [r5, #0]
  40109a:	4293      	cmp	r3, r2
  40109c:	d807      	bhi.n	4010ae <start_recording+0xf2>
  40109e:	783b      	ldrb	r3, [r7, #0]
  4010a0:	b12b      	cbz	r3, 4010ae <start_recording+0xf2>
	{
		if (note_16_received)
  4010a2:	7823      	ldrb	r3, [r4, #0]
  4010a4:	2b00      	cmp	r3, #0
  4010a6:	d134      	bne.n	401112 <start_recording+0x156>
	while(recording && *number_of_events < MAX_NUM_EVENTS-1 && start == true)
  4010a8:	7833      	ldrb	r3, [r6, #0]
  4010aa:	2b00      	cmp	r3, #0
  4010ac:	d1f4      	bne.n	401098 <start_recording+0xdc>
			note_cnt++; 
			note_16_received = false;
		}
	}
	recording = false; 
	metronome_on = false;
  4010ae:	4a4c      	ldr	r2, [pc, #304]	; (4011e0 <start_recording+0x224>)
	recording = false; 
  4010b0:	2300      	movs	r3, #0
	rtt_disable_interrupt(RTT, RTT_MR_RTTINCIEN);
  4010b2:	f44f 3100 	mov.w	r1, #131072	; 0x20000
  4010b6:	484c      	ldr	r0, [pc, #304]	; (4011e8 <start_recording+0x22c>)
	recording = false; 
  4010b8:	7033      	strb	r3, [r6, #0]
	metronome_on = false;
  4010ba:	7013      	strb	r3, [r2, #0]
	rtt_disable_interrupt(RTT, RTT_MR_RTTINCIEN);
  4010bc:	4b52      	ldr	r3, [pc, #328]	; (401208 <start_recording+0x24c>)
  4010be:	4798      	blx	r3
	del_aubio_pitchyinfast(yin); 
  4010c0:	9801      	ldr	r0, [sp, #4]
  4010c2:	4b52      	ldr	r3, [pc, #328]	; (40120c <start_recording+0x250>)
  4010c4:	4798      	blx	r3
	
	// add last note 
	events[*number_of_events].note_number = notes[(note_cnt-1) & NOTE_MASK].note_number;
  4010c6:	f10b 33ff 	add.w	r3, fp, #4294967295
  4010ca:	6829      	ldr	r1, [r5, #0]
	events[*number_of_events].velocity = 64;
  4010cc:	2240      	movs	r2, #64	; 0x40
	events[*number_of_events].note_number = notes[(note_cnt-1) & NOTE_MASK].note_number;
  4010ce:	f003 037f 	and.w	r3, r3, #127	; 0x7f
  4010d2:	f939 3023 	ldrsh.w	r3, [r9, r3, lsl #2]
  4010d6:	f828 3031 	strh.w	r3, [r8, r1, lsl #3]
	events[*number_of_events].velocity = 64;
  4010da:	682b      	ldr	r3, [r5, #0]
  4010dc:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
  4010e0:	805a      	strh	r2, [r3, #2]
	events[*number_of_events].rhythm = current_rhythm;
  4010e2:	682b      	ldr	r3, [r5, #0]
  4010e4:	eb08 08c3 	add.w	r8, r8, r3, lsl #3
  4010e8:	ed88 8a01 	vstr	s16, [r8, #4]
	(*number_of_events)++;
  4010ec:	682b      	ldr	r3, [r5, #0]
  4010ee:	3301      	adds	r3, #1
  4010f0:	602b      	str	r3, [r5, #0]
	
	
}
  4010f2:	b005      	add	sp, #20
  4010f4:	ecbd 8b02 	vpop	{d8}
  4010f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	else if (time_sig == THREE_FOUR)
  4010fc:	2b01      	cmp	r3, #1
  4010fe:	d040      	beq.n	401182 <start_recording+0x1c6>
	else if (time_sig == TWO_FOUR)
  401100:	2b02      	cmp	r3, #2
		number_of_beats_in_a_measure = 6; 
  401102:	f8df a114 	ldr.w	sl, [pc, #276]	; 401218 <start_recording+0x25c>
  401106:	bf18      	it	ne
  401108:	2306      	movne	r3, #6
  40110a:	461a      	mov	r2, r3
  40110c:	f88a 3000 	strb.w	r3, [sl]
  401110:	e772      	b.n	400ff8 <start_recording+0x3c>
			get_midi_note((float32_t *)&processBuffer[0], &notes[note_cnt & NOTE_MASK], yin);
  401112:	f00b 0a7f 	and.w	sl, fp, #127	; 0x7f
  401116:	4b3e      	ldr	r3, [pc, #248]	; (401210 <start_recording+0x254>)
  401118:	9a01      	ldr	r2, [sp, #4]
  40111a:	6818      	ldr	r0, [r3, #0]
  40111c:	ea4f 038a 	mov.w	r3, sl, lsl #2
  401120:	4619      	mov	r1, r3
  401122:	9303      	str	r3, [sp, #12]
  401124:	4b3b      	ldr	r3, [pc, #236]	; (401214 <start_recording+0x258>)
  401126:	4449      	add	r1, r9
  401128:	4798      	blx	r3
			if (notes[note_cnt & NOTE_MASK].note_number != NO_NOTE)
  40112a:	f939 302a 	ldrsh.w	r3, [r9, sl, lsl #2]
  40112e:	1c5a      	adds	r2, r3, #1
  401130:	d003      	beq.n	40113a <start_recording+0x17e>
				notes[note_cnt & NOTE_MASK].note_number += midi_note_offset; 
  401132:	9a02      	ldr	r2, [sp, #8]
  401134:	4413      	add	r3, r2
  401136:	f829 302a 	strh.w	r3, [r9, sl, lsl #2]
			if (note_cnt > 0)
  40113a:	f1bb 0f00 	cmp.w	fp, #0
  40113e:	d01b      	beq.n	401178 <start_recording+0x1bc>
				if (notes[note_cnt & NOTE_MASK].note_number != notes[(note_cnt-1) & NOTE_MASK].note_number 
  401140:	f10b 33ff 	add.w	r3, fp, #4294967295
  401144:	f939 202a 	ldrsh.w	r2, [r9, sl, lsl #2]
  401148:	f003 037f 	and.w	r3, r3, #127	; 0x7f
  40114c:	f939 1023 	ldrsh.w	r1, [r9, r3, lsl #2]
  401150:	428a      	cmp	r2, r1
  401152:	d01c      	beq.n	40118e <start_recording+0x1d2>
					events[*number_of_events].note_number = notes[(note_cnt-1) & NOTE_MASK].note_number;
  401154:	682b      	ldr	r3, [r5, #0]
					events[*number_of_events].velocity = 64;
  401156:	2240      	movs	r2, #64	; 0x40
					events[*number_of_events].note_number = notes[(note_cnt-1) & NOTE_MASK].note_number;
  401158:	f828 1033 	strh.w	r1, [r8, r3, lsl #3]
					events[*number_of_events].velocity = 64;
  40115c:	682b      	ldr	r3, [r5, #0]
  40115e:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
  401162:	805a      	strh	r2, [r3, #2]
					events[*number_of_events].rhythm = current_rhythm;
  401164:	682b      	ldr	r3, [r5, #0]
  401166:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
  40116a:	ed83 8a01 	vstr	s16, [r3, #4]
					current_rhythm = 0.25f;
  40116e:	eeb5 8a00 	vmov.f32	s16, #80	; 0x3e800000  0.250
					(*number_of_events)++;
  401172:	682b      	ldr	r3, [r5, #0]
  401174:	3301      	adds	r3, #1
  401176:	602b      	str	r3, [r5, #0]
			note_16_received = false;
  401178:	2300      	movs	r3, #0
			note_cnt++; 
  40117a:	f10b 0b01 	add.w	fp, fp, #1
			note_16_received = false;
  40117e:	7023      	strb	r3, [r4, #0]
  401180:	e787      	b.n	401092 <start_recording+0xd6>
		number_of_beats_in_a_measure = 3;
  401182:	f8df a094 	ldr.w	sl, [pc, #148]	; 401218 <start_recording+0x25c>
  401186:	2203      	movs	r2, #3
  401188:	f88a 2000 	strb.w	r2, [sl]
  40118c:	e734      	b.n	400ff8 <start_recording+0x3c>
					|| notes[note_cnt & NOTE_MASK].velocity > 2.0f*notes[(note_cnt-1) & NOTE_MASK].velocity)
  40118e:	eb09 0383 	add.w	r3, r9, r3, lsl #2
  401192:	9a03      	ldr	r2, [sp, #12]
  401194:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
  401198:	444a      	add	r2, r9
  40119a:	ee07 3a90 	vmov	s15, r3
  40119e:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
  4011a2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
  4011a6:	ee07 3a10 	vmov	s14, r3
  4011aa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
  4011ae:	ee77 7aa7 	vadd.f32	s15, s15, s15
  4011b2:	eeb4 7ae7 	vcmpe.f32	s14, s15
  4011b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4011ba:	dccb      	bgt.n	401154 <start_recording+0x198>
					current_rhythm += 0.25f;
  4011bc:	eef5 7a00 	vmov.f32	s15, #80	; 0x3e800000  0.250
  4011c0:	ee38 8a27 	vadd.f32	s16, s16, s15
  4011c4:	e7d8      	b.n	401178 <start_recording+0x1bc>
  4011c6:	bf00      	nop
  4011c8:	00402ead 	.word	0x00402ead
  4011cc:	20402c73 	.word	0x20402c73
  4011d0:	20402a6c 	.word	0x20402a6c
  4011d4:	20402c71 	.word	0x20402c71
  4011d8:	20402c74 	.word	0x20402c74
  4011dc:	20402c72 	.word	0x20402c72
  4011e0:	20402a6d 	.word	0x20402a6d
  4011e4:	20400a1c 	.word	0x20400a1c
  4011e8:	400e1830 	.word	0x400e1830
  4011ec:	004034dd 	.word	0x004034dd
  4011f0:	004034c5 	.word	0x004034c5
  4011f4:	00403531 	.word	0x00403531
  4011f8:	e000e100 	.word	0xe000e100
  4011fc:	00403509 	.word	0x00403509
  401200:	20402a6e 	.word	0x20402a6e
  401204:	20402d00 	.word	0x20402d00
  401208:	0040351d 	.word	0x0040351d
  40120c:	00402f09 	.word	0x00402f09
  401210:	20400020 	.word	0x20400020
  401214:	00400799 	.word	0x00400799
  401218:	20402c70 	.word	0x20402c70
  40121c:	20402a70 	.word	0x20402a70

00401220 <new_aubio_fft>:
#endif /* using OOURA */

  fvec_t * compspec;
};

aubio_fft_t * new_aubio_fft (uint_t winsize) {
  401220:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401224:	4605      	mov	r5, r0
  aubio_fft_t * s = AUBIO_NEW(aubio_fft_t);
  401226:	2101      	movs	r1, #1
  401228:	201c      	movs	r0, #28
  40122a:	4e1b      	ldr	r6, [pc, #108]	; (401298 <new_aubio_fft+0x78>)
  40122c:	47b0      	blx	r6
  if ((sint_t)winsize < 2) {
  40122e:	2d01      	cmp	r5, #1
  aubio_fft_t * s = AUBIO_NEW(aubio_fft_t);
  401230:	4604      	mov	r4, r0
  if ((sint_t)winsize < 2) {
  401232:	dd29      	ble.n	401288 <new_aubio_fft+0x68>
    AUBIO_ERR("fft: failed to initialize. IPP error: %d\n", status);
    goto beach;
  }

#else                         // using OOURA
  if (aubio_is_power_of_two(winsize) != 1) {
  401234:	4628      	mov	r0, r5
  401236:	4b19      	ldr	r3, [pc, #100]	; (40129c <new_aubio_fft+0x7c>)
  401238:	4798      	blx	r3
  40123a:	2801      	cmp	r0, #1
  40123c:	4607      	mov	r7, r0
  40123e:	d123      	bne.n	401288 <new_aubio_fft+0x68>
    //AUBIO_ERR("fft: can only create with sizes power of two, requested %d,"
       // " try recompiling aubio with --enable-fftw3\n", winsize);
    goto beach;
  }
  s->winsize = winsize;
  s->fft_size = winsize / 2 + 1;
  401240:	086b      	lsrs	r3, r5, #1
  s->compspec = new_fvec(winsize);
  401242:	4a17      	ldr	r2, [pc, #92]	; (4012a0 <new_aubio_fft+0x80>)
  s->winsize = winsize;
  401244:	6025      	str	r5, [r4, #0]
  s->compspec = new_fvec(winsize);
  401246:	4628      	mov	r0, r5
  s->fft_size = winsize / 2 + 1;
  401248:	3301      	adds	r3, #1
  40124a:	6063      	str	r3, [r4, #4]
  s->compspec = new_fvec(winsize);
  40124c:	4790      	blx	r2
  s->in    = AUBIO_ARRAY(smpl_t, s->winsize);
  40124e:	6825      	ldr	r5, [r4, #0]
  s->compspec = new_fvec(winsize);
  401250:	61a0      	str	r0, [r4, #24]
  s->in    = AUBIO_ARRAY(smpl_t, s->winsize);
  401252:	4639      	mov	r1, r7
  401254:	00ad      	lsls	r5, r5, #2
  401256:	4628      	mov	r0, r5
  401258:	47b0      	blx	r6
  s->out   = AUBIO_ARRAY(smpl_t, s->winsize);
  40125a:	4639      	mov	r1, r7
  s->in    = AUBIO_ARRAY(smpl_t, s->winsize);
  40125c:	60a0      	str	r0, [r4, #8]
  s->out   = AUBIO_ARRAY(smpl_t, s->winsize);
  40125e:	4628      	mov	r0, r5
  401260:	47b0      	blx	r6
  s->ip    = AUBIO_ARRAY(int   , s->fft_size);
  401262:	6865      	ldr	r5, [r4, #4]
  s->out   = AUBIO_ARRAY(smpl_t, s->winsize);
  401264:	60e0      	str	r0, [r4, #12]
  s->ip    = AUBIO_ARRAY(int   , s->fft_size);
  401266:	4639      	mov	r1, r7
  401268:	00ad      	lsls	r5, r5, #2
  40126a:	4628      	mov	r0, r5
  40126c:	47b0      	blx	r6
  40126e:	4680      	mov	r8, r0
  s->w     = AUBIO_ARRAY(smpl_t, s->fft_size);
  401270:	4639      	mov	r1, r7
  401272:	4628      	mov	r0, r5
  s->ip    = AUBIO_ARRAY(int   , s->fft_size);
  401274:	f8c4 8014 	str.w	r8, [r4, #20]
  s->w     = AUBIO_ARRAY(smpl_t, s->fft_size);
  401278:	47b0      	blx	r6
  s->ip[0] = 0;
  40127a:	2300      	movs	r3, #0
  s->w     = AUBIO_ARRAY(smpl_t, s->fft_size);
  40127c:	6120      	str	r0, [r4, #16]
  return s;

beach:
  AUBIO_FREE(s);
  return NULL;
}
  40127e:	4620      	mov	r0, r4
  s->ip[0] = 0;
  401280:	f8c8 3000 	str.w	r3, [r8]
}
  401284:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  AUBIO_FREE(s);
  401288:	4620      	mov	r0, r4
  return NULL;
  40128a:	2400      	movs	r4, #0
  AUBIO_FREE(s);
  40128c:	4b05      	ldr	r3, [pc, #20]	; (4012a4 <new_aubio_fft+0x84>)
  40128e:	4798      	blx	r3
}
  401290:	4620      	mov	r0, r4
  401292:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401296:	bf00      	nop
  401298:	00406a29 	.word	0x00406a29
  40129c:	00401669 	.word	0x00401669
  4012a0:	00401441 	.word	0x00401441
  4012a4:	00406b21 	.word	0x00406b21

004012a8 <del_aubio_fft>:

void del_aubio_fft(aubio_fft_t * s) {
  4012a8:	b570      	push	{r4, r5, r6, lr}
  4012aa:	4604      	mov	r4, r0
  ippFree(s->memInit);
  ippFree(s->memBuffer);
  ippFree(s->complexOut);

#else                         // using OOURA
  AUBIO_FREE(s->w);
  4012ac:	4d08      	ldr	r5, [pc, #32]	; (4012d0 <del_aubio_fft+0x28>)
  4012ae:	6900      	ldr	r0, [r0, #16]
  4012b0:	47a8      	blx	r5
  AUBIO_FREE(s->ip);
  4012b2:	6960      	ldr	r0, [r4, #20]
  4012b4:	47a8      	blx	r5
#endif

  del_fvec(s->compspec);
  4012b6:	4b07      	ldr	r3, [pc, #28]	; (4012d4 <del_aubio_fft+0x2c>)
  4012b8:	69a0      	ldr	r0, [r4, #24]
  4012ba:	4798      	blx	r3
  AUBIO_FREE(s->in);
  4012bc:	68a0      	ldr	r0, [r4, #8]
  4012be:	47a8      	blx	r5
  AUBIO_FREE(s->out);
  4012c0:	68e0      	ldr	r0, [r4, #12]
  4012c2:	47a8      	blx	r5
  AUBIO_FREE(s);
  4012c4:	4620      	mov	r0, r4
  4012c6:	462b      	mov	r3, r5
}
  4012c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  AUBIO_FREE(s);
  4012cc:	4718      	bx	r3
  4012ce:	bf00      	nop
  4012d0:	00406b21 	.word	0x00406b21
  4012d4:	00401469 	.word	0x00401469

004012d8 <aubio_fft_do_complex>:
void aubio_fft_rdo(aubio_fft_t * s, const cvec_t * spectrum, fvec_t * output) {
  aubio_fft_get_realimag(spectrum, s->compspec);
  aubio_fft_rdo_complex(s, s->compspec, output);
}

void aubio_fft_do_complex(aubio_fft_t * s, const fvec_t * input, fvec_t * compspec) {
  4012d8:	b5f0      	push	{r4, r5, r6, r7, lr}
  4012da:	4604      	mov	r4, r0
  uint_t i;
#ifndef HAVE_MEMCPY_HACKS
  for (i=0; i < s->winsize; i++) {
  4012dc:	6800      	ldr	r0, [r0, #0]
void aubio_fft_do_complex(aubio_fft_t * s, const fvec_t * input, fvec_t * compspec) {
  4012de:	b083      	sub	sp, #12
  4012e0:	4615      	mov	r5, r2
  for (i=0; i < s->winsize; i++) {
  4012e2:	b158      	cbz	r0, 4012fc <aubio_fft_do_complex+0x24>
  4012e4:	2300      	movs	r3, #0
  4012e6:	009e      	lsls	r6, r3, #2
    s->in[i] = input->data[i];
  4012e8:	6848      	ldr	r0, [r1, #4]
  4012ea:	68a2      	ldr	r2, [r4, #8]
  for (i=0; i < s->winsize; i++) {
  4012ec:	3301      	adds	r3, #1
    s->in[i] = input->data[i];
  4012ee:	4430      	add	r0, r6
  4012f0:	4432      	add	r2, r6
  4012f2:	6800      	ldr	r0, [r0, #0]
  4012f4:	6010      	str	r0, [r2, #0]
  for (i=0; i < s->winsize; i++) {
  4012f6:	6820      	ldr	r0, [r4, #0]
  4012f8:	4298      	cmp	r0, r3
  4012fa:	d8f4      	bhi.n	4012e6 <aubio_fft_do_complex+0xe>
    compspec->data[i] = s->complexOut[i].re;
    compspec->data[s->fft_size - i] = s->complexOut[i].im;
  }

#else                         // using OOURA
  aubio_ooura_rdft(s->winsize, 1, s->in, s->ip, s->w);
  4012fc:	6927      	ldr	r7, [r4, #16]
  4012fe:	2101      	movs	r1, #1
  401300:	6963      	ldr	r3, [r4, #20]
  401302:	68a2      	ldr	r2, [r4, #8]
  401304:	4e18      	ldr	r6, [pc, #96]	; (401368 <aubio_fft_do_complex+0x90>)
  401306:	9700      	str	r7, [sp, #0]
  401308:	47b0      	blx	r6
  compspec->data[0] = s->in[0];
  40130a:	68a2      	ldr	r2, [r4, #8]
  40130c:	686b      	ldr	r3, [r5, #4]
  40130e:	6812      	ldr	r2, [r2, #0]
  401310:	601a      	str	r2, [r3, #0]
  compspec->data[s->winsize / 2] = s->in[1];
  401312:	6822      	ldr	r2, [r4, #0]
  401314:	686b      	ldr	r3, [r5, #4]
  401316:	0852      	lsrs	r2, r2, #1
  401318:	68a1      	ldr	r1, [r4, #8]
  40131a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  40131e:	684a      	ldr	r2, [r1, #4]
  401320:	601a      	str	r2, [r3, #0]
  for (i = 1; i < s->fft_size - 1; i++) {
  401322:	6863      	ldr	r3, [r4, #4]
  401324:	3b01      	subs	r3, #1
  401326:	2b01      	cmp	r3, #1
  401328:	d91c      	bls.n	401364 <aubio_fft_do_complex+0x8c>
  40132a:	260c      	movs	r6, #12
  40132c:	2301      	movs	r3, #1
    compspec->data[i] = s->in[2 * i];
  40132e:	68a1      	ldr	r1, [r4, #8]
  401330:	686a      	ldr	r2, [r5, #4]
  401332:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  401336:	eb02 0283 	add.w	r2, r2, r3, lsl #2
  40133a:	6809      	ldr	r1, [r1, #0]
  40133c:	6011      	str	r1, [r2, #0]
    compspec->data[s->winsize - i] = - s->in[2 * i + 1];
  40133e:	68a2      	ldr	r2, [r4, #8]
  401340:	6821      	ldr	r1, [r4, #0]
  401342:	1990      	adds	r0, r2, r6
  401344:	686a      	ldr	r2, [r5, #4]
  401346:	1ac9      	subs	r1, r1, r3
  for (i = 1; i < s->fft_size - 1; i++) {
  401348:	3301      	adds	r3, #1
    compspec->data[s->winsize - i] = - s->in[2 * i + 1];
  40134a:	edd0 7a00 	vldr	s15, [r0]
  40134e:	3608      	adds	r6, #8
  401350:	eb02 0281 	add.w	r2, r2, r1, lsl #2
  401354:	eef1 7a67 	vneg.f32	s15, s15
  401358:	edc2 7a00 	vstr	s15, [r2]
  for (i = 1; i < s->fft_size - 1; i++) {
  40135c:	6862      	ldr	r2, [r4, #4]
  40135e:	3a01      	subs	r2, #1
  401360:	429a      	cmp	r2, r3
  401362:	d8e4      	bhi.n	40132e <aubio_fft_do_complex+0x56>
  }
#endif /* using OOURA */
}
  401364:	b003      	add	sp, #12
  401366:	bdf0      	pop	{r4, r5, r6, r7, pc}
  401368:	00402745 	.word	0x00402745

0040136c <aubio_fft_rdo_complex>:

void aubio_fft_rdo_complex(aubio_fft_t * s, const fvec_t * compspec, fvec_t * output) {
  40136c:	b5f0      	push	{r4, r5, r6, r7, lr}
  aubio_ippsFFTInv_CCSToR((const aubio_IppFloat *)s->complexOut, output->data, s->fftSpec, s->memBuffer);
  // apply scaling
  aubio_ippsMulC(output->data, 1.0 / s->winsize, output->data, s->fft_size);

#else                         // using OOURA
  smpl_t scale = 2.0 / s->winsize;
  40136e:	4b30      	ldr	r3, [pc, #192]	; (401430 <aubio_fft_rdo_complex+0xc4>)
void aubio_fft_rdo_complex(aubio_fft_t * s, const fvec_t * compspec, fvec_t * output) {
  401370:	4604      	mov	r4, r0
  401372:	460e      	mov	r6, r1
  401374:	4615      	mov	r5, r2
  smpl_t scale = 2.0 / s->winsize;
  401376:	4f2f      	ldr	r7, [pc, #188]	; (401434 <aubio_fft_rdo_complex+0xc8>)
void aubio_fft_rdo_complex(aubio_fft_t * s, const fvec_t * compspec, fvec_t * output) {
  401378:	ed2d 8b02 	vpush	{d8}
  40137c:	b083      	sub	sp, #12
  smpl_t scale = 2.0 / s->winsize;
  40137e:	6800      	ldr	r0, [r0, #0]
  401380:	4798      	blx	r3
  401382:	4602      	mov	r2, r0
  401384:	460b      	mov	r3, r1
  401386:	2000      	movs	r0, #0
  401388:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  40138c:	47b8      	blx	r7
  40138e:	4b2a      	ldr	r3, [pc, #168]	; (401438 <aubio_fft_rdo_complex+0xcc>)
  401390:	4798      	blx	r3
  s->out[0] = compspec->data[0];
  401392:	6872      	ldr	r2, [r6, #4]
  401394:	68e3      	ldr	r3, [r4, #12]
  smpl_t scale = 2.0 / s->winsize;
  401396:	ee08 0a10 	vmov	s16, r0
  s->out[0] = compspec->data[0];
  40139a:	6812      	ldr	r2, [r2, #0]
  40139c:	601a      	str	r2, [r3, #0]
  s->out[1] = compspec->data[s->winsize / 2];
  40139e:	6822      	ldr	r2, [r4, #0]
  4013a0:	6873      	ldr	r3, [r6, #4]
  4013a2:	0852      	lsrs	r2, r2, #1
  4013a4:	68e1      	ldr	r1, [r4, #12]
  4013a6:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  4013aa:	681b      	ldr	r3, [r3, #0]
  4013ac:	604b      	str	r3, [r1, #4]
  for (i = 1; i < s->fft_size - 1; i++) {
  4013ae:	6863      	ldr	r3, [r4, #4]
  4013b0:	3b01      	subs	r3, #1
  4013b2:	2b01      	cmp	r3, #1
  4013b4:	d91c      	bls.n	4013f0 <aubio_fft_rdo_complex+0x84>
  4013b6:	270c      	movs	r7, #12
  4013b8:	2301      	movs	r3, #1
    s->out[2 * i] = compspec->data[i];
  4013ba:	6871      	ldr	r1, [r6, #4]
  4013bc:	68e2      	ldr	r2, [r4, #12]
  4013be:	eb01 0183 	add.w	r1, r1, r3, lsl #2
  4013c2:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
  4013c6:	6809      	ldr	r1, [r1, #0]
  4013c8:	6011      	str	r1, [r2, #0]
    s->out[2 * i + 1] = - compspec->data[s->winsize - i];
  4013ca:	6822      	ldr	r2, [r4, #0]
  4013cc:	6871      	ldr	r1, [r6, #4]
  4013ce:	1ad0      	subs	r0, r2, r3
  4013d0:	68e2      	ldr	r2, [r4, #12]
  for (i = 1; i < s->fft_size - 1; i++) {
  4013d2:	3301      	adds	r3, #1
    s->out[2 * i + 1] = - compspec->data[s->winsize - i];
  4013d4:	eb01 0180 	add.w	r1, r1, r0, lsl #2
  4013d8:	443a      	add	r2, r7
  4013da:	3708      	adds	r7, #8
  4013dc:	edd1 7a00 	vldr	s15, [r1]
  4013e0:	eef1 7a67 	vneg.f32	s15, s15
  4013e4:	edc2 7a00 	vstr	s15, [r2]
  for (i = 1; i < s->fft_size - 1; i++) {
  4013e8:	6862      	ldr	r2, [r4, #4]
  4013ea:	3a01      	subs	r2, #1
  4013ec:	429a      	cmp	r2, r3
  4013ee:	d8e4      	bhi.n	4013ba <aubio_fft_rdo_complex+0x4e>
  }
  aubio_ooura_rdft(s->winsize, -1, s->out, s->ip, s->w);
  4013f0:	6927      	ldr	r7, [r4, #16]
  4013f2:	f04f 31ff 	mov.w	r1, #4294967295
  4013f6:	6963      	ldr	r3, [r4, #20]
  4013f8:	68e2      	ldr	r2, [r4, #12]
  4013fa:	6820      	ldr	r0, [r4, #0]
  4013fc:	4e0f      	ldr	r6, [pc, #60]	; (40143c <aubio_fft_rdo_complex+0xd0>)
  4013fe:	9700      	str	r7, [sp, #0]
  401400:	47b0      	blx	r6
  for (i=0; i < s->winsize; i++) {
  401402:	6823      	ldr	r3, [r4, #0]
  401404:	b17b      	cbz	r3, 401426 <aubio_fft_rdo_complex+0xba>
  401406:	2300      	movs	r3, #0
  401408:	0098      	lsls	r0, r3, #2
    output->data[i] = s->out[i] * scale;
  40140a:	68e1      	ldr	r1, [r4, #12]
  40140c:	686a      	ldr	r2, [r5, #4]
  for (i=0; i < s->winsize; i++) {
  40140e:	3301      	adds	r3, #1
    output->data[i] = s->out[i] * scale;
  401410:	4401      	add	r1, r0
  401412:	4402      	add	r2, r0
  401414:	edd1 7a00 	vldr	s15, [r1]
  401418:	ee67 7a88 	vmul.f32	s15, s15, s16
  40141c:	edc2 7a00 	vstr	s15, [r2]
  for (i=0; i < s->winsize; i++) {
  401420:	6822      	ldr	r2, [r4, #0]
  401422:	429a      	cmp	r2, r3
  401424:	d8f0      	bhi.n	401408 <aubio_fft_rdo_complex+0x9c>
  }
#endif
}
  401426:	b003      	add	sp, #12
  401428:	ecbd 8b02 	vpop	{d8}
  40142c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40142e:	bf00      	nop
  401430:	00405d25 	.word	0x00405d25
  401434:	00406065 	.word	0x00406065
  401438:	00406395 	.word	0x00406395
  40143c:	00402745 	.word	0x00402745

00401440 <new_fvec>:
*/

#include "aubio_priv.h"
#include "fvec.h"

fvec_t * new_fvec(uint_t length) {
  401440:	b570      	push	{r4, r5, r6, lr}
  fvec_t * s;
  if ((sint_t)length <= 0) {
  401442:	1e04      	subs	r4, r0, #0
  401444:	dd0b      	ble.n	40145e <new_fvec+0x1e>
    return NULL;
  }
  s = AUBIO_NEW(fvec_t);
  401446:	2101      	movs	r1, #1
  401448:	4e06      	ldr	r6, [pc, #24]	; (401464 <new_fvec+0x24>)
  40144a:	2008      	movs	r0, #8
  40144c:	47b0      	blx	r6
  40144e:	4605      	mov	r5, r0
  s->length = length;
  s->data = AUBIO_ARRAY(smpl_t, s->length);
  401450:	2101      	movs	r1, #1
  401452:	00a0      	lsls	r0, r4, #2
  s->length = length;
  401454:	602c      	str	r4, [r5, #0]
  s->data = AUBIO_ARRAY(smpl_t, s->length);
  401456:	47b0      	blx	r6
  401458:	6068      	str	r0, [r5, #4]
  return s;
}
  40145a:	4628      	mov	r0, r5
  40145c:	bd70      	pop	{r4, r5, r6, pc}
    return NULL;
  40145e:	2500      	movs	r5, #0
  401460:	e7fb      	b.n	40145a <new_fvec+0x1a>
  401462:	bf00      	nop
  401464:	00406a29 	.word	0x00406a29

00401468 <del_fvec>:

void del_fvec(fvec_t *s) {
  401468:	b570      	push	{r4, r5, r6, lr}
  40146a:	4605      	mov	r5, r0
  AUBIO_FREE(s->data);
  40146c:	4c03      	ldr	r4, [pc, #12]	; (40147c <del_fvec+0x14>)
  40146e:	6840      	ldr	r0, [r0, #4]
  401470:	47a0      	blx	r4
  AUBIO_FREE(s);
  401472:	4628      	mov	r0, r5
  401474:	4623      	mov	r3, r4
}
  401476:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  AUBIO_FREE(s);
  40147a:	4718      	bx	r3
  40147c:	00406b21 	.word	0x00406b21

00401480 <fvec_rev>:

void fvec_ones(fvec_t *s) {
  fvec_set_all (s, 1.);
}

void fvec_rev(fvec_t *s) {
  401480:	b430      	push	{r4, r5}
  uint_t j;
  for (j=0; j< FLOOR((smpl_t)s->length/2); j++) {
  401482:	2300      	movs	r3, #0
  401484:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
    ELEM_SWAP(s->data[j], s->data[s->length-1-j]);
  401488:	f06f 4440 	mvn.w	r4, #3221225472	; 0xc0000000
  for (j=0; j< FLOOR((smpl_t)s->length/2); j++) {
  40148c:	e00f      	b.n	4014ae <fvec_rev+0x2e>
    ELEM_SWAP(s->data[j], s->data[s->length-1-j]);
  40148e:	6841      	ldr	r1, [r0, #4]
  401490:	eb01 0282 	add.w	r2, r1, r2, lsl #2
  401494:	eb01 0183 	add.w	r1, r1, r3, lsl #2
  401498:	6812      	ldr	r2, [r2, #0]
  40149a:	680d      	ldr	r5, [r1, #0]
  40149c:	600a      	str	r2, [r1, #0]
  40149e:	6802      	ldr	r2, [r0, #0]
  4014a0:	6841      	ldr	r1, [r0, #4]
  4014a2:	4422      	add	r2, r4
  4014a4:	1ad2      	subs	r2, r2, r3
  4014a6:	3301      	adds	r3, #1
  4014a8:	eb01 0282 	add.w	r2, r1, r2, lsl #2
  4014ac:	6015      	str	r5, [r2, #0]
  for (j=0; j< FLOOR((smpl_t)s->length/2); j++) {
  4014ae:	edd0 7a00 	vldr	s15, [r0]
  4014b2:	ee07 3a10 	vmov	s14, r3
    ELEM_SWAP(s->data[j], s->data[s->length-1-j]);
  4014b6:	6802      	ldr	r2, [r0, #0]
  for (j=0; j< FLOOR((smpl_t)s->length/2); j++) {
  4014b8:	eef8 7a67 	vcvt.f32.u32	s15, s15
  4014bc:	eeb8 7a47 	vcvt.f32.u32	s14, s14
    ELEM_SWAP(s->data[j], s->data[s->length-1-j]);
  4014c0:	4422      	add	r2, r4
  for (j=0; j< FLOOR((smpl_t)s->length/2); j++) {
  4014c2:	ee67 7aa6 	vmul.f32	s15, s15, s13
    ELEM_SWAP(s->data[j], s->data[s->length-1-j]);
  4014c6:	1ad2      	subs	r2, r2, r3
  for (j=0; j< FLOOR((smpl_t)s->length/2); j++) {
  4014c8:	fefb 7a67 	vrintm.f32	s15, s15
  4014cc:	eeb4 7ae7 	vcmpe.f32	s14, s15
  4014d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4014d4:	d4db      	bmi.n	40148e <fvec_rev+0xe>
  }
}
  4014d6:	bc30      	pop	{r4, r5}
  4014d8:	4770      	bx	lr
  4014da:	bf00      	nop

004014dc <fvec_weighted_copy>:
  }
#endif /* HAVE_ACCELERATE */
}

void fvec_weighted_copy(const fvec_t *in, const fvec_t *weight, fvec_t *out) {
  uint_t length = MIN(in->length, MIN(out->length, weight->length));
  4014dc:	6813      	ldr	r3, [r2, #0]
void fvec_weighted_copy(const fvec_t *in, const fvec_t *weight, fvec_t *out) {
  4014de:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint_t length = MIN(in->length, MIN(out->length, weight->length));
  4014e0:	6805      	ldr	r5, [r0, #0]
  4014e2:	680c      	ldr	r4, [r1, #0]
  4014e4:	42ab      	cmp	r3, r5
  4014e6:	bf28      	it	cs
  4014e8:	462b      	movcs	r3, r5
  4014ea:	42a3      	cmp	r3, r4
  4014ec:	bf28      	it	cs
  4014ee:	4623      	movcs	r3, r4
  aubio_ippsMul(in->data, weight->data, out->data, (int)length);
#elif defined(HAVE_ACCELERATE)
  aubio_vDSP_vmul(in->data, 1, weight->data, 1, out->data, 1, length);
#else
  uint_t j;
  for (j = 0; j < length; j++) {
  4014f0:	b19b      	cbz	r3, 40151a <fvec_weighted_copy+0x3e>
  4014f2:	469e      	mov	lr, r3
  4014f4:	2300      	movs	r3, #0
  4014f6:	009e      	lsls	r6, r3, #2
    out->data[j] = in->data[j] * weight->data[j];
  4014f8:	6844      	ldr	r4, [r0, #4]
  4014fa:	684d      	ldr	r5, [r1, #4]
  for (j = 0; j < length; j++) {
  4014fc:	3301      	adds	r3, #1
    out->data[j] = in->data[j] * weight->data[j];
  4014fe:	19a7      	adds	r7, r4, r6
  401500:	6854      	ldr	r4, [r2, #4]
  401502:	4435      	add	r5, r6
  for (j = 0; j < length; j++) {
  401504:	459e      	cmp	lr, r3
    out->data[j] = in->data[j] * weight->data[j];
  401506:	edd7 7a00 	vldr	s15, [r7]
  40150a:	4434      	add	r4, r6
  40150c:	ed95 7a00 	vldr	s14, [r5]
  401510:	ee67 7a87 	vmul.f32	s15, s15, s14
  401514:	edc4 7a00 	vstr	s15, [r4]
  for (j = 0; j < length; j++) {
  401518:	d1ed      	bne.n	4014f6 <fvec_weighted_copy+0x1a>
  40151a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0040151c <fvec_copy>:
  }
#endif
}

void fvec_copy(const fvec_t *s, fvec_t *t) {
  if (s->length != t->length) {
  40151c:	6803      	ldr	r3, [r0, #0]
  40151e:	680a      	ldr	r2, [r1, #0]
  401520:	4293      	cmp	r3, r2
  401522:	d000      	beq.n	401526 <fvec_copy+0xa>
  uint_t j;
  for (j = 0; j < t->length; j++) {
    t->data[j] = s->data[j];
  }
#endif
}
  401524:	4770      	bx	lr
  for (j = 0; j < t->length; j++) {
  401526:	2b00      	cmp	r3, #0
  401528:	d0fc      	beq.n	401524 <fvec_copy+0x8>
  40152a:	2300      	movs	r3, #0
void fvec_copy(const fvec_t *s, fvec_t *t) {
  40152c:	b430      	push	{r4, r5}
  40152e:	009d      	lsls	r5, r3, #2
    t->data[j] = s->data[j];
  401530:	6844      	ldr	r4, [r0, #4]
  401532:	684a      	ldr	r2, [r1, #4]
  for (j = 0; j < t->length; j++) {
  401534:	3301      	adds	r3, #1
    t->data[j] = s->data[j];
  401536:	442c      	add	r4, r5
  401538:	442a      	add	r2, r5
  40153a:	6824      	ldr	r4, [r4, #0]
  40153c:	6014      	str	r4, [r2, #0]
  for (j = 0; j < t->length; j++) {
  40153e:	680a      	ldr	r2, [r1, #0]
  401540:	429a      	cmp	r2, r3
  401542:	d8f4      	bhi.n	40152e <fvec_copy+0x12>
}
  401544:	bc30      	pop	{r4, r5}
  401546:	4770      	bx	lr

00401548 <fvec_sum>:
  aubio_ippsSum(s->data, (int)s->length, &tmp);
#elif defined(HAVE_ACCELERATE)
  aubio_vDSP_sve(s->data, 1, &tmp, s->length);
#else
  uint_t j;
  for (j = 0; j < s->length; j++) {
  401548:	6802      	ldr	r2, [r0, #0]
  40154a:	b16a      	cbz	r2, 401568 <fvec_sum+0x20>
  40154c:	6843      	ldr	r3, [r0, #4]
  40154e:	eddf 7a08 	vldr	s15, [pc, #32]	; 401570 <fvec_sum+0x28>
  401552:	eb03 0282 	add.w	r2, r3, r2, lsl #2
    tmp += s->data[j];
  401556:	ecb3 7a01 	vldmia	r3!, {s14}
  for (j = 0; j < s->length; j++) {
  40155a:	4293      	cmp	r3, r2
    tmp += s->data[j];
  40155c:	ee77 7a87 	vadd.f32	s15, s15, s14
  for (j = 0; j < s->length; j++) {
  401560:	d1f9      	bne.n	401556 <fvec_sum+0xe>
  }
#endif
  return tmp;
}
  401562:	ee17 0a90 	vmov	r0, s15
  401566:	4770      	bx	lr
  smpl_t tmp = 0.0;
  401568:	eddf 7a01 	vldr	s15, [pc, #4]	; 401570 <fvec_sum+0x28>
  return tmp;
  40156c:	e7f9      	b.n	401562 <fvec_sum+0x1a>
  40156e:	bf00      	nop
  401570:	00000000 	.word	0x00000000

00401574 <fvec_min_elem>:
fvec_min_elem (fvec_t * s)
{
#ifndef HAVE_ACCELERATE
  uint_t j, pos = 0.;
  smpl_t tmp = s->data[0];
  for (j = 0; j < s->length; j++) {
  401574:	e890 0006 	ldmia.w	r0, {r1, r2}
  smpl_t tmp = s->data[0];
  401578:	edd2 7a00 	vldr	s15, [r2]
  for (j = 0; j < s->length; j++) {
  40157c:	b179      	cbz	r1, 40159e <fvec_min_elem+0x2a>
  40157e:	2000      	movs	r0, #0
  401580:	4603      	mov	r3, r0
    pos = (tmp < s->data[j]) ? pos : j;
  401582:	ecb2 7a01 	vldmia	r2!, {s14}
  401586:	eeb4 7ae7 	vcmpe.f32	s14, s15
    tmp = (tmp < s->data[j]) ? tmp : s->data[j];
  40158a:	fec7 7ac7 	vminnm.f32	s15, s15, s14
    pos = (tmp < s->data[j]) ? pos : j;
  40158e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  401592:	bfd8      	it	le
  401594:	4618      	movle	r0, r3
  for (j = 0; j < s->length; j++) {
  401596:	3301      	adds	r3, #1
  401598:	428b      	cmp	r3, r1
  40159a:	d1f2      	bne.n	401582 <fvec_min_elem+0xe>
  40159c:	4770      	bx	lr
  uint_t j, pos = 0.;
  40159e:	4608      	mov	r0, r1
  smpl_t tmp = 0.;
  vDSP_Length pos = 0;
  aubio_vDSP_minvi(s->data, 1, &tmp, &pos, s->length);
#endif
  return (uint_t)pos;
}
  4015a0:	4770      	bx	lr
  4015a2:	bf00      	nop

004015a4 <fvec_add>:

void
fvec_add (fvec_t * o, smpl_t val)
{
  uint_t j;
  for (j = 0; j < o->length; j++) {
  4015a4:	6803      	ldr	r3, [r0, #0]
{
  4015a6:	ee07 1a10 	vmov	s14, r1
  for (j = 0; j < o->length; j++) {
  4015aa:	b16b      	cbz	r3, 4015c8 <fvec_add+0x24>
  4015ac:	2200      	movs	r2, #0
    o->data[j] += val;
  4015ae:	6843      	ldr	r3, [r0, #4]
  4015b0:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  for (j = 0; j < o->length; j++) {
  4015b4:	3201      	adds	r2, #1
    o->data[j] += val;
  4015b6:	edd3 7a00 	vldr	s15, [r3]
  4015ba:	ee77 7a87 	vadd.f32	s15, s15, s14
  4015be:	edc3 7a00 	vstr	s15, [r3]
  for (j = 0; j < o->length; j++) {
  4015c2:	6803      	ldr	r3, [r0, #0]
  4015c4:	4293      	cmp	r3, r2
  4015c6:	d8f2      	bhi.n	4015ae <fvec_add+0xa>
  4015c8:	4770      	bx	lr
  4015ca:	bf00      	nop

004015cc <fvec_quadratic_peak_pos>:
}

smpl_t fvec_quadratic_peak_pos (const fvec_t * x, uint_t pos) {
  smpl_t s0, s1, s2; uint_t x0, x2;
  smpl_t half = .5, two = 2.;
  if (pos == 0 || pos == x->length - 1) return (float)pos;
  4015cc:	b359      	cbz	r1, 401626 <fvec_quadratic_peak_pos+0x5a>
  4015ce:	6802      	ldr	r2, [r0, #0]
  4015d0:	1e53      	subs	r3, r2, #1
  4015d2:	4299      	cmp	r1, r3
  4015d4:	d027      	beq.n	401626 <fvec_quadratic_peak_pos+0x5a>
  x0 = (pos < 1) ? pos : pos - 1;
  x2 = (pos + 1 < x->length) ? pos + 1 : pos;
  4015d6:	1c4b      	adds	r3, r1, #1
  if (x0 == pos) return (x->data[pos] <= x->data[x2]) ? (float)pos : (float)x2;
  if (x2 == pos) return (x->data[pos] <= x->data[x0]) ? (float)pos : (float)x0;
  4015d8:	429a      	cmp	r2, r3
smpl_t fvec_quadratic_peak_pos (const fvec_t * x, uint_t pos) {
  4015da:	b410      	push	{r4}
  x0 = (pos < 1) ? pos : pos - 1;
  4015dc:	f101 34ff 	add.w	r4, r1, #4294967295
  if (x2 == pos) return (x->data[pos] <= x->data[x0]) ? (float)pos : (float)x0;
  4015e0:	6843      	ldr	r3, [r0, #4]
  4015e2:	d927      	bls.n	401634 <fvec_quadratic_peak_pos+0x68>
  s0 = x->data[x0];
  4015e4:	eb03 0384 	add.w	r3, r3, r4, lsl #2
  s1 = x->data[pos];
  s2 = x->data[x2];
  return (float)(pos + half * (s0 - s2 ) / (s0 - two * s1 + s2));
  4015e8:	eeb0 5a00 	vmov.f32	s10, #0	; 0x40000000  2.0
  4015ec:	eef6 5a00 	vmov.f32	s11, #96	; 0x3f000000  0.5
  4015f0:	ee07 1a90 	vmov	s15, r1
  s2 = x->data[x2];
  4015f4:	ed93 6a02 	vldr	s12, [r3, #8]
  s0 = x->data[x0];
  4015f8:	ed93 7a00 	vldr	s14, [r3]
  return (float)(pos + half * (s0 - s2 ) / (s0 - two * s1 + s2));
  4015fc:	eef8 7a67 	vcvt.f32.u32	s15, s15
  401600:	edd3 4a01 	vldr	s9, [r3, #4]
  401604:	ee77 6a06 	vadd.f32	s13, s14, s12
  401608:	ee37 7a46 	vsub.f32	s14, s14, s12
  40160c:	eee4 6ac5 	vfms.f32	s13, s9, s10
  401610:	ee27 7a25 	vmul.f32	s14, s14, s11
  401614:	ee87 6a26 	vdiv.f32	s12, s14, s13
  401618:	ee76 7a27 	vadd.f32	s15, s12, s15
}
  40161c:	ee17 0a90 	vmov	r0, s15
  401620:	f85d 4b04 	ldr.w	r4, [sp], #4
  401624:	4770      	bx	lr
  if (pos == 0 || pos == x->length - 1) return (float)pos;
  401626:	ee07 1a90 	vmov	s15, r1
  40162a:	eef8 7a67 	vcvt.f32.u32	s15, s15
}
  40162e:	ee17 0a90 	vmov	r0, s15
  401632:	4770      	bx	lr
  if (x2 == pos) return (x->data[pos] <= x->data[x0]) ? (float)pos : (float)x0;
  401634:	eb03 0381 	add.w	r3, r3, r1, lsl #2
  401638:	ed93 7a00 	vldr	s14, [r3]
  40163c:	ed53 7a01 	vldr	s15, [r3, #-4]
  401640:	eeb4 7ae7 	vcmpe.f32	s14, s15
  401644:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  401648:	d808      	bhi.n	40165c <fvec_quadratic_peak_pos+0x90>
  if (pos == 0 || pos == x->length - 1) return (float)pos;
  40164a:	ee07 1a90 	vmov	s15, r1
}
  40164e:	f85d 4b04 	ldr.w	r4, [sp], #4
  if (pos == 0 || pos == x->length - 1) return (float)pos;
  401652:	eef8 7a67 	vcvt.f32.u32	s15, s15
}
  401656:	ee17 0a90 	vmov	r0, s15
  40165a:	4770      	bx	lr
  if (x2 == pos) return (x->data[pos] <= x->data[x0]) ? (float)pos : (float)x0;
  40165c:	ee07 4a90 	vmov	s15, r4
  401660:	eef8 7a67 	vcvt.f32.u32	s15, s15
  401664:	e7da      	b.n	40161c <fvec_quadratic_peak_pos+0x50>
  401666:	bf00      	nop

00401668 <aubio_is_power_of_two>:
}

uint_t
aubio_is_power_of_two (uint_t a)
{
  if ((a & (a - 1)) == 0) {
  401668:	1e43      	subs	r3, r0, #1
  40166a:	4203      	tst	r3, r0
    return 1;
  } else {
    return 0;
  }
}
  40166c:	bf0c      	ite	eq
  40166e:	2001      	moveq	r0, #1
  401670:	2000      	movne	r0, #0
  401672:	4770      	bx	lr

00401674 <bitrv2>:
void bitrv2(int n, int *ip, smpl_t *a)
{
    int j, j1, k, k1, l, m, m2;
    smpl_t xr, xi, yr, yi;
    
    ip[0] = 0;
  401674:	2300      	movs	r3, #0
    l = n;
    m = 1;
    while ((m << 3) < l) {
  401676:	2808      	cmp	r0, #8
{
  401678:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ip[0] = 0;
  40167c:	600b      	str	r3, [r1, #0]
{
  40167e:	b089      	sub	sp, #36	; 0x24
    while ((m << 3) < l) {
  401680:	dd60      	ble.n	401744 <bitrv2+0xd0>
  401682:	1f0b      	subs	r3, r1, #4
  401684:	2701      	movs	r7, #1
  401686:	469e      	mov	lr, r3
  401688:	9305      	str	r3, [sp, #20]
  40168a:	ea4f 0987 	mov.w	r9, r7, lsl #2
        l >>= 1;
  40168e:	4675      	mov	r5, lr
  401690:	1040      	asrs	r0, r0, #1
  401692:	eb01 0409 	add.w	r4, r1, r9
  401696:	eb04 0609 	add.w	r6, r4, r9
        for (j = 0; j < m; j++) {
            ip[m + j] = ip[j] + l;
  40169a:	f855 3f04 	ldr.w	r3, [r5, #4]!
  40169e:	4403      	add	r3, r0
  4016a0:	f844 3b04 	str.w	r3, [r4], #4
        for (j = 0; j < m; j++) {
  4016a4:	42a6      	cmp	r6, r4
  4016a6:	d1f8      	bne.n	40169a <bitrv2+0x26>
    while ((m << 3) < l) {
  4016a8:	013b      	lsls	r3, r7, #4
        }
        m <<= 1;
  4016aa:	007f      	lsls	r7, r7, #1
    while ((m << 3) < l) {
  4016ac:	4283      	cmp	r3, r0
  4016ae:	dbec      	blt.n	40168a <bitrv2+0x16>
  4016b0:	9707      	str	r7, [sp, #28]
    }
    m2 = 2 * m;
  4016b2:	46ca      	mov	sl, r9
    if ((m << 3) == l) {
  4016b4:	d04d      	beq.n	401752 <bitrv2+0xde>
  4016b6:	f04f 0a02 	mov.w	sl, #2
  4016ba:	f8dd b014 	ldr.w	fp, [sp, #20]
  4016be:	f04f 0800 	mov.w	r8, #0
            a[k1 + 1] = xi;
        }
    } else {
        for (k = 1; k < m; k++) {
            for (j = 0; j < k; j++) {
                j1 = 2 * j + ip[k];
  4016c2:	f851 001a 	ldr.w	r0, [r1, sl, lsl #1]
                k1 = 2 * k + ip[j];
  4016c6:	f85b 3f04 	ldr.w	r3, [fp, #4]!
                j1 = 2 * j + ip[k];
  4016ca:	4440      	add	r0, r8
  4016cc:	f108 0802 	add.w	r8, r8, #2
                k1 = 2 * k + ip[j];
  4016d0:	4453      	add	r3, sl
                xr = a[j1];
  4016d2:	0085      	lsls	r5, r0, #2
                yi = a[k1 + 1];
                a[j1] = yr;
                a[j1 + 1] = yi;
                a[k1] = xr;
                a[k1 + 1] = xi;
                j1 += m2;
  4016d4:	4448      	add	r0, r9
                yr = a[k1];
  4016d6:	009c      	lsls	r4, r3, #2
                k1 += m2;
  4016d8:	444b      	add	r3, r9
                xi = a[j1 + 1];
  4016da:	f105 0c04 	add.w	ip, r5, #4
                xr = a[j1];
  4016de:	0080      	lsls	r0, r0, #2
                yi = a[k1 + 1];
  4016e0:	f104 0e04 	add.w	lr, r4, #4
                xi = a[j1 + 1];
                yr = a[k1];
  4016e4:	009b      	lsls	r3, r3, #2
                xi = a[j1 + 1];
  4016e6:	4494      	add	ip, r2
                xr = a[j1];
  4016e8:	4415      	add	r5, r2
                yi = a[k1 + 1];
  4016ea:	4496      	add	lr, r2
                yr = a[k1];
  4016ec:	4414      	add	r4, r2
                xi = a[j1 + 1];
  4016ee:	1d07      	adds	r7, r0, #4
                yi = a[k1 + 1];
  4016f0:	1d1e      	adds	r6, r3, #4
                xi = a[j1 + 1];
  4016f2:	eddc 7a00 	vldr	s15, [ip]
                xr = a[j1];
  4016f6:	4410      	add	r0, r2
                yi = a[k1 + 1];
  4016f8:	edde 6a00 	vldr	s13, [lr]
                xi = a[j1 + 1];
  4016fc:	4417      	add	r7, r2
                xr = a[j1];
  4016fe:	ed95 7a00 	vldr	s14, [r5]
                yr = a[k1];
  401702:	4413      	add	r3, r2
                yr = a[k1];
  401704:	ed94 6a00 	vldr	s12, [r4]
                yi = a[k1 + 1];
  401708:	4416      	add	r6, r2
            for (j = 0; j < k; j++) {
  40170a:	45c2      	cmp	sl, r8
                a[j1] = yr;
  40170c:	ed85 6a00 	vstr	s12, [r5]
                a[j1 + 1] = yi;
  401710:	edcc 6a00 	vstr	s13, [ip]
                a[k1] = xr;
  401714:	ed84 7a00 	vstr	s14, [r4]
                a[k1 + 1] = xi;
  401718:	edce 7a00 	vstr	s15, [lr]
                xi = a[j1 + 1];
  40171c:	683c      	ldr	r4, [r7, #0]
                xr = a[j1];
  40171e:	6805      	ldr	r5, [r0, #0]
                yr = a[k1];
  401720:	f8d3 c000 	ldr.w	ip, [r3]
                yi = a[k1 + 1];
  401724:	f8d6 e000 	ldr.w	lr, [r6]
                a[j1] = yr;
  401728:	f8c0 c000 	str.w	ip, [r0]
                a[j1 + 1] = yi;
  40172c:	f8c7 e000 	str.w	lr, [r7]
                a[k1] = xr;
  401730:	601d      	str	r5, [r3, #0]
                a[k1 + 1] = xi;
  401732:	6034      	str	r4, [r6, #0]
            for (j = 0; j < k; j++) {
  401734:	d1c5      	bne.n	4016c2 <bitrv2+0x4e>
  401736:	f10a 0a02 	add.w	sl, sl, #2
        for (k = 1; k < m; k++) {
  40173a:	45d1      	cmp	r9, sl
  40173c:	d1bd      	bne.n	4016ba <bitrv2+0x46>
            }
        }
    }
}
  40173e:	b009      	add	sp, #36	; 0x24
  401740:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if ((m << 3) == l) {
  401744:	d1fb      	bne.n	40173e <bitrv2+0xca>
  401746:	1f0b      	subs	r3, r1, #4
    m2 = 2 * m;
  401748:	f04f 0a02 	mov.w	sl, #2
  40174c:	9305      	str	r3, [sp, #20]
    m = 1;
  40174e:	2301      	movs	r3, #1
  401750:	9307      	str	r3, [sp, #28]
  401752:	ea4f 034a 	mov.w	r3, sl, lsl #1
        for (k = 0; k < m; k++) {
  401756:	f8dd b014 	ldr.w	fp, [sp, #20]
  40175a:	f8cd a018 	str.w	sl, [sp, #24]
  40175e:	9301      	str	r3, [sp, #4]
  401760:	2300      	movs	r3, #0
  401762:	9304      	str	r3, [sp, #16]
            j1 = 2 * k + m2 + ip[k];
  401764:	f85b 3f04 	ldr.w	r3, [fp, #4]!
        for (k = 0; k < m; k++) {
  401768:	9904      	ldr	r1, [sp, #16]
            j1 = 2 * k + m2 + ip[k];
  40176a:	9806      	ldr	r0, [sp, #24]
        for (k = 0; k < m; k++) {
  40176c:	3101      	adds	r1, #1
            j1 = 2 * k + m2 + ip[k];
  40176e:	4403      	add	r3, r0
        for (k = 0; k < m; k++) {
  401770:	9104      	str	r1, [sp, #16]
            k1 = j1 + m2;
  401772:	eb03 010a 	add.w	r1, r3, sl
            xr = a[j1];
  401776:	009b      	lsls	r3, r3, #2
            yr = a[k1];
  401778:	0089      	lsls	r1, r1, #2
            xi = a[j1 + 1];
  40177a:	1d1c      	adds	r4, r3, #4
            xr = a[j1];
  40177c:	4413      	add	r3, r2
            yi = a[k1 + 1];
  40177e:	1d08      	adds	r0, r1, #4
            yr = a[k1];
  401780:	4411      	add	r1, r2
            xr = a[j1];
  401782:	681e      	ldr	r6, [r3, #0]
            xi = a[j1 + 1];
  401784:	4414      	add	r4, r2
            yi = a[k1 + 1];
  401786:	4410      	add	r0, r2
            yr = a[k1];
  401788:	f8d1 e000 	ldr.w	lr, [r1]
            xi = a[j1 + 1];
  40178c:	6825      	ldr	r5, [r4, #0]
            yi = a[k1 + 1];
  40178e:	6807      	ldr	r7, [r0, #0]
            a[j1] = yr;
  401790:	f8c3 e000 	str.w	lr, [r3]
            a[j1 + 1] = yi;
  401794:	6027      	str	r7, [r4, #0]
        for (k = 0; k < m; k++) {
  401796:	9b07      	ldr	r3, [sp, #28]
            a[k1] = xr;
  401798:	600e      	str	r6, [r1, #0]
        for (k = 0; k < m; k++) {
  40179a:	9904      	ldr	r1, [sp, #16]
            a[k1 + 1] = xi;
  40179c:	6005      	str	r5, [r0, #0]
        for (k = 0; k < m; k++) {
  40179e:	4299      	cmp	r1, r3
  4017a0:	d0cd      	beq.n	40173e <bitrv2+0xca>
  4017a2:	9b04      	ldr	r3, [sp, #16]
  4017a4:	f8dd 9014 	ldr.w	r9, [sp, #20]
  4017a8:	005b      	lsls	r3, r3, #1
  4017aa:	9303      	str	r3, [sp, #12]
  4017ac:	2300      	movs	r3, #0
  4017ae:	9300      	str	r3, [sp, #0]
                k1 = 2 * k + ip[j];
  4017b0:	f859 3f04 	ldr.w	r3, [r9, #4]!
  4017b4:	9803      	ldr	r0, [sp, #12]
                j1 = 2 * j + ip[k];
  4017b6:	f8db 1004 	ldr.w	r1, [fp, #4]
            for (j = 0; j < k; j++) {
  4017ba:	45cb      	cmp	fp, r9
                j1 = 2 * j + ip[k];
  4017bc:	9c00      	ldr	r4, [sp, #0]
                k1 = 2 * k + ip[j];
  4017be:	4403      	add	r3, r0
                j1 = 2 * j + ip[k];
  4017c0:	4421      	add	r1, r4
                yr = a[k1];
  4017c2:	ea4f 0783 	mov.w	r7, r3, lsl #2
                xr = a[j1];
  4017c6:	f104 0402 	add.w	r4, r4, #2
  4017ca:	ea4f 0081 	mov.w	r0, r1, lsl #2
                yi = a[k1 + 1];
  4017ce:	f107 0804 	add.w	r8, r7, #4
                xr = a[j1];
  4017d2:	9400      	str	r4, [sp, #0]
                yr = a[k1];
  4017d4:	4417      	add	r7, r2
                k1 += 2 * m2;
  4017d6:	9c01      	ldr	r4, [sp, #4]
                yi = a[k1 + 1];
  4017d8:	4490      	add	r8, r2
                j1 += m2;
  4017da:	4451      	add	r1, sl
                yr = a[k1];
  4017dc:	ed97 6a00 	vldr	s12, [r7]
                k1 += 2 * m2;
  4017e0:	4423      	add	r3, r4
                xi = a[j1 + 1];
  4017e2:	f100 0404 	add.w	r4, r0, #4
                yi = a[k1 + 1];
  4017e6:	edd8 6a00 	vldr	s13, [r8]
                xr = a[j1];
  4017ea:	ea4f 0681 	mov.w	r6, r1, lsl #2
                xi = a[j1 + 1];
  4017ee:	4414      	add	r4, r2
                xr = a[j1];
  4017f0:	4410      	add	r0, r2
                j1 += m2;
  4017f2:	4451      	add	r1, sl
                yr = a[k1];
  4017f4:	ea4f 0583 	mov.w	r5, r3, lsl #2
                xi = a[j1 + 1];
  4017f8:	edd4 7a00 	vldr	s15, [r4]
                k1 -= m2;
  4017fc:	eba3 030a 	sub.w	r3, r3, sl
                xr = a[j1];
  401800:	ed90 7a00 	vldr	s14, [r0]
                xi = a[j1 + 1];
  401804:	f106 0c04 	add.w	ip, r6, #4
                a[j1] = yr;
  401808:	ed80 6a00 	vstr	s12, [r0]
                yi = a[k1 + 1];
  40180c:	f105 0e04 	add.w	lr, r5, #4
                a[j1 + 1] = yi;
  401810:	edc4 6a00 	vstr	s13, [r4]
                xr = a[j1];
  401814:	ea4f 0481 	mov.w	r4, r1, lsl #2
                j1 += m2;
  401818:	4451      	add	r1, sl
                yr = a[k1];
  40181a:	4415      	add	r5, r2
                a[k1] = xr;
  40181c:	ed87 7a00 	vstr	s14, [r7]
                xr = a[j1];
  401820:	4416      	add	r6, r2
                j1 += m2;
  401822:	9102      	str	r1, [sp, #8]
                xi = a[j1 + 1];
  401824:	4494      	add	ip, r2
                k1 += 2 * m2;
  401826:	9901      	ldr	r1, [sp, #4]
                yi = a[k1 + 1];
  401828:	4496      	add	lr, r2
                a[k1 + 1] = xi;
  40182a:	edc8 7a00 	vstr	s15, [r8]
                yr = a[k1];
  40182e:	ea4f 0083 	mov.w	r0, r3, lsl #2
                yr = a[k1];
  401832:	edd5 6a00 	vldr	s13, [r5]
                k1 += 2 * m2;
  401836:	440b      	add	r3, r1
                xr = a[j1];
  401838:	9902      	ldr	r1, [sp, #8]
                xi = a[j1 + 1];
  40183a:	f104 0704 	add.w	r7, r4, #4
                xr = a[j1];
  40183e:	edd6 7a00 	vldr	s15, [r6]
                yr = a[k1];
  401842:	ea4f 0383 	mov.w	r3, r3, lsl #2
                xi = a[j1 + 1];
  401846:	f8dc 8000 	ldr.w	r8, [ip]
                xr = a[j1];
  40184a:	ea4f 0181 	mov.w	r1, r1, lsl #2
                yi = a[k1 + 1];
  40184e:	ed9e 7a00 	vldr	s14, [lr]
                xr = a[j1];
  401852:	4414      	add	r4, r2
                a[j1] = yr;
  401854:	edc6 6a00 	vstr	s13, [r6]
                yi = a[k1 + 1];
  401858:	f100 0604 	add.w	r6, r0, #4
                a[j1 + 1] = yi;
  40185c:	ed8c 7a00 	vstr	s14, [ip]
                xi = a[j1 + 1];
  401860:	4417      	add	r7, r2
                a[k1] = xr;
  401862:	edc5 7a00 	vstr	s15, [r5]
                yr = a[k1];
  401866:	4410      	add	r0, r2
                yi = a[k1 + 1];
  401868:	4416      	add	r6, r2
                xi = a[j1 + 1];
  40186a:	f101 0c04 	add.w	ip, r1, #4
                yi = a[k1 + 1];
  40186e:	f103 0504 	add.w	r5, r3, #4
                a[k1 + 1] = xi;
  401872:	f8ce 8000 	str.w	r8, [lr]
                xi = a[j1 + 1];
  401876:	f8d7 e000 	ldr.w	lr, [r7]
                xr = a[j1];
  40187a:	4411      	add	r1, r2
                xr = a[j1];
  40187c:	f8d4 8000 	ldr.w	r8, [r4]
                xi = a[j1 + 1];
  401880:	4494      	add	ip, r2
                yr = a[k1];
  401882:	ed90 7a00 	vldr	s14, [r0]
                yr = a[k1];
  401886:	4413      	add	r3, r2
                yi = a[k1 + 1];
  401888:	edd6 7a00 	vldr	s15, [r6]
                yi = a[k1 + 1];
  40188c:	4415      	add	r5, r2
                a[j1] = yr;
  40188e:	ed84 7a00 	vstr	s14, [r4]
                a[j1 + 1] = yi;
  401892:	edc7 7a00 	vstr	s15, [r7]
                a[k1] = xr;
  401896:	f8c0 8000 	str.w	r8, [r0]
                a[k1 + 1] = xi;
  40189a:	f8c6 e000 	str.w	lr, [r6]
                xr = a[j1];
  40189e:	680c      	ldr	r4, [r1, #0]
                xi = a[j1 + 1];
  4018a0:	f8dc 0000 	ldr.w	r0, [ip]
                yr = a[k1];
  4018a4:	681f      	ldr	r7, [r3, #0]
                yi = a[k1 + 1];
  4018a6:	682e      	ldr	r6, [r5, #0]
                a[j1] = yr;
  4018a8:	600f      	str	r7, [r1, #0]
                a[j1 + 1] = yi;
  4018aa:	f8cc 6000 	str.w	r6, [ip]
                a[k1] = xr;
  4018ae:	601c      	str	r4, [r3, #0]
                a[k1 + 1] = xi;
  4018b0:	6028      	str	r0, [r5, #0]
            for (j = 0; j < k; j++) {
  4018b2:	f47f af7d 	bne.w	4017b0 <bitrv2+0x13c>
  4018b6:	9b06      	ldr	r3, [sp, #24]
  4018b8:	3302      	adds	r3, #2
  4018ba:	9306      	str	r3, [sp, #24]
  4018bc:	e752      	b.n	401764 <bitrv2+0xf0>
  4018be:	bf00      	nop

004018c0 <cft1st>:
    y2i = x0i - x2i;
    y1r = x1r - x3i;
    y1i = x1i + x3r;
    y3r = x1r + x3i;
    y3i = x1i - x3r;
    x0r = a[8] + a[10];
  4018c0:	edd1 7a0a 	vldr	s15, [r1, #40]	; 0x28
    a[9] = y0i - y4i;
    a[4] = y2r - y6i;
    a[5] = y2i + y6r;
    a[12] = y2r + y6i;
    a[13] = y2i - y6r;
    if (n > 16) {
  4018c4:	2810      	cmp	r0, #16
    x0r = a[8] + a[10];
  4018c6:	edd1 5a08 	vldr	s11, [r1, #32]
    x2i = a[13] + a[15];
  4018ca:	ed91 7a0f 	vldr	s14, [r1, #60]	; 0x3c
  4018ce:	edd1 6a0d 	vldr	s13, [r1, #52]	; 0x34
    x1r = a[8] - a[10];
  4018d2:	ee35 4ae7 	vsub.f32	s8, s11, s15
    x2r = a[12] + a[14];
  4018d6:	edd1 1a0c 	vldr	s3, [r1, #48]	; 0x30
    x0r = a[8] + a[10];
  4018da:	ee75 5aa7 	vadd.f32	s11, s11, s15
    x2r = a[12] + a[14];
  4018de:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
    x3i = a[13] - a[15];
  4018e2:	ee36 6ac7 	vsub.f32	s12, s13, s14
    x2i = a[5] + a[7];
  4018e6:	ed91 3a07 	vldr	s6, [r1, #28]
    x2i = a[13] + a[15];
  4018ea:	ee76 2a87 	vadd.f32	s5, s13, s14
    x0i = a[9] + a[11];
  4018ee:	ed91 5a0b 	vldr	s10, [r1, #44]	; 0x2c
    x3r = a[12] - a[14];
  4018f2:	ee71 6ae7 	vsub.f32	s13, s3, s15
    x0r = a[0] + a[2];
  4018f6:	ed91 7a00 	vldr	s14, [r1]
    x2r = a[12] + a[14];
  4018fa:	ee71 1aa7 	vadd.f32	s3, s3, s15
    x2i = a[5] + a[7];
  4018fe:	ed91 2a05 	vldr	s4, [r1, #20]
    wn4r = w[2];
  401902:	edd2 7a02 	vldr	s15, [r2, #8]
    x0i = a[1] + a[3];
  401906:	ed91 0a03 	vldr	s0, [r1, #12]
    x2r = a[4] + a[6];
  40190a:	edd1 3a06 	vldr	s7, [r1, #24]
  40190e:	edd1 4a04 	vldr	s9, [r1, #16]
{
  401912:	ed2d 8b10 	vpush	{d8-d15}
    x0i = a[9] + a[11];
  401916:	ed91 8a09 	vldr	s16, [r1, #36]	; 0x24
    wn4r = w[2];
  40191a:	eeb0 ba67 	vmov.f32	s22, s15
    x0r = a[0] + a[2];
  40191e:	edd1 9a02 	vldr	s19, [r1, #8]
    x0r = x1r - x3i;
  401922:	ee34 aa46 	vsub.f32	s20, s8, s12
    x1i = a[9] - a[11];
  401926:	ee78 0a45 	vsub.f32	s1, s16, s10
    x0i = a[1] + a[3];
  40192a:	edd1 8a01 	vldr	s17, [r1, #4]
    x3i = a[5] - a[7];
  40192e:	ee32 9a43 	vsub.f32	s18, s4, s6
{
  401932:	b086      	sub	sp, #24
    x2r = x1r + x3i;
  401934:	ee34 4a06 	vadd.f32	s8, s8, s12
    x1r = a[0] - a[2];
  401938:	ee37 6a69 	vsub.f32	s12, s14, s19
    wn4r = w[2];
  40193c:	edcd 7a04 	vstr	s15, [sp, #16]
    x0i = x1i + x3r;
  401940:	ee30 1aa6 	vadd.f32	s2, s1, s13
    x0i = a[1] + a[3];
  401944:	ee78 7a80 	vadd.f32	s15, s17, s0
    x2i = x1i - x3r;
  401948:	ee70 0ae6 	vsub.f32	s1, s1, s13
    x2i = a[5] + a[7];
  40194c:	ee32 2a03 	vadd.f32	s4, s4, s6
    x1i = a[1] - a[3];
  401950:	ee78 6ac0 	vsub.f32	s13, s17, s0
    y1r = x1r - x3i;
  401954:	ee36 3a49 	vsub.f32	s6, s12, s18
    x3r = a[4] - a[6];
  401958:	ee34 0ae3 	vsub.f32	s0, s9, s7
    x2r = a[4] + a[6];
  40195c:	ee74 4aa3 	vadd.f32	s9, s9, s7
    a[10] = y1r - y5r;
  401960:	eef1 3a4b 	vneg.f32	s7, s22
    x0i = a[9] + a[11];
  401964:	ee38 5a05 	vadd.f32	s10, s16, s10
    y3r = x1r + x3i;
  401968:	ee36 6a09 	vadd.f32	s12, s12, s18
    y5r = wn4r * (x0r - x0i);
  40196c:	ee3a 8a41 	vsub.f32	s16, s20, s2
    a[10] = y1r - y5r;
  401970:	edcd 3a05 	vstr	s7, [sp, #20]
  401974:	eeb0 9a63 	vmov.f32	s18, s7
    y5i = wn4r * (x0r + x0i);
  401978:	ee3a 1a01 	vadd.f32	s2, s20, s2
    y1i = x1i + x3r;
  40197c:	ee76 3a80 	vadd.f32	s7, s13, s0
    a[2] = y1r + y5r;
  401980:	eef0 8a43 	vmov.f32	s17, s6
    y3i = x1i - x3r;
  401984:	ee76 6ac0 	vsub.f32	s13, s13, s0
    a[10] = y1r - y5r;
  401988:	eea9 3a08 	vfma.f32	s6, s18, s16
    y7i = wn4r * (x2r + x2i);
  40198c:	ee34 0a20 	vadd.f32	s0, s8, s1
    a[2] = y1r + y5r;
  401990:	eeeb 8a08 	vfma.f32	s17, s22, s16
    y7r = wn4r * (x2r - x2i);
  401994:	ee34 4a60 	vsub.f32	s8, s8, s1
    a[3] = y1i + y5i;
  401998:	eeb0 8a63 	vmov.f32	s16, s7
    a[11] = y1i - y5i;
  40199c:	eee9 3a01 	vfma.f32	s7, s18, s2
    x0r = a[0] + a[2];
  4019a0:	ee37 7a29 	vadd.f32	s14, s14, s19
    a[10] = y1r - y5r;
  4019a4:	ed81 3a0a 	vstr	s6, [r1, #40]	; 0x28
    a[3] = y1i + y5i;
  4019a8:	eeab 8a01 	vfma.f32	s16, s22, s2
    a[6] = y3r - y7i;
  4019ac:	eef0 0a46 	vmov.f32	s1, s12
    a[2] = y1r + y5r;
  4019b0:	edc1 8a02 	vstr	s17, [r1, #8]
    a[14] = y3r + y7i;
  4019b4:	eeab 6a00 	vfma.f32	s12, s22, s0
    a[7] = y3i + y7r;
  4019b8:	eeb0 1a66 	vmov.f32	s2, s13
    a[15] = y3i - y7r;
  4019bc:	eee9 6a04 	vfma.f32	s13, s18, s8
    a[11] = y1i - y5i;
  4019c0:	edc1 3a0b 	vstr	s7, [r1, #44]	; 0x2c
    y4r = x0r + x2r;
  4019c4:	ee75 3aa1 	vadd.f32	s7, s11, s3
    a[7] = y3i + y7r;
  4019c8:	eeab 1a04 	vfma.f32	s2, s22, s8
    a[3] = y1i + y5i;
  4019cc:	ed81 8a03 	vstr	s16, [r1, #12]
    y0r = x0r + x2r;
  4019d0:	ee37 4a24 	vadd.f32	s8, s14, s9
    y6r = x0r - x2r;
  4019d4:	ee75 5ae1 	vsub.f32	s11, s11, s3
    a[14] = y3r + y7i;
  4019d8:	ed81 6a0e 	vstr	s12, [r1, #56]	; 0x38
    y2r = x0r - x2r;
  4019dc:	ee37 7a64 	vsub.f32	s14, s14, s9
    y0i = x0i + x2i;
  4019e0:	ee37 6a82 	vadd.f32	s12, s15, s4
    a[15] = y3i - y7r;
  4019e4:	edc1 6a0f 	vstr	s13, [r1, #60]	; 0x3c
    y4i = x0i + x2i;
  4019e8:	ee75 4a22 	vadd.f32	s9, s10, s5
    y6i = x0i - x2i;
  4019ec:	ee75 6a62 	vsub.f32	s13, s10, s5
    a[7] = y3i + y7r;
  4019f0:	ed81 1a07 	vstr	s2, [r1, #28]
    a[0] = y0r + y4r;
  4019f4:	ee34 5a23 	vadd.f32	s10, s8, s7
    y2i = x0i - x2i;
  4019f8:	ee77 7ac2 	vsub.f32	s15, s15, s4
    a[6] = y3r - y7i;
  4019fc:	eee9 0a00 	vfma.f32	s1, s18, s0
    a[8] = y0r - y4r;
  401a00:	ee34 4a63 	vsub.f32	s8, s8, s7
    a[0] = y0r + y4r;
  401a04:	ed81 5a00 	vstr	s10, [r1]
    a[1] = y0i + y4i;
  401a08:	ee76 3a24 	vadd.f32	s7, s12, s9
    a[4] = y2r - y6i;
  401a0c:	ee37 5a66 	vsub.f32	s10, s14, s13
    a[9] = y0i - y4i;
  401a10:	ee36 6a64 	vsub.f32	s12, s12, s9
    a[8] = y0r - y4r;
  401a14:	ed81 4a08 	vstr	s8, [r1, #32]
    a[12] = y2r + y6i;
  401a18:	ee37 7a26 	vadd.f32	s14, s14, s13
    a[1] = y0i + y4i;
  401a1c:	edc1 3a01 	vstr	s7, [r1, #4]
    a[5] = y2i + y6r;
  401a20:	ee77 6aa5 	vadd.f32	s13, s15, s11
    a[6] = y3r - y7i;
  401a24:	edc1 0a06 	vstr	s1, [r1, #24]
    a[13] = y2i - y6r;
  401a28:	ee77 7ae5 	vsub.f32	s15, s15, s11
    a[9] = y0i - y4i;
  401a2c:	ed81 6a09 	vstr	s12, [r1, #36]	; 0x24
    a[4] = y2r - y6i;
  401a30:	ed81 5a04 	vstr	s10, [r1, #16]
    a[12] = y2r + y6i;
  401a34:	ed81 7a0c 	vstr	s14, [r1, #48]	; 0x30
    a[5] = y2i + y6r;
  401a38:	edc1 6a05 	vstr	s13, [r1, #20]
    a[13] = y2i - y6r;
  401a3c:	edc1 7a0d 	vstr	s15, [r1, #52]	; 0x34
    if (n > 16) {
  401a40:	f340 821a 	ble.w	401e78 <cft1st+0x5b8>
        wk1r = w[4];
        wk1i = w[5];
        x0r = a[16] + a[18];
  401a44:	ed91 7a12 	vldr	s14, [r1, #72]	; 0x48
        x0r = y6r - y2i;
        x0i = y2r + y6i;
        a[28] = wn4r * (x0r - x0i);
        a[29] = wn4r * (x0i + x0r);
        k1 = 4;
        for (j = 32; j < n; j += 16) {
  401a48:	2820      	cmp	r0, #32
        x2i = a[21] + a[23];
  401a4a:	edd1 7a17 	vldr	s15, [r1, #92]	; 0x5c
        x0r = a[16] + a[18];
  401a4e:	edd1 4a10 	vldr	s9, [r1, #64]	; 0x40
        x2i = a[21] + a[23];
  401a52:	ed91 8a15 	vldr	s16, [r1, #84]	; 0x54
        x1r = a[16] - a[18];
  401a56:	ee74 5ac7 	vsub.f32	s11, s9, s14
        x0i = a[17] + a[19];
  401a5a:	ed91 3a13 	vldr	s6, [r1, #76]	; 0x4c
  401a5e:	edd1 2a11 	vldr	s5, [r1, #68]	; 0x44
        x0r = a[16] + a[18];
  401a62:	ee74 4a87 	vadd.f32	s9, s9, s14
        x3i = a[21] - a[23];
  401a66:	ee78 6a67 	vsub.f32	s13, s16, s15
        x2r = a[20] + a[22];
  401a6a:	ed91 7a16 	vldr	s14, [r1, #88]	; 0x58
  401a6e:	ed91 5a14 	vldr	s10, [r1, #80]	; 0x50
        x1i = a[17] - a[19];
  401a72:	ee32 4ac3 	vsub.f32	s8, s5, s6
        x0i = a[25] + a[27];
  401a76:	ed91 9a19 	vldr	s18, [r1, #100]	; 0x64
        x2i = a[21] + a[23];
  401a7a:	ee38 8a27 	vadd.f32	s16, s16, s15
        x3r = a[20] - a[22];
  401a7e:	ee35 6a47 	vsub.f32	s12, s10, s14
        x0r = a[24] + a[26];
  401a82:	edd1 7a1a 	vldr	s15, [r1, #104]	; 0x68
        y1r = x1r - x3i;
  401a86:	ee75 9ae6 	vsub.f32	s19, s11, s13
        x2r = a[28] + a[30];
  401a8a:	edd1 8a1e 	vldr	s17, [r1, #120]	; 0x78
        x0r = a[24] + a[26];
  401a8e:	ed91 0a18 	vldr	s0, [r1, #96]	; 0x60
        y3r = x1r + x3i;
  401a92:	ee75 6aa6 	vadd.f32	s13, s11, s13
        x2i = a[29] + a[31];
  401a96:	edd1 1a1d 	vldr	s3, [r1, #116]	; 0x74
        x0i = a[17] + a[19];
  401a9a:	ee72 2a83 	vadd.f32	s5, s5, s6
        x2i = a[29] + a[31];
  401a9e:	edd1 5a1f 	vldr	s11, [r1, #124]	; 0x7c
        y1i = x1i + x3r;
  401aa2:	ee74 aa06 	vadd.f32	s21, s8, s12
        x0i = a[25] + a[27];
  401aa6:	ed91 3a1b 	vldr	s6, [r1, #108]	; 0x6c
        x1r = a[24] - a[26];
  401aaa:	ee70 3a67 	vsub.f32	s7, s0, s15
        x2r = a[28] + a[30];
  401aae:	ed91 2a1c 	vldr	s4, [r1, #112]	; 0x70
        x3i = a[29] - a[31];
  401ab2:	ee71 0ae5 	vsub.f32	s1, s3, s11
        x1i = a[25] - a[27];
  401ab6:	ee39 1a43 	vsub.f32	s2, s18, s6
        x2i = a[29] + a[31];
  401aba:	ee71 1aa5 	vadd.f32	s3, s3, s11
        x3r = a[28] - a[30];
  401abe:	ee72 5a68 	vsub.f32	s11, s4, s17
        y3i = x1i - x3r;
  401ac2:	ee34 4a46 	vsub.f32	s8, s8, s12
        wk1i = w[5];
  401ac6:	ed92 6a05 	vldr	s12, [r2, #20]
        x0r = x1r - x3i;
  401aca:	ee33 aae0 	vsub.f32	s20, s7, s1
        x2r = a[20] + a[22];
  401ace:	ee35 5a07 	vadd.f32	s10, s10, s14
        x2r = x1r + x3i;
  401ad2:	ee73 3aa0 	vadd.f32	s7, s7, s1
        x0i = x1i + x3r;
  401ad6:	ee31 7a25 	vadd.f32	s14, s2, s11
        x2r = a[28] + a[30];
  401ada:	ee32 2a28 	vadd.f32	s4, s4, s17
        x2i = x3r - x1i;
  401ade:	ee75 5ac1 	vsub.f32	s11, s11, s2
        x0i = wk1r * y1i + wk1i * y1r;
  401ae2:	ee66 8a29 	vmul.f32	s17, s12, s19
        x0r = wk1r * y1r - wk1i * y1i;
  401ae6:	ee6a 0ac6 	vnmul.f32	s1, s21, s12
        x0r = a[24] + a[26];
  401aea:	ee30 0a27 	vadd.f32	s0, s0, s15
        wk1r = w[4];
  401aee:	edd2 7a04 	vldr	s15, [r2, #16]
        x0i = a[25] + a[27];
  401af2:	ee39 3a03 	vadd.f32	s6, s18, s6
        x0i = wk1r * y1i + wk1i * y1r;
  401af6:	eee7 8aaa 	vfma.f32	s17, s15, s21
        x0r = wk1r * y1r - wk1i * y1i;
  401afa:	eee7 0aa9 	vfma.f32	s1, s15, s19
        y7i = wk1r * x2i - wk1i * x2r;
  401afe:	ee63 aac6 	vnmul.f32	s21, s7, s12
        y7r = wk1r * x2r + wk1i * x2i;
  401b02:	ee66 9a25 	vmul.f32	s19, s12, s11
        y5r = wk1i * x0r - wk1r * x0i;
  401b06:	ee27 9a67 	vnmul.f32	s18, s14, s15
        y5i = wk1i * x0i + wk1r * x0r;
  401b0a:	ee27 1a8a 	vmul.f32	s2, s15, s20
        y7r = wk1r * x2r + wk1i * x2i;
  401b0e:	eee7 9aa3 	vfma.f32	s19, s15, s7
        y7i = wk1r * x2i - wk1i * x2r;
  401b12:	eef0 3a6a 	vmov.f32	s7, s21
        y5r = wk1i * x0r - wk1r * x0i;
  401b16:	eea6 9a0a 	vfma.f32	s18, s12, s20
        x0r = wk1i * y3r - wk1r * y3i;
  401b1a:	ee24 aa67 	vnmul.f32	s20, s8, s15
        y7i = wk1r * x2i - wk1i * x2r;
  401b1e:	eee7 3aa5 	vfma.f32	s7, s15, s11
        x0i = wk1i * y3i + wk1r * y3r;
  401b22:	ee67 7aa6 	vmul.f32	s15, s15, s13
        y5i = wk1i * x0i + wk1r * x0r;
  401b26:	eea6 1a07 	vfma.f32	s2, s12, s14
        y2r = x0r - x2r;
  401b2a:	ee74 5ac5 	vsub.f32	s11, s9, s10
        x0r = wk1i * y3r - wk1r * y3i;
  401b2e:	eea6 aa26 	vfma.f32	s20, s12, s13
        x0i = wk1i * y3i + wk1r * y3r;
  401b32:	eee6 7a04 	vfma.f32	s15, s12, s8
        y6i = x0i - x2i;
  401b36:	ee73 aa61 	vsub.f32	s21, s6, s3
        y2i = x0i - x2i;
  401b3a:	ee32 4ac8 	vsub.f32	s8, s5, s16
        y6r = x0r - x2r;
  401b3e:	ee70 6a42 	vsub.f32	s13, s0, s4
        y0r = x0r + x2r;
  401b42:	ee34 7a85 	vadd.f32	s14, s9, s10
        x0r = y2r - y6i;
  401b46:	ee35 6aea 	vsub.f32	s12, s11, s21
        x0i = y2i + y6r;
  401b4a:	ee74 4a26 	vadd.f32	s9, s8, s13
        x0i = y2r + y6i;
  401b4e:	ee75 5aaa 	vadd.f32	s11, s11, s21
        x0r = y6r - y2i;
  401b52:	ee76 6ac4 	vsub.f32	s13, s13, s8
        a[20] = wn4r * (x0r - x0i);
  401b56:	ee36 4a64 	vsub.f32	s8, s12, s9
        a[21] = wn4r * (x0i + x0r);
  401b5a:	ee36 6a24 	vadd.f32	s12, s12, s9
        a[28] = wn4r * (x0r - x0i);
  401b5e:	ee76 4ae5 	vsub.f32	s9, s13, s11
        a[29] = wn4r * (x0i + x0r);
  401b62:	ee76 6aa5 	vadd.f32	s13, s13, s11
        a[19] = x0i + y5i;
  401b66:	ee71 5a28 	vadd.f32	s11, s2, s17
        y4i = x0i + x2i;
  401b6a:	ee33 5a21 	vadd.f32	s10, s6, s3
        y0i = x0i + x2i;
  401b6e:	ee72 2a88 	vadd.f32	s5, s5, s16
        a[18] = x0r + y5r;
  401b72:	ee39 3a20 	vadd.f32	s6, s18, s1
        a[19] = x0i + y5i;
  401b76:	edc1 5a13 	vstr	s11, [r1, #76]	; 0x4c
        y4r = x0r + x2r;
  401b7a:	ee30 2a02 	vadd.f32	s4, s0, s4
        a[23] = x0i + y7i;
  401b7e:	ee73 5aa7 	vadd.f32	s11, s7, s15
        a[30] = y7i - x0i;
  401b82:	ee73 7ae7 	vsub.f32	s15, s7, s15
        a[18] = x0r + y5r;
  401b86:	ed81 3a12 	vstr	s6, [r1, #72]	; 0x48
        a[27] = x0r - y5r;
  401b8a:	ee70 0ac9 	vsub.f32	s1, s1, s18
        a[22] = x0r - y7r;
  401b8e:	ee3a 3a69 	vsub.f32	s6, s20, s19
        a[23] = x0i + y7i;
  401b92:	edc1 5a17 	vstr	s11, [r1, #92]	; 0x5c
        a[30] = y7i - x0i;
  401b96:	edc1 7a1e 	vstr	s15, [r1, #120]	; 0x78
        a[28] = wn4r * (x0r - x0i);
  401b9a:	ee64 5a8b 	vmul.f32	s11, s9, s22
        a[17] = y0i + y4i;
  401b9e:	ee72 7a85 	vadd.f32	s15, s5, s10
        a[27] = x0r - y5r;
  401ba2:	edc1 0a1b 	vstr	s1, [r1, #108]	; 0x6c
        a[16] = y0r + y4r;
  401ba6:	ee77 4a02 	vadd.f32	s9, s14, s4
        a[22] = x0r - y7r;
  401baa:	ed81 3a16 	vstr	s6, [r1, #88]	; 0x58
        a[26] = y5i - x0i;
  401bae:	ee31 1a68 	vsub.f32	s2, s2, s17
        a[31] = x0r + y7r;
  401bb2:	ee79 9a8a 	vadd.f32	s19, s19, s20
        a[17] = y0i + y4i;
  401bb6:	edc1 7a11 	vstr	s15, [r1, #68]	; 0x44
        a[20] = wn4r * (x0r - x0i);
  401bba:	ee24 4a0b 	vmul.f32	s8, s8, s22
        a[16] = y0r + y4r;
  401bbe:	edc1 4a10 	vstr	s9, [r1, #64]	; 0x40
        a[21] = wn4r * (x0i + x0r);
  401bc2:	ee26 6a0b 	vmul.f32	s12, s12, s22
        a[26] = y5i - x0i;
  401bc6:	ed81 1a1a 	vstr	s2, [r1, #104]	; 0x68
        a[29] = wn4r * (x0i + x0r);
  401bca:	ee66 6a8b 	vmul.f32	s13, s13, s22
        a[31] = x0r + y7r;
  401bce:	edc1 9a1f 	vstr	s19, [r1, #124]	; 0x7c
        a[25] = y0r - y4r;
  401bd2:	ee37 7a42 	vsub.f32	s14, s14, s4
        a[20] = wn4r * (x0r - x0i);
  401bd6:	ed81 4a14 	vstr	s8, [r1, #80]	; 0x50
        a[24] = y4i - y0i;
  401bda:	ee35 5a62 	vsub.f32	s10, s10, s5
        a[21] = wn4r * (x0i + x0r);
  401bde:	ed81 6a15 	vstr	s12, [r1, #84]	; 0x54
        a[25] = y0r - y4r;
  401be2:	ed81 7a19 	vstr	s14, [r1, #100]	; 0x64
        a[24] = y4i - y0i;
  401be6:	ed81 5a18 	vstr	s10, [r1, #96]	; 0x60
        a[28] = wn4r * (x0r - x0i);
  401bea:	edc1 5a1c 	vstr	s11, [r1, #112]	; 0x70
        a[29] = wn4r * (x0i + x0r);
  401bee:	edc1 6a1d 	vstr	s13, [r1, #116]	; 0x74
        for (j = 32; j < n; j += 16) {
  401bf2:	f340 8141 	ble.w	401e78 <cft1st+0x5b8>
  401bf6:	f1a0 0321 	sub.w	r3, r0, #33	; 0x21
  401bfa:	f023 030f 	bic.w	r3, r3, #15
  401bfe:	3310      	adds	r3, #16
  401c00:	4413      	add	r3, r2
            y1r = x1r - x3i;
            y1i = x1i + x3r;
            y3r = x1r + x3i;
            y3i = x1i - x3r;
            x0r = a[j + 8] + a[j + 10];
            x0i = a[j + 9] + a[j + 11];
  401c02:	edd1 5a2b 	vldr	s11, [r1, #172]	; 0xac
  401c06:	3210      	adds	r2, #16
            x0r = a[j + 8] + a[j + 10];
  401c08:	edd1 fa28 	vldr	s31, [r1, #160]	; 0xa0
  401c0c:	3140      	adds	r1, #64	; 0x40
  401c0e:	edd1 da1a 	vldr	s27, [r1, #104]	; 0x68
            x1r = a[j + 8] - a[j + 10];
            x1i = a[j + 9] - a[j + 11];
            x2r = a[j + 12] + a[j + 14];
            x2i = a[j + 13] + a[j + 15];
  401c12:	ed91 ea1d 	vldr	s28, [r1, #116]	; 0x74
            x2r = a[j + 12] + a[j + 14];
  401c16:	ed91 8a1c 	vldr	s16, [r1, #112]	; 0x70
            x1r = a[j + 8] - a[j + 10];
  401c1a:	ee7f eaed 	vsub.f32	s29, s31, s27
            x2i = a[j + 13] + a[j + 15];
  401c1e:	ed91 3a1f 	vldr	s6, [r1, #124]	; 0x7c
            x0r = a[j + 8] + a[j + 10];
  401c22:	ee7f daad 	vadd.f32	s27, s31, s27
            x0i = a[j + 9] + a[j + 11];
  401c26:	edd1 4a19 	vldr	s9, [r1, #100]	; 0x64
            x2r = a[j + 12] + a[j + 14];
  401c2a:	ed91 0a1e 	vldr	s0, [r1, #120]	; 0x78
            x3r = a[j + 12] - a[j + 14];
            x3i = a[j + 13] - a[j + 15];
  401c2e:	ee7e 7a43 	vsub.f32	s15, s28, s6
            x1i = a[j + 9] - a[j + 11];
  401c32:	ee74 0ae5 	vsub.f32	s1, s9, s11
            x0i = a[j + 1] + a[j + 3];
  401c36:	ed91 5a13 	vldr	s10, [r1, #76]	; 0x4c
            x3r = a[j + 12] - a[j + 14];
  401c3a:	ee78 1a40 	vsub.f32	s3, s16, s0
            x2r = a[j + 4] + a[j + 6];
  401c3e:	ed91 aa16 	vldr	s20, [r1, #88]	; 0x58
            x0i = a[j + 1] + a[j + 3];
  401c42:	edd1 ca11 	vldr	s25, [r1, #68]	; 0x44
            y4r = x0r + x2r;
            y4i = x0i + x2i;
            y6r = x0r - x2r;
            y6i = x0i - x2i;
            x0r = x1r - x3i;
  401c46:	ee3e dae7 	vsub.f32	s26, s29, s15
            x2r = a[j + 4] + a[j + 6];
  401c4a:	ed91 6a14 	vldr	s12, [r1, #80]	; 0x50
            x0i = a[j + 9] + a[j + 11];
  401c4e:	ee74 4aa5 	vadd.f32	s9, s9, s11
            x0i = x1i + x3r;
  401c52:	ee70 2aa1 	vadd.f32	s5, s1, s3
            x0r = a[j] + a[j + 2];
  401c56:	ed91 fa10 	vldr	s30, [r1, #64]	; 0x40
            x2r = x1r + x3i;
            x2i = x1i - x3r;
  401c5a:	ee70 1ae1 	vsub.f32	s3, s1, s3
            x2i = a[j + 5] + a[j + 7];
  401c5e:	edd1 9a17 	vldr	s19, [r1, #92]	; 0x5c
            x1i = a[j + 1] - a[j + 3];
  401c62:	ee7c 0ac5 	vsub.f32	s1, s25, s10
            wk1r = w[k1];
  401c66:	ed92 2a04 	vldr	s4, [r2, #16]
            x3r = a[j + 4] - a[j + 6];
  401c6a:	ee76 5a4a 	vsub.f32	s11, s12, s20
            wk2i = w[k1 + 3];
  401c6e:	ed92 7a07 	vldr	s14, [r2, #28]
            x2r = x1r + x3i;
  401c72:	ee7e eaa7 	vadd.f32	s29, s29, s15
            x0r = a[j] + a[j + 2];
  401c76:	edd1 7a12 	vldr	s15, [r1, #72]	; 0x48
            x0i = a[j + 1] + a[j + 3];
  401c7a:	ee7c ca85 	vadd.f32	s25, s25, s10
            x3i = a[j + 5] - a[j + 7];
  401c7e:	ed91 5a15 	vldr	s10, [r1, #84]	; 0x54
            x2i = a[j + 13] + a[j + 15];
  401c82:	ee3e 3a03 	vadd.f32	s6, s28, s6
            wk1i = w[k1 + 1];
  401c86:	edd2 3a05 	vldr	s7, [r2, #20]
            y5r = wn4r * (x0r - x0i);
            y5i = wn4r * (x0r + x0i);
  401c8a:	ee3d ea22 	vadd.f32	s28, s26, s5
            wk2r = w[k1 + 2];
  401c8e:	ed92 1a06 	vldr	s2, [r2, #24]
            x2r = a[j + 12] + a[j + 14];
  401c92:	ee38 0a00 	vadd.f32	s0, s16, s0
            y7r = wn4r * (x2r - x2i);
            y7i = wn4r * (x2r + x2i);
            x0r = y1r + y5r;
            x0i = y1i + y5i;
  401c96:	eddd fa04 	vldr	s31, [sp, #16]
            x1r = a[j] - a[j + 2];
  401c9a:	ee3f 8a67 	vsub.f32	s16, s30, s15
        for (j = 32; j < n; j += 16) {
  401c9e:	4293      	cmp	r3, r2
            y5r = wn4r * (x0r - x0i);
  401ca0:	ee7d 2a62 	vsub.f32	s5, s26, s5
            x3i = a[j + 5] - a[j + 7];
  401ca4:	ee35 5a69 	vsub.f32	s10, s10, s19
            y1i = x1i + x3r;
  401ca8:	ee30 daa5 	vadd.f32	s26, s1, s11
            x2r = a[j + 4] + a[j + 6];
  401cac:	ee36 6a0a 	vadd.f32	s12, s12, s20
            x0r = a[j] + a[j + 2];
  401cb0:	ee3f aa27 	vadd.f32	s20, s30, s15
            x2i = a[j + 5] + a[j + 7];
  401cb4:	edd1 7a15 	vldr	s15, [r1, #84]	; 0x54
            wk3r = wk1r - wtmp * wk1i;
  401cb8:	eef1 ba63 	vneg.f32	s23, s7
            wtmp = 2 * wk2i;
  401cbc:	ee37 ba07 	vadd.f32	s22, s14, s14
            y3i = x1i - x3r;
  401cc0:	ee70 5ae5 	vsub.f32	s11, s1, s11
            a[j + 2] = wk1r * x0r - wk1i * x0i;
            a[j + 3] = wk1r * x0i + wk1i * x0r;
            x0r = y1r - y5r;
            x0i = y1i - y5i;
  401cc4:	eeb0 fa4d 	vmov.f32	s30, s26
            y1r = x1r - x3i;
  401cc8:	ee78 0a45 	vsub.f32	s1, s16, s10
            wk3r = wk1r - wtmp * wk1i;
  401ccc:	eef0 8a42 	vmov.f32	s17, s4
            x2i = a[j + 5] + a[j + 7];
  401cd0:	ee77 9aa9 	vadd.f32	s19, s15, s19
            y3r = x1r + x3i;
  401cd4:	ee38 5a05 	vadd.f32	s10, s16, s10
            y7i = wn4r * (x2r + x2i);
  401cd8:	ee7e 7aa1 	vadd.f32	s15, s29, s3
            y7r = wn4r * (x2r - x2i);
  401cdc:	ee3e 8ae1 	vsub.f32	s16, s29, s3
            x0i = y1i - y5i;
  401ce0:	eddd ea05 	vldr	s29, [sp, #20]
            wk3r = wk1r - wtmp * wk1i;
  401ce4:	eeeb 8a8b 	vfma.f32	s17, s23, s22
            x0i = y1i - y5i;
  401ce8:	eeae fa8e 	vfma.f32	s30, s29, s28
            wk4i = wtmp * wk2r;
  401cec:	ee61 6a0b 	vmul.f32	s13, s2, s22
            x0i = y1i + y5i;
  401cf0:	eeaf da8e 	vfma.f32	s26, s31, s28
            x0r = y1r - y5r;
  401cf4:	eeb0 ea60 	vmov.f32	s28, s1
            wtmp = 2 * wk4i;
  401cf8:	ee36 9aa6 	vadd.f32	s18, s13, s13
            x0r = y1r + y5r;
  401cfc:	eeef 0aa2 	vfma.f32	s1, s31, s5
            x0r = y1r - y5r;
  401d00:	eeae eaa2 	vfma.f32	s28, s29, s5
            wk7i = wtmp * wk3r - wk1i;
  401d04:	eef0 2a6b 	vmov.f32	s5, s23
            wk3i = wtmp * wk1r - wk1i;
  401d08:	eeb0 4a6b 	vmov.f32	s8, s23
            wk4r = 1 - wtmp * wk2i;
  401d0c:	eef1 aa47 	vneg.f32	s21, s14
            wk7i = wtmp * wk3r - wk1i;
  401d10:	eee8 2a89 	vfma.f32	s5, s17, s18
            wk3i = wtmp * wk1r - wk1i;
  401d14:	eea2 4a0b 	vfma.f32	s8, s4, s22
            wk7i = wtmp * wk3r - wk1i;
  401d18:	edcd 2a01 	vstr	s5, [sp, #4]
            x0r = y3r - y7i;
            x0i = y3i + y7r;
            a[j + 6] = wk3r * x0r - wk3i * x0i;
            a[j + 7] = wk3r * x0i + wk3i * x0r;
            x0r = y3r + y7i;
            x0i = y3i - y7r;
  401d1c:	eef0 2a65 	vmov.f32	s5, s11
            x0i = y3i + y7r;
  401d20:	eeef 5a88 	vfma.f32	s11, s31, s16
            wk5i = wtmp * wk1r - wk3i;
  401d24:	eeb1 ca44 	vneg.f32	s24, s8
            x0i = y3i - y7r;
  401d28:	eeee 2a88 	vfma.f32	s5, s29, s16
            x0r = y3r + y7i;
  401d2c:	eeb0 8a45 	vmov.f32	s16, s10
            wk5i = wtmp * wk1r - wk3i;
  401d30:	eef0 1a4c 	vmov.f32	s3, s24
            x0r = y3r - y7i;
  401d34:	eeae 5aa7 	vfma.f32	s10, s29, s15
            x0r = y3r + y7i;
  401d38:	eeaf 8aa7 	vfma.f32	s16, s31, s15
            y6r = x0r - x2r;
  401d3c:	ee7d fac0 	vsub.f32	s31, s27, s0
            wk5i = wtmp * wk1r - wk3i;
  401d40:	eee2 1a09 	vfma.f32	s3, s4, s18
            wk5r = wk3r - wtmp * wk1i;
  401d44:	eef0 ea68 	vmov.f32	s29, s17
            y2i = x0i - x2i;
  401d48:	ee7c 7ae9 	vsub.f32	s15, s25, s19
            x0r = y3r + y7i;
  401d4c:	ed8d 8a02 	vstr	s16, [sp, #8]
            y0r = x0r + x2r;
  401d50:	ee3a 8a06 	vadd.f32	s16, s20, s12
            y2r = x0r - x2r;
  401d54:	ee3a 6a46 	vsub.f32	s12, s20, s12
            y4r = x0r + x2r;
  401d58:	ee3d aa80 	vadd.f32	s20, s27, s0
            wk7r = wk1r - wtmp * wk3i;
  401d5c:	eef0 da42 	vmov.f32	s27, s4
            wk5r = wk3r - wtmp * wk1i;
  401d60:	eeeb ea89 	vfma.f32	s29, s23, s18
            y0i = x0i + x2i;
  401d64:	ee3c 0aa9 	vadd.f32	s0, s25, s19
            wk7r = wk1r - wtmp * wk3i;
  401d68:	eeec da09 	vfma.f32	s27, s24, s18
            wk4r = 1 - wtmp * wk2i;
  401d6c:	eeb7 ca00 	vmov.f32	s24, #112	; 0x3f800000  1.0
            y4i = x0i + x2i;
  401d70:	ee74 9a83 	vadd.f32	s19, s9, s6
            y6i = x0i - x2i;
  401d74:	ee74 4ac3 	vsub.f32	s9, s9, s6
            wk4r = 1 - wtmp * wk2i;
  401d78:	eeaa ca8b 	vfma.f32	s24, s21, s22
            wk6i = wtmp * wk2r - wk2i;
  401d7c:	eeb0 3a6a 	vmov.f32	s6, s21
            wk6r = wk2r - wtmp * wk2i;
  401d80:	eeb0 ba41 	vmov.f32	s22, s2
            a[j + 14] = wk7r * x0r - wk7i * x0i;
            a[j + 15] = wk7r * x0i + wk7i * x0r;
            a[j] = y0r + y4r;
            a[j + 1] = y0i + y4i;
            x0r = y0r - y4r;
  401d84:	ee78 ca4a 	vsub.f32	s25, s16, s20
            wk6i = wtmp * wk2r - wk2i;
  401d88:	eea1 3a09 	vfma.f32	s6, s2, s18
            wk6r = wk2r - wtmp * wk2i;
  401d8c:	eeaa ba89 	vfma.f32	s22, s21, s18
            a[j + 10] = wk5r * x0r - wk5i * x0i;
  401d90:	ee2f 9a61 	vnmul.f32	s18, s30, s3
            a[j + 11] = wk5r * x0i + wk5i * x0r;
  401d94:	ee61 1a8e 	vmul.f32	s3, s3, s28
            x0i = y0i - y4i;
  401d98:	ee70 ba69 	vsub.f32	s23, s0, s19
            a[j + 10] = wk5r * x0r - wk5i * x0i;
  401d9c:	eeae 9a8e 	vfma.f32	s18, s29, s28
            a[j + 11] = wk5r * x0i + wk5i * x0r;
  401da0:	eeee 1a8f 	vfma.f32	s3, s29, s30
            a[j + 15] = wk7r * x0i + wk7i * x0r;
  401da4:	ed9d fa02 	vldr	s30, [sp, #8]
            a[j + 2] = wk1r * x0r - wk1i * x0i;
  401da8:	ee2d ea63 	vnmul.f32	s28, s26, s7
            wk6r = wk2r - wtmp * wk2i;
  401dac:	eef0 aa4b 	vmov.f32	s21, s22
            x0r = y2r - y6i;
            x0i = y2i + y6r;
            a[j + 4] = wk2r * x0r - wk2i * x0i;
            a[j + 5] = wk2r * x0i + wk2i * x0r;
            x0r = y2r + y6i;
            x0i = y2i - y6r;
  401db0:	ee37 baef 	vsub.f32	s22, s15, s31
            a[j + 2] = wk1r * x0r - wk1i * x0i;
  401db4:	eea2 ea20 	vfma.f32	s28, s4, s1
            x0i = y2i + y6r;
  401db8:	ee77 7aaf 	vadd.f32	s15, s15, s31
            a[j + 10] = wk5r * x0r - wk5i * x0i;
  401dbc:	ed81 9a1a 	vstr	s18, [r1, #104]	; 0x68
            a[j + 11] = wk5r * x0i + wk5i * x0r;
  401dc0:	edcd 1a03 	vstr	s3, [sp, #12]
            x0r = y2r + y6i;
  401dc4:	ee76 fa24 	vadd.f32	s31, s12, s9
            a[j + 14] = wk7r * x0r - wk7i * x0i;
  401dc8:	eddd 1a01 	vldr	s3, [sp, #4]
            x0r = y2r - y6i;
  401dcc:	ee36 6a64 	vsub.f32	s12, s12, s9
            a[j + 14] = wk7r * x0r - wk7i * x0i;
  401dd0:	eef0 ea62 	vmov.f32	s29, s5
  401dd4:	ee62 4ae1 	vnmul.f32	s9, s5, s3
            a[j + 15] = wk7r * x0i + wk7i * x0r;
  401dd8:	ee61 2a8f 	vmul.f32	s5, s3, s30
            a[j + 11] = wk5r * x0i + wk5i * x0r;
  401ddc:	eddd 1a03 	vldr	s3, [sp, #12]
            a[j + 2] = wk1r * x0r - wk1i * x0i;
  401de0:	ed81 ea12 	vstr	s28, [r1, #72]	; 0x48
            a[j + 3] = wk1r * x0i + wk1i * x0r;
  401de4:	ee63 3aa0 	vmul.f32	s7, s7, s1
            a[j + 11] = wk5r * x0i + wk5i * x0r;
  401de8:	edc1 1a1b 	vstr	s3, [r1, #108]	; 0x6c
            a[j + 6] = wk3r * x0r - wk3i * x0i;
  401dec:	ee65 0ac4 	vnmul.f32	s1, s11, s8
            a[j + 9] = wk4r * x0i + wk4i * x0r;
  401df0:	ee26 9aac 	vmul.f32	s18, s13, s25
            a[j + 12] = wk6r * x0r - wk6i * x0i;
  401df4:	ee6b 1a43 	vnmul.f32	s3, s22, s6
            a[j + 4] = wk2r * x0r - wk2i * x0i;
  401df8:	ee27 eac7 	vnmul.f32	s28, s15, s14
            a[j + 7] = wk3r * x0i + wk3i * x0r;
  401dfc:	ee24 4a05 	vmul.f32	s8, s8, s10
            a[j + 8] = wk4r * x0r - wk4i * x0i;
  401e00:	ee6b 6ae6 	vnmul.f32	s13, s23, s13
            a[j + 13] = wk6r * x0i + wk6i * x0r;
  401e04:	ee23 3a2f 	vmul.f32	s6, s6, s31
            a[j + 5] = wk2r * x0i + wk2i * x0r;
  401e08:	ee27 7a06 	vmul.f32	s14, s14, s12
            a[j + 3] = wk1r * x0i + wk1i * x0r;
  401e0c:	eee2 3a0d 	vfma.f32	s7, s4, s26
            a[j + 15] = wk7r * x0i + wk7i * x0r;
  401e10:	eeed 2aae 	vfma.f32	s5, s27, s29
            a[j + 14] = wk7r * x0r - wk7i * x0i;
  401e14:	eeed 4a8f 	vfma.f32	s9, s27, s30
            a[j + 6] = wk3r * x0r - wk3i * x0i;
  401e18:	eee8 0a85 	vfma.f32	s1, s17, s10
            a[j + 7] = wk3r * x0i + wk3i * x0r;
  401e1c:	eea8 4aa5 	vfma.f32	s8, s17, s11
            a[j + 8] = wk4r * x0r - wk4i * x0i;
  401e20:	eeec 6a2c 	vfma.f32	s13, s24, s25
            a[j + 9] = wk4r * x0i + wk4i * x0r;
  401e24:	eeac 9a2b 	vfma.f32	s18, s24, s23
            a[j + 3] = wk1r * x0i + wk1i * x0r;
  401e28:	edc1 3a13 	vstr	s7, [r1, #76]	; 0x4c
            a[j + 13] = wk6r * x0i + wk6i * x0r;
  401e2c:	eeaa 3a8b 	vfma.f32	s6, s21, s22
            a[j + 15] = wk7r * x0i + wk7i * x0r;
  401e30:	edc1 2a1f 	vstr	s5, [r1, #124]	; 0x7c
            a[j + 12] = wk6r * x0r - wk6i * x0i;
  401e34:	eeea 1aaf 	vfma.f32	s3, s21, s31
            a[j + 14] = wk7r * x0r - wk7i * x0i;
  401e38:	edc1 4a1e 	vstr	s9, [r1, #120]	; 0x78
            a[j + 4] = wk2r * x0r - wk2i * x0i;
  401e3c:	eea1 ea06 	vfma.f32	s28, s2, s12
            a[j + 6] = wk3r * x0r - wk3i * x0i;
  401e40:	edc1 0a16 	vstr	s1, [r1, #88]	; 0x58
            a[j + 5] = wk2r * x0i + wk2i * x0r;
  401e44:	eea1 7a27 	vfma.f32	s14, s2, s15
            a[j + 7] = wk3r * x0i + wk3i * x0r;
  401e48:	ed81 4a17 	vstr	s8, [r1, #92]	; 0x5c
            a[j] = y0r + y4r;
  401e4c:	ee38 8a0a 	vadd.f32	s16, s16, s20
            a[j + 8] = wk4r * x0r - wk4i * x0i;
  401e50:	edc1 6a18 	vstr	s13, [r1, #96]	; 0x60
            a[j + 1] = y0i + y4i;
  401e54:	ee30 0a29 	vadd.f32	s0, s0, s19
            a[j + 9] = wk4r * x0i + wk4i * x0r;
  401e58:	ed81 9a19 	vstr	s18, [r1, #100]	; 0x64
            a[j + 13] = wk6r * x0i + wk6i * x0r;
  401e5c:	ed81 3a1d 	vstr	s6, [r1, #116]	; 0x74
            a[j] = y0r + y4r;
  401e60:	ed81 8a10 	vstr	s16, [r1, #64]	; 0x40
            a[j + 1] = y0i + y4i;
  401e64:	ed81 0a11 	vstr	s0, [r1, #68]	; 0x44
            a[j + 4] = wk2r * x0r - wk2i * x0i;
  401e68:	ed81 ea14 	vstr	s28, [r1, #80]	; 0x50
            a[j + 12] = wk6r * x0r - wk6i * x0i;
  401e6c:	edc1 1a1c 	vstr	s3, [r1, #112]	; 0x70
            a[j + 5] = wk2r * x0i + wk2i * x0r;
  401e70:	ed81 7a15 	vstr	s14, [r1, #84]	; 0x54
        for (j = 32; j < n; j += 16) {
  401e74:	f47f aec5 	bne.w	401c02 <cft1st+0x342>
        }
    }
}
  401e78:	b006      	add	sp, #24
  401e7a:	ecbd 8b10 	vpop	{d8-d15}
  401e7e:	4770      	bx	lr

00401e80 <cftmdl>:


void cftmdl(int n, int l, smpl_t *a, smpl_t *w)
{
  401e80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
        y0r, y0i, y1r, y1i, y2r, y2i, y3r, y3i, 
        y4r, y4i, y5r, y5i, y6r, y6i, y7r, y7i;
    
    m = l << 3;
    wn4r = w[2];
    for (j = 0; j < l; j += 2) {
  401e84:	2900      	cmp	r1, #0
{
  401e86:	469b      	mov	fp, r3
    m = l << 3;
  401e88:	ea4f 09c1 	mov.w	r9, r1, lsl #3
{
  401e8c:	ed2d 8b10 	vpush	{d8-d15}
  401e90:	b08d      	sub	sp, #52	; 0x34
    wn4r = w[2];
  401e92:	ed93 fa02 	vldr	s30, [r3, #8]
{
  401e96:	9009      	str	r0, [sp, #36]	; 0x24
  401e98:	9207      	str	r2, [sp, #28]
    for (j = 0; j < l; j += 2) {
  401e9a:	f340 80e7 	ble.w	40206c <cftmdl+0x1ec>
  401e9e:	eb01 0241 	add.w	r2, r1, r1, lsl #1
  401ea2:	f101 3aff 	add.w	sl, r1, #4294967295
  401ea6:	9e07      	ldr	r6, [sp, #28]
  401ea8:	008b      	lsls	r3, r1, #2
  401eaa:	188d      	adds	r5, r1, r2
  401eac:	ea4f 0a5a 	mov.w	sl, sl, lsr #1
  401eb0:	4637      	mov	r7, r6
  401eb2:	eb06 0c03 	add.w	ip, r6, r3
  401eb6:	194c      	adds	r4, r1, r5
  401eb8:	f103 0e04 	add.w	lr, r3, #4
  401ebc:	eb06 0aca 	add.w	sl, r6, sl, lsl #3
  401ec0:	eeb1 8a4f 	vneg.f32	s16, s30
  401ec4:	1908      	adds	r0, r1, r4
  401ec6:	eb06 0282 	add.w	r2, r6, r2, lsl #2
  401eca:	eb06 0585 	add.w	r5, r6, r5, lsl #2
  401ece:	44be      	add	lr, r7
  401ed0:	eb06 0484 	add.w	r4, r6, r4, lsl #2
  401ed4:	180e      	adds	r6, r1, r0
  401ed6:	46b8      	mov	r8, r7
  401ed8:	eb07 0080 	add.w	r0, r7, r0, lsl #2
  401edc:	eb07 0686 	add.w	r6, r7, r6, lsl #2
  401ee0:	4463      	add	r3, ip
  401ee2:	f10a 0a0c 	add.w	sl, sl, #12
  401ee6:	3704      	adds	r7, #4
        y2i = x0i - x2i;
        y1r = x1r - x3i;
        y1i = x1i + x3r;
        y3r = x1r + x3i;
        y3i = x1i - x3r;
        x0r = a[j4] + a[j5];
  401ee8:	edd4 7a00 	vldr	s15, [r4]
  401eec:	3708      	adds	r7, #8
        x0i = a[j4 + 1] + a[j5 + 1];
        x1r = a[j4] - a[j5];
        x1i = a[j4 + 1] - a[j5 + 1];
        x2r = a[j6] + a[j7];
        x2i = a[j6 + 1] + a[j7 + 1];
  401eee:	edd0 6a01 	vldr	s13, [r0, #4]
  401ef2:	f10e 0e08 	add.w	lr, lr, #8
  401ef6:	ed96 7a01 	vldr	s14, [r6, #4]
  401efa:	f10c 0c08 	add.w	ip, ip, #8
        x2r = a[j6] + a[j7];
  401efe:	edd6 3a00 	vldr	s7, [r6]
  401f02:	3408      	adds	r4, #8
        x0r = a[j4] + a[j5];
  401f04:	ed95 6a00 	vldr	s12, [r5]
        x2i = a[j6 + 1] + a[j7 + 1];
  401f08:	ee76 1a87 	vadd.f32	s3, s13, s14
        x0i = a[j4 + 1] + a[j5 + 1];
  401f0c:	ed95 ba01 	vldr	s22, [r5, #4]
  401f10:	3208      	adds	r2, #8
  401f12:	ed54 5a01 	vldr	s11, [r4, #-4]
        x1r = a[j4] - a[j5];
  401f16:	ee36 5a67 	vsub.f32	s10, s12, s15
        x2r = a[j6] + a[j7];
  401f1a:	ed90 0a00 	vldr	s0, [r0]
        x0r = a[j4] + a[j5];
  401f1e:	ee36 6a27 	vadd.f32	s12, s12, s15
        x1i = a[j4 + 1] - a[j5 + 1];
  401f22:	ee3b 9a65 	vsub.f32	s18, s22, s11
        x0i = a[j + 1] + a[j1 + 1];
  401f26:	ed1c aa01 	vldr	s20, [ip, #-4]
        x3r = a[j6] - a[j7];
        x3i = a[j6 + 1] - a[j7 + 1];
  401f2a:	ee76 7ac7 	vsub.f32	s15, s13, s14
        x2r = a[j2] + a[j3];
  401f2e:	ed93 1a00 	vldr	s2, [r3]
        x3r = a[j6] - a[j7];
  401f32:	ee70 4a63 	vsub.f32	s9, s0, s7
        x0r = a[j] + a[j1];
  401f36:	ed57 6a03 	vldr	s13, [r7, #-12]
        x2r = a[j6] + a[j7];
  401f3a:	ee30 0a23 	vadd.f32	s0, s0, s7
        x0r = a[j] + a[j1];
  401f3e:	ed1e 7a03 	vldr	s14, [lr, #-12]
        y4r = x0r + x2r;
        y4i = x0i + x2i;
        y6r = x0r - x2r;
        y6i = x0i - x2i;
        x0r = x1r - x3i;
  401f42:	ee75 8a67 	vsub.f32	s17, s10, s15
        x2i = a[j2 + 1] + a[j3 + 1];
  401f46:	edd3 aa01 	vldr	s21, [r3, #4]
        x0i = x1i + x3r;
  401f4a:	ee39 3a24 	vadd.f32	s6, s18, s9
        x2i = a[j2 + 1] + a[j3 + 1];
  401f4e:	ed12 2a01 	vldr	s4, [r2, #-4]
        x2r = x1r + x3i;
        x2i = x1i - x3r;
  401f52:	ee39 9a64 	vsub.f32	s18, s18, s9
        x2r = a[j2] + a[j3];
  401f56:	ed52 4a02 	vldr	s9, [r2, #-8]
        x2r = x1r + x3i;
  401f5a:	ee35 5a27 	vadd.f32	s10, s10, s15
        x0i = a[j + 1] + a[j1 + 1];
  401f5e:	edd8 7a01 	vldr	s15, [r8, #4]
        x3r = a[j2] - a[j3];
  401f62:	ee71 3a64 	vsub.f32	s7, s2, s9
  401f66:	3608      	adds	r6, #8
        x1i = a[j + 1] - a[j1 + 1];
  401f68:	ee77 2aca 	vsub.f32	s5, s15, s20
  401f6c:	f108 0808 	add.w	r8, r8, #8
        x1r = a[j] - a[j1];
  401f70:	ee76 0ac7 	vsub.f32	s1, s13, s14
  401f74:	3508      	adds	r5, #8
        x3i = a[j2 + 1] - a[j3 + 1];
  401f76:	ee3a 4ac2 	vsub.f32	s8, s21, s4
  401f7a:	3308      	adds	r3, #8
        x2r = a[j2] + a[j3];
  401f7c:	ee31 1a24 	vadd.f32	s2, s2, s9
  401f80:	3008      	adds	r0, #8
        y1i = x1i + x3r;
  401f82:	ee72 4aa3 	vadd.f32	s9, s5, s7
        y5r = wn4r * (x0r - x0i);
  401f86:	ee78 9ac3 	vsub.f32	s19, s17, s6
        x0r = a[j] + a[j1];
  401f8a:	ee36 7a87 	vadd.f32	s14, s13, s14
        y5i = wn4r * (x0r + x0i);
  401f8e:	ee78 8a83 	vadd.f32	s17, s17, s6
        y3i = x1i - x3r;
  401f92:	ee72 6ae3 	vsub.f32	s13, s5, s7
        y1r = x1r - x3i;
  401f96:	ee30 3ac4 	vsub.f32	s6, s1, s8
        y7r = wn4r * (x2r - x2i);
  401f9a:	ee75 2a49 	vsub.f32	s5, s10, s18
        y3r = x1r + x3i;
  401f9e:	ee30 4a84 	vadd.f32	s8, s1, s8
        y7i = wn4r * (x2r + x2i);
  401fa2:	ee35 5a09 	vadd.f32	s10, s10, s18
        a[j1] = y1r + y5r;
        a[j1 + 1] = y1i + y5i;
  401fa6:	eeb0 9a64 	vmov.f32	s18, s9
        x0i = a[j + 1] + a[j1 + 1];
  401faa:	ee77 7a8a 	vadd.f32	s15, s15, s20
        a[j5] = y1r - y5r;
        a[j5 + 1] = y1i - y5i;
  401fae:	eee8 4a28 	vfma.f32	s9, s16, s17
        a[j1] = y1r + y5r;
  401fb2:	eeb0 aa43 	vmov.f32	s20, s6
        a[j1 + 1] = y1i + y5i;
  401fb6:	eeaf 9a28 	vfma.f32	s18, s30, s17
        a[j3] = y3r - y7i;
        a[j3 + 1] = y3i + y7r;
  401fba:	eef0 0a66 	vmov.f32	s1, s13
        a[j3] = y3r - y7i;
  401fbe:	eef0 8a44 	vmov.f32	s17, s8
        a[j7] = y3r + y7i;
        a[j7 + 1] = y3i - y7r;
  401fc2:	eee8 6a22 	vfma.f32	s13, s16, s5
        a[j7] = y3r + y7i;
  401fc6:	eeaf 4a05 	vfma.f32	s8, s30, s10
        a[j3] = y3r - y7i;
  401fca:	eee8 8a05 	vfma.f32	s17, s16, s10
        a[j3 + 1] = y3i + y7r;
  401fce:	eeef 0a22 	vfma.f32	s1, s30, s5
        a[j1] = y1r + y5r;
  401fd2:	eeaf aa29 	vfma.f32	s20, s30, s19
        a[j5] = y1r - y5r;
  401fd6:	eea8 3a29 	vfma.f32	s6, s16, s19
        x0i = a[j4 + 1] + a[j5 + 1];
  401fda:	ee7b 5a25 	vadd.f32	s11, s22, s11
        a[j5 + 1] = y1i - y5i;
  401fde:	eef0 3a64 	vmov.f32	s7, s9
        y4r = x0r + x2r;
  401fe2:	ee76 2a00 	vadd.f32	s5, s12, s0
        y0r = x0r + x2r;
  401fe6:	ee77 4a01 	vadd.f32	s9, s14, s2
        x2i = a[j2 + 1] + a[j3 + 1];
  401fea:	ee3a 2a82 	vadd.f32	s4, s21, s4
        a[j1] = y1r + y5r;
  401fee:	ed0e aa03 	vstr	s20, [lr, #-12]
        a[j1 + 1] = y1i + y5i;
  401ff2:	ed0c 9a01 	vstr	s18, [ip, #-4]
        y2r = x0r - x2r;
  401ff6:	ee37 7a41 	vsub.f32	s14, s14, s2
        a[j5 + 1] = y1i - y5i;
  401ffa:	ed44 3a01 	vstr	s7, [r4, #-4]
        y6r = x0r - x2r;
  401ffe:	ee36 6a40 	vsub.f32	s12, s12, s0
        a[j5] = y1r - y5r;
  402002:	ed04 3a02 	vstr	s6, [r4, #-8]
        y0i = x0i + x2i;
  402006:	ee37 5a82 	vadd.f32	s10, s15, s4
        a[j3] = y3r - y7i;
  40200a:	ed42 8a02 	vstr	s17, [r2, #-8]
        y2i = x0i - x2i;
  40200e:	ee77 7ac2 	vsub.f32	s15, s15, s4
        a[j3 + 1] = y3i + y7r;
  402012:	ed42 0a01 	vstr	s1, [r2, #-4]
        a[j7] = y3r + y7i;
  402016:	ed06 4a02 	vstr	s8, [r6, #-8]
        y4i = x0i + x2i;
  40201a:	ee35 4aa1 	vadd.f32	s8, s11, s3
        a[j7 + 1] = y3i - y7r;
  40201e:	ed46 6a01 	vstr	s13, [r6, #-4]
        y6i = x0i - x2i;
  402022:	ee75 6ae1 	vsub.f32	s13, s11, s3
        a[j] = y0r + y4r;
  402026:	ee74 5aa2 	vadd.f32	s11, s9, s5
        a[j + 1] = y0i + y4i;
  40202a:	ee75 3a04 	vadd.f32	s7, s10, s8
        a[j4] = y0r - y4r;
  40202e:	ee74 4ae2 	vsub.f32	s9, s9, s5
        a[j] = y0r + y4r;
  402032:	ed47 5a03 	vstr	s11, [r7, #-12]
        a[j4 + 1] = y0i - y4i;
  402036:	ee35 5a44 	vsub.f32	s10, s10, s8
        a[j2] = y2r - y6i;
  40203a:	ee77 5a66 	vsub.f32	s11, s14, s13
    for (j = 0; j < l; j += 2) {
  40203e:	45ba      	cmp	sl, r7
        a[j2 + 1] = y2i + y6r;
        a[j6] = y2r + y6i;
  402040:	ee37 7a26 	vadd.f32	s14, s14, s13
        a[j + 1] = y0i + y4i;
  402044:	ed48 3a01 	vstr	s7, [r8, #-4]
        a[j2 + 1] = y2i + y6r;
  402048:	ee77 6a86 	vadd.f32	s13, s15, s12
        a[j4] = y0r - y4r;
  40204c:	ed45 4a02 	vstr	s9, [r5, #-8]
        a[j6 + 1] = y2i - y6r;
  402050:	ee77 7ac6 	vsub.f32	s15, s15, s12
        a[j4 + 1] = y0i - y4i;
  402054:	ed05 5a01 	vstr	s10, [r5, #-4]
        a[j2] = y2r - y6i;
  402058:	ed43 5a02 	vstr	s11, [r3, #-8]
        a[j2 + 1] = y2i + y6r;
  40205c:	ed43 6a01 	vstr	s13, [r3, #-4]
        a[j6] = y2r + y6i;
  402060:	ed00 7a02 	vstr	s14, [r0, #-8]
        a[j6 + 1] = y2i - y6r;
  402064:	ed40 7a01 	vstr	s15, [r0, #-4]
    for (j = 0; j < l; j += 2) {
  402068:	f47f af3e 	bne.w	401ee8 <cftmdl+0x68>
    }
    if (m < n) {
  40206c:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40206e:	4599      	cmp	r9, r3
  402070:	f280 829f 	bge.w	4025b2 <cftmdl+0x732>
        wk1r = w[4];
        wk1i = w[5];
        for (j = m; j < l + m; j += 2) {
  402074:	eb01 0c09 	add.w	ip, r1, r9
        wk1r = w[4];
  402078:	ed9b 0a04 	vldr	s0, [fp, #16]
        wk1i = w[5];
  40207c:	ed9b 8a05 	vldr	s16, [fp, #20]
        for (j = m; j < l + m; j += 2) {
  402080:	45e1      	cmp	r9, ip
  402082:	f280 8108 	bge.w	402296 <cftmdl+0x416>
  402086:	eb01 030c 	add.w	r3, r1, ip
  40208a:	ebac 0209 	sub.w	r2, ip, r9
  40208e:	9e07      	ldr	r6, [sp, #28]
  402090:	f109 0a02 	add.w	sl, r9, #2
  402094:	18cd      	adds	r5, r1, r3
  402096:	3a01      	subs	r2, #1
  402098:	eb06 0383 	add.w	r3, r6, r3, lsl #2
  40209c:	194c      	adds	r4, r1, r5
  40209e:	f022 0201 	bic.w	r2, r2, #1
  4020a2:	ea4f 0e89 	mov.w	lr, r9, lsl #2
  4020a6:	9300      	str	r3, [sp, #0]
  4020a8:	1908      	adds	r0, r1, r4
  4020aa:	4492      	add	sl, r2
  4020ac:	f10e 0804 	add.w	r8, lr, #4
  4020b0:	eb06 0585 	add.w	r5, r6, r5, lsl #2
  4020b4:	180a      	adds	r2, r1, r0
  4020b6:	eb06 0484 	add.w	r4, r6, r4, lsl #2
  4020ba:	44b0      	add	r8, r6
  4020bc:	44b6      	add	lr, r6
  4020be:	188b      	adds	r3, r1, r2
  4020c0:	eb06 0080 	add.w	r0, r6, r0, lsl #2
  4020c4:	eb06 0a8a 	add.w	sl, r6, sl, lsl #2
  4020c8:	eb06 0282 	add.w	r2, r6, r2, lsl #2
  4020cc:	eb06 078c 	add.w	r7, r6, ip, lsl #2
  4020d0:	eb06 0683 	add.w	r6, r6, r3, lsl #2
  4020d4:	9b00      	ldr	r3, [sp, #0]
            j4 = j3 + l;
            j5 = j4 + l;
            j6 = j5 + l;
            j7 = j6 + l;
            x0r = a[j] + a[j1];
            x0i = a[j + 1] + a[j1 + 1];
  4020d6:	ed9e 9a01 	vldr	s18, [lr, #4]
  4020da:	f10e 0e08 	add.w	lr, lr, #8
            x0r = a[j] + a[j1];
  4020de:	ed18 2a01 	vldr	s4, [r8, #-4]
  4020e2:	3708      	adds	r7, #8
  4020e4:	ed17 7a02 	vldr	s14, [r7, #-8]
  4020e8:	3008      	adds	r0, #8
            x1r = a[j] - a[j1];
            x1i = a[j + 1] - a[j1 + 1];
            x2r = a[j2] + a[j3];
            x2i = a[j2 + 1] + a[j3 + 1];
  4020ea:	edd3 1a01 	vldr	s3, [r3, #4]
  4020ee:	3508      	adds	r5, #8
  4020f0:	ed55 7a01 	vldr	s15, [r5, #-4]
            x1r = a[j] - a[j1];
  4020f4:	ee32 3a47 	vsub.f32	s6, s4, s14
            x2r = a[j2] + a[j3];
  4020f8:	ed55 4a02 	vldr	s9, [r5, #-8]
            x0r = a[j] + a[j1];
  4020fc:	ee32 2a07 	vadd.f32	s4, s4, s14
            x0i = a[j + 1] + a[j1 + 1];
  402100:	ed57 0a01 	vldr	s1, [r7, #-4]
            x3r = a[j2] - a[j3];
            x3i = a[j2 + 1] - a[j3 + 1];
  402104:	ee31 7ae7 	vsub.f32	s14, s3, s15
            x2r = a[j2] + a[j3];
  402108:	edd3 2a00 	vldr	s5, [r3]
            x2i = a[j2 + 1] + a[j3 + 1];
  40210c:	ee71 aaa7 	vadd.f32	s21, s3, s15
            x1i = a[j + 1] - a[j1 + 1];
  402110:	ee79 3a60 	vsub.f32	s7, s18, s1
            y1r = x1r - x3i;
            y1i = x1i + x3r;
            y3r = x1r + x3i;
            y3i = x1i - x3r;
            x0r = a[j4] + a[j5];
            x0i = a[j4 + 1] + a[j5 + 1];
  402114:	edd4 6a01 	vldr	s13, [r4, #4]
            x3r = a[j2] - a[j3];
  402118:	ee72 7ae4 	vsub.f32	s15, s5, s9
            x1r = a[j4] - a[j5];
            x1i = a[j4 + 1] - a[j5 + 1];
            x2r = a[j6] + a[j7];
  40211c:	ed92 6a00 	vldr	s12, [r2]
            y1r = x1r - x3i;
  402120:	ee73 da47 	vsub.f32	s27, s6, s14
            x0r = a[j4] + a[j5];
  402124:	ed10 5a02 	vldr	s10, [r0, #-8]
            y3r = x1r + x3i;
  402128:	ee33 3a07 	vadd.f32	s6, s6, s14
            x0i = a[j4 + 1] + a[j5 + 1];
  40212c:	ed10 7a01 	vldr	s14, [r0, #-4]
            y1i = x1i + x3r;
  402130:	ee33 eaa7 	vadd.f32	s28, s7, s15
            x2i = a[j6 + 1] + a[j7 + 1];
  402134:	edd6 5a01 	vldr	s11, [r6, #4]
            y3i = x1i - x3r;
  402138:	ee73 3ae7 	vsub.f32	s7, s7, s15
            x2r = a[j6] + a[j7];
  40213c:	edd6 7a00 	vldr	s15, [r6]
            x1i = a[j4 + 1] - a[j5 + 1];
  402140:	ee36 4ac7 	vsub.f32	s8, s13, s14
            x0r = a[j4] + a[j5];
  402144:	ed94 ba00 	vldr	s22, [r4]
            x3r = a[j6] - a[j7];
  402148:	ee76 8a67 	vsub.f32	s17, s12, s15
            x2i = a[j6 + 1] + a[j7 + 1];
  40214c:	ed92 aa01 	vldr	s20, [r2, #4]
            x1r = a[j4] - a[j5];
  402150:	ee3b 1a45 	vsub.f32	s2, s22, s10
  402154:	3608      	adds	r6, #8
            x3i = a[j6 + 1] - a[j7 + 1];
  402156:	ee7a 1a65 	vsub.f32	s3, s20, s11
  40215a:	f108 0808 	add.w	r8, r8, #8
            y4r = x0r + x2r;
            y4i = x0i + x2i;
            y6r = x0r - x2r;
            y6i = x0i - x2i;
            x0r = x1r - x3i;
            x0i = x1i + x3r;
  40215e:	ee74 ca28 	vadd.f32	s25, s8, s17
  402162:	3408      	adds	r4, #8
            x0i = a[j + 1] + a[j1 + 1];
  402164:	ee79 0a20 	vadd.f32	s1, s18, s1
  402168:	3308      	adds	r3, #8
            x0r = x1r - x3i;
  40216a:	ee31 da61 	vsub.f32	s26, s2, s3
  40216e:	3208      	adds	r2, #8
            x2r = x1r + x3i;
  402170:	ee31 1a21 	vadd.f32	s2, s2, s3
            x2r = a[j2] + a[j3];
  402174:	ee72 2aa4 	vadd.f32	s5, s5, s9
            x2i = x3r - x1i;
  402178:	ee78 1ac4 	vsub.f32	s3, s17, s8
            x0r = a[j4] + a[j5];
  40217c:	ee3b ba05 	vadd.f32	s22, s22, s10
            x2i = a[j6 + 1] + a[j7 + 1];
  402180:	ee3a aa25 	vadd.f32	s20, s20, s11
            x0i = a[j4 + 1] + a[j5 + 1];
  402184:	ee76 6a87 	vadd.f32	s13, s13, s14
            x2r = a[j6] + a[j7];
  402188:	ee36 6a27 	vadd.f32	s12, s12, s15
            y5r = wk1i * x0r - wk1r * x0i;
            y5i = wk1i * x0i + wk1r * x0r;
            y7r = wk1r * x2r + wk1i * x2i;
            y7i = wk1r * x2i - wk1i * x2r;
            x0r = wk1r * y1r - wk1i * y1i;
  40218c:	ee2e 9a48 	vnmul.f32	s18, s28, s16
            y5r = wk1i * x0r - wk1r * x0i;
  402190:	ee2c 4ac0 	vnmul.f32	s8, s25, s0
            y2r = x0r - x2r;
  402194:	ee72 7a62 	vsub.f32	s15, s4, s5
            y6r = x0r - x2r;
  402198:	ee3b 7a46 	vsub.f32	s14, s22, s12
            y2i = x0i - x2i;
  40219c:	ee70 baea 	vsub.f32	s23, s1, s21
            y6i = x0i - x2i;
  4021a0:	ee36 caca 	vsub.f32	s24, s13, s20
            y7r = wk1r * x2r + wk1i * x2i;
  4021a4:	ee68 8a21 	vmul.f32	s17, s16, s3
            x0i = wk1r * y1i + wk1i * y1r;
            a[j1] = x0r + y5r;
            a[j1 + 1] = x0i + y5i;
            a[j5] = y5i - x0i;
            a[j5 + 1] = x0r - y5r;
            x0r = wk1i * y3r - wk1r * y3i;
  4021a8:	ee23 5ac0 	vnmul.f32	s10, s7, s0
            x0i = wk1i * y3i + wk1r * y3r;
  4021ac:	ee60 5a03 	vmul.f32	s11, s0, s6
            x0r = wk1r * y1r - wk1i * y1i;
  4021b0:	eea0 9a2d 	vfma.f32	s18, s0, s27
            y5r = wk1i * x0r - wk1r * x0i;
  4021b4:	eea8 4a0d 	vfma.f32	s8, s16, s26
            x0i = wk1r * y1i + wk1i * y1r;
  4021b8:	ee68 9a2d 	vmul.f32	s19, s16, s27
            y5i = wk1i * x0i + wk1r * x0r;
  4021bc:	ee60 4a0d 	vmul.f32	s9, s0, s26
            y7i = wk1r * x2i - wk1i * x2r;
  4021c0:	ee61 ea48 	vnmul.f32	s29, s2, s16
            y7r = wk1r * x2r + wk1i * x2i;
  4021c4:	eee0 8a01 	vfma.f32	s17, s0, s2
            x0r = wk1i * y3r - wk1r * y3i;
  4021c8:	eea8 5a03 	vfma.f32	s10, s16, s6
            x0i = wk1i * y3i + wk1r * y3r;
  4021cc:	eee8 5a23 	vfma.f32	s11, s16, s7
            a[j7 + 1] = x0r + y7r;
            a[j] = y0r + y4r;
            a[j + 1] = y0i + y4i;
            a[j4] = y4i - y0i;
            a[j4 + 1] = y0r - y4r;
            x0r = y2r - y6i;
  4021d0:	ee37 3acc 	vsub.f32	s6, s15, s24
            x0i = y2i + y6r;
  4021d4:	ee7b 3a87 	vadd.f32	s7, s23, s14
            x0i = wk1r * y1i + wk1i * y1r;
  4021d8:	eee0 9a0e 	vfma.f32	s19, s0, s28
            a[j2] = wn4r * (x0r - x0i);
            a[j2 + 1] = wn4r * (x0i + x0r);
            x0r = y6r - y2i;
  4021dc:	ee37 7a6b 	vsub.f32	s14, s14, s23
            y5i = wk1i * x0i + wk1r * x0r;
  4021e0:	eee8 4a2c 	vfma.f32	s9, s16, s25
            x0i = y2r + y6i;
  4021e4:	ee77 7a8c 	vadd.f32	s15, s15, s24
            y7i = wk1r * x2i - wk1i * x2r;
  4021e8:	eeb0 1a6e 	vmov.f32	s2, s29
            y0r = x0r + x2r;
  4021ec:	ee72 2a22 	vadd.f32	s5, s4, s5
            a[j2] = wn4r * (x0r - x0i);
  4021f0:	ee33 2a63 	vsub.f32	s4, s6, s7
            y7i = wk1r * x2i - wk1i * x2r;
  4021f4:	eea0 1a21 	vfma.f32	s2, s0, s3
            a[j2 + 1] = wn4r * (x0i + x0r);
  4021f8:	ee73 3a23 	vadd.f32	s7, s6, s7
            a[j6] = wn4r * (x0r - x0i);
  4021fc:	ee37 3a67 	vsub.f32	s6, s14, s15
            a[j6 + 1] = wn4r * (x0i + x0r);
  402200:	ee77 7a27 	vadd.f32	s15, s14, s15
            a[j1] = x0r + y5r;
  402204:	ee34 7a09 	vadd.f32	s14, s8, s18
            y0i = x0i + x2i;
  402208:	ee70 1aaa 	vadd.f32	s3, s1, s21
            y4r = x0r + x2r;
  40220c:	ee3b 6a06 	vadd.f32	s12, s22, s12
            a[j1] = x0r + y5r;
  402210:	ed07 7a02 	vstr	s14, [r7, #-8]
            a[j1 + 1] = x0i + y5i;
  402214:	ee74 0aa9 	vadd.f32	s1, s9, s19
            a[j3] = x0r - y7r;
  402218:	ee35 7a68 	vsub.f32	s14, s10, s17
            y4i = x0i + x2i;
  40221c:	ee76 6a8a 	vadd.f32	s13, s13, s20
            a[j5] = y5i - x0i;
  402220:	ee74 4ae9 	vsub.f32	s9, s9, s19
            a[j1 + 1] = x0i + y5i;
  402224:	ed47 0a01 	vstr	s1, [r7, #-4]
            a[j5 + 1] = x0r - y5r;
  402228:	ee39 4a44 	vsub.f32	s8, s18, s8
            a[j7 + 1] = x0r + y7r;
  40222c:	ee38 5a85 	vadd.f32	s10, s17, s10
            a[j5] = y5i - x0i;
  402230:	ed40 4a02 	vstr	s9, [r0, #-8]
            a[j3 + 1] = x0i + y7i;
  402234:	ee71 0a25 	vadd.f32	s1, s2, s11
            a[j5 + 1] = x0r - y5r;
  402238:	ed00 4a01 	vstr	s8, [r0, #-4]
            a[j7] = y7i - x0i;
  40223c:	ee71 5a65 	vsub.f32	s11, s2, s11
            a[j3] = x0r - y7r;
  402240:	ed05 7a02 	vstr	s14, [r5, #-8]
            a[j] = y0r + y4r;
  402244:	ee72 4a86 	vadd.f32	s9, s5, s12
            a[j + 1] = y0i + y4i;
  402248:	ee31 7aa6 	vadd.f32	s14, s3, s13
            a[j3 + 1] = x0i + y7i;
  40224c:	ed45 0a01 	vstr	s1, [r5, #-4]
            a[j7 + 1] = x0r + y7r;
  402250:	ed06 5a01 	vstr	s10, [r6, #-4]
            a[j4 + 1] = y0r - y4r;
  402254:	ee32 6ac6 	vsub.f32	s12, s5, s12
            a[j7] = y7i - x0i;
  402258:	ed46 5a02 	vstr	s11, [r6, #-8]
            a[j4] = y4i - y0i;
  40225c:	ee76 6ae1 	vsub.f32	s13, s13, s3
            a[j] = y0r + y4r;
  402260:	ed48 4a03 	vstr	s9, [r8, #-12]
            a[j2] = wn4r * (x0r - x0i);
  402264:	ee22 5a0f 	vmul.f32	s10, s4, s30
            a[j + 1] = y0i + y4i;
  402268:	ed0e 7a01 	vstr	s14, [lr, #-4]
            a[j2 + 1] = wn4r * (x0i + x0r);
  40226c:	ee63 5a8f 	vmul.f32	s11, s7, s30
            a[j6] = wn4r * (x0r - x0i);
  402270:	ee23 7a0f 	vmul.f32	s14, s6, s30
        for (j = m; j < l + m; j += 2) {
  402274:	45f2      	cmp	sl, lr
            a[j6 + 1] = wn4r * (x0i + x0r);
  402276:	ee67 7a8f 	vmul.f32	s15, s15, s30
            a[j4 + 1] = y0r - y4r;
  40227a:	ed04 6a01 	vstr	s12, [r4, #-4]
            a[j4] = y4i - y0i;
  40227e:	ed44 6a02 	vstr	s13, [r4, #-8]
            a[j2] = wn4r * (x0r - x0i);
  402282:	ed03 5a02 	vstr	s10, [r3, #-8]
            a[j2 + 1] = wn4r * (x0i + x0r);
  402286:	ed43 5a01 	vstr	s11, [r3, #-4]
            a[j6] = wn4r * (x0r - x0i);
  40228a:	ed02 7a02 	vstr	s14, [r2, #-8]
            a[j6 + 1] = wn4r * (x0i + x0r);
  40228e:	ed42 7a01 	vstr	s15, [r2, #-4]
        for (j = m; j < l + m; j += 2) {
  402292:	f47f af20 	bne.w	4020d6 <cftmdl+0x256>
        }
        k1 = 4;
        for (k = 2 * m; k < n; k += m) {
  402296:	ea4f 0a49 	mov.w	sl, r9, lsl #1
  40229a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40229c:	4553      	cmp	r3, sl
  40229e:	f340 8188 	ble.w	4025b2 <cftmdl+0x732>
  4022a2:	eb01 020a 	add.w	r2, r1, sl
  4022a6:	9c07      	ldr	r4, [sp, #28]
  4022a8:	eba9 0101 	sub.w	r1, r9, r1
  4022ac:	eef1 da4f 	vneg.f32	s27, s30
  4022b0:	eb04 0282 	add.w	r2, r4, r2, lsl #2
  4022b4:	465b      	mov	r3, fp
  4022b6:	eb09 000c 	add.w	r0, r9, ip
  4022ba:	eb04 0bc9 	add.w	fp, r4, r9, lsl #3
  4022be:	9206      	str	r2, [sp, #24]
  4022c0:	008a      	lsls	r2, r1, #2
  4022c2:	9005      	str	r0, [sp, #20]
  4022c4:	920b      	str	r2, [sp, #44]	; 0x2c
  4022c6:	ea4f 0289 	mov.w	r2, r9, lsl #2
  4022ca:	920a      	str	r2, [sp, #40]	; 0x28
            k1 += 4;
            wk1r = w[k1];
            wk1i = w[k1 + 1];
            wk2r = w[k1 + 2];
            wk2i = w[k1 + 3];
  4022cc:	edd3 ba0b 	vldr	s23, [r3, #44]	; 0x2c
            wtmp = 2 * wk2i;
            wk3r = wk1r - wtmp * wk1i;
            wk3i = wtmp * wk1r - wk1i;
            wk4r = 1 - wtmp * wk2i;
  4022d0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
            wk1i = w[k1 + 1];
  4022d4:	ed93 da09 	vldr	s26, [r3, #36]	; 0x24
            wtmp = 2 * wk2i;
  4022d8:	ee7b 7aab 	vadd.f32	s15, s23, s23
            wk1r = w[k1];
  4022dc:	edd3 aa08 	vldr	s21, [r3, #32]
            wk3r = wk1r - wtmp * wk1i;
  4022e0:	eeb1 aa4d 	vneg.f32	s20, s26
            wk2r = w[k1 + 2];
  4022e4:	ed93 ba0a 	vldr	s22, [r3, #40]	; 0x28
            wk4r = 1 - wtmp * wk2i;
  4022e8:	eeb1 7a6b 	vneg.f32	s14, s23
            wk5i = wtmp * wk1r - wk3i;
            wk6r = wk2r - wtmp * wk2i;
            wk6i = wtmp * wk2r - wk2i;
            wk7r = wk1r - wtmp * wk3i;
            wk7i = wtmp * wk3r - wk1i;
            for (j = k; j < l + k; j += 2) {
  4022ec:	9a05      	ldr	r2, [sp, #20]
            wk4i = wtmp * wk2r;
  4022ee:	ee6b ca27 	vmul.f32	s25, s22, s15
            wk3i = wtmp * wk1r - wk1i;
  4022f2:	eeb0 ea4a 	vmov.f32	s28, s20
            for (j = k; j < l + k; j += 2) {
  4022f6:	4592      	cmp	sl, r2
            wk3r = wk1r - wtmp * wk1i;
  4022f8:	eeb0 ca6a 	vmov.f32	s24, s21
            wk4r = 1 - wtmp * wk2i;
  4022fc:	eee7 6a27 	vfma.f32	s13, s14, s15
            wk3i = wtmp * wk1r - wk1i;
  402300:	eeaa eaa7 	vfma.f32	s28, s21, s15
            wk3r = wk1r - wtmp * wk1i;
  402304:	eeaa ca27 	vfma.f32	s24, s20, s15
            wk6r = wk2r - wtmp * wk2i;
  402308:	eeb0 6a4b 	vmov.f32	s12, s22
            wtmp = 2 * wk4i;
  40230c:	ee7c 7aac 	vadd.f32	s15, s25, s25
            wk7r = wk1r - wtmp * wk3i;
  402310:	eef0 ea6a 	vmov.f32	s29, s21
            wk4r = 1 - wtmp * wk2i;
  402314:	edcd 6a00 	vstr	s13, [sp]
            wk6r = wk2r - wtmp * wk2i;
  402318:	eea7 6a27 	vfma.f32	s12, s14, s15
            wk5i = wtmp * wk1r - wk3i;
  40231c:	eef1 6a4e 	vneg.f32	s13, s28
            wk6i = wtmp * wk2r - wk2i;
  402320:	eeab 7a27 	vfma.f32	s14, s22, s15
            wk7r = wk1r - wtmp * wk3i;
  402324:	eee6 eaa7 	vfma.f32	s29, s13, s15
            wk6r = wk2r - wtmp * wk2i;
  402328:	ed8d 6a03 	vstr	s12, [sp, #12]
            wk5r = wk3r - wtmp * wk1i;
  40232c:	eeb0 6a4c 	vmov.f32	s12, s24
            wk6i = wtmp * wk2r - wk2i;
  402330:	ed8d 7a04 	vstr	s14, [sp, #16]
            wk5r = wk3r - wtmp * wk1i;
  402334:	eeaa 6a27 	vfma.f32	s12, s20, s15
            wk7i = wtmp * wk3r - wk1i;
  402338:	eeac aa27 	vfma.f32	s20, s24, s15
            wk5r = wk3r - wtmp * wk1i;
  40233c:	ed8d 6a01 	vstr	s12, [sp, #4]
            wk5i = wtmp * wk1r - wk3i;
  402340:	eeb0 6a66 	vmov.f32	s12, s13
  402344:	eeaa 6aa7 	vfma.f32	s12, s21, s15
  402348:	ed8d 6a02 	vstr	s12, [sp, #8]
            for (j = k; j < l + k; j += 2) {
  40234c:	f280 8122 	bge.w	402594 <cftmdl+0x714>
  402350:	9a05      	ldr	r2, [sp, #20]
  402352:	f10a 0802 	add.w	r8, sl, #2
  402356:	9c06      	ldr	r4, [sp, #24]
  402358:	eb09 000b 	add.w	r0, r9, fp
  40235c:	f102 3eff 	add.w	lr, r2, #4294967295
  402360:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402362:	eb09 0104 	add.w	r1, r9, r4
  402366:	9408      	str	r4, [sp, #32]
  402368:	ebae 0e0a 	sub.w	lr, lr, sl
  40236c:	9c07      	ldr	r4, [sp, #28]
  40236e:	eb02 070b 	add.w	r7, r2, fp
  402372:	eb00 0209 	add.w	r2, r0, r9
  402376:	f02e 0e01 	bic.w	lr, lr, #1
  40237a:	eb01 0609 	add.w	r6, r1, r9
  40237e:	f10b 0c04 	add.w	ip, fp, #4
  402382:	eb02 0509 	add.w	r5, r2, r9
  402386:	44f0      	add	r8, lr
  402388:	46de      	mov	lr, fp
  40238a:	eb04 0888 	add.w	r8, r4, r8, lsl #2
  40238e:	9c08      	ldr	r4, [sp, #32]
                y2i = x0i - x2i;
                y1r = x1r - x3i;
                y1i = x1i + x3r;
                y3r = x1r + x3i;
                y3i = x1i - x3r;
                x0r = a[j4] + a[j5];
  402390:	ed92 3a00 	vldr	s6, [r2]
  402394:	f10e 0e08 	add.w	lr, lr, #8
  402398:	edd6 7a00 	vldr	s15, [r6]
  40239c:	3408      	adds	r4, #8
                x0i = a[j4 + 1] + a[j5 + 1];
                x1r = a[j4] - a[j5];
                x1i = a[j4 + 1] - a[j5 + 1];
                x2r = a[j6] + a[j7];
                x2i = a[j6 + 1] + a[j7 + 1];
  40239e:	ed95 4a01 	vldr	s8, [r5, #4]
  4023a2:	3608      	adds	r6, #8
  4023a4:	ed97 6a01 	vldr	s12, [r7, #4]
                x1r = a[j4] - a[j5];
  4023a8:	ee73 1a67 	vsub.f32	s3, s6, s15
                x0i = a[j4 + 1] + a[j5 + 1];
  4023ac:	ed56 6a01 	vldr	s13, [r6, #-4]
                x0r = a[j4] + a[j5];
  4023b0:	ee33 3a27 	vadd.f32	s6, s6, s15
                x2r = a[j6] + a[j7];
  4023b4:	edd5 5a00 	vldr	s11, [r5]
                x3r = a[j6] - a[j7];
                x3i = a[j6 + 1] - a[j7 + 1];
  4023b8:	ee74 7a46 	vsub.f32	s15, s8, s12
                x2r = a[j6] + a[j7];
  4023bc:	edd7 fa00 	vldr	s31, [r7]
                x2i = a[j6 + 1] + a[j7 + 1];
  4023c0:	ee34 4a06 	vadd.f32	s8, s8, s12
                x0i = a[j4 + 1] + a[j5 + 1];
  4023c4:	ed92 7a01 	vldr	s14, [r2, #4]
  4023c8:	3108      	adds	r1, #8
                x3r = a[j6] - a[j7];
  4023ca:	ee35 6aef 	vsub.f32	s12, s11, s31
                x0r = a[j] + a[j1];
  4023ce:	ed1c 9a01 	vldr	s18, [ip, #-4]
                x1i = a[j4 + 1] - a[j5 + 1];
  4023d2:	ee77 4a66 	vsub.f32	s9, s14, s13
                x2i = a[j2 + 1] + a[j3 + 1];
  4023d6:	edd0 8a01 	vldr	s17, [r0, #4]
                x0r = a[j] + a[j1];
  4023da:	ed54 2a02 	vldr	s5, [r4, #-8]
                y4r = x0r + x2r;
                y4i = x0i + x2i;
                y6r = x0r - x2r;
                y6i = x0i - x2i;
                x0r = x1r - x3i;
  4023de:	ee71 9ae7 	vsub.f32	s19, s3, s15
                x2i = a[j2 + 1] + a[j3 + 1];
  4023e2:	ed51 3a01 	vldr	s7, [r1, #-4]
                x0i = x1i + x3r;
                x2r = x1r + x3i;
  4023e6:	ee71 1aa7 	vadd.f32	s3, s3, s15
                x1r = a[j] - a[j1];
  4023ea:	ee39 8a62 	vsub.f32	s16, s18, s5
                x0i = a[j + 1] + a[j1 + 1];
  4023ee:	ed5e 0a01 	vldr	s1, [lr, #-4]
                x0i = x1i + x3r;
  4023f2:	ee34 2a86 	vadd.f32	s4, s9, s12
                x2r = a[j2] + a[j3];
  4023f6:	ed90 1a00 	vldr	s2, [r0]
                x2i = x1i - x3r;
  4023fa:	ee74 4ac6 	vsub.f32	s9, s9, s12
                x0i = a[j + 1] + a[j1 + 1];
  4023fe:	ed54 7a01 	vldr	s15, [r4, #-4]
                x3i = a[j2 + 1] - a[j3 + 1];
  402402:	ee38 6ae3 	vsub.f32	s12, s17, s7
                x2r = a[j2] + a[j3];
  402406:	ed11 5a02 	vldr	s10, [r1, #-8]
                x1i = a[j + 1] - a[j1 + 1];
  40240a:	ee30 0ae7 	vsub.f32	s0, s1, s15
  40240e:	3708      	adds	r7, #8
                x0i = a[j4 + 1] + a[j5 + 1];
  402410:	ee37 7a26 	vadd.f32	s14, s14, s13
  402414:	f10c 0c08 	add.w	ip, ip, #8
                x3r = a[j2] - a[j3];
  402418:	ee71 6a45 	vsub.f32	s13, s2, s10
  40241c:	3208      	adds	r2, #8
                x2r = a[j6] + a[j7];
  40241e:	ee75 5aaf 	vadd.f32	s11, s11, s31
  402422:	3008      	adds	r0, #8
                y5r = wn4r * (x0r - x0i);
  402424:	ee79 fac2 	vsub.f32	s31, s19, s4
  402428:	3508      	adds	r5, #8
                y5i = wn4r * (x0r + x0i);
  40242a:	ee39 2a82 	vadd.f32	s4, s19, s4
                y1r = x1r - x3i;
  40242e:	ee78 9a46 	vsub.f32	s19, s16, s12
                y3r = x1r + x3i;
  402432:	ee38 6a06 	vadd.f32	s12, s16, s12
                y1i = x1i + x3r;
  402436:	ee30 8a26 	vadd.f32	s16, s0, s13
                y3i = x1i - x3r;
  40243a:	ee70 6a66 	vsub.f32	s13, s0, s13
                y7r = wn4r * (x2r - x2i);
  40243e:	ee31 0ae4 	vsub.f32	s0, s3, s9
                y7i = wn4r * (x2r + x2i);
  402442:	ee71 4aa4 	vadd.f32	s9, s3, s9
                x0r = y1r + y5r;
  402446:	eef0 1a69 	vmov.f32	s3, s19
                x0i = y1i + y5i;
                a[j1] = wk1r * x0r - wk1i * x0i;
                a[j1 + 1] = wk1r * x0i + wk1i * x0r;
                x0r = y1r - y5r;
  40244a:	eeed 9aaf 	vfma.f32	s19, s27, s31
                x0i = a[j + 1] + a[j1 + 1];
  40244e:	ee70 7aa7 	vadd.f32	s15, s1, s15
                x0r = y1r + y5r;
  402452:	eeef 1a2f 	vfma.f32	s3, s30, s31
                x0i = y1i + y5i;
  402456:	eef0 fa48 	vmov.f32	s31, s16
                x0i = y1i - y5i;
  40245a:	eef0 0a48 	vmov.f32	s1, s16
                x2r = a[j2] + a[j3];
  40245e:	ee31 5a05 	vadd.f32	s10, s2, s10
                x0i = y1i + y5i;
  402462:	eeef fa02 	vfma.f32	s31, s30, s4
                x0r = a[j] + a[j1];
  402466:	ee79 2a22 	vadd.f32	s5, s18, s5
                a[j5] = wk5r * x0r - wk5i * x0i;
                a[j5 + 1] = wk5r * x0i + wk5i * x0r;
                x0r = y3r - y7i;
                x0i = y3i + y7r;
  40246a:	eeb0 8a66 	vmov.f32	s16, s13
                x2i = a[j2 + 1] + a[j3 + 1];
  40246e:	ee78 3aa3 	vadd.f32	s7, s17, s7
                x0i = y1i - y5i;
  402472:	eeed 0a82 	vfma.f32	s1, s27, s4
                x0r = y3r - y7i;
  402476:	eeb0 2a46 	vmov.f32	s4, s12
                x0i = y3i + y7r;
  40247a:	eeaf 8a00 	vfma.f32	s16, s30, s0
                a[j3] = wk3r * x0r - wk3i * x0i;
                a[j3 + 1] = wk3r * x0i + wk3i * x0r;
                x0r = y3r + y7i;
                x0i = y3i - y7r;
  40247e:	eeed 6a80 	vfma.f32	s13, s27, s0
                y0r = x0r + x2r;
  402482:	ee72 8a85 	vadd.f32	s17, s5, s10
                a[j1 + 1] = wk1r * x0i + wk1i * x0r;
  402486:	ee2d 0a21 	vmul.f32	s0, s26, s3
                y2r = x0r - x2r;
  40248a:	ee72 2ac5 	vsub.f32	s5, s5, s10
                y4i = x0i + x2i;
  40248e:	ee37 5a04 	vadd.f32	s10, s14, s8
                y6i = x0i - x2i;
  402492:	ee37 7a44 	vsub.f32	s14, s14, s8
                x0r = y3r - y7i;
  402496:	eead 2aa4 	vfma.f32	s4, s27, s9
                x0r = y3r + y7i;
  40249a:	eeaf 6a24 	vfma.f32	s12, s30, s9
                y4r = x0r + x2r;
  40249e:	ee33 9a25 	vadd.f32	s18, s6, s11
                y0i = x0i + x2i;
  4024a2:	ee77 4aa3 	vadd.f32	s9, s15, s7
                y6r = x0r - x2r;
  4024a6:	ee73 5a65 	vsub.f32	s11, s6, s11
                y2i = x0i - x2i;
  4024aa:	ee77 7ae3 	vsub.f32	s15, s15, s7
                a[j + 1] = y0i + y4i;
                x0r = y0r - y4r;
                x0i = y0i - y4i;
                a[j4] = wk4r * x0r - wk4i * x0i;
                a[j4 + 1] = wk4r * x0i + wk4i * x0r;
                x0r = y2r - y6i;
  4024ae:	ee32 1ac7 	vsub.f32	s2, s5, s14
                a[j1 + 1] = wk1r * x0i + wk1i * x0r;
  4024b2:	eeaa 0aaf 	vfma.f32	s0, s21, s31
                x0i = y2i + y6r;
                a[j2] = wk2r * x0r - wk2i * x0i;
                a[j2 + 1] = wk2r * x0i + wk2i * x0r;
                x0r = y2r + y6i;
  4024b6:	ee32 7a87 	vadd.f32	s14, s5, s14
                a[j1] = wk1r * x0r - wk1i * x0i;
  4024ba:	ee6f 2acd 	vnmul.f32	s5, s31, s26
                a[j5] = wk5r * x0r - wk5i * x0i;
  4024be:	eddd fa02 	vldr	s31, [sp, #8]
                x0i = y2i + y6r;
  4024c2:	ee37 4aa5 	vadd.f32	s8, s15, s11
                x0i = y2i - y6r;
  4024c6:	ee77 5ae5 	vsub.f32	s11, s15, s11
                a[j5] = wk5r * x0r - wk5i * x0i;
  4024ca:	ee60 7aef 	vnmul.f32	s15, s1, s31
                a[j1] = wk1r * x0r - wk1i * x0i;
  4024ce:	eeea 2aa1 	vfma.f32	s5, s21, s3
                a[j1 + 1] = wk1r * x0i + wk1i * x0r;
  4024d2:	ed04 0a01 	vstr	s0, [r4, #-4]
                a[j5 + 1] = wk5r * x0i + wk5i * x0r;
  4024d6:	ee6f 1aa9 	vmul.f32	s3, s31, s19
                a[j5] = wk5r * x0r - wk5i * x0i;
  4024da:	eddd fa01 	vldr	s31, [sp, #4]
                a[j3] = wk3r * x0r - wk3i * x0i;
  4024de:	ee28 0a4e 	vnmul.f32	s0, s16, s28
                a[j5] = wk5r * x0r - wk5i * x0i;
  4024e2:	eeef 7aa9 	vfma.f32	s15, s31, s19
                a[j3 + 1] = wk3r * x0i + wk3i * x0r;
  4024e6:	ee6e 9a02 	vmul.f32	s19, s28, s4
                a[j5 + 1] = wk5r * x0i + wk5i * x0r;
  4024ea:	eeef 1aa0 	vfma.f32	s3, s31, s1
                a[j3] = wk3r * x0r - wk3i * x0i;
  4024ee:	eeac 0a02 	vfma.f32	s0, s24, s4
                a[j1] = wk1r * x0r - wk1i * x0i;
  4024f2:	ed44 2a02 	vstr	s5, [r4, #-8]
                a[j3 + 1] = wk3r * x0i + wk3i * x0r;
  4024f6:	eeec 9a08 	vfma.f32	s19, s24, s16
                a[j7] = wk7r * x0r - wk7i * x0i;
  4024fa:	ee66 0aca 	vnmul.f32	s1, s13, s20
                a[j7 + 1] = wk7r * x0i + wk7i * x0r;
  4024fe:	ee6a 2a06 	vmul.f32	s5, s20, s12
                a[j5] = wk5r * x0r - wk5i * x0i;
  402502:	ed46 7a02 	vstr	s15, [r6, #-8]
                x0r = y0r - y4r;
  402506:	ee78 3ac9 	vsub.f32	s7, s17, s18
                x0i = y0i - y4i;
  40250a:	ee34 3ac5 	vsub.f32	s6, s9, s10
                a[j5 + 1] = wk5r * x0i + wk5i * x0r;
  40250e:	ed46 1a01 	vstr	s3, [r6, #-4]
                a[j2 + 1] = wk2r * x0i + wk2i * x0r;
  402512:	ee2b 2a81 	vmul.f32	s4, s23, s2
                a[j3] = wk3r * x0r - wk3i * x0i;
  402516:	ed01 0a02 	vstr	s0, [r1, #-8]
                a[j3 + 1] = wk3r * x0i + wk3i * x0r;
  40251a:	ed41 9a01 	vstr	s19, [r1, #-4]
                a[j7] = wk7r * x0r - wk7i * x0i;
  40251e:	eeee 0a86 	vfma.f32	s1, s29, s12
                a[j6] = wk6r * x0r - wk6i * x0i;
  402522:	eddd 9a04 	vldr	s19, [sp, #16]
                a[j7 + 1] = wk7r * x0i + wk7i * x0r;
  402526:	eeee 2aa6 	vfma.f32	s5, s29, s13
                a[j2] = wk2r * x0r - wk2i * x0i;
  40252a:	ee24 6a6b 	vnmul.f32	s12, s8, s23
                a[j4 + 1] = wk4r * x0i + wk4i * x0r;
  40252e:	ed9d 0a00 	vldr	s0, [sp]
  402532:	ee6c 7aa3 	vmul.f32	s15, s25, s7
                a[j4] = wk4r * x0r - wk4i * x0i;
  402536:	ee63 1a6c 	vnmul.f32	s3, s6, s25
                a[j6] = wk6r * x0r - wk6i * x0i;
  40253a:	ee25 8ae9 	vnmul.f32	s16, s11, s19
                a[j6 + 1] = wk6r * x0i + wk6i * x0r;
  40253e:	ee69 6a87 	vmul.f32	s13, s19, s14
                a[j7] = wk7r * x0r - wk7i * x0i;
  402542:	ed47 0a02 	vstr	s1, [r7, #-8]
                a[j2 + 1] = wk2r * x0i + wk2i * x0r;
  402546:	eeab 2a04 	vfma.f32	s4, s22, s8
                a[j6] = wk6r * x0r - wk6i * x0i;
  40254a:	ed9d 4a03 	vldr	s8, [sp, #12]
                a[j] = y0r + y4r;
  40254e:	ee78 8a89 	vadd.f32	s17, s17, s18
                a[j7 + 1] = wk7r * x0i + wk7i * x0r;
  402552:	ed47 2a01 	vstr	s5, [r7, #-4]
                a[j + 1] = y0i + y4i;
  402556:	ee74 4a85 	vadd.f32	s9, s9, s10
                a[j4 + 1] = wk4r * x0i + wk4i * x0r;
  40255a:	eee0 7a03 	vfma.f32	s15, s0, s6
                a[j4] = wk4r * x0r - wk4i * x0i;
  40255e:	eee0 1a23 	vfma.f32	s3, s0, s7
                a[j] = y0r + y4r;
  402562:	ed4c 8a03 	vstr	s17, [ip, #-12]
                a[j2] = wk2r * x0r - wk2i * x0i;
  402566:	eeab 6a01 	vfma.f32	s12, s22, s2
                a[j + 1] = y0i + y4i;
  40256a:	ed4e 4a01 	vstr	s9, [lr, #-4]
                a[j6] = wk6r * x0r - wk6i * x0i;
  40256e:	eea4 8a07 	vfma.f32	s16, s8, s14
            for (j = k; j < l + k; j += 2) {
  402572:	45f0      	cmp	r8, lr
                a[j6 + 1] = wk6r * x0i + wk6i * x0r;
  402574:	eee4 6a25 	vfma.f32	s13, s8, s11
                a[j4] = wk4r * x0r - wk4i * x0i;
  402578:	ed42 1a02 	vstr	s3, [r2, #-8]
                a[j4 + 1] = wk4r * x0i + wk4i * x0r;
  40257c:	ed42 7a01 	vstr	s15, [r2, #-4]
                a[j2] = wk2r * x0r - wk2i * x0i;
  402580:	ed00 6a02 	vstr	s12, [r0, #-8]
                a[j2 + 1] = wk2r * x0i + wk2i * x0r;
  402584:	ed00 2a01 	vstr	s4, [r0, #-4]
                a[j6] = wk6r * x0r - wk6i * x0i;
  402588:	ed05 8a02 	vstr	s16, [r5, #-8]
                a[j6 + 1] = wk6r * x0i + wk6i * x0r;
  40258c:	ed45 6a01 	vstr	s13, [r5, #-4]
            for (j = k; j < l + k; j += 2) {
  402590:	f47f aefe 	bne.w	402390 <cftmdl+0x510>
  402594:	9a05      	ldr	r2, [sp, #20]
        for (k = 2 * m; k < n; k += m) {
  402596:	44ca      	add	sl, r9
  402598:	990a      	ldr	r1, [sp, #40]	; 0x28
  40259a:	3310      	adds	r3, #16
  40259c:	444a      	add	r2, r9
  40259e:	448b      	add	fp, r1
  4025a0:	9205      	str	r2, [sp, #20]
  4025a2:	9a06      	ldr	r2, [sp, #24]
  4025a4:	4610      	mov	r0, r2
  4025a6:	9a09      	ldr	r2, [sp, #36]	; 0x24
  4025a8:	4408      	add	r0, r1
  4025aa:	4552      	cmp	r2, sl
  4025ac:	9006      	str	r0, [sp, #24]
  4025ae:	f73f ae8d 	bgt.w	4022cc <cftmdl+0x44c>
            }
        }
    }
}
  4025b2:	b00d      	add	sp, #52	; 0x34
  4025b4:	ecbd 8b10 	vpop	{d8-d15}
  4025b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

004025bc <cftfsub>:
    if (n >= 16) {
  4025bc:	280f      	cmp	r0, #15
{
  4025be:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4025c2:	4606      	mov	r6, r0
  4025c4:	460d      	mov	r5, r1
    if (n >= 16) {
  4025c6:	dc6a      	bgt.n	40269e <cftfsub+0xe2>
  4025c8:	2304      	movs	r3, #4
    l = 2;
  4025ca:	2402      	movs	r4, #2
    if ((l << 1) < n) {
  4025cc:	429e      	cmp	r6, r3
  4025ce:	dd63      	ble.n	402698 <cftfsub+0xdc>
  4025d0:	00e0      	lsls	r0, r4, #3
  4025d2:	0063      	lsls	r3, r4, #1
  4025d4:	462a      	mov	r2, r5
  4025d6:	00a5      	lsls	r5, r4, #2
  4025d8:	1d01      	adds	r1, r0, #4
  4025da:	4423      	add	r3, r4
  4025dc:	4628      	mov	r0, r5
  4025de:	1956      	adds	r6, r2, r5
  4025e0:	3504      	adds	r5, #4
  4025e2:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  4025e6:	4411      	add	r1, r2
  4025e8:	4430      	add	r0, r6
  4025ea:	4415      	add	r5, r2
  4025ec:	1d17      	adds	r7, r2, #4
  4025ee:	f04f 0e00 	mov.w	lr, #0
            x0r = a[j] + a[j1];
  4025f2:	ed15 6a01 	vldr	s12, [r5, #-4]
        for (j = 0; j < l; j += 2) {
  4025f6:	f10e 0e02 	add.w	lr, lr, #2
            x0r = a[j] + a[j1];
  4025fa:	ed17 7a01 	vldr	s14, [r7, #-4]
  4025fe:	3208      	adds	r2, #8
            x0i = a[j + 1] + a[j1 + 1];
  402600:	edd6 4a01 	vldr	s9, [r6, #4]
        for (j = 0; j < l; j += 2) {
  402604:	45a6      	cmp	lr, r4
            x2r = a[j2] + a[j3];
  402606:	ed51 6a01 	vldr	s13, [r1, #-4]
            x0r = a[j] + a[j1];
  40260a:	ee37 5a06 	vadd.f32	s10, s14, s12
            x2r = a[j2] + a[j3];
  40260e:	edd3 5a00 	vldr	s11, [r3]
            x1r = a[j] - a[j1];
  402612:	ee37 7a46 	vsub.f32	s14, s14, s12
            x0i = a[j + 1] + a[j1 + 1];
  402616:	ed52 7a01 	vldr	s15, [r2, #-4]
  40261a:	f107 0708 	add.w	r7, r7, #8
            x2i = a[j2 + 1] + a[j3 + 1];
  40261e:	ed90 6a01 	vldr	s12, [r0, #4]
            x2r = a[j2] + a[j3];
  402622:	ee36 4aa5 	vadd.f32	s8, s13, s11
            x2i = a[j2 + 1] + a[j3 + 1];
  402626:	edd3 3a01 	vldr	s7, [r3, #4]
            x3r = a[j2] - a[j3];
  40262a:	ee76 6ae5 	vsub.f32	s13, s13, s11
            x0i = a[j + 1] + a[j1 + 1];
  40262e:	ee77 5aa4 	vadd.f32	s11, s15, s9
  402632:	f100 0008 	add.w	r0, r0, #8
            x1i = a[j + 1] - a[j1 + 1];
  402636:	ee77 7ae4 	vsub.f32	s15, s15, s9
  40263a:	f101 0108 	add.w	r1, r1, #8
            x2i = a[j2 + 1] + a[j3 + 1];
  40263e:	ee76 4a23 	vadd.f32	s9, s12, s7
  402642:	f105 0508 	add.w	r5, r5, #8
            x3i = a[j2 + 1] - a[j3 + 1];
  402646:	ee36 6a63 	vsub.f32	s12, s12, s7
  40264a:	f106 0608 	add.w	r6, r6, #8
            a[j] = x0r + x2r;
  40264e:	ee75 3a04 	vadd.f32	s7, s10, s8
  402652:	f103 0308 	add.w	r3, r3, #8
            a[j2] = x0r - x2r;
  402656:	ee35 5a44 	vsub.f32	s10, s10, s8
            a[j + 1] = x0i + x2i;
  40265a:	ee35 4aa4 	vadd.f32	s8, s11, s9
            a[j2 + 1] = x0i - x2i;
  40265e:	ee75 5ae4 	vsub.f32	s11, s11, s9
            a[j] = x0r + x2r;
  402662:	ed47 3a03 	vstr	s7, [r7, #-12]
            a[j1] = x1r - x3i;
  402666:	ee77 4a46 	vsub.f32	s9, s14, s12
            a[j3] = x1r + x3i;
  40266a:	ee37 7a06 	vadd.f32	s14, s14, s12
            a[j + 1] = x0i + x2i;
  40266e:	ed02 4a01 	vstr	s8, [r2, #-4]
            a[j1 + 1] = x1i + x3r;
  402672:	ee37 6aa6 	vadd.f32	s12, s15, s13
            a[j2] = x0r - x2r;
  402676:	ed01 5a03 	vstr	s10, [r1, #-12]
            a[j3 + 1] = x1i - x3r;
  40267a:	ee77 7ae6 	vsub.f32	s15, s15, s13
            a[j2 + 1] = x0i - x2i;
  40267e:	ed40 5a01 	vstr	s11, [r0, #-4]
            a[j1] = x1r - x3i;
  402682:	ed45 4a03 	vstr	s9, [r5, #-12]
            a[j1 + 1] = x1i + x3r;
  402686:	ed06 6a01 	vstr	s12, [r6, #-4]
            a[j3] = x1r + x3i;
  40268a:	ed03 7a02 	vstr	s14, [r3, #-8]
            a[j3 + 1] = x1i - x3r;
  40268e:	ed43 7a01 	vstr	s15, [r3, #-4]
        for (j = 0; j < l; j += 2) {
  402692:	dbae      	blt.n	4025f2 <cftfsub+0x36>
  402694:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    } else if ((l << 1) == n) {
  402698:	d01a      	beq.n	4026d0 <cftfsub+0x114>
  40269a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        cft1st(n, a, w);
  40269e:	4b27      	ldr	r3, [pc, #156]	; (40273c <cftfsub+0x180>)
  4026a0:	4617      	mov	r7, r2
  4026a2:	4798      	blx	r3
        while ((l << 3) <= n) {
  4026a4:	287f      	cmp	r0, #127	; 0x7f
  4026a6:	dd46      	ble.n	402736 <cftfsub+0x17a>
  4026a8:	2480      	movs	r4, #128	; 0x80
  4026aa:	2110      	movs	r1, #16
  4026ac:	f8df 8090 	ldr.w	r8, [pc, #144]	; 402740 <cftfsub+0x184>
  4026b0:	e000      	b.n	4026b4 <cftfsub+0xf8>
  4026b2:	4604      	mov	r4, r0
            cftmdl(n, l, a, w);
  4026b4:	4630      	mov	r0, r6
  4026b6:	463b      	mov	r3, r7
  4026b8:	462a      	mov	r2, r5
  4026ba:	47c0      	blx	r8
  4026bc:	4621      	mov	r1, r4
        while ((l << 3) <= n) {
  4026be:	00e0      	lsls	r0, r4, #3
  4026c0:	4286      	cmp	r6, r0
  4026c2:	daf6      	bge.n	4026b2 <cftfsub+0xf6>
    if ((l << 1) < n) {
  4026c4:	0063      	lsls	r3, r4, #1
  4026c6:	429e      	cmp	r6, r3
  4026c8:	dc31      	bgt.n	40272e <cftfsub+0x172>
    } else if ((l << 1) == n) {
  4026ca:	d1e6      	bne.n	40269a <cftfsub+0xde>
        for (j = 0; j < l; j += 2) {
  4026cc:	2c00      	cmp	r4, #0
  4026ce:	dde4      	ble.n	40269a <cftfsub+0xde>
  4026d0:	1e60      	subs	r0, r4, #1
  4026d2:	00a4      	lsls	r4, r4, #2
  4026d4:	462a      	mov	r2, r5
  4026d6:	1d2b      	adds	r3, r5, #4
  4026d8:	0840      	lsrs	r0, r0, #1
  4026da:	1d21      	adds	r1, r4, #4
  4026dc:	442c      	add	r4, r5
  4026de:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
  4026e2:	4429      	add	r1, r5
  4026e4:	300c      	adds	r0, #12
            x0r = a[j] - a[j1];
  4026e6:	ed53 7a01 	vldr	s15, [r3, #-4]
  4026ea:	3308      	adds	r3, #8
  4026ec:	ed51 6a01 	vldr	s13, [r1, #-4]
  4026f0:	3208      	adds	r2, #8
            x0i = a[j + 1] - a[j1 + 1];
  4026f2:	ed12 7a01 	vldr	s14, [r2, #-4]
  4026f6:	3108      	adds	r1, #8
            a[j] += a[j1];
  4026f8:	ee37 6aa6 	vadd.f32	s12, s15, s13
            x0i = a[j + 1] - a[j1 + 1];
  4026fc:	edd4 5a01 	vldr	s11, [r4, #4]
            x0r = a[j] - a[j1];
  402700:	ee77 7ae6 	vsub.f32	s15, s15, s13
  402704:	3408      	adds	r4, #8
            x0i = a[j + 1] - a[j1 + 1];
  402706:	ee37 7a65 	vsub.f32	s14, s14, s11
            a[j] += a[j1];
  40270a:	ed03 6a03 	vstr	s12, [r3, #-12]
        for (j = 0; j < l; j += 2) {
  40270e:	4298      	cmp	r0, r3
            a[j + 1] += a[j1 + 1];
  402710:	ed52 6a01 	vldr	s13, [r2, #-4]
  402714:	ed14 6a01 	vldr	s12, [r4, #-4]
  402718:	ee76 6a86 	vadd.f32	s13, s13, s12
  40271c:	ed42 6a01 	vstr	s13, [r2, #-4]
            a[j1] = x0r;
  402720:	ed41 7a03 	vstr	s15, [r1, #-12]
            a[j1 + 1] = x0i;
  402724:	ed04 7a01 	vstr	s14, [r4, #-4]
        for (j = 0; j < l; j += 2) {
  402728:	d1dd      	bne.n	4026e6 <cftfsub+0x12a>
  40272a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        for (j = 0; j < l; j += 2) {
  40272e:	2c00      	cmp	r4, #0
  402730:	f73f af50 	bgt.w	4025d4 <cftfsub+0x18>
  402734:	e7b1      	b.n	40269a <cftfsub+0xde>
        while ((l << 3) <= n) {
  402736:	2320      	movs	r3, #32
        l = 16;
  402738:	2410      	movs	r4, #16
  40273a:	e747      	b.n	4025cc <cftfsub+0x10>
  40273c:	004018c1 	.word	0x004018c1
  402740:	00401e81 	.word	0x00401e81

00402744 <aubio_ooura_rdft>:
{
  402744:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402748:	4699      	mov	r9, r3
  40274a:	4616      	mov	r6, r2
  40274c:	4604      	mov	r4, r0
  40274e:	ed2d 8b06 	vpush	{d8-d10}
  402752:	b089      	sub	sp, #36	; 0x24
    nw = ip[0];
  402754:	681b      	ldr	r3, [r3, #0]
{
  402756:	9a18      	ldr	r2, [sp, #96]	; 0x60
    if (n > (nw << 2)) {
  402758:	ebb0 0f83 	cmp.w	r0, r3, lsl #2
{
  40275c:	9102      	str	r1, [sp, #8]
    nw = ip[0];
  40275e:	9301      	str	r3, [sp, #4]
{
  402760:	9200      	str	r2, [sp, #0]
    if (n > (nw << 2)) {
  402762:	f300 8099 	bgt.w	402898 <aubio_ooura_rdft+0x154>
  402766:	f8d9 5004 	ldr.w	r5, [r9, #4]
  40276a:	00ab      	lsls	r3, r5, #2
    if (n > (nc << 2)) {
  40276c:	429c      	cmp	r4, r3
  40276e:	dc18      	bgt.n	4027a2 <aubio_ooura_rdft+0x5e>
    if (isgn >= 0) {
  402770:	9b02      	ldr	r3, [sp, #8]
  402772:	2b00      	cmp	r3, #0
  402774:	db72      	blt.n	40285c <aubio_ooura_rdft+0x118>
        if (n > 4) {
  402776:	2c04      	cmp	r4, #4
  402778:	f300 8104 	bgt.w	402984 <aubio_ooura_rdft+0x240>
        } else if (n == 4) {
  40277c:	f000 8161 	beq.w	402a42 <aubio_ooura_rdft+0x2fe>
        xi = a[0] - a[1];
  402780:	edd6 7a00 	vldr	s15, [r6]
  402784:	ed96 7a01 	vldr	s14, [r6, #4]
        a[0] += a[1];
  402788:	ee77 6a87 	vadd.f32	s13, s15, s14
        xi = a[0] - a[1];
  40278c:	ee77 7ac7 	vsub.f32	s15, s15, s14
        a[0] += a[1];
  402790:	edc6 6a00 	vstr	s13, [r6]
        a[1] = xi;
  402794:	edc6 7a01 	vstr	s15, [r6, #4]
}
  402798:	b009      	add	sp, #36	; 0x24
  40279a:	ecbd 8b06 	vpop	{d8-d10}
  40279e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        nc = n >> 2;
  4027a2:	10a5      	asrs	r5, r4, #2
        makect(nc, ip, w + nw);
  4027a4:	9b00      	ldr	r3, [sp, #0]
  4027a6:	9a01      	ldr	r2, [sp, #4]
    if (nc > 1) {
  4027a8:	2d01      	cmp	r5, #1
    ip[1] = nc;
  4027aa:	f8c9 5004 	str.w	r5, [r9, #4]
        makect(nc, ip, w + nw);
  4027ae:	eb03 0a82 	add.w	sl, r3, r2, lsl #2
    if (nc > 1) {
  4027b2:	dddd      	ble.n	402770 <aubio_ooura_rdft+0x2c>
        nch = nc >> 1;
  4027b4:	10e3      	asrs	r3, r4, #3
        delta = ATAN(1.0) / nch;
  4027b6:	ed9f 7aa6 	vldr	s14, [pc, #664]	; 402a50 <aubio_ooura_rdft+0x30c>
        c[0] = COS(delta * nch);
  4027ba:	f8df 82a4 	ldr.w	r8, [pc, #676]	; 402a60 <aubio_ooura_rdft+0x31c>
        c[nch] = (smpl_t)0.5 * c[0];
  4027be:	eef6 8a00 	vmov.f32	s17, #96	; 0x3f000000  0.5
        delta = ATAN(1.0) / nch;
  4027c2:	ee07 3a90 	vmov	s15, r3
        nch = nc >> 1;
  4027c6:	461f      	mov	r7, r3
        delta = ATAN(1.0) / nch;
  4027c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
  4027cc:	ee87 9a27 	vdiv.f32	s18, s14, s15
        c[0] = COS(delta * nch);
  4027d0:	ee67 7a89 	vmul.f32	s15, s15, s18
  4027d4:	ee17 0a90 	vmov	r0, s15
  4027d8:	47c0      	blx	r8
  4027da:	ee07 0a90 	vmov	s15, r0
        c[nch] = (smpl_t)0.5 * c[0];
  4027de:	eb0a 0387 	add.w	r3, sl, r7, lsl #2
        for (j = 1; j < nch; j++) {
  4027e2:	2f01      	cmp	r7, #1
        c[nch] = (smpl_t)0.5 * c[0];
  4027e4:	ee67 7aa8 	vmul.f32	s15, s15, s17
        c[0] = COS(delta * nch);
  4027e8:	f8ca 0000 	str.w	r0, [sl]
        c[nch] = (smpl_t)0.5 * c[0];
  4027ec:	edc3 7a00 	vstr	s15, [r3]
        for (j = 1; j < nch; j++) {
  4027f0:	463b      	mov	r3, r7
  4027f2:	d0bd      	beq.n	402770 <aubio_ooura_rdft+0x2c>
  4027f4:	f04f 0b01 	mov.w	fp, #1
  4027f8:	f10a 0704 	add.w	r7, sl, #4
  4027fc:	4a95      	ldr	r2, [pc, #596]	; (402a54 <aubio_ooura_rdft+0x310>)
  4027fe:	eb0a 0a85 	add.w	sl, sl, r5, lsl #2
  402802:	9603      	str	r6, [sp, #12]
  402804:	465e      	mov	r6, fp
  402806:	f8cd 9010 	str.w	r9, [sp, #16]
  40280a:	46a3      	mov	fp, r4
  40280c:	46d1      	mov	r9, sl
  40280e:	4614      	mov	r4, r2
  402810:	46aa      	mov	sl, r5
  402812:	4645      	mov	r5, r8
  402814:	4698      	mov	r8, r3
            c[j] = (smpl_t)0.5 * COS(delta * j);
  402816:	ee07 6a90 	vmov	s15, r6
        for (j = 1; j < nch; j++) {
  40281a:	3601      	adds	r6, #1
            c[j] = (smpl_t)0.5 * COS(delta * j);
  40281c:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
  402820:	ee28 8a09 	vmul.f32	s16, s16, s18
  402824:	ee18 0a10 	vmov	r0, s16
  402828:	47a8      	blx	r5
  40282a:	ee07 0a90 	vmov	s15, r0
            c[nc - j] = (smpl_t)0.5 * SIN(delta * j);
  40282e:	ee18 0a10 	vmov	r0, s16
            c[j] = (smpl_t)0.5 * COS(delta * j);
  402832:	ee67 7aa8 	vmul.f32	s15, s15, s17
  402836:	ece7 7a01 	vstmia	r7!, {s15}
            c[nc - j] = (smpl_t)0.5 * SIN(delta * j);
  40283a:	47a0      	blx	r4
  40283c:	ee07 0a90 	vmov	s15, r0
        for (j = 1; j < nch; j++) {
  402840:	45b0      	cmp	r8, r6
            c[nc - j] = (smpl_t)0.5 * SIN(delta * j);
  402842:	ee67 7aa8 	vmul.f32	s15, s15, s17
  402846:	ed69 7a01 	vstmdb	r9!, {s15}
        for (j = 1; j < nch; j++) {
  40284a:	d1e4      	bne.n	402816 <aubio_ooura_rdft+0xd2>
    if (isgn >= 0) {
  40284c:	9b02      	ldr	r3, [sp, #8]
  40284e:	4655      	mov	r5, sl
  402850:	465c      	mov	r4, fp
  402852:	9e03      	ldr	r6, [sp, #12]
  402854:	2b00      	cmp	r3, #0
  402856:	f8dd 9010 	ldr.w	r9, [sp, #16]
  40285a:	da8c      	bge.n	402776 <aubio_ooura_rdft+0x32>
        a[1] = (smpl_t)0.5 * (a[0] - a[1]);
  40285c:	ed96 7a00 	vldr	s14, [r6]
  402860:	eeb6 4a00 	vmov.f32	s8, #96	; 0x3f000000  0.5
  402864:	edd6 7a01 	vldr	s15, [r6, #4]
        if (n > 4) {
  402868:	2c04      	cmp	r4, #4
        a[1] = (smpl_t)0.5 * (a[0] - a[1]);
  40286a:	ee77 7a67 	vsub.f32	s15, s14, s15
  40286e:	ee67 7a84 	vmul.f32	s15, s15, s8
        a[0] -= a[1];
  402872:	ee37 7a67 	vsub.f32	s14, s14, s15
        a[1] = (smpl_t)0.5 * (a[0] - a[1]);
  402876:	edc6 7a01 	vstr	s15, [r6, #4]
        a[0] -= a[1];
  40287a:	ed86 7a00 	vstr	s14, [r6]
        if (n > 4) {
  40287e:	f300 80f1 	bgt.w	402a64 <aubio_ooura_rdft+0x320>
        } else if (n == 4) {
  402882:	d189      	bne.n	402798 <aubio_ooura_rdft+0x54>
            cftfsub(n, a, w);
  402884:	9a00      	ldr	r2, [sp, #0]
  402886:	4631      	mov	r1, r6
  402888:	4620      	mov	r0, r4
  40288a:	4b73      	ldr	r3, [pc, #460]	; (402a58 <aubio_ooura_rdft+0x314>)
}
  40288c:	b009      	add	sp, #36	; 0x24
  40288e:	ecbd 8b06 	vpop	{d8-d10}
  402892:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
            cftfsub(n, a, w);
  402896:	4718      	bx	r3
        nw = n >> 2;
  402898:	1083      	asrs	r3, r0, #2
    ip[1] = 1;
  40289a:	2501      	movs	r5, #1
    if (nw > 2) {
  40289c:	2b02      	cmp	r3, #2
        nw = n >> 2;
  40289e:	9301      	str	r3, [sp, #4]
    ip[1] = 1;
  4028a0:	e889 0028 	stmia.w	r9, {r3, r5}
    if (nw > 2) {
  4028a4:	f340 80cb 	ble.w	402a3e <aubio_ooura_rdft+0x2fa>
        nwh = nw >> 1;
  4028a8:	10c3      	asrs	r3, r0, #3
        delta = ATAN(1.0) / nwh;
  4028aa:	ed9f 7a69 	vldr	s14, [pc, #420]	; 402a50 <aubio_ooura_rdft+0x30c>
        w[1] = 0;
  4028ae:	9800      	ldr	r0, [sp, #0]
  4028b0:	2200      	movs	r2, #0
        nwh = nw >> 1;
  4028b2:	4619      	mov	r1, r3
  4028b4:	9303      	str	r3, [sp, #12]
        w[0] = 1;
  4028b6:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
        w[1] = 0;
  4028ba:	6042      	str	r2, [r0, #4]
        delta = ATAN(1.0) / nwh;
  4028bc:	ee07 1a90 	vmov	s15, r1
        w[nwh] = COS(delta * nwh);
  4028c0:	460f      	mov	r7, r1
  4028c2:	0089      	lsls	r1, r1, #2
        w[0] = 1;
  4028c4:	6003      	str	r3, [r0, #0]
        delta = ATAN(1.0) / nwh;
  4028c6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        w[nwh] = COS(delta * nwh);
  4028ca:	f8df 8194 	ldr.w	r8, [pc, #404]	; 402a60 <aubio_ooura_rdft+0x31c>
  4028ce:	460d      	mov	r5, r1
  4028d0:	9104      	str	r1, [sp, #16]
        delta = ATAN(1.0) / nwh;
  4028d2:	eec7 8a27 	vdiv.f32	s17, s14, s15
        w[nwh] = COS(delta * nwh);
  4028d6:	1943      	adds	r3, r0, r5
  4028d8:	461d      	mov	r5, r3
  4028da:	9305      	str	r3, [sp, #20]
  4028dc:	ee67 7aa8 	vmul.f32	s15, s15, s17
  4028e0:	ee17 0a90 	vmov	r0, s15
  4028e4:	47c0      	blx	r8
        if (nwh > 2) {
  4028e6:	2f02      	cmp	r7, #2
        w[nwh] = COS(delta * nwh);
  4028e8:	6028      	str	r0, [r5, #0]
        w[nwh + 1] = w[nwh];
  4028ea:	6068      	str	r0, [r5, #4]
        if (nwh > 2) {
  4028ec:	f77f af3b 	ble.w	402766 <aubio_ooura_rdft+0x22>
  4028f0:	9b00      	ldr	r3, [sp, #0]
  4028f2:	2502      	movs	r5, #2
  4028f4:	9a01      	ldr	r2, [sp, #4]
  4028f6:	469b      	mov	fp, r3
  4028f8:	9406      	str	r4, [sp, #24]
  4028fa:	eb03 0782 	add.w	r7, r3, r2, lsl #2
  4028fe:	4b55      	ldr	r3, [pc, #340]	; (402a54 <aubio_ooura_rdft+0x310>)
  402900:	f8dd a00c 	ldr.w	sl, [sp, #12]
  402904:	461c      	mov	r4, r3
  402906:	4643      	mov	r3, r8
  402908:	46d8      	mov	r8, fp
  40290a:	46b3      	mov	fp, r6
  40290c:	461e      	mov	r6, r3
  40290e:	f8cd 901c 	str.w	r9, [sp, #28]
                x = COS(delta * j);
  402912:	ee07 5a90 	vmov	s15, r5
            for (j = 2; j < nwh; j += 2) {
  402916:	3502      	adds	r5, #2
  402918:	f108 0808 	add.w	r8, r8, #8
  40291c:	3f08      	subs	r7, #8
                x = COS(delta * j);
  40291e:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
  402922:	ee28 8a28 	vmul.f32	s16, s16, s17
  402926:	ee18 0a10 	vmov	r0, s16
  40292a:	47b0      	blx	r6
  40292c:	4681      	mov	r9, r0
                y = SIN(delta * j);
  40292e:	ee18 0a10 	vmov	r0, s16
  402932:	47a0      	blx	r4
            for (j = 2; j < nwh; j += 2) {
  402934:	45aa      	cmp	sl, r5
                w[j] = x;
  402936:	f8c8 9000 	str.w	r9, [r8]
                w[j + 1] = y;
  40293a:	f8c8 0004 	str.w	r0, [r8, #4]
                w[nw - j] = y;
  40293e:	6038      	str	r0, [r7, #0]
                w[nw - j + 1] = x;
  402940:	f8c7 9004 	str.w	r9, [r7, #4]
            for (j = 2; j < nwh; j += 2) {
  402944:	dce5      	bgt.n	402912 <aubio_ooura_rdft+0x1ce>
            for (j = nwh - 2; j >= 2; j -= 2) {
  402946:	9b03      	ldr	r3, [sp, #12]
  402948:	465e      	mov	r6, fp
  40294a:	9c06      	ldr	r4, [sp, #24]
  40294c:	3b02      	subs	r3, #2
  40294e:	f8dd 901c 	ldr.w	r9, [sp, #28]
  402952:	2b01      	cmp	r3, #1
  402954:	d00f      	beq.n	402976 <aubio_ooura_rdft+0x232>
  402956:	9904      	ldr	r1, [sp, #16]
  402958:	9a05      	ldr	r2, [sp, #20]
  40295a:	440a      	add	r2, r1
  40295c:	4611      	mov	r1, r2
  40295e:	3b02      	subs	r3, #2
                x = w[2 * j];
  402960:	f852 5c10 	ldr.w	r5, [r2, #-16]
                y = w[2 * j + 1];
  402964:	f852 0c0c 	ldr.w	r0, [r2, #-12]
  402968:	3908      	subs	r1, #8
            for (j = nwh - 2; j >= 2; j -= 2) {
  40296a:	2b01      	cmp	r3, #1
                w[nwh + j] = x;
  40296c:	600d      	str	r5, [r1, #0]
                w[nwh + j + 1] = y;
  40296e:	6048      	str	r0, [r1, #4]
  402970:	f1a2 0210 	sub.w	r2, r2, #16
            for (j = nwh - 2; j >= 2; j -= 2) {
  402974:	dcf3      	bgt.n	40295e <aubio_ooura_rdft+0x21a>
            bitrv2(nw, ip + 2, w);
  402976:	9a00      	ldr	r2, [sp, #0]
  402978:	f109 0108 	add.w	r1, r9, #8
  40297c:	9801      	ldr	r0, [sp, #4]
  40297e:	4b37      	ldr	r3, [pc, #220]	; (402a5c <aubio_ooura_rdft+0x318>)
  402980:	4798      	blx	r3
  402982:	e6f0      	b.n	402766 <aubio_ooura_rdft+0x22>
            bitrv2(n, ip + 2, a);
  402984:	f109 0108 	add.w	r1, r9, #8
  402988:	4632      	mov	r2, r6
  40298a:	4620      	mov	r0, r4
  40298c:	4b33      	ldr	r3, [pc, #204]	; (402a5c <aubio_ooura_rdft+0x318>)
  40298e:	4798      	blx	r3
            cftfsub(n, a, w);
  402990:	f8dd 8000 	ldr.w	r8, [sp]
void rftfsub(int n, smpl_t *a, int nc, smpl_t *c)
{
    int j, k, kk, ks, m;
    smpl_t wkr, wki, xr, xi, yr, yi;
    
    m = n >> 1;
  402994:	1067      	asrs	r7, r4, #1
            cftfsub(n, a, w);
  402996:	4620      	mov	r0, r4
  402998:	4642      	mov	r2, r8
  40299a:	4631      	mov	r1, r6
  40299c:	4b2e      	ldr	r3, [pc, #184]	; (402a58 <aubio_ooura_rdft+0x314>)
  40299e:	4798      	blx	r3
            rftfsub(n, a, nc, w + nw);
  4029a0:	9a01      	ldr	r2, [sp, #4]
    ks = 2 * nc / m;
  4029a2:	0068      	lsls	r0, r5, #1
    kk = 0;
    for (j = 2; j < m; j += 2) {
  4029a4:	2f02      	cmp	r7, #2
            rftfsub(n, a, nc, w + nw);
  4029a6:	eb08 0282 	add.w	r2, r8, r2, lsl #2
    ks = 2 * nc / m;
  4029aa:	fb90 f0f7 	sdiv	r0, r0, r7
    for (j = 2; j < m; j += 2) {
  4029ae:	f43f aee7 	beq.w	402780 <aubio_ooura_rdft+0x3c>
  4029b2:	1a2d      	subs	r5, r5, r0
  4029b4:	ebc0 7e80 	rsb	lr, r0, r0, lsl #30
  4029b8:	0080      	lsls	r0, r0, #2
        k = n - j;
        kk += ks;
        wkr = (smpl_t)0.5 - c[nc - kk];
  4029ba:	eeb6 4a00 	vmov.f32	s8, #96	; 0x3f000000  0.5
  4029be:	eb02 0585 	add.w	r5, r2, r5, lsl #2
  4029c2:	4633      	mov	r3, r6
  4029c4:	eb06 0484 	add.w	r4, r6, r4, lsl #2
  4029c8:	4402      	add	r2, r0
  4029ca:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
    for (j = 2; j < m; j += 2) {
  4029ce:	2102      	movs	r1, #2
        wki = c[kk];
        xr = a[j] - a[k];
  4029d0:	ed93 7a02 	vldr	s14, [r3, #8]
    for (j = 2; j < m; j += 2) {
  4029d4:	3102      	adds	r1, #2
        xi = a[j + 1] + a[k + 1];
  4029d6:	ed93 6a03 	vldr	s12, [r3, #12]
  4029da:	3c08      	subs	r4, #8
        xr = a[j] - a[k];
  4029dc:	edd4 5a00 	vldr	s11, [r4]
    for (j = 2; j < m; j += 2) {
  4029e0:	428f      	cmp	r7, r1
        xi = a[j + 1] + a[k + 1];
  4029e2:	edd4 4a01 	vldr	s9, [r4, #4]
  4029e6:	f103 0308 	add.w	r3, r3, #8
        xr = a[j] - a[k];
  4029ea:	ee77 5a65 	vsub.f32	s11, s14, s11
        wki = c[kk];
  4029ee:	edd2 7a00 	vldr	s15, [r2]
        xi = a[j + 1] + a[k + 1];
  4029f2:	ee76 4a24 	vadd.f32	s9, s12, s9
        wkr = (smpl_t)0.5 - c[nc - kk];
  4029f6:	ed95 5a00 	vldr	s10, [r5]
  4029fa:	4402      	add	r2, r0
  4029fc:	4475      	add	r5, lr
        yr = wkr * xr - wki * xi;
        yi = wkr * xi + wki * xr;
  4029fe:	ee67 6aa5 	vmul.f32	s13, s15, s11
        wkr = (smpl_t)0.5 - c[nc - kk];
  402a02:	ee34 5a45 	vsub.f32	s10, s8, s10
        yr = wkr * xr - wki * xi;
  402a06:	ee64 7ae7 	vnmul.f32	s15, s9, s15
        yi = wkr * xi + wki * xr;
  402a0a:	eee5 6a24 	vfma.f32	s13, s10, s9
        yr = wkr * xr - wki * xi;
  402a0e:	eee5 7a25 	vfma.f32	s15, s10, s11
        a[j] -= yr;
        a[j + 1] -= yi;
  402a12:	ee36 6a66 	vsub.f32	s12, s12, s13
        a[j] -= yr;
  402a16:	ee37 7a67 	vsub.f32	s14, s14, s15
        a[j + 1] -= yi;
  402a1a:	ed83 6a01 	vstr	s12, [r3, #4]
        a[j] -= yr;
  402a1e:	ed83 7a00 	vstr	s14, [r3]
        a[k] += yr;
  402a22:	ed94 7a00 	vldr	s14, [r4]
        a[k + 1] -= yi;
  402a26:	ed94 6a01 	vldr	s12, [r4, #4]
        a[k] += yr;
  402a2a:	ee77 7a27 	vadd.f32	s15, s14, s15
        a[k + 1] -= yi;
  402a2e:	ee76 6a66 	vsub.f32	s13, s12, s13
        a[k] += yr;
  402a32:	edc4 7a00 	vstr	s15, [r4]
        a[k + 1] -= yi;
  402a36:	edc4 6a01 	vstr	s13, [r4, #4]
    for (j = 2; j < m; j += 2) {
  402a3a:	dcc9      	bgt.n	4029d0 <aubio_ooura_rdft+0x28c>
  402a3c:	e6a0      	b.n	402780 <aubio_ooura_rdft+0x3c>
    if (nw > 2) {
  402a3e:	2304      	movs	r3, #4
  402a40:	e694      	b.n	40276c <aubio_ooura_rdft+0x28>
            cftfsub(n, a, w);
  402a42:	9a00      	ldr	r2, [sp, #0]
  402a44:	4620      	mov	r0, r4
  402a46:	4631      	mov	r1, r6
  402a48:	4b03      	ldr	r3, [pc, #12]	; (402a58 <aubio_ooura_rdft+0x314>)
  402a4a:	4798      	blx	r3
  402a4c:	e698      	b.n	402780 <aubio_ooura_rdft+0x3c>
  402a4e:	bf00      	nop
  402a50:	3f490fdb 	.word	0x3f490fdb
  402a54:	00404c79 	.word	0x00404c79
  402a58:	004025bd 	.word	0x004025bd
  402a5c:	00401675 	.word	0x00401675
  402a60:	00404c01 	.word	0x00404c01
{
    int j, k, kk, ks, m;
    smpl_t wkr, wki, xr, xi, yr, yi;
    
    a[1] = -a[1];
    m = n >> 1;
  402a64:	1067      	asrs	r7, r4, #1
    a[1] = -a[1];
  402a66:	eef1 7a67 	vneg.f32	s15, s15
    ks = 2 * nc / m;
  402a6a:	ea4f 0e45 	mov.w	lr, r5, lsl #1
            rftbsub(n, a, nc, w + nw);
  402a6e:	9b00      	ldr	r3, [sp, #0]
  402a70:	9a01      	ldr	r2, [sp, #4]
    kk = 0;
    for (j = 2; j < m; j += 2) {
  402a72:	2f02      	cmp	r7, #2
    a[1] = -a[1];
  402a74:	edc6 7a01 	vstr	s15, [r6, #4]
            rftbsub(n, a, nc, w + nw);
  402a78:	eb03 0182 	add.w	r1, r3, r2, lsl #2
    ks = 2 * nc / m;
  402a7c:	fb9e fef7 	sdiv	lr, lr, r7
    for (j = 2; j < m; j += 2) {
  402a80:	f000 81fc 	beq.w	402e7c <aubio_ooura_rdft+0x738>
  402a84:	eba5 050e 	sub.w	r5, r5, lr
  402a88:	ebce 7c8e 	rsb	ip, lr, lr, lsl #30
  402a8c:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
  402a90:	4632      	mov	r2, r6
  402a92:	eb01 0585 	add.w	r5, r1, r5, lsl #2
  402a96:	2002      	movs	r0, #2
  402a98:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
  402a9c:	4471      	add	r1, lr
  402a9e:	eb06 0384 	add.w	r3, r6, r4, lsl #2
        k = n - j;
        kk += ks;
        wkr = (smpl_t)0.5 - c[nc - kk];
        wki = c[kk];
        xr = a[j] - a[k];
  402aa2:	ed92 7a02 	vldr	s14, [r2, #8]
    for (j = 2; j < m; j += 2) {
  402aa6:	3002      	adds	r0, #2
        xi = a[j + 1] + a[k + 1];
  402aa8:	ed92 6a03 	vldr	s12, [r2, #12]
  402aac:	3b08      	subs	r3, #8
        xr = a[j] - a[k];
  402aae:	edd3 5a00 	vldr	s11, [r3]
    for (j = 2; j < m; j += 2) {
  402ab2:	4287      	cmp	r7, r0
        xi = a[j + 1] + a[k + 1];
  402ab4:	edd3 4a01 	vldr	s9, [r3, #4]
  402ab8:	f102 0208 	add.w	r2, r2, #8
        xr = a[j] - a[k];
  402abc:	ee77 5a65 	vsub.f32	s11, s14, s11
        wki = c[kk];
  402ac0:	edd1 7a00 	vldr	s15, [r1]
        xi = a[j + 1] + a[k + 1];
  402ac4:	ee76 4a24 	vadd.f32	s9, s12, s9
        wkr = (smpl_t)0.5 - c[nc - kk];
  402ac8:	ed95 5a00 	vldr	s10, [r5]
  402acc:	4471      	add	r1, lr
  402ace:	4465      	add	r5, ip
        yr = wkr * xr + wki * xi;
        yi = wkr * xi - wki * xr;
  402ad0:	ee65 6ae7 	vnmul.f32	s13, s11, s15
        wkr = (smpl_t)0.5 - c[nc - kk];
  402ad4:	ee34 5a45 	vsub.f32	s10, s8, s10
        yr = wkr * xr + wki * xi;
  402ad8:	ee67 7aa4 	vmul.f32	s15, s15, s9
        yi = wkr * xi - wki * xr;
  402adc:	eee5 6a24 	vfma.f32	s13, s10, s9
        yr = wkr * xr + wki * xi;
  402ae0:	eee5 7a25 	vfma.f32	s15, s10, s11
        a[j] -= yr;
        a[j + 1] = yi - a[j + 1];
  402ae4:	ee36 6ac6 	vsub.f32	s12, s13, s12
        a[j] -= yr;
  402ae8:	ee37 7a67 	vsub.f32	s14, s14, s15
        a[j + 1] = yi - a[j + 1];
  402aec:	ed82 6a01 	vstr	s12, [r2, #4]
        a[j] -= yr;
  402af0:	ed82 7a00 	vstr	s14, [r2]
        a[k] += yr;
  402af4:	ed93 7a00 	vldr	s14, [r3]
        a[k + 1] = yi - a[k + 1];
  402af8:	ed93 6a01 	vldr	s12, [r3, #4]
        a[k] += yr;
  402afc:	ee77 7a27 	vadd.f32	s15, s14, s15
        a[k + 1] = yi - a[k + 1];
  402b00:	ee76 6ac6 	vsub.f32	s13, s13, s12
        a[k] += yr;
  402b04:	edc3 7a00 	vstr	s15, [r3]
        a[k + 1] = yi - a[k + 1];
  402b08:	edc3 6a01 	vstr	s13, [r3, #4]
    for (j = 2; j < m; j += 2) {
  402b0c:	dcc9      	bgt.n	402aa2 <aubio_ooura_rdft+0x35e>
    }
    a[m + 1] = -a[m + 1];
  402b0e:	3701      	adds	r7, #1
            bitrv2(n, ip + 2, a);
  402b10:	f109 0108 	add.w	r1, r9, #8
  402b14:	4632      	mov	r2, r6
  402b16:	4620      	mov	r0, r4
    a[m + 1] = -a[m + 1];
  402b18:	eb06 0787 	add.w	r7, r6, r7, lsl #2
            bitrv2(n, ip + 2, a);
  402b1c:	4be0      	ldr	r3, [pc, #896]	; (402ea0 <aubio_ooura_rdft+0x75c>)
    a[m + 1] = -a[m + 1];
  402b1e:	edd7 7a00 	vldr	s15, [r7]
  402b22:	eef1 7a67 	vneg.f32	s15, s15
  402b26:	edc7 7a00 	vstr	s15, [r7]
            bitrv2(n, ip + 2, a);
  402b2a:	4798      	blx	r3
    if (n > 16) {
  402b2c:	2c10      	cmp	r4, #16
  402b2e:	f300 80ec 	bgt.w	402d0a <aubio_ooura_rdft+0x5c6>
  402b32:	2308      	movs	r3, #8
    l = 2;
  402b34:	2702      	movs	r7, #2
    if ((l << 2) < n) {
  402b36:	429c      	cmp	r4, r3
  402b38:	f340 8108 	ble.w	402d4c <aubio_ooura_rdft+0x608>
        wn4r = w[2];
  402b3c:	9b00      	ldr	r3, [sp, #0]
  402b3e:	ed93 2a02 	vldr	s4, [r3, #8]
  402b42:	00bb      	lsls	r3, r7, #2
  402b44:	eb07 0247 	add.w	r2, r7, r7, lsl #1
  402b48:	18f5      	adds	r5, r6, r3
        while ((l << 3) < n) {
  402b4a:	f04f 0800 	mov.w	r8, #0
  402b4e:	f106 0c04 	add.w	ip, r6, #4
  402b52:	18b8      	adds	r0, r7, r2
  402b54:	442b      	add	r3, r5
  402b56:	eb06 0282 	add.w	r2, r6, r2, lsl #2
  402b5a:	183c      	adds	r4, r7, r0
  402b5c:	eb06 0080 	add.w	r0, r6, r0, lsl #2
  402b60:	1939      	adds	r1, r7, r4
  402b62:	f104 0e01 	add.w	lr, r4, #1
  402b66:	187c      	adds	r4, r7, r1
  402b68:	eb06 0e8e 	add.w	lr, r6, lr, lsl #2
  402b6c:	eb06 0181 	add.w	r1, r6, r1, lsl #2
  402b70:	eb06 0484 	add.w	r4, r6, r4, lsl #2
            x0r = a[j4] + a[j5];
  402b74:	edd0 6a00 	vldr	s13, [r0]
        for (j = 0; j < l; j += 2) {
  402b78:	f108 0802 	add.w	r8, r8, #2
            x0r = a[j4] + a[j5];
  402b7c:	ed1e 7a01 	vldr	s14, [lr, #-4]
  402b80:	3508      	adds	r5, #8
            x2i = a[j6 + 1] + a[j7 + 1];
  402b82:	edd4 7a01 	vldr	s15, [r4, #4]
        for (j = 0; j < l; j += 2) {
  402b86:	4547      	cmp	r7, r8
            x2r = a[j6] + a[j7];
  402b88:	edd1 9a00 	vldr	s19, [r1]
            x1r = a[j4] - a[j5];
  402b8c:	ee36 5ac7 	vsub.f32	s10, s13, s14
            x2i = a[j6 + 1] + a[j7 + 1];
  402b90:	ed91 3a01 	vldr	s6, [r1, #4]
            x0r = a[j4] + a[j5];
  402b94:	ee76 2a87 	vadd.f32	s5, s13, s14
            x0i = a[j4 + 1] + a[j5 + 1];
  402b98:	ed90 aa01 	vldr	s20, [r0, #4]
  402b9c:	f102 0208 	add.w	r2, r2, #8
  402ba0:	edde 5a00 	vldr	s11, [lr]
            x3i = a[j6 + 1] - a[j7 + 1];
  402ba4:	ee33 6a67 	vsub.f32	s12, s6, s15
            x2r = a[j6] + a[j7];
  402ba8:	edd4 6a00 	vldr	s13, [r4]
            x2i = a[j6 + 1] + a[j7 + 1];
  402bac:	ee33 3a27 	vadd.f32	s6, s6, s15
            x1i = a[j4 + 1] - a[j5 + 1];
  402bb0:	ee3a 8a65 	vsub.f32	s16, s20, s11
            x0r = a[j] + a[j1];
  402bb4:	ed5c 0a01 	vldr	s1, [ip, #-4]
            x3r = a[j6] - a[j7];
  402bb8:	ee79 7ae6 	vsub.f32	s15, s19, s13
            x0r = a[j] + a[j1];
  402bbc:	ed15 7a02 	vldr	s14, [r5, #-8]
            x0r = x1r - x3i;
  402bc0:	ee35 9a46 	vsub.f32	s18, s10, s12
            x2i = a[j2 + 1] + a[j3 + 1];
  402bc4:	edd3 3a01 	vldr	s7, [r3, #4]
  402bc8:	ed12 4a01 	vldr	s8, [r2, #-4]
            x1r = a[j] - a[j1];
  402bcc:	ee30 0ac7 	vsub.f32	s0, s1, s14
            x0i = x1i + x3r;
  402bd0:	ee78 4a27 	vadd.f32	s9, s16, s15
            x2r = a[j2] + a[j3];
  402bd4:	ed93 1a00 	vldr	s2, [r3]
            x2r = a[j6] + a[j7];
  402bd8:	ee79 6aa6 	vadd.f32	s13, s19, s13
            x2r = a[j2] + a[j3];
  402bdc:	ed52 1a02 	vldr	s3, [r2, #-8]
            x2r = x1r + x3i;
  402be0:	ee75 8a06 	vadd.f32	s17, s10, s12
            x0i = -a[j + 1] - a[j1 + 1];
  402be4:	ed96 6a01 	vldr	s12, [r6, #4]
            y5r = wn4r * (x0r - x0i);
  402be8:	ee79 9a64 	vsub.f32	s19, s18, s9
  402bec:	f104 0408 	add.w	r4, r4, #8
            y5i = wn4r * (x0r + x0i);
  402bf0:	ee39 9a24 	vadd.f32	s18, s18, s9
  402bf4:	f106 0608 	add.w	r6, r6, #8
            x3i = a[j2 + 1] - a[j3 + 1];
  402bf8:	ee73 4ac4 	vsub.f32	s9, s7, s8
  402bfc:	f100 0008 	add.w	r0, r0, #8
            x2i = x1i - x3r;
  402c00:	ee38 8a67 	vsub.f32	s16, s16, s15
  402c04:	f10c 0c08 	add.w	ip, ip, #8
            x0i = a[j4 + 1] + a[j5 + 1];
  402c08:	ee7a 7a25 	vadd.f32	s15, s20, s11
            x0i = -a[j + 1] - a[j1 + 1];
  402c0c:	ed55 5a01 	vldr	s11, [r5, #-4]
            x2i = a[j2 + 1] + a[j3 + 1];
  402c10:	ee33 4a84 	vadd.f32	s8, s7, s8
  402c14:	f103 0308 	add.w	r3, r3, #8
            x1i = -a[j + 1] + a[j1 + 1];
  402c18:	ee35 5ac6 	vsub.f32	s10, s11, s12
  402c1c:	f101 0108 	add.w	r1, r1, #8
            x0r = a[j] + a[j1];
  402c20:	ee70 3a87 	vadd.f32	s7, s1, s14
  402c24:	ee36 6a25 	vadd.f32	s12, s12, s11
            y1r = x1r - x3i;
  402c28:	ee70 0a64 	vsub.f32	s1, s0, s9
            x3r = a[j2] - a[j3];
  402c2c:	ee71 5a61 	vsub.f32	s11, s2, s3
            x2r = a[j2] + a[j3];
  402c30:	ee31 7a21 	vadd.f32	s14, s2, s3
            y3r = x1r + x3i;
  402c34:	ee70 4a24 	vadd.f32	s9, s0, s9
            y1i = x1i - x3r;
  402c38:	ee35 1a65 	vsub.f32	s2, s10, s11
            y7r = wn4r * (x2r - x2i);
  402c3c:	ee38 0ac8 	vsub.f32	s0, s17, s16
            y3i = x1i + x3r;
  402c40:	ee75 5a25 	vadd.f32	s11, s10, s11
            y7i = wn4r * (x2r + x2i);
  402c44:	ee38 5a88 	vadd.f32	s10, s17, s16
            a[j1] = y1r + y5r;
  402c48:	eeb0 8a60 	vmov.f32	s16, s1
  402c4c:	ee74 1a06 	vadd.f32	s3, s8, s12
            y2i = x0i + x2i;
  402c50:	ee34 6a46 	vsub.f32	s12, s8, s12
            a[j1] = y1r + y5r;
  402c54:	eea9 8a82 	vfma.f32	s16, s19, s4
            a[j5 + 1] = y1i + y5i;
  402c58:	eeb0 4a41 	vmov.f32	s8, s2
            a[j5] = y1r - y5r;
  402c5c:	eee9 0ac2 	vfms.f32	s1, s19, s4
            a[j3] = y3r - y7i;
  402c60:	eef0 8a64 	vmov.f32	s17, s9
            a[j1 + 1] = y1i - y5i;
  402c64:	eef0 9a41 	vmov.f32	s19, s2
            a[j5 + 1] = y1i + y5i;
  402c68:	eea9 4a02 	vfma.f32	s8, s18, s4
            a[j1] = y1r + y5r;
  402c6c:	ed05 8a02 	vstr	s16, [r5, #-8]
            a[j3 + 1] = y3i - y7r;
  402c70:	eeb0 8a65 	vmov.f32	s16, s11
            a[j7] = y3r + y7i;
  402c74:	eee5 4a02 	vfma.f32	s9, s10, s4
            a[j7 + 1] = y3i + y7r;
  402c78:	eee0 5a02 	vfma.f32	s11, s0, s4
            a[j3] = y3r - y7i;
  402c7c:	eee5 8a42 	vfms.f32	s17, s10, s4
            a[j3 + 1] = y3i - y7r;
  402c80:	eea0 8a42 	vfms.f32	s16, s0, s4
            a[j1 + 1] = y1i - y5i;
  402c84:	eee9 9a42 	vfms.f32	s19, s18, s4
            a[j5 + 1] = y1i + y5i;
  402c88:	ee14 9a10 	vmov	r9, s8
            y4i = x0i + x2i;
  402c8c:	ee37 1a83 	vadd.f32	s2, s15, s6
            y0r = x0r + x2r;
  402c90:	ee33 4a87 	vadd.f32	s8, s7, s14
            y4r = x0r + x2r;
  402c94:	ee32 5aa6 	vadd.f32	s10, s5, s13
            y2r = x0r - x2r;
  402c98:	ee33 7ac7 	vsub.f32	s14, s7, s14
            y0i = x0i - x2i;
  402c9c:	eeb1 0a61 	vneg.f32	s0, s3
            y6i = x0i - x2i;
  402ca0:	ee77 7ac3 	vsub.f32	s15, s15, s6
            a[j1 + 1] = y1i - y5i;
  402ca4:	ed45 9a01 	vstr	s19, [r5, #-4]
            y6r = x0r - x2r;
  402ca8:	ee72 6ae6 	vsub.f32	s13, s5, s13
            a[j5] = y1r - y5r;
  402cac:	ed4e 0a01 	vstr	s1, [lr, #-4]
            a[j] = y0r + y4r;
  402cb0:	ee74 3a05 	vadd.f32	s7, s8, s10
            a[j5 + 1] = y1i + y5i;
  402cb4:	f84e 9b08 	str.w	r9, [lr], #8
            a[j4 + 1] = y0i + y4i;
  402cb8:	ee71 1a61 	vsub.f32	s3, s2, s3
            a[j3] = y3r - y7i;
  402cbc:	ed42 8a02 	vstr	s17, [r2, #-8]
            a[j3 + 1] = y3i - y7r;
  402cc0:	ed02 8a01 	vstr	s16, [r2, #-4]
            a[j4] = y0r - y4r;
  402cc4:	ee34 5a45 	vsub.f32	s10, s8, s10
            a[j7] = y3r + y7i;
  402cc8:	ed44 4a02 	vstr	s9, [r4, #-8]
            a[j + 1] = y0i - y4i;
  402ccc:	ee70 4a41 	vsub.f32	s9, s0, s2
            a[j7 + 1] = y3i + y7r;
  402cd0:	ed44 5a01 	vstr	s11, [r4, #-4]
            a[j2] = y2r - y6i;
  402cd4:	ee77 5a67 	vsub.f32	s11, s14, s15
            a[j6] = y2r + y6i;
  402cd8:	ee77 7a27 	vadd.f32	s15, s14, s15
            a[j] = y0r + y4r;
  402cdc:	ed4c 3a03 	vstr	s7, [ip, #-12]
            a[j2 + 1] = y2i - y6r;
  402ce0:	ee36 7a66 	vsub.f32	s14, s12, s13
            a[j + 1] = y0i - y4i;
  402ce4:	ed46 4a01 	vstr	s9, [r6, #-4]
            a[j6 + 1] = y2i + y6r;
  402ce8:	ee76 6a26 	vadd.f32	s13, s12, s13
            a[j4 + 1] = y0i + y4i;
  402cec:	ed40 1a01 	vstr	s3, [r0, #-4]
            a[j4] = y0r - y4r;
  402cf0:	ed00 5a02 	vstr	s10, [r0, #-8]
            a[j2] = y2r - y6i;
  402cf4:	ed43 5a02 	vstr	s11, [r3, #-8]
            a[j2 + 1] = y2i - y6r;
  402cf8:	ed03 7a01 	vstr	s14, [r3, #-4]
            a[j6] = y2r + y6i;
  402cfc:	ed41 7a02 	vstr	s15, [r1, #-8]
            a[j6 + 1] = y2i + y6r;
  402d00:	ed41 6a01 	vstr	s13, [r1, #-4]
        for (j = 0; j < l; j += 2) {
  402d04:	f73f af36 	bgt.w	402b74 <aubio_ooura_rdft+0x430>
  402d08:	e546      	b.n	402798 <aubio_ooura_rdft+0x54>
        cft1st(n, a, w);
  402d0a:	f8dd 8000 	ldr.w	r8, [sp]
  402d0e:	4631      	mov	r1, r6
  402d10:	4620      	mov	r0, r4
  402d12:	4b64      	ldr	r3, [pc, #400]	; (402ea4 <aubio_ooura_rdft+0x760>)
  402d14:	4642      	mov	r2, r8
  402d16:	4798      	blx	r3
        while ((l << 3) < n) {
  402d18:	2c80      	cmp	r4, #128	; 0x80
  402d1a:	f340 80bd 	ble.w	402e98 <aubio_ooura_rdft+0x754>
  402d1e:	2780      	movs	r7, #128	; 0x80
  402d20:	2110      	movs	r1, #16
  402d22:	4d61      	ldr	r5, [pc, #388]	; (402ea8 <aubio_ooura_rdft+0x764>)
  402d24:	e000      	b.n	402d28 <aubio_ooura_rdft+0x5e4>
  402d26:	4617      	mov	r7, r2
            cftmdl(n, l, a, w);
  402d28:	4632      	mov	r2, r6
  402d2a:	4643      	mov	r3, r8
  402d2c:	4620      	mov	r0, r4
  402d2e:	47a8      	blx	r5
  402d30:	4639      	mov	r1, r7
        while ((l << 3) < n) {
  402d32:	00fa      	lsls	r2, r7, #3
  402d34:	4294      	cmp	r4, r2
  402d36:	dcf6      	bgt.n	402d26 <aubio_ooura_rdft+0x5e2>
    if ((l << 2) < n) {
  402d38:	00bb      	lsls	r3, r7, #2
  402d3a:	429c      	cmp	r4, r3
  402d3c:	dd3a      	ble.n	402db4 <aubio_ooura_rdft+0x670>
        for (j = 0; j < l; j += 2) {
  402d3e:	2f00      	cmp	r7, #0
  402d40:	f77f ad2a 	ble.w	402798 <aubio_ooura_rdft+0x54>
        wn4r = w[2];
  402d44:	9a00      	ldr	r2, [sp, #0]
  402d46:	ed92 2a02 	vldr	s4, [r2, #8]
  402d4a:	e6fb      	b.n	402b44 <aubio_ooura_rdft+0x400>
    } else if ((l << 2) == n) {
  402d4c:	f000 8093 	beq.w	402e76 <aubio_ooura_rdft+0x732>
        for (j = 0; j < l; j += 2) {
  402d50:	2f00      	cmp	r7, #0
  402d52:	f77f ad21 	ble.w	402798 <aubio_ooura_rdft+0x54>
  402d56:	1e78      	subs	r0, r7, #1
  402d58:	00bb      	lsls	r3, r7, #2
  402d5a:	1d32      	adds	r2, r6, #4
  402d5c:	0840      	lsrs	r0, r0, #1
  402d5e:	1d19      	adds	r1, r3, #4
  402d60:	4433      	add	r3, r6
  402d62:	eb06 00c0 	add.w	r0, r6, r0, lsl #3
  402d66:	4431      	add	r1, r6
  402d68:	300c      	adds	r0, #12
            x0r = a[j] - a[j1];
  402d6a:	ed12 7a01 	vldr	s14, [r2, #-4]
  402d6e:	3208      	adds	r2, #8
  402d70:	ed51 7a01 	vldr	s15, [r1, #-4]
  402d74:	3608      	adds	r6, #8
            x0i = -a[j + 1] + a[j1 + 1];
  402d76:	ed56 6a01 	vldr	s13, [r6, #-4]
  402d7a:	3108      	adds	r1, #8
            a[j] += a[j1];
  402d7c:	ee77 5a27 	vadd.f32	s11, s14, s15
            x0i = -a[j + 1] + a[j1 + 1];
  402d80:	ed93 6a01 	vldr	s12, [r3, #4]
            x0r = a[j] - a[j1];
  402d84:	ee77 7a67 	vsub.f32	s15, s14, s15
  402d88:	3308      	adds	r3, #8
            x0i = -a[j + 1] + a[j1 + 1];
  402d8a:	ee36 6a66 	vsub.f32	s12, s12, s13
            a[j] += a[j1];
  402d8e:	ed42 5a03 	vstr	s11, [r2, #-12]
        for (j = 0; j < l; j += 2) {
  402d92:	4290      	cmp	r0, r2
            a[j + 1] = -a[j + 1] - a[j1 + 1];
  402d94:	ed56 6a01 	vldr	s13, [r6, #-4]
  402d98:	ed13 7a01 	vldr	s14, [r3, #-4]
  402d9c:	ee36 7a87 	vadd.f32	s14, s13, s14
  402da0:	eeb1 7a47 	vneg.f32	s14, s14
  402da4:	ed06 7a01 	vstr	s14, [r6, #-4]
            a[j1] = x0r;
  402da8:	ed41 7a03 	vstr	s15, [r1, #-12]
            a[j1 + 1] = x0i;
  402dac:	ed03 6a01 	vstr	s12, [r3, #-4]
        for (j = 0; j < l; j += 2) {
  402db0:	d1db      	bne.n	402d6a <aubio_ooura_rdft+0x626>
  402db2:	e4f1      	b.n	402798 <aubio_ooura_rdft+0x54>
    } else if ((l << 2) == n) {
  402db4:	d1cc      	bne.n	402d50 <aubio_ooura_rdft+0x60c>
        for (j = 0; j < l; j += 2) {
  402db6:	2f00      	cmp	r7, #0
  402db8:	f77f acee 	ble.w	402798 <aubio_ooura_rdft+0x54>
  402dbc:	1e78      	subs	r0, r7, #1
  402dbe:	1d1c      	adds	r4, r3, #4
  402dc0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
  402dc4:	3204      	adds	r2, #4
  402dc6:	0840      	lsrs	r0, r0, #1
  402dc8:	18f5      	adds	r5, r6, r3
  402dca:	eb06 0187 	add.w	r1, r6, r7, lsl #2
  402dce:	4432      	add	r2, r6
  402dd0:	eb06 00c0 	add.w	r0, r6, r0, lsl #3
  402dd4:	442b      	add	r3, r5
  402dd6:	4434      	add	r4, r6
  402dd8:	f100 070c 	add.w	r7, r0, #12
  402ddc:	1d30      	adds	r0, r6, #4
            x0i = -a[j + 1] - a[j1 + 1];
  402dde:	edd6 7a01 	vldr	s15, [r6, #4]
  402de2:	3008      	adds	r0, #8
            x2i = a[j2 + 1] + a[j3 + 1];
  402de4:	edd3 4a01 	vldr	s9, [r3, #4]
  402de8:	3608      	adds	r6, #8
            x0i = -a[j + 1] - a[j1 + 1];
  402dea:	ed95 7a01 	vldr	s14, [r5, #4]
  402dee:	3308      	adds	r3, #8
            x2i = a[j2 + 1] + a[j3 + 1];
  402df0:	ed91 6a01 	vldr	s12, [r1, #4]
  402df4:	3208      	adds	r2, #8
            x0r = a[j] + a[j1];
  402df6:	ed10 5a03 	vldr	s10, [r0, #-12]
  402dfa:	ee37 4a87 	vadd.f32	s8, s15, s14
            x2r = a[j2] + a[j3];
  402dfe:	ed52 6a03 	vldr	s13, [r2, #-12]
            x2i = a[j2 + 1] + a[j3 + 1];
  402e02:	ee74 3a86 	vadd.f32	s7, s9, s12
            x0r = a[j] + a[j1];
  402e06:	ed54 5a01 	vldr	s11, [r4, #-4]
            x1i = -a[j + 1] + a[j1 + 1];
  402e0a:	ee37 7a67 	vsub.f32	s14, s14, s15
            x2r = a[j2] + a[j3];
  402e0e:	edd1 7a00 	vldr	s15, [r1]
            x3i = a[j2 + 1] - a[j3 + 1];
  402e12:	ee34 6ac6 	vsub.f32	s12, s9, s12
            x0r = a[j] + a[j1];
  402e16:	ee35 3a25 	vadd.f32	s6, s10, s11
  402e1a:	3408      	adds	r4, #8
            x2r = a[j2] + a[j3];
  402e1c:	ee76 4aa7 	vadd.f32	s9, s13, s15
  402e20:	3508      	adds	r5, #8
            a[j + 1] = x0i - x2i;
  402e22:	ee74 2a23 	vadd.f32	s5, s8, s7
  402e26:	3108      	adds	r1, #8
            x1r = a[j] - a[j1];
  402e28:	ee75 5a65 	vsub.f32	s11, s10, s11
            a[j] = x0r + x2r;
  402e2c:	ee33 5a24 	vadd.f32	s10, s6, s9
            x3r = a[j2] - a[j3];
  402e30:	ee76 7ae7 	vsub.f32	s15, s13, s15
            a[j + 1] = x0i - x2i;
  402e34:	eef1 6a62 	vneg.f32	s13, s5
            a[j] = x0r + x2r;
  402e38:	ed00 5a03 	vstr	s10, [r0, #-12]
            a[j2 + 1] = x0i + x2i;
  402e3c:	ee33 4ac4 	vsub.f32	s8, s7, s8
            a[j1] = x1r - x3i;
  402e40:	ee35 5ac6 	vsub.f32	s10, s11, s12
        for (j = 0; j < l; j += 2) {
  402e44:	4287      	cmp	r7, r0
            a[j + 1] = x0i - x2i;
  402e46:	ed46 6a01 	vstr	s13, [r6, #-4]
            a[j2] = x0r - x2r;
  402e4a:	ee73 4a64 	vsub.f32	s9, s6, s9
            a[j1 + 1] = x1i - x3r;
  402e4e:	ee77 6a67 	vsub.f32	s13, s14, s15
            a[j3] = x1r + x3i;
  402e52:	ee35 6a86 	vadd.f32	s12, s11, s12
            a[j3 + 1] = x1i + x3r;
  402e56:	ee77 7a27 	vadd.f32	s15, s14, s15
            a[j2] = x0r - x2r;
  402e5a:	ed42 4a03 	vstr	s9, [r2, #-12]
            a[j2 + 1] = x0i + x2i;
  402e5e:	ed03 4a01 	vstr	s8, [r3, #-4]
            a[j1] = x1r - x3i;
  402e62:	ed04 5a03 	vstr	s10, [r4, #-12]
            a[j1 + 1] = x1i - x3r;
  402e66:	ed45 6a01 	vstr	s13, [r5, #-4]
            a[j3] = x1r + x3i;
  402e6a:	ed01 6a02 	vstr	s12, [r1, #-8]
            a[j3 + 1] = x1i + x3r;
  402e6e:	ed41 7a01 	vstr	s15, [r1, #-4]
        for (j = 0; j < l; j += 2) {
  402e72:	d1b4      	bne.n	402dde <aubio_ooura_rdft+0x69a>
  402e74:	e490      	b.n	402798 <aubio_ooura_rdft+0x54>
  402e76:	00fa      	lsls	r2, r7, #3
  402e78:	00bb      	lsls	r3, r7, #2
  402e7a:	e79f      	b.n	402dbc <aubio_ooura_rdft+0x678>
    a[m + 1] = -a[m + 1];
  402e7c:	edd6 7a03 	vldr	s15, [r6, #12]
            bitrv2(n, ip + 2, a);
  402e80:	f109 0108 	add.w	r1, r9, #8
  402e84:	4b06      	ldr	r3, [pc, #24]	; (402ea0 <aubio_ooura_rdft+0x75c>)
  402e86:	4632      	mov	r2, r6
    a[m + 1] = -a[m + 1];
  402e88:	eef1 7a67 	vneg.f32	s15, s15
            bitrv2(n, ip + 2, a);
  402e8c:	4620      	mov	r0, r4
    a[m + 1] = -a[m + 1];
  402e8e:	edc6 7a03 	vstr	s15, [r6, #12]
            bitrv2(n, ip + 2, a);
  402e92:	4798      	blx	r3
  402e94:	2308      	movs	r3, #8
  402e96:	e64e      	b.n	402b36 <aubio_ooura_rdft+0x3f2>
        while ((l << 3) < n) {
  402e98:	2340      	movs	r3, #64	; 0x40
        l = 16;
  402e9a:	2710      	movs	r7, #16
  402e9c:	e64b      	b.n	402b36 <aubio_ooura_rdft+0x3f2>
  402e9e:	bf00      	nop
  402ea0:	00401675 	.word	0x00401675
  402ea4:	004018c1 	.word	0x004018c1
  402ea8:	00401e81 	.word	0x00401e81

00402eac <new_aubio_pitchyinfast>:
	fvec_t *kernel_fft;
	aubio_fft_t *fft;
};

aubio_pitchyinfast_t * new_aubio_pitchyinfast (uint_t bufsize)
{
  402eac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	aubio_pitchyinfast_t *o = AUBIO_NEW (aubio_pitchyinfast_t);
  402eae:	2101      	movs	r1, #1
{
  402eb0:	4605      	mov	r5, r0
	aubio_pitchyinfast_t *o = AUBIO_NEW (aubio_pitchyinfast_t);
  402eb2:	4b11      	ldr	r3, [pc, #68]	; (402ef8 <new_aubio_pitchyinfast+0x4c>)
  402eb4:	2024      	movs	r0, #36	; 0x24
	o->yin = new_fvec (bufsize / 2);
  402eb6:	fa25 f701 	lsr.w	r7, r5, r1
	aubio_pitchyinfast_t *o = AUBIO_NEW (aubio_pitchyinfast_t);
  402eba:	4798      	blx	r3
  402ebc:	4604      	mov	r4, r0
	o->yin = new_fvec (bufsize / 2);
  402ebe:	4e0f      	ldr	r6, [pc, #60]	; (402efc <new_aubio_pitchyinfast+0x50>)
  402ec0:	4638      	mov	r0, r7
  402ec2:	47b0      	blx	r6
  402ec4:	6020      	str	r0, [r4, #0]
	o->tmpdata = new_fvec (bufsize);
  402ec6:	4628      	mov	r0, r5
  402ec8:	47b0      	blx	r6
  402eca:	60e0      	str	r0, [r4, #12]
	o->sqdiff = new_fvec (bufsize / 2);
  402ecc:	4638      	mov	r0, r7
  402ece:	47b0      	blx	r6
  402ed0:	6120      	str	r0, [r4, #16]
	o->kernel = new_fvec (bufsize);
  402ed2:	4628      	mov	r0, r5
  402ed4:	47b0      	blx	r6
  402ed6:	6160      	str	r0, [r4, #20]
	o->samples_fft = new_fvec (bufsize);
  402ed8:	4628      	mov	r0, r5
  402eda:	47b0      	blx	r6
  402edc:	61a0      	str	r0, [r4, #24]
	o->kernel_fft = new_fvec (bufsize);
  402ede:	4628      	mov	r0, r5
  402ee0:	47b0      	blx	r6
	o->fft = new_aubio_fft (bufsize);
  402ee2:	4b07      	ldr	r3, [pc, #28]	; (402f00 <new_aubio_pitchyinfast+0x54>)
	o->kernel_fft = new_fvec (bufsize);
  402ee4:	61e0      	str	r0, [r4, #28]
	o->fft = new_aubio_fft (bufsize);
  402ee6:	4628      	mov	r0, r5
  402ee8:	4798      	blx	r3
	o->tol = 0.05; // changed from 0.15
  402eea:	4a06      	ldr	r2, [pc, #24]	; (402f04 <new_aubio_pitchyinfast+0x58>)
	o->peak_pos = 0;
  402eec:	2300      	movs	r3, #0
	o->fft = new_aubio_fft (bufsize);
  402eee:	6220      	str	r0, [r4, #32]
	o->tol = 0.05; // changed from 0.15
  402ef0:	6062      	str	r2, [r4, #4]
	return o;
}
  402ef2:	4620      	mov	r0, r4
	o->peak_pos = 0;
  402ef4:	60a3      	str	r3, [r4, #8]
}
  402ef6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402ef8:	00406a29 	.word	0x00406a29
  402efc:	00401441 	.word	0x00401441
  402f00:	00401221 	.word	0x00401221
  402f04:	3d4ccccd 	.word	0x3d4ccccd

00402f08 <del_aubio_pitchyinfast>:

void del_aubio_pitchyinfast (aubio_pitchyinfast_t * o)
{
  402f08:	b570      	push	{r4, r5, r6, lr}
  402f0a:	4604      	mov	r4, r0
	del_fvec (o->yin);
  402f0c:	4d0a      	ldr	r5, [pc, #40]	; (402f38 <del_aubio_pitchyinfast+0x30>)
  402f0e:	6800      	ldr	r0, [r0, #0]
  402f10:	47a8      	blx	r5
	del_fvec (o->tmpdata);
  402f12:	68e0      	ldr	r0, [r4, #12]
  402f14:	47a8      	blx	r5
	del_fvec (o->sqdiff);
  402f16:	6920      	ldr	r0, [r4, #16]
  402f18:	47a8      	blx	r5
	del_fvec (o->kernel);
  402f1a:	6960      	ldr	r0, [r4, #20]
  402f1c:	47a8      	blx	r5
	del_fvec (o->samples_fft);
  402f1e:	69a0      	ldr	r0, [r4, #24]
  402f20:	47a8      	blx	r5
	del_fvec (o->kernel_fft);
  402f22:	69e0      	ldr	r0, [r4, #28]
  402f24:	47a8      	blx	r5
	del_aubio_fft (o->fft);
  402f26:	6a20      	ldr	r0, [r4, #32]
  402f28:	4b04      	ldr	r3, [pc, #16]	; (402f3c <del_aubio_pitchyinfast+0x34>)
  402f2a:	4798      	blx	r3
	AUBIO_FREE (o);
  402f2c:	4620      	mov	r0, r4
  402f2e:	4b04      	ldr	r3, [pc, #16]	; (402f40 <del_aubio_pitchyinfast+0x38>)
}
  402f30:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	AUBIO_FREE (o);
  402f34:	4718      	bx	r3
  402f36:	bf00      	nop
  402f38:	00401469 	.word	0x00401469
  402f3c:	004012a9 	.word	0x004012a9
  402f40:	00406b21 	.word	0x00406b21
  402f44:	00000000 	.word	0x00000000

00402f48 <aubio_pitchyinfast_do>:

float32_t aubio_pitchyinfast_do (aubio_pitchyinfast_t * o, fvec_t * input)
{
  402f48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402f4c:	4604      	mov	r4, r0
  // compute r_t(0) + r_t + tau(0)
  // actually computing r_t(0) -> constant on line 109
  // r_t+tau(0) -> zero lag term done in the for loop for every tau
  {
    fvec_t *squares = o->tmpdata;
    fvec_weighted_copy(input, input, squares);
  402f4e:	4bc2      	ldr	r3, [pc, #776]	; (403258 <aubio_pitchyinfast_do+0x310>)
{
  402f50:	4689      	mov	r9, r1
  402f52:	ed2d 8b04 	vpush	{d8-d9}
	uint_t B = o->tmpdata->length;
  402f56:	f8d0 800c 	ldr.w	r8, [r0, #12]
{
  402f5a:	b087      	sub	sp, #28
	fvec_t* yin = o->yin;
  402f5c:	6826      	ldr	r6, [r4, #0]
    fvec_weighted_copy(input, input, squares);
  402f5e:	4608      	mov	r0, r1
	uint_t B = o->tmpdata->length;
  402f60:	f8d8 5000 	ldr.w	r5, [r8]
    fvec_weighted_copy(input, input, squares);
  402f64:	4642      	mov	r2, r8
	const uint_t length = yin->length;
  402f66:	f8d6 a000 	ldr.w	sl, [r6]
    tmp_slice.data = squares->data;
    tmp_slice.length = W;
  402f6a:	af06      	add	r7, sp, #24
	uint_t B = o->tmpdata->length;
  402f6c:	9501      	str	r5, [sp, #4]
	const smpl_t tol = o->tol;
  402f6e:	edd4 8a01 	vldr	s17, [r4, #4]
    fvec_weighted_copy(input, input, squares);
  402f72:	4798      	blx	r3
    o->sqdiff->data[0] = fvec_sum(&tmp_slice);
  402f74:	6923      	ldr	r3, [r4, #16]
    tmp_slice.data = squares->data;
  402f76:	f8d8 2004 	ldr.w	r2, [r8, #4]
    tmp_slice.length = W;
  402f7a:	f847 ad10 	str.w	sl, [r7, #-16]!
    o->sqdiff->data[0] = fvec_sum(&tmp_slice);
  402f7e:	4638      	mov	r0, r7
    tmp_slice.data = squares->data;
  402f80:	9203      	str	r2, [sp, #12]
    o->sqdiff->data[0] = fvec_sum(&tmp_slice);
  402f82:	685d      	ldr	r5, [r3, #4]
  402f84:	4bb5      	ldr	r3, [pc, #724]	; (40325c <aubio_pitchyinfast_do+0x314>)
  402f86:	4798      	blx	r3
    for (tau = 1; tau < W; tau++) 
  402f88:	f1ba 0f01 	cmp.w	sl, #1
    o->sqdiff->data[0] = fvec_sum(&tmp_slice);
  402f8c:	6028      	str	r0, [r5, #0]
  402f8e:	ea4f 058a 	mov.w	r5, sl, lsl #2
    for (tau = 1; tau < W; tau++) 
  402f92:	d92e      	bls.n	402ff2 <aubio_pitchyinfast_do+0xaa>
  402f94:	2000      	movs	r0, #0
  402f96:	f04f 0e01 	mov.w	lr, #1
	{
		o->sqdiff->data[tau] = o->sqdiff->data[tau-1];
  402f9a:	6923      	ldr	r3, [r4, #16]
  402f9c:	ea4f 028e 	mov.w	r2, lr, lsl #2
    for (tau = 1; tau < W; tau++) 
  402fa0:	f10e 0e01 	add.w	lr, lr, #1
		o->sqdiff->data[tau] = o->sqdiff->data[tau-1];
  402fa4:	685b      	ldr	r3, [r3, #4]
    for (tau = 1; tau < W; tau++) 
  402fa6:	45f2      	cmp	sl, lr
		o->sqdiff->data[tau] = o->sqdiff->data[tau-1];
  402fa8:	eb03 0100 	add.w	r1, r3, r0
  402fac:	4413      	add	r3, r2
  402fae:	6809      	ldr	r1, [r1, #0]
  402fb0:	6019      	str	r1, [r3, #0]
		o->sqdiff->data[tau] -= squares->data[tau-1];
  402fb2:	6921      	ldr	r1, [r4, #16]
  402fb4:	f8d8 3004 	ldr.w	r3, [r8, #4]
  402fb8:	6849      	ldr	r1, [r1, #4]
  402fba:	4403      	add	r3, r0
  402fbc:	4411      	add	r1, r2
  402fbe:	edd3 7a00 	vldr	s15, [r3]
  402fc2:	ed91 7a00 	vldr	s14, [r1]
  402fc6:	ee77 7a67 	vsub.f32	s15, s14, s15
  402fca:	edc1 7a00 	vstr	s15, [r1]
		o->sqdiff->data[tau] += squares->data[W+tau-1];
  402fce:	6921      	ldr	r1, [r4, #16]
  402fd0:	f8d8 3004 	ldr.w	r3, [r8, #4]
  402fd4:	6849      	ldr	r1, [r1, #4]
  402fd6:	442b      	add	r3, r5
  402fd8:	440a      	add	r2, r1
  402fda:	4403      	add	r3, r0
  402fdc:	f100 0004 	add.w	r0, r0, #4
  402fe0:	ed92 7a00 	vldr	s14, [r2]
  402fe4:	edd3 7a00 	vldr	s15, [r3]
  402fe8:	ee77 7a27 	vadd.f32	s15, s14, s15
  402fec:	edc2 7a00 	vstr	s15, [r2]
    for (tau = 1; tau < W; tau++) 
  402ff0:	d1d3      	bne.n	402f9a <aubio_pitchyinfast_do+0x52>
    }
    fvec_add(o->sqdiff, o->sqdiff->data[0]);
  402ff2:	6920      	ldr	r0, [r4, #16]
    aubio_fft_do_complex(o->fft, input, o->samples_fft);
    // build kernel, take a copy of first half of samples
    tmp_slice.data = input->data;
    tmp_slice.length = W;
    kernel_ptr.data = o->kernel->data + 1;
    kernel_ptr.length = W;
  402ff4:	f10d 0b18 	add.w	fp, sp, #24
    fvec_add(o->sqdiff, o->sqdiff->data[0]);
  402ff8:	4a99      	ldr	r2, [pc, #612]	; (403260 <aubio_pitchyinfast_do+0x318>)
  402ffa:	6841      	ldr	r1, [r0, #4]
  402ffc:	6809      	ldr	r1, [r1, #0]
  402ffe:	4790      	blx	r2
    fvec_t *rt_of_tau = o->samples_fft;
  403000:	69a3      	ldr	r3, [r4, #24]
    aubio_fft_do_complex(o->fft, input, o->samples_fft);
  403002:	4649      	mov	r1, r9
  403004:	6a20      	ldr	r0, [r4, #32]
  403006:	461a      	mov	r2, r3
    fvec_t *rt_of_tau = o->samples_fft;
  403008:	9300      	str	r3, [sp, #0]
    aubio_fft_do_complex(o->fft, input, o->samples_fft);
  40300a:	4b96      	ldr	r3, [pc, #600]	; (403264 <aubio_pitchyinfast_do+0x31c>)
    fvec_t *compmul = o->tmpdata;
  40300c:	f8d4 800c 	ldr.w	r8, [r4, #12]
    aubio_fft_do_complex(o->fft, input, o->samples_fft);
  403010:	4798      	blx	r3
    tmp_slice.data = input->data;
  403012:	f8d9 1004 	ldr.w	r1, [r9, #4]
    fvec_copy(&tmp_slice, &kernel_ptr);
  403016:	4638      	mov	r0, r7
    kernel_ptr.data = o->kernel->data + 1;
  403018:	6962      	ldr	r2, [r4, #20]
    tmp_slice.data = input->data;
  40301a:	9103      	str	r1, [sp, #12]
    kernel_ptr.data = o->kernel->data + 1;
  40301c:	6857      	ldr	r7, [r2, #4]
    kernel_ptr.length = W;
  40301e:	f84b ad08 	str.w	sl, [fp, #-8]!
    fvec_copy(&tmp_slice, &kernel_ptr);
  403022:	4659      	mov	r1, fp
    kernel_ptr.data = o->kernel->data + 1;
  403024:	3704      	adds	r7, #4
    fvec_copy(&tmp_slice, &kernel_ptr);
  403026:	4a90      	ldr	r2, [pc, #576]	; (403268 <aubio_pitchyinfast_do+0x320>)
    tmp_slice.length = W;
  403028:	f8cd a008 	str.w	sl, [sp, #8]
    kernel_ptr.data = o->kernel->data + 1;
  40302c:	9705      	str	r7, [sp, #20]
    fvec_copy(&tmp_slice, &kernel_ptr);
  40302e:	4790      	blx	r2
    // reverse them
    fvec_rev(&kernel_ptr);
  403030:	4658      	mov	r0, fp
  403032:	4b8e      	ldr	r3, [pc, #568]	; (40326c <aubio_pitchyinfast_do+0x324>)
  403034:	4798      	blx	r3
    // compute fft(kernel)
    aubio_fft_do_complex(o->fft, o->kernel, o->kernel_fft);
  403036:	69e2      	ldr	r2, [r4, #28]
  403038:	4b8a      	ldr	r3, [pc, #552]	; (403264 <aubio_pitchyinfast_do+0x31c>)
  40303a:	6961      	ldr	r1, [r4, #20]
  40303c:	6a20      	ldr	r0, [r4, #32]
  40303e:	4798      	blx	r3
    // compute complex product
    compmul->data[0] = o->kernel_fft->data[0] * o->samples_fft->data[0];
  403040:	69e2      	ldr	r2, [r4, #28]
  403042:	69a3      	ldr	r3, [r4, #24]
    for (tau = 1; tau < W; tau++) 
  403044:	f1ba 0f01 	cmp.w	sl, #1
    compmul->data[0] = o->kernel_fft->data[0] * o->samples_fft->data[0];
  403048:	6852      	ldr	r2, [r2, #4]
  40304a:	685b      	ldr	r3, [r3, #4]
  40304c:	edd2 7a00 	vldr	s15, [r2]
  403050:	ed93 7a00 	vldr	s14, [r3]
  403054:	f8d8 3004 	ldr.w	r3, [r8, #4]
  403058:	ee67 7a87 	vmul.f32	s15, s15, s14
  40305c:	edc3 7a00 	vstr	s15, [r3]
    for (tau = 1; tau < W; tau++) 
  403060:	f240 8116 	bls.w	403290 <aubio_pitchyinfast_do+0x348>
  403064:	f06f 4140 	mvn.w	r1, #3221225472	; 0xc0000000
  403068:	9b01      	ldr	r3, [sp, #4]
  40306a:	f04f 0e01 	mov.w	lr, #1
  40306e:	4637      	mov	r7, r6
  403070:	440b      	add	r3, r1
  403072:	0099      	lsls	r1, r3, #2
  403074:	468c      	mov	ip, r1
	{
		compmul->data[tau] = o->kernel_fft->data[tau] * o->samples_fft->data[tau];
  403076:	69e0      	ldr	r0, [r4, #28]
  403078:	ea4f 028e 	mov.w	r2, lr, lsl #2
  40307c:	69a3      	ldr	r3, [r4, #24]
    for (tau = 1; tau < W; tau++) 
  40307e:	f10e 0e01 	add.w	lr, lr, #1
		compmul->data[tau] = o->kernel_fft->data[tau] * o->samples_fft->data[tau];
  403082:	6846      	ldr	r6, [r0, #4]
  403084:	6858      	ldr	r0, [r3, #4]
    for (tau = 1; tau < W; tau++) 
  403086:	45f2      	cmp	sl, lr
		compmul->data[tau] = o->kernel_fft->data[tau] * o->samples_fft->data[tau];
  403088:	4416      	add	r6, r2
  40308a:	f8d8 3004 	ldr.w	r3, [r8, #4]
  40308e:	4410      	add	r0, r2
  403090:	ed96 7a00 	vldr	s14, [r6]
  403094:	4413      	add	r3, r2
  403096:	edd0 7a00 	vldr	s15, [r0]
  40309a:	ee67 7a27 	vmul.f32	s15, s14, s15
  40309e:	edc3 7a00 	vstr	s15, [r3]
		compmul->data[tau] -= o->kernel_fft->data[B-tau] * o->samples_fft->data[B-tau];
  4030a2:	69e6      	ldr	r6, [r4, #28]
  4030a4:	69a0      	ldr	r0, [r4, #24]
  4030a6:	f8d8 3004 	ldr.w	r3, [r8, #4]
  4030aa:	6876      	ldr	r6, [r6, #4]
  4030ac:	6840      	ldr	r0, [r0, #4]
  4030ae:	4413      	add	r3, r2
  4030b0:	4466      	add	r6, ip
  4030b2:	eb00 020c 	add.w	r2, r0, ip
  4030b6:	edd3 7a00 	vldr	s15, [r3]
  4030ba:	edd6 6a00 	vldr	s13, [r6]
  4030be:	f1ac 0c04 	sub.w	ip, ip, #4
  4030c2:	ed92 7a00 	vldr	s14, [r2]
  4030c6:	eee6 7ac7 	vfms.f32	s15, s13, s14
  4030ca:	edc3 7a00 	vstr	s15, [r3]
    for (tau = 1; tau < W; tau++) 
  4030ce:	d1d2      	bne.n	403076 <aubio_pitchyinfast_do+0x12e>
    }
    compmul->data[W] = o->kernel_fft->data[W] * o->samples_fft->data[W];
  4030d0:	69e2      	ldr	r2, [r4, #28]
  4030d2:	2001      	movs	r0, #1
  4030d4:	69a3      	ldr	r3, [r4, #24]
  4030d6:	6852      	ldr	r2, [r2, #4]
  4030d8:	685b      	ldr	r3, [r3, #4]
  4030da:	442a      	add	r2, r5
  4030dc:	442b      	add	r3, r5
  4030de:	edd2 7a00 	vldr	s15, [r2]
  4030e2:	ed93 7a00 	vldr	s14, [r3]
  4030e6:	f8d8 3004 	ldr.w	r3, [r8, #4]
  4030ea:	ee67 7a87 	vmul.f32	s15, s15, s14
  4030ee:	442b      	add	r3, r5
  4030f0:	edc3 7a00 	vstr	s15, [r3]
    for (tau = 1; tau < W; tau++) 
	{
		compmul->data[B-tau] = o->kernel_fft->data[B-tau] * o->samples_fft->data[tau];
  4030f4:	69e6      	ldr	r6, [r4, #28]
  4030f6:	0082      	lsls	r2, r0, #2
    for (tau = 1; tau < W; tau++) 
  4030f8:	3001      	adds	r0, #1
		compmul->data[B-tau] = o->kernel_fft->data[B-tau] * o->samples_fft->data[tau];
  4030fa:	6873      	ldr	r3, [r6, #4]
  4030fc:	69a6      	ldr	r6, [r4, #24]
    for (tau = 1; tau < W; tau++) 
  4030fe:	4586      	cmp	lr, r0
		compmul->data[B-tau] = o->kernel_fft->data[B-tau] * o->samples_fft->data[tau];
  403100:	eb03 0c01 	add.w	ip, r3, r1
  403104:	f8d8 3004 	ldr.w	r3, [r8, #4]
  403108:	6876      	ldr	r6, [r6, #4]
  40310a:	ed9c 7a00 	vldr	s14, [ip]
  40310e:	440b      	add	r3, r1
  403110:	4416      	add	r6, r2
  403112:	edd6 7a00 	vldr	s15, [r6]
  403116:	ee67 7a27 	vmul.f32	s15, s14, s15
  40311a:	edc3 7a00 	vstr	s15, [r3]
		compmul->data[B-tau] += o->kernel_fft->data[tau] * o->samples_fft->data[B-tau];
  40311e:	69e6      	ldr	r6, [r4, #28]
  403120:	6873      	ldr	r3, [r6, #4]
  403122:	69a6      	ldr	r6, [r4, #24]
  403124:	441a      	add	r2, r3
  403126:	f8d8 3004 	ldr.w	r3, [r8, #4]
  40312a:	6876      	ldr	r6, [r6, #4]
  40312c:	440b      	add	r3, r1
  40312e:	edd2 6a00 	vldr	s13, [r2]
  403132:	440e      	add	r6, r1
  403134:	f1a1 0104 	sub.w	r1, r1, #4
  403138:	edd3 7a00 	vldr	s15, [r3]
  40313c:	ed96 7a00 	vldr	s14, [r6]
  403140:	eee6 7a87 	vfma.f32	s15, s13, s14
  403144:	edc3 7a00 	vstr	s15, [r3]
    for (tau = 1; tau < W; tau++) 
  403148:	d1d4      	bne.n	4030f4 <aubio_pitchyinfast_do+0x1ac>
    }
    // compute inverse fft
    aubio_fft_rdo_complex(o->fft, compmul, rt_of_tau);
  40314a:	4641      	mov	r1, r8
  40314c:	9a00      	ldr	r2, [sp, #0]
  40314e:	6a20      	ldr	r0, [r4, #32]
  403150:	463e      	mov	r6, r7
  403152:	4b47      	ldr	r3, [pc, #284]	; (403270 <aubio_pitchyinfast_do+0x328>)
  403154:	4798      	blx	r3
    compmul->data[W] = o->kernel_fft->data[W] * o->samples_fft->data[W];
  403156:	2700      	movs	r7, #0
  403158:	f8dd 9000 	ldr.w	r9, [sp]
  40315c:	f8cd a004 	str.w	sl, [sp, #4]
  403160:	9400      	str	r4, [sp, #0]
    // compute square difference r_t(tau) = sqdiff - 2 * r_t_tau[W-1:-1]
    for (tau = 0; tau < W; tau++) 
	{
		yin->data[tau] = o->sqdiff->data[tau] - 2. * rt_of_tau->data[tau+W];
  403162:	9b00      	ldr	r3, [sp, #0]
  403164:	00ba      	lsls	r2, r7, #2
  403166:	6871      	ldr	r1, [r6, #4]
    for (tau = 0; tau < W; tau++) 
  403168:	3701      	adds	r7, #1
		yin->data[tau] = o->sqdiff->data[tau] - 2. * rt_of_tau->data[tau+W];
  40316a:	691b      	ldr	r3, [r3, #16]
  40316c:	eb01 0802 	add.w	r8, r1, r2
  403170:	4c40      	ldr	r4, [pc, #256]	; (403274 <aubio_pitchyinfast_do+0x32c>)
  403172:	685b      	ldr	r3, [r3, #4]
  403174:	4413      	add	r3, r2
  403176:	6818      	ldr	r0, [r3, #0]
  403178:	4b3f      	ldr	r3, [pc, #252]	; (403278 <aubio_pitchyinfast_do+0x330>)
  40317a:	4798      	blx	r3
  40317c:	f8d9 3004 	ldr.w	r3, [r9, #4]
  403180:	4682      	mov	sl, r0
  403182:	468b      	mov	fp, r1
  403184:	442b      	add	r3, r5
  403186:	3504      	adds	r5, #4
  403188:	6818      	ldr	r0, [r3, #0]
  40318a:	4b3b      	ldr	r3, [pc, #236]	; (403278 <aubio_pitchyinfast_do+0x330>)
  40318c:	4798      	blx	r3
  40318e:	4602      	mov	r2, r0
  403190:	460b      	mov	r3, r1
  403192:	47a0      	blx	r4
  403194:	4c39      	ldr	r4, [pc, #228]	; (40327c <aubio_pitchyinfast_do+0x334>)
  403196:	4602      	mov	r2, r0
  403198:	460b      	mov	r3, r1
  40319a:	4650      	mov	r0, sl
  40319c:	4659      	mov	r1, fp
  40319e:	47a0      	blx	r4
  4031a0:	4b37      	ldr	r3, [pc, #220]	; (403280 <aubio_pitchyinfast_do+0x338>)
  4031a2:	4798      	blx	r3
    for (tau = 0; tau < W; tau++) 
  4031a4:	9b01      	ldr	r3, [sp, #4]
		yin->data[tau] = o->sqdiff->data[tau] - 2. * rt_of_tau->data[tau+W];
  4031a6:	f8c8 0000 	str.w	r0, [r8]
    for (tau = 0; tau < W; tau++) 
  4031aa:	42bb      	cmp	r3, r7
  4031ac:	d1d9      	bne.n	403162 <aubio_pitchyinfast_do+0x21a>
    }
  }

	// now build yin and look for first minimum
	yin->data[0] = 1.0;
  4031ae:	eef7 9a00 	vmov.f32	s19, #112	; 0x3f800000  1.0
  4031b2:	6873      	ldr	r3, [r6, #4]
	for (tau = 1; tau < length; tau++) 
  4031b4:	2f01      	cmp	r7, #1
  4031b6:	9c00      	ldr	r4, [sp, #0]
	yin->data[0] = 1.0;
  4031b8:	edc3 9a00 	vstr	s19, [r3]
	for (tau = 1; tau < length; tau++) 
  4031bc:	f000 8086 	beq.w	4032cc <aubio_pitchyinfast_do+0x384>
  4031c0:	f06f 0907 	mvn.w	r9, #7
  4031c4:	ed9f 9a2f 	vldr	s18, [pc, #188]	; 403284 <aubio_pitchyinfast_do+0x33c>
  4031c8:	2501      	movs	r5, #1
  4031ca:	f8df b0bc 	ldr.w	fp, [pc, #188]	; 403288 <aubio_pitchyinfast_do+0x340>
  4031ce:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 40328c <aubio_pitchyinfast_do+0x344>
  4031d2:	e01f      	b.n	403214 <aubio_pitchyinfast_do+0x2cc>
	{
		tmp2 += yin->data[tau];
		if (abs(tmp2) > 0.00001) 
		{
			yin->data[tau] *= tau / tmp2;
  4031d4:	eec7 7a09 	vdiv.f32	s15, s14, s18
  4031d8:	ee27 8a88 	vmul.f32	s16, s15, s16
  4031dc:	ed88 8a00 	vstr	s16, [r8]
		else
		{
			yin->data[tau] = 1.0;
		}
		period = tau - 3;
		if (tau > 4 && (yin->data[period] < tol) && (yin->data[period] < yin->data[period + 1]))
  4031e0:	2d04      	cmp	r5, #4
  4031e2:	f1a5 0103 	sub.w	r1, r5, #3
	for (tau = 1; tau < length; tau++) 
  4031e6:	f105 0501 	add.w	r5, r5, #1
		if (tau > 4 && (yin->data[period] < tol) && (yin->data[period] < yin->data[period + 1]))
  4031ea:	d90f      	bls.n	40320c <aubio_pitchyinfast_do+0x2c4>
  4031ec:	6873      	ldr	r3, [r6, #4]
  4031ee:	444b      	add	r3, r9
  4031f0:	edd3 7a00 	vldr	s15, [r3]
  4031f4:	eef4 8ae7 	vcmpe.f32	s17, s15
  4031f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  4031fc:	dd06      	ble.n	40320c <aubio_pitchyinfast_do+0x2c4>
  4031fe:	ed93 7a01 	vldr	s14, [r3, #4]
  403202:	eef4 7ac7 	vcmpe.f32	s15, s14
  403206:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  40320a:	d474      	bmi.n	4032f6 <aubio_pitchyinfast_do+0x3ae>
	for (tau = 1; tau < length; tau++) 
  40320c:	42af      	cmp	r7, r5
  40320e:	f109 0904 	add.w	r9, r9, #4
  403212:	d05b      	beq.n	4032cc <aubio_pitchyinfast_do+0x384>
		tmp2 += yin->data[tau];
  403214:	6873      	ldr	r3, [r6, #4]
  403216:	eb03 0885 	add.w	r8, r3, r5, lsl #2
  40321a:	ed98 8a00 	vldr	s16, [r8]
  40321e:	ee39 9a08 	vadd.f32	s18, s18, s16
		if (abs(tmp2) > 0.00001) 
  403222:	eefd 7ac9 	vcvt.s32.f32	s15, s18
  403226:	ee17 3a90 	vmov	r3, s15
  40322a:	ea83 70e3 	eor.w	r0, r3, r3, asr #31
  40322e:	eba0 70e3 	sub.w	r0, r0, r3, asr #31
  403232:	47d8      	blx	fp
  403234:	a306      	add	r3, pc, #24	; (adr r3, 403250 <aubio_pitchyinfast_do+0x308>)
  403236:	e9d3 2300 	ldrd	r2, r3, [r3]
  40323a:	47d0      	blx	sl
			yin->data[tau] *= tau / tmp2;
  40323c:	ee07 5a90 	vmov	s15, r5
  403240:	eeb8 7a67 	vcvt.f32.u32	s14, s15
		if (abs(tmp2) > 0.00001) 
  403244:	2800      	cmp	r0, #0
  403246:	d1c5      	bne.n	4031d4 <aubio_pitchyinfast_do+0x28c>
			yin->data[tau] = 1.0;
  403248:	edc8 9a00 	vstr	s19, [r8]
  40324c:	e7c8      	b.n	4031e0 <aubio_pitchyinfast_do+0x298>
  40324e:	bf00      	nop
  403250:	88e368f1 	.word	0x88e368f1
  403254:	3ee4f8b5 	.word	0x3ee4f8b5
  403258:	004014dd 	.word	0x004014dd
  40325c:	00401549 	.word	0x00401549
  403260:	004015a5 	.word	0x004015a5
  403264:	004012d9 	.word	0x004012d9
  403268:	0040151d 	.word	0x0040151d
  40326c:	00401481 	.word	0x00401481
  403270:	0040136d 	.word	0x0040136d
  403274:	00405aad 	.word	0x00405aad
  403278:	00405d69 	.word	0x00405d69
  40327c:	00405aa9 	.word	0x00405aa9
  403280:	00406395 	.word	0x00406395
  403284:	00000000 	.word	0x00000000
  403288:	00405d45 	.word	0x00405d45
  40328c:	00406331 	.word	0x00406331
    compmul->data[W] = o->kernel_fft->data[W] * o->samples_fft->data[W];
  403290:	69e0      	ldr	r0, [r4, #28]
    aubio_fft_rdo_complex(o->fft, compmul, rt_of_tau);
  403292:	4641      	mov	r1, r8
    compmul->data[W] = o->kernel_fft->data[W] * o->samples_fft->data[W];
  403294:	69a3      	ldr	r3, [r4, #24]
  403296:	6847      	ldr	r7, [r0, #4]
  403298:	6858      	ldr	r0, [r3, #4]
  40329a:	442f      	add	r7, r5
  40329c:	f8d8 3004 	ldr.w	r3, [r8, #4]
  4032a0:	4428      	add	r0, r5
    aubio_fft_rdo_complex(o->fft, compmul, rt_of_tau);
  4032a2:	9a00      	ldr	r2, [sp, #0]
    compmul->data[W] = o->kernel_fft->data[W] * o->samples_fft->data[W];
  4032a4:	edd7 7a00 	vldr	s15, [r7]
  4032a8:	442b      	add	r3, r5
  4032aa:	ed90 7a00 	vldr	s14, [r0]
    aubio_fft_rdo_complex(o->fft, compmul, rt_of_tau);
  4032ae:	4f1a      	ldr	r7, [pc, #104]	; (403318 <aubio_pitchyinfast_do+0x3d0>)
    compmul->data[W] = o->kernel_fft->data[W] * o->samples_fft->data[W];
  4032b0:	ee67 7a87 	vmul.f32	s15, s15, s14
  4032b4:	edc3 7a00 	vstr	s15, [r3]
    aubio_fft_rdo_complex(o->fft, compmul, rt_of_tau);
  4032b8:	6a20      	ldr	r0, [r4, #32]
  4032ba:	47b8      	blx	r7
    for (tau = 0; tau < W; tau++) 
  4032bc:	f1ba 0f00 	cmp.w	sl, #0
  4032c0:	f47f af49 	bne.w	403156 <aubio_pitchyinfast_do+0x20e>
	yin->data[0] = 1.0;
  4032c4:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
  4032c8:	6873      	ldr	r3, [r6, #4]
  4032ca:	601a      	str	r2, [r3, #0]
			return YIN_FFT_SAMPLING_RATE / fvec_quadratic_peak_pos (yin, o->peak_pos);
		}
	}
		
	// use global minimum
	o->peak_pos = (uint_t)fvec_min_elem (yin);
  4032cc:	4630      	mov	r0, r6
  4032ce:	4b13      	ldr	r3, [pc, #76]	; (40331c <aubio_pitchyinfast_do+0x3d4>)
  4032d0:	4798      	blx	r3
  4032d2:	4601      	mov	r1, r0
	return YIN_FFT_SAMPLING_RATE / fvec_quadratic_peak_pos (yin, o->peak_pos);
  4032d4:	4b12      	ldr	r3, [pc, #72]	; (403320 <aubio_pitchyinfast_do+0x3d8>)
  4032d6:	4630      	mov	r0, r6
	o->peak_pos = (uint_t)fvec_min_elem (yin);
  4032d8:	60a1      	str	r1, [r4, #8]
	return YIN_FFT_SAMPLING_RATE / fvec_quadratic_peak_pos (yin, o->peak_pos);
  4032da:	4798      	blx	r3
  4032dc:	ed9f 7a11 	vldr	s14, [pc, #68]	; 403324 <aubio_pitchyinfast_do+0x3dc>
  4032e0:	ee06 0a90 	vmov	s13, r0
  4032e4:	eec7 7a26 	vdiv.f32	s15, s14, s13
	//return -1; 
}
  4032e8:	ee17 0a90 	vmov	r0, s15
  4032ec:	b007      	add	sp, #28
  4032ee:	ecbd 8b04 	vpop	{d8-d9}
  4032f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			o->peak_pos = (uint_t)period;
  4032f6:	60a1      	str	r1, [r4, #8]
			return YIN_FFT_SAMPLING_RATE / fvec_quadratic_peak_pos (yin, o->peak_pos);
  4032f8:	4630      	mov	r0, r6
  4032fa:	4b09      	ldr	r3, [pc, #36]	; (403320 <aubio_pitchyinfast_do+0x3d8>)
  4032fc:	4798      	blx	r3
  4032fe:	ed9f 7a09 	vldr	s14, [pc, #36]	; 403324 <aubio_pitchyinfast_do+0x3dc>
  403302:	ee06 0a90 	vmov	s13, r0
  403306:	eec7 7a26 	vdiv.f32	s15, s14, s13
}
  40330a:	ee17 0a90 	vmov	r0, s15
  40330e:	b007      	add	sp, #28
  403310:	ecbd 8b04 	vpop	{d8-d9}
  403314:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403318:	0040136d 	.word	0x0040136d
  40331c:	00401575 	.word	0x00401575
  403320:	004015cd 	.word	0x004015cd
  403324:	46b86000 	.word	0x46b86000

00403328 <aubio_pitchyinfast_get_confidence>:

smpl_t aubio_pitchyinfast_get_confidence (aubio_pitchyinfast_t * o) 
{
	return 1. - o->yin->data[o->peak_pos];
  403328:	6803      	ldr	r3, [r0, #0]
  40332a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
  40332e:	6882      	ldr	r2, [r0, #8]
  403330:	685b      	ldr	r3, [r3, #4]
  403332:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  403336:	edd3 7a00 	vldr	s15, [r3]
}
  40333a:	ee77 7a67 	vsub.f32	s15, s14, s15
  40333e:	ee17 0a90 	vmov	r0, s15
  403342:	4770      	bx	lr

00403344 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  403344:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
  403348:	b990      	cbnz	r0, 403370 <_read+0x2c>
		return -1;
	}

	for (; len > 0; --len) {
  40334a:	2a00      	cmp	r2, #0
  40334c:	4690      	mov	r8, r2
  40334e:	dd0d      	ble.n	40336c <_read+0x28>
  403350:	460c      	mov	r4, r1
  403352:	188f      	adds	r7, r1, r2
  403354:	4e08      	ldr	r6, [pc, #32]	; (403378 <_read+0x34>)
  403356:	4d09      	ldr	r5, [pc, #36]	; (40337c <_read+0x38>)
		ptr_get(stdio_base, ptr);
  403358:	4621      	mov	r1, r4
		ptr++;
  40335a:	3401      	adds	r4, #1
		ptr_get(stdio_base, ptr);
  40335c:	6830      	ldr	r0, [r6, #0]
  40335e:	682b      	ldr	r3, [r5, #0]
  403360:	4798      	blx	r3
	for (; len > 0; --len) {
  403362:	42bc      	cmp	r4, r7
  403364:	d1f8      	bne.n	403358 <_read+0x14>
		nChars++;
	}
	return nChars;
}
  403366:	4640      	mov	r0, r8
  403368:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	for (; len > 0; --len) {
  40336c:	4680      	mov	r8, r0
  40336e:	e7fa      	b.n	403366 <_read+0x22>
		return -1;
  403370:	f04f 38ff 	mov.w	r8, #4294967295
  403374:	e7f7      	b.n	403366 <_read+0x22>
  403376:	bf00      	nop
  403378:	2043b7e4 	.word	0x2043b7e4
  40337c:	2043b7dc 	.word	0x2043b7dc

00403380 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  403380:	3801      	subs	r0, #1
  403382:	2802      	cmp	r0, #2
  403384:	d81e      	bhi.n	4033c4 <_write+0x44>
{
  403386:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40338a:	4615      	mov	r5, r2
		return -1;
	}

	for (; len != 0; --len) {
  40338c:	b1ba      	cbz	r2, 4033be <_write+0x3e>
  40338e:	460e      	mov	r6, r1
  403390:	460c      	mov	r4, r1
  403392:	f8df 803c 	ldr.w	r8, [pc, #60]	; 4033d0 <_write+0x50>
  403396:	4f0d      	ldr	r7, [pc, #52]	; (4033cc <_write+0x4c>)
  403398:	e001      	b.n	40339e <_write+0x1e>
  40339a:	3d01      	subs	r5, #1
  40339c:	d00d      	beq.n	4033ba <_write+0x3a>
		if (ptr_put(stdio_base, *ptr++) < 0) {
  40339e:	f814 1b01 	ldrb.w	r1, [r4], #1
  4033a2:	f8d8 0000 	ldr.w	r0, [r8]
  4033a6:	683b      	ldr	r3, [r7, #0]
  4033a8:	4798      	blx	r3
  4033aa:	2800      	cmp	r0, #0
  4033ac:	eba4 0006 	sub.w	r0, r4, r6
  4033b0:	daf3      	bge.n	40339a <_write+0x1a>
		return -1;
  4033b2:	f04f 30ff 	mov.w	r0, #4294967295
  4033b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4033ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	for (; len != 0; --len) {
  4033be:	4610      	mov	r0, r2
			return -1;
		}
		++nChars;
	}
	return nChars;
}
  4033c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  4033c4:	f04f 30ff 	mov.w	r0, #4294967295
}
  4033c8:	4770      	bx	lr
  4033ca:	bf00      	nop
  4033cc:	2043b7e0 	.word	0x2043b7e0
  4033d0:	2043b7e4 	.word	0x2043b7e4

004033d4 <wm8904_write_register>:
 *
 * \param uc_register_address Register address to write
 * \param us_data Data to write.
 */
void wm8904_write_register(uint8_t uc_register_address, uint16_t us_data)
{
  4033d4:	b570      	push	{r4, r5, r6, lr}
  4033d6:	460b      	mov	r3, r1
  4033d8:	b086      	sub	sp, #24
	uint8_t uc_temp_data[2];
	twihs_packet_t packet;

	uc_temp_data[0] = (us_data & 0xff00) >> 8;
  4033da:	0a0e      	lsrs	r6, r1, #8

	packet.addr[0]     = uc_register_address;
	packet.addr_length = 0x1;
	packet.buffer      = uc_temp_data;
	packet.length      = 0x2;
	packet.chip        = WM8904_SLAVE_ADDRESS;
  4033dc:	221a      	movs	r2, #26
	uc_temp_data[1] = us_data & 0xff;
  4033de:	f88d 3001 	strb.w	r3, [sp, #1]
	packet.addr_length = 0x1;
  4033e2:	2501      	movs	r5, #1
	packet.length      = 0x2;
  4033e4:	2402      	movs	r4, #2

	twihs_master_write(WM8904_TWIHS, &packet);
  4033e6:	a901      	add	r1, sp, #4
  4033e8:	4b07      	ldr	r3, [pc, #28]	; (403408 <wm8904_write_register+0x34>)
	packet.addr[0]     = uc_register_address;
  4033ea:	f88d 0004 	strb.w	r0, [sp, #4]
	twihs_master_write(WM8904_TWIHS, &packet);
  4033ee:	4807      	ldr	r0, [pc, #28]	; (40340c <wm8904_write_register+0x38>)
	uc_temp_data[0] = (us_data & 0xff00) >> 8;
  4033f0:	f88d 6000 	strb.w	r6, [sp]
	packet.addr_length = 0x1;
  4033f4:	9502      	str	r5, [sp, #8]
	packet.buffer      = uc_temp_data;
  4033f6:	f8cd d00c 	str.w	sp, [sp, #12]
	packet.length      = 0x2;
  4033fa:	9404      	str	r4, [sp, #16]
	packet.chip        = WM8904_SLAVE_ADDRESS;
  4033fc:	f88d 2014 	strb.w	r2, [sp, #20]
	twihs_master_write(WM8904_TWIHS, &packet);
  403400:	4798      	blx	r3
}
  403402:	b006      	add	sp, #24
  403404:	bd70      	pop	{r4, r5, r6, pc}
  403406:	bf00      	nop
  403408:	004037fd 	.word	0x004037fd
  40340c:	40018000 	.word	0x40018000

00403410 <wm8904_read_register>:
 *
 * \param uc_register_address Register address to write
 * \retun Register value.
 */
uint16_t wm8904_read_register(uint8_t uc_register_address)
{
  403410:	b530      	push	{r4, r5, lr}
  403412:	b087      	sub	sp, #28

	packet.addr[0]     = uc_register_address;
	packet.addr_length = 0x1;
	packet.buffer      = uc_temp_data;
	packet.length      = 0x2;
	packet.chip        = WM8904_SLAVE_ADDRESS;
  403414:	221a      	movs	r2, #26
	packet.addr_length = 0x1;
  403416:	2501      	movs	r5, #1
	packet.length      = 0x2;
  403418:	2402      	movs	r4, #2
	packet.addr[0]     = uc_register_address;
  40341a:	f88d 0004 	strb.w	r0, [sp, #4]

	twihs_master_read(WM8904_TWIHS, &packet);
  40341e:	a901      	add	r1, sp, #4
  403420:	4b08      	ldr	r3, [pc, #32]	; (403444 <wm8904_read_register+0x34>)
  403422:	4809      	ldr	r0, [pc, #36]	; (403448 <wm8904_read_register+0x38>)
	packet.addr_length = 0x1;
  403424:	9502      	str	r5, [sp, #8]
	packet.buffer      = uc_temp_data;
  403426:	f8cd d00c 	str.w	sp, [sp, #12]
	packet.length      = 0x2;
  40342a:	9404      	str	r4, [sp, #16]
	packet.chip        = WM8904_SLAVE_ADDRESS;
  40342c:	f88d 2014 	strb.w	r2, [sp, #20]
	twihs_master_read(WM8904_TWIHS, &packet);
  403430:	4798      	blx	r3
	us_data = (((uint16_t)uc_temp_data[0] << 8) & 0xff00) | uc_temp_data[1];
  403432:	f89d 0000 	ldrb.w	r0, [sp]
  403436:	f89d 3001 	ldrb.w	r3, [sp, #1]

	return us_data;
}
  40343a:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
  40343e:	b007      	add	sp, #28
  403440:	bd30      	pop	{r4, r5, pc}
  403442:	bf00      	nop
  403444:	0040375d 	.word	0x0040375d
  403448:	40018000 	.word	0x40018000

0040344c <wm8904_twi_init>:
 * \brief Initialize TWIHS connect to WM8904.
 *
 * \retun TWIHS_SUCCESS if initialization is complete, error code otherwise.
 */
uint32_t wm8904_twi_init(void)
{
  40344c:	b510      	push	{r4, lr}
	pio_configure_pin(WM8904_TK_PIO, WM8904_TK_FLAGS);
  40344e:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
{
  403452:	b084      	sub	sp, #16
	pio_configure_pin(WM8904_TK_PIO, WM8904_TK_FLAGS);
  403454:	4c15      	ldr	r4, [pc, #84]	; (4034ac <wm8904_twi_init+0x60>)
  403456:	2021      	movs	r0, #33	; 0x21
  403458:	47a0      	blx	r4
	pio_configure_pin(WM8904_TF_PIO, WM8904_TF_FLAGS);
  40345a:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  40345e:	2020      	movs	r0, #32
  403460:	47a0      	blx	r4
	pio_configure_pin(WM8904_TD_PIO, WM8904_TD_FLAGS);
  403462:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  403466:	207a      	movs	r0, #122	; 0x7a
  403468:	47a0      	blx	r4
	pio_configure_pin(WM8904_RK_PIO, WM8904_RK_FLAGS);
  40346a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40346e:	2016      	movs	r0, #22
  403470:	47a0      	blx	r4
	pio_configure_pin(WM8904_RF_PIO, WM8904_RF_FLAGS);
  403472:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  403476:	2078      	movs	r0, #120	; 0x78
  403478:	47a0      	blx	r4
	pio_configure_pin(WM8904_RD_PIO, WM8904_RD_FLAGS);
  40347a:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  40347e:	200a      	movs	r0, #10
  403480:	47a0      	blx	r4
	pio_configure_pin(WM8904_PCK2_PIO, WM8904_PCK2_FLAGS);
  403482:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  403486:	2012      	movs	r0, #18
  403488:	47a0      	blx	r4

static inline uint32_t twihs_master_setup(twihs_master_t p_twihs,
		twihs_master_options_t *p_opt)
{
	p_opt->master_clk = sysclk_get_peripheral_hz();
	p_opt->smbus      = 0;
  40348a:	2200      	movs	r2, #0
	p_opt->master_clk = sysclk_get_peripheral_hz();
  40348c:	4908      	ldr	r1, [pc, #32]	; (4034b0 <wm8904_twi_init+0x64>)
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  40348e:	2013      	movs	r0, #19

	twihs_options_t opt;
	opt.master_clk = sysclk_get_cpu_hz();
	opt.speed = WM8904_TWIHS_CLK;
  403490:	4c08      	ldr	r4, [pc, #32]	; (4034b4 <wm8904_twi_init+0x68>)
  403492:	4b09      	ldr	r3, [pc, #36]	; (4034b8 <wm8904_twi_init+0x6c>)
  403494:	9101      	str	r1, [sp, #4]
	p_opt->smbus      = 0;
  403496:	f88d 200d 	strb.w	r2, [sp, #13]
  40349a:	9402      	str	r4, [sp, #8]
  40349c:	4798      	blx	r3
#endif		
	} else {
		// Do Nothing
	}
#endif
	return (twihs_master_init(p_twihs, p_opt));
  40349e:	a901      	add	r1, sp, #4
  4034a0:	4b06      	ldr	r3, [pc, #24]	; (4034bc <wm8904_twi_init+0x70>)
  4034a2:	4807      	ldr	r0, [pc, #28]	; (4034c0 <wm8904_twi_init+0x74>)
  4034a4:	4798      	blx	r3
	return twihs_master_setup(WM8904_TWIHS, &opt);
}
  4034a6:	b004      	add	sp, #16
  4034a8:	bd10      	pop	{r4, pc}
  4034aa:	bf00      	nop
  4034ac:	00403dbd 	.word	0x00403dbd
  4034b0:	08f0d180 	.word	0x08f0d180
  4034b4:	00061a80 	.word	0x00061a80
  4034b8:	004041b5 	.word	0x004041b5
  4034bc:	00403729 	.word	0x00403729
  4034c0:	40018000 	.word	0x40018000

004034c4 <rtt_init>:
 * \return 0 if successful.
 */
uint32_t rtt_init(Rtt *p_rtt, uint16_t us_prescaler)
{
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	p_rtt->RTT_MR = (us_prescaler | RTT_MR_RTTRST | g_wobits_in_rtt_mr);
  4034c4:	4b04      	ldr	r3, [pc, #16]	; (4034d8 <rtt_init+0x14>)
{
  4034c6:	4602      	mov	r2, r0
#else
	p_rtt->RTT_MR = (us_prescaler | RTT_MR_RTTRST);
#endif
	return 0;
}
  4034c8:	2000      	movs	r0, #0
	p_rtt->RTT_MR = (us_prescaler | RTT_MR_RTTRST | g_wobits_in_rtt_mr);
  4034ca:	681b      	ldr	r3, [r3, #0]
  4034cc:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
  4034d0:	4319      	orrs	r1, r3
  4034d2:	6011      	str	r1, [r2, #0]
}
  4034d4:	4770      	bx	lr
  4034d6:	bf00      	nop
  4034d8:	20402c78 	.word	0x20402c78

004034dc <rtt_sel_source>:
 * \param p_rtt Pointer to an RTT instance.
 * \param is_rtc_sel RTC 1Hz Clock Selection.
 */
void rtt_sel_source(Rtt *p_rtt, bool is_rtc_sel)
{
	if(is_rtc_sel) {
  4034dc:	b941      	cbnz	r1, 4034f0 <rtt_sel_source+0x14>
		g_wobits_in_rtt_mr |= RTT_MR_RTC1HZ;
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
	} else {
		g_wobits_in_rtt_mr &= ~RTT_MR_RTC1HZ;
  4034de:	4909      	ldr	r1, [pc, #36]	; (403504 <rtt_sel_source+0x28>)
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
  4034e0:	6802      	ldr	r2, [r0, #0]
		g_wobits_in_rtt_mr &= ~RTT_MR_RTC1HZ;
  4034e2:	680b      	ldr	r3, [r1, #0]
  4034e4:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
  4034e8:	431a      	orrs	r2, r3
		g_wobits_in_rtt_mr &= ~RTT_MR_RTC1HZ;
  4034ea:	600b      	str	r3, [r1, #0]
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
  4034ec:	6002      	str	r2, [r0, #0]
  4034ee:	4770      	bx	lr
		g_wobits_in_rtt_mr |= RTT_MR_RTC1HZ;
  4034f0:	4904      	ldr	r1, [pc, #16]	; (403504 <rtt_sel_source+0x28>)
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
  4034f2:	6802      	ldr	r2, [r0, #0]
		g_wobits_in_rtt_mr |= RTT_MR_RTC1HZ;
  4034f4:	680b      	ldr	r3, [r1, #0]
  4034f6:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
  4034fa:	431a      	orrs	r2, r3
		g_wobits_in_rtt_mr |= RTT_MR_RTC1HZ;
  4034fc:	600b      	str	r3, [r1, #0]
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
  4034fe:	6002      	str	r2, [r0, #0]
  403500:	4770      	bx	lr
  403502:	bf00      	nop
  403504:	20402c78 	.word	0x20402c78

00403508 <rtt_enable_interrupt>:
	uint32_t temp;

	temp = p_rtt->RTT_MR;
	temp |= ul_sources;
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	temp |= g_wobits_in_rtt_mr;
  403508:	4b03      	ldr	r3, [pc, #12]	; (403518 <rtt_enable_interrupt+0x10>)
	temp = p_rtt->RTT_MR;
  40350a:	6802      	ldr	r2, [r0, #0]
	temp |= g_wobits_in_rtt_mr;
  40350c:	681b      	ldr	r3, [r3, #0]
  40350e:	4319      	orrs	r1, r3
  403510:	4311      	orrs	r1, r2
#endif
	p_rtt->RTT_MR = temp;
  403512:	6001      	str	r1, [r0, #0]
  403514:	4770      	bx	lr
  403516:	bf00      	nop
  403518:	20402c78 	.word	0x20402c78

0040351c <rtt_disable_interrupt>:
 */
void rtt_disable_interrupt(Rtt *p_rtt, uint32_t ul_sources)
{
	uint32_t temp = 0;

	temp = p_rtt->RTT_MR;
  40351c:	6803      	ldr	r3, [r0, #0]
	temp &= (~ul_sources);
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	temp |= g_wobits_in_rtt_mr;
  40351e:	4a03      	ldr	r2, [pc, #12]	; (40352c <rtt_disable_interrupt+0x10>)
	temp &= (~ul_sources);
  403520:	ea23 0101 	bic.w	r1, r3, r1
	temp |= g_wobits_in_rtt_mr;
  403524:	6812      	ldr	r2, [r2, #0]
  403526:	4311      	orrs	r1, r2
#endif
	p_rtt->RTT_MR = temp;
  403528:	6001      	str	r1, [r0, #0]
  40352a:	4770      	bx	lr
  40352c:	20402c78 	.word	0x20402c78

00403530 <rtt_read_timer_value>:
 *
 * \return The current Real-time Timer value.
 */
uint32_t rtt_read_timer_value(Rtt *p_rtt)
{
	uint32_t rtt_val = p_rtt->RTT_VR;
  403530:	6882      	ldr	r2, [r0, #8]

	while (rtt_val != p_rtt->RTT_VR) {
  403532:	6883      	ldr	r3, [r0, #8]
  403534:	429a      	cmp	r2, r3
  403536:	d003      	beq.n	403540 <rtt_read_timer_value+0x10>
		rtt_val = p_rtt->RTT_VR;
  403538:	6882      	ldr	r2, [r0, #8]
	while (rtt_val != p_rtt->RTT_VR) {
  40353a:	6883      	ldr	r3, [r0, #8]
  40353c:	4293      	cmp	r3, r2
  40353e:	d1fb      	bne.n	403538 <rtt_read_timer_value+0x8>
	}

	return rtt_val;
}
  403540:	4618      	mov	r0, r3
  403542:	4770      	bx	lr

00403544 <rtt_get_status>:
 *
 * \return The Real-time Timer status.
 */
uint32_t rtt_get_status(Rtt *p_rtt)
{
	return p_rtt->RTT_SR;
  403544:	68c0      	ldr	r0, [r0, #12]
}
  403546:	4770      	bx	lr

00403548 <ssc_reset>:
 * \param p_ssc Pointer to an SSC instance.
 */
void ssc_reset(Ssc *p_ssc)
{
	p_ssc->SSC_CR = SSC_CR_SWRST;
	p_ssc->SSC_CMR = 0;
  403548:	2300      	movs	r3, #0
	p_ssc->SSC_CR = SSC_CR_SWRST;
  40354a:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  40354e:	6002      	str	r2, [r0, #0]
	p_ssc->SSC_CMR = 0;
  403550:	6043      	str	r3, [r0, #4]
	p_ssc->SSC_RCMR = 0;
  403552:	6103      	str	r3, [r0, #16]
	p_ssc->SSC_RFMR = 0;
  403554:	6143      	str	r3, [r0, #20]
	p_ssc->SSC_TCMR = 0;
  403556:	6183      	str	r3, [r0, #24]
	p_ssc->SSC_TFMR = 0;
  403558:	61c3      	str	r3, [r0, #28]
  40355a:	4770      	bx	lr

0040355c <ssc_enable_rx>:
 *
 * \param p_ssc Pointer to an SSC instance.
 */
void ssc_enable_rx(Ssc *p_ssc)
{
	p_ssc->SSC_CR = SSC_CR_RXEN;
  40355c:	2301      	movs	r3, #1
  40355e:	6003      	str	r3, [r0, #0]
  403560:	4770      	bx	lr
  403562:	bf00      	nop

00403564 <ssc_disable_rx>:
 *
 * \param p_ssc Pointer to an SSC instance.
 */
void ssc_disable_rx(Ssc *p_ssc)
{
	p_ssc->SSC_CR = SSC_CR_RXDIS;
  403564:	2302      	movs	r3, #2
  403566:	6003      	str	r3, [r0, #0]
  403568:	4770      	bx	lr
  40356a:	bf00      	nop

0040356c <ssc_enable_tx>:
 *
 * \param p_ssc Pointer to an SSC instance.
 */
void ssc_enable_tx(Ssc *p_ssc)
{
	p_ssc->SSC_CR = SSC_CR_TXEN;
  40356c:	f44f 7380 	mov.w	r3, #256	; 0x100
  403570:	6003      	str	r3, [r0, #0]
  403572:	4770      	bx	lr

00403574 <ssc_disable_tx>:
 *
 * \param p_ssc Pointer to an SSC instance.
 */
void ssc_disable_tx(Ssc *p_ssc)
{
	p_ssc->SSC_CR = SSC_CR_TXDIS;
  403574:	f44f 7300 	mov.w	r3, #512	; 0x200
  403578:	6003      	str	r3, [r0, #0]
  40357a:	4770      	bx	lr

0040357c <ssc_set_receiver>:
 * \param p_rx_clk_opt Pointer to the receiver clock configuration structure.
 * \param p_rx_data_frame Pointer to the receiver data frame configuration structure.
 */
void ssc_set_receiver(Ssc *p_ssc, clock_opt_t *p_rx_clk_opt,
		data_frame_opt_t *p_rx_data_frame)
{
  40357c:	b4f0      	push	{r4, r5, r6, r7}
	if (p_rx_clk_opt == NULL) {
  40357e:	2900      	cmp	r1, #0
  403580:	d02f      	beq.n	4035e2 <ssc_set_receiver+0x66>
		p_ssc->SSC_RCMR = 0;
	} else {
		p_ssc->SSC_RCMR |= p_rx_clk_opt->ul_cks |
  403582:	6904      	ldr	r4, [r0, #16]
  403584:	68cf      	ldr	r7, [r1, #12]
  403586:	698e      	ldr	r6, [r1, #24]
  403588:	e891 0028 	ldmia.w	r1, {r3, r5}
  40358c:	432b      	orrs	r3, r5
  40358e:	688d      	ldr	r5, [r1, #8]
  403590:	4323      	orrs	r3, r4
				p_rx_clk_opt->ul_cko | p_rx_clk_opt->ul_cki |
				p_rx_clk_opt->ul_ckg |
				p_rx_clk_opt->ul_start_sel |
				SSC_RCMR_PERIOD(p_rx_clk_opt->ul_period) |
				SSC_RCMR_STTDLY(p_rx_clk_opt->ul_sttdly);
  403592:	694c      	ldr	r4, [r1, #20]
		p_ssc->SSC_RCMR |= p_rx_clk_opt->ul_cks |
  403594:	432b      	orrs	r3, r5
				SSC_RCMR_PERIOD(p_rx_clk_opt->ul_period) |
  403596:	690d      	ldr	r5, [r1, #16]
				SSC_RCMR_STTDLY(p_rx_clk_opt->ul_sttdly);
  403598:	0421      	lsls	r1, r4, #16
		p_ssc->SSC_RCMR |= p_rx_clk_opt->ul_cks |
  40359a:	433b      	orrs	r3, r7
				SSC_RCMR_STTDLY(p_rx_clk_opt->ul_sttdly);
  40359c:	f401 017f 	and.w	r1, r1, #16711680	; 0xff0000
		p_ssc->SSC_RCMR |= p_rx_clk_opt->ul_cks |
  4035a0:	4333      	orrs	r3, r6
  4035a2:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
  4035a6:	430b      	orrs	r3, r1
  4035a8:	6103      	str	r3, [r0, #16]
	}

	if (p_rx_data_frame == NULL) {
  4035aa:	b1ea      	cbz	r2, 4035e8 <ssc_set_receiver+0x6c>
		p_ssc->SSC_RFMR = 0;
	} else {
		p_ssc->SSC_RFMR |= SSC_RFMR_DATLEN(p_rx_data_frame->ul_datlen) |
  4035ac:	6954      	ldr	r4, [r2, #20]
  4035ae:	6853      	ldr	r3, [r2, #4]
  4035b0:	6991      	ldr	r1, [r2, #24]
  4035b2:	4323      	orrs	r3, r4
  4035b4:	6946      	ldr	r6, [r0, #20]
  4035b6:	6814      	ldr	r4, [r2, #0]
  4035b8:	430b      	orrs	r3, r1
				p_rx_data_frame->ul_msbf |
				SSC_RFMR_DATNB(p_rx_data_frame->ul_datnb) |
  4035ba:	6891      	ldr	r1, [r2, #8]
		p_ssc->SSC_RFMR |= SSC_RFMR_DATLEN(p_rx_data_frame->ul_datlen) |
  4035bc:	f004 041f 	and.w	r4, r4, #31
				SSC_RFMR_FSLEN(p_rx_data_frame->ul_fslen) |
				SSC_RFMR_FSLEN_EXT(p_rx_data_frame->ul_fslen_ext) |
  4035c0:	6915      	ldr	r5, [r2, #16]
		p_ssc->SSC_RFMR |= SSC_RFMR_DATLEN(p_rx_data_frame->ul_datlen) |
  4035c2:	4333      	orrs	r3, r6
				SSC_RFMR_FSLEN(p_rx_data_frame->ul_fslen) |
  4035c4:	68d2      	ldr	r2, [r2, #12]
				SSC_RFMR_DATNB(p_rx_data_frame->ul_datnb) |
  4035c6:	0209      	lsls	r1, r1, #8
		p_ssc->SSC_RFMR |= SSC_RFMR_DATLEN(p_rx_data_frame->ul_datlen) |
  4035c8:	4323      	orrs	r3, r4
				SSC_RFMR_FSLEN(p_rx_data_frame->ul_fslen) |
  4035ca:	0412      	lsls	r2, r2, #16
				SSC_RFMR_DATNB(p_rx_data_frame->ul_datnb) |
  4035cc:	f401 6170 	and.w	r1, r1, #3840	; 0xf00
		p_ssc->SSC_RFMR |= SSC_RFMR_DATLEN(p_rx_data_frame->ul_datlen) |
  4035d0:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
				SSC_RFMR_FSLEN(p_rx_data_frame->ul_fslen) |
  4035d4:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
		p_ssc->SSC_RFMR |= SSC_RFMR_DATLEN(p_rx_data_frame->ul_datlen) |
  4035d8:	430b      	orrs	r3, r1
  4035da:	4313      	orrs	r3, r2
				p_rx_data_frame->ul_fsos |
				p_rx_data_frame->ul_fsedge;
	}
}
  4035dc:	bcf0      	pop	{r4, r5, r6, r7}
		p_ssc->SSC_RFMR |= SSC_RFMR_DATLEN(p_rx_data_frame->ul_datlen) |
  4035de:	6143      	str	r3, [r0, #20]
}
  4035e0:	4770      	bx	lr
		p_ssc->SSC_RCMR = 0;
  4035e2:	6101      	str	r1, [r0, #16]
	if (p_rx_data_frame == NULL) {
  4035e4:	2a00      	cmp	r2, #0
  4035e6:	d1e1      	bne.n	4035ac <ssc_set_receiver+0x30>
		p_ssc->SSC_RFMR = 0;
  4035e8:	6142      	str	r2, [r0, #20]
}
  4035ea:	bcf0      	pop	{r4, r5, r6, r7}
  4035ec:	4770      	bx	lr
  4035ee:	bf00      	nop

004035f0 <ssc_set_transmitter>:
 * \param p_tx_clk_opt Pointer to the transmitter clock configuration structure.
 * \param p_tx_data_frame Pointer to the transmitter data frame configuration structure.
 */
void ssc_set_transmitter(Ssc *p_ssc, clock_opt_t *p_tx_clk_opt,
		data_frame_opt_t *p_tx_data_frame)
{
  4035f0:	b4f0      	push	{r4, r5, r6, r7}
	if (p_tx_clk_opt == NULL) {
  4035f2:	2900      	cmp	r1, #0
  4035f4:	d02f      	beq.n	403656 <ssc_set_transmitter+0x66>
		p_ssc->SSC_TCMR = 0;
	} else {
		p_ssc->SSC_TCMR |= p_tx_clk_opt->ul_cks |
  4035f6:	6984      	ldr	r4, [r0, #24]
  4035f8:	68cf      	ldr	r7, [r1, #12]
  4035fa:	698e      	ldr	r6, [r1, #24]
  4035fc:	e891 0028 	ldmia.w	r1, {r3, r5}
  403600:	432b      	orrs	r3, r5
  403602:	688d      	ldr	r5, [r1, #8]
  403604:	4323      	orrs	r3, r4
				p_tx_clk_opt->ul_cko | p_tx_clk_opt->ul_cki |
				p_tx_clk_opt->ul_ckg |
				p_tx_clk_opt->ul_start_sel |
				SSC_TCMR_PERIOD(p_tx_clk_opt->ul_period) |
				SSC_TCMR_STTDLY(p_tx_clk_opt->ul_sttdly);
  403606:	694c      	ldr	r4, [r1, #20]
		p_ssc->SSC_TCMR |= p_tx_clk_opt->ul_cks |
  403608:	432b      	orrs	r3, r5
				SSC_TCMR_PERIOD(p_tx_clk_opt->ul_period) |
  40360a:	690d      	ldr	r5, [r1, #16]
				SSC_TCMR_STTDLY(p_tx_clk_opt->ul_sttdly);
  40360c:	0421      	lsls	r1, r4, #16
		p_ssc->SSC_TCMR |= p_tx_clk_opt->ul_cks |
  40360e:	433b      	orrs	r3, r7
				SSC_TCMR_STTDLY(p_tx_clk_opt->ul_sttdly);
  403610:	f401 017f 	and.w	r1, r1, #16711680	; 0xff0000
		p_ssc->SSC_TCMR |= p_tx_clk_opt->ul_cks |
  403614:	4333      	orrs	r3, r6
  403616:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
  40361a:	430b      	orrs	r3, r1
  40361c:	6183      	str	r3, [r0, #24]
	}

	if (p_tx_data_frame == NULL) {
  40361e:	b1ea      	cbz	r2, 40365c <ssc_set_transmitter+0x6c>
		p_ssc->SSC_TFMR = 0;
	} else {
		p_ssc->SSC_TFMR |= SSC_RFMR_DATLEN(p_tx_data_frame->ul_datlen) |
  403620:	6954      	ldr	r4, [r2, #20]
  403622:	6853      	ldr	r3, [r2, #4]
  403624:	6991      	ldr	r1, [r2, #24]
  403626:	4323      	orrs	r3, r4
  403628:	69c6      	ldr	r6, [r0, #28]
  40362a:	6814      	ldr	r4, [r2, #0]
  40362c:	430b      	orrs	r3, r1
				p_tx_data_frame->ul_msbf |
				SSC_TFMR_DATNB(p_tx_data_frame->ul_datnb) |
  40362e:	6891      	ldr	r1, [r2, #8]
		p_ssc->SSC_TFMR |= SSC_RFMR_DATLEN(p_tx_data_frame->ul_datlen) |
  403630:	f004 041f 	and.w	r4, r4, #31
				SSC_TFMR_FSLEN(p_tx_data_frame->ul_fslen) |
				SSC_TFMR_FSLEN_EXT(p_tx_data_frame->ul_fslen_ext) |
  403634:	6915      	ldr	r5, [r2, #16]
		p_ssc->SSC_TFMR |= SSC_RFMR_DATLEN(p_tx_data_frame->ul_datlen) |
  403636:	4333      	orrs	r3, r6
				SSC_TFMR_FSLEN(p_tx_data_frame->ul_fslen) |
  403638:	68d2      	ldr	r2, [r2, #12]
				SSC_TFMR_DATNB(p_tx_data_frame->ul_datnb) |
  40363a:	0209      	lsls	r1, r1, #8
		p_ssc->SSC_TFMR |= SSC_RFMR_DATLEN(p_tx_data_frame->ul_datlen) |
  40363c:	4323      	orrs	r3, r4
				SSC_TFMR_FSLEN(p_tx_data_frame->ul_fslen) |
  40363e:	0412      	lsls	r2, r2, #16
				SSC_TFMR_DATNB(p_tx_data_frame->ul_datnb) |
  403640:	f401 6170 	and.w	r1, r1, #3840	; 0xf00
		p_ssc->SSC_TFMR |= SSC_RFMR_DATLEN(p_tx_data_frame->ul_datlen) |
  403644:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
				SSC_TFMR_FSLEN(p_tx_data_frame->ul_fslen) |
  403648:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
		p_ssc->SSC_TFMR |= SSC_RFMR_DATLEN(p_tx_data_frame->ul_datlen) |
  40364c:	430b      	orrs	r3, r1
  40364e:	4313      	orrs	r3, r2
				p_tx_data_frame->ul_fsos |
				p_tx_data_frame->ul_fsedge;
	}
}
  403650:	bcf0      	pop	{r4, r5, r6, r7}
		p_ssc->SSC_TFMR |= SSC_RFMR_DATLEN(p_tx_data_frame->ul_datlen) |
  403652:	61c3      	str	r3, [r0, #28]
}
  403654:	4770      	bx	lr
		p_ssc->SSC_TCMR = 0;
  403656:	6181      	str	r1, [r0, #24]
	if (p_tx_data_frame == NULL) {
  403658:	2a00      	cmp	r2, #0
  40365a:	d1e1      	bne.n	403620 <ssc_set_transmitter+0x30>
		p_ssc->SSC_TFMR = 0;
  40365c:	61c2      	str	r2, [r0, #28]
}
  40365e:	bcf0      	pop	{r4, r5, r6, r7}
  403660:	4770      	bx	lr
  403662:	bf00      	nop

00403664 <ssc_disable_interrupt>:
 * \param p_ssc Pointer to an SSC instance.
 * \param ul_sources Interrupts to be enabled.
 */
void ssc_disable_interrupt(Ssc *p_ssc, uint32_t ul_sources)
{
	p_ssc->SSC_IDR = ul_sources;
  403664:	6481      	str	r1, [r0, #72]	; 0x48
  403666:	4770      	bx	lr

00403668 <twihs_set_speed>:
	uint32_t ckdiv = 0;
	uint32_t c_lh_div;
	uint32_t cldiv, chdiv;

	/* High-Speed can be only used in slave mode, 400k is the max speed allowed for master */
	if (ul_speed > I2C_FAST_MODE_SPEED) {
  403668:	4b2c      	ldr	r3, [pc, #176]	; (40371c <twihs_set_speed+0xb4>)
  40366a:	4299      	cmp	r1, r3
{
  40366c:	b430      	push	{r4, r5}
	if (ul_speed > I2C_FAST_MODE_SPEED) {
  40366e:	d84d      	bhi.n	40370c <twihs_set_speed+0xa4>
		return FAIL;
	}

	/* Low level time not less than 1.3us of I2C Fast Mode. */
	if (ul_speed > LOW_LEVEL_TIME_LIMIT) {
  403670:	f5a3 537a 	sub.w	r3, r3, #16000	; 0x3e80
  403674:	4299      	cmp	r1, r3
  403676:	d92e      	bls.n	4036d6 <twihs_set_speed+0x6e>
		/* Low level of time fixed for 1.3us. */
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  403678:	4b29      	ldr	r3, [pc, #164]	; (403720 <twihs_set_speed+0xb8>)
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  40367a:	4c2a      	ldr	r4, [pc, #168]	; (403724 <twihs_set_speed+0xbc>)
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  40367c:	440b      	add	r3, r1
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  40367e:	fba4 1402 	umull	r1, r4, r4, r2
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  403682:	009b      	lsls	r3, r3, #2
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  403684:	0ba4      	lsrs	r4, r4, #14
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  403686:	fbb2 f2f3 	udiv	r2, r2, r3
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  40368a:	3c03      	subs	r4, #3
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  40368c:	3a03      	subs	r2, #3
		
		/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((cldiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  40368e:	2cff      	cmp	r4, #255	; 0xff
  403690:	d940      	bls.n	403714 <twihs_set_speed+0xac>
  403692:	2100      	movs	r1, #0
  403694:	e000      	b.n	403698 <twihs_set_speed+0x30>
  403696:	b13b      	cbz	r3, 4036a8 <twihs_set_speed+0x40>
			/* Increase clock divider */
			ckdiv++;
  403698:	3101      	adds	r1, #1
			/* Divide cldiv value */
			cldiv /= TWIHS_CLK_DIVIDER;
  40369a:	0864      	lsrs	r4, r4, #1
		while ((cldiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  40369c:	2906      	cmp	r1, #6
  40369e:	bf8c      	ite	hi
  4036a0:	2300      	movhi	r3, #0
  4036a2:	2301      	movls	r3, #1
  4036a4:	2cff      	cmp	r4, #255	; 0xff
  4036a6:	d8f6      	bhi.n	403696 <twihs_set_speed+0x2e>
		}
		/* chdiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((chdiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  4036a8:	2aff      	cmp	r2, #255	; 0xff
  4036aa:	d907      	bls.n	4036bc <twihs_set_speed+0x54>
  4036ac:	b913      	cbnz	r3, 4036b4 <twihs_set_speed+0x4c>
  4036ae:	e005      	b.n	4036bc <twihs_set_speed+0x54>
  4036b0:	2906      	cmp	r1, #6
  4036b2:	d803      	bhi.n	4036bc <twihs_set_speed+0x54>
			/* Increase clock divider */
			ckdiv++;
			/* Divide cldiv value */
			chdiv /= TWIHS_CLK_DIVIDER;
  4036b4:	0852      	lsrs	r2, r2, #1
			ckdiv++;
  4036b6:	3101      	adds	r1, #1
		while ((chdiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  4036b8:	2aff      	cmp	r2, #255	; 0xff
  4036ba:	d8f9      	bhi.n	4036b0 <twihs_set_speed+0x48>
		}

		/* set clock waveform generator register */
		p_twihs->TWIHS_CWGR =
				TWIHS_CWGR_CLDIV(cldiv) | TWIHS_CWGR_CHDIV(chdiv) |
  4036bc:	0213      	lsls	r3, r2, #8
		p_twihs->TWIHS_CWGR =
  4036be:	2500      	movs	r5, #0
				TWIHS_CWGR_CKDIV(ckdiv);
  4036c0:	0409      	lsls	r1, r1, #16
				TWIHS_CWGR_CLDIV(cldiv) | TWIHS_CWGR_CHDIV(chdiv) |
  4036c2:	b29b      	uxth	r3, r3
				TWIHS_CWGR_CKDIV(ckdiv);
  4036c4:	f401 21e0 	and.w	r1, r1, #458752	; 0x70000
				TWIHS_CWGR_CLDIV(cldiv) | TWIHS_CWGR_CHDIV(chdiv) |
  4036c8:	b2e4      	uxtb	r4, r4
  4036ca:	430b      	orrs	r3, r1
  4036cc:	4323      	orrs	r3, r4
		p_twihs->TWIHS_CWGR =
  4036ce:	6103      	str	r3, [r0, #16]
				TWIHS_CWGR_CLDIV(c_lh_div) | TWIHS_CWGR_CHDIV(c_lh_div) |
				TWIHS_CWGR_CKDIV(ckdiv);
	}

	return PASS;
}
  4036d0:	4628      	mov	r0, r5
  4036d2:	bc30      	pop	{r4, r5}
  4036d4:	4770      	bx	lr
		c_lh_div = ul_mck / (ul_speed * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  4036d6:	0049      	lsls	r1, r1, #1
		while ((c_lh_div > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  4036d8:	2300      	movs	r3, #0
		c_lh_div = ul_mck / (ul_speed * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  4036da:	fbb2 f2f1 	udiv	r2, r2, r1
  4036de:	3a03      	subs	r2, #3
		while ((c_lh_div > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  4036e0:	2aff      	cmp	r2, #255	; 0xff
  4036e2:	d802      	bhi.n	4036ea <twihs_set_speed+0x82>
  4036e4:	e008      	b.n	4036f8 <twihs_set_speed+0x90>
  4036e6:	2b06      	cmp	r3, #6
  4036e8:	d803      	bhi.n	4036f2 <twihs_set_speed+0x8a>
			c_lh_div /= TWIHS_CLK_DIVIDER;
  4036ea:	0852      	lsrs	r2, r2, #1
			ckdiv++;
  4036ec:	3301      	adds	r3, #1
		while ((c_lh_div > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  4036ee:	2aff      	cmp	r2, #255	; 0xff
  4036f0:	d8f9      	bhi.n	4036e6 <twihs_set_speed+0x7e>
  4036f2:	041b      	lsls	r3, r3, #16
  4036f4:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
				TWIHS_CWGR_CLDIV(c_lh_div) | TWIHS_CWGR_CHDIV(c_lh_div) |
  4036f8:	0211      	lsls	r1, r2, #8
	return PASS;
  4036fa:	2500      	movs	r5, #0
				TWIHS_CWGR_CLDIV(c_lh_div) | TWIHS_CWGR_CHDIV(c_lh_div) |
  4036fc:	b2d2      	uxtb	r2, r2
  4036fe:	b289      	uxth	r1, r1
  403700:	431a      	orrs	r2, r3
  403702:	430a      	orrs	r2, r1
		p_twihs->TWIHS_CWGR =
  403704:	6102      	str	r2, [r0, #16]
}
  403706:	4628      	mov	r0, r5
  403708:	bc30      	pop	{r4, r5}
  40370a:	4770      	bx	lr
		return FAIL;
  40370c:	2501      	movs	r5, #1
}
  40370e:	4628      	mov	r0, r5
  403710:	bc30      	pop	{r4, r5}
  403712:	4770      	bx	lr
		while ((cldiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  403714:	2301      	movs	r3, #1
	uint32_t ckdiv = 0;
  403716:	2100      	movs	r1, #0
  403718:	e7c6      	b.n	4036a8 <twihs_set_speed+0x40>
  40371a:	bf00      	nop
  40371c:	00061a80 	.word	0x00061a80
  403720:	3ffd1200 	.word	0x3ffd1200
  403724:	057619f1 	.word	0x057619f1

00403728 <twihs_master_init>:
{
  403728:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	p_twihs->TWIHS_CR = TWIHS_CR_MSEN;
  40372a:	2204      	movs	r2, #4
	p_twihs->TWIHS_IDR = ~0UL;
  40372c:	f04f 37ff 	mov.w	r7, #4294967295
 * \param p_twihs Pointer to a TWIHS instance.
 */
void twihs_reset(Twihs *p_twihs)
{
	/* Set SWRST bit to reset TWIHS peripheral */
	p_twihs->TWIHS_CR = TWIHS_CR_SWRST;
  403730:	2480      	movs	r4, #128	; 0x80
	p_twihs->TWIHS_CR = TWIHS_CR_MSDIS;
  403732:	2608      	movs	r6, #8
	p_twihs->TWIHS_CR = TWIHS_CR_SVDIS;
  403734:	2520      	movs	r5, #32
	p_twihs->TWIHS_IDR = ~0UL;
  403736:	6287      	str	r7, [r0, #40]	; 0x28
	p_twihs->TWIHS_SR;
  403738:	6a07      	ldr	r7, [r0, #32]
	p_twihs->TWIHS_CR = TWIHS_CR_SWRST;
  40373a:	6004      	str	r4, [r0, #0]
	if (twihs_set_speed(p_twihs, p_opt->speed, p_opt->master_clk) == FAIL) {
  40373c:	4c06      	ldr	r4, [pc, #24]	; (403758 <twihs_master_init+0x30>)
	p_twihs->TWIHS_RHR;
  40373e:	6b07      	ldr	r7, [r0, #48]	; 0x30
	p_twihs->TWIHS_CR = TWIHS_CR_MSDIS;
  403740:	6006      	str	r6, [r0, #0]
	p_twihs->TWIHS_CR = TWIHS_CR_SVDIS;
  403742:	6005      	str	r5, [r0, #0]
	p_twihs->TWIHS_CR = TWIHS_CR_MSEN;
  403744:	6002      	str	r2, [r0, #0]
	if (twihs_set_speed(p_twihs, p_opt->speed, p_opt->master_clk) == FAIL) {
  403746:	680a      	ldr	r2, [r1, #0]
  403748:	6849      	ldr	r1, [r1, #4]
  40374a:	47a0      	blx	r4
}
  40374c:	f1a0 0001 	sub.w	r0, r0, #1
  403750:	fab0 f080 	clz	r0, r0
  403754:	0940      	lsrs	r0, r0, #5
  403756:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  403758:	00403669 	.word	0x00403669

0040375c <twihs_master_read>:
	uint32_t status, cnt = p_packet->length;
  40375c:	68ca      	ldr	r2, [r1, #12]
	if (cnt == 0) {
  40375e:	2a00      	cmp	r2, #0
  403760:	d049      	beq.n	4037f6 <twihs_master_read+0x9a>
{
  403762:	b470      	push	{r4, r5, r6}
	p_twihs->TWIHS_MMR = 0;
  403764:	2600      	movs	r6, #0
	uint8_t *buffer = p_packet->buffer;
  403766:	688c      	ldr	r4, [r1, #8]
	p_twihs->TWIHS_MMR = 0;
  403768:	6046      	str	r6, [r0, #4]
			((p_packet->addr_length << TWIHS_MMR_IADRSZ_Pos) &
  40376a:	684b      	ldr	r3, [r1, #4]
	p_twihs->TWIHS_MMR = TWIHS_MMR_MREAD | TWIHS_MMR_DADR(p_packet->chip) |
  40376c:	7c0d      	ldrb	r5, [r1, #16]
			((p_packet->addr_length << TWIHS_MMR_IADRSZ_Pos) &
  40376e:	021b      	lsls	r3, r3, #8
	p_twihs->TWIHS_MMR = TWIHS_MMR_MREAD | TWIHS_MMR_DADR(p_packet->chip) |
  403770:	042d      	lsls	r5, r5, #16
			((p_packet->addr_length << TWIHS_MMR_IADRSZ_Pos) &
  403772:	f403 7340 	and.w	r3, r3, #768	; 0x300
	p_twihs->TWIHS_MMR = TWIHS_MMR_MREAD | TWIHS_MMR_DADR(p_packet->chip) |
  403776:	f405 05fe 	and.w	r5, r5, #8323072	; 0x7f0000
  40377a:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
  40377e:	432b      	orrs	r3, r5
  403780:	6043      	str	r3, [r0, #4]
	p_twihs->TWIHS_IADR = 0;
  403782:	60c6      	str	r6, [r0, #12]
	p_twihs->TWIHS_IADR = twihs_mk_addr(p_packet->addr, p_packet->addr_length);
  403784:	684b      	ldr	r3, [r1, #4]
	if (len == 0)
  403786:	b9bb      	cbnz	r3, 4037b8 <twihs_master_read+0x5c>
		return 0;
  403788:	461d      	mov	r5, r3
	p_twihs->TWIHS_CR = TWIHS_CR_START;
  40378a:	2301      	movs	r3, #1
	p_twihs->TWIHS_IADR = twihs_mk_addr(p_packet->addr, p_packet->addr_length);
  40378c:	60c5      	str	r5, [r0, #12]
			p_twihs->TWIHS_CR = TWIHS_CR_STOP;
  40378e:	2502      	movs	r5, #2
	p_twihs->TWIHS_CR = TWIHS_CR_START;
  403790:	6003      	str	r3, [r0, #0]
		status = p_twihs->TWIHS_SR;
  403792:	6a03      	ldr	r3, [r0, #32]
		if (status & TWIHS_SR_NACK) {
  403794:	05d9      	lsls	r1, r3, #23
  403796:	d40c      	bmi.n	4037b2 <twihs_master_read+0x56>
  403798:	f247 5130 	movw	r1, #30000	; 0x7530
		if (cnt == 1) {
  40379c:	2a01      	cmp	r2, #1
  40379e:	d01e      	beq.n	4037de <twihs_master_read+0x82>
		if (!(status & TWIHS_SR_RXRDY)) {
  4037a0:	079e      	lsls	r6, r3, #30
  4037a2:	d515      	bpl.n	4037d0 <twihs_master_read+0x74>
		*buffer++ = p_twihs->TWIHS_RHR;
  4037a4:	6b03      	ldr	r3, [r0, #48]	; 0x30
		cnt--;
  4037a6:	3a01      	subs	r2, #1
		*buffer++ = p_twihs->TWIHS_RHR;
  4037a8:	f804 3b01 	strb.w	r3, [r4], #1
		status = p_twihs->TWIHS_SR;
  4037ac:	6a03      	ldr	r3, [r0, #32]
		if (status & TWIHS_SR_NACK) {
  4037ae:	05d9      	lsls	r1, r3, #23
  4037b0:	d5f2      	bpl.n	403798 <twihs_master_read+0x3c>
			return TWIHS_RECEIVE_NACK;
  4037b2:	2005      	movs	r0, #5
}
  4037b4:	bc70      	pop	{r4, r5, r6}
  4037b6:	4770      	bx	lr
	if (len > 1) {
  4037b8:	2b01      	cmp	r3, #1
	val = addr[0];
  4037ba:	780d      	ldrb	r5, [r1, #0]
	if (len > 1) {
  4037bc:	dde5      	ble.n	40378a <twihs_master_read+0x2e>
		val |= addr[1];
  4037be:	784e      	ldrb	r6, [r1, #1]
	if (len > 2) {
  4037c0:	2b02      	cmp	r3, #2
		val |= addr[1];
  4037c2:	ea46 2505 	orr.w	r5, r6, r5, lsl #8
	if (len > 2) {
  4037c6:	d0e0      	beq.n	40378a <twihs_master_read+0x2e>
		val |= addr[2];
  4037c8:	788b      	ldrb	r3, [r1, #2]
  4037ca:	ea43 2505 	orr.w	r5, r3, r5, lsl #8
  4037ce:	e7dc      	b.n	40378a <twihs_master_read+0x2e>
		status = p_twihs->TWIHS_SR;
  4037d0:	6a03      	ldr	r3, [r0, #32]
		if (status & TWIHS_SR_NACK) {
  4037d2:	05de      	lsls	r6, r3, #23
  4037d4:	d4ed      	bmi.n	4037b2 <twihs_master_read+0x56>
		if (!timeout--) {
  4037d6:	3901      	subs	r1, #1
  4037d8:	d1e0      	bne.n	40379c <twihs_master_read+0x40>
			return TWIHS_ERROR_TIMEOUT;
  4037da:	2009      	movs	r0, #9
  4037dc:	e7ea      	b.n	4037b4 <twihs_master_read+0x58>
		if (!(status & TWIHS_SR_RXRDY)) {
  4037de:	079b      	lsls	r3, r3, #30
			p_twihs->TWIHS_CR = TWIHS_CR_STOP;
  4037e0:	6005      	str	r5, [r0, #0]
		if (!(status & TWIHS_SR_RXRDY)) {
  4037e2:	d5f5      	bpl.n	4037d0 <twihs_master_read+0x74>
		*buffer++ = p_twihs->TWIHS_RHR;
  4037e4:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4037e6:	7023      	strb	r3, [r4, #0]
	while (!(p_twihs->TWIHS_SR & TWIHS_SR_TXCOMP)) {
  4037e8:	6a03      	ldr	r3, [r0, #32]
  4037ea:	07db      	lsls	r3, r3, #31
  4037ec:	d5fc      	bpl.n	4037e8 <twihs_master_read+0x8c>
	p_twihs->TWIHS_SR;
  4037ee:	6a03      	ldr	r3, [r0, #32]
	return TWIHS_SUCCESS;
  4037f0:	2000      	movs	r0, #0
}
  4037f2:	bc70      	pop	{r4, r5, r6}
  4037f4:	4770      	bx	lr
		return TWIHS_INVALID_ARGUMENT;
  4037f6:	2001      	movs	r0, #1
  4037f8:	4770      	bx	lr
  4037fa:	bf00      	nop

004037fc <twihs_master_write>:
{
  4037fc:	4603      	mov	r3, r0
	uint32_t status, cnt = p_packet->length;
  4037fe:	68c8      	ldr	r0, [r1, #12]
	if (cnt == 0) {
  403800:	2800      	cmp	r0, #0
  403802:	d034      	beq.n	40386e <twihs_master_write+0x72>
{
  403804:	b470      	push	{r4, r5, r6}
	p_twihs->TWIHS_MMR = 0;
  403806:	2600      	movs	r6, #0
	uint8_t *buffer = p_packet->buffer;
  403808:	688c      	ldr	r4, [r1, #8]
	p_twihs->TWIHS_MMR = 0;
  40380a:	605e      	str	r6, [r3, #4]
	p_twihs->TWIHS_MMR = TWIHS_MMR_DADR(p_packet->chip) |
  40380c:	7c0a      	ldrb	r2, [r1, #16]
			((p_packet->addr_length << TWIHS_MMR_IADRSZ_Pos) &
  40380e:	684d      	ldr	r5, [r1, #4]
	p_twihs->TWIHS_MMR = TWIHS_MMR_DADR(p_packet->chip) |
  403810:	0412      	lsls	r2, r2, #16
			((p_packet->addr_length << TWIHS_MMR_IADRSZ_Pos) &
  403812:	022d      	lsls	r5, r5, #8
	p_twihs->TWIHS_MMR = TWIHS_MMR_DADR(p_packet->chip) |
  403814:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
			((p_packet->addr_length << TWIHS_MMR_IADRSZ_Pos) &
  403818:	f405 7540 	and.w	r5, r5, #768	; 0x300
	p_twihs->TWIHS_MMR = TWIHS_MMR_DADR(p_packet->chip) |
  40381c:	432a      	orrs	r2, r5
  40381e:	605a      	str	r2, [r3, #4]
	p_twihs->TWIHS_IADR = 0;
  403820:	60de      	str	r6, [r3, #12]
	p_twihs->TWIHS_IADR = twihs_mk_addr(p_packet->addr, p_packet->addr_length);
  403822:	684a      	ldr	r2, [r1, #4]
	if (len == 0)
  403824:	b98a      	cbnz	r2, 40384a <twihs_master_write+0x4e>
		return 0;
  403826:	4615      	mov	r5, r2
	p_twihs->TWIHS_IADR = twihs_mk_addr(p_packet->addr, p_packet->addr_length);
  403828:	60dd      	str	r5, [r3, #12]
		status = p_twihs->TWIHS_SR;
  40382a:	6a1a      	ldr	r2, [r3, #32]
		if (status & TWIHS_SR_NACK) {
  40382c:	05d6      	lsls	r6, r2, #23
  40382e:	d409      	bmi.n	403844 <twihs_master_write+0x48>
		if (!(status & TWIHS_SR_TXRDY)) {
  403830:	0755      	lsls	r5, r2, #29
  403832:	d5fa      	bpl.n	40382a <twihs_master_write+0x2e>
		p_twihs->TWIHS_THR = *buffer++;
  403834:	f814 2b01 	ldrb.w	r2, [r4], #1
	while (cnt > 0) {
  403838:	3801      	subs	r0, #1
		p_twihs->TWIHS_THR = *buffer++;
  40383a:	635a      	str	r2, [r3, #52]	; 0x34
	while (cnt > 0) {
  40383c:	d013      	beq.n	403866 <twihs_master_write+0x6a>
		status = p_twihs->TWIHS_SR;
  40383e:	6a1a      	ldr	r2, [r3, #32]
		if (status & TWIHS_SR_NACK) {
  403840:	05d6      	lsls	r6, r2, #23
  403842:	d5f5      	bpl.n	403830 <twihs_master_write+0x34>
			return TWIHS_RECEIVE_NACK;
  403844:	2005      	movs	r0, #5
}
  403846:	bc70      	pop	{r4, r5, r6}
  403848:	4770      	bx	lr
	if (len > 1) {
  40384a:	2a01      	cmp	r2, #1
	val = addr[0];
  40384c:	780d      	ldrb	r5, [r1, #0]
	if (len > 1) {
  40384e:	ddeb      	ble.n	403828 <twihs_master_write+0x2c>
		val |= addr[1];
  403850:	784e      	ldrb	r6, [r1, #1]
	if (len > 2) {
  403852:	2a02      	cmp	r2, #2
		val |= addr[1];
  403854:	ea46 2505 	orr.w	r5, r6, r5, lsl #8
	if (len > 2) {
  403858:	d0e6      	beq.n	403828 <twihs_master_write+0x2c>
		val |= addr[2];
  40385a:	788a      	ldrb	r2, [r1, #2]
  40385c:	ea42 2505 	orr.w	r5, r2, r5, lsl #8
  403860:	e7e2      	b.n	403828 <twihs_master_write+0x2c>
		if (status & TWIHS_SR_TXRDY) {
  403862:	0751      	lsls	r1, r2, #29
  403864:	d405      	bmi.n	403872 <twihs_master_write+0x76>
		status = p_twihs->TWIHS_SR;
  403866:	6a1a      	ldr	r2, [r3, #32]
		if (status & TWIHS_SR_NACK) {
  403868:	05d4      	lsls	r4, r2, #23
  40386a:	d4eb      	bmi.n	403844 <twihs_master_write+0x48>
  40386c:	e7f9      	b.n	403862 <twihs_master_write+0x66>
		return TWIHS_INVALID_ARGUMENT;
  40386e:	2001      	movs	r0, #1
  403870:	4770      	bx	lr
	p_twihs->TWIHS_CR = TWIHS_CR_STOP;
  403872:	2202      	movs	r2, #2
  403874:	601a      	str	r2, [r3, #0]
	while (!(p_twihs->TWIHS_SR & TWIHS_SR_TXCOMP)) {
  403876:	6a1a      	ldr	r2, [r3, #32]
  403878:	07d2      	lsls	r2, r2, #31
  40387a:	d5fc      	bpl.n	403876 <twihs_master_write+0x7a>
}
  40387c:	bc70      	pop	{r4, r5, r6}
  40387e:	4770      	bx	lr

00403880 <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  403880:	6943      	ldr	r3, [r0, #20]
  403882:	079b      	lsls	r3, r3, #30
  403884:	d502      	bpl.n	40388c <uart_write+0xc>
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  403886:	61c1      	str	r1, [r0, #28]
	return 0;
  403888:	2000      	movs	r0, #0
  40388a:	4770      	bx	lr
		return 1;
  40388c:	2001      	movs	r0, #1
}
  40388e:	4770      	bx	lr

00403890 <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
  403890:	6943      	ldr	r3, [r0, #20]
  403892:	07db      	lsls	r3, r3, #31
  403894:	d503      	bpl.n	40389e <uart_read+0xe>
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
  403896:	6983      	ldr	r3, [r0, #24]
	return 0;
  403898:	2000      	movs	r0, #0
	*puc_data = (uint8_t) p_uart->UART_RHR;
  40389a:	700b      	strb	r3, [r1, #0]
	return 0;
  40389c:	4770      	bx	lr
		return 1;
  40389e:	2001      	movs	r0, #1
}
  4038a0:	4770      	bx	lr
  4038a2:	bf00      	nop

004038a4 <usart_set_async_baudrate>:
	uint32_t cd_fp;
	uint32_t cd;
	uint32_t fp;

	/* Calculate the receiver sampling divide of baudrate clock. */
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
  4038a4:	010b      	lsls	r3, r1, #4
  4038a6:	4293      	cmp	r3, r2
{
  4038a8:	b410      	push	{r4}
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
  4038aa:	d814      	bhi.n	4038d6 <usart_set_async_baudrate+0x32>
	} else {
		over = LOW_FRQ_SAMPLE_DIV;
	}

	/* Calculate clock divider according to the fraction calculated formula. */
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  4038ac:	0859      	lsrs	r1, r3, #1
	cd = cd_fp >> 3;
	fp = cd_fp & 0x07;
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  4038ae:	f64f 74fe 	movw	r4, #65534	; 0xfffe
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  4038b2:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
  4038b6:	fbb2 f2f3 	udiv	r2, r2, r3
	cd = cd_fp >> 3;
  4038ba:	08d3      	lsrs	r3, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  4038bc:	1e59      	subs	r1, r3, #1
  4038be:	42a1      	cmp	r1, r4
  4038c0:	d815      	bhi.n	4038ee <usart_set_async_baudrate+0x4a>
	if (over == 8) {
		p_usart->US_MR |= US_MR_OVER;
	}

	/* Configure the baudrate generate register. */
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
  4038c2:	0412      	lsls	r2, r2, #16

	return 0;
  4038c4:	2100      	movs	r1, #0
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
  4038c6:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
  4038ca:	431a      	orrs	r2, r3
  4038cc:	6202      	str	r2, [r0, #32]
}
  4038ce:	4608      	mov	r0, r1
  4038d0:	f85d 4b04 	ldr.w	r4, [sp], #4
  4038d4:	4770      	bx	lr
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  4038d6:	00c9      	lsls	r1, r1, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  4038d8:	f64f 74fe 	movw	r4, #65534	; 0xfffe
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  4038dc:	084b      	lsrs	r3, r1, #1
  4038de:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
  4038e2:	fbb2 f2f1 	udiv	r2, r2, r1
	cd = cd_fp >> 3;
  4038e6:	08d3      	lsrs	r3, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  4038e8:	1e59      	subs	r1, r3, #1
  4038ea:	42a1      	cmp	r1, r4
  4038ec:	d904      	bls.n	4038f8 <usart_set_async_baudrate+0x54>
		return 1;
  4038ee:	2101      	movs	r1, #1
}
  4038f0:	f85d 4b04 	ldr.w	r4, [sp], #4
  4038f4:	4608      	mov	r0, r1
  4038f6:	4770      	bx	lr
		p_usart->US_MR |= US_MR_OVER;
  4038f8:	6841      	ldr	r1, [r0, #4]
  4038fa:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
  4038fe:	6041      	str	r1, [r0, #4]
  403900:	e7df      	b.n	4038c2 <usart_set_async_baudrate+0x1e>
  403902:	bf00      	nop

00403904 <usart_init_rs232>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_init_rs232(Usart *p_usart,
		const sam_usart_opt_t *p_usart_opt, uint32_t ul_mck)
{
  403904:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	p_usart->US_MR = 0;
  403906:	2400      	movs	r4, #0
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
  403908:	4d14      	ldr	r5, [pc, #80]	; (40395c <usart_init_rs232+0x58>)
	p_usart->US_CR = US_CR_RSTSTA;
  40390a:	f44f 7680 	mov.w	r6, #256	; 0x100
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
  40390e:	f04f 0e88 	mov.w	lr, #136	; 0x88
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
  403912:	2724      	movs	r7, #36	; 0x24
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
  403914:	f8c0 50e4 	str.w	r5, [r0, #228]	; 0xe4
	p_usart->US_MR = 0;
  403918:	6044      	str	r4, [r0, #4]
	p_usart->US_CR = US_CR_RTSDIS;
  40391a:	f44f 2500 	mov.w	r5, #524288	; 0x80000
	p_usart->US_RTOR = 0;
  40391e:	6244      	str	r4, [r0, #36]	; 0x24
	p_usart->US_TTGR = 0;
  403920:	6284      	str	r4, [r0, #40]	; 0x28
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
  403922:	f8c0 e000 	str.w	lr, [r0]
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
  403926:	6007      	str	r7, [r0, #0]
	p_usart->US_CR = US_CR_RSTSTA;
  403928:	6006      	str	r6, [r0, #0]
	ul_reg_val = 0;
  40392a:	4e0d      	ldr	r6, [pc, #52]	; (403960 <usart_init_rs232+0x5c>)
	p_usart->US_CR = US_CR_RTSDIS;
  40392c:	6005      	str	r5, [r0, #0]
	ul_reg_val = 0;
  40392e:	6034      	str	r4, [r6, #0]
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
  403930:	b189      	cbz	r1, 403956 <usart_init_rs232+0x52>
  403932:	460d      	mov	r5, r1
  403934:	4b0b      	ldr	r3, [pc, #44]	; (403964 <usart_init_rs232+0x60>)
  403936:	6809      	ldr	r1, [r1, #0]
  403938:	4604      	mov	r4, r0
  40393a:	4798      	blx	r3
  40393c:	b958      	cbnz	r0, 403956 <usart_init_rs232+0x52>
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  40393e:	686a      	ldr	r2, [r5, #4]
  403940:	68ab      	ldr	r3, [r5, #8]
  403942:	692f      	ldr	r7, [r5, #16]
  403944:	4313      	orrs	r3, r2
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  403946:	68e9      	ldr	r1, [r5, #12]
	p_usart->US_MR |= ul_reg_val;
  403948:	6862      	ldr	r2, [r4, #4]
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  40394a:	433b      	orrs	r3, r7
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  40394c:	430b      	orrs	r3, r1
	p_usart->US_MR |= ul_reg_val;
  40394e:	431a      	orrs	r2, r3
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  403950:	6033      	str	r3, [r6, #0]
	p_usart->US_MR |= ul_reg_val;
  403952:	6062      	str	r2, [r4, #4]
}
  403954:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		return 1;
  403956:	2001      	movs	r0, #1
  403958:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40395a:	bf00      	nop
  40395c:	55534100 	.word	0x55534100
  403960:	20402c7c 	.word	0x20402c7c
  403964:	004038a5 	.word	0x004038a5

00403968 <usart_enable_tx>:
	p_usart->US_CR = US_CR_TXEN;
  403968:	2340      	movs	r3, #64	; 0x40
  40396a:	6003      	str	r3, [r0, #0]
  40396c:	4770      	bx	lr
  40396e:	bf00      	nop

00403970 <usart_enable_rx>:
	p_usart->US_CR = US_CR_RXEN;
  403970:	2310      	movs	r3, #16
  403972:	6003      	str	r3, [r0, #0]
  403974:	4770      	bx	lr
  403976:	bf00      	nop

00403978 <usart_enable_interrupt>:
	p_usart->US_IER = ul_sources;
  403978:	6081      	str	r1, [r0, #8]
  40397a:	4770      	bx	lr

0040397c <usart_get_status>:
	return p_usart->US_CSR;
  40397c:	6940      	ldr	r0, [r0, #20]
}
  40397e:	4770      	bx	lr

00403980 <usart_write>:
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  403980:	6942      	ldr	r2, [r0, #20]
{
  403982:	4603      	mov	r3, r0
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  403984:	0792      	lsls	r2, r2, #30
  403986:	d504      	bpl.n	403992 <usart_write+0x12>
	p_usart->US_THR = US_THR_TXCHR(c);
  403988:	f3c1 0108 	ubfx	r1, r1, #0, #9
	return 0;
  40398c:	2000      	movs	r0, #0
	p_usart->US_THR = US_THR_TXCHR(c);
  40398e:	61d9      	str	r1, [r3, #28]
	return 0;
  403990:	4770      	bx	lr
		return 1;
  403992:	2001      	movs	r0, #1
}
  403994:	4770      	bx	lr
  403996:	bf00      	nop

00403998 <usart_read>:
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  403998:	6943      	ldr	r3, [r0, #20]
  40399a:	07db      	lsls	r3, r3, #31
  40399c:	d505      	bpl.n	4039aa <usart_read+0x12>
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  40399e:	6983      	ldr	r3, [r0, #24]
	return 0;
  4039a0:	2000      	movs	r0, #0
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  4039a2:	f3c3 0308 	ubfx	r3, r3, #0, #9
  4039a6:	600b      	str	r3, [r1, #0]
	return 0;
  4039a8:	4770      	bx	lr
		return 1;
  4039aa:	2001      	movs	r0, #1
}
  4039ac:	4770      	bx	lr
  4039ae:	bf00      	nop

004039b0 <xdmac_configure_transfer>:
	return xdmac->XDMAC_CHID[channel_num].XDMAC_CIS;
  4039b0:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	Assert(xdmac);
	Assert(channel_num < XDMACCHID_NUMBER);
	Assert(cfg);
	
	xdmac_channel_get_interrupt_status( xdmac, channel_num);
	xdmac_channel_set_source_addr(xdmac, channel_num, cfg->mbr_sa);
  4039b4:	6853      	ldr	r3, [r2, #4]
  4039b6:	6dc8      	ldr	r0, [r1, #92]	; 0x5c
	xdmac->XDMAC_CHID[channel_num].XDMAC_CSA = src_addr;
  4039b8:	660b      	str	r3, [r1, #96]	; 0x60
	xdmac_channel_set_destination_addr(xdmac, channel_num, cfg->mbr_da);
  4039ba:	6893      	ldr	r3, [r2, #8]
	xdmac->XDMAC_CHID[channel_num].XDMAC_CDA = dst_addr;
  4039bc:	664b      	str	r3, [r1, #100]	; 0x64
 */
static inline void xdmac_channel_set_microblock_control(Xdmac *xdmac, uint32_t channel_num, uint32_t ublen)
{
	Assert(xdmac);
	Assert(channel_num < XDMACCHID_NUMBER);
	xdmac->XDMAC_CHID[channel_num].XDMAC_CUBC = XDMAC_CUBC_UBLEN(ublen);
  4039be:	6813      	ldr	r3, [r2, #0]
  4039c0:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
  4039c4:	670b      	str	r3, [r1, #112]	; 0x70
 */
static inline void xdmac_channel_set_block_control(Xdmac *xdmac, uint32_t channel_num, uint32_t blen)
{
	Assert(xdmac);
	Assert(channel_num < XDMACCHID_NUMBER);
	xdmac->XDMAC_CHID[channel_num].XDMAC_CBC = XDMAC_CBC_BLEN(blen);
  4039c6:	6913      	ldr	r3, [r2, #16]
  4039c8:	f3c3 030b 	ubfx	r3, r3, #0, #12
  4039cc:	674b      	str	r3, [r1, #116]	; 0x74
	xdmac_channel_set_microblock_control(xdmac, channel_num, cfg->mbr_ubc);
	xdmac_channel_set_block_control(xdmac, channel_num, cfg->mbr_bc);
	xdmac_channel_set_datastride_mempattern(xdmac, channel_num, cfg->mbr_ds);
  4039ce:	6953      	ldr	r3, [r2, #20]
 */
static inline void xdmac_channel_set_datastride_mempattern(Xdmac *xdmac, uint32_t channel_num, uint32_t dds_msp)
{
	Assert(xdmac);
	Assert(channel_num < XDMACCHID_NUMBER);
	xdmac->XDMAC_CHID[channel_num].XDMAC_CDS_MSP = dds_msp;
  4039d0:	67cb      	str	r3, [r1, #124]	; 0x7c
static inline void xdmac_channel_set_source_microblock_stride(Xdmac *xdmac,
		uint32_t channel_num, uint32_t subs)
{
	Assert(xdmac);
	Assert(channel_num < XDMACCHID_NUMBER);
	xdmac->XDMAC_CHID[channel_num].XDMAC_CSUS = XDMAC_CSUS_SUBS(subs);
  4039d2:	6993      	ldr	r3, [r2, #24]
  4039d4:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
  4039d8:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
static inline void xdmac_channel_set_destination_microblock_stride(Xdmac *xdmac,
		uint32_t channel_num, uint32_t dubs)
{
	Assert(xdmac);
	Assert(channel_num < XDMACCHID_NUMBER);
	xdmac->XDMAC_CHID[channel_num].XDMAC_CDUS = XDMAC_CDUS_DUBS(dubs);
  4039dc:	69d3      	ldr	r3, [r2, #28]
  4039de:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
  4039e2:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
	xdmac_channel_set_source_microblock_stride(xdmac, channel_num, cfg->mbr_sus);
	xdmac_channel_set_destination_microblock_stride(xdmac, channel_num, cfg->mbr_dus);
	xdmac_channel_set_config(xdmac, channel_num, cfg->mbr_cfg );
  4039e6:	68d3      	ldr	r3, [r2, #12]
	xdmac->XDMAC_CHID[channel_num].XDMAC_CC = config;
  4039e8:	678b      	str	r3, [r1, #120]	; 0x78
  4039ea:	4770      	bx	lr

004039ec <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  4039ec:	b570      	push	{r4, r5, r6, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  4039ee:	4810      	ldr	r0, [pc, #64]	; (403a30 <sysclk_init+0x44>)
  4039f0:	4d10      	ldr	r5, [pc, #64]	; (403a34 <sysclk_init+0x48>)
  4039f2:	47a8      	blx	r5
	case OSC_MAINCK_8M_RC:
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_8_MHz);
		break;

	case OSC_MAINCK_12M_RC:
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
  4039f4:	2020      	movs	r0, #32
  4039f6:	4b10      	ldr	r3, [pc, #64]	; (403a38 <sysclk_init+0x4c>)
  4039f8:	4c10      	ldr	r4, [pc, #64]	; (403a3c <sysclk_init+0x50>)
  4039fa:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  4039fc:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  4039fe:	2800      	cmp	r0, #0
  403a00:	d0fc      	beq.n	4039fc <sysclk_init+0x10>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  403a02:	4b0f      	ldr	r3, [pc, #60]	; (403a40 <sysclk_init+0x54>)
  403a04:	4798      	blx	r3
  403a06:	4c0f      	ldr	r4, [pc, #60]	; (403a44 <sysclk_init+0x58>)
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  403a08:	4b0f      	ldr	r3, [pc, #60]	; (403a48 <sysclk_init+0x5c>)
  403a0a:	4a10      	ldr	r2, [pc, #64]	; (403a4c <sysclk_init+0x60>)
  403a0c:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  403a0e:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  403a10:	2800      	cmp	r0, #0
  403a12:	d0fc      	beq.n	403a0e <sysclk_init+0x22>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  403a14:	2002      	movs	r0, #2
  403a16:	4b0e      	ldr	r3, [pc, #56]	; (403a50 <sysclk_init+0x64>)
  403a18:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  403a1a:	4b0e      	ldr	r3, [pc, #56]	; (403a54 <sysclk_init+0x68>)
  403a1c:	2000      	movs	r0, #0
  403a1e:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  403a20:	4b0d      	ldr	r3, [pc, #52]	; (403a58 <sysclk_init+0x6c>)
  403a22:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  403a24:	462b      	mov	r3, r5
  403a26:	4802      	ldr	r0, [pc, #8]	; (403a30 <sysclk_init+0x44>)

#if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
	/* Signal that the internal frequencies are setup */
	sysclk_initialized = 1;
#endif
}
  403a28:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	system_init_flash(sysclk_get_cpu_hz());
  403a2c:	4718      	bx	r3
  403a2e:	bf00      	nop
  403a30:	11e1a300 	.word	0x11e1a300
  403a34:	00404425 	.word	0x00404425
  403a38:	00404139 	.word	0x00404139
  403a3c:	00404185 	.word	0x00404185
  403a40:	00404195 	.word	0x00404195
  403a44:	004041a5 	.word	0x004041a5
  403a48:	400e0600 	.word	0x400e0600
  403a4c:	20183f01 	.word	0x20183f01
  403a50:	004040b5 	.word	0x004040b5
  403a54:	004040e5 	.word	0x004040e5
  403a58:	00404341 	.word	0x00404341

00403a5c <board_init>:

void board_init(void)
{
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  403a5c:	4b81      	ldr	r3, [pc, #516]	; (403c64 <board_init+0x208>)
  403a5e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
{
  403a62:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	WDT->WDT_MR = WDT_MR_WDDIS;
  403a66:	605a      	str	r2, [r3, #4]
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
  403a68:	f3bf 8f5f 	dmb	sy
		mpu_cal_mpu_region_size(ITCM_END_ADDRESS - ITCM_START_ADDRESS) |
  403a6c:	f8df 826c 	ldr.w	r8, [pc, #620]	; 403cdc <board_init+0x280>
	dw_region_attr =
  403a70:	4f7d      	ldr	r7, [pc, #500]	; (403c68 <board_init+0x20c>)
		mpu_cal_mpu_region_size(ITCM_END_ADDRESS - ITCM_START_ADDRESS) |
  403a72:	4d7e      	ldr	r5, [pc, #504]	; (403c6c <board_init+0x210>)
  403a74:	4640      	mov	r0, r8
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  403a76:	4c7e      	ldr	r4, [pc, #504]	; (403c70 <board_init+0x214>)
		mpu_cal_mpu_region_size(ITCM_END_ADDRESS - ITCM_START_ADDRESS) |
  403a78:	47a8      	blx	r5
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  403a7a:	ea40 0107 	orr.w	r1, r0, r7
  403a7e:	2011      	movs	r0, #17
  403a80:	47a0      	blx	r4
		mpu_cal_mpu_region_size(IFLASH_END_ADDRESS - IFLASH_START_ADDRESS) |
  403a82:	487c      	ldr	r0, [pc, #496]	; (403c74 <board_init+0x218>)
  403a84:	47a8      	blx	r5
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  403a86:	497c      	ldr	r1, [pc, #496]	; (403c78 <board_init+0x21c>)
	dw_region_attr =
  403a88:	4e7c      	ldr	r6, [pc, #496]	; (403c7c <board_init+0x220>)
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  403a8a:	4301      	orrs	r1, r0
  403a8c:	487c      	ldr	r0, [pc, #496]	; (403c80 <board_init+0x224>)
  403a8e:	47a0      	blx	r4
		mpu_cal_mpu_region_size(DTCM_END_ADDRESS - DTCM_START_ADDRESS) |
  403a90:	4640      	mov	r0, r8
  403a92:	47a8      	blx	r5
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  403a94:	ea40 0107 	orr.w	r1, r0, r7
  403a98:	487a      	ldr	r0, [pc, #488]	; (403c84 <board_init+0x228>)
  403a9a:	47a0      	blx	r4
		mpu_cal_mpu_region_size(SRAM_FIRST_END_ADDRESS - SRAM_FIRST_START_ADDRESS)
  403a9c:	487a      	ldr	r0, [pc, #488]	; (403c88 <board_init+0x22c>)
  403a9e:	47a8      	blx	r5
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  403aa0:	ea40 0106 	orr.w	r1, r0, r6
  403aa4:	4879      	ldr	r0, [pc, #484]	; (403c8c <board_init+0x230>)
  403aa6:	47a0      	blx	r4
		mpu_cal_mpu_region_size(SRAM_SECOND_END_ADDRESS - SRAM_SECOND_START_ADDRESS) |
  403aa8:	4879      	ldr	r0, [pc, #484]	; (403c90 <board_init+0x234>)
  403aaa:	47a8      	blx	r5
	dw_region_attr = MPU_AP_FULL_ACCESS |
  403aac:	4f79      	ldr	r7, [pc, #484]	; (403c94 <board_init+0x238>)
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  403aae:	ea40 0106 	orr.w	r1, r0, r6
  403ab2:	4879      	ldr	r0, [pc, #484]	; (403c98 <board_init+0x23c>)
  403ab4:	47a0      	blx	r4
		mpu_cal_mpu_region_size(PERIPHERALS_END_ADDRESS - PERIPHERALS_START_ADDRESS)
  403ab6:	f06f 4060 	mvn.w	r0, #3758096384	; 0xe0000000
  403aba:	47a8      	blx	r5
	dw_region_attr =
  403abc:	f8df 8220 	ldr.w	r8, [pc, #544]	; 403ce0 <board_init+0x284>
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  403ac0:	ea40 0107 	orr.w	r1, r0, r7
  403ac4:	4875      	ldr	r0, [pc, #468]	; (403c9c <board_init+0x240>)
  403ac6:	47a0      	blx	r4
		mpu_cal_mpu_region_size(EXT_EBI_END_ADDRESS - EXT_EBI_START_ADDRESS) |
  403ac8:	f06f 4070 	mvn.w	r0, #4026531840	; 0xf0000000
  403acc:	47a8      	blx	r5
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  403ace:	ea40 0108 	orr.w	r1, r0, r8
  403ad2:	4873      	ldr	r0, [pc, #460]	; (403ca0 <board_init+0x244>)
  403ad4:	47a0      	blx	r4
		mpu_cal_mpu_region_size(SDRAM_END_ADDRESS - SDRAM_START_ADDRESS) |
  403ad6:	f06f 4070 	mvn.w	r0, #4026531840	; 0xf0000000
  403ada:	47a8      	blx	r5
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  403adc:	4971      	ldr	r1, [pc, #452]	; (403ca4 <board_init+0x248>)
	SCB->SHCSR |= (SCB_SHCSR_MEMFAULTENA_Msk | SCB_SHCSR_BUSFAULTENA_Msk
  403ade:	4e72      	ldr	r6, [pc, #456]	; (403ca8 <board_init+0x24c>)
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  403ae0:	4301      	orrs	r1, r0
  403ae2:	4872      	ldr	r0, [pc, #456]	; (403cac <board_init+0x250>)
  403ae4:	47a0      	blx	r4
		mpu_cal_mpu_region_size(QSPI_END_ADDRESS - QSPI_START_ADDRESS) |
  403ae6:	f06f 4060 	mvn.w	r0, #3758096384	; 0xe0000000
  403aea:	47a8      	blx	r5
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  403aec:	ea40 0108 	orr.w	r1, r0, r8
  403af0:	486f      	ldr	r0, [pc, #444]	; (403cb0 <board_init+0x254>)
  403af2:	47a0      	blx	r4
		mpu_cal_mpu_region_size(USBHSRAM_END_ADDRESS - USBHSRAM_START_ADDRESS) |
  403af4:	486f      	ldr	r0, [pc, #444]	; (403cb4 <board_init+0x258>)
  403af6:	47a8      	blx	r5
	mpu_set_region( dw_region_base_addr, dw_region_attr);
  403af8:	ea40 0107 	orr.w	r1, r0, r7
  403afc:	486e      	ldr	r0, [pc, #440]	; (403cb8 <board_init+0x25c>)
  403afe:	47a0      	blx	r4
	SCB->SHCSR |= (SCB_SHCSR_MEMFAULTENA_Msk | SCB_SHCSR_BUSFAULTENA_Msk
  403b00:	6a73      	ldr	r3, [r6, #36]	; 0x24
	mpu_enable( MPU_ENABLE | MPU_PRIVDEFENA);
  403b02:	2005      	movs	r0, #5
  403b04:	4a6d      	ldr	r2, [pc, #436]	; (403cbc <board_init+0x260>)
	SCB->SHCSR |= (SCB_SHCSR_MEMFAULTENA_Msk | SCB_SHCSR_BUSFAULTENA_Msk
  403b06:	f443 23e0 	orr.w	r3, r3, #458752	; 0x70000
  403b0a:	6273      	str	r3, [r6, #36]	; 0x24
	mpu_enable( MPU_ENABLE | MPU_PRIVDEFENA);
  403b0c:	4790      	blx	r2
  __ASM volatile ("dsb");
  403b0e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  403b12:	f3bf 8f6f 	isb	sy
  __ASM volatile ("dsb");
  403b16:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  403b1a:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache(void)
{
  #if (__ICACHE_PRESENT == 1)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  403b1e:	2300      	movs	r3, #0
  403b20:	f8c6 3250 	str.w	r3, [r6, #592]	; 0x250
    SCB->CCR |=  SCB_CCR_IC_Msk;            // enable I-Cache
  403b24:	6973      	ldr	r3, [r6, #20]
  403b26:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  403b2a:	6173      	str	r3, [r6, #20]
  __ASM volatile ("dsb");
  403b2c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  403b30:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  403b34:	4b62      	ldr	r3, [pc, #392]	; (403cc0 <board_init+0x264>)
  403b36:	4963      	ldr	r1, [pc, #396]	; (403cc4 <board_init+0x268>)
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  403b38:	4a63      	ldr	r2, [pc, #396]	; (403cc8 <board_init+0x26c>)
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  403b3a:	6059      	str	r1, [r3, #4]
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  403b3c:	605a      	str	r2, [r3, #4]
  __ASM volatile ("dsb");
  403b3e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  403b42:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  403b46:	f8d6 3290 	ldr.w	r3, [r6, #656]	; 0x290
  403b4a:	f023 0301 	bic.w	r3, r3, #1
  403b4e:	f8c6 3290 	str.w	r3, [r6, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  403b52:	f8d6 3294 	ldr.w	r3, [r6, #660]	; 0x294
  403b56:	f023 0301 	bic.w	r3, r3, #1
  403b5a:	f8c6 3294 	str.w	r3, [r6, #660]	; 0x294
  __ASM volatile ("dsb");
  403b5e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  403b62:	f3bf 8f6f 	isb	sy
  403b66:	4c59      	ldr	r4, [pc, #356]	; (403ccc <board_init+0x270>)
  403b68:	200a      	movs	r0, #10
  403b6a:	47a0      	blx	r4
  403b6c:	200b      	movs	r0, #11
  403b6e:	47a0      	blx	r4
  403b70:	200c      	movs	r0, #12
  403b72:	47a0      	blx	r4
  403b74:	2010      	movs	r0, #16
  403b76:	47a0      	blx	r4
  403b78:	2011      	movs	r0, #17
  403b7a:	47a0      	blx	r4
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  403b7c:	f44f 0600 	mov.w	r6, #8388608	; 0x800000
  403b80:	4b53      	ldr	r3, [pc, #332]	; (403cd0 <board_init+0x274>)
  403b82:	f44f 7200 	mov.w	r2, #512	; 0x200
  403b86:	4853      	ldr	r0, [pc, #332]	; (403cd4 <board_init+0x278>)
		base->PIO_PUDR = mask;
  403b88:	f44f 1500 	mov.w	r5, #2097152	; 0x200000
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  403b8c:	611e      	str	r6, [r3, #16]
		base->PIO_PUDR = mask;
  403b8e:	2110      	movs	r1, #16
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  403b90:	f8c3 60a0 	str.w	r6, [r3, #160]	; 0xa0
		base->PIO_PUDR = mask;
  403b94:	f5a0 7000 	sub.w	r0, r0, #512	; 0x200
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  403b98:	631e      	str	r6, [r3, #48]	; 0x30
		base->PIO_PUDR = mask;
  403b9a:	2408      	movs	r4, #8
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  403b9c:	f8c0 2210 	str.w	r2, [r0, #528]	; 0x210
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  403ba0:	f8c0 22a0 	str.w	r2, [r0, #672]	; 0x2a0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  403ba4:	f8c0 2230 	str.w	r2, [r0, #560]	; 0x230
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  403ba8:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  403baa:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  403bae:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  403bb0:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  403bb4:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFER = mask;
  403bb6:	621a      	str	r2, [r3, #32]
		base->PIO_IFSCER = mask;
  403bb8:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  403bbc:	6f1e      	ldr	r6, [r3, #112]	; 0x70
			GPIO_PUSH_BUTTON_1_SENSE);

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	ioport_set_pin_peripheral_mode(USART1_RXD_GPIO, USART1_RXD_FLAGS);
	MATRIX->CCFG_SYSIO |= CCFG_SYSIO_SYSIO4;
  403bbe:	4f46      	ldr	r7, [pc, #280]	; (403cd8 <board_init+0x27c>)
  403bc0:	f426 7600 	bic.w	r6, r6, #512	; 0x200
  403bc4:	671e      	str	r6, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  403bc6:	6f5e      	ldr	r6, [r3, #116]	; 0x74
  403bc8:	f426 7600 	bic.w	r6, r6, #512	; 0x200
  403bcc:	675e      	str	r6, [r3, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  403bce:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  403bd2:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  403bd6:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
		base->PIO_PUDR = mask;
  403bda:	661d      	str	r5, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  403bdc:	f8c3 5090 	str.w	r5, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  403be0:	655d      	str	r5, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  403be2:	625d      	str	r5, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  403be4:	f8c3 5080 	str.w	r5, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  403be8:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  403bea:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
  403bee:	671a      	str	r2, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  403bf0:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  403bf2:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
  403bf6:	675a      	str	r2, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  403bf8:	605d      	str	r5, [r3, #4]
  403bfa:	f8d7 2114 	ldr.w	r2, [r7, #276]	; 0x114
  403bfe:	430a      	orrs	r2, r1
  403c00:	f8c7 2114 	str.w	r2, [r7, #276]	; 0x114
		base->PIO_PUDR = mask;
  403c04:	6601      	str	r1, [r0, #96]	; 0x60
		base->PIO_PPDDR = mask;
  403c06:	f8c0 1090 	str.w	r1, [r0, #144]	; 0x90
		base->PIO_MDDR = mask;
  403c0a:	6541      	str	r1, [r0, #84]	; 0x54
		base->PIO_IFDR = mask;
  403c0c:	6241      	str	r1, [r0, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  403c0e:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
		base->PIO_ABCDSR[0] |= mask;
  403c12:	6f02      	ldr	r2, [r0, #112]	; 0x70
  403c14:	430a      	orrs	r2, r1
  403c16:	6702      	str	r2, [r0, #112]	; 0x70
		base->PIO_ABCDSR[1] |= mask;
  403c18:	6f42      	ldr	r2, [r0, #116]	; 0x74
  403c1a:	430a      	orrs	r2, r1
  403c1c:	6742      	str	r2, [r0, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  403c1e:	6041      	str	r1, [r0, #4]
		base->PIO_PUDR = mask;
  403c20:	661c      	str	r4, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  403c22:	f8c3 4090 	str.w	r4, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  403c26:	655c      	str	r4, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  403c28:	625c      	str	r4, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  403c2a:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  403c2e:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  403c30:	f022 0208 	bic.w	r2, r2, #8
  403c34:	671a      	str	r2, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  403c36:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  403c38:	f022 0208 	bic.w	r2, r2, #8
  403c3c:	675a      	str	r2, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  403c3e:	605c      	str	r4, [r3, #4]
		base->PIO_PUDR = mask;
  403c40:	6619      	str	r1, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  403c42:	f8c3 1090 	str.w	r1, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  403c46:	6559      	str	r1, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  403c48:	6259      	str	r1, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  403c4a:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  403c4e:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  403c50:	f022 0210 	bic.w	r2, r2, #16
  403c54:	671a      	str	r2, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  403c56:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  403c58:	f022 0210 	bic.w	r2, r2, #16
  403c5c:	675a      	str	r2, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  403c5e:	6059      	str	r1, [r3, #4]
  403c60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  403c64:	400e1850 	.word	0x400e1850
  403c68:	01000001 	.word	0x01000001
  403c6c:	00403cfd 	.word	0x00403cfd
  403c70:	00403cf1 	.word	0x00403cf1
  403c74:	001fffff 	.word	0x001fffff
  403c78:	06230001 	.word	0x06230001
  403c7c:	03230001 	.word	0x03230001
  403c80:	00400012 	.word	0x00400012
  403c84:	20000013 	.word	0x20000013
  403c88:	0003ffff 	.word	0x0003ffff
  403c8c:	20400014 	.word	0x20400014
  403c90:	0001ffff 	.word	0x0001ffff
  403c94:	13010001 	.word	0x13010001
  403c98:	20440015 	.word	0x20440015
  403c9c:	40000016 	.word	0x40000016
  403ca0:	60000017 	.word	0x60000017
  403ca4:	03250001 	.word	0x03250001
  403ca8:	e000ed00 	.word	0xe000ed00
  403cac:	70000018 	.word	0x70000018
  403cb0:	80000019 	.word	0x80000019
  403cb4:	000fffff 	.word	0x000fffff
  403cb8:	a010001a 	.word	0xa010001a
  403cbc:	00403ce5 	.word	0x00403ce5
  403cc0:	400e0c00 	.word	0x400e0c00
  403cc4:	5a00080c 	.word	0x5a00080c
  403cc8:	5a00070c 	.word	0x5a00070c
  403ccc:	004041b5 	.word	0x004041b5
  403cd0:	400e0e00 	.word	0x400e0e00
  403cd4:	400e1200 	.word	0x400e1200
  403cd8:	40088000 	.word	0x40088000
  403cdc:	003fffff 	.word	0x003fffff
  403ce0:	03000001 	.word	0x03000001

00403ce4 <mpu_enable>:
 *
 * \param dwMPUEnable  Enable/Disable the memory region.
 */
void mpu_enable(uint32_t dw_mpu_enable)
{
	MPU->CTRL = dw_mpu_enable ;
  403ce4:	4b01      	ldr	r3, [pc, #4]	; (403cec <mpu_enable+0x8>)
  403ce6:	6058      	str	r0, [r3, #4]
  403ce8:	4770      	bx	lr
  403cea:	bf00      	nop
  403cec:	e000ed90 	.word	0xe000ed90

00403cf0 <mpu_set_region>:
 * \param dwRegionBaseAddr  Memory region base address.
 * \param dwRegionAttr  Memory region attributes.
 */
void mpu_set_region(uint32_t dw_region_base_addr, uint32_t dw_region_attr)
{
	MPU->RBAR = dw_region_base_addr;
  403cf0:	4b01      	ldr	r3, [pc, #4]	; (403cf8 <mpu_set_region+0x8>)
  403cf2:	60d8      	str	r0, [r3, #12]
	MPU->RASR = dw_region_attr;
  403cf4:	6119      	str	r1, [r3, #16]
  403cf6:	4770      	bx	lr
  403cf8:	e000ed90 	.word	0xe000ed90

00403cfc <mpu_cal_mpu_region_size>:
{
	uint32_t dwRegionSize = 32;
	uint32_t dwReturnValue = 4;

	while( dwReturnValue < 31 ) {
		if( dw_actual_size_in_bytes <= dwRegionSize ) {
  403cfc:	2820      	cmp	r0, #32
  403cfe:	d90d      	bls.n	403d1c <mpu_cal_mpu_region_size+0x20>
  403d00:	2240      	movs	r2, #64	; 0x40
  403d02:	2305      	movs	r3, #5
  403d04:	e002      	b.n	403d0c <mpu_cal_mpu_region_size+0x10>
			break;
		} else {
			dwReturnValue++;
  403d06:	3301      	adds	r3, #1
	while( dwReturnValue < 31 ) {
  403d08:	2b1f      	cmp	r3, #31
  403d0a:	d005      	beq.n	403d18 <mpu_cal_mpu_region_size+0x1c>
		if( dw_actual_size_in_bytes <= dwRegionSize ) {
  403d0c:	4290      	cmp	r0, r2
		}
		dwRegionSize <<= 1;
  403d0e:	ea4f 0242 	mov.w	r2, r2, lsl #1
		if( dw_actual_size_in_bytes <= dwRegionSize ) {
  403d12:	d8f8      	bhi.n	403d06 <mpu_cal_mpu_region_size+0xa>
  403d14:	0058      	lsls	r0, r3, #1
  403d16:	4770      	bx	lr
  403d18:	203e      	movs	r0, #62	; 0x3e
  403d1a:	4770      	bx	lr
  403d1c:	2008      	movs	r0, #8
	}

	return ( dwReturnValue << 1 );
}
  403d1e:	4770      	bx	lr

00403d20 <pio_set_debounce_filter>:
	/*
	 * The debouncing filter can filter a pulse of less than 1/2 Period of a
	 * programmable Divided Slow Clock:
	 * Tdiv_slclk = ((DIV+1)*2).Tslow_clock
	 */
	p_pio->PIO_SCDR = PIO_SCDR_DIV((FREQ_SLOW_CLOCK_EXT /
  403d20:	0052      	lsls	r2, r2, #1
  403d22:	f44f 4300 	mov.w	r3, #32768	; 0x8000
	p_pio->PIO_IFSCER = ul_mask;
  403d26:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_SCDR = PIO_SCDR_DIV((FREQ_SLOW_CLOCK_EXT /
  403d2a:	fbb3 f3f2 	udiv	r3, r3, r2
  403d2e:	3b01      	subs	r3, #1
  403d30:	f3c3 030d 	ubfx	r3, r3, #0, #14
  403d34:	f8c0 308c 	str.w	r3, [r0, #140]	; 0x8c
  403d38:	4770      	bx	lr
  403d3a:	bf00      	nop

00403d3c <pio_set_input>:
	if (ul_pull_up_enable) {
  403d3c:	07d3      	lsls	r3, r2, #31
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  403d3e:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  403d40:	d515      	bpl.n	403d6e <pio_set_input+0x32>
		p_pio->PIO_PUER = ul_mask;
  403d42:	6641      	str	r1, [r0, #100]	; 0x64
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  403d44:	f012 0f0a 	tst.w	r2, #10
  403d48:	d009      	beq.n	403d5e <pio_set_input+0x22>
	if (ul_attribute & PIO_DEGLITCH) {
  403d4a:	0793      	lsls	r3, r2, #30
		p_pio->PIO_IFER = ul_mask;
  403d4c:	6201      	str	r1, [r0, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  403d4e:	d409      	bmi.n	403d64 <pio_set_input+0x28>
		if (ul_attribute & PIO_DEBOUNCE) {
  403d50:	0713      	lsls	r3, r2, #28
  403d52:	d501      	bpl.n	403d58 <pio_set_input+0x1c>
			p_pio->PIO_IFSCER = ul_mask;
  403d54:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
  403d58:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  403d5a:	6001      	str	r1, [r0, #0]
  403d5c:	4770      	bx	lr
	if (ul_attribute & PIO_DEGLITCH) {
  403d5e:	0793      	lsls	r3, r2, #30
		p_pio->PIO_IFDR = ul_mask;
  403d60:	6241      	str	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
  403d62:	d5f5      	bpl.n	403d50 <pio_set_input+0x14>
		p_pio->PIO_IFSCDR = ul_mask;
  403d64:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  403d68:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  403d6a:	6001      	str	r1, [r0, #0]
  403d6c:	4770      	bx	lr
		p_pio->PIO_PUDR = ul_mask;
  403d6e:	6601      	str	r1, [r0, #96]	; 0x60
  403d70:	e7e8      	b.n	403d44 <pio_set_input+0x8>
  403d72:	bf00      	nop

00403d74 <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  403d74:	6401      	str	r1, [r0, #64]	; 0x40
  403d76:	4770      	bx	lr

00403d78 <pio_disable_interrupt>:
	p_pio->PIO_IDR = ul_mask;
  403d78:	6441      	str	r1, [r0, #68]	; 0x44
  403d7a:	4770      	bx	lr

00403d7c <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  403d7c:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  403d7e:	4770      	bx	lr

00403d80 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  403d80:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  403d82:	4770      	bx	lr

00403d84 <pio_set_additional_interrupt_mode>:
 */
void pio_set_additional_interrupt_mode(Pio *p_pio,
		const uint32_t ul_mask, const uint32_t ul_attribute)
{
	/* Enables additional interrupt mode if needed */
	if (ul_attribute & PIO_IT_AIME) {
  403d84:	06d3      	lsls	r3, r2, #27
  403d86:	d50a      	bpl.n	403d9e <pio_set_additional_interrupt_mode+0x1a>
		/* Enables additional interrupt mode */
		p_pio->PIO_AIMER = ul_mask;

		/* Configures the Polarity of the event detection */
		/* (Rising/Falling Edge or High/Low Level) */
		if (ul_attribute & PIO_IT_RE_OR_HL) {
  403d88:	0693      	lsls	r3, r2, #26
		p_pio->PIO_AIMER = ul_mask;
  403d8a:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attribute & PIO_IT_RE_OR_HL) {
  403d8e:	d409      	bmi.n	403da4 <pio_set_additional_interrupt_mode+0x20>
			/* Falling Edge or Low Level */
			p_pio->PIO_FELLSR = ul_mask;
		}

		/* Configures the type of event detection (Edge or Level) */
		if (ul_attribute & PIO_IT_EDGE) {
  403d90:	0653      	lsls	r3, r2, #25
			p_pio->PIO_FELLSR = ul_mask;
  403d92:	f8c0 10d0 	str.w	r1, [r0, #208]	; 0xd0
		if (ul_attribute & PIO_IT_EDGE) {
  403d96:	d509      	bpl.n	403dac <pio_set_additional_interrupt_mode+0x28>
			/* Edge select */
			p_pio->PIO_ESR = ul_mask;
  403d98:	f8c0 10c0 	str.w	r1, [r0, #192]	; 0xc0
  403d9c:	4770      	bx	lr
			/* Level select */
			p_pio->PIO_LSR = ul_mask;
		}
	} else {
		/* Disable additional interrupt mode */
		p_pio->PIO_AIMDR = ul_mask;
  403d9e:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  403da2:	4770      	bx	lr
		if (ul_attribute & PIO_IT_EDGE) {
  403da4:	0653      	lsls	r3, r2, #25
			p_pio->PIO_REHLSR = ul_mask;
  403da6:	f8c0 10d4 	str.w	r1, [r0, #212]	; 0xd4
		if (ul_attribute & PIO_IT_EDGE) {
  403daa:	d4f5      	bmi.n	403d98 <pio_set_additional_interrupt_mode+0x14>
			p_pio->PIO_LSR = ul_mask;
  403dac:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
  403db0:	4770      	bx	lr
  403db2:	bf00      	nop

00403db4 <pio_configure_interrupt>:
  403db4:	4b00      	ldr	r3, [pc, #0]	; (403db8 <pio_configure_interrupt+0x4>)
  403db6:	4718      	bx	r3
  403db8:	00403d85 	.word	0x00403d85

00403dbc <pio_configure_pin>:
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  403dbc:	4b53      	ldr	r3, [pc, #332]	; (403f0c <pio_configure_pin+0x150>)
	switch (ul_flags & PIO_TYPE_Msk) {
  403dbe:	f001 42f0 	and.w	r2, r1, #2013265920	; 0x78000000
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  403dc2:	eb03 1350 	add.w	r3, r3, r0, lsr #5
	switch (ul_flags & PIO_TYPE_Msk) {
  403dc6:	f1b2 5f00 	cmp.w	r2, #536870912	; 0x20000000
{
  403dca:	b470      	push	{r4, r5, r6}
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  403dcc:	ea4f 2343 	mov.w	r3, r3, lsl #9
	switch (ul_flags & PIO_TYPE_Msk) {
  403dd0:	d06d      	beq.n	403eae <pio_configure_pin+0xf2>
  403dd2:	d80b      	bhi.n	403dec <pio_configure_pin+0x30>
  403dd4:	f1b2 5f80 	cmp.w	r2, #268435456	; 0x10000000
  403dd8:	d027      	beq.n	403e2a <pio_configure_pin+0x6e>
  403dda:	f1b2 5fc0 	cmp.w	r2, #402653184	; 0x18000000
  403dde:	d052      	beq.n	403e86 <pio_configure_pin+0xca>
  403de0:	f1b2 6f00 	cmp.w	r2, #134217728	; 0x8000000
  403de4:	d038      	beq.n	403e58 <pio_configure_pin+0x9c>
		return 0;
  403de6:	2000      	movs	r0, #0
}
  403de8:	bc70      	pop	{r4, r5, r6}
  403dea:	4770      	bx	lr
	switch (ul_flags & PIO_TYPE_Msk) {
  403dec:	f1b2 5f40 	cmp.w	r2, #805306368	; 0x30000000
  403df0:	d066      	beq.n	403ec0 <pio_configure_pin+0x104>
  403df2:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  403df6:	d063      	beq.n	403ec0 <pio_configure_pin+0x104>
  403df8:	f1b2 5f20 	cmp.w	r2, #671088640	; 0x28000000
  403dfc:	d1f3      	bne.n	403de6 <pio_configure_pin+0x2a>
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  403dfe:	f000 001f 	and.w	r0, r0, #31
  403e02:	2201      	movs	r2, #1
	if (ul_pull_up_enable) {
  403e04:	07cd      	lsls	r5, r1, #31
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  403e06:	fa02 f200 	lsl.w	r2, r2, r0
	p_pio->PIO_IDR = ul_mask;
  403e0a:	645a      	str	r2, [r3, #68]	; 0x44
	if (ul_pull_up_enable) {
  403e0c:	d573      	bpl.n	403ef6 <pio_configure_pin+0x13a>
		p_pio->PIO_PUER = ul_mask;
  403e0e:	665a      	str	r2, [r3, #100]	; 0x64
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  403e10:	f011 0f0a 	tst.w	r1, #10
  403e14:	d06d      	beq.n	403ef2 <pio_configure_pin+0x136>
		p_pio->PIO_IFER = ul_mask;
  403e16:	621a      	str	r2, [r3, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  403e18:	078c      	lsls	r4, r1, #30
  403e1a:	d56e      	bpl.n	403efa <pio_configure_pin+0x13e>
		p_pio->PIO_IFSCDR = ul_mask;
  403e1c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  403e20:	615a      	str	r2, [r3, #20]
	return 1;
  403e22:	2001      	movs	r0, #1
	p_pio->PIO_PER = ul_mask;
  403e24:	601a      	str	r2, [r3, #0]
}
  403e26:	bc70      	pop	{r4, r5, r6}
  403e28:	4770      	bx	lr
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  403e2a:	f000 021f 	and.w	r2, r0, #31
  403e2e:	2001      	movs	r0, #1
	if (ul_pull_up_enable) {
  403e30:	07c9      	lsls	r1, r1, #31
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  403e32:	fa00 f202 	lsl.w	r2, r0, r2
	p_pio->PIO_IDR = ul_mask;
  403e36:	645a      	str	r2, [r3, #68]	; 0x44
		ul_sr = p_pio->PIO_ABCDSR[0];
  403e38:	6f1c      	ldr	r4, [r3, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  403e3a:	ea44 0402 	orr.w	r4, r4, r2
  403e3e:	671c      	str	r4, [r3, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  403e40:	6f5c      	ldr	r4, [r3, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  403e42:	6f5d      	ldr	r5, [r3, #116]	; 0x74
  403e44:	ea04 0405 	and.w	r4, r4, r5
  403e48:	ea24 0402 	bic.w	r4, r4, r2
  403e4c:	675c      	str	r4, [r3, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  403e4e:	605a      	str	r2, [r3, #4]
	if (ul_pull_up_enable) {
  403e50:	d516      	bpl.n	403e80 <pio_configure_pin+0xc4>
		p_pio->PIO_PUER = ul_mask;
  403e52:	665a      	str	r2, [r3, #100]	; 0x64
}
  403e54:	bc70      	pop	{r4, r5, r6}
  403e56:	4770      	bx	lr
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  403e58:	f000 021f 	and.w	r2, r0, #31
  403e5c:	2001      	movs	r0, #1
  403e5e:	fa00 f202 	lsl.w	r2, r0, r2
	p_pio->PIO_IDR = ul_mask;
  403e62:	645a      	str	r2, [r3, #68]	; 0x44
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  403e64:	43d6      	mvns	r6, r2
		ul_sr = p_pio->PIO_ABCDSR[0];
  403e66:	6f1d      	ldr	r5, [r3, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  403e68:	6f1c      	ldr	r4, [r3, #112]	; 0x70
  403e6a:	4025      	ands	r5, r4
  403e6c:	4035      	ands	r5, r6
  403e6e:	671d      	str	r5, [r3, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  403e70:	6f5c      	ldr	r4, [r3, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  403e72:	6f5d      	ldr	r5, [r3, #116]	; 0x74
  403e74:	402c      	ands	r4, r5
  403e76:	4034      	ands	r4, r6
  403e78:	675c      	str	r4, [r3, #116]	; 0x74
	if (ul_pull_up_enable) {
  403e7a:	07cc      	lsls	r4, r1, #31
	p_pio->PIO_PDR = ul_mask;
  403e7c:	605a      	str	r2, [r3, #4]
	if (ul_pull_up_enable) {
  403e7e:	d4e8      	bmi.n	403e52 <pio_configure_pin+0x96>
		p_pio->PIO_PUDR = ul_mask;
  403e80:	661a      	str	r2, [r3, #96]	; 0x60
}
  403e82:	bc70      	pop	{r4, r5, r6}
  403e84:	4770      	bx	lr
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  403e86:	f000 021f 	and.w	r2, r0, #31
  403e8a:	2001      	movs	r0, #1
  403e8c:	fa00 f202 	lsl.w	r2, r0, r2
	p_pio->PIO_IDR = ul_mask;
  403e90:	645a      	str	r2, [r3, #68]	; 0x44
		ul_sr = p_pio->PIO_ABCDSR[0];
  403e92:	6f1c      	ldr	r4, [r3, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  403e94:	6f1d      	ldr	r5, [r3, #112]	; 0x70
  403e96:	402c      	ands	r4, r5
  403e98:	ea24 0402 	bic.w	r4, r4, r2
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  403e9c:	671c      	str	r4, [r3, #112]	; 0x70
	if (ul_pull_up_enable) {
  403e9e:	07ce      	lsls	r6, r1, #31
		ul_sr = p_pio->PIO_ABCDSR[1];
  403ea0:	6f5c      	ldr	r4, [r3, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  403ea2:	ea44 0402 	orr.w	r4, r4, r2
  403ea6:	675c      	str	r4, [r3, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  403ea8:	605a      	str	r2, [r3, #4]
	if (ul_pull_up_enable) {
  403eaa:	d5e9      	bpl.n	403e80 <pio_configure_pin+0xc4>
  403eac:	e7d1      	b.n	403e52 <pio_configure_pin+0x96>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  403eae:	f000 021f 	and.w	r2, r0, #31
  403eb2:	2001      	movs	r0, #1
  403eb4:	fa00 f202 	lsl.w	r2, r0, r2
	p_pio->PIO_IDR = ul_mask;
  403eb8:	645a      	str	r2, [r3, #68]	; 0x44
		ul_sr = p_pio->PIO_ABCDSR[0];
  403eba:	6f1c      	ldr	r4, [r3, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  403ebc:	4314      	orrs	r4, r2
  403ebe:	e7ed      	b.n	403e9c <pio_configure_pin+0xe0>
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  403ec0:	f000 001f 	and.w	r0, r0, #31
  403ec4:	2201      	movs	r2, #1
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  403ec6:	f001 5460 	and.w	r4, r1, #939524096	; 0x38000000
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
  403eca:	f001 0504 	and.w	r5, r1, #4
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  403ece:	4082      	lsls	r2, r0
	if (ul_pull_up_enable) {
  403ed0:	07c9      	lsls	r1, r1, #31
	p_pio->PIO_IDR = ul_mask;
  403ed2:	645a      	str	r2, [r3, #68]	; 0x44
	if (ul_pull_up_enable) {
  403ed4:	d50b      	bpl.n	403eee <pio_configure_pin+0x132>
		p_pio->PIO_PUER = ul_mask;
  403ed6:	665a      	str	r2, [r3, #100]	; 0x64
	if (ul_multidrive_enable) {
  403ed8:	b1a5      	cbz	r5, 403f04 <pio_configure_pin+0x148>
		p_pio->PIO_MDER = ul_mask;
  403eda:	651a      	str	r2, [r3, #80]	; 0x50
	if (ul_default_level) {
  403edc:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
  403ee0:	d012      	beq.n	403f08 <pio_configure_pin+0x14c>
		p_pio->PIO_CODR = ul_mask;
  403ee2:	635a      	str	r2, [r3, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  403ee4:	611a      	str	r2, [r3, #16]
	return 1;
  403ee6:	2001      	movs	r0, #1
	p_pio->PIO_PER = ul_mask;
  403ee8:	601a      	str	r2, [r3, #0]
}
  403eea:	bc70      	pop	{r4, r5, r6}
  403eec:	4770      	bx	lr
		p_pio->PIO_PUDR = ul_mask;
  403eee:	661a      	str	r2, [r3, #96]	; 0x60
  403ef0:	e7f2      	b.n	403ed8 <pio_configure_pin+0x11c>
		p_pio->PIO_IFDR = ul_mask;
  403ef2:	625a      	str	r2, [r3, #36]	; 0x24
  403ef4:	e790      	b.n	403e18 <pio_configure_pin+0x5c>
		p_pio->PIO_PUDR = ul_mask;
  403ef6:	661a      	str	r2, [r3, #96]	; 0x60
  403ef8:	e78a      	b.n	403e10 <pio_configure_pin+0x54>
		if (ul_attribute & PIO_DEBOUNCE) {
  403efa:	0708      	lsls	r0, r1, #28
  403efc:	d590      	bpl.n	403e20 <pio_configure_pin+0x64>
			p_pio->PIO_IFSCER = ul_mask;
  403efe:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  403f02:	e78d      	b.n	403e20 <pio_configure_pin+0x64>
		p_pio->PIO_MDDR = ul_mask;
  403f04:	655a      	str	r2, [r3, #84]	; 0x54
  403f06:	e7e9      	b.n	403edc <pio_configure_pin+0x120>
		p_pio->PIO_SODR = ul_mask;
  403f08:	631a      	str	r2, [r3, #48]	; 0x30
  403f0a:	e7eb      	b.n	403ee4 <pio_configure_pin+0x128>
  403f0c:	00200707 	.word	0x00200707

00403f10 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  403f10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  403f12:	4604      	mov	r4, r0
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  403f14:	4b0f      	ldr	r3, [pc, #60]	; (403f54 <pio_handler_process+0x44>)
{
  403f16:	460f      	mov	r7, r1
	status = pio_get_interrupt_status(p_pio);
  403f18:	4798      	blx	r3
  403f1a:	4606      	mov	r6, r0
	status &= pio_get_interrupt_mask(p_pio);
  403f1c:	4b0e      	ldr	r3, [pc, #56]	; (403f58 <pio_handler_process+0x48>)
  403f1e:	4620      	mov	r0, r4
  403f20:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  403f22:	4006      	ands	r6, r0
  403f24:	d015      	beq.n	403f52 <pio_handler_process+0x42>
  403f26:	4c0d      	ldr	r4, [pc, #52]	; (403f5c <pio_handler_process+0x4c>)
  403f28:	2500      	movs	r5, #0
  403f2a:	e004      	b.n	403f36 <pio_handler_process+0x26>
		/* Find triggering source */
		i = 0;
		while (status != 0) {
  403f2c:	2d07      	cmp	r5, #7
  403f2e:	f104 0410 	add.w	r4, r4, #16
  403f32:	d00e      	beq.n	403f52 <pio_handler_process+0x42>
  403f34:	b16e      	cbz	r6, 403f52 <pio_handler_process+0x42>
			/* Source is configured on the same controller */
			if (gs_interrupt_sources[i].id == ul_id) {
  403f36:	6823      	ldr	r3, [r4, #0]
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
  403f38:	3501      	adds	r5, #1
			if (gs_interrupt_sources[i].id == ul_id) {
  403f3a:	42bb      	cmp	r3, r7
  403f3c:	d1f6      	bne.n	403f2c <pio_handler_process+0x1c>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  403f3e:	6861      	ldr	r1, [r4, #4]
  403f40:	4231      	tst	r1, r6
  403f42:	d0f3      	beq.n	403f2c <pio_handler_process+0x1c>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  403f44:	68e3      	ldr	r3, [r4, #12]
  403f46:	4638      	mov	r0, r7
  403f48:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  403f4a:	6863      	ldr	r3, [r4, #4]
  403f4c:	ea26 0603 	bic.w	r6, r6, r3
  403f50:	e7ec      	b.n	403f2c <pio_handler_process+0x1c>
  403f52:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  403f54:	00403d7d 	.word	0x00403d7d
  403f58:	00403d81 	.word	0x00403d81
  403f5c:	20402c80 	.word	0x20402c80

00403f60 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  403f60:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  403f64:	f8df 9070 	ldr.w	r9, [pc, #112]	; 403fd8 <pio_handler_set+0x78>
  403f68:	f8d9 c000 	ldr.w	ip, [r9]
  403f6c:	f1bc 0f06 	cmp.w	ip, #6
  403f70:	d82b      	bhi.n	403fca <pio_handler_set+0x6a>
  403f72:	f04f 0800 	mov.w	r8, #0
  403f76:	4e16      	ldr	r6, [pc, #88]	; (403fd0 <pio_handler_set+0x70>)
  403f78:	4644      	mov	r4, r8
  403f7a:	e002      	b.n	403f82 <pio_handler_set+0x22>
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  403f7c:	45a4      	cmp	ip, r4
  403f7e:	46a0      	mov	r8, r4
  403f80:	d30c      	bcc.n	403f9c <pio_handler_set+0x3c>
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  403f82:	0125      	lsls	r5, r4, #4
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  403f84:	f104 0e01 	add.w	lr, r4, #1
		pSource = &(gs_interrupt_sources[i]);
  403f88:	46a2      	mov	sl, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  403f8a:	5977      	ldr	r7, [r6, r5]
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  403f8c:	fa5f f48e 	uxtb.w	r4, lr
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  403f90:	4435      	add	r5, r6
  403f92:	428f      	cmp	r7, r1
  403f94:	d1f2      	bne.n	403f7c <pio_handler_set+0x1c>
  403f96:	686d      	ldr	r5, [r5, #4]
  403f98:	4295      	cmp	r5, r2
  403f9a:	d1ef      	bne.n	403f7c <pio_handler_set+0x1c>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  403f9c:	ea4f 1a0a 	mov.w	sl, sl, lsl #4
	pSource->mask = ul_mask;
	pSource->attr = ul_attr;
	pSource->handler = p_handler;
	if (i == gs_ul_nb_sources + 1) {
  403fa0:	f10c 0c01 	add.w	ip, ip, #1
	pSource->id = ul_id;
  403fa4:	eb06 040a 	add.w	r4, r6, sl
  403fa8:	f846 100a 	str.w	r1, [r6, sl]
	pSource->handler = p_handler;
  403fac:	9908      	ldr	r1, [sp, #32]
	if (i == gs_ul_nb_sources + 1) {
  403fae:	45c4      	cmp	ip, r8
	pSource->mask = ul_mask;
  403fb0:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  403fb2:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  403fb4:	60e1      	str	r1, [r4, #12]
  403fb6:	4611      	mov	r1, r2
		gs_ul_nb_sources++;
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  403fb8:	461a      	mov	r2, r3
  403fba:	4b06      	ldr	r3, [pc, #24]	; (403fd4 <pio_handler_set+0x74>)
		gs_ul_nb_sources++;
  403fbc:	bf08      	it	eq
  403fbe:	f8c9 8000 	streq.w	r8, [r9]
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  403fc2:	4798      	blx	r3

	return 0;
  403fc4:	2000      	movs	r0, #0
  403fc6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		return 1;
  403fca:	2001      	movs	r0, #1
}
  403fcc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403fd0:	20402c80 	.word	0x20402c80
  403fd4:	00403db5 	.word	0x00403db5
  403fd8:	20402cf0 	.word	0x20402cf0

00403fdc <PIOA_Handler>:
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
	pio_handler_process(PIOA, ID_PIOA);
  403fdc:	210a      	movs	r1, #10
  403fde:	4801      	ldr	r0, [pc, #4]	; (403fe4 <PIOA_Handler+0x8>)
  403fe0:	4b01      	ldr	r3, [pc, #4]	; (403fe8 <PIOA_Handler+0xc>)
  403fe2:	4718      	bx	r3
  403fe4:	400e0e00 	.word	0x400e0e00
  403fe8:	00403f11 	.word	0x00403f11

00403fec <PIOB_Handler>:
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
    pio_handler_process(PIOB, ID_PIOB);
  403fec:	210b      	movs	r1, #11
  403fee:	4801      	ldr	r0, [pc, #4]	; (403ff4 <PIOB_Handler+0x8>)
  403ff0:	4b01      	ldr	r3, [pc, #4]	; (403ff8 <PIOB_Handler+0xc>)
  403ff2:	4718      	bx	r3
  403ff4:	400e1000 	.word	0x400e1000
  403ff8:	00403f11 	.word	0x00403f11

00403ffc <PIOC_Handler>:
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
	pio_handler_process(PIOC, ID_PIOC);
  403ffc:	210c      	movs	r1, #12
  403ffe:	4801      	ldr	r0, [pc, #4]	; (404004 <PIOC_Handler+0x8>)
  404000:	4b01      	ldr	r3, [pc, #4]	; (404008 <PIOC_Handler+0xc>)
  404002:	4718      	bx	r3
  404004:	400e1200 	.word	0x400e1200
  404008:	00403f11 	.word	0x00403f11

0040400c <PIOD_Handler>:
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
	pio_handler_process(PIOD, ID_PIOD);
  40400c:	2110      	movs	r1, #16
  40400e:	4801      	ldr	r0, [pc, #4]	; (404014 <PIOD_Handler+0x8>)
  404010:	4b01      	ldr	r3, [pc, #4]	; (404018 <PIOD_Handler+0xc>)
  404012:	4718      	bx	r3
  404014:	400e1400 	.word	0x400e1400
  404018:	00403f11 	.word	0x00403f11

0040401c <PIOE_Handler>:
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
	pio_handler_process(PIOE, ID_PIOE);
  40401c:	2111      	movs	r1, #17
  40401e:	4801      	ldr	r0, [pc, #4]	; (404024 <PIOE_Handler+0x8>)
  404020:	4b01      	ldr	r3, [pc, #4]	; (404028 <PIOE_Handler+0xc>)
  404022:	4718      	bx	r3
  404024:	400e1600 	.word	0x400e1600
  404028:	00403f11 	.word	0x00403f11

0040402c <pio_handler_set_priority>:
 * \param p_pio PIO controller base address.
 * \param ul_irqn NVIC line number.
 * \param ul_priority PIO controller interrupts priority.
 */
void pio_handler_set_priority(Pio *p_pio, IRQn_Type ul_irqn, uint32_t ul_priority)
{
  40402c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404030:	4606      	mov	r6, r0
	uint32_t bitmask = 0;

	bitmask = pio_get_interrupt_mask(p_pio);
  404032:	4b1a      	ldr	r3, [pc, #104]	; (40409c <pio_handler_set_priority+0x70>)
{
  404034:	460c      	mov	r4, r1
  404036:	4615      	mov	r5, r2
	bitmask = pio_get_interrupt_mask(p_pio);
  404038:	4798      	blx	r3
	pio_disable_interrupt(p_pio, 0xFFFFFFFF);
  40403a:	f04f 31ff 	mov.w	r1, #4294967295
  40403e:	4b18      	ldr	r3, [pc, #96]	; (4040a0 <pio_handler_set_priority+0x74>)
	bitmask = pio_get_interrupt_mask(p_pio);
  404040:	4607      	mov	r7, r0
	pio_disable_interrupt(p_pio, 0xFFFFFFFF);
  404042:	4630      	mov	r0, r6
  404044:	4798      	blx	r3
	pio_get_interrupt_status(p_pio);
  404046:	4b17      	ldr	r3, [pc, #92]	; (4040a4 <pio_handler_set_priority+0x78>)
  404048:	4630      	mov	r0, r6
  40404a:	4798      	blx	r3
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  40404c:	f04f 0c01 	mov.w	ip, #1
  404050:	fa5f fe84 	uxtb.w	lr, r4
  404054:	4914      	ldr	r1, [pc, #80]	; (4040a8 <pio_handler_set_priority+0x7c>)
  404056:	0960      	lsrs	r0, r4, #5
  if(IRQn < 0) {
  404058:	2c00      	cmp	r4, #0
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  40405a:	f00e 031f 	and.w	r3, lr, #31
  40405e:	eb01 0280 	add.w	r2, r1, r0, lsl #2
  404062:	fa0c f303 	lsl.w	r3, ip, r3
  404066:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  40406a:	f8c2 3180 	str.w	r3, [r2, #384]	; 0x180
  if(IRQn < 0) {
  40406e:	db0c      	blt.n	40408a <pio_handler_set_priority+0x5e>
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  404070:	016d      	lsls	r5, r5, #5
  404072:	440c      	add	r4, r1
  404074:	b2ed      	uxtb	r5, r5
  404076:	f884 5300 	strb.w	r5, [r4, #768]	; 0x300
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  40407a:	f841 3020 	str.w	r3, [r1, r0, lsl #2]
	NVIC_DisableIRQ(ul_irqn);
	NVIC_ClearPendingIRQ(ul_irqn);
	NVIC_SetPriority(ul_irqn, ul_priority);
	NVIC_EnableIRQ(ul_irqn);
	pio_enable_interrupt(p_pio, bitmask);
  40407e:	4639      	mov	r1, r7
  404080:	4630      	mov	r0, r6
  404082:	4b0a      	ldr	r3, [pc, #40]	; (4040ac <pio_handler_set_priority+0x80>)
}
  404084:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
	pio_enable_interrupt(p_pio, bitmask);
  404088:	4718      	bx	r3
    SCB->SHPR[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  40408a:	f00e 0e0f 	and.w	lr, lr, #15
  40408e:	016d      	lsls	r5, r5, #5
  404090:	4c07      	ldr	r4, [pc, #28]	; (4040b0 <pio_handler_set_priority+0x84>)
  404092:	b2ed      	uxtb	r5, r5
  404094:	4474      	add	r4, lr
  404096:	7625      	strb	r5, [r4, #24]
  404098:	e7ef      	b.n	40407a <pio_handler_set_priority+0x4e>
  40409a:	bf00      	nop
  40409c:	00403d81 	.word	0x00403d81
  4040a0:	00403d79 	.word	0x00403d79
  4040a4:	00403d7d 	.word	0x00403d7d
  4040a8:	e000e100 	.word	0xe000e100
  4040ac:	00403d75 	.word	0x00403d75
  4040b0:	e000ecfc 	.word	0xe000ecfc

004040b4 <pmc_mck_set_division>:
 * \brief Set the division of the MCK.
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
  4040b4:	3802      	subs	r0, #2
  4040b6:	2802      	cmp	r0, #2
  4040b8:	d80d      	bhi.n	4040d6 <pmc_mck_set_division+0x22>
  4040ba:	4b08      	ldr	r3, [pc, #32]	; (4040dc <pmc_mck_set_division+0x28>)
  4040bc:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  4040c0:	4907      	ldr	r1, [pc, #28]	; (4040e0 <pmc_mck_set_division+0x2c>)
  4040c2:	6b0b      	ldr	r3, [r1, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4040c4:	460a      	mov	r2, r1
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  4040c6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  4040ca:	4303      	orrs	r3, r0
	PMC->PMC_MCKR =
  4040cc:	630b      	str	r3, [r1, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4040ce:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4040d0:	071b      	lsls	r3, r3, #28
  4040d2:	d5fc      	bpl.n	4040ce <pmc_mck_set_division+0x1a>
}
  4040d4:	4770      	bx	lr
{
  4040d6:	2000      	movs	r0, #0
  4040d8:	e7f2      	b.n	4040c0 <pmc_mck_set_division+0xc>
  4040da:	bf00      	nop
  4040dc:	004146a0 	.word	0x004146a0
  4040e0:	400e0600 	.word	0x400e0600

004040e4 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  4040e4:	4913      	ldr	r1, [pc, #76]	; (404134 <pmc_switch_mck_to_pllack+0x50>)
  4040e6:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4040e8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  4040ec:	4318      	orrs	r0, r3
  4040ee:	6308      	str	r0, [r1, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4040f0:	6e8b      	ldr	r3, [r1, #104]	; 0x68
  4040f2:	0718      	lsls	r0, r3, #28
  4040f4:	d407      	bmi.n	404106 <pmc_switch_mck_to_pllack+0x22>
  4040f6:	f44f 6300 	mov.w	r3, #2048	; 0x800
  4040fa:	e001      	b.n	404100 <pmc_switch_mck_to_pllack+0x1c>
			--ul_timeout) {
		if (ul_timeout == 0) {
  4040fc:	3b01      	subs	r3, #1
  4040fe:	d016      	beq.n	40412e <pmc_switch_mck_to_pllack+0x4a>
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  404100:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  404102:	0712      	lsls	r2, r2, #28
  404104:	d5fa      	bpl.n	4040fc <pmc_switch_mck_to_pllack+0x18>
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  404106:	490b      	ldr	r1, [pc, #44]	; (404134 <pmc_switch_mck_to_pllack+0x50>)
  404108:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40410a:	f023 0303 	bic.w	r3, r3, #3
  40410e:	f043 0302 	orr.w	r3, r3, #2
  404112:	630b      	str	r3, [r1, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  404114:	6e8b      	ldr	r3, [r1, #104]	; 0x68
  404116:	0718      	lsls	r0, r3, #28
  404118:	d407      	bmi.n	40412a <pmc_switch_mck_to_pllack+0x46>
  40411a:	f44f 6300 	mov.w	r3, #2048	; 0x800
  40411e:	e001      	b.n	404124 <pmc_switch_mck_to_pllack+0x40>
			--ul_timeout) {
		if (ul_timeout == 0) {
  404120:	3b01      	subs	r3, #1
  404122:	d004      	beq.n	40412e <pmc_switch_mck_to_pllack+0x4a>
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  404124:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  404126:	0712      	lsls	r2, r2, #28
  404128:	d5fa      	bpl.n	404120 <pmc_switch_mck_to_pllack+0x3c>
			return 1;
		}
	}

	return 0;
  40412a:	2000      	movs	r0, #0
}
  40412c:	4770      	bx	lr
			return 1;
  40412e:	2001      	movs	r0, #1
  404130:	4770      	bx	lr
  404132:	bf00      	nop
  404134:	400e0600 	.word	0x400e0600

00404138 <pmc_switch_mainck_to_fastrc>:
 * \retval 2 Invalid frequency.
 */
void pmc_switch_mainck_to_fastrc(uint32_t ul_moscrcf)
{
	/* Enable Fast RC oscillator but DO NOT switch to RC now */
	PMC->CKGR_MOR |= (CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCRCEN);
  404138:	4a0e      	ldr	r2, [pc, #56]	; (404174 <pmc_switch_mainck_to_fastrc+0x3c>)
{
  40413a:	b410      	push	{r4}
	PMC->CKGR_MOR |= (CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCRCEN);
  40413c:	4c0e      	ldr	r4, [pc, #56]	; (404178 <pmc_switch_mainck_to_fastrc+0x40>)

	/* Wait the Fast RC to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  40413e:	4611      	mov	r1, r2
	PMC->CKGR_MOR |= (CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCRCEN);
  404140:	6a13      	ldr	r3, [r2, #32]
  404142:	431c      	orrs	r4, r3
  404144:	6214      	str	r4, [r2, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  404146:	6e8b      	ldr	r3, [r1, #104]	; 0x68
  404148:	039a      	lsls	r2, r3, #14
  40414a:	d5fc      	bpl.n	404146 <pmc_switch_mainck_to_fastrc+0xe>

	/* Change Fast RC oscillator frequency */
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCF_Msk) |
  40414c:	6a0c      	ldr	r4, [r1, #32]
  40414e:	4b0b      	ldr	r3, [pc, #44]	; (40417c <pmc_switch_mainck_to_fastrc+0x44>)
			CKGR_MOR_KEY_PASSWD | ul_moscrcf;

	/* Wait the Fast RC to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  404150:	4a08      	ldr	r2, [pc, #32]	; (404174 <pmc_switch_mainck_to_fastrc+0x3c>)
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCF_Msk) |
  404152:	4023      	ands	r3, r4
			CKGR_MOR_KEY_PASSWD | ul_moscrcf;
  404154:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  404158:	4318      	orrs	r0, r3
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCF_Msk) |
  40415a:	6208      	str	r0, [r1, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  40415c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40415e:	039b      	lsls	r3, r3, #14
  404160:	d5fc      	bpl.n	40415c <pmc_switch_mainck_to_fastrc+0x24>

	/* Switch to Fast RC */
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCSEL) |
  404162:	6a11      	ldr	r1, [r2, #32]
  404164:	4b06      	ldr	r3, [pc, #24]	; (404180 <pmc_switch_mainck_to_fastrc+0x48>)
  404166:	400b      	ands	r3, r1
  404168:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  40416c:	6213      	str	r3, [r2, #32]
			CKGR_MOR_KEY_PASSWD;
}
  40416e:	f85d 4b04 	ldr.w	r4, [sp], #4
  404172:	4770      	bx	lr
  404174:	400e0600 	.word	0x400e0600
  404178:	00370008 	.word	0x00370008
  40417c:	ffc8ff8f 	.word	0xffc8ff8f
  404180:	fec8ffff 	.word	0xfec8ffff

00404184 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  404184:	4b02      	ldr	r3, [pc, #8]	; (404190 <pmc_osc_is_ready_mainck+0xc>)
  404186:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  404188:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  40418c:	4770      	bx	lr
  40418e:	bf00      	nop
  404190:	400e0600 	.word	0x400e0600

00404194 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  404194:	4b02      	ldr	r3, [pc, #8]	; (4041a0 <pmc_disable_pllack+0xc>)
  404196:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  40419a:	629a      	str	r2, [r3, #40]	; 0x28
  40419c:	4770      	bx	lr
  40419e:	bf00      	nop
  4041a0:	400e0600 	.word	0x400e0600

004041a4 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  4041a4:	4b02      	ldr	r3, [pc, #8]	; (4041b0 <pmc_is_locked_pllack+0xc>)
  4041a6:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4041a8:	f000 0002 	and.w	r0, r0, #2
  4041ac:	4770      	bx	lr
  4041ae:	bf00      	nop
  4041b0:	400e0600 	.word	0x400e0600

004041b4 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  4041b4:	283f      	cmp	r0, #63	; 0x3f
  4041b6:	d81a      	bhi.n	4041ee <pmc_enable_periph_clk+0x3a>
		return 1;
	}

	if (ul_id < 32) {
  4041b8:	281f      	cmp	r0, #31
  4041ba:	d80a      	bhi.n	4041d2 <pmc_enable_periph_clk+0x1e>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  4041bc:	2301      	movs	r3, #1
  4041be:	4a0e      	ldr	r2, [pc, #56]	; (4041f8 <pmc_enable_periph_clk+0x44>)
  4041c0:	fa03 f000 	lsl.w	r0, r3, r0
  4041c4:	6991      	ldr	r1, [r2, #24]
  4041c6:	ea30 0301 	bics.w	r3, r0, r1
  4041ca:	d012      	beq.n	4041f2 <pmc_enable_periph_clk+0x3e>
			PMC->PMC_PCER0 = 1 << ul_id;
  4041cc:	6110      	str	r0, [r2, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  4041ce:	2000      	movs	r0, #0
  4041d0:	4770      	bx	lr
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  4041d2:	2301      	movs	r3, #1
		ul_id -= 32;
  4041d4:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  4041d6:	4a08      	ldr	r2, [pc, #32]	; (4041f8 <pmc_enable_periph_clk+0x44>)
  4041d8:	fa03 f000 	lsl.w	r0, r3, r0
  4041dc:	f8d2 3108 	ldr.w	r3, [r2, #264]	; 0x108
  4041e0:	ea30 0303 	bics.w	r3, r0, r3
  4041e4:	d005      	beq.n	4041f2 <pmc_enable_periph_clk+0x3e>
			PMC->PMC_PCER1 = 1 << ul_id;
  4041e6:	f8c2 0100 	str.w	r0, [r2, #256]	; 0x100
	return 0;
  4041ea:	2000      	movs	r0, #0
  4041ec:	4770      	bx	lr
		return 1;
  4041ee:	2001      	movs	r0, #1
  4041f0:	4770      	bx	lr
	return 0;
  4041f2:	2000      	movs	r0, #0
}
  4041f4:	4770      	bx	lr
  4041f6:	bf00      	nop
  4041f8:	400e0600 	.word	0x400e0600

004041fc <pmc_pck_set_prescaler>:
 *
 * \param ul_id Peripheral ID.
 * \param ul_pres Prescaler value.
 */
void pmc_pck_set_prescaler(uint32_t ul_id, uint32_t ul_pres)
{
  4041fc:	4b0b      	ldr	r3, [pc, #44]	; (40422c <pmc_pck_set_prescaler+0x30>)
  4041fe:	f44f 7280 	mov.w	r2, #256	; 0x100
  404202:	b410      	push	{r4}
  404204:	eb03 0480 	add.w	r4, r3, r0, lsl #2
  404208:	fa02 f000 	lsl.w	r0, r2, r0
	PMC->PMC_PCK[ul_id] =
			(PMC->PMC_PCK[ul_id] & ~PMC_PCK_PRES_Msk) | ul_pres;
  40420c:	6c22      	ldr	r2, [r4, #64]	; 0x40
  40420e:	f422 627f 	bic.w	r2, r2, #4080	; 0xff0
  404212:	4311      	orrs	r1, r2
	PMC->PMC_PCK[ul_id] =
  404214:	6421      	str	r1, [r4, #64]	; 0x40
	while ((PMC->PMC_SCER & (PMC_SCER_PCK0 << ul_id))
  404216:	e002      	b.n	40421e <pmc_pck_set_prescaler+0x22>
			&& !(PMC->PMC_SR & (PMC_SR_PCKRDY0 << ul_id)));
  404218:	6e9a      	ldr	r2, [r3, #104]	; 0x68
  40421a:	4202      	tst	r2, r0
  40421c:	d102      	bne.n	404224 <pmc_pck_set_prescaler+0x28>
	while ((PMC->PMC_SCER & (PMC_SCER_PCK0 << ul_id))
  40421e:	681a      	ldr	r2, [r3, #0]
  404220:	4202      	tst	r2, r0
  404222:	d1f9      	bne.n	404218 <pmc_pck_set_prescaler+0x1c>
}
  404224:	f85d 4b04 	ldr.w	r4, [sp], #4
  404228:	4770      	bx	lr
  40422a:	bf00      	nop
  40422c:	400e0600 	.word	0x400e0600

00404230 <pmc_pck_set_source>:
 *
 * \param ul_id Peripheral ID.
 * \param ul_source Source selection value.
 */
void pmc_pck_set_source(uint32_t ul_id, uint32_t ul_source)
{
  404230:	4b0b      	ldr	r3, [pc, #44]	; (404260 <pmc_pck_set_source+0x30>)
  404232:	f44f 7280 	mov.w	r2, #256	; 0x100
  404236:	b410      	push	{r4}
  404238:	eb03 0480 	add.w	r4, r3, r0, lsl #2
  40423c:	fa02 f000 	lsl.w	r0, r2, r0
	PMC->PMC_PCK[ul_id] =
			(PMC->PMC_PCK[ul_id] & ~PMC_PCK_CSS_Msk) | ul_source;
  404240:	6c22      	ldr	r2, [r4, #64]	; 0x40
  404242:	f022 0207 	bic.w	r2, r2, #7
  404246:	4311      	orrs	r1, r2
	PMC->PMC_PCK[ul_id] =
  404248:	6421      	str	r1, [r4, #64]	; 0x40
	while ((PMC->PMC_SCER & (PMC_SCER_PCK0 << ul_id))
  40424a:	e002      	b.n	404252 <pmc_pck_set_source+0x22>
			&& !(PMC->PMC_SR & (PMC_SR_PCKRDY0 << ul_id)));
  40424c:	6e9a      	ldr	r2, [r3, #104]	; 0x68
  40424e:	4202      	tst	r2, r0
  404250:	d102      	bne.n	404258 <pmc_pck_set_source+0x28>
	while ((PMC->PMC_SCER & (PMC_SCER_PCK0 << ul_id))
  404252:	681a      	ldr	r2, [r3, #0]
  404254:	4202      	tst	r2, r0
  404256:	d1f9      	bne.n	40424c <pmc_pck_set_source+0x1c>
}
  404258:	f85d 4b04 	ldr.w	r4, [sp], #4
  40425c:	4770      	bx	lr
  40425e:	bf00      	nop
  404260:	400e0600 	.word	0x400e0600

00404264 <pmc_enable_pck>:
 *
 * \param ul_id Id of the programmable clock.
 */
void pmc_enable_pck(uint32_t ul_id)
{
	PMC->PMC_SCER = PMC_SCER_PCK0 << ul_id;
  404264:	f44f 7380 	mov.w	r3, #256	; 0x100
  404268:	4a02      	ldr	r2, [pc, #8]	; (404274 <pmc_enable_pck+0x10>)
  40426a:	fa03 f000 	lsl.w	r0, r3, r0
  40426e:	6010      	str	r0, [r2, #0]
  404270:	4770      	bx	lr
  404272:	bf00      	nop
  404274:	400e0600 	.word	0x400e0600

00404278 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  404278:	e7fe      	b.n	404278 <Dummy_Handler>
  40427a:	bf00      	nop

0040427c <Dummy_Handler2>:
	while (1) {
	}
}

void Dummy_Handler2(void)
{
  40427c:	e7fe      	b.n	40427c <Dummy_Handler2>
  40427e:	bf00      	nop

00404280 <Reset_Handler>:
        if (pSrc != pDest) {
  404280:	4924      	ldr	r1, [pc, #144]	; (404314 <Reset_Handler+0x94>)
  404282:	4a25      	ldr	r2, [pc, #148]	; (404318 <Reset_Handler+0x98>)
  404284:	4291      	cmp	r1, r2
{
  404286:	b500      	push	{lr}
  404288:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  40428a:	d00e      	beq.n	4042aa <Reset_Handler+0x2a>
                for (; pDest < &_erelocate;) {
  40428c:	4823      	ldr	r0, [pc, #140]	; (40431c <Reset_Handler+0x9c>)
  40428e:	4282      	cmp	r2, r0
  404290:	d20b      	bcs.n	4042aa <Reset_Handler+0x2a>
  404292:	43d3      	mvns	r3, r2
  404294:	4403      	add	r3, r0
  404296:	f023 0303 	bic.w	r3, r3, #3
  40429a:	3304      	adds	r3, #4
  40429c:	4413      	add	r3, r2
                        *pDest++ = *pSrc++;
  40429e:	f851 0b04 	ldr.w	r0, [r1], #4
  4042a2:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  4042a6:	429a      	cmp	r2, r3
  4042a8:	d1f9      	bne.n	40429e <Reset_Handler+0x1e>
        for (pDest = &_szero; pDest < &_ezero;) {
  4042aa:	4a1d      	ldr	r2, [pc, #116]	; (404320 <Reset_Handler+0xa0>)
  4042ac:	491d      	ldr	r1, [pc, #116]	; (404324 <Reset_Handler+0xa4>)
  4042ae:	428a      	cmp	r2, r1
  4042b0:	d20a      	bcs.n	4042c8 <Reset_Handler+0x48>
  4042b2:	43d3      	mvns	r3, r2
                *pDest++ = 0;
  4042b4:	2000      	movs	r0, #0
  4042b6:	440b      	add	r3, r1
  4042b8:	f023 0303 	bic.w	r3, r3, #3
  4042bc:	3304      	adds	r3, #4
  4042be:	4413      	add	r3, r2
  4042c0:	f842 0b04 	str.w	r0, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  4042c4:	429a      	cmp	r2, r3
  4042c6:	d1fb      	bne.n	4042c0 <Reset_Handler+0x40>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  4042c8:	4b17      	ldr	r3, [pc, #92]	; (404328 <Reset_Handler+0xa8>)
  4042ca:	4a18      	ldr	r2, [pc, #96]	; (40432c <Reset_Handler+0xac>)
  4042cc:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  4042d0:	6093      	str	r3, [r2, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  4042d2:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  4042d6:	fab3 f383 	clz	r3, r3
  4042da:	095b      	lsrs	r3, r3, #5
  4042dc:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  4042de:	b672      	cpsid	i
  __ASM volatile ("dmb");
  4042e0:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  4042e4:	4a12      	ldr	r2, [pc, #72]	; (404330 <Reset_Handler+0xb0>)
  4042e6:	2300      	movs	r3, #0
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  4042e8:	4912      	ldr	r1, [pc, #72]	; (404334 <Reset_Handler+0xb4>)
  4042ea:	7013      	strb	r3, [r2, #0]
	return flags;
  4042ec:	9801      	ldr	r0, [sp, #4]
  4042ee:	680b      	ldr	r3, [r1, #0]
  4042f0:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  4042f4:	600b      	str	r3, [r1, #0]
  __ASM volatile ("dsb");
  4042f6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  4042fa:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  4042fe:	b120      	cbz	r0, 40430a <Reset_Handler+0x8a>
		cpu_irq_enable();
  404300:	2301      	movs	r3, #1
  404302:	7013      	strb	r3, [r2, #0]
  __ASM volatile ("dmb");
  404304:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  404308:	b662      	cpsie	i
        __libc_init_array();
  40430a:	4b0b      	ldr	r3, [pc, #44]	; (404338 <Reset_Handler+0xb8>)
  40430c:	4798      	blx	r3
        main();
  40430e:	4b0b      	ldr	r3, [pc, #44]	; (40433c <Reset_Handler+0xbc>)
  404310:	4798      	blx	r3
  404312:	e7fe      	b.n	404312 <Reset_Handler+0x92>
  404314:	00414c2c 	.word	0x00414c2c
  404318:	20400000 	.word	0x20400000
  40431c:	20400a00 	.word	0x20400a00
  404320:	20400a00 	.word	0x20400a00
  404324:	2043b838 	.word	0x2043b838
  404328:	00400000 	.word	0x00400000
  40432c:	e000ed00 	.word	0xe000ed00
  404330:	20400025 	.word	0x20400025
  404334:	e000ed88 	.word	0xe000ed88
  404338:	00406a99 	.word	0x00406a99
  40433c:	00404879 	.word	0x00404879

00404340 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  404340:	4a31      	ldr	r2, [pc, #196]	; (404408 <SystemCoreClockUpdate+0xc8>)
  404342:	6b13      	ldr	r3, [r2, #48]	; 0x30
  404344:	f003 0303 	and.w	r3, r3, #3
  404348:	2b01      	cmp	r3, #1
  40434a:	d03d      	beq.n	4043c8 <SystemCoreClockUpdate+0x88>
  40434c:	d326      	bcc.n	40439c <SystemCoreClockUpdate+0x5c>
  40434e:	2b02      	cmp	r3, #2
  404350:	d00d      	beq.n	40436e <SystemCoreClockUpdate+0x2e>
  404352:	492e      	ldr	r1, [pc, #184]	; (40440c <SystemCoreClockUpdate+0xcc>)
  404354:	680b      	ldr	r3, [r1, #0]

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  404356:	482c      	ldr	r0, [pc, #176]	; (404408 <SystemCoreClockUpdate+0xc8>)
  404358:	6b02      	ldr	r2, [r0, #48]	; 0x30
  40435a:	f002 0270 	and.w	r2, r2, #112	; 0x70
  40435e:	2a70      	cmp	r2, #112	; 0x70
  404360:	d02c      	beq.n	4043bc <SystemCoreClockUpdate+0x7c>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  404362:	6b02      	ldr	r2, [r0, #48]	; 0x30
  404364:	f3c2 1202 	ubfx	r2, r2, #4, #3
  404368:	40d3      	lsrs	r3, r2
  40436a:	600b      	str	r3, [r1, #0]
  40436c:	4770      	bx	lr
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  40436e:	6a13      	ldr	r3, [r2, #32]
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  404370:	4926      	ldr	r1, [pc, #152]	; (40440c <SystemCoreClockUpdate+0xcc>)
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  404372:	01db      	lsls	r3, r3, #7
  404374:	d538      	bpl.n	4043e8 <SystemCoreClockUpdate+0xa8>
            SystemCoreClock *= 3U;
  404376:	4b26      	ldr	r3, [pc, #152]	; (404410 <SystemCoreClockUpdate+0xd0>)
  404378:	600b      	str	r3, [r1, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  40437a:	4823      	ldr	r0, [pc, #140]	; (404408 <SystemCoreClockUpdate+0xc8>)
  40437c:	6b02      	ldr	r2, [r0, #48]	; 0x30
  40437e:	f002 0203 	and.w	r2, r2, #3
  404382:	2a02      	cmp	r2, #2
  404384:	d1e7      	bne.n	404356 <SystemCoreClockUpdate+0x16>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  404386:	6a82      	ldr	r2, [r0, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  404388:	6a80      	ldr	r0, [r0, #40]	; 0x28
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  40438a:	f3c2 420a 	ubfx	r2, r2, #16, #11
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  40438e:	b2c0      	uxtb	r0, r0
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  404390:	fb02 3303 	mla	r3, r2, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  404394:	fbb3 f3f0 	udiv	r3, r3, r0
  404398:	600b      	str	r3, [r1, #0]
  40439a:	e7dc      	b.n	404356 <SystemCoreClockUpdate+0x16>
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  40439c:	4b1d      	ldr	r3, [pc, #116]	; (404414 <SystemCoreClockUpdate+0xd4>)
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  40439e:	491b      	ldr	r1, [pc, #108]	; (40440c <SystemCoreClockUpdate+0xcc>)
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  4043a0:	695b      	ldr	r3, [r3, #20]
  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  4043a2:	4819      	ldr	r0, [pc, #100]	; (404408 <SystemCoreClockUpdate+0xc8>)
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  4043a4:	061b      	lsls	r3, r3, #24
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  4043a6:	bf4c      	ite	mi
  4043a8:	f44f 4300 	movmi.w	r3, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  4043ac:	f44f 43fa 	movpl.w	r3, #32000	; 0x7d00
  4043b0:	600b      	str	r3, [r1, #0]
  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  4043b2:	6b02      	ldr	r2, [r0, #48]	; 0x30
  4043b4:	f002 0270 	and.w	r2, r2, #112	; 0x70
  4043b8:	2a70      	cmp	r2, #112	; 0x70
  4043ba:	d1d2      	bne.n	404362 <SystemCoreClockUpdate+0x22>
    SystemCoreClock /= 3U;
  4043bc:	4a16      	ldr	r2, [pc, #88]	; (404418 <SystemCoreClockUpdate+0xd8>)
  4043be:	fba2 2303 	umull	r2, r3, r2, r3
  4043c2:	085b      	lsrs	r3, r3, #1
  4043c4:	600b      	str	r3, [r1, #0]
  4043c6:	4770      	bx	lr
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4043c8:	6a13      	ldr	r3, [r2, #32]
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  4043ca:	4910      	ldr	r1, [pc, #64]	; (40440c <SystemCoreClockUpdate+0xcc>)
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4043cc:	01d8      	lsls	r0, r3, #7
  4043ce:	d408      	bmi.n	4043e2 <SystemCoreClockUpdate+0xa2>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4043d0:	4b12      	ldr	r3, [pc, #72]	; (40441c <SystemCoreClockUpdate+0xdc>)
  4043d2:	600b      	str	r3, [r1, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  4043d4:	6a12      	ldr	r2, [r2, #32]
  4043d6:	f002 0270 	and.w	r2, r2, #112	; 0x70
  4043da:	2a10      	cmp	r2, #16
  4043dc:	d011      	beq.n	404402 <SystemCoreClockUpdate+0xc2>
  4043de:	2a20      	cmp	r2, #32
  4043e0:	d1b9      	bne.n	404356 <SystemCoreClockUpdate+0x16>
            SystemCoreClock *= 3U;
  4043e2:	4b0b      	ldr	r3, [pc, #44]	; (404410 <SystemCoreClockUpdate+0xd0>)
  4043e4:	600b      	str	r3, [r1, #0]
          break;
  4043e6:	e7b6      	b.n	404356 <SystemCoreClockUpdate+0x16>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4043e8:	4b0c      	ldr	r3, [pc, #48]	; (40441c <SystemCoreClockUpdate+0xdc>)
  4043ea:	600b      	str	r3, [r1, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  4043ec:	6a12      	ldr	r2, [r2, #32]
  4043ee:	f002 0270 	and.w	r2, r2, #112	; 0x70
  4043f2:	2a10      	cmp	r2, #16
  4043f4:	d002      	beq.n	4043fc <SystemCoreClockUpdate+0xbc>
  4043f6:	2a20      	cmp	r2, #32
  4043f8:	d0bd      	beq.n	404376 <SystemCoreClockUpdate+0x36>
  4043fa:	e7be      	b.n	40437a <SystemCoreClockUpdate+0x3a>
            SystemCoreClock *= 2U;
  4043fc:	4b08      	ldr	r3, [pc, #32]	; (404420 <SystemCoreClockUpdate+0xe0>)
  4043fe:	600b      	str	r3, [r1, #0]
          break;
  404400:	e7bb      	b.n	40437a <SystemCoreClockUpdate+0x3a>
            SystemCoreClock *= 2U;
  404402:	4b07      	ldr	r3, [pc, #28]	; (404420 <SystemCoreClockUpdate+0xe0>)
  404404:	600b      	str	r3, [r1, #0]
          break;
  404406:	e7a6      	b.n	404356 <SystemCoreClockUpdate+0x16>
  404408:	400e0600 	.word	0x400e0600
  40440c:	20400028 	.word	0x20400028
  404410:	00b71b00 	.word	0x00b71b00
  404414:	400e1810 	.word	0x400e1810
  404418:	aaaaaaab 	.word	0xaaaaaaab
  40441c:	003d0900 	.word	0x003d0900
  404420:	007a1200 	.word	0x007a1200

00404424 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  404424:	4b16      	ldr	r3, [pc, #88]	; (404480 <system_init_flash+0x5c>)
  404426:	4298      	cmp	r0, r3
  404428:	d917      	bls.n	40445a <system_init_flash+0x36>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  40442a:	4b16      	ldr	r3, [pc, #88]	; (404484 <system_init_flash+0x60>)
  40442c:	4298      	cmp	r0, r3
  40442e:	d910      	bls.n	404452 <system_init_flash+0x2e>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  404430:	4b15      	ldr	r3, [pc, #84]	; (404488 <system_init_flash+0x64>)
  404432:	4298      	cmp	r0, r3
  404434:	d91a      	bls.n	40446c <system_init_flash+0x48>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  404436:	4b15      	ldr	r3, [pc, #84]	; (40448c <system_init_flash+0x68>)
  404438:	4298      	cmp	r0, r3
  40443a:	d913      	bls.n	404464 <system_init_flash+0x40>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  40443c:	4b14      	ldr	r3, [pc, #80]	; (404490 <system_init_flash+0x6c>)
  40443e:	4298      	cmp	r0, r3
  404440:	d918      	bls.n	404474 <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  404442:	4b14      	ldr	r3, [pc, #80]	; (404494 <system_init_flash+0x70>)
  404444:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  404446:	4b14      	ldr	r3, [pc, #80]	; (404498 <system_init_flash+0x74>)
  404448:	bf94      	ite	ls
  40444a:	4a14      	ldrls	r2, [pc, #80]	; (40449c <system_init_flash+0x78>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  40444c:	4a14      	ldrhi	r2, [pc, #80]	; (4044a0 <system_init_flash+0x7c>)
  40444e:	601a      	str	r2, [r3, #0]
  404450:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  404452:	4b11      	ldr	r3, [pc, #68]	; (404498 <system_init_flash+0x74>)
  404454:	4a13      	ldr	r2, [pc, #76]	; (4044a4 <system_init_flash+0x80>)
  404456:	601a      	str	r2, [r3, #0]
  404458:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  40445a:	4b0f      	ldr	r3, [pc, #60]	; (404498 <system_init_flash+0x74>)
  40445c:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  404460:	601a      	str	r2, [r3, #0]
  404462:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  404464:	4b0c      	ldr	r3, [pc, #48]	; (404498 <system_init_flash+0x74>)
  404466:	4a10      	ldr	r2, [pc, #64]	; (4044a8 <system_init_flash+0x84>)
  404468:	601a      	str	r2, [r3, #0]
  40446a:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  40446c:	4b0a      	ldr	r3, [pc, #40]	; (404498 <system_init_flash+0x74>)
  40446e:	4a0f      	ldr	r2, [pc, #60]	; (4044ac <system_init_flash+0x88>)
  404470:	601a      	str	r2, [r3, #0]
  404472:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  404474:	4b08      	ldr	r3, [pc, #32]	; (404498 <system_init_flash+0x74>)
  404476:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  40447a:	601a      	str	r2, [r3, #0]
  40447c:	4770      	bx	lr
  40447e:	bf00      	nop
  404480:	015ef3bf 	.word	0x015ef3bf
  404484:	02bde77f 	.word	0x02bde77f
  404488:	041cdb3f 	.word	0x041cdb3f
  40448c:	057bceff 	.word	0x057bceff
  404490:	06dac2bf 	.word	0x06dac2bf
  404494:	0839b67f 	.word	0x0839b67f
  404498:	400e0c00 	.word	0x400e0c00
  40449c:	04000500 	.word	0x04000500
  4044a0:	04000600 	.word	0x04000600
  4044a4:	04000100 	.word	0x04000100
  4044a8:	04000300 	.word	0x04000300
  4044ac:	04000200 	.word	0x04000200

004044b0 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  4044b0:	4a0d      	ldr	r2, [pc, #52]	; (4044e8 <_sbrk+0x38>)
	int ramend = (int)&__ram_end__;
  4044b2:	490e      	ldr	r1, [pc, #56]	; (4044ec <_sbrk+0x3c>)
	if (heap == NULL) {
  4044b4:	6813      	ldr	r3, [r2, #0]
  4044b6:	b143      	cbz	r3, 4044ca <_sbrk+0x1a>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
  4044b8:	4418      	add	r0, r3
  4044ba:	4281      	cmp	r1, r0
  4044bc:	db02      	blt.n	4044c4 <_sbrk+0x14>
		return (caddr_t) -1;	
	}

	heap += incr;
  4044be:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  4044c0:	4618      	mov	r0, r3
  4044c2:	4770      	bx	lr
		return (caddr_t) -1;	
  4044c4:	f04f 30ff 	mov.w	r0, #4294967295
  4044c8:	4770      	bx	lr
{
  4044ca:	b410      	push	{r4}
		heap = (unsigned char *)&_end;
  4044cc:	4c08      	ldr	r4, [pc, #32]	; (4044f0 <_sbrk+0x40>)
	if (((int)prev_heap + incr) > ramend) {
  4044ce:	4420      	add	r0, r4
		heap = (unsigned char *)&_end;
  4044d0:	6014      	str	r4, [r2, #0]
	if (((int)prev_heap + incr) > ramend) {
  4044d2:	4281      	cmp	r1, r0
  4044d4:	db04      	blt.n	4044e0 <_sbrk+0x30>
	heap += incr;
  4044d6:	6010      	str	r0, [r2, #0]
	return (caddr_t) prev_heap;
  4044d8:	4620      	mov	r0, r4
}
  4044da:	f85d 4b04 	ldr.w	r4, [sp], #4
  4044de:	4770      	bx	lr
		return (caddr_t) -1;	
  4044e0:	f04f 30ff 	mov.w	r0, #4294967295
  4044e4:	e7f9      	b.n	4044da <_sbrk+0x2a>
  4044e6:	bf00      	nop
  4044e8:	20402cf4 	.word	0x20402cf4
  4044ec:	2045fffc 	.word	0x2045fffc
  4044f0:	2043da38 	.word	0x2043da38

004044f4 <_close>:
}

extern int _close(int file)
{
	return -1;
}
  4044f4:	f04f 30ff 	mov.w	r0, #4294967295
  4044f8:	4770      	bx	lr
  4044fa:	bf00      	nop

004044fc <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  4044fc:	f44f 5300 	mov.w	r3, #8192	; 0x2000

	return 0;
}
  404500:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
  404502:	604b      	str	r3, [r1, #4]
}
  404504:	4770      	bx	lr
  404506:	bf00      	nop

00404508 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  404508:	2001      	movs	r0, #1
  40450a:	4770      	bx	lr

0040450c <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  40450c:	2000      	movs	r0, #0
  40450e:	4770      	bx	lr

00404510 <usart_serial_getchar>:
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  404510:	4b2d      	ldr	r3, [pc, #180]	; (4045c8 <usart_serial_getchar+0xb8>)
	uint32_t val = 0;
  404512:	2200      	movs	r2, #0
{
  404514:	b5f0      	push	{r4, r5, r6, r7, lr}
	if (UART0 == (Uart*)p_usart) {
  404516:	4298      	cmp	r0, r3
{
  404518:	b083      	sub	sp, #12
  40451a:	4604      	mov	r4, r0
  40451c:	460d      	mov	r5, r1
	uint32_t val = 0;
  40451e:	9201      	str	r2, [sp, #4]
	if (UART0 == (Uart*)p_usart) {
  404520:	d03a      	beq.n	404598 <usart_serial_getchar+0x88>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  404522:	4b2a      	ldr	r3, [pc, #168]	; (4045cc <usart_serial_getchar+0xbc>)
  404524:	4298      	cmp	r0, r3
  404526:	d03f      	beq.n	4045a8 <usart_serial_getchar+0x98>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART2
	if (UART2 == (Uart*)p_usart) {
  404528:	4b29      	ldr	r3, [pc, #164]	; (4045d0 <usart_serial_getchar+0xc0>)
  40452a:	4298      	cmp	r0, r3
  40452c:	d044      	beq.n	4045b8 <usart_serial_getchar+0xa8>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART3
	if (UART3 == (Uart*)p_usart) {
  40452e:	4b29      	ldr	r3, [pc, #164]	; (4045d4 <usart_serial_getchar+0xc4>)
  404530:	4298      	cmp	r0, r3
  404532:	d015      	beq.n	404560 <usart_serial_getchar+0x50>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  404534:	4b28      	ldr	r3, [pc, #160]	; (4045d8 <usart_serial_getchar+0xc8>)
  404536:	4298      	cmp	r0, r3
  404538:	d024      	beq.n	404584 <usart_serial_getchar+0x74>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  40453a:	4b28      	ldr	r3, [pc, #160]	; (4045dc <usart_serial_getchar+0xcc>)
  40453c:	429c      	cmp	r4, r3
  40453e:	d017      	beq.n	404570 <usart_serial_getchar+0x60>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
  404540:	4b27      	ldr	r3, [pc, #156]	; (4045e0 <usart_serial_getchar+0xd0>)
  404542:	429c      	cmp	r4, r3
  404544:	d001      	beq.n	40454a <usart_serial_getchar+0x3a>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  404546:	b003      	add	sp, #12
  404548:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40454a:	af01      	add	r7, sp, #4
  40454c:	4e25      	ldr	r6, [pc, #148]	; (4045e4 <usart_serial_getchar+0xd4>)
		while (usart_read(p_usart, &val));
  40454e:	4639      	mov	r1, r7
  404550:	4620      	mov	r0, r4
  404552:	47b0      	blx	r6
  404554:	2800      	cmp	r0, #0
  404556:	d1fa      	bne.n	40454e <usart_serial_getchar+0x3e>
		*data = (uint8_t)(val & 0xFF);
  404558:	9b01      	ldr	r3, [sp, #4]
  40455a:	702b      	strb	r3, [r5, #0]
}
  40455c:	b003      	add	sp, #12
  40455e:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404560:	4e21      	ldr	r6, [pc, #132]	; (4045e8 <usart_serial_getchar+0xd8>)
		while (uart_read((Uart*)p_usart, data));
  404562:	4629      	mov	r1, r5
  404564:	4620      	mov	r0, r4
  404566:	47b0      	blx	r6
  404568:	2800      	cmp	r0, #0
  40456a:	d1fa      	bne.n	404562 <usart_serial_getchar+0x52>
}
  40456c:	b003      	add	sp, #12
  40456e:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404570:	af01      	add	r7, sp, #4
  404572:	4e1c      	ldr	r6, [pc, #112]	; (4045e4 <usart_serial_getchar+0xd4>)
		while (usart_read(p_usart, &val));
  404574:	4639      	mov	r1, r7
  404576:	4620      	mov	r0, r4
  404578:	47b0      	blx	r6
  40457a:	2800      	cmp	r0, #0
  40457c:	d1fa      	bne.n	404574 <usart_serial_getchar+0x64>
		*data = (uint8_t)(val & 0xFF);
  40457e:	9b01      	ldr	r3, [sp, #4]
  404580:	702b      	strb	r3, [r5, #0]
  404582:	e7eb      	b.n	40455c <usart_serial_getchar+0x4c>
  404584:	af01      	add	r7, sp, #4
  404586:	4e17      	ldr	r6, [pc, #92]	; (4045e4 <usart_serial_getchar+0xd4>)
		while (usart_read(p_usart, &val));
  404588:	4639      	mov	r1, r7
  40458a:	4620      	mov	r0, r4
  40458c:	47b0      	blx	r6
  40458e:	2800      	cmp	r0, #0
  404590:	d1fa      	bne.n	404588 <usart_serial_getchar+0x78>
		*data = (uint8_t)(val & 0xFF);
  404592:	9b01      	ldr	r3, [sp, #4]
  404594:	702b      	strb	r3, [r5, #0]
  404596:	e7e1      	b.n	40455c <usart_serial_getchar+0x4c>
  404598:	4e13      	ldr	r6, [pc, #76]	; (4045e8 <usart_serial_getchar+0xd8>)
		while (uart_read((Uart*)p_usart, data));
  40459a:	4607      	mov	r7, r0
  40459c:	4629      	mov	r1, r5
  40459e:	4638      	mov	r0, r7
  4045a0:	47b0      	blx	r6
  4045a2:	2800      	cmp	r0, #0
  4045a4:	d1fa      	bne.n	40459c <usart_serial_getchar+0x8c>
  4045a6:	e7c8      	b.n	40453a <usart_serial_getchar+0x2a>
  4045a8:	4e0f      	ldr	r6, [pc, #60]	; (4045e8 <usart_serial_getchar+0xd8>)
		while (uart_read((Uart*)p_usart, data));
  4045aa:	4607      	mov	r7, r0
  4045ac:	4629      	mov	r1, r5
  4045ae:	4638      	mov	r0, r7
  4045b0:	47b0      	blx	r6
  4045b2:	2800      	cmp	r0, #0
  4045b4:	d1fa      	bne.n	4045ac <usart_serial_getchar+0x9c>
  4045b6:	e7c0      	b.n	40453a <usart_serial_getchar+0x2a>
  4045b8:	4e0b      	ldr	r6, [pc, #44]	; (4045e8 <usart_serial_getchar+0xd8>)
		while (uart_read((Uart*)p_usart, data));
  4045ba:	4607      	mov	r7, r0
  4045bc:	4629      	mov	r1, r5
  4045be:	4638      	mov	r0, r7
  4045c0:	47b0      	blx	r6
  4045c2:	2800      	cmp	r0, #0
  4045c4:	d1fa      	bne.n	4045bc <usart_serial_getchar+0xac>
  4045c6:	e7bb      	b.n	404540 <usart_serial_getchar+0x30>
  4045c8:	400e0800 	.word	0x400e0800
  4045cc:	400e0a00 	.word	0x400e0a00
  4045d0:	400e1a00 	.word	0x400e1a00
  4045d4:	400e1c00 	.word	0x400e1c00
  4045d8:	40024000 	.word	0x40024000
  4045dc:	40028000 	.word	0x40028000
  4045e0:	4002c000 	.word	0x4002c000
  4045e4:	00403999 	.word	0x00403999
  4045e8:	00403891 	.word	0x00403891

004045ec <start_handler>:
	millisecond_cnt++; 
}

static void start_handler(const uint32_t id, const uint32_t index)
{
	if ((id == ID_PIOA) && (index == PIO_PA9)){
  4045ec:	280a      	cmp	r0, #10
  4045ee:	d114      	bne.n	40461a <start_handler+0x2e>
  4045f0:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
  4045f4:	d111      	bne.n	40461a <start_handler+0x2e>
		
		if(start == false)
  4045f6:	4a09      	ldr	r2, [pc, #36]	; (40461c <start_handler+0x30>)
  4045f8:	7813      	ldrb	r3, [r2, #0]
  4045fa:	f003 01ff 	and.w	r1, r3, #255	; 0xff
  4045fe:	b113      	cbz	r3, 404606 <start_handler+0x1a>
			title_char_cnt = 0;
			start = true;
			awaiting_gui_info = true;
		}
		else 
			start = false; 
  404600:	2300      	movs	r3, #0
  404602:	7013      	strb	r3, [r2, #0]
	}
}
  404604:	4770      	bx	lr
{
  404606:	b430      	push	{r4, r5}
			getting_title = true;
  404608:	2301      	movs	r3, #1
  40460a:	4d05      	ldr	r5, [pc, #20]	; (404620 <start_handler+0x34>)
			title_char_cnt = 0;
  40460c:	4c05      	ldr	r4, [pc, #20]	; (404624 <start_handler+0x38>)
			awaiting_gui_info = true;
  40460e:	4806      	ldr	r0, [pc, #24]	; (404628 <start_handler+0x3c>)
			getting_title = true;
  404610:	702b      	strb	r3, [r5, #0]
			title_char_cnt = 0;
  404612:	6021      	str	r1, [r4, #0]
			start = true;
  404614:	7013      	strb	r3, [r2, #0]
			awaiting_gui_info = true;
  404616:	7003      	strb	r3, [r0, #0]
}
  404618:	bc30      	pop	{r4, r5}
  40461a:	4770      	bx	lr
  40461c:	20402d00 	.word	0x20402d00
  404620:	20402cf8 	.word	0x20402cf8
  404624:	20402d04 	.word	0x20402d04
  404628:	2040002c 	.word	0x2040002c

0040462c <tap_handler>:

static void tap_handler(const uint32_t id, const uint32_t index)
{
	if ((id == ID_PIOC) && (index == PIO_PC13)){
  40462c:	280c      	cmp	r0, #12
  40462e:	d109      	bne.n	404644 <tap_handler+0x18>
  404630:	f5b1 5f00 	cmp.w	r1, #8192	; 0x2000
  404634:	d106      	bne.n	404644 <tap_handler+0x18>
		if (millisecond_cnt > 250)
  404636:	4b04      	ldr	r3, [pc, #16]	; (404648 <tap_handler+0x1c>)
  404638:	681b      	ldr	r3, [r3, #0]
  40463a:	2bfa      	cmp	r3, #250	; 0xfa
  40463c:	d902      	bls.n	404644 <tap_handler+0x18>
		{
			tap = true; 
  40463e:	4b03      	ldr	r3, [pc, #12]	; (40464c <tap_handler+0x20>)
  404640:	2201      	movs	r2, #1
  404642:	701a      	strb	r2, [r3, #0]
  404644:	4770      	bx	lr
  404646:	bf00      	nop
  404648:	2043b80c 	.word	0x2043b80c
  40464c:	20402d01 	.word	0x20402d01

00404650 <usart_serial_putchar>:
	if (UART0 == (Uart*)p_usart) {
  404650:	4b2a      	ldr	r3, [pc, #168]	; (4046fc <usart_serial_putchar+0xac>)
  404652:	4298      	cmp	r0, r3
{
  404654:	b570      	push	{r4, r5, r6, lr}
  404656:	460d      	mov	r5, r1
	if (UART0 == (Uart*)p_usart) {
  404658:	d01c      	beq.n	404694 <usart_serial_putchar+0x44>
	if (UART1 == (Uart*)p_usart) {
  40465a:	4b29      	ldr	r3, [pc, #164]	; (404700 <usart_serial_putchar+0xb0>)
  40465c:	4298      	cmp	r0, r3
  40465e:	d022      	beq.n	4046a6 <usart_serial_putchar+0x56>
	if (UART2 == (Uart*)p_usart) {
  404660:	4b28      	ldr	r3, [pc, #160]	; (404704 <usart_serial_putchar+0xb4>)
  404662:	4298      	cmp	r0, r3
  404664:	d028      	beq.n	4046b8 <usart_serial_putchar+0x68>
	if (UART3 == (Uart*)p_usart) {
  404666:	4b28      	ldr	r3, [pc, #160]	; (404708 <usart_serial_putchar+0xb8>)
  404668:	4298      	cmp	r0, r3
  40466a:	d02e      	beq.n	4046ca <usart_serial_putchar+0x7a>
	if (USART0 == p_usart) {
  40466c:	4b27      	ldr	r3, [pc, #156]	; (40470c <usart_serial_putchar+0xbc>)
  40466e:	4298      	cmp	r0, r3
  404670:	d007      	beq.n	404682 <usart_serial_putchar+0x32>
	if (USART1 == p_usart) {
  404672:	4b27      	ldr	r3, [pc, #156]	; (404710 <usart_serial_putchar+0xc0>)
  404674:	4298      	cmp	r0, r3
  404676:	d038      	beq.n	4046ea <usart_serial_putchar+0x9a>
	if (USART2 == p_usart) {
  404678:	4b26      	ldr	r3, [pc, #152]	; (404714 <usart_serial_putchar+0xc4>)
  40467a:	4298      	cmp	r0, r3
  40467c:	d02d      	beq.n	4046da <usart_serial_putchar+0x8a>
	return 0;
  40467e:	2000      	movs	r0, #0
}
  404680:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  404682:	4604      	mov	r4, r0
  404684:	4e24      	ldr	r6, [pc, #144]	; (404718 <usart_serial_putchar+0xc8>)
  404686:	4629      	mov	r1, r5
  404688:	4620      	mov	r0, r4
  40468a:	47b0      	blx	r6
  40468c:	2800      	cmp	r0, #0
  40468e:	d1fa      	bne.n	404686 <usart_serial_putchar+0x36>
		return 1;
  404690:	2001      	movs	r0, #1
  404692:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  404694:	4604      	mov	r4, r0
  404696:	4e21      	ldr	r6, [pc, #132]	; (40471c <usart_serial_putchar+0xcc>)
  404698:	4629      	mov	r1, r5
  40469a:	4620      	mov	r0, r4
  40469c:	47b0      	blx	r6
  40469e:	2800      	cmp	r0, #0
  4046a0:	d1fa      	bne.n	404698 <usart_serial_putchar+0x48>
		return 1;
  4046a2:	2001      	movs	r0, #1
  4046a4:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  4046a6:	4604      	mov	r4, r0
  4046a8:	4e1c      	ldr	r6, [pc, #112]	; (40471c <usart_serial_putchar+0xcc>)
  4046aa:	4629      	mov	r1, r5
  4046ac:	4620      	mov	r0, r4
  4046ae:	47b0      	blx	r6
  4046b0:	2800      	cmp	r0, #0
  4046b2:	d1fa      	bne.n	4046aa <usart_serial_putchar+0x5a>
		return 1;
  4046b4:	2001      	movs	r0, #1
  4046b6:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  4046b8:	4604      	mov	r4, r0
  4046ba:	4e18      	ldr	r6, [pc, #96]	; (40471c <usart_serial_putchar+0xcc>)
  4046bc:	4629      	mov	r1, r5
  4046be:	4620      	mov	r0, r4
  4046c0:	47b0      	blx	r6
  4046c2:	2800      	cmp	r0, #0
  4046c4:	d1fa      	bne.n	4046bc <usart_serial_putchar+0x6c>
		return 1;
  4046c6:	2001      	movs	r0, #1
  4046c8:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  4046ca:	4604      	mov	r4, r0
  4046cc:	4e13      	ldr	r6, [pc, #76]	; (40471c <usart_serial_putchar+0xcc>)
  4046ce:	4629      	mov	r1, r5
  4046d0:	4620      	mov	r0, r4
  4046d2:	47b0      	blx	r6
  4046d4:	2800      	cmp	r0, #0
  4046d6:	d1fa      	bne.n	4046ce <usart_serial_putchar+0x7e>
  4046d8:	e7da      	b.n	404690 <usart_serial_putchar+0x40>
		while (usart_write(p_usart, c)!=0);
  4046da:	4604      	mov	r4, r0
  4046dc:	4e0e      	ldr	r6, [pc, #56]	; (404718 <usart_serial_putchar+0xc8>)
  4046de:	4629      	mov	r1, r5
  4046e0:	4620      	mov	r0, r4
  4046e2:	47b0      	blx	r6
  4046e4:	2800      	cmp	r0, #0
  4046e6:	d1fa      	bne.n	4046de <usart_serial_putchar+0x8e>
  4046e8:	e7d2      	b.n	404690 <usart_serial_putchar+0x40>
		while (usart_write(p_usart, c)!=0);
  4046ea:	4604      	mov	r4, r0
  4046ec:	4e0a      	ldr	r6, [pc, #40]	; (404718 <usart_serial_putchar+0xc8>)
  4046ee:	4629      	mov	r1, r5
  4046f0:	4620      	mov	r0, r4
  4046f2:	47b0      	blx	r6
  4046f4:	2800      	cmp	r0, #0
  4046f6:	d1fa      	bne.n	4046ee <usart_serial_putchar+0x9e>
  4046f8:	e7ca      	b.n	404690 <usart_serial_putchar+0x40>
  4046fa:	bf00      	nop
  4046fc:	400e0800 	.word	0x400e0800
  404700:	400e0a00 	.word	0x400e0a00
  404704:	400e1a00 	.word	0x400e1a00
  404708:	400e1c00 	.word	0x400e1c00
  40470c:	40024000 	.word	0x40024000
  404710:	40028000 	.word	0x40028000
  404714:	4002c000 	.word	0x4002c000
  404718:	00403981 	.word	0x00403981
  40471c:	00403881 	.word	0x00403881

00404720 <usart_serial_init.constprop.4>:
static inline void usart_serial_init(usart_if p_usart,
  404720:	4603      	mov	r3, r0
	usart_settings.channel_mode= US_MR_CHMODE_NORMAL;
  404722:	2200      	movs	r2, #0
  404724:	200e      	movs	r0, #14
static inline void usart_serial_init(usart_if p_usart,
  404726:	b5f0      	push	{r4, r5, r6, r7, lr}
		usart_init_rs232(p_usart, &usart_settings,
  404728:	4c0c      	ldr	r4, [pc, #48]	; (40475c <usart_serial_init.constprop.4+0x3c>)
static inline void usart_serial_init(usart_if p_usart,
  40472a:	b087      	sub	sp, #28
	uart_settings.ul_mode = opt->paritytype;
  40472c:	689e      	ldr	r6, [r3, #8]
	usart_settings.baudrate = opt->baudrate;
  40472e:	681d      	ldr	r5, [r3, #0]
	usart_settings.char_length = opt->charlength;
  404730:	6859      	ldr	r1, [r3, #4]
	usart_settings.stop_bits= opt->stopbits;
  404732:	68df      	ldr	r7, [r3, #12]
  404734:	4b0a      	ldr	r3, [pc, #40]	; (404760 <usart_serial_init.constprop.4+0x40>)
	usart_settings.char_length = opt->charlength;
  404736:	9101      	str	r1, [sp, #4]
	usart_settings.channel_mode= US_MR_CHMODE_NORMAL;
  404738:	9204      	str	r2, [sp, #16]
	usart_settings.parity_type = opt->paritytype;
  40473a:	9602      	str	r6, [sp, #8]
	usart_settings.baudrate = opt->baudrate;
  40473c:	9500      	str	r5, [sp, #0]
	usart_settings.stop_bits= opt->stopbits;
  40473e:	9703      	str	r7, [sp, #12]
  404740:	4798      	blx	r3
		usart_init_rs232(p_usart, &usart_settings,
  404742:	4a08      	ldr	r2, [pc, #32]	; (404764 <usart_serial_init.constprop.4+0x44>)
  404744:	4669      	mov	r1, sp
  404746:	4620      	mov	r0, r4
  404748:	4b07      	ldr	r3, [pc, #28]	; (404768 <usart_serial_init.constprop.4+0x48>)
  40474a:	4798      	blx	r3
		usart_enable_tx(p_usart);
  40474c:	4620      	mov	r0, r4
  40474e:	4b07      	ldr	r3, [pc, #28]	; (40476c <usart_serial_init.constprop.4+0x4c>)
  404750:	4798      	blx	r3
		usart_enable_rx(p_usart);
  404752:	4620      	mov	r0, r4
  404754:	4b06      	ldr	r3, [pc, #24]	; (404770 <usart_serial_init.constprop.4+0x50>)
  404756:	4798      	blx	r3
}
  404758:	b007      	add	sp, #28
  40475a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40475c:	40028000 	.word	0x40028000
  404760:	004041b5 	.word	0x004041b5
  404764:	08f0d180 	.word	0x08f0d180
  404768:	00403905 	.word	0x00403905
  40476c:	00403969 	.word	0x00403969
  404770:	00403971 	.word	0x00403971

00404774 <USART1_Handler>:
{
  404774:	b5f0      	push	{r4, r5, r6, r7, lr}
	uint32_t received_byte = 0; 
  404776:	2400      	movs	r4, #0
{
  404778:	b083      	sub	sp, #12
	uint32_t dw_status = usart_get_status(USART_SERIAL);
  40477a:	4b2c      	ldr	r3, [pc, #176]	; (40482c <USART1_Handler+0xb8>)
  40477c:	482c      	ldr	r0, [pc, #176]	; (404830 <USART1_Handler+0xbc>)
	uint32_t received_byte = 0; 
  40477e:	9401      	str	r4, [sp, #4]
	uint32_t dw_status = usart_get_status(USART_SERIAL);
  404780:	4798      	blx	r3
	if (dw_status & US_CSR_RXRDY) {
  404782:	07c3      	lsls	r3, r0, #31
  404784:	d401      	bmi.n	40478a <USART1_Handler+0x16>
}
  404786:	b003      	add	sp, #12
  404788:	bdf0      	pop	{r4, r5, r6, r7, pc}
		usart_read(USART_SERIAL, &received_byte);
  40478a:	4b2a      	ldr	r3, [pc, #168]	; (404834 <USART1_Handler+0xc0>)
  40478c:	a901      	add	r1, sp, #4
  40478e:	4828      	ldr	r0, [pc, #160]	; (404830 <USART1_Handler+0xbc>)
  404790:	4798      	blx	r3
		if (received_byte == 255)
  404792:	9b01      	ldr	r3, [sp, #4]
  404794:	2bff      	cmp	r3, #255	; 0xff
  404796:	d039      	beq.n	40480c <USART1_Handler+0x98>
			if (getting_title)
  404798:	4927      	ldr	r1, [pc, #156]	; (404838 <USART1_Handler+0xc4>)
  40479a:	780a      	ldrb	r2, [r1, #0]
  40479c:	f002 00ff 	and.w	r0, r2, #255	; 0xff
  4047a0:	b17a      	cbz	r2, 4047c2 <USART1_Handler+0x4e>
				title[title_char_cnt++] = (char)received_byte;
  4047a2:	4a26      	ldr	r2, [pc, #152]	; (40483c <USART1_Handler+0xc8>)
  4047a4:	b2dd      	uxtb	r5, r3
  4047a6:	4c26      	ldr	r4, [pc, #152]	; (404840 <USART1_Handler+0xcc>)
  4047a8:	6810      	ldr	r0, [r2, #0]
  4047aa:	1c46      	adds	r6, r0, #1
  4047ac:	6016      	str	r6, [r2, #0]
  4047ae:	5425      	strb	r5, [r4, r0]
				if (received_byte == 0 || title_char_cnt > MAX_TITLE_SIZE)
  4047b0:	b113      	cbz	r3, 4047b8 <USART1_Handler+0x44>
  4047b2:	6813      	ldr	r3, [r2, #0]
  4047b4:	2b1e      	cmp	r3, #30
  4047b6:	d9e6      	bls.n	404786 <USART1_Handler+0x12>
					getting_title = false; 
  4047b8:	2300      	movs	r3, #0
					gui_info_curr_idx = 0; 
  4047ba:	4a22      	ldr	r2, [pc, #136]	; (404844 <USART1_Handler+0xd0>)
					getting_title = false; 
  4047bc:	700b      	strb	r3, [r1, #0]
					gui_info_curr_idx = 0; 
  4047be:	6013      	str	r3, [r2, #0]
  4047c0:	e7e1      	b.n	404786 <USART1_Handler+0x12>
				gui_info[gui_info_curr_idx++] = received_byte; 
  4047c2:	4a20      	ldr	r2, [pc, #128]	; (404844 <USART1_Handler+0xd0>)
  4047c4:	4920      	ldr	r1, [pc, #128]	; (404848 <USART1_Handler+0xd4>)
  4047c6:	6814      	ldr	r4, [r2, #0]
  4047c8:	1c65      	adds	r5, r4, #1
  4047ca:	6015      	str	r5, [r2, #0]
  4047cc:	f841 3024 	str.w	r3, [r1, r4, lsl #2]
				if (gui_info_curr_idx == 4)
  4047d0:	6813      	ldr	r3, [r2, #0]
  4047d2:	2b04      	cmp	r3, #4
  4047d4:	d1d7      	bne.n	404786 <USART1_Handler+0x12>
					gui_info_curr_idx = 0; 
  4047d6:	6010      	str	r0, [r2, #0]
					time_sig = time_signatures[gui_info[0]]; 
  4047d8:	680a      	ldr	r2, [r1, #0]
  4047da:	4b1c      	ldr	r3, [pc, #112]	; (40484c <USART1_Handler+0xd8>)
  4047dc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
  4047e0:	4d1b      	ldr	r5, [pc, #108]	; (404850 <USART1_Handler+0xdc>)
					key_sig.mode = MAJOR;  
  4047e2:	4c1c      	ldr	r4, [pc, #112]	; (404854 <USART1_Handler+0xe0>)
					time_sig = time_signatures[gui_info[0]]; 
  4047e4:	4413      	add	r3, r2
					bpm = gui_info[2]; 
  4047e6:	4f1c      	ldr	r7, [pc, #112]	; (404858 <USART1_Handler+0xe4>)
					playback_instrument = gui_info[3]; 
  4047e8:	4e1c      	ldr	r6, [pc, #112]	; (40485c <USART1_Handler+0xe8>)
					time_sig = time_signatures[gui_info[0]]; 
  4047ea:	881a      	ldrh	r2, [r3, #0]
  4047ec:	789b      	ldrb	r3, [r3, #2]
  4047ee:	802a      	strh	r2, [r5, #0]
  4047f0:	70ab      	strb	r3, [r5, #2]
					key_sig.mode = MAJOR;  
  4047f2:	7060      	strb	r0, [r4, #1]
					key_sig.key = (int32_t)gui_info[1] - 7; 
  4047f4:	684b      	ldr	r3, [r1, #4]
					awaiting_gui_info = false; 
  4047f6:	4a1a      	ldr	r2, [pc, #104]	; (404860 <USART1_Handler+0xec>)
					key_sig.key = (int32_t)gui_info[1] - 7; 
  4047f8:	3b07      	subs	r3, #7
  4047fa:	b25b      	sxtb	r3, r3
  4047fc:	7023      	strb	r3, [r4, #0]
					bpm = gui_info[2]; 
  4047fe:	688b      	ldr	r3, [r1, #8]
  404800:	603b      	str	r3, [r7, #0]
					playback_instrument = gui_info[3]; 
  404802:	68cb      	ldr	r3, [r1, #12]
  404804:	b2db      	uxtb	r3, r3
  404806:	7033      	strb	r3, [r6, #0]
					awaiting_gui_info = false; 
  404808:	7010      	strb	r0, [r2, #0]
}
  40480a:	e7bc      	b.n	404786 <USART1_Handler+0x12>
			if (start == false)
  40480c:	4a15      	ldr	r2, [pc, #84]	; (404864 <USART1_Handler+0xf0>)
  40480e:	7813      	ldrb	r3, [r2, #0]
  404810:	f003 01ff 	and.w	r1, r3, #255	; 0xff
  404814:	b943      	cbnz	r3, 404828 <USART1_Handler+0xb4>
				getting_title = true;
  404816:	2301      	movs	r3, #1
  404818:	4d07      	ldr	r5, [pc, #28]	; (404838 <USART1_Handler+0xc4>)
				title_char_cnt = 0;
  40481a:	4c08      	ldr	r4, [pc, #32]	; (40483c <USART1_Handler+0xc8>)
				awaiting_gui_info = true;
  40481c:	4810      	ldr	r0, [pc, #64]	; (404860 <USART1_Handler+0xec>)
				getting_title = true;
  40481e:	702b      	strb	r3, [r5, #0]
				title_char_cnt = 0;
  404820:	6021      	str	r1, [r4, #0]
				start = true;
  404822:	7013      	strb	r3, [r2, #0]
				awaiting_gui_info = true;
  404824:	7003      	strb	r3, [r0, #0]
  404826:	e7ae      	b.n	404786 <USART1_Handler+0x12>
				start = false; 
  404828:	7014      	strb	r4, [r2, #0]
  40482a:	e7ac      	b.n	404786 <USART1_Handler+0x12>
  40482c:	0040397d 	.word	0x0040397d
  404830:	40028000 	.word	0x40028000
  404834:	00403999 	.word	0x00403999
  404838:	20402cf8 	.word	0x20402cf8
  40483c:	20402d04 	.word	0x20402d04
  404840:	20400030 	.word	0x20400030
  404844:	20402cfc 	.word	0x20402cfc
  404848:	2043b7ec 	.word	0x2043b7ec
  40484c:	004146bc 	.word	0x004146bc
  404850:	2043b7e8 	.word	0x2043b7e8
  404854:	2043b804 	.word	0x2043b804
  404858:	2043b808 	.word	0x2043b808
  40485c:	2043b800 	.word	0x2043b800
  404860:	2040002c 	.word	0x2040002c
  404864:	20402d00 	.word	0x20402d00

00404868 <SysTick_Handler>:
	millisecond_cnt++; 
  404868:	4a02      	ldr	r2, [pc, #8]	; (404874 <SysTick_Handler+0xc>)
  40486a:	6813      	ldr	r3, [r2, #0]
  40486c:	3301      	adds	r3, #1
  40486e:	6013      	str	r3, [r2, #0]
  404870:	4770      	bx	lr
  404872:	bf00      	nop
  404874:	2043b80c 	.word	0x2043b80c

00404878 <main>:
}


extern uint32_t max_power; 
int main(void)
{
  404878:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40487c:	f5ad 3d9c 	sub.w	sp, sp, #79872	; 0x13800
	sysclk_init();
  404880:	4bae      	ldr	r3, [pc, #696]	; (404b3c <main+0x2c4>)
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  404882:	4faf      	ldr	r7, [pc, #700]	; (404b40 <main+0x2c8>)
	configure_uart(); 
	
	usart_write(USART_SERIAL, 253); // reset GUI 
	
	bpm = 100;
	playback_instrument = PIANO;
  404884:	2600      	movs	r6, #0
{
  404886:	b0ad      	sub	sp, #180	; 0xb4
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  404888:	f8df b358 	ldr.w	fp, [pc, #856]	; 404be4 <main+0x36c>
	sysclk_init();
  40488c:	4798      	blx	r3
	board_init();
  40488e:	4bad      	ldr	r3, [pc, #692]	; (404b44 <main+0x2cc>)
  404890:	4798      	blx	r3
	audio_init();
  404892:	4bad      	ldr	r3, [pc, #692]	; (404b48 <main+0x2d0>)
  404894:	4798      	blx	r3
	usart_serial_options_t usart_console_settings = {
  404896:	4bad      	ldr	r3, [pc, #692]	; (404b4c <main+0x2d4>)
  404898:	f10d 0e30 	add.w	lr, sp, #48	; 0x30
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  40489c:	f8df a348 	ldr.w	sl, [pc, #840]	; 404be8 <main+0x370>
	bpm = 100;
  4048a0:	f8df 9348 	ldr.w	r9, [pc, #840]	; 404bec <main+0x374>
  4048a4:	f10d 0820 	add.w	r8, sp, #32
	time_sig = time_signatures[0];
	key_sig = key_signatures[0];
	start = false; 
  4048a8:	4ca9      	ldr	r4, [pc, #676]	; (404b50 <main+0x2d8>)
	tap = false; 
  4048aa:	4daa      	ldr	r5, [pc, #680]	; (404b54 <main+0x2dc>)
	usart_serial_options_t usart_console_settings = {
  4048ac:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
  4048ae:	e88e 000f 	stmia.w	lr, {r0, r1, r2, r3}
	usart_serial_init(USART_SERIAL, &usart_console_settings);
  4048b2:	4670      	mov	r0, lr
  4048b4:	4ba8      	ldr	r3, [pc, #672]	; (404b58 <main+0x2e0>)
  4048b6:	4798      	blx	r3
  4048b8:	4ba8      	ldr	r3, [pc, #672]	; (404b5c <main+0x2e4>)
  4048ba:	200e      	movs	r0, #14
  4048bc:	4798      	blx	r3
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  4048be:	49a8      	ldr	r1, [pc, #672]	; (404b60 <main+0x2e8>)
	stdio_base = (void *)usart;
  4048c0:	4ba8      	ldr	r3, [pc, #672]	; (404b64 <main+0x2ec>)
	usart_serial_init((Usart *)usart,(usart_serial_options_t *)opt);
  4048c2:	a80c      	add	r0, sp, #48	; 0x30
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  4048c4:	4aa8      	ldr	r2, [pc, #672]	; (404b68 <main+0x2f0>)
	stdio_base = (void *)usart;
  4048c6:	601f      	str	r7, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  4048c8:	6011      	str	r1, [r2, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  4048ca:	4ba8      	ldr	r3, [pc, #672]	; (404b6c <main+0x2f4>)
  4048cc:	4aa8      	ldr	r2, [pc, #672]	; (404b70 <main+0x2f8>)
  4048ce:	601a      	str	r2, [r3, #0]
	usart_serial_init((Usart *)usart,(usart_serial_options_t *)opt);
  4048d0:	4ba1      	ldr	r3, [pc, #644]	; (404b58 <main+0x2e0>)
  4048d2:	4798      	blx	r3
	setbuf(stdout, NULL);
  4048d4:	f8db 3000 	ldr.w	r3, [fp]
  4048d8:	4631      	mov	r1, r6
  4048da:	6898      	ldr	r0, [r3, #8]
  4048dc:	4ba5      	ldr	r3, [pc, #660]	; (404b74 <main+0x2fc>)
  4048de:	4798      	blx	r3
	setbuf(stdin, NULL);
  4048e0:	f8db 3000 	ldr.w	r3, [fp]
  4048e4:	4631      	mov	r1, r6
	millisecond_cnt = 0; 
	
	pio_set_input(PIOA, PIO_PA9, PIO_PULLUP); 
	pio_set_debounce_filter(PIOA, PIO_PA9, 10); 
  4048e6:	f8df b308 	ldr.w	fp, [pc, #776]	; 404bf0 <main+0x378>
  4048ea:	6858      	ldr	r0, [r3, #4]
  4048ec:	4ba1      	ldr	r3, [pc, #644]	; (404b74 <main+0x2fc>)
  4048ee:	4798      	blx	r3
	usart_enable_tx(USART_SERIAL);
  4048f0:	4638      	mov	r0, r7
  4048f2:	4ba1      	ldr	r3, [pc, #644]	; (404b78 <main+0x300>)
  4048f4:	4798      	blx	r3
	usart_enable_rx(USART_SERIAL);
  4048f6:	4638      	mov	r0, r7
  4048f8:	4ba0      	ldr	r3, [pc, #640]	; (404b7c <main+0x304>)
  4048fa:	4798      	blx	r3
	usart_enable_interrupt(USART_SERIAL, US_IER_RXRDY);
  4048fc:	4638      	mov	r0, r7
  4048fe:	2101      	movs	r1, #1
  404900:	4b9f      	ldr	r3, [pc, #636]	; (404b80 <main+0x308>)
  404902:	4798      	blx	r3
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  404904:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  404908:	f04f 0240 	mov.w	r2, #64	; 0x40
	usart_write(USART_SERIAL, 253); // reset GUI 
  40490c:	4638      	mov	r0, r7
  40490e:	21fd      	movs	r1, #253	; 0xfd
  404910:	f88a 230e 	strb.w	r2, [sl, #782]	; 0x30e
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  404914:	f8ca 3180 	str.w	r3, [sl, #384]	; 0x180
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  404918:	f8ca 3000 	str.w	r3, [sl]
  40491c:	4b99      	ldr	r3, [pc, #612]	; (404b84 <main+0x30c>)
  40491e:	4798      	blx	r3
	time_sig = time_signatures[0];
  404920:	4b99      	ldr	r3, [pc, #612]	; (404b88 <main+0x310>)
	pio_set_input(PIOA, PIO_PA9, PIO_PULLUP); 
  404922:	2201      	movs	r2, #1
  404924:	f44f 7100 	mov.w	r1, #512	; 0x200
	time_sig = time_signatures[0];
  404928:	f893 e002 	ldrb.w	lr, [r3, #2]
  40492c:	881f      	ldrh	r7, [r3, #0]
	bpm = 100;
  40492e:	2364      	movs	r3, #100	; 0x64
	pio_set_input(PIOA, PIO_PA9, PIO_PULLUP); 
  404930:	4896      	ldr	r0, [pc, #600]	; (404b8c <main+0x314>)
	bpm = 100;
  404932:	f8c9 3000 	str.w	r3, [r9]
	playback_instrument = PIANO;
  404936:	4b96      	ldr	r3, [pc, #600]	; (404b90 <main+0x318>)
  404938:	701e      	strb	r6, [r3, #0]
	time_sig = time_signatures[0];
  40493a:	4b96      	ldr	r3, [pc, #600]	; (404b94 <main+0x31c>)
  40493c:	801f      	strh	r7, [r3, #0]
  40493e:	f883 e002 	strb.w	lr, [r3, #2]
	key_sig = key_signatures[0];
  404942:	4b95      	ldr	r3, [pc, #596]	; (404b98 <main+0x320>)
	pio_handler_set(PIOA, ID_PIOA, PIO_PA9, PIO_IT_EDGE, &start_handler);
  404944:	4f95      	ldr	r7, [pc, #596]	; (404b9c <main+0x324>)
	key_sig = key_signatures[0];
  404946:	801e      	strh	r6, [r3, #0]
  404948:	801e      	strh	r6, [r3, #0]
	millisecond_cnt = 0; 
  40494a:	4b95      	ldr	r3, [pc, #596]	; (404ba0 <main+0x328>)
	start = false; 
  40494c:	7026      	strb	r6, [r4, #0]
	tap = false; 
  40494e:	702e      	strb	r6, [r5, #0]
	millisecond_cnt = 0; 
  404950:	601e      	str	r6, [r3, #0]
	pio_set_input(PIOA, PIO_PA9, PIO_PULLUP); 
  404952:	4b94      	ldr	r3, [pc, #592]	; (404ba4 <main+0x32c>)
  404954:	4798      	blx	r3
	pio_set_debounce_filter(PIOA, PIO_PA9, 10); 
  404956:	220a      	movs	r2, #10
  404958:	f44f 7100 	mov.w	r1, #512	; 0x200
  40495c:	488b      	ldr	r0, [pc, #556]	; (404b8c <main+0x314>)
  40495e:	47d8      	blx	fp
	pio_handler_set(PIOA, ID_PIOA, PIO_PA9, PIO_IT_EDGE, &start_handler);
  404960:	4991      	ldr	r1, [pc, #580]	; (404ba8 <main+0x330>)
  404962:	2340      	movs	r3, #64	; 0x40
  404964:	f44f 7200 	mov.w	r2, #512	; 0x200
  404968:	9100      	str	r1, [sp, #0]
  40496a:	210a      	movs	r1, #10
  40496c:	4887      	ldr	r0, [pc, #540]	; (404b8c <main+0x314>)
  40496e:	47b8      	blx	r7
	pio_handler_set_priority(PIOA, PIOA_IRQn, 2);
  404970:	2202      	movs	r2, #2
  404972:	210a      	movs	r1, #10
  404974:	4885      	ldr	r0, [pc, #532]	; (404b8c <main+0x314>)
  404976:	4b8d      	ldr	r3, [pc, #564]	; (404bac <main+0x334>)
  404978:	4798      	blx	r3
	pio_enable_interrupt(PIOA, PIO_PA9);
  40497a:	f44f 7100 	mov.w	r1, #512	; 0x200
  40497e:	4883      	ldr	r0, [pc, #524]	; (404b8c <main+0x314>)
  404980:	4b8b      	ldr	r3, [pc, #556]	; (404bb0 <main+0x338>)
  404982:	4798      	blx	r3
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  404984:	f44f 6380 	mov.w	r3, #1024	; 0x400
	NVIC_ClearPendingIRQ(PIOA_IRQn); 
	NVIC_EnableIRQ(PIOA_IRQn);
	
	pio_set_input(PIOC, PIO_PC13, PIO_PULLUP);
  404988:	2201      	movs	r2, #1
  40498a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  40498e:	f8ca 3180 	str.w	r3, [sl, #384]	; 0x180
  404992:	4888      	ldr	r0, [pc, #544]	; (404bb4 <main+0x33c>)
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  404994:	f8ca 3000 	str.w	r3, [sl]
  404998:	4b82      	ldr	r3, [pc, #520]	; (404ba4 <main+0x32c>)
  40499a:	4798      	blx	r3
	pio_set_debounce_filter(PIOC, PIO_PC13, 10);
  40499c:	220a      	movs	r2, #10
  40499e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  4049a2:	4884      	ldr	r0, [pc, #528]	; (404bb4 <main+0x33c>)
  4049a4:	47d8      	blx	fp
	pio_handler_set(PIOC, ID_PIOC, PIO_PC13, PIO_IT_FALL_EDGE, &tap_handler);
  4049a6:	4984      	ldr	r1, [pc, #528]	; (404bb8 <main+0x340>)
  4049a8:	2350      	movs	r3, #80	; 0x50
  4049aa:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  4049ae:	9100      	str	r1, [sp, #0]
  4049b0:	210c      	movs	r1, #12
  4049b2:	4880      	ldr	r0, [pc, #512]	; (404bb4 <main+0x33c>)
  4049b4:	47b8      	blx	r7
	pio_handler_set_priority(PIOC, PIOC_IRQn, 2);
  4049b6:	2202      	movs	r2, #2
  4049b8:	210c      	movs	r1, #12
  4049ba:	487e      	ldr	r0, [pc, #504]	; (404bb4 <main+0x33c>)
  4049bc:	4b7b      	ldr	r3, [pc, #492]	; (404bac <main+0x334>)
    SCB->SHPR[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  4049be:	27e0      	movs	r7, #224	; 0xe0
  4049c0:	4798      	blx	r3
  4049c2:	ab01      	add	r3, sp, #4
	pio_enable_interrupt(PIOC, PIO_PC13);
  4049c4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  4049c8:	487a      	ldr	r0, [pc, #488]	; (404bb4 <main+0x33c>)
  4049ca:	9305      	str	r3, [sp, #20]
  4049cc:	4b78      	ldr	r3, [pc, #480]	; (404bb0 <main+0x338>)
  4049ce:	4798      	blx	r3
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1) > SysTick_LOAD_RELOAD_Msk)  return (1);      /* Reload value impossible */

  SysTick->LOAD  = ticks - 1;                                  /* set reload register */
  4049d0:	4b7a      	ldr	r3, [pc, #488]	; (404bbc <main+0x344>)
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  4049d2:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  SysTick->LOAD  = ticks - 1;                                  /* set reload register */
  4049d6:	f8df e21c 	ldr.w	lr, [pc, #540]	; 404bf4 <main+0x37c>
    SCB->SHPR[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  4049da:	4879      	ldr	r0, [pc, #484]	; (404bc0 <main+0x348>)
  NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
  4049dc:	2107      	movs	r1, #7
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  4049de:	f8ca 2180 	str.w	r2, [sl, #384]	; 0x180
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  4049e2:	f8ca 2000 	str.w	r2, [sl]
  SysTick->LOAD  = ticks - 1;                                  /* set reload register */
  4049e6:	f8c3 e004 	str.w	lr, [r3, #4]
	/* Initialize and start 1ms systick timer */
	SysTick_Config(sysclk_get_cpu_hz()/900); // calibrated for footswitch 
	
	midi_event_t events_in_time[MAX_NUM_EVENTS];
	uint32_t number_of_events = 0; 
	max_power = 100; // minimum initial max power
  4049ea:	4a76      	ldr	r2, [pc, #472]	; (404bc4 <main+0x34c>)
    SCB->SHPR[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  4049ec:	f880 7023 	strb.w	r7, [r0, #35]	; 0x23
  SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
  4049f0:	609e      	str	r6, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
  4049f2:	6019      	str	r1, [r3, #0]
  4049f4:	2364      	movs	r3, #100	; 0x64
	uint32_t number_of_events = 0; 
  4049f6:	f8df e200 	ldr.w	lr, [pc, #512]	; 404bf8 <main+0x380>
	max_power = 100; // minimum initial max power
  4049fa:	6013      	str	r3, [r2, #0]
	uint32_t number_of_events = 0; 
  4049fc:	4b72      	ldr	r3, [pc, #456]	; (404bc8 <main+0x350>)
  4049fe:	f8df b1fc 	ldr.w	fp, [pc, #508]	; 404bfc <main+0x384>
  404a02:	446b      	add	r3, sp
  404a04:	4f71      	ldr	r7, [pc, #452]	; (404bcc <main+0x354>)
  404a06:	f843 600e 	str.w	r6, [r3, lr]
	int32_t millisecond_cnt_buffer[NUM_AVG_TAPS]; 
	
	while(1)
	{
		for (uint32_t i = 0; i < NUM_AVG_TAPS; i++)
			millisecond_cnt_buffer[i] = 0;
  404a0a:	2200      	movs	r2, #0
		int32_t bpm_total = NUM_AVG_TAPS * bpm;
  404a0c:	f8d9 1000 	ldr.w	r1, [r9]
		bool first_tap = false; 
		uint32_t curr_tap_idx = 0; 
  404a10:	4613      	mov	r3, r2
		int32_t bpm_total = NUM_AVG_TAPS * bpm;
  404a12:	ea4f 0a81 	mov.w	sl, r1, lsl #2
			millisecond_cnt_buffer[i] = 0;
  404a16:	f8c8 2000 	str.w	r2, [r8]
		bool first_tap = false; 
  404a1a:	4611      	mov	r1, r2
			millisecond_cnt_buffer[i] = 0;
  404a1c:	f8c8 2004 	str.w	r2, [r8, #4]
  404a20:	f8c8 2008 	str.w	r2, [r8, #8]
  404a24:	f8c8 200c 	str.w	r2, [r8, #12]
		while(!start)
  404a28:	e004      	b.n	404a34 <main+0x1bc>
		{
			if (tap)
  404a2a:	782a      	ldrb	r2, [r5, #0]
  404a2c:	f002 06ff 	and.w	r6, r2, #255	; 0xff
  404a30:	2a00      	cmp	r2, #0
  404a32:	d149      	bne.n	404ac8 <main+0x250>
		while(!start)
  404a34:	7822      	ldrb	r2, [r4, #0]
  404a36:	2a00      	cmp	r2, #0
  404a38:	d0f7      	beq.n	404a2a <main+0x1b2>
				millisecond_cnt = 0;
			}
		} 
		
		// tell GUI I'm ready to receive transcription params and start recording 
		awaiting_gui_info = true; 
  404a3a:	2301      	movs	r3, #1
		usart_write(USART_SERIAL, 254);
  404a3c:	21fe      	movs	r1, #254	; 0xfe
  404a3e:	4840      	ldr	r0, [pc, #256]	; (404b40 <main+0x2c8>)
		awaiting_gui_info = true; 
  404a40:	703b      	strb	r3, [r7, #0]
		usart_write(USART_SERIAL, 254);
  404a42:	4b50      	ldr	r3, [pc, #320]	; (404b84 <main+0x30c>)
  404a44:	4798      	blx	r3
		while(awaiting_gui_info); 
  404a46:	783b      	ldrb	r3, [r7, #0]
  404a48:	f003 06ff 	and.w	r6, r3, #255	; 0xff
  404a4c:	2b00      	cmp	r3, #0
  404a4e:	d1fa      	bne.n	404a46 <main+0x1ce>
		
		delay_ms(100); 
  404a50:	485f      	ldr	r0, [pc, #380]	; (404bd0 <main+0x358>)
  404a52:	47d8      	blx	fp
		start = true; 
		DISABLE_SYSTICK(); 
  404a54:	f8df a164 	ldr.w	sl, [pc, #356]	; 404bbc <main+0x344>
		start = true; 
  404a58:	2301      	movs	r3, #1
		DISABLE_SYSTICK(); 
  404a5a:	9604      	str	r6, [sp, #16]
		start_recording(events_in_time, &number_of_events, bpm, (midi_instrument_t)playback_instrument, (time_signature_t)time_sig, (key_signature_t)key_sig, (char *)title);
  404a5c:	a907      	add	r1, sp, #28
  404a5e:	a80c      	add	r0, sp, #48	; 0x30
		start = true; 
  404a60:	7023      	strb	r3, [r4, #0]
		DISABLE_SYSTICK(); 
  404a62:	f8ca 6000 	str.w	r6, [sl]
		start_recording(events_in_time, &number_of_events, bpm, (midi_instrument_t)playback_instrument, (time_signature_t)time_sig, (key_signature_t)key_sig, (char *)title);
  404a66:	4b4a      	ldr	r3, [pc, #296]	; (404b90 <main+0x318>)
  404a68:	4e4b      	ldr	r6, [pc, #300]	; (404b98 <main+0x320>)
  404a6a:	f8d9 2000 	ldr.w	r2, [r9]
  404a6e:	781b      	ldrb	r3, [r3, #0]
  404a70:	f8b6 c000 	ldrh.w	ip, [r6]
  404a74:	4e47      	ldr	r6, [pc, #284]	; (404b94 <main+0x31c>)
  404a76:	f8b6 e000 	ldrh.w	lr, [r6]
  404a7a:	4e56      	ldr	r6, [pc, #344]	; (404bd4 <main+0x35c>)
  404a7c:	9602      	str	r6, [sp, #8]
  404a7e:	9e05      	ldr	r6, [sp, #20]
  404a80:	f8a6 c000 	strh.w	ip, [r6]
  404a84:	4e43      	ldr	r6, [pc, #268]	; (404b94 <main+0x31c>)
  404a86:	f8ad e000 	strh.w	lr, [sp]
  404a8a:	f896 e002 	ldrb.w	lr, [r6, #2]
  404a8e:	4e52      	ldr	r6, [pc, #328]	; (404bd8 <main+0x360>)
  404a90:	f88d e002 	strb.w	lr, [sp, #2]
  404a94:	47b0      	blx	r6
		write_midi_file(bpm, (midi_instrument_t)playback_instrument, (time_signature_t *)&time_sig,  (key_signature_t *)&key_sig, (char *)title, events_in_time, number_of_events);
  404a96:	4a3e      	ldr	r2, [pc, #248]	; (404b90 <main+0x318>)
  404a98:	f8d9 0000 	ldr.w	r0, [r9]
  404a9c:	7811      	ldrb	r1, [r2, #0]
  404a9e:	aa0c      	add	r2, sp, #48	; 0x30
  404aa0:	9b07      	ldr	r3, [sp, #28]
  404aa2:	9201      	str	r2, [sp, #4]
  404aa4:	4a4b      	ldr	r2, [pc, #300]	; (404bd4 <main+0x35c>)
  404aa6:	9302      	str	r3, [sp, #8]
  404aa8:	9200      	str	r2, [sp, #0]
  404aaa:	4b3b      	ldr	r3, [pc, #236]	; (404b98 <main+0x320>)
  404aac:	4a39      	ldr	r2, [pc, #228]	; (404b94 <main+0x31c>)
  404aae:	4e4b      	ldr	r6, [pc, #300]	; (404bdc <main+0x364>)
  404ab0:	47b0      	blx	r6
		delay_ms(100); 
  404ab2:	4847      	ldr	r0, [pc, #284]	; (404bd0 <main+0x358>)
  404ab4:	47d8      	blx	fp
		start = false; 
  404ab6:	9904      	ldr	r1, [sp, #16]
		tap = false; 
		millisecond_cnt = 0; 
		ENABLE_SYSTICK(); 
  404ab8:	2307      	movs	r3, #7
		millisecond_cnt = 0; 
  404aba:	4a39      	ldr	r2, [pc, #228]	; (404ba0 <main+0x328>)
		start = false; 
  404abc:	7021      	strb	r1, [r4, #0]
		tap = false; 
  404abe:	7029      	strb	r1, [r5, #0]
		millisecond_cnt = 0; 
  404ac0:	6011      	str	r1, [r2, #0]
		ENABLE_SYSTICK(); 
  404ac2:	f8ca 3000 	str.w	r3, [sl]
	{
  404ac6:	e7a0      	b.n	404a0a <main+0x192>
				if (first_tap == true)
  404ac8:	b369      	cbz	r1, 404b26 <main+0x2ae>
					bpm_total -= millisecond_cnt_buffer[curr_tap_idx];
  404aca:	f858 2023 	ldr.w	r2, [r8, r3, lsl #2]
						bpm = 60000 / (bpm_total / NUM_AVG_TAPS);
  404ace:	f64e 2160 	movw	r1, #60000	; 0xea60
					bpm_total -= millisecond_cnt_buffer[curr_tap_idx];
  404ad2:	ebaa 0a02 	sub.w	sl, sl, r2
					millisecond_cnt_buffer[curr_tap_idx] = millisecond_cnt; 
  404ad6:	4a32      	ldr	r2, [pc, #200]	; (404ba0 <main+0x328>)
  404ad8:	6812      	ldr	r2, [r2, #0]
					bpm_total += millisecond_cnt_buffer[curr_tap_idx++];  
  404ada:	4492      	add	sl, r2
					millisecond_cnt_buffer[curr_tap_idx] = millisecond_cnt; 
  404adc:	f848 2023 	str.w	r2, [r8, r3, lsl #2]
					bpm_total += millisecond_cnt_buffer[curr_tap_idx++];  
  404ae0:	3301      	adds	r3, #1
					if (bpm_total > 0)
  404ae2:	f1ba 0f00 	cmp.w	sl, #0
						bpm = 60000 / (bpm_total / NUM_AVG_TAPS);
  404ae6:	ea4f 02aa 	mov.w	r2, sl, asr #2
					if (bpm_total > 0)
  404aea:	dd22      	ble.n	404b32 <main+0x2ba>
						bpm = 60000 / (bpm_total / NUM_AVG_TAPS);
  404aec:	fb91 f1f2 	sdiv	r1, r1, r2
  404af0:	f8c9 1000 	str.w	r1, [r9]
						curr_tap_idx = 0; 
  404af4:	2b04      	cmp	r3, #4
					if (bpm > 254)
  404af6:	f8d9 2000 	ldr.w	r2, [r9]
						bpm = 254; 
  404afa:	f04f 0efe 	mov.w	lr, #254	; 0xfe
					usart_write(USART_SERIAL, 255);
  404afe:	f04f 01ff 	mov.w	r1, #255	; 0xff
						curr_tap_idx = 0; 
  404b02:	bf08      	it	eq
  404b04:	2300      	moveq	r3, #0
					usart_write(USART_SERIAL, 255);
  404b06:	480e      	ldr	r0, [pc, #56]	; (404b40 <main+0x2c8>)
					if (bpm > 254)
  404b08:	4572      	cmp	r2, lr
  404b0a:	d901      	bls.n	404b10 <main+0x298>
						bpm = 254; 
  404b0c:	f8c9 e000 	str.w	lr, [r9]
  404b10:	9304      	str	r3, [sp, #16]
					usart_write(USART_SERIAL, 255);
  404b12:	4b1c      	ldr	r3, [pc, #112]	; (404b84 <main+0x30c>)
  404b14:	4798      	blx	r3
					delay_ms(50);
  404b16:	4832      	ldr	r0, [pc, #200]	; (404be0 <main+0x368>)
  404b18:	47d8      	blx	fp
					usart_write(USART_SERIAL, bpm);				
  404b1a:	4b1a      	ldr	r3, [pc, #104]	; (404b84 <main+0x30c>)
  404b1c:	f8d9 1000 	ldr.w	r1, [r9]
  404b20:	4807      	ldr	r0, [pc, #28]	; (404b40 <main+0x2c8>)
  404b22:	4798      	blx	r3
  404b24:	9b04      	ldr	r3, [sp, #16]
				tap = false;
  404b26:	2200      	movs	r2, #0
				millisecond_cnt = 0;
  404b28:	481d      	ldr	r0, [pc, #116]	; (404ba0 <main+0x328>)
  404b2a:	4631      	mov	r1, r6
				tap = false;
  404b2c:	702a      	strb	r2, [r5, #0]
				millisecond_cnt = 0;
  404b2e:	6002      	str	r2, [r0, #0]
  404b30:	e780      	b.n	404a34 <main+0x1bc>
						bpm = 100; 
  404b32:	2264      	movs	r2, #100	; 0x64
  404b34:	f8c9 2000 	str.w	r2, [r9]
  404b38:	e7dc      	b.n	404af4 <main+0x27c>
  404b3a:	bf00      	nop
  404b3c:	004039ed 	.word	0x004039ed
  404b40:	40028000 	.word	0x40028000
  404b44:	00403a5d 	.word	0x00403a5d
  404b48:	0040052d 	.word	0x0040052d
  404b4c:	004146ac 	.word	0x004146ac
  404b50:	20402d00 	.word	0x20402d00
  404b54:	20402d01 	.word	0x20402d01
  404b58:	00404721 	.word	0x00404721
  404b5c:	004041b5 	.word	0x004041b5
  404b60:	00404651 	.word	0x00404651
  404b64:	2043b7e4 	.word	0x2043b7e4
  404b68:	2043b7e0 	.word	0x2043b7e0
  404b6c:	2043b7dc 	.word	0x2043b7dc
  404b70:	00404511 	.word	0x00404511
  404b74:	00407169 	.word	0x00407169
  404b78:	00403969 	.word	0x00403969
  404b7c:	00403971 	.word	0x00403971
  404b80:	00403979 	.word	0x00403979
  404b84:	00403981 	.word	0x00403981
  404b88:	004146bc 	.word	0x004146bc
  404b8c:	400e0e00 	.word	0x400e0e00
  404b90:	2043b800 	.word	0x2043b800
  404b94:	2043b7e8 	.word	0x2043b7e8
  404b98:	2043b804 	.word	0x2043b804
  404b9c:	00403f61 	.word	0x00403f61
  404ba0:	2043b80c 	.word	0x2043b80c
  404ba4:	00403d3d 	.word	0x00403d3d
  404ba8:	004045ed 	.word	0x004045ed
  404bac:	0040402d 	.word	0x0040402d
  404bb0:	00403d75 	.word	0x00403d75
  404bb4:	400e1200 	.word	0x400e1200
  404bb8:	0040462d 	.word	0x0040462d
  404bbc:	e000e010 	.word	0xe000e010
  404bc0:	e000ed00 	.word	0xe000ed00
  404bc4:	20400a64 	.word	0x20400a64
  404bc8:	000138b0 	.word	0x000138b0
  404bcc:	2040002c 	.word	0x2040002c
  404bd0:	004d2b25 	.word	0x004d2b25
  404bd4:	20400030 	.word	0x20400030
  404bd8:	00400fbd 	.word	0x00400fbd
  404bdc:	004009e9 	.word	0x004009e9
  404be0:	00269593 	.word	0x00269593
  404be4:	20400050 	.word	0x20400050
  404be8:	e000e100 	.word	0xe000e100
  404bec:	2043b808 	.word	0x2043b808
  404bf0:	00403d21 	.word	0x00403d21
  404bf4:	00051614 	.word	0x00051614
  404bf8:	fffec76c 	.word	0xfffec76c
  404bfc:	20400001 	.word	0x20400001

00404c00 <cosf>:
  404c00:	b500      	push	{lr}
  404c02:	4a1c      	ldr	r2, [pc, #112]	; (404c74 <cosf+0x74>)
  404c04:	f020 4300 	bic.w	r3, r0, #2147483648	; 0x80000000
  404c08:	4293      	cmp	r3, r2
  404c0a:	b083      	sub	sp, #12
  404c0c:	dd18      	ble.n	404c40 <cosf+0x40>
  404c0e:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
  404c12:	db05      	blt.n	404c20 <cosf+0x20>
  404c14:	4601      	mov	r1, r0
  404c16:	f001 fc11 	bl	40643c <__aeabi_fsub>
  404c1a:	b003      	add	sp, #12
  404c1c:	f85d fb04 	ldr.w	pc, [sp], #4
  404c20:	4669      	mov	r1, sp
  404c22:	f000 f867 	bl	404cf4 <__ieee754_rem_pio2f>
  404c26:	f000 0203 	and.w	r2, r0, #3
  404c2a:	2a01      	cmp	r2, #1
  404c2c:	d015      	beq.n	404c5a <cosf+0x5a>
  404c2e:	2a02      	cmp	r2, #2
  404c30:	d00c      	beq.n	404c4c <cosf+0x4c>
  404c32:	b1ca      	cbz	r2, 404c68 <cosf+0x68>
  404c34:	2201      	movs	r2, #1
  404c36:	9901      	ldr	r1, [sp, #4]
  404c38:	9800      	ldr	r0, [sp, #0]
  404c3a:	f000 fe13 	bl	405864 <__kernel_sinf>
  404c3e:	e7ec      	b.n	404c1a <cosf+0x1a>
  404c40:	2100      	movs	r1, #0
  404c42:	f000 f9c5 	bl	404fd0 <__kernel_cosf>
  404c46:	b003      	add	sp, #12
  404c48:	f85d fb04 	ldr.w	pc, [sp], #4
  404c4c:	9901      	ldr	r1, [sp, #4]
  404c4e:	9800      	ldr	r0, [sp, #0]
  404c50:	f000 f9be 	bl	404fd0 <__kernel_cosf>
  404c54:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
  404c58:	e7df      	b.n	404c1a <cosf+0x1a>
  404c5a:	9901      	ldr	r1, [sp, #4]
  404c5c:	9800      	ldr	r0, [sp, #0]
  404c5e:	f000 fe01 	bl	405864 <__kernel_sinf>
  404c62:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
  404c66:	e7d8      	b.n	404c1a <cosf+0x1a>
  404c68:	9901      	ldr	r1, [sp, #4]
  404c6a:	9800      	ldr	r0, [sp, #0]
  404c6c:	f000 f9b0 	bl	404fd0 <__kernel_cosf>
  404c70:	e7d3      	b.n	404c1a <cosf+0x1a>
  404c72:	bf00      	nop
  404c74:	3f490fd8 	.word	0x3f490fd8

00404c78 <sinf>:
  404c78:	b500      	push	{lr}
  404c7a:	4a1d      	ldr	r2, [pc, #116]	; (404cf0 <sinf+0x78>)
  404c7c:	f020 4300 	bic.w	r3, r0, #2147483648	; 0x80000000
  404c80:	4293      	cmp	r3, r2
  404c82:	b083      	sub	sp, #12
  404c84:	dd19      	ble.n	404cba <sinf+0x42>
  404c86:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
  404c8a:	db05      	blt.n	404c98 <sinf+0x20>
  404c8c:	4601      	mov	r1, r0
  404c8e:	f001 fbd5 	bl	40643c <__aeabi_fsub>
  404c92:	b003      	add	sp, #12
  404c94:	f85d fb04 	ldr.w	pc, [sp], #4
  404c98:	4669      	mov	r1, sp
  404c9a:	f000 f82b 	bl	404cf4 <__ieee754_rem_pio2f>
  404c9e:	f000 0003 	and.w	r0, r0, #3
  404ca2:	2801      	cmp	r0, #1
  404ca4:	d018      	beq.n	404cd8 <sinf+0x60>
  404ca6:	2802      	cmp	r0, #2
  404ca8:	d00e      	beq.n	404cc8 <sinf+0x50>
  404caa:	b1d0      	cbz	r0, 404ce2 <sinf+0x6a>
  404cac:	9901      	ldr	r1, [sp, #4]
  404cae:	9800      	ldr	r0, [sp, #0]
  404cb0:	f000 f98e 	bl	404fd0 <__kernel_cosf>
  404cb4:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
  404cb8:	e7eb      	b.n	404c92 <sinf+0x1a>
  404cba:	2200      	movs	r2, #0
  404cbc:	2100      	movs	r1, #0
  404cbe:	f000 fdd1 	bl	405864 <__kernel_sinf>
  404cc2:	b003      	add	sp, #12
  404cc4:	f85d fb04 	ldr.w	pc, [sp], #4
  404cc8:	2201      	movs	r2, #1
  404cca:	9901      	ldr	r1, [sp, #4]
  404ccc:	9800      	ldr	r0, [sp, #0]
  404cce:	f000 fdc9 	bl	405864 <__kernel_sinf>
  404cd2:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
  404cd6:	e7dc      	b.n	404c92 <sinf+0x1a>
  404cd8:	9901      	ldr	r1, [sp, #4]
  404cda:	9800      	ldr	r0, [sp, #0]
  404cdc:	f000 f978 	bl	404fd0 <__kernel_cosf>
  404ce0:	e7d7      	b.n	404c92 <sinf+0x1a>
  404ce2:	2201      	movs	r2, #1
  404ce4:	9901      	ldr	r1, [sp, #4]
  404ce6:	9800      	ldr	r0, [sp, #0]
  404ce8:	f000 fdbc 	bl	405864 <__kernel_sinf>
  404cec:	e7d1      	b.n	404c92 <sinf+0x1a>
  404cee:	bf00      	nop
  404cf0:	3f490fd8 	.word	0x3f490fd8

00404cf4 <__ieee754_rem_pio2f>:
  404cf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404cf8:	4aa8      	ldr	r2, [pc, #672]	; (404f9c <__ieee754_rem_pio2f+0x2a8>)
  404cfa:	f020 4400 	bic.w	r4, r0, #2147483648	; 0x80000000
  404cfe:	4294      	cmp	r4, r2
  404d00:	b089      	sub	sp, #36	; 0x24
  404d02:	dd6e      	ble.n	404de2 <__ieee754_rem_pio2f+0xee>
  404d04:	4aa6      	ldr	r2, [pc, #664]	; (404fa0 <__ieee754_rem_pio2f+0x2ac>)
  404d06:	4294      	cmp	r4, r2
  404d08:	4606      	mov	r6, r0
  404d0a:	460d      	mov	r5, r1
  404d0c:	dc1c      	bgt.n	404d48 <__ieee754_rem_pio2f+0x54>
  404d0e:	2800      	cmp	r0, #0
  404d10:	49a4      	ldr	r1, [pc, #656]	; (404fa4 <__ieee754_rem_pio2f+0x2b0>)
  404d12:	f340 80fc 	ble.w	404f0e <__ieee754_rem_pio2f+0x21a>
  404d16:	f001 fb91 	bl	40643c <__aeabi_fsub>
  404d1a:	4ba3      	ldr	r3, [pc, #652]	; (404fa8 <__ieee754_rem_pio2f+0x2b4>)
  404d1c:	f024 040f 	bic.w	r4, r4, #15
  404d20:	429c      	cmp	r4, r3
  404d22:	4606      	mov	r6, r0
  404d24:	d06c      	beq.n	404e00 <__ieee754_rem_pio2f+0x10c>
  404d26:	49a1      	ldr	r1, [pc, #644]	; (404fac <__ieee754_rem_pio2f+0x2b8>)
  404d28:	f001 fb88 	bl	40643c <__aeabi_fsub>
  404d2c:	4601      	mov	r1, r0
  404d2e:	6028      	str	r0, [r5, #0]
  404d30:	4630      	mov	r0, r6
  404d32:	f001 fb83 	bl	40643c <__aeabi_fsub>
  404d36:	499d      	ldr	r1, [pc, #628]	; (404fac <__ieee754_rem_pio2f+0x2b8>)
  404d38:	f001 fb80 	bl	40643c <__aeabi_fsub>
  404d3c:	2701      	movs	r7, #1
  404d3e:	6068      	str	r0, [r5, #4]
  404d40:	4638      	mov	r0, r7
  404d42:	b009      	add	sp, #36	; 0x24
  404d44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404d48:	4a99      	ldr	r2, [pc, #612]	; (404fb0 <__ieee754_rem_pio2f+0x2bc>)
  404d4a:	4294      	cmp	r4, r2
  404d4c:	dd6a      	ble.n	404e24 <__ieee754_rem_pio2f+0x130>
  404d4e:	f1b4 4fff 	cmp.w	r4, #2139095040	; 0x7f800000
  404d52:	da4e      	bge.n	404df2 <__ieee754_rem_pio2f+0xfe>
  404d54:	15e7      	asrs	r7, r4, #23
  404d56:	3f86      	subs	r7, #134	; 0x86
  404d58:	eba4 54c7 	sub.w	r4, r4, r7, lsl #23
  404d5c:	4620      	mov	r0, r4
  404d5e:	f001 fe3d 	bl	4069dc <__aeabi_f2iz>
  404d62:	f001 fc21 	bl	4065a8 <__aeabi_i2f>
  404d66:	4603      	mov	r3, r0
  404d68:	4601      	mov	r1, r0
  404d6a:	4620      	mov	r0, r4
  404d6c:	9305      	str	r3, [sp, #20]
  404d6e:	f001 fb65 	bl	40643c <__aeabi_fsub>
  404d72:	f04f 4187 	mov.w	r1, #1132462080	; 0x43800000
  404d76:	f001 fc6b 	bl	406650 <__aeabi_fmul>
  404d7a:	4680      	mov	r8, r0
  404d7c:	f001 fe2e 	bl	4069dc <__aeabi_f2iz>
  404d80:	f001 fc12 	bl	4065a8 <__aeabi_i2f>
  404d84:	4601      	mov	r1, r0
  404d86:	4604      	mov	r4, r0
  404d88:	4640      	mov	r0, r8
  404d8a:	9406      	str	r4, [sp, #24]
  404d8c:	f001 fb56 	bl	40643c <__aeabi_fsub>
  404d90:	f04f 4187 	mov.w	r1, #1132462080	; 0x43800000
  404d94:	f001 fc5c 	bl	406650 <__aeabi_fmul>
  404d98:	2100      	movs	r1, #0
  404d9a:	9007      	str	r0, [sp, #28]
  404d9c:	f001 fdec 	bl	406978 <__aeabi_fcmpeq>
  404da0:	2800      	cmp	r0, #0
  404da2:	f000 80cb 	beq.w	404f3c <__ieee754_rem_pio2f+0x248>
  404da6:	4620      	mov	r0, r4
  404da8:	2100      	movs	r1, #0
  404daa:	f001 fde5 	bl	406978 <__aeabi_fcmpeq>
  404dae:	2800      	cmp	r0, #0
  404db0:	bf14      	ite	ne
  404db2:	2301      	movne	r3, #1
  404db4:	2302      	moveq	r3, #2
  404db6:	4a7f      	ldr	r2, [pc, #508]	; (404fb4 <__ieee754_rem_pio2f+0x2c0>)
  404db8:	9201      	str	r2, [sp, #4]
  404dba:	2102      	movs	r1, #2
  404dbc:	463a      	mov	r2, r7
  404dbe:	9100      	str	r1, [sp, #0]
  404dc0:	a805      	add	r0, sp, #20
  404dc2:	4629      	mov	r1, r5
  404dc4:	f000 f9c8 	bl	405158 <__kernel_rem_pio2f>
  404dc8:	2e00      	cmp	r6, #0
  404dca:	4607      	mov	r7, r0
  404dcc:	da0d      	bge.n	404dea <__ieee754_rem_pio2f+0xf6>
  404dce:	e895 000c 	ldmia.w	r5, {r2, r3}
  404dd2:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
  404dd6:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
  404dda:	4247      	negs	r7, r0
  404ddc:	602a      	str	r2, [r5, #0]
  404dde:	606b      	str	r3, [r5, #4]
  404de0:	e003      	b.n	404dea <__ieee754_rem_pio2f+0xf6>
  404de2:	2200      	movs	r2, #0
  404de4:	6008      	str	r0, [r1, #0]
  404de6:	604a      	str	r2, [r1, #4]
  404de8:	2700      	movs	r7, #0
  404dea:	4638      	mov	r0, r7
  404dec:	b009      	add	sp, #36	; 0x24
  404dee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404df2:	4601      	mov	r1, r0
  404df4:	f001 fb22 	bl	40643c <__aeabi_fsub>
  404df8:	2700      	movs	r7, #0
  404dfa:	6068      	str	r0, [r5, #4]
  404dfc:	6028      	str	r0, [r5, #0]
  404dfe:	e7f4      	b.n	404dea <__ieee754_rem_pio2f+0xf6>
  404e00:	496d      	ldr	r1, [pc, #436]	; (404fb8 <__ieee754_rem_pio2f+0x2c4>)
  404e02:	f001 fb1b 	bl	40643c <__aeabi_fsub>
  404e06:	496d      	ldr	r1, [pc, #436]	; (404fbc <__ieee754_rem_pio2f+0x2c8>)
  404e08:	4604      	mov	r4, r0
  404e0a:	f001 fb17 	bl	40643c <__aeabi_fsub>
  404e0e:	4601      	mov	r1, r0
  404e10:	6028      	str	r0, [r5, #0]
  404e12:	4620      	mov	r0, r4
  404e14:	f001 fb12 	bl	40643c <__aeabi_fsub>
  404e18:	4968      	ldr	r1, [pc, #416]	; (404fbc <__ieee754_rem_pio2f+0x2c8>)
  404e1a:	f001 fb0f 	bl	40643c <__aeabi_fsub>
  404e1e:	2701      	movs	r7, #1
  404e20:	6068      	str	r0, [r5, #4]
  404e22:	e7e2      	b.n	404dea <__ieee754_rem_pio2f+0xf6>
  404e24:	f000 fd94 	bl	405950 <fabsf>
  404e28:	4965      	ldr	r1, [pc, #404]	; (404fc0 <__ieee754_rem_pio2f+0x2cc>)
  404e2a:	4680      	mov	r8, r0
  404e2c:	f001 fc10 	bl	406650 <__aeabi_fmul>
  404e30:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
  404e34:	f001 fb04 	bl	406440 <__addsf3>
  404e38:	f001 fdd0 	bl	4069dc <__aeabi_f2iz>
  404e3c:	4607      	mov	r7, r0
  404e3e:	f001 fbb3 	bl	4065a8 <__aeabi_i2f>
  404e42:	4958      	ldr	r1, [pc, #352]	; (404fa4 <__ieee754_rem_pio2f+0x2b0>)
  404e44:	4683      	mov	fp, r0
  404e46:	f001 fc03 	bl	406650 <__aeabi_fmul>
  404e4a:	4601      	mov	r1, r0
  404e4c:	4640      	mov	r0, r8
  404e4e:	f001 faf5 	bl	40643c <__aeabi_fsub>
  404e52:	4956      	ldr	r1, [pc, #344]	; (404fac <__ieee754_rem_pio2f+0x2b8>)
  404e54:	4681      	mov	r9, r0
  404e56:	4658      	mov	r0, fp
  404e58:	f001 fbfa 	bl	406650 <__aeabi_fmul>
  404e5c:	2f1f      	cmp	r7, #31
  404e5e:	4682      	mov	sl, r0
  404e60:	dc21      	bgt.n	404ea6 <__ieee754_rem_pio2f+0x1b2>
  404e62:	4a58      	ldr	r2, [pc, #352]	; (404fc4 <__ieee754_rem_pio2f+0x2d0>)
  404e64:	1e79      	subs	r1, r7, #1
  404e66:	f024 03ff 	bic.w	r3, r4, #255	; 0xff
  404e6a:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
  404e6e:	4293      	cmp	r3, r2
  404e70:	d019      	beq.n	404ea6 <__ieee754_rem_pio2f+0x1b2>
  404e72:	4651      	mov	r1, sl
  404e74:	4648      	mov	r0, r9
  404e76:	f001 fae1 	bl	40643c <__aeabi_fsub>
  404e7a:	4680      	mov	r8, r0
  404e7c:	f8c5 8000 	str.w	r8, [r5]
  404e80:	4641      	mov	r1, r8
  404e82:	4648      	mov	r0, r9
  404e84:	f001 fada 	bl	40643c <__aeabi_fsub>
  404e88:	4651      	mov	r1, sl
  404e8a:	f001 fad7 	bl	40643c <__aeabi_fsub>
  404e8e:	2e00      	cmp	r6, #0
  404e90:	6068      	str	r0, [r5, #4]
  404e92:	daaa      	bge.n	404dea <__ieee754_rem_pio2f+0xf6>
  404e94:	f108 4800 	add.w	r8, r8, #2147483648	; 0x80000000
  404e98:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
  404e9c:	f8c5 8000 	str.w	r8, [r5]
  404ea0:	6068      	str	r0, [r5, #4]
  404ea2:	427f      	negs	r7, r7
  404ea4:	e7a1      	b.n	404dea <__ieee754_rem_pio2f+0xf6>
  404ea6:	4651      	mov	r1, sl
  404ea8:	4648      	mov	r0, r9
  404eaa:	f001 fac7 	bl	40643c <__aeabi_fsub>
  404eae:	15e2      	asrs	r2, r4, #23
  404eb0:	f3c0 53c7 	ubfx	r3, r0, #23, #8
  404eb4:	1ad3      	subs	r3, r2, r3
  404eb6:	2b08      	cmp	r3, #8
  404eb8:	4680      	mov	r8, r0
  404eba:	dddf      	ble.n	404e7c <__ieee754_rem_pio2f+0x188>
  404ebc:	493e      	ldr	r1, [pc, #248]	; (404fb8 <__ieee754_rem_pio2f+0x2c4>)
  404ebe:	9203      	str	r2, [sp, #12]
  404ec0:	4658      	mov	r0, fp
  404ec2:	f001 fbc5 	bl	406650 <__aeabi_fmul>
  404ec6:	4680      	mov	r8, r0
  404ec8:	4601      	mov	r1, r0
  404eca:	4648      	mov	r0, r9
  404ecc:	f001 fab6 	bl	40643c <__aeabi_fsub>
  404ed0:	4601      	mov	r1, r0
  404ed2:	4604      	mov	r4, r0
  404ed4:	4648      	mov	r0, r9
  404ed6:	f001 fab1 	bl	40643c <__aeabi_fsub>
  404eda:	4641      	mov	r1, r8
  404edc:	f001 faae 	bl	40643c <__aeabi_fsub>
  404ee0:	4936      	ldr	r1, [pc, #216]	; (404fbc <__ieee754_rem_pio2f+0x2c8>)
  404ee2:	4680      	mov	r8, r0
  404ee4:	4658      	mov	r0, fp
  404ee6:	f001 fbb3 	bl	406650 <__aeabi_fmul>
  404eea:	4641      	mov	r1, r8
  404eec:	f001 faa6 	bl	40643c <__aeabi_fsub>
  404ef0:	4601      	mov	r1, r0
  404ef2:	4682      	mov	sl, r0
  404ef4:	4620      	mov	r0, r4
  404ef6:	f001 faa1 	bl	40643c <__aeabi_fsub>
  404efa:	9a03      	ldr	r2, [sp, #12]
  404efc:	f3c0 53c7 	ubfx	r3, r0, #23, #8
  404f00:	1ad2      	subs	r2, r2, r3
  404f02:	2a19      	cmp	r2, #25
  404f04:	4680      	mov	r8, r0
  404f06:	dc2e      	bgt.n	404f66 <__ieee754_rem_pio2f+0x272>
  404f08:	6028      	str	r0, [r5, #0]
  404f0a:	46a1      	mov	r9, r4
  404f0c:	e7b8      	b.n	404e80 <__ieee754_rem_pio2f+0x18c>
  404f0e:	f001 fa97 	bl	406440 <__addsf3>
  404f12:	4b25      	ldr	r3, [pc, #148]	; (404fa8 <__ieee754_rem_pio2f+0x2b4>)
  404f14:	f024 040f 	bic.w	r4, r4, #15
  404f18:	429c      	cmp	r4, r3
  404f1a:	4606      	mov	r6, r0
  404f1c:	d010      	beq.n	404f40 <__ieee754_rem_pio2f+0x24c>
  404f1e:	4923      	ldr	r1, [pc, #140]	; (404fac <__ieee754_rem_pio2f+0x2b8>)
  404f20:	f001 fa8e 	bl	406440 <__addsf3>
  404f24:	4601      	mov	r1, r0
  404f26:	6028      	str	r0, [r5, #0]
  404f28:	4630      	mov	r0, r6
  404f2a:	f001 fa87 	bl	40643c <__aeabi_fsub>
  404f2e:	491f      	ldr	r1, [pc, #124]	; (404fac <__ieee754_rem_pio2f+0x2b8>)
  404f30:	f001 fa86 	bl	406440 <__addsf3>
  404f34:	f04f 37ff 	mov.w	r7, #4294967295
  404f38:	6068      	str	r0, [r5, #4]
  404f3a:	e756      	b.n	404dea <__ieee754_rem_pio2f+0xf6>
  404f3c:	2303      	movs	r3, #3
  404f3e:	e73a      	b.n	404db6 <__ieee754_rem_pio2f+0xc2>
  404f40:	491d      	ldr	r1, [pc, #116]	; (404fb8 <__ieee754_rem_pio2f+0x2c4>)
  404f42:	f001 fa7d 	bl	406440 <__addsf3>
  404f46:	491d      	ldr	r1, [pc, #116]	; (404fbc <__ieee754_rem_pio2f+0x2c8>)
  404f48:	4604      	mov	r4, r0
  404f4a:	f001 fa79 	bl	406440 <__addsf3>
  404f4e:	4601      	mov	r1, r0
  404f50:	6028      	str	r0, [r5, #0]
  404f52:	4620      	mov	r0, r4
  404f54:	f001 fa72 	bl	40643c <__aeabi_fsub>
  404f58:	4918      	ldr	r1, [pc, #96]	; (404fbc <__ieee754_rem_pio2f+0x2c8>)
  404f5a:	f001 fa71 	bl	406440 <__addsf3>
  404f5e:	f04f 37ff 	mov.w	r7, #4294967295
  404f62:	6068      	str	r0, [r5, #4]
  404f64:	e741      	b.n	404dea <__ieee754_rem_pio2f+0xf6>
  404f66:	4918      	ldr	r1, [pc, #96]	; (404fc8 <__ieee754_rem_pio2f+0x2d4>)
  404f68:	4658      	mov	r0, fp
  404f6a:	f001 fb71 	bl	406650 <__aeabi_fmul>
  404f6e:	4601      	mov	r1, r0
  404f70:	4680      	mov	r8, r0
  404f72:	4620      	mov	r0, r4
  404f74:	f001 fa62 	bl	40643c <__aeabi_fsub>
  404f78:	4601      	mov	r1, r0
  404f7a:	4681      	mov	r9, r0
  404f7c:	4620      	mov	r0, r4
  404f7e:	f001 fa5d 	bl	40643c <__aeabi_fsub>
  404f82:	4641      	mov	r1, r8
  404f84:	f001 fa5a 	bl	40643c <__aeabi_fsub>
  404f88:	4910      	ldr	r1, [pc, #64]	; (404fcc <__ieee754_rem_pio2f+0x2d8>)
  404f8a:	4604      	mov	r4, r0
  404f8c:	4658      	mov	r0, fp
  404f8e:	f001 fb5f 	bl	406650 <__aeabi_fmul>
  404f92:	4621      	mov	r1, r4
  404f94:	f001 fa52 	bl	40643c <__aeabi_fsub>
  404f98:	4682      	mov	sl, r0
  404f9a:	e76a      	b.n	404e72 <__ieee754_rem_pio2f+0x17e>
  404f9c:	3f490fd8 	.word	0x3f490fd8
  404fa0:	4016cbe3 	.word	0x4016cbe3
  404fa4:	3fc90f80 	.word	0x3fc90f80
  404fa8:	3fc90fd0 	.word	0x3fc90fd0
  404fac:	37354443 	.word	0x37354443
  404fb0:	43490f80 	.word	0x43490f80
  404fb4:	00414748 	.word	0x00414748
  404fb8:	37354400 	.word	0x37354400
  404fbc:	2e85a308 	.word	0x2e85a308
  404fc0:	3f22f984 	.word	0x3f22f984
  404fc4:	004146c8 	.word	0x004146c8
  404fc8:	2e85a300 	.word	0x2e85a300
  404fcc:	248d3132 	.word	0x248d3132

00404fd0 <__kernel_cosf>:
  404fd0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  404fd4:	f020 4400 	bic.w	r4, r0, #2147483648	; 0x80000000
  404fd8:	f1b4 5f48 	cmp.w	r4, #838860800	; 0x32000000
  404fdc:	4606      	mov	r6, r0
  404fde:	460f      	mov	r7, r1
  404fe0:	da49      	bge.n	405076 <__kernel_cosf+0xa6>
  404fe2:	f001 fcfb 	bl	4069dc <__aeabi_f2iz>
  404fe6:	2800      	cmp	r0, #0
  404fe8:	f000 809d 	beq.w	405126 <__kernel_cosf+0x156>
  404fec:	4631      	mov	r1, r6
  404fee:	4630      	mov	r0, r6
  404ff0:	f001 fb2e 	bl	406650 <__aeabi_fmul>
  404ff4:	494e      	ldr	r1, [pc, #312]	; (405130 <__kernel_cosf+0x160>)
  404ff6:	4605      	mov	r5, r0
  404ff8:	f001 fb2a 	bl	406650 <__aeabi_fmul>
  404ffc:	494d      	ldr	r1, [pc, #308]	; (405134 <__kernel_cosf+0x164>)
  404ffe:	f001 fa1f 	bl	406440 <__addsf3>
  405002:	4629      	mov	r1, r5
  405004:	f001 fb24 	bl	406650 <__aeabi_fmul>
  405008:	494b      	ldr	r1, [pc, #300]	; (405138 <__kernel_cosf+0x168>)
  40500a:	f001 fa17 	bl	40643c <__aeabi_fsub>
  40500e:	4629      	mov	r1, r5
  405010:	f001 fb1e 	bl	406650 <__aeabi_fmul>
  405014:	4949      	ldr	r1, [pc, #292]	; (40513c <__kernel_cosf+0x16c>)
  405016:	f001 fa13 	bl	406440 <__addsf3>
  40501a:	4629      	mov	r1, r5
  40501c:	f001 fb18 	bl	406650 <__aeabi_fmul>
  405020:	4947      	ldr	r1, [pc, #284]	; (405140 <__kernel_cosf+0x170>)
  405022:	f001 fa0b 	bl	40643c <__aeabi_fsub>
  405026:	4629      	mov	r1, r5
  405028:	f001 fb12 	bl	406650 <__aeabi_fmul>
  40502c:	4945      	ldr	r1, [pc, #276]	; (405144 <__kernel_cosf+0x174>)
  40502e:	f001 fa07 	bl	406440 <__addsf3>
  405032:	4629      	mov	r1, r5
  405034:	f001 fb0c 	bl	406650 <__aeabi_fmul>
  405038:	4680      	mov	r8, r0
  40503a:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
  40503e:	4628      	mov	r0, r5
  405040:	f001 fb06 	bl	406650 <__aeabi_fmul>
  405044:	4641      	mov	r1, r8
  405046:	4604      	mov	r4, r0
  405048:	4628      	mov	r0, r5
  40504a:	f001 fb01 	bl	406650 <__aeabi_fmul>
  40504e:	4639      	mov	r1, r7
  405050:	4605      	mov	r5, r0
  405052:	4630      	mov	r0, r6
  405054:	f001 fafc 	bl	406650 <__aeabi_fmul>
  405058:	4601      	mov	r1, r0
  40505a:	4628      	mov	r0, r5
  40505c:	f001 f9ee 	bl	40643c <__aeabi_fsub>
  405060:	4601      	mov	r1, r0
  405062:	4620      	mov	r0, r4
  405064:	f001 f9ea 	bl	40643c <__aeabi_fsub>
  405068:	4601      	mov	r1, r0
  40506a:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  40506e:	f001 f9e5 	bl	40643c <__aeabi_fsub>
  405072:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405076:	4601      	mov	r1, r0
  405078:	f001 faea 	bl	406650 <__aeabi_fmul>
  40507c:	492c      	ldr	r1, [pc, #176]	; (405130 <__kernel_cosf+0x160>)
  40507e:	4605      	mov	r5, r0
  405080:	f001 fae6 	bl	406650 <__aeabi_fmul>
  405084:	492b      	ldr	r1, [pc, #172]	; (405134 <__kernel_cosf+0x164>)
  405086:	f001 f9db 	bl	406440 <__addsf3>
  40508a:	4629      	mov	r1, r5
  40508c:	f001 fae0 	bl	406650 <__aeabi_fmul>
  405090:	4929      	ldr	r1, [pc, #164]	; (405138 <__kernel_cosf+0x168>)
  405092:	f001 f9d3 	bl	40643c <__aeabi_fsub>
  405096:	4629      	mov	r1, r5
  405098:	f001 fada 	bl	406650 <__aeabi_fmul>
  40509c:	4927      	ldr	r1, [pc, #156]	; (40513c <__kernel_cosf+0x16c>)
  40509e:	f001 f9cf 	bl	406440 <__addsf3>
  4050a2:	4629      	mov	r1, r5
  4050a4:	f001 fad4 	bl	406650 <__aeabi_fmul>
  4050a8:	4925      	ldr	r1, [pc, #148]	; (405140 <__kernel_cosf+0x170>)
  4050aa:	f001 f9c7 	bl	40643c <__aeabi_fsub>
  4050ae:	4629      	mov	r1, r5
  4050b0:	f001 face 	bl	406650 <__aeabi_fmul>
  4050b4:	4923      	ldr	r1, [pc, #140]	; (405144 <__kernel_cosf+0x174>)
  4050b6:	f001 f9c3 	bl	406440 <__addsf3>
  4050ba:	4629      	mov	r1, r5
  4050bc:	f001 fac8 	bl	406650 <__aeabi_fmul>
  4050c0:	4b21      	ldr	r3, [pc, #132]	; (405148 <__kernel_cosf+0x178>)
  4050c2:	429c      	cmp	r4, r3
  4050c4:	4680      	mov	r8, r0
  4050c6:	ddb8      	ble.n	40503a <__kernel_cosf+0x6a>
  4050c8:	4b20      	ldr	r3, [pc, #128]	; (40514c <__kernel_cosf+0x17c>)
  4050ca:	429c      	cmp	r4, r3
  4050cc:	dc27      	bgt.n	40511e <__kernel_cosf+0x14e>
  4050ce:	f104 447f 	add.w	r4, r4, #4278190080	; 0xff000000
  4050d2:	4621      	mov	r1, r4
  4050d4:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  4050d8:	f001 f9b0 	bl	40643c <__aeabi_fsub>
  4050dc:	4681      	mov	r9, r0
  4050de:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
  4050e2:	4628      	mov	r0, r5
  4050e4:	f001 fab4 	bl	406650 <__aeabi_fmul>
  4050e8:	4621      	mov	r1, r4
  4050ea:	f001 f9a7 	bl	40643c <__aeabi_fsub>
  4050ee:	4641      	mov	r1, r8
  4050f0:	4604      	mov	r4, r0
  4050f2:	4628      	mov	r0, r5
  4050f4:	f001 faac 	bl	406650 <__aeabi_fmul>
  4050f8:	4639      	mov	r1, r7
  4050fa:	4605      	mov	r5, r0
  4050fc:	4630      	mov	r0, r6
  4050fe:	f001 faa7 	bl	406650 <__aeabi_fmul>
  405102:	4601      	mov	r1, r0
  405104:	4628      	mov	r0, r5
  405106:	f001 f999 	bl	40643c <__aeabi_fsub>
  40510a:	4601      	mov	r1, r0
  40510c:	4620      	mov	r0, r4
  40510e:	f001 f995 	bl	40643c <__aeabi_fsub>
  405112:	4601      	mov	r1, r0
  405114:	4648      	mov	r0, r9
  405116:	f001 f991 	bl	40643c <__aeabi_fsub>
  40511a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40511e:	f8df 9034 	ldr.w	r9, [pc, #52]	; 405154 <__kernel_cosf+0x184>
  405122:	4c0b      	ldr	r4, [pc, #44]	; (405150 <__kernel_cosf+0x180>)
  405124:	e7db      	b.n	4050de <__kernel_cosf+0x10e>
  405126:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  40512a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40512e:	bf00      	nop
  405130:	ad47d74e 	.word	0xad47d74e
  405134:	310f74f6 	.word	0x310f74f6
  405138:	3493f27c 	.word	0x3493f27c
  40513c:	37d00d01 	.word	0x37d00d01
  405140:	3ab60b61 	.word	0x3ab60b61
  405144:	3d2aaaab 	.word	0x3d2aaaab
  405148:	3e999999 	.word	0x3e999999
  40514c:	3f480000 	.word	0x3f480000
  405150:	3e900000 	.word	0x3e900000
  405154:	3f380000 	.word	0x3f380000

00405158 <__kernel_rem_pio2f>:
  405158:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40515c:	b0dd      	sub	sp, #372	; 0x174
  40515e:	4c90      	ldr	r4, [pc, #576]	; (4053a0 <__kernel_rem_pio2f+0x248>)
  405160:	9308      	str	r3, [sp, #32]
  405162:	3b01      	subs	r3, #1
  405164:	9301      	str	r3, [sp, #4]
  405166:	1ed3      	subs	r3, r2, #3
  405168:	bf48      	it	mi
  40516a:	1d13      	addmi	r3, r2, #4
  40516c:	9d66      	ldr	r5, [sp, #408]	; 0x198
  40516e:	9107      	str	r1, [sp, #28]
  405170:	10db      	asrs	r3, r3, #3
  405172:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  405176:	f854 4025 	ldr.w	r4, [r4, r5, lsl #2]
  40517a:	9309      	str	r3, [sp, #36]	; 0x24
  40517c:	4619      	mov	r1, r3
  40517e:	3301      	adds	r3, #1
  405180:	eba2 03c3 	sub.w	r3, r2, r3, lsl #3
  405184:	9405      	str	r4, [sp, #20]
  405186:	9a01      	ldr	r2, [sp, #4]
  405188:	9304      	str	r3, [sp, #16]
  40518a:	9b05      	ldr	r3, [sp, #20]
  40518c:	9002      	str	r0, [sp, #8]
  40518e:	189c      	adds	r4, r3, r2
  405190:	eba1 0602 	sub.w	r6, r1, r2
  405194:	d417      	bmi.n	4051c6 <__kernel_rem_pio2f+0x6e>
  405196:	4434      	add	r4, r6
  405198:	2500      	movs	r5, #0
  40519a:	3401      	adds	r4, #1
  40519c:	af1f      	add	r7, sp, #124	; 0x7c
  40519e:	f8dd 819c 	ldr.w	r8, [sp, #412]	; 0x19c
  4051a2:	e008      	b.n	4051b6 <__kernel_rem_pio2f+0x5e>
  4051a4:	f858 0026 	ldr.w	r0, [r8, r6, lsl #2]
  4051a8:	f001 f9fe 	bl	4065a8 <__aeabi_i2f>
  4051ac:	3601      	adds	r6, #1
  4051ae:	42a6      	cmp	r6, r4
  4051b0:	f847 0f04 	str.w	r0, [r7, #4]!
  4051b4:	d007      	beq.n	4051c6 <__kernel_rem_pio2f+0x6e>
  4051b6:	2e00      	cmp	r6, #0
  4051b8:	daf4      	bge.n	4051a4 <__kernel_rem_pio2f+0x4c>
  4051ba:	3601      	adds	r6, #1
  4051bc:	4628      	mov	r0, r5
  4051be:	42a6      	cmp	r6, r4
  4051c0:	f847 0f04 	str.w	r0, [r7, #4]!
  4051c4:	d1f7      	bne.n	4051b6 <__kernel_rem_pio2f+0x5e>
  4051c6:	9b05      	ldr	r3, [sp, #20]
  4051c8:	2b00      	cmp	r3, #0
  4051ca:	db28      	blt.n	40521e <__kernel_rem_pio2f+0xc6>
  4051cc:	9b08      	ldr	r3, [sp, #32]
  4051ce:	009e      	lsls	r6, r3, #2
  4051d0:	9b02      	ldr	r3, [sp, #8]
  4051d2:	1f35      	subs	r5, r6, #4
  4051d4:	441d      	add	r5, r3
  4051d6:	ab20      	add	r3, sp, #128	; 0x80
  4051d8:	441e      	add	r6, r3
  4051da:	9b05      	ldr	r3, [sp, #20]
  4051dc:	aa48      	add	r2, sp, #288	; 0x120
  4051de:	f04f 0900 	mov.w	r9, #0
  4051e2:	eb02 0883 	add.w	r8, r2, r3, lsl #2
  4051e6:	af47      	add	r7, sp, #284	; 0x11c
  4051e8:	9b01      	ldr	r3, [sp, #4]
  4051ea:	2b00      	cmp	r3, #0
  4051ec:	f2c0 82b9 	blt.w	405762 <__kernel_rem_pio2f+0x60a>
  4051f0:	9b02      	ldr	r3, [sp, #8]
  4051f2:	46b3      	mov	fp, r6
  4051f4:	1f1c      	subs	r4, r3, #4
  4051f6:	46ca      	mov	sl, r9
  4051f8:	f85b 1d04 	ldr.w	r1, [fp, #-4]!
  4051fc:	f854 0f04 	ldr.w	r0, [r4, #4]!
  405200:	f001 fa26 	bl	406650 <__aeabi_fmul>
  405204:	4601      	mov	r1, r0
  405206:	4650      	mov	r0, sl
  405208:	f001 f91a 	bl	406440 <__addsf3>
  40520c:	42ac      	cmp	r4, r5
  40520e:	4682      	mov	sl, r0
  405210:	d1f2      	bne.n	4051f8 <__kernel_rem_pio2f+0xa0>
  405212:	f847 af04 	str.w	sl, [r7, #4]!
  405216:	4547      	cmp	r7, r8
  405218:	f106 0604 	add.w	r6, r6, #4
  40521c:	d1e4      	bne.n	4051e8 <__kernel_rem_pio2f+0x90>
  40521e:	9805      	ldr	r0, [sp, #20]
  405220:	9908      	ldr	r1, [sp, #32]
  405222:	9c02      	ldr	r4, [sp, #8]
  405224:	f06f 4240 	mvn.w	r2, #3221225472	; 0xc0000000
  405228:	4603      	mov	r3, r0
  40522a:	4413      	add	r3, r2
  40522c:	009b      	lsls	r3, r3, #2
  40522e:	440a      	add	r2, r1
  405230:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
  405234:	1f19      	subs	r1, r3, #4
  405236:	eb04 0582 	add.w	r5, r4, r2, lsl #2
  40523a:	4453      	add	r3, sl
  40523c:	eb0a 0201 	add.w	r2, sl, r1
  405240:	920a      	str	r2, [sp, #40]	; 0x28
  405242:	930b      	str	r3, [sp, #44]	; 0x2c
  405244:	4680      	mov	r8, r0
  405246:	ea4f 0388 	mov.w	r3, r8, lsl #2
  40524a:	aa5c      	add	r2, sp, #368	; 0x170
  40524c:	9303      	str	r3, [sp, #12]
  40524e:	18d3      	adds	r3, r2, r3
  405250:	f1b8 0f00 	cmp.w	r8, #0
  405254:	f853 9c50 	ldr.w	r9, [r3, #-80]
  405258:	dd22      	ble.n	4052a0 <__kernel_rem_pio2f+0x148>
  40525a:	eb02 0488 	add.w	r4, r2, r8, lsl #2
  40525e:	3c54      	subs	r4, #84	; 0x54
  405260:	ae0b      	add	r6, sp, #44	; 0x2c
  405262:	af47      	add	r7, sp, #284	; 0x11c
  405264:	f04f 516e 	mov.w	r1, #998244352	; 0x3b800000
  405268:	4648      	mov	r0, r9
  40526a:	f001 f9f1 	bl	406650 <__aeabi_fmul>
  40526e:	f001 fbb5 	bl	4069dc <__aeabi_f2iz>
  405272:	f001 f999 	bl	4065a8 <__aeabi_i2f>
  405276:	f04f 4187 	mov.w	r1, #1132462080	; 0x43800000
  40527a:	4683      	mov	fp, r0
  40527c:	f001 f9e8 	bl	406650 <__aeabi_fmul>
  405280:	4601      	mov	r1, r0
  405282:	4648      	mov	r0, r9
  405284:	f001 f8da 	bl	40643c <__aeabi_fsub>
  405288:	f001 fba8 	bl	4069dc <__aeabi_f2iz>
  40528c:	f854 1904 	ldr.w	r1, [r4], #-4
  405290:	f846 0f04 	str.w	r0, [r6, #4]!
  405294:	4658      	mov	r0, fp
  405296:	f001 f8d3 	bl	406440 <__addsf3>
  40529a:	42bc      	cmp	r4, r7
  40529c:	4681      	mov	r9, r0
  40529e:	d1e1      	bne.n	405264 <__kernel_rem_pio2f+0x10c>
  4052a0:	9e04      	ldr	r6, [sp, #16]
  4052a2:	4648      	mov	r0, r9
  4052a4:	4631      	mov	r1, r6
  4052a6:	f000 fb9d 	bl	4059e4 <scalbnf>
  4052aa:	f04f 5178 	mov.w	r1, #1040187392	; 0x3e000000
  4052ae:	4604      	mov	r4, r0
  4052b0:	f001 f9ce 	bl	406650 <__aeabi_fmul>
  4052b4:	f000 fb50 	bl	405958 <floorf>
  4052b8:	f04f 4182 	mov.w	r1, #1090519040	; 0x41000000
  4052bc:	f001 f9c8 	bl	406650 <__aeabi_fmul>
  4052c0:	4601      	mov	r1, r0
  4052c2:	4620      	mov	r0, r4
  4052c4:	f001 f8ba 	bl	40643c <__aeabi_fsub>
  4052c8:	4604      	mov	r4, r0
  4052ca:	f001 fb87 	bl	4069dc <__aeabi_f2iz>
  4052ce:	4681      	mov	r9, r0
  4052d0:	9006      	str	r0, [sp, #24]
  4052d2:	f001 f969 	bl	4065a8 <__aeabi_i2f>
  4052d6:	4601      	mov	r1, r0
  4052d8:	4620      	mov	r0, r4
  4052da:	f001 f8af 	bl	40643c <__aeabi_fsub>
  4052de:	2e00      	cmp	r6, #0
  4052e0:	4607      	mov	r7, r0
  4052e2:	f340 80e6 	ble.w	4054b2 <__kernel_rem_pio2f+0x35a>
  4052e6:	f108 31ff 	add.w	r1, r8, #4294967295
  4052ea:	f1c6 0308 	rsb	r3, r6, #8
  4052ee:	f85a 2021 	ldr.w	r2, [sl, r1, lsl #2]
  4052f2:	fa42 f003 	asr.w	r0, r2, r3
  4052f6:	fa00 f303 	lsl.w	r3, r0, r3
  4052fa:	1ad3      	subs	r3, r2, r3
  4052fc:	464a      	mov	r2, r9
  4052fe:	f1c6 0407 	rsb	r4, r6, #7
  405302:	4402      	add	r2, r0
  405304:	f84a 3021 	str.w	r3, [sl, r1, lsl #2]
  405308:	9206      	str	r2, [sp, #24]
  40530a:	fa43 f404 	asr.w	r4, r3, r4
  40530e:	2c00      	cmp	r4, #0
  405310:	dd5b      	ble.n	4053ca <__kernel_rem_pio2f+0x272>
  405312:	9b06      	ldr	r3, [sp, #24]
  405314:	f1b8 0f00 	cmp.w	r8, #0
  405318:	f103 0301 	add.w	r3, r3, #1
  40531c:	9306      	str	r3, [sp, #24]
  40531e:	f340 823b 	ble.w	405798 <__kernel_rem_pio2f+0x640>
  405322:	f8da 6000 	ldr.w	r6, [sl]
  405326:	2e00      	cmp	r6, #0
  405328:	f040 8294 	bne.w	405854 <__kernel_rem_pio2f+0x6fc>
  40532c:	f1b8 0f01 	cmp.w	r8, #1
  405330:	f340 8255 	ble.w	4057de <__kernel_rem_pio2f+0x686>
  405334:	4652      	mov	r2, sl
  405336:	2301      	movs	r3, #1
  405338:	f852 6f04 	ldr.w	r6, [r2, #4]!
  40533c:	2e00      	cmp	r6, #0
  40533e:	f000 824a 	beq.w	4057d6 <__kernel_rem_pio2f+0x67e>
  405342:	1c59      	adds	r1, r3, #1
  405344:	f5c6 7680 	rsb	r6, r6, #256	; 0x100
  405348:	4588      	cmp	r8, r1
  40534a:	f84a 6023 	str.w	r6, [sl, r3, lsl #2]
  40534e:	dd14      	ble.n	40537a <__kernel_rem_pio2f+0x222>
  405350:	f85a 2021 	ldr.w	r2, [sl, r1, lsl #2]
  405354:	3302      	adds	r3, #2
  405356:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
  40535a:	4598      	cmp	r8, r3
  40535c:	f84a 2021 	str.w	r2, [sl, r1, lsl #2]
  405360:	dd0b      	ble.n	40537a <__kernel_rem_pio2f+0x222>
  405362:	9a03      	ldr	r2, [sp, #12]
  405364:	4452      	add	r2, sl
  405366:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
  40536a:	4691      	mov	r9, r2
  40536c:	681a      	ldr	r2, [r3, #0]
  40536e:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
  405372:	f843 2b04 	str.w	r2, [r3], #4
  405376:	454b      	cmp	r3, r9
  405378:	d1f8      	bne.n	40536c <__kernel_rem_pio2f+0x214>
  40537a:	9b04      	ldr	r3, [sp, #16]
  40537c:	2b00      	cmp	r3, #0
  40537e:	dd11      	ble.n	4053a4 <__kernel_rem_pio2f+0x24c>
  405380:	9b04      	ldr	r3, [sp, #16]
  405382:	2b01      	cmp	r3, #1
  405384:	f04f 0601 	mov.w	r6, #1
  405388:	f040 820e 	bne.w	4057a8 <__kernel_rem_pio2f+0x650>
  40538c:	f108 32ff 	add.w	r2, r8, #4294967295
  405390:	f85a 3022 	ldr.w	r3, [sl, r2, lsl #2]
  405394:	f003 037f 	and.w	r3, r3, #127	; 0x7f
  405398:	f84a 3022 	str.w	r3, [sl, r2, lsl #2]
  40539c:	e20e      	b.n	4057bc <__kernel_rem_pio2f+0x664>
  40539e:	bf00      	nop
  4053a0:	00414a8c 	.word	0x00414a8c
  4053a4:	2c02      	cmp	r4, #2
  4053a6:	d110      	bne.n	4053ca <__kernel_rem_pio2f+0x272>
  4053a8:	4639      	mov	r1, r7
  4053aa:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  4053ae:	f001 f845 	bl	40643c <__aeabi_fsub>
  4053b2:	4607      	mov	r7, r0
  4053b4:	9904      	ldr	r1, [sp, #16]
  4053b6:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  4053ba:	f000 fb13 	bl	4059e4 <scalbnf>
  4053be:	4601      	mov	r1, r0
  4053c0:	4638      	mov	r0, r7
  4053c2:	f001 f83b 	bl	40643c <__aeabi_fsub>
  4053c6:	2402      	movs	r4, #2
  4053c8:	4607      	mov	r7, r0
  4053ca:	2100      	movs	r1, #0
  4053cc:	4638      	mov	r0, r7
  4053ce:	f001 fad3 	bl	406978 <__aeabi_fcmpeq>
  4053d2:	2800      	cmp	r0, #0
  4053d4:	f000 8083 	beq.w	4054de <__kernel_rem_pio2f+0x386>
  4053d8:	9b05      	ldr	r3, [sp, #20]
  4053da:	f108 37ff 	add.w	r7, r8, #4294967295
  4053de:	42bb      	cmp	r3, r7
  4053e0:	dc0f      	bgt.n	405402 <__kernel_rem_pio2f+0x2aa>
  4053e2:	f108 4380 	add.w	r3, r8, #1073741824	; 0x40000000
  4053e6:	3b01      	subs	r3, #1
  4053e8:	980b      	ldr	r0, [sp, #44]	; 0x2c
  4053ea:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
  4053ee:	2200      	movs	r2, #0
  4053f0:	f853 1904 	ldr.w	r1, [r3], #-4
  4053f4:	4283      	cmp	r3, r0
  4053f6:	ea42 0201 	orr.w	r2, r2, r1
  4053fa:	d1f9      	bne.n	4053f0 <__kernel_rem_pio2f+0x298>
  4053fc:	2a00      	cmp	r2, #0
  4053fe:	f040 809d 	bne.w	40553c <__kernel_rem_pio2f+0x3e4>
  405402:	9b05      	ldr	r3, [sp, #20]
  405404:	3b01      	subs	r3, #1
  405406:	f85a 3023 	ldr.w	r3, [sl, r3, lsl #2]
  40540a:	2b00      	cmp	r3, #0
  40540c:	f040 81f4 	bne.w	4057f8 <__kernel_rem_pio2f+0x6a0>
  405410:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  405412:	2301      	movs	r3, #1
  405414:	f852 1904 	ldr.w	r1, [r2], #-4
  405418:	3301      	adds	r3, #1
  40541a:	2900      	cmp	r1, #0
  40541c:	d0fa      	beq.n	405414 <__kernel_rem_pio2f+0x2bc>
  40541e:	4443      	add	r3, r8
  405420:	461a      	mov	r2, r3
  405422:	9306      	str	r3, [sp, #24]
  405424:	f108 0301 	add.w	r3, r8, #1
  405428:	4293      	cmp	r3, r2
  40542a:	dc37      	bgt.n	40549c <__kernel_rem_pio2f+0x344>
  40542c:	9908      	ldr	r1, [sp, #32]
  40542e:	9a09      	ldr	r2, [sp, #36]	; 0x24
  405430:	eb01 0708 	add.w	r7, r1, r8
  405434:	a920      	add	r1, sp, #128	; 0x80
  405436:	eb01 0787 	add.w	r7, r1, r7, lsl #2
  40543a:	9906      	ldr	r1, [sp, #24]
  40543c:	189e      	adds	r6, r3, r2
  40543e:	eb01 0902 	add.w	r9, r1, r2
  405442:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
  405446:	9a67      	ldr	r2, [sp, #412]	; 0x19c
  405448:	3e01      	subs	r6, #1
  40544a:	eb02 0686 	add.w	r6, r2, r6, lsl #2
  40544e:	aa48      	add	r2, sp, #288	; 0x120
  405450:	eb02 0883 	add.w	r8, r2, r3, lsl #2
  405454:	9b67      	ldr	r3, [sp, #412]	; 0x19c
  405456:	eb03 0389 	add.w	r3, r3, r9, lsl #2
  40545a:	9303      	str	r3, [sp, #12]
  40545c:	f856 0f04 	ldr.w	r0, [r6, #4]!
  405460:	f001 f8a2 	bl	4065a8 <__aeabi_i2f>
  405464:	9b01      	ldr	r3, [sp, #4]
  405466:	f847 0b04 	str.w	r0, [r7], #4
  40546a:	2b00      	cmp	r3, #0
  40546c:	db19      	blt.n	4054a2 <__kernel_rem_pio2f+0x34a>
  40546e:	9b02      	ldr	r3, [sp, #8]
  405470:	46bb      	mov	fp, r7
  405472:	1f1c      	subs	r4, r3, #4
  405474:	f04f 0900 	mov.w	r9, #0
  405478:	f85b 1d04 	ldr.w	r1, [fp, #-4]!
  40547c:	f854 0f04 	ldr.w	r0, [r4, #4]!
  405480:	f001 f8e6 	bl	406650 <__aeabi_fmul>
  405484:	4601      	mov	r1, r0
  405486:	4648      	mov	r0, r9
  405488:	f000 ffda 	bl	406440 <__addsf3>
  40548c:	42ac      	cmp	r4, r5
  40548e:	4681      	mov	r9, r0
  405490:	d1f2      	bne.n	405478 <__kernel_rem_pio2f+0x320>
  405492:	9b03      	ldr	r3, [sp, #12]
  405494:	f848 9b04 	str.w	r9, [r8], #4
  405498:	429e      	cmp	r6, r3
  40549a:	d1df      	bne.n	40545c <__kernel_rem_pio2f+0x304>
  40549c:	f8dd 8018 	ldr.w	r8, [sp, #24]
  4054a0:	e6d1      	b.n	405246 <__kernel_rem_pio2f+0xee>
  4054a2:	9b03      	ldr	r3, [sp, #12]
  4054a4:	f04f 0900 	mov.w	r9, #0
  4054a8:	429e      	cmp	r6, r3
  4054aa:	f848 9b04 	str.w	r9, [r8], #4
  4054ae:	d1d5      	bne.n	40545c <__kernel_rem_pio2f+0x304>
  4054b0:	e7f4      	b.n	40549c <__kernel_rem_pio2f+0x344>
  4054b2:	d105      	bne.n	4054c0 <__kernel_rem_pio2f+0x368>
  4054b4:	f108 33ff 	add.w	r3, r8, #4294967295
  4054b8:	f85a 4023 	ldr.w	r4, [sl, r3, lsl #2]
  4054bc:	1224      	asrs	r4, r4, #8
  4054be:	e726      	b.n	40530e <__kernel_rem_pio2f+0x1b6>
  4054c0:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
  4054c4:	f001 fa76 	bl	4069b4 <__aeabi_fcmpge>
  4054c8:	2800      	cmp	r0, #0
  4054ca:	f040 8153 	bne.w	405774 <__kernel_rem_pio2f+0x61c>
  4054ce:	4604      	mov	r4, r0
  4054d0:	2100      	movs	r1, #0
  4054d2:	4638      	mov	r0, r7
  4054d4:	f001 fa50 	bl	406978 <__aeabi_fcmpeq>
  4054d8:	2800      	cmp	r0, #0
  4054da:	f47f af7d 	bne.w	4053d8 <__kernel_rem_pio2f+0x280>
  4054de:	9e04      	ldr	r6, [sp, #16]
  4054e0:	4638      	mov	r0, r7
  4054e2:	4271      	negs	r1, r6
  4054e4:	f000 fa7e 	bl	4059e4 <scalbnf>
  4054e8:	f04f 4187 	mov.w	r1, #1132462080	; 0x43800000
  4054ec:	46a1      	mov	r9, r4
  4054ee:	4604      	mov	r4, r0
  4054f0:	f001 fa60 	bl	4069b4 <__aeabi_fcmpge>
  4054f4:	2800      	cmp	r0, #0
  4054f6:	f000 818d 	beq.w	405814 <__kernel_rem_pio2f+0x6bc>
  4054fa:	f04f 516e 	mov.w	r1, #998244352	; 0x3b800000
  4054fe:	4620      	mov	r0, r4
  405500:	f001 f8a6 	bl	406650 <__aeabi_fmul>
  405504:	f001 fa6a 	bl	4069dc <__aeabi_f2iz>
  405508:	f001 f84e 	bl	4065a8 <__aeabi_i2f>
  40550c:	f04f 4187 	mov.w	r1, #1132462080	; 0x43800000
  405510:	4605      	mov	r5, r0
  405512:	f001 f89d 	bl	406650 <__aeabi_fmul>
  405516:	4601      	mov	r1, r0
  405518:	4620      	mov	r0, r4
  40551a:	f000 ff8f 	bl	40643c <__aeabi_fsub>
  40551e:	f001 fa5d 	bl	4069dc <__aeabi_f2iz>
  405522:	f84a 0028 	str.w	r0, [sl, r8, lsl #2]
  405526:	4628      	mov	r0, r5
  405528:	f001 fa58 	bl	4069dc <__aeabi_f2iz>
  40552c:	f108 0701 	add.w	r7, r8, #1
  405530:	4633      	mov	r3, r6
  405532:	3308      	adds	r3, #8
  405534:	9304      	str	r3, [sp, #16]
  405536:	f84a 0027 	str.w	r0, [sl, r7, lsl #2]
  40553a:	e012      	b.n	405562 <__kernel_rem_pio2f+0x40a>
  40553c:	9a04      	ldr	r2, [sp, #16]
  40553e:	f85a 3027 	ldr.w	r3, [sl, r7, lsl #2]
  405542:	3a08      	subs	r2, #8
  405544:	46a1      	mov	r9, r4
  405546:	9204      	str	r2, [sp, #16]
  405548:	b95b      	cbnz	r3, 405562 <__kernel_rem_pio2f+0x40a>
  40554a:	f107 4380 	add.w	r3, r7, #1073741824	; 0x40000000
  40554e:	3b01      	subs	r3, #1
  405550:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
  405554:	f853 1904 	ldr.w	r1, [r3], #-4
  405558:	3f01      	subs	r7, #1
  40555a:	3a08      	subs	r2, #8
  40555c:	2900      	cmp	r1, #0
  40555e:	d0f9      	beq.n	405554 <__kernel_rem_pio2f+0x3fc>
  405560:	9204      	str	r2, [sp, #16]
  405562:	9904      	ldr	r1, [sp, #16]
  405564:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  405568:	f000 fa3c 	bl	4059e4 <scalbnf>
  40556c:	2f00      	cmp	r7, #0
  40556e:	4604      	mov	r4, r0
  405570:	f2c0 815c 	blt.w	40582c <__kernel_rem_pio2f+0x6d4>
  405574:	00bb      	lsls	r3, r7, #2
  405576:	a948      	add	r1, sp, #288	; 0x120
  405578:	1d1a      	adds	r2, r3, #4
  40557a:	eb01 0803 	add.w	r8, r1, r3
  40557e:	9301      	str	r3, [sp, #4]
  405580:	9202      	str	r2, [sp, #8]
  405582:	f04f 566e 	mov.w	r6, #998244352	; 0x3b800000
  405586:	eb0a 0b02 	add.w	fp, sl, r2
  40558a:	f108 0504 	add.w	r5, r8, #4
  40558e:	f85b 0d04 	ldr.w	r0, [fp, #-4]!
  405592:	f001 f809 	bl	4065a8 <__aeabi_i2f>
  405596:	4621      	mov	r1, r4
  405598:	f001 f85a 	bl	406650 <__aeabi_fmul>
  40559c:	4631      	mov	r1, r6
  40559e:	f845 0d04 	str.w	r0, [r5, #-4]!
  4055a2:	4620      	mov	r0, r4
  4055a4:	f001 f854 	bl	406650 <__aeabi_fmul>
  4055a8:	45d3      	cmp	fp, sl
  4055aa:	4604      	mov	r4, r0
  4055ac:	d1ef      	bne.n	40558e <__kernel_rem_pio2f+0x436>
  4055ae:	2600      	movs	r6, #0
  4055b0:	f8dd b014 	ldr.w	fp, [sp, #20]
  4055b4:	9703      	str	r7, [sp, #12]
  4055b6:	f1a8 0804 	sub.w	r8, r8, #4
  4055ba:	46b2      	mov	sl, r6
  4055bc:	f1bb 0f00 	cmp.w	fp, #0
  4055c0:	bfb8      	it	lt
  4055c2:	2500      	movlt	r5, #0
  4055c4:	db15      	blt.n	4055f2 <__kernel_rem_pio2f+0x49a>
  4055c6:	4ea5      	ldr	r6, [pc, #660]	; (40585c <__kernel_rem_pio2f+0x704>)
  4055c8:	48a5      	ldr	r0, [pc, #660]	; (405860 <__kernel_rem_pio2f+0x708>)
  4055ca:	4647      	mov	r7, r8
  4055cc:	2500      	movs	r5, #0
  4055ce:	2400      	movs	r4, #0
  4055d0:	e003      	b.n	4055da <__kernel_rem_pio2f+0x482>
  4055d2:	4554      	cmp	r4, sl
  4055d4:	dc0d      	bgt.n	4055f2 <__kernel_rem_pio2f+0x49a>
  4055d6:	f856 0f04 	ldr.w	r0, [r6, #4]!
  4055da:	f857 1f04 	ldr.w	r1, [r7, #4]!
  4055de:	f001 f837 	bl	406650 <__aeabi_fmul>
  4055e2:	4601      	mov	r1, r0
  4055e4:	4628      	mov	r0, r5
  4055e6:	f000 ff2b 	bl	406440 <__addsf3>
  4055ea:	3401      	adds	r4, #1
  4055ec:	45a3      	cmp	fp, r4
  4055ee:	4605      	mov	r5, r0
  4055f0:	daef      	bge.n	4055d2 <__kernel_rem_pio2f+0x47a>
  4055f2:	ab5c      	add	r3, sp, #368	; 0x170
  4055f4:	eb03 038a 	add.w	r3, r3, sl, lsl #2
  4055f8:	f1a8 0804 	sub.w	r8, r8, #4
  4055fc:	f843 5ca0 	str.w	r5, [r3, #-160]
  405600:	ab46      	add	r3, sp, #280	; 0x118
  405602:	4543      	cmp	r3, r8
  405604:	f10a 0a01 	add.w	sl, sl, #1
  405608:	d1d8      	bne.n	4055bc <__kernel_rem_pio2f+0x464>
  40560a:	9b66      	ldr	r3, [sp, #408]	; 0x198
  40560c:	9f03      	ldr	r7, [sp, #12]
  40560e:	2b03      	cmp	r3, #3
  405610:	d85a      	bhi.n	4056c8 <__kernel_rem_pio2f+0x570>
  405612:	e8df f003 	tbb	[pc, r3]
  405616:	5f8e      	.short	0x5f8e
  405618:	025f      	.short	0x025f
  40561a:	2f00      	cmp	r7, #0
  40561c:	f340 8104 	ble.w	405828 <__kernel_rem_pio2f+0x6d0>
  405620:	9a01      	ldr	r2, [sp, #4]
  405622:	a95c      	add	r1, sp, #368	; 0x170
  405624:	188b      	adds	r3, r1, r2
  405626:	ac34      	add	r4, sp, #208	; 0xd0
  405628:	f853 6ca0 	ldr.w	r6, [r3, #-160]
  40562c:	18a5      	adds	r5, r4, r2
  40562e:	f855 ac04 	ldr.w	sl, [r5, #-4]
  405632:	4631      	mov	r1, r6
  405634:	4650      	mov	r0, sl
  405636:	f000 ff03 	bl	406440 <__addsf3>
  40563a:	4680      	mov	r8, r0
  40563c:	4601      	mov	r1, r0
  40563e:	4650      	mov	r0, sl
  405640:	f000 fefc 	bl	40643c <__aeabi_fsub>
  405644:	4631      	mov	r1, r6
  405646:	f000 fefb 	bl	406440 <__addsf3>
  40564a:	6028      	str	r0, [r5, #0]
  40564c:	f845 8d04 	str.w	r8, [r5, #-4]!
  405650:	42ac      	cmp	r4, r5
  405652:	4646      	mov	r6, r8
  405654:	d1eb      	bne.n	40562e <__kernel_rem_pio2f+0x4d6>
  405656:	2f01      	cmp	r7, #1
  405658:	f340 80e6 	ble.w	405828 <__kernel_rem_pio2f+0x6d0>
  40565c:	9a01      	ldr	r2, [sp, #4]
  40565e:	a95c      	add	r1, sp, #368	; 0x170
  405660:	188b      	adds	r3, r1, r2
  405662:	4414      	add	r4, r2
  405664:	f853 6ca0 	ldr.w	r6, [r3, #-160]
  405668:	4625      	mov	r5, r4
  40566a:	f10d 0ad4 	add.w	sl, sp, #212	; 0xd4
  40566e:	f855 8c04 	ldr.w	r8, [r5, #-4]
  405672:	4631      	mov	r1, r6
  405674:	4640      	mov	r0, r8
  405676:	f000 fee3 	bl	406440 <__addsf3>
  40567a:	4607      	mov	r7, r0
  40567c:	4601      	mov	r1, r0
  40567e:	4640      	mov	r0, r8
  405680:	f000 fedc 	bl	40643c <__aeabi_fsub>
  405684:	4631      	mov	r1, r6
  405686:	f000 fedb 	bl	406440 <__addsf3>
  40568a:	6028      	str	r0, [r5, #0]
  40568c:	f845 7d04 	str.w	r7, [r5, #-4]!
  405690:	45aa      	cmp	sl, r5
  405692:	463e      	mov	r6, r7
  405694:	d1eb      	bne.n	40566e <__kernel_rem_pio2f+0x516>
  405696:	2000      	movs	r0, #0
  405698:	3404      	adds	r4, #4
  40569a:	ad36      	add	r5, sp, #216	; 0xd8
  40569c:	f854 1d04 	ldr.w	r1, [r4, #-4]!
  4056a0:	f000 fece 	bl	406440 <__addsf3>
  4056a4:	42a5      	cmp	r5, r4
  4056a6:	d1f9      	bne.n	40569c <__kernel_rem_pio2f+0x544>
  4056a8:	f1b9 0f00 	cmp.w	r9, #0
  4056ac:	f000 80b9 	beq.w	405822 <__kernel_rem_pio2f+0x6ca>
  4056b0:	9a34      	ldr	r2, [sp, #208]	; 0xd0
  4056b2:	9b35      	ldr	r3, [sp, #212]	; 0xd4
  4056b4:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
  4056b8:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
  4056bc:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
  4056c0:	9c07      	ldr	r4, [sp, #28]
  4056c2:	60a0      	str	r0, [r4, #8]
  4056c4:	6022      	str	r2, [r4, #0]
  4056c6:	6063      	str	r3, [r4, #4]
  4056c8:	9b06      	ldr	r3, [sp, #24]
  4056ca:	f003 0007 	and.w	r0, r3, #7
  4056ce:	b05d      	add	sp, #372	; 0x174
  4056d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4056d4:	9c01      	ldr	r4, [sp, #4]
  4056d6:	ad34      	add	r5, sp, #208	; 0xd0
  4056d8:	3404      	adds	r4, #4
  4056da:	442c      	add	r4, r5
  4056dc:	2000      	movs	r0, #0
  4056de:	f854 1d04 	ldr.w	r1, [r4, #-4]!
  4056e2:	f000 fead 	bl	406440 <__addsf3>
  4056e6:	42ac      	cmp	r4, r5
  4056e8:	d1f9      	bne.n	4056de <__kernel_rem_pio2f+0x586>
  4056ea:	f1b9 0f00 	cmp.w	r9, #0
  4056ee:	f000 8085 	beq.w	4057fc <__kernel_rem_pio2f+0x6a4>
  4056f2:	9a07      	ldr	r2, [sp, #28]
  4056f4:	f100 4300 	add.w	r3, r0, #2147483648	; 0x80000000
  4056f8:	4601      	mov	r1, r0
  4056fa:	6013      	str	r3, [r2, #0]
  4056fc:	9834      	ldr	r0, [sp, #208]	; 0xd0
  4056fe:	f000 fe9d 	bl	40643c <__aeabi_fsub>
  405702:	2f00      	cmp	r7, #0
  405704:	dd0b      	ble.n	40571e <__kernel_rem_pio2f+0x5c6>
  405706:	ad34      	add	r5, sp, #208	; 0xd0
  405708:	2401      	movs	r4, #1
  40570a:	3401      	adds	r4, #1
  40570c:	f855 1f04 	ldr.w	r1, [r5, #4]!
  405710:	f000 fe96 	bl	406440 <__addsf3>
  405714:	42a7      	cmp	r7, r4
  405716:	daf8      	bge.n	40570a <__kernel_rem_pio2f+0x5b2>
  405718:	f1b9 0f00 	cmp.w	r9, #0
  40571c:	d001      	beq.n	405722 <__kernel_rem_pio2f+0x5ca>
  40571e:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
  405722:	9b07      	ldr	r3, [sp, #28]
  405724:	6058      	str	r0, [r3, #4]
  405726:	9b06      	ldr	r3, [sp, #24]
  405728:	f003 0007 	and.w	r0, r3, #7
  40572c:	b05d      	add	sp, #372	; 0x174
  40572e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405732:	9b02      	ldr	r3, [sp, #8]
  405734:	ad34      	add	r5, sp, #208	; 0xd0
  405736:	442b      	add	r3, r5
  405738:	2000      	movs	r0, #0
  40573a:	461c      	mov	r4, r3
  40573c:	f854 1d04 	ldr.w	r1, [r4, #-4]!
  405740:	f000 fe7e 	bl	406440 <__addsf3>
  405744:	42a5      	cmp	r5, r4
  405746:	d1f9      	bne.n	40573c <__kernel_rem_pio2f+0x5e4>
  405748:	f1b9 0f00 	cmp.w	r9, #0
  40574c:	d001      	beq.n	405752 <__kernel_rem_pio2f+0x5fa>
  40574e:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
  405752:	9b07      	ldr	r3, [sp, #28]
  405754:	6018      	str	r0, [r3, #0]
  405756:	9b06      	ldr	r3, [sp, #24]
  405758:	f003 0007 	and.w	r0, r3, #7
  40575c:	b05d      	add	sp, #372	; 0x174
  40575e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405762:	46ca      	mov	sl, r9
  405764:	f847 af04 	str.w	sl, [r7, #4]!
  405768:	4547      	cmp	r7, r8
  40576a:	f106 0604 	add.w	r6, r6, #4
  40576e:	f47f ad3b 	bne.w	4051e8 <__kernel_rem_pio2f+0x90>
  405772:	e554      	b.n	40521e <__kernel_rem_pio2f+0xc6>
  405774:	9b06      	ldr	r3, [sp, #24]
  405776:	f1b8 0f00 	cmp.w	r8, #0
  40577a:	f103 0301 	add.w	r3, r3, #1
  40577e:	9306      	str	r3, [sp, #24]
  405780:	bfc8      	it	gt
  405782:	2402      	movgt	r4, #2
  405784:	f73f adcd 	bgt.w	405322 <__kernel_rem_pio2f+0x1ca>
  405788:	4639      	mov	r1, r7
  40578a:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  40578e:	f000 fe55 	bl	40643c <__aeabi_fsub>
  405792:	2402      	movs	r4, #2
  405794:	4607      	mov	r7, r0
  405796:	e618      	b.n	4053ca <__kernel_rem_pio2f+0x272>
  405798:	9b04      	ldr	r3, [sp, #16]
  40579a:	2b00      	cmp	r3, #0
  40579c:	dd22      	ble.n	4057e4 <__kernel_rem_pio2f+0x68c>
  40579e:	2600      	movs	r6, #0
  4057a0:	9b04      	ldr	r3, [sp, #16]
  4057a2:	2b01      	cmp	r3, #1
  4057a4:	f43f adf2 	beq.w	40538c <__kernel_rem_pio2f+0x234>
  4057a8:	2b02      	cmp	r3, #2
  4057aa:	d107      	bne.n	4057bc <__kernel_rem_pio2f+0x664>
  4057ac:	f108 32ff 	add.w	r2, r8, #4294967295
  4057b0:	f85a 3022 	ldr.w	r3, [sl, r2, lsl #2]
  4057b4:	f003 033f 	and.w	r3, r3, #63	; 0x3f
  4057b8:	f84a 3022 	str.w	r3, [sl, r2, lsl #2]
  4057bc:	2c02      	cmp	r4, #2
  4057be:	f47f ae04 	bne.w	4053ca <__kernel_rem_pio2f+0x272>
  4057c2:	4639      	mov	r1, r7
  4057c4:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  4057c8:	f000 fe38 	bl	40643c <__aeabi_fsub>
  4057cc:	4607      	mov	r7, r0
  4057ce:	2e00      	cmp	r6, #0
  4057d0:	f43f adfb 	beq.w	4053ca <__kernel_rem_pio2f+0x272>
  4057d4:	e5ee      	b.n	4053b4 <__kernel_rem_pio2f+0x25c>
  4057d6:	3301      	adds	r3, #1
  4057d8:	4598      	cmp	r8, r3
  4057da:	f47f adad 	bne.w	405338 <__kernel_rem_pio2f+0x1e0>
  4057de:	9b04      	ldr	r3, [sp, #16]
  4057e0:	2b00      	cmp	r3, #0
  4057e2:	dcdd      	bgt.n	4057a0 <__kernel_rem_pio2f+0x648>
  4057e4:	2c02      	cmp	r4, #2
  4057e6:	f47f adf0 	bne.w	4053ca <__kernel_rem_pio2f+0x272>
  4057ea:	4639      	mov	r1, r7
  4057ec:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  4057f0:	f000 fe24 	bl	40643c <__aeabi_fsub>
  4057f4:	4607      	mov	r7, r0
  4057f6:	e5e8      	b.n	4053ca <__kernel_rem_pio2f+0x272>
  4057f8:	2301      	movs	r3, #1
  4057fa:	e610      	b.n	40541e <__kernel_rem_pio2f+0x2c6>
  4057fc:	9b07      	ldr	r3, [sp, #28]
  4057fe:	4601      	mov	r1, r0
  405800:	6018      	str	r0, [r3, #0]
  405802:	9834      	ldr	r0, [sp, #208]	; 0xd0
  405804:	f000 fe1a 	bl	40643c <__aeabi_fsub>
  405808:	2f00      	cmp	r7, #0
  40580a:	f73f af7c 	bgt.w	405706 <__kernel_rem_pio2f+0x5ae>
  40580e:	9b07      	ldr	r3, [sp, #28]
  405810:	6058      	str	r0, [r3, #4]
  405812:	e788      	b.n	405726 <__kernel_rem_pio2f+0x5ce>
  405814:	4620      	mov	r0, r4
  405816:	f001 f8e1 	bl	4069dc <__aeabi_f2iz>
  40581a:	4647      	mov	r7, r8
  40581c:	f84a 0028 	str.w	r0, [sl, r8, lsl #2]
  405820:	e69f      	b.n	405562 <__kernel_rem_pio2f+0x40a>
  405822:	9a34      	ldr	r2, [sp, #208]	; 0xd0
  405824:	9b35      	ldr	r3, [sp, #212]	; 0xd4
  405826:	e74b      	b.n	4056c0 <__kernel_rem_pio2f+0x568>
  405828:	2000      	movs	r0, #0
  40582a:	e73d      	b.n	4056a8 <__kernel_rem_pio2f+0x550>
  40582c:	9b66      	ldr	r3, [sp, #408]	; 0x198
  40582e:	2b03      	cmp	r3, #3
  405830:	f63f af4a 	bhi.w	4056c8 <__kernel_rem_pio2f+0x570>
  405834:	a201      	add	r2, pc, #4	; (adr r2, 40583c <__kernel_rem_pio2f+0x6e4>)
  405836:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  40583a:	bf00      	nop
  40583c:	00405851 	.word	0x00405851
  405840:	0040584d 	.word	0x0040584d
  405844:	0040584d 	.word	0x0040584d
  405848:	00405829 	.word	0x00405829
  40584c:	2000      	movs	r0, #0
  40584e:	e74c      	b.n	4056ea <__kernel_rem_pio2f+0x592>
  405850:	2000      	movs	r0, #0
  405852:	e779      	b.n	405748 <__kernel_rem_pio2f+0x5f0>
  405854:	2101      	movs	r1, #1
  405856:	2300      	movs	r3, #0
  405858:	e574      	b.n	405344 <__kernel_rem_pio2f+0x1ec>
  40585a:	bf00      	nop
  40585c:	00414a60 	.word	0x00414a60
  405860:	3fc90000 	.word	0x3fc90000

00405864 <__kernel_sinf>:
  405864:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  405868:	f020 4300 	bic.w	r3, r0, #2147483648	; 0x80000000
  40586c:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
  405870:	4604      	mov	r4, r0
  405872:	460f      	mov	r7, r1
  405874:	4690      	mov	r8, r2
  405876:	da03      	bge.n	405880 <__kernel_sinf+0x1c>
  405878:	f001 f8b0 	bl	4069dc <__aeabi_f2iz>
  40587c:	2800      	cmp	r0, #0
  40587e:	d058      	beq.n	405932 <__kernel_sinf+0xce>
  405880:	4621      	mov	r1, r4
  405882:	4620      	mov	r0, r4
  405884:	f000 fee4 	bl	406650 <__aeabi_fmul>
  405888:	4605      	mov	r5, r0
  40588a:	4601      	mov	r1, r0
  40588c:	4620      	mov	r0, r4
  40588e:	f000 fedf 	bl	406650 <__aeabi_fmul>
  405892:	4929      	ldr	r1, [pc, #164]	; (405938 <__kernel_sinf+0xd4>)
  405894:	4606      	mov	r6, r0
  405896:	4628      	mov	r0, r5
  405898:	f000 feda 	bl	406650 <__aeabi_fmul>
  40589c:	4927      	ldr	r1, [pc, #156]	; (40593c <__kernel_sinf+0xd8>)
  40589e:	f000 fdcd 	bl	40643c <__aeabi_fsub>
  4058a2:	4629      	mov	r1, r5
  4058a4:	f000 fed4 	bl	406650 <__aeabi_fmul>
  4058a8:	4925      	ldr	r1, [pc, #148]	; (405940 <__kernel_sinf+0xdc>)
  4058aa:	f000 fdc9 	bl	406440 <__addsf3>
  4058ae:	4629      	mov	r1, r5
  4058b0:	f000 fece 	bl	406650 <__aeabi_fmul>
  4058b4:	4923      	ldr	r1, [pc, #140]	; (405944 <__kernel_sinf+0xe0>)
  4058b6:	f000 fdc1 	bl	40643c <__aeabi_fsub>
  4058ba:	4629      	mov	r1, r5
  4058bc:	f000 fec8 	bl	406650 <__aeabi_fmul>
  4058c0:	4921      	ldr	r1, [pc, #132]	; (405948 <__kernel_sinf+0xe4>)
  4058c2:	f000 fdbd 	bl	406440 <__addsf3>
  4058c6:	4681      	mov	r9, r0
  4058c8:	f1b8 0f00 	cmp.w	r8, #0
  4058cc:	d022      	beq.n	405914 <__kernel_sinf+0xb0>
  4058ce:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
  4058d2:	4638      	mov	r0, r7
  4058d4:	f000 febc 	bl	406650 <__aeabi_fmul>
  4058d8:	4649      	mov	r1, r9
  4058da:	4680      	mov	r8, r0
  4058dc:	4630      	mov	r0, r6
  4058de:	f000 feb7 	bl	406650 <__aeabi_fmul>
  4058e2:	4601      	mov	r1, r0
  4058e4:	4640      	mov	r0, r8
  4058e6:	f000 fda9 	bl	40643c <__aeabi_fsub>
  4058ea:	4629      	mov	r1, r5
  4058ec:	f000 feb0 	bl	406650 <__aeabi_fmul>
  4058f0:	4639      	mov	r1, r7
  4058f2:	f000 fda3 	bl	40643c <__aeabi_fsub>
  4058f6:	4915      	ldr	r1, [pc, #84]	; (40594c <__kernel_sinf+0xe8>)
  4058f8:	4605      	mov	r5, r0
  4058fa:	4630      	mov	r0, r6
  4058fc:	f000 fea8 	bl	406650 <__aeabi_fmul>
  405900:	4601      	mov	r1, r0
  405902:	4628      	mov	r0, r5
  405904:	f000 fd9c 	bl	406440 <__addsf3>
  405908:	4601      	mov	r1, r0
  40590a:	4620      	mov	r0, r4
  40590c:	f000 fd96 	bl	40643c <__aeabi_fsub>
  405910:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405914:	4601      	mov	r1, r0
  405916:	4628      	mov	r0, r5
  405918:	f000 fe9a 	bl	406650 <__aeabi_fmul>
  40591c:	490b      	ldr	r1, [pc, #44]	; (40594c <__kernel_sinf+0xe8>)
  40591e:	f000 fd8d 	bl	40643c <__aeabi_fsub>
  405922:	4631      	mov	r1, r6
  405924:	f000 fe94 	bl	406650 <__aeabi_fmul>
  405928:	4621      	mov	r1, r4
  40592a:	f000 fd89 	bl	406440 <__addsf3>
  40592e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405932:	4620      	mov	r0, r4
  405934:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405938:	2f2ec9d3 	.word	0x2f2ec9d3
  40593c:	32d72f34 	.word	0x32d72f34
  405940:	3638ef1b 	.word	0x3638ef1b
  405944:	39500d01 	.word	0x39500d01
  405948:	3c088889 	.word	0x3c088889
  40594c:	3e2aaaab 	.word	0x3e2aaaab

00405950 <fabsf>:
  405950:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
  405954:	4770      	bx	lr
  405956:	bf00      	nop

00405958 <floorf>:
  405958:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40595c:	f020 4700 	bic.w	r7, r0, #2147483648	; 0x80000000
  405960:	0dfc      	lsrs	r4, r7, #23
  405962:	3c7f      	subs	r4, #127	; 0x7f
  405964:	2c16      	cmp	r4, #22
  405966:	4605      	mov	r5, r0
  405968:	dc13      	bgt.n	405992 <floorf+0x3a>
  40596a:	2c00      	cmp	r4, #0
  40596c:	4680      	mov	r8, r0
  40596e:	db1b      	blt.n	4059a8 <floorf+0x50>
  405970:	4f19      	ldr	r7, [pc, #100]	; (4059d8 <floorf+0x80>)
  405972:	4127      	asrs	r7, r4
  405974:	4238      	tst	r0, r7
  405976:	d014      	beq.n	4059a2 <floorf+0x4a>
  405978:	4918      	ldr	r1, [pc, #96]	; (4059dc <floorf+0x84>)
  40597a:	f000 fd61 	bl	406440 <__addsf3>
  40597e:	2100      	movs	r1, #0
  405980:	f001 f822 	bl	4069c8 <__aeabi_fcmpgt>
  405984:	b168      	cbz	r0, 4059a2 <floorf+0x4a>
  405986:	2d00      	cmp	r5, #0
  405988:	db1b      	blt.n	4059c2 <floorf+0x6a>
  40598a:	ea28 0007 	bic.w	r0, r8, r7
  40598e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405992:	f1b7 4fff 	cmp.w	r7, #2139095040	; 0x7f800000
  405996:	d304      	bcc.n	4059a2 <floorf+0x4a>
  405998:	4601      	mov	r1, r0
  40599a:	f000 fd51 	bl	406440 <__addsf3>
  40599e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4059a2:	4628      	mov	r0, r5
  4059a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4059a8:	490c      	ldr	r1, [pc, #48]	; (4059dc <floorf+0x84>)
  4059aa:	f000 fd49 	bl	406440 <__addsf3>
  4059ae:	2100      	movs	r1, #0
  4059b0:	f001 f80a 	bl	4069c8 <__aeabi_fcmpgt>
  4059b4:	2800      	cmp	r0, #0
  4059b6:	d0f4      	beq.n	4059a2 <floorf+0x4a>
  4059b8:	2d00      	cmp	r5, #0
  4059ba:	db08      	blt.n	4059ce <floorf+0x76>
  4059bc:	2000      	movs	r0, #0
  4059be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4059c2:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
  4059c6:	fa43 f404 	asr.w	r4, r3, r4
  4059ca:	44a0      	add	r8, r4
  4059cc:	e7dd      	b.n	40598a <floorf+0x32>
  4059ce:	2f00      	cmp	r7, #0
  4059d0:	d0e7      	beq.n	4059a2 <floorf+0x4a>
  4059d2:	4803      	ldr	r0, [pc, #12]	; (4059e0 <floorf+0x88>)
  4059d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4059d8:	007fffff 	.word	0x007fffff
  4059dc:	7149f2ca 	.word	0x7149f2ca
  4059e0:	bf800000 	.word	0xbf800000

004059e4 <scalbnf>:
  4059e4:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
  4059e8:	b538      	push	{r3, r4, r5, lr}
  4059ea:	4603      	mov	r3, r0
  4059ec:	d016      	beq.n	405a1c <scalbnf+0x38>
  4059ee:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
  4059f2:	d20f      	bcs.n	405a14 <scalbnf+0x30>
  4059f4:	f5b2 0f00 	cmp.w	r2, #8388608	; 0x800000
  4059f8:	460d      	mov	r5, r1
  4059fa:	d310      	bcc.n	405a1e <scalbnf+0x3a>
  4059fc:	4604      	mov	r4, r0
  4059fe:	0dd0      	lsrs	r0, r2, #23
  405a00:	4428      	add	r0, r5
  405a02:	28fe      	cmp	r0, #254	; 0xfe
  405a04:	dc2e      	bgt.n	405a64 <scalbnf+0x80>
  405a06:	2800      	cmp	r0, #0
  405a08:	dd1d      	ble.n	405a46 <scalbnf+0x62>
  405a0a:	f024 44ff 	bic.w	r4, r4, #2139095040	; 0x7f800000
  405a0e:	ea44 50c0 	orr.w	r0, r4, r0, lsl #23
  405a12:	bd38      	pop	{r3, r4, r5, pc}
  405a14:	4601      	mov	r1, r0
  405a16:	f000 fd13 	bl	406440 <__addsf3>
  405a1a:	bd38      	pop	{r3, r4, r5, pc}
  405a1c:	bd38      	pop	{r3, r4, r5, pc}
  405a1e:	f04f 4198 	mov.w	r1, #1275068416	; 0x4c000000
  405a22:	f000 fe15 	bl	406650 <__aeabi_fmul>
  405a26:	4a18      	ldr	r2, [pc, #96]	; (405a88 <scalbnf+0xa4>)
  405a28:	4295      	cmp	r5, r2
  405a2a:	4603      	mov	r3, r0
  405a2c:	db07      	blt.n	405a3e <scalbnf+0x5a>
  405a2e:	4604      	mov	r4, r0
  405a30:	f3c0 50c7 	ubfx	r0, r0, #23, #8
  405a34:	3819      	subs	r0, #25
  405a36:	e7e3      	b.n	405a00 <scalbnf+0x1c>
  405a38:	4814      	ldr	r0, [pc, #80]	; (405a8c <scalbnf+0xa8>)
  405a3a:	f000 f82b 	bl	405a94 <copysignf>
  405a3e:	4913      	ldr	r1, [pc, #76]	; (405a8c <scalbnf+0xa8>)
  405a40:	f000 fe06 	bl	406650 <__aeabi_fmul>
  405a44:	bd38      	pop	{r3, r4, r5, pc}
  405a46:	f110 0f16 	cmn.w	r0, #22
  405a4a:	da13      	bge.n	405a74 <scalbnf+0x90>
  405a4c:	f24c 3250 	movw	r2, #50000	; 0xc350
  405a50:	4295      	cmp	r5, r2
  405a52:	4619      	mov	r1, r3
  405a54:	ddf0      	ble.n	405a38 <scalbnf+0x54>
  405a56:	480e      	ldr	r0, [pc, #56]	; (405a90 <scalbnf+0xac>)
  405a58:	f000 f81c 	bl	405a94 <copysignf>
  405a5c:	490c      	ldr	r1, [pc, #48]	; (405a90 <scalbnf+0xac>)
  405a5e:	f000 fdf7 	bl	406650 <__aeabi_fmul>
  405a62:	bd38      	pop	{r3, r4, r5, pc}
  405a64:	4619      	mov	r1, r3
  405a66:	480a      	ldr	r0, [pc, #40]	; (405a90 <scalbnf+0xac>)
  405a68:	f000 f814 	bl	405a94 <copysignf>
  405a6c:	4908      	ldr	r1, [pc, #32]	; (405a90 <scalbnf+0xac>)
  405a6e:	f000 fdef 	bl	406650 <__aeabi_fmul>
  405a72:	bd38      	pop	{r3, r4, r5, pc}
  405a74:	f024 44ff 	bic.w	r4, r4, #2139095040	; 0x7f800000
  405a78:	3019      	adds	r0, #25
  405a7a:	ea44 50c0 	orr.w	r0, r4, r0, lsl #23
  405a7e:	f04f 514c 	mov.w	r1, #855638016	; 0x33000000
  405a82:	f000 fde5 	bl	406650 <__aeabi_fmul>
  405a86:	bd38      	pop	{r3, r4, r5, pc}
  405a88:	ffff3cb0 	.word	0xffff3cb0
  405a8c:	0da24260 	.word	0x0da24260
  405a90:	7149f2ca 	.word	0x7149f2ca

00405a94 <copysignf>:
  405a94:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405a98:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
  405a9c:	4308      	orrs	r0, r1
  405a9e:	4770      	bx	lr

00405aa0 <__aeabi_drsub>:
  405aa0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  405aa4:	e002      	b.n	405aac <__adddf3>
  405aa6:	bf00      	nop

00405aa8 <__aeabi_dsub>:
  405aa8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00405aac <__adddf3>:
  405aac:	b530      	push	{r4, r5, lr}
  405aae:	ea4f 0441 	mov.w	r4, r1, lsl #1
  405ab2:	ea4f 0543 	mov.w	r5, r3, lsl #1
  405ab6:	ea94 0f05 	teq	r4, r5
  405aba:	bf08      	it	eq
  405abc:	ea90 0f02 	teqeq	r0, r2
  405ac0:	bf1f      	itttt	ne
  405ac2:	ea54 0c00 	orrsne.w	ip, r4, r0
  405ac6:	ea55 0c02 	orrsne.w	ip, r5, r2
  405aca:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  405ace:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405ad2:	f000 80e2 	beq.w	405c9a <__adddf3+0x1ee>
  405ad6:	ea4f 5454 	mov.w	r4, r4, lsr #21
  405ada:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  405ade:	bfb8      	it	lt
  405ae0:	426d      	neglt	r5, r5
  405ae2:	dd0c      	ble.n	405afe <__adddf3+0x52>
  405ae4:	442c      	add	r4, r5
  405ae6:	ea80 0202 	eor.w	r2, r0, r2
  405aea:	ea81 0303 	eor.w	r3, r1, r3
  405aee:	ea82 0000 	eor.w	r0, r2, r0
  405af2:	ea83 0101 	eor.w	r1, r3, r1
  405af6:	ea80 0202 	eor.w	r2, r0, r2
  405afa:	ea81 0303 	eor.w	r3, r1, r3
  405afe:	2d36      	cmp	r5, #54	; 0x36
  405b00:	bf88      	it	hi
  405b02:	bd30      	pophi	{r4, r5, pc}
  405b04:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  405b08:	ea4f 3101 	mov.w	r1, r1, lsl #12
  405b0c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  405b10:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  405b14:	d002      	beq.n	405b1c <__adddf3+0x70>
  405b16:	4240      	negs	r0, r0
  405b18:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405b1c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  405b20:	ea4f 3303 	mov.w	r3, r3, lsl #12
  405b24:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  405b28:	d002      	beq.n	405b30 <__adddf3+0x84>
  405b2a:	4252      	negs	r2, r2
  405b2c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  405b30:	ea94 0f05 	teq	r4, r5
  405b34:	f000 80a7 	beq.w	405c86 <__adddf3+0x1da>
  405b38:	f1a4 0401 	sub.w	r4, r4, #1
  405b3c:	f1d5 0e20 	rsbs	lr, r5, #32
  405b40:	db0d      	blt.n	405b5e <__adddf3+0xb2>
  405b42:	fa02 fc0e 	lsl.w	ip, r2, lr
  405b46:	fa22 f205 	lsr.w	r2, r2, r5
  405b4a:	1880      	adds	r0, r0, r2
  405b4c:	f141 0100 	adc.w	r1, r1, #0
  405b50:	fa03 f20e 	lsl.w	r2, r3, lr
  405b54:	1880      	adds	r0, r0, r2
  405b56:	fa43 f305 	asr.w	r3, r3, r5
  405b5a:	4159      	adcs	r1, r3
  405b5c:	e00e      	b.n	405b7c <__adddf3+0xd0>
  405b5e:	f1a5 0520 	sub.w	r5, r5, #32
  405b62:	f10e 0e20 	add.w	lr, lr, #32
  405b66:	2a01      	cmp	r2, #1
  405b68:	fa03 fc0e 	lsl.w	ip, r3, lr
  405b6c:	bf28      	it	cs
  405b6e:	f04c 0c02 	orrcs.w	ip, ip, #2
  405b72:	fa43 f305 	asr.w	r3, r3, r5
  405b76:	18c0      	adds	r0, r0, r3
  405b78:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  405b7c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405b80:	d507      	bpl.n	405b92 <__adddf3+0xe6>
  405b82:	f04f 0e00 	mov.w	lr, #0
  405b86:	f1dc 0c00 	rsbs	ip, ip, #0
  405b8a:	eb7e 0000 	sbcs.w	r0, lr, r0
  405b8e:	eb6e 0101 	sbc.w	r1, lr, r1
  405b92:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  405b96:	d31b      	bcc.n	405bd0 <__adddf3+0x124>
  405b98:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  405b9c:	d30c      	bcc.n	405bb8 <__adddf3+0x10c>
  405b9e:	0849      	lsrs	r1, r1, #1
  405ba0:	ea5f 0030 	movs.w	r0, r0, rrx
  405ba4:	ea4f 0c3c 	mov.w	ip, ip, rrx
  405ba8:	f104 0401 	add.w	r4, r4, #1
  405bac:	ea4f 5244 	mov.w	r2, r4, lsl #21
  405bb0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  405bb4:	f080 809a 	bcs.w	405cec <__adddf3+0x240>
  405bb8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  405bbc:	bf08      	it	eq
  405bbe:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  405bc2:	f150 0000 	adcs.w	r0, r0, #0
  405bc6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405bca:	ea41 0105 	orr.w	r1, r1, r5
  405bce:	bd30      	pop	{r4, r5, pc}
  405bd0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  405bd4:	4140      	adcs	r0, r0
  405bd6:	eb41 0101 	adc.w	r1, r1, r1
  405bda:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405bde:	f1a4 0401 	sub.w	r4, r4, #1
  405be2:	d1e9      	bne.n	405bb8 <__adddf3+0x10c>
  405be4:	f091 0f00 	teq	r1, #0
  405be8:	bf04      	itt	eq
  405bea:	4601      	moveq	r1, r0
  405bec:	2000      	moveq	r0, #0
  405bee:	fab1 f381 	clz	r3, r1
  405bf2:	bf08      	it	eq
  405bf4:	3320      	addeq	r3, #32
  405bf6:	f1a3 030b 	sub.w	r3, r3, #11
  405bfa:	f1b3 0220 	subs.w	r2, r3, #32
  405bfe:	da0c      	bge.n	405c1a <__adddf3+0x16e>
  405c00:	320c      	adds	r2, #12
  405c02:	dd08      	ble.n	405c16 <__adddf3+0x16a>
  405c04:	f102 0c14 	add.w	ip, r2, #20
  405c08:	f1c2 020c 	rsb	r2, r2, #12
  405c0c:	fa01 f00c 	lsl.w	r0, r1, ip
  405c10:	fa21 f102 	lsr.w	r1, r1, r2
  405c14:	e00c      	b.n	405c30 <__adddf3+0x184>
  405c16:	f102 0214 	add.w	r2, r2, #20
  405c1a:	bfd8      	it	le
  405c1c:	f1c2 0c20 	rsble	ip, r2, #32
  405c20:	fa01 f102 	lsl.w	r1, r1, r2
  405c24:	fa20 fc0c 	lsr.w	ip, r0, ip
  405c28:	bfdc      	itt	le
  405c2a:	ea41 010c 	orrle.w	r1, r1, ip
  405c2e:	4090      	lslle	r0, r2
  405c30:	1ae4      	subs	r4, r4, r3
  405c32:	bfa2      	ittt	ge
  405c34:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  405c38:	4329      	orrge	r1, r5
  405c3a:	bd30      	popge	{r4, r5, pc}
  405c3c:	ea6f 0404 	mvn.w	r4, r4
  405c40:	3c1f      	subs	r4, #31
  405c42:	da1c      	bge.n	405c7e <__adddf3+0x1d2>
  405c44:	340c      	adds	r4, #12
  405c46:	dc0e      	bgt.n	405c66 <__adddf3+0x1ba>
  405c48:	f104 0414 	add.w	r4, r4, #20
  405c4c:	f1c4 0220 	rsb	r2, r4, #32
  405c50:	fa20 f004 	lsr.w	r0, r0, r4
  405c54:	fa01 f302 	lsl.w	r3, r1, r2
  405c58:	ea40 0003 	orr.w	r0, r0, r3
  405c5c:	fa21 f304 	lsr.w	r3, r1, r4
  405c60:	ea45 0103 	orr.w	r1, r5, r3
  405c64:	bd30      	pop	{r4, r5, pc}
  405c66:	f1c4 040c 	rsb	r4, r4, #12
  405c6a:	f1c4 0220 	rsb	r2, r4, #32
  405c6e:	fa20 f002 	lsr.w	r0, r0, r2
  405c72:	fa01 f304 	lsl.w	r3, r1, r4
  405c76:	ea40 0003 	orr.w	r0, r0, r3
  405c7a:	4629      	mov	r1, r5
  405c7c:	bd30      	pop	{r4, r5, pc}
  405c7e:	fa21 f004 	lsr.w	r0, r1, r4
  405c82:	4629      	mov	r1, r5
  405c84:	bd30      	pop	{r4, r5, pc}
  405c86:	f094 0f00 	teq	r4, #0
  405c8a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  405c8e:	bf06      	itte	eq
  405c90:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  405c94:	3401      	addeq	r4, #1
  405c96:	3d01      	subne	r5, #1
  405c98:	e74e      	b.n	405b38 <__adddf3+0x8c>
  405c9a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405c9e:	bf18      	it	ne
  405ca0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405ca4:	d029      	beq.n	405cfa <__adddf3+0x24e>
  405ca6:	ea94 0f05 	teq	r4, r5
  405caa:	bf08      	it	eq
  405cac:	ea90 0f02 	teqeq	r0, r2
  405cb0:	d005      	beq.n	405cbe <__adddf3+0x212>
  405cb2:	ea54 0c00 	orrs.w	ip, r4, r0
  405cb6:	bf04      	itt	eq
  405cb8:	4619      	moveq	r1, r3
  405cba:	4610      	moveq	r0, r2
  405cbc:	bd30      	pop	{r4, r5, pc}
  405cbe:	ea91 0f03 	teq	r1, r3
  405cc2:	bf1e      	ittt	ne
  405cc4:	2100      	movne	r1, #0
  405cc6:	2000      	movne	r0, #0
  405cc8:	bd30      	popne	{r4, r5, pc}
  405cca:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  405cce:	d105      	bne.n	405cdc <__adddf3+0x230>
  405cd0:	0040      	lsls	r0, r0, #1
  405cd2:	4149      	adcs	r1, r1
  405cd4:	bf28      	it	cs
  405cd6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  405cda:	bd30      	pop	{r4, r5, pc}
  405cdc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  405ce0:	bf3c      	itt	cc
  405ce2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  405ce6:	bd30      	popcc	{r4, r5, pc}
  405ce8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405cec:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  405cf0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405cf4:	f04f 0000 	mov.w	r0, #0
  405cf8:	bd30      	pop	{r4, r5, pc}
  405cfa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405cfe:	bf1a      	itte	ne
  405d00:	4619      	movne	r1, r3
  405d02:	4610      	movne	r0, r2
  405d04:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  405d08:	bf1c      	itt	ne
  405d0a:	460b      	movne	r3, r1
  405d0c:	4602      	movne	r2, r0
  405d0e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  405d12:	bf06      	itte	eq
  405d14:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  405d18:	ea91 0f03 	teqeq	r1, r3
  405d1c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  405d20:	bd30      	pop	{r4, r5, pc}
  405d22:	bf00      	nop

00405d24 <__aeabi_ui2d>:
  405d24:	f090 0f00 	teq	r0, #0
  405d28:	bf04      	itt	eq
  405d2a:	2100      	moveq	r1, #0
  405d2c:	4770      	bxeq	lr
  405d2e:	b530      	push	{r4, r5, lr}
  405d30:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405d34:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405d38:	f04f 0500 	mov.w	r5, #0
  405d3c:	f04f 0100 	mov.w	r1, #0
  405d40:	e750      	b.n	405be4 <__adddf3+0x138>
  405d42:	bf00      	nop

00405d44 <__aeabi_i2d>:
  405d44:	f090 0f00 	teq	r0, #0
  405d48:	bf04      	itt	eq
  405d4a:	2100      	moveq	r1, #0
  405d4c:	4770      	bxeq	lr
  405d4e:	b530      	push	{r4, r5, lr}
  405d50:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405d54:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405d58:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  405d5c:	bf48      	it	mi
  405d5e:	4240      	negmi	r0, r0
  405d60:	f04f 0100 	mov.w	r1, #0
  405d64:	e73e      	b.n	405be4 <__adddf3+0x138>
  405d66:	bf00      	nop

00405d68 <__aeabi_f2d>:
  405d68:	0042      	lsls	r2, r0, #1
  405d6a:	ea4f 01e2 	mov.w	r1, r2, asr #3
  405d6e:	ea4f 0131 	mov.w	r1, r1, rrx
  405d72:	ea4f 7002 	mov.w	r0, r2, lsl #28
  405d76:	bf1f      	itttt	ne
  405d78:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  405d7c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405d80:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  405d84:	4770      	bxne	lr
  405d86:	f092 0f00 	teq	r2, #0
  405d8a:	bf14      	ite	ne
  405d8c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405d90:	4770      	bxeq	lr
  405d92:	b530      	push	{r4, r5, lr}
  405d94:	f44f 7460 	mov.w	r4, #896	; 0x380
  405d98:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405d9c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405da0:	e720      	b.n	405be4 <__adddf3+0x138>
  405da2:	bf00      	nop

00405da4 <__aeabi_ul2d>:
  405da4:	ea50 0201 	orrs.w	r2, r0, r1
  405da8:	bf08      	it	eq
  405daa:	4770      	bxeq	lr
  405dac:	b530      	push	{r4, r5, lr}
  405dae:	f04f 0500 	mov.w	r5, #0
  405db2:	e00a      	b.n	405dca <__aeabi_l2d+0x16>

00405db4 <__aeabi_l2d>:
  405db4:	ea50 0201 	orrs.w	r2, r0, r1
  405db8:	bf08      	it	eq
  405dba:	4770      	bxeq	lr
  405dbc:	b530      	push	{r4, r5, lr}
  405dbe:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  405dc2:	d502      	bpl.n	405dca <__aeabi_l2d+0x16>
  405dc4:	4240      	negs	r0, r0
  405dc6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405dca:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405dce:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405dd2:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  405dd6:	f43f aedc 	beq.w	405b92 <__adddf3+0xe6>
  405dda:	f04f 0203 	mov.w	r2, #3
  405dde:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  405de2:	bf18      	it	ne
  405de4:	3203      	addne	r2, #3
  405de6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  405dea:	bf18      	it	ne
  405dec:	3203      	addne	r2, #3
  405dee:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  405df2:	f1c2 0320 	rsb	r3, r2, #32
  405df6:	fa00 fc03 	lsl.w	ip, r0, r3
  405dfa:	fa20 f002 	lsr.w	r0, r0, r2
  405dfe:	fa01 fe03 	lsl.w	lr, r1, r3
  405e02:	ea40 000e 	orr.w	r0, r0, lr
  405e06:	fa21 f102 	lsr.w	r1, r1, r2
  405e0a:	4414      	add	r4, r2
  405e0c:	e6c1      	b.n	405b92 <__adddf3+0xe6>
  405e0e:	bf00      	nop

00405e10 <__aeabi_dmul>:
  405e10:	b570      	push	{r4, r5, r6, lr}
  405e12:	f04f 0cff 	mov.w	ip, #255	; 0xff
  405e16:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  405e1a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  405e1e:	bf1d      	ittte	ne
  405e20:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  405e24:	ea94 0f0c 	teqne	r4, ip
  405e28:	ea95 0f0c 	teqne	r5, ip
  405e2c:	f000 f8de 	bleq	405fec <__aeabi_dmul+0x1dc>
  405e30:	442c      	add	r4, r5
  405e32:	ea81 0603 	eor.w	r6, r1, r3
  405e36:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  405e3a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  405e3e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  405e42:	bf18      	it	ne
  405e44:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  405e48:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405e4c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  405e50:	d038      	beq.n	405ec4 <__aeabi_dmul+0xb4>
  405e52:	fba0 ce02 	umull	ip, lr, r0, r2
  405e56:	f04f 0500 	mov.w	r5, #0
  405e5a:	fbe1 e502 	umlal	lr, r5, r1, r2
  405e5e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  405e62:	fbe0 e503 	umlal	lr, r5, r0, r3
  405e66:	f04f 0600 	mov.w	r6, #0
  405e6a:	fbe1 5603 	umlal	r5, r6, r1, r3
  405e6e:	f09c 0f00 	teq	ip, #0
  405e72:	bf18      	it	ne
  405e74:	f04e 0e01 	orrne.w	lr, lr, #1
  405e78:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  405e7c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  405e80:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  405e84:	d204      	bcs.n	405e90 <__aeabi_dmul+0x80>
  405e86:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  405e8a:	416d      	adcs	r5, r5
  405e8c:	eb46 0606 	adc.w	r6, r6, r6
  405e90:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  405e94:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  405e98:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  405e9c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  405ea0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  405ea4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  405ea8:	bf88      	it	hi
  405eaa:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  405eae:	d81e      	bhi.n	405eee <__aeabi_dmul+0xde>
  405eb0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  405eb4:	bf08      	it	eq
  405eb6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  405eba:	f150 0000 	adcs.w	r0, r0, #0
  405ebe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405ec2:	bd70      	pop	{r4, r5, r6, pc}
  405ec4:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  405ec8:	ea46 0101 	orr.w	r1, r6, r1
  405ecc:	ea40 0002 	orr.w	r0, r0, r2
  405ed0:	ea81 0103 	eor.w	r1, r1, r3
  405ed4:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  405ed8:	bfc2      	ittt	gt
  405eda:	ebd4 050c 	rsbsgt	r5, r4, ip
  405ede:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  405ee2:	bd70      	popgt	{r4, r5, r6, pc}
  405ee4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405ee8:	f04f 0e00 	mov.w	lr, #0
  405eec:	3c01      	subs	r4, #1
  405eee:	f300 80ab 	bgt.w	406048 <__aeabi_dmul+0x238>
  405ef2:	f114 0f36 	cmn.w	r4, #54	; 0x36
  405ef6:	bfde      	ittt	le
  405ef8:	2000      	movle	r0, #0
  405efa:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  405efe:	bd70      	pople	{r4, r5, r6, pc}
  405f00:	f1c4 0400 	rsb	r4, r4, #0
  405f04:	3c20      	subs	r4, #32
  405f06:	da35      	bge.n	405f74 <__aeabi_dmul+0x164>
  405f08:	340c      	adds	r4, #12
  405f0a:	dc1b      	bgt.n	405f44 <__aeabi_dmul+0x134>
  405f0c:	f104 0414 	add.w	r4, r4, #20
  405f10:	f1c4 0520 	rsb	r5, r4, #32
  405f14:	fa00 f305 	lsl.w	r3, r0, r5
  405f18:	fa20 f004 	lsr.w	r0, r0, r4
  405f1c:	fa01 f205 	lsl.w	r2, r1, r5
  405f20:	ea40 0002 	orr.w	r0, r0, r2
  405f24:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  405f28:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405f2c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  405f30:	fa21 f604 	lsr.w	r6, r1, r4
  405f34:	eb42 0106 	adc.w	r1, r2, r6
  405f38:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405f3c:	bf08      	it	eq
  405f3e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405f42:	bd70      	pop	{r4, r5, r6, pc}
  405f44:	f1c4 040c 	rsb	r4, r4, #12
  405f48:	f1c4 0520 	rsb	r5, r4, #32
  405f4c:	fa00 f304 	lsl.w	r3, r0, r4
  405f50:	fa20 f005 	lsr.w	r0, r0, r5
  405f54:	fa01 f204 	lsl.w	r2, r1, r4
  405f58:	ea40 0002 	orr.w	r0, r0, r2
  405f5c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405f60:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  405f64:	f141 0100 	adc.w	r1, r1, #0
  405f68:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405f6c:	bf08      	it	eq
  405f6e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405f72:	bd70      	pop	{r4, r5, r6, pc}
  405f74:	f1c4 0520 	rsb	r5, r4, #32
  405f78:	fa00 f205 	lsl.w	r2, r0, r5
  405f7c:	ea4e 0e02 	orr.w	lr, lr, r2
  405f80:	fa20 f304 	lsr.w	r3, r0, r4
  405f84:	fa01 f205 	lsl.w	r2, r1, r5
  405f88:	ea43 0302 	orr.w	r3, r3, r2
  405f8c:	fa21 f004 	lsr.w	r0, r1, r4
  405f90:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405f94:	fa21 f204 	lsr.w	r2, r1, r4
  405f98:	ea20 0002 	bic.w	r0, r0, r2
  405f9c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  405fa0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405fa4:	bf08      	it	eq
  405fa6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405faa:	bd70      	pop	{r4, r5, r6, pc}
  405fac:	f094 0f00 	teq	r4, #0
  405fb0:	d10f      	bne.n	405fd2 <__aeabi_dmul+0x1c2>
  405fb2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  405fb6:	0040      	lsls	r0, r0, #1
  405fb8:	eb41 0101 	adc.w	r1, r1, r1
  405fbc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405fc0:	bf08      	it	eq
  405fc2:	3c01      	subeq	r4, #1
  405fc4:	d0f7      	beq.n	405fb6 <__aeabi_dmul+0x1a6>
  405fc6:	ea41 0106 	orr.w	r1, r1, r6
  405fca:	f095 0f00 	teq	r5, #0
  405fce:	bf18      	it	ne
  405fd0:	4770      	bxne	lr
  405fd2:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  405fd6:	0052      	lsls	r2, r2, #1
  405fd8:	eb43 0303 	adc.w	r3, r3, r3
  405fdc:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  405fe0:	bf08      	it	eq
  405fe2:	3d01      	subeq	r5, #1
  405fe4:	d0f7      	beq.n	405fd6 <__aeabi_dmul+0x1c6>
  405fe6:	ea43 0306 	orr.w	r3, r3, r6
  405fea:	4770      	bx	lr
  405fec:	ea94 0f0c 	teq	r4, ip
  405ff0:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  405ff4:	bf18      	it	ne
  405ff6:	ea95 0f0c 	teqne	r5, ip
  405ffa:	d00c      	beq.n	406016 <__aeabi_dmul+0x206>
  405ffc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  406000:	bf18      	it	ne
  406002:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  406006:	d1d1      	bne.n	405fac <__aeabi_dmul+0x19c>
  406008:	ea81 0103 	eor.w	r1, r1, r3
  40600c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  406010:	f04f 0000 	mov.w	r0, #0
  406014:	bd70      	pop	{r4, r5, r6, pc}
  406016:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40601a:	bf06      	itte	eq
  40601c:	4610      	moveq	r0, r2
  40601e:	4619      	moveq	r1, r3
  406020:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  406024:	d019      	beq.n	40605a <__aeabi_dmul+0x24a>
  406026:	ea94 0f0c 	teq	r4, ip
  40602a:	d102      	bne.n	406032 <__aeabi_dmul+0x222>
  40602c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  406030:	d113      	bne.n	40605a <__aeabi_dmul+0x24a>
  406032:	ea95 0f0c 	teq	r5, ip
  406036:	d105      	bne.n	406044 <__aeabi_dmul+0x234>
  406038:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  40603c:	bf1c      	itt	ne
  40603e:	4610      	movne	r0, r2
  406040:	4619      	movne	r1, r3
  406042:	d10a      	bne.n	40605a <__aeabi_dmul+0x24a>
  406044:	ea81 0103 	eor.w	r1, r1, r3
  406048:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  40604c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  406050:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  406054:	f04f 0000 	mov.w	r0, #0
  406058:	bd70      	pop	{r4, r5, r6, pc}
  40605a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  40605e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  406062:	bd70      	pop	{r4, r5, r6, pc}

00406064 <__aeabi_ddiv>:
  406064:	b570      	push	{r4, r5, r6, lr}
  406066:	f04f 0cff 	mov.w	ip, #255	; 0xff
  40606a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  40606e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  406072:	bf1d      	ittte	ne
  406074:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  406078:	ea94 0f0c 	teqne	r4, ip
  40607c:	ea95 0f0c 	teqne	r5, ip
  406080:	f000 f8a7 	bleq	4061d2 <__aeabi_ddiv+0x16e>
  406084:	eba4 0405 	sub.w	r4, r4, r5
  406088:	ea81 0e03 	eor.w	lr, r1, r3
  40608c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  406090:	ea4f 3101 	mov.w	r1, r1, lsl #12
  406094:	f000 8088 	beq.w	4061a8 <__aeabi_ddiv+0x144>
  406098:	ea4f 3303 	mov.w	r3, r3, lsl #12
  40609c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  4060a0:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  4060a4:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  4060a8:	ea4f 2202 	mov.w	r2, r2, lsl #8
  4060ac:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  4060b0:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  4060b4:	ea4f 2600 	mov.w	r6, r0, lsl #8
  4060b8:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  4060bc:	429d      	cmp	r5, r3
  4060be:	bf08      	it	eq
  4060c0:	4296      	cmpeq	r6, r2
  4060c2:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  4060c6:	f504 7440 	add.w	r4, r4, #768	; 0x300
  4060ca:	d202      	bcs.n	4060d2 <__aeabi_ddiv+0x6e>
  4060cc:	085b      	lsrs	r3, r3, #1
  4060ce:	ea4f 0232 	mov.w	r2, r2, rrx
  4060d2:	1ab6      	subs	r6, r6, r2
  4060d4:	eb65 0503 	sbc.w	r5, r5, r3
  4060d8:	085b      	lsrs	r3, r3, #1
  4060da:	ea4f 0232 	mov.w	r2, r2, rrx
  4060de:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  4060e2:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  4060e6:	ebb6 0e02 	subs.w	lr, r6, r2
  4060ea:	eb75 0e03 	sbcs.w	lr, r5, r3
  4060ee:	bf22      	ittt	cs
  4060f0:	1ab6      	subcs	r6, r6, r2
  4060f2:	4675      	movcs	r5, lr
  4060f4:	ea40 000c 	orrcs.w	r0, r0, ip
  4060f8:	085b      	lsrs	r3, r3, #1
  4060fa:	ea4f 0232 	mov.w	r2, r2, rrx
  4060fe:	ebb6 0e02 	subs.w	lr, r6, r2
  406102:	eb75 0e03 	sbcs.w	lr, r5, r3
  406106:	bf22      	ittt	cs
  406108:	1ab6      	subcs	r6, r6, r2
  40610a:	4675      	movcs	r5, lr
  40610c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  406110:	085b      	lsrs	r3, r3, #1
  406112:	ea4f 0232 	mov.w	r2, r2, rrx
  406116:	ebb6 0e02 	subs.w	lr, r6, r2
  40611a:	eb75 0e03 	sbcs.w	lr, r5, r3
  40611e:	bf22      	ittt	cs
  406120:	1ab6      	subcs	r6, r6, r2
  406122:	4675      	movcs	r5, lr
  406124:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  406128:	085b      	lsrs	r3, r3, #1
  40612a:	ea4f 0232 	mov.w	r2, r2, rrx
  40612e:	ebb6 0e02 	subs.w	lr, r6, r2
  406132:	eb75 0e03 	sbcs.w	lr, r5, r3
  406136:	bf22      	ittt	cs
  406138:	1ab6      	subcs	r6, r6, r2
  40613a:	4675      	movcs	r5, lr
  40613c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  406140:	ea55 0e06 	orrs.w	lr, r5, r6
  406144:	d018      	beq.n	406178 <__aeabi_ddiv+0x114>
  406146:	ea4f 1505 	mov.w	r5, r5, lsl #4
  40614a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  40614e:	ea4f 1606 	mov.w	r6, r6, lsl #4
  406152:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  406156:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  40615a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  40615e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  406162:	d1c0      	bne.n	4060e6 <__aeabi_ddiv+0x82>
  406164:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  406168:	d10b      	bne.n	406182 <__aeabi_ddiv+0x11e>
  40616a:	ea41 0100 	orr.w	r1, r1, r0
  40616e:	f04f 0000 	mov.w	r0, #0
  406172:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  406176:	e7b6      	b.n	4060e6 <__aeabi_ddiv+0x82>
  406178:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40617c:	bf04      	itt	eq
  40617e:	4301      	orreq	r1, r0
  406180:	2000      	moveq	r0, #0
  406182:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  406186:	bf88      	it	hi
  406188:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  40618c:	f63f aeaf 	bhi.w	405eee <__aeabi_dmul+0xde>
  406190:	ebb5 0c03 	subs.w	ip, r5, r3
  406194:	bf04      	itt	eq
  406196:	ebb6 0c02 	subseq.w	ip, r6, r2
  40619a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  40619e:	f150 0000 	adcs.w	r0, r0, #0
  4061a2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4061a6:	bd70      	pop	{r4, r5, r6, pc}
  4061a8:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  4061ac:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  4061b0:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  4061b4:	bfc2      	ittt	gt
  4061b6:	ebd4 050c 	rsbsgt	r5, r4, ip
  4061ba:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  4061be:	bd70      	popgt	{r4, r5, r6, pc}
  4061c0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4061c4:	f04f 0e00 	mov.w	lr, #0
  4061c8:	3c01      	subs	r4, #1
  4061ca:	e690      	b.n	405eee <__aeabi_dmul+0xde>
  4061cc:	ea45 0e06 	orr.w	lr, r5, r6
  4061d0:	e68d      	b.n	405eee <__aeabi_dmul+0xde>
  4061d2:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  4061d6:	ea94 0f0c 	teq	r4, ip
  4061da:	bf08      	it	eq
  4061dc:	ea95 0f0c 	teqeq	r5, ip
  4061e0:	f43f af3b 	beq.w	40605a <__aeabi_dmul+0x24a>
  4061e4:	ea94 0f0c 	teq	r4, ip
  4061e8:	d10a      	bne.n	406200 <__aeabi_ddiv+0x19c>
  4061ea:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  4061ee:	f47f af34 	bne.w	40605a <__aeabi_dmul+0x24a>
  4061f2:	ea95 0f0c 	teq	r5, ip
  4061f6:	f47f af25 	bne.w	406044 <__aeabi_dmul+0x234>
  4061fa:	4610      	mov	r0, r2
  4061fc:	4619      	mov	r1, r3
  4061fe:	e72c      	b.n	40605a <__aeabi_dmul+0x24a>
  406200:	ea95 0f0c 	teq	r5, ip
  406204:	d106      	bne.n	406214 <__aeabi_ddiv+0x1b0>
  406206:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  40620a:	f43f aefd 	beq.w	406008 <__aeabi_dmul+0x1f8>
  40620e:	4610      	mov	r0, r2
  406210:	4619      	mov	r1, r3
  406212:	e722      	b.n	40605a <__aeabi_dmul+0x24a>
  406214:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  406218:	bf18      	it	ne
  40621a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  40621e:	f47f aec5 	bne.w	405fac <__aeabi_dmul+0x19c>
  406222:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  406226:	f47f af0d 	bne.w	406044 <__aeabi_dmul+0x234>
  40622a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  40622e:	f47f aeeb 	bne.w	406008 <__aeabi_dmul+0x1f8>
  406232:	e712      	b.n	40605a <__aeabi_dmul+0x24a>

00406234 <__gedf2>:
  406234:	f04f 3cff 	mov.w	ip, #4294967295
  406238:	e006      	b.n	406248 <__cmpdf2+0x4>
  40623a:	bf00      	nop

0040623c <__ledf2>:
  40623c:	f04f 0c01 	mov.w	ip, #1
  406240:	e002      	b.n	406248 <__cmpdf2+0x4>
  406242:	bf00      	nop

00406244 <__cmpdf2>:
  406244:	f04f 0c01 	mov.w	ip, #1
  406248:	f84d cd04 	str.w	ip, [sp, #-4]!
  40624c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406250:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406254:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  406258:	bf18      	it	ne
  40625a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  40625e:	d01b      	beq.n	406298 <__cmpdf2+0x54>
  406260:	b001      	add	sp, #4
  406262:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  406266:	bf0c      	ite	eq
  406268:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  40626c:	ea91 0f03 	teqne	r1, r3
  406270:	bf02      	ittt	eq
  406272:	ea90 0f02 	teqeq	r0, r2
  406276:	2000      	moveq	r0, #0
  406278:	4770      	bxeq	lr
  40627a:	f110 0f00 	cmn.w	r0, #0
  40627e:	ea91 0f03 	teq	r1, r3
  406282:	bf58      	it	pl
  406284:	4299      	cmppl	r1, r3
  406286:	bf08      	it	eq
  406288:	4290      	cmpeq	r0, r2
  40628a:	bf2c      	ite	cs
  40628c:	17d8      	asrcs	r0, r3, #31
  40628e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  406292:	f040 0001 	orr.w	r0, r0, #1
  406296:	4770      	bx	lr
  406298:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  40629c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4062a0:	d102      	bne.n	4062a8 <__cmpdf2+0x64>
  4062a2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4062a6:	d107      	bne.n	4062b8 <__cmpdf2+0x74>
  4062a8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4062ac:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4062b0:	d1d6      	bne.n	406260 <__cmpdf2+0x1c>
  4062b2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  4062b6:	d0d3      	beq.n	406260 <__cmpdf2+0x1c>
  4062b8:	f85d 0b04 	ldr.w	r0, [sp], #4
  4062bc:	4770      	bx	lr
  4062be:	bf00      	nop

004062c0 <__aeabi_cdrcmple>:
  4062c0:	4684      	mov	ip, r0
  4062c2:	4610      	mov	r0, r2
  4062c4:	4662      	mov	r2, ip
  4062c6:	468c      	mov	ip, r1
  4062c8:	4619      	mov	r1, r3
  4062ca:	4663      	mov	r3, ip
  4062cc:	e000      	b.n	4062d0 <__aeabi_cdcmpeq>
  4062ce:	bf00      	nop

004062d0 <__aeabi_cdcmpeq>:
  4062d0:	b501      	push	{r0, lr}
  4062d2:	f7ff ffb7 	bl	406244 <__cmpdf2>
  4062d6:	2800      	cmp	r0, #0
  4062d8:	bf48      	it	mi
  4062da:	f110 0f00 	cmnmi.w	r0, #0
  4062de:	bd01      	pop	{r0, pc}

004062e0 <__aeabi_dcmpeq>:
  4062e0:	f84d ed08 	str.w	lr, [sp, #-8]!
  4062e4:	f7ff fff4 	bl	4062d0 <__aeabi_cdcmpeq>
  4062e8:	bf0c      	ite	eq
  4062ea:	2001      	moveq	r0, #1
  4062ec:	2000      	movne	r0, #0
  4062ee:	f85d fb08 	ldr.w	pc, [sp], #8
  4062f2:	bf00      	nop

004062f4 <__aeabi_dcmplt>:
  4062f4:	f84d ed08 	str.w	lr, [sp, #-8]!
  4062f8:	f7ff ffea 	bl	4062d0 <__aeabi_cdcmpeq>
  4062fc:	bf34      	ite	cc
  4062fe:	2001      	movcc	r0, #1
  406300:	2000      	movcs	r0, #0
  406302:	f85d fb08 	ldr.w	pc, [sp], #8
  406306:	bf00      	nop

00406308 <__aeabi_dcmple>:
  406308:	f84d ed08 	str.w	lr, [sp, #-8]!
  40630c:	f7ff ffe0 	bl	4062d0 <__aeabi_cdcmpeq>
  406310:	bf94      	ite	ls
  406312:	2001      	movls	r0, #1
  406314:	2000      	movhi	r0, #0
  406316:	f85d fb08 	ldr.w	pc, [sp], #8
  40631a:	bf00      	nop

0040631c <__aeabi_dcmpge>:
  40631c:	f84d ed08 	str.w	lr, [sp, #-8]!
  406320:	f7ff ffce 	bl	4062c0 <__aeabi_cdrcmple>
  406324:	bf94      	ite	ls
  406326:	2001      	movls	r0, #1
  406328:	2000      	movhi	r0, #0
  40632a:	f85d fb08 	ldr.w	pc, [sp], #8
  40632e:	bf00      	nop

00406330 <__aeabi_dcmpgt>:
  406330:	f84d ed08 	str.w	lr, [sp, #-8]!
  406334:	f7ff ffc4 	bl	4062c0 <__aeabi_cdrcmple>
  406338:	bf34      	ite	cc
  40633a:	2001      	movcc	r0, #1
  40633c:	2000      	movcs	r0, #0
  40633e:	f85d fb08 	ldr.w	pc, [sp], #8
  406342:	bf00      	nop

00406344 <__aeabi_d2iz>:
  406344:	ea4f 0241 	mov.w	r2, r1, lsl #1
  406348:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  40634c:	d215      	bcs.n	40637a <__aeabi_d2iz+0x36>
  40634e:	d511      	bpl.n	406374 <__aeabi_d2iz+0x30>
  406350:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  406354:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  406358:	d912      	bls.n	406380 <__aeabi_d2iz+0x3c>
  40635a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  40635e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  406362:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  406366:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  40636a:	fa23 f002 	lsr.w	r0, r3, r2
  40636e:	bf18      	it	ne
  406370:	4240      	negne	r0, r0
  406372:	4770      	bx	lr
  406374:	f04f 0000 	mov.w	r0, #0
  406378:	4770      	bx	lr
  40637a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  40637e:	d105      	bne.n	40638c <__aeabi_d2iz+0x48>
  406380:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  406384:	bf08      	it	eq
  406386:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  40638a:	4770      	bx	lr
  40638c:	f04f 0000 	mov.w	r0, #0
  406390:	4770      	bx	lr
  406392:	bf00      	nop

00406394 <__aeabi_d2f>:
  406394:	ea4f 0241 	mov.w	r2, r1, lsl #1
  406398:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
  40639c:	bf24      	itt	cs
  40639e:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
  4063a2:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
  4063a6:	d90d      	bls.n	4063c4 <__aeabi_d2f+0x30>
  4063a8:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  4063ac:	ea4f 02c0 	mov.w	r2, r0, lsl #3
  4063b0:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
  4063b4:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
  4063b8:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
  4063bc:	bf08      	it	eq
  4063be:	f020 0001 	biceq.w	r0, r0, #1
  4063c2:	4770      	bx	lr
  4063c4:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
  4063c8:	d121      	bne.n	40640e <__aeabi_d2f+0x7a>
  4063ca:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
  4063ce:	bfbc      	itt	lt
  4063d0:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
  4063d4:	4770      	bxlt	lr
  4063d6:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4063da:	ea4f 5252 	mov.w	r2, r2, lsr #21
  4063de:	f1c2 0218 	rsb	r2, r2, #24
  4063e2:	f1c2 0c20 	rsb	ip, r2, #32
  4063e6:	fa10 f30c 	lsls.w	r3, r0, ip
  4063ea:	fa20 f002 	lsr.w	r0, r0, r2
  4063ee:	bf18      	it	ne
  4063f0:	f040 0001 	orrne.w	r0, r0, #1
  4063f4:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  4063f8:	ea4f 23d3 	mov.w	r3, r3, lsr #11
  4063fc:	fa03 fc0c 	lsl.w	ip, r3, ip
  406400:	ea40 000c 	orr.w	r0, r0, ip
  406404:	fa23 f302 	lsr.w	r3, r3, r2
  406408:	ea4f 0343 	mov.w	r3, r3, lsl #1
  40640c:	e7cc      	b.n	4063a8 <__aeabi_d2f+0x14>
  40640e:	ea7f 5362 	mvns.w	r3, r2, asr #21
  406412:	d107      	bne.n	406424 <__aeabi_d2f+0x90>
  406414:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
  406418:	bf1e      	ittt	ne
  40641a:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
  40641e:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
  406422:	4770      	bxne	lr
  406424:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
  406428:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  40642c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  406430:	4770      	bx	lr
  406432:	bf00      	nop

00406434 <__aeabi_frsub>:
  406434:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
  406438:	e002      	b.n	406440 <__addsf3>
  40643a:	bf00      	nop

0040643c <__aeabi_fsub>:
  40643c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

00406440 <__addsf3>:
  406440:	0042      	lsls	r2, r0, #1
  406442:	bf1f      	itttt	ne
  406444:	ea5f 0341 	movsne.w	r3, r1, lsl #1
  406448:	ea92 0f03 	teqne	r2, r3
  40644c:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
  406450:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  406454:	d06a      	beq.n	40652c <__addsf3+0xec>
  406456:	ea4f 6212 	mov.w	r2, r2, lsr #24
  40645a:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
  40645e:	bfc1      	itttt	gt
  406460:	18d2      	addgt	r2, r2, r3
  406462:	4041      	eorgt	r1, r0
  406464:	4048      	eorgt	r0, r1
  406466:	4041      	eorgt	r1, r0
  406468:	bfb8      	it	lt
  40646a:	425b      	neglt	r3, r3
  40646c:	2b19      	cmp	r3, #25
  40646e:	bf88      	it	hi
  406470:	4770      	bxhi	lr
  406472:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
  406476:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  40647a:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
  40647e:	bf18      	it	ne
  406480:	4240      	negne	r0, r0
  406482:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  406486:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
  40648a:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
  40648e:	bf18      	it	ne
  406490:	4249      	negne	r1, r1
  406492:	ea92 0f03 	teq	r2, r3
  406496:	d03f      	beq.n	406518 <__addsf3+0xd8>
  406498:	f1a2 0201 	sub.w	r2, r2, #1
  40649c:	fa41 fc03 	asr.w	ip, r1, r3
  4064a0:	eb10 000c 	adds.w	r0, r0, ip
  4064a4:	f1c3 0320 	rsb	r3, r3, #32
  4064a8:	fa01 f103 	lsl.w	r1, r1, r3
  4064ac:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
  4064b0:	d502      	bpl.n	4064b8 <__addsf3+0x78>
  4064b2:	4249      	negs	r1, r1
  4064b4:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
  4064b8:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
  4064bc:	d313      	bcc.n	4064e6 <__addsf3+0xa6>
  4064be:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
  4064c2:	d306      	bcc.n	4064d2 <__addsf3+0x92>
  4064c4:	0840      	lsrs	r0, r0, #1
  4064c6:	ea4f 0131 	mov.w	r1, r1, rrx
  4064ca:	f102 0201 	add.w	r2, r2, #1
  4064ce:	2afe      	cmp	r2, #254	; 0xfe
  4064d0:	d251      	bcs.n	406576 <__addsf3+0x136>
  4064d2:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
  4064d6:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  4064da:	bf08      	it	eq
  4064dc:	f020 0001 	biceq.w	r0, r0, #1
  4064e0:	ea40 0003 	orr.w	r0, r0, r3
  4064e4:	4770      	bx	lr
  4064e6:	0049      	lsls	r1, r1, #1
  4064e8:	eb40 0000 	adc.w	r0, r0, r0
  4064ec:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
  4064f0:	f1a2 0201 	sub.w	r2, r2, #1
  4064f4:	d1ed      	bne.n	4064d2 <__addsf3+0x92>
  4064f6:	fab0 fc80 	clz	ip, r0
  4064fa:	f1ac 0c08 	sub.w	ip, ip, #8
  4064fe:	ebb2 020c 	subs.w	r2, r2, ip
  406502:	fa00 f00c 	lsl.w	r0, r0, ip
  406506:	bfaa      	itet	ge
  406508:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
  40650c:	4252      	neglt	r2, r2
  40650e:	4318      	orrge	r0, r3
  406510:	bfbc      	itt	lt
  406512:	40d0      	lsrlt	r0, r2
  406514:	4318      	orrlt	r0, r3
  406516:	4770      	bx	lr
  406518:	f092 0f00 	teq	r2, #0
  40651c:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
  406520:	bf06      	itte	eq
  406522:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
  406526:	3201      	addeq	r2, #1
  406528:	3b01      	subne	r3, #1
  40652a:	e7b5      	b.n	406498 <__addsf3+0x58>
  40652c:	ea4f 0341 	mov.w	r3, r1, lsl #1
  406530:	ea7f 6c22 	mvns.w	ip, r2, asr #24
  406534:	bf18      	it	ne
  406536:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  40653a:	d021      	beq.n	406580 <__addsf3+0x140>
  40653c:	ea92 0f03 	teq	r2, r3
  406540:	d004      	beq.n	40654c <__addsf3+0x10c>
  406542:	f092 0f00 	teq	r2, #0
  406546:	bf08      	it	eq
  406548:	4608      	moveq	r0, r1
  40654a:	4770      	bx	lr
  40654c:	ea90 0f01 	teq	r0, r1
  406550:	bf1c      	itt	ne
  406552:	2000      	movne	r0, #0
  406554:	4770      	bxne	lr
  406556:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
  40655a:	d104      	bne.n	406566 <__addsf3+0x126>
  40655c:	0040      	lsls	r0, r0, #1
  40655e:	bf28      	it	cs
  406560:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
  406564:	4770      	bx	lr
  406566:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
  40656a:	bf3c      	itt	cc
  40656c:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
  406570:	4770      	bxcc	lr
  406572:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
  406576:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
  40657a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  40657e:	4770      	bx	lr
  406580:	ea7f 6222 	mvns.w	r2, r2, asr #24
  406584:	bf16      	itet	ne
  406586:	4608      	movne	r0, r1
  406588:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
  40658c:	4601      	movne	r1, r0
  40658e:	0242      	lsls	r2, r0, #9
  406590:	bf06      	itte	eq
  406592:	ea5f 2341 	movseq.w	r3, r1, lsl #9
  406596:	ea90 0f01 	teqeq	r0, r1
  40659a:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
  40659e:	4770      	bx	lr

004065a0 <__aeabi_ui2f>:
  4065a0:	f04f 0300 	mov.w	r3, #0
  4065a4:	e004      	b.n	4065b0 <__aeabi_i2f+0x8>
  4065a6:	bf00      	nop

004065a8 <__aeabi_i2f>:
  4065a8:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
  4065ac:	bf48      	it	mi
  4065ae:	4240      	negmi	r0, r0
  4065b0:	ea5f 0c00 	movs.w	ip, r0
  4065b4:	bf08      	it	eq
  4065b6:	4770      	bxeq	lr
  4065b8:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
  4065bc:	4601      	mov	r1, r0
  4065be:	f04f 0000 	mov.w	r0, #0
  4065c2:	e01c      	b.n	4065fe <__aeabi_l2f+0x2a>

004065c4 <__aeabi_ul2f>:
  4065c4:	ea50 0201 	orrs.w	r2, r0, r1
  4065c8:	bf08      	it	eq
  4065ca:	4770      	bxeq	lr
  4065cc:	f04f 0300 	mov.w	r3, #0
  4065d0:	e00a      	b.n	4065e8 <__aeabi_l2f+0x14>
  4065d2:	bf00      	nop

004065d4 <__aeabi_l2f>:
  4065d4:	ea50 0201 	orrs.w	r2, r0, r1
  4065d8:	bf08      	it	eq
  4065da:	4770      	bxeq	lr
  4065dc:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
  4065e0:	d502      	bpl.n	4065e8 <__aeabi_l2f+0x14>
  4065e2:	4240      	negs	r0, r0
  4065e4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  4065e8:	ea5f 0c01 	movs.w	ip, r1
  4065ec:	bf02      	ittt	eq
  4065ee:	4684      	moveq	ip, r0
  4065f0:	4601      	moveq	r1, r0
  4065f2:	2000      	moveq	r0, #0
  4065f4:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
  4065f8:	bf08      	it	eq
  4065fa:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
  4065fe:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
  406602:	fabc f28c 	clz	r2, ip
  406606:	3a08      	subs	r2, #8
  406608:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
  40660c:	db10      	blt.n	406630 <__aeabi_l2f+0x5c>
  40660e:	fa01 fc02 	lsl.w	ip, r1, r2
  406612:	4463      	add	r3, ip
  406614:	fa00 fc02 	lsl.w	ip, r0, r2
  406618:	f1c2 0220 	rsb	r2, r2, #32
  40661c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  406620:	fa20 f202 	lsr.w	r2, r0, r2
  406624:	eb43 0002 	adc.w	r0, r3, r2
  406628:	bf08      	it	eq
  40662a:	f020 0001 	biceq.w	r0, r0, #1
  40662e:	4770      	bx	lr
  406630:	f102 0220 	add.w	r2, r2, #32
  406634:	fa01 fc02 	lsl.w	ip, r1, r2
  406638:	f1c2 0220 	rsb	r2, r2, #32
  40663c:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
  406640:	fa21 f202 	lsr.w	r2, r1, r2
  406644:	eb43 0002 	adc.w	r0, r3, r2
  406648:	bf08      	it	eq
  40664a:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
  40664e:	4770      	bx	lr

00406650 <__aeabi_fmul>:
  406650:	f04f 0cff 	mov.w	ip, #255	; 0xff
  406654:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
  406658:	bf1e      	ittt	ne
  40665a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
  40665e:	ea92 0f0c 	teqne	r2, ip
  406662:	ea93 0f0c 	teqne	r3, ip
  406666:	d06f      	beq.n	406748 <__aeabi_fmul+0xf8>
  406668:	441a      	add	r2, r3
  40666a:	ea80 0c01 	eor.w	ip, r0, r1
  40666e:	0240      	lsls	r0, r0, #9
  406670:	bf18      	it	ne
  406672:	ea5f 2141 	movsne.w	r1, r1, lsl #9
  406676:	d01e      	beq.n	4066b6 <__aeabi_fmul+0x66>
  406678:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
  40667c:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
  406680:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
  406684:	fba0 3101 	umull	r3, r1, r0, r1
  406688:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
  40668c:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
  406690:	bf3e      	ittt	cc
  406692:	0049      	lslcc	r1, r1, #1
  406694:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
  406698:	005b      	lslcc	r3, r3, #1
  40669a:	ea40 0001 	orr.w	r0, r0, r1
  40669e:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
  4066a2:	2afd      	cmp	r2, #253	; 0xfd
  4066a4:	d81d      	bhi.n	4066e2 <__aeabi_fmul+0x92>
  4066a6:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
  4066aa:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  4066ae:	bf08      	it	eq
  4066b0:	f020 0001 	biceq.w	r0, r0, #1
  4066b4:	4770      	bx	lr
  4066b6:	f090 0f00 	teq	r0, #0
  4066ba:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
  4066be:	bf08      	it	eq
  4066c0:	0249      	lsleq	r1, r1, #9
  4066c2:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
  4066c6:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
  4066ca:	3a7f      	subs	r2, #127	; 0x7f
  4066cc:	bfc2      	ittt	gt
  4066ce:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
  4066d2:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
  4066d6:	4770      	bxgt	lr
  4066d8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  4066dc:	f04f 0300 	mov.w	r3, #0
  4066e0:	3a01      	subs	r2, #1
  4066e2:	dc5d      	bgt.n	4067a0 <__aeabi_fmul+0x150>
  4066e4:	f112 0f19 	cmn.w	r2, #25
  4066e8:	bfdc      	itt	le
  4066ea:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
  4066ee:	4770      	bxle	lr
  4066f0:	f1c2 0200 	rsb	r2, r2, #0
  4066f4:	0041      	lsls	r1, r0, #1
  4066f6:	fa21 f102 	lsr.w	r1, r1, r2
  4066fa:	f1c2 0220 	rsb	r2, r2, #32
  4066fe:	fa00 fc02 	lsl.w	ip, r0, r2
  406702:	ea5f 0031 	movs.w	r0, r1, rrx
  406706:	f140 0000 	adc.w	r0, r0, #0
  40670a:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
  40670e:	bf08      	it	eq
  406710:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
  406714:	4770      	bx	lr
  406716:	f092 0f00 	teq	r2, #0
  40671a:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
  40671e:	bf02      	ittt	eq
  406720:	0040      	lsleq	r0, r0, #1
  406722:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
  406726:	3a01      	subeq	r2, #1
  406728:	d0f9      	beq.n	40671e <__aeabi_fmul+0xce>
  40672a:	ea40 000c 	orr.w	r0, r0, ip
  40672e:	f093 0f00 	teq	r3, #0
  406732:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  406736:	bf02      	ittt	eq
  406738:	0049      	lsleq	r1, r1, #1
  40673a:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
  40673e:	3b01      	subeq	r3, #1
  406740:	d0f9      	beq.n	406736 <__aeabi_fmul+0xe6>
  406742:	ea41 010c 	orr.w	r1, r1, ip
  406746:	e78f      	b.n	406668 <__aeabi_fmul+0x18>
  406748:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
  40674c:	ea92 0f0c 	teq	r2, ip
  406750:	bf18      	it	ne
  406752:	ea93 0f0c 	teqne	r3, ip
  406756:	d00a      	beq.n	40676e <__aeabi_fmul+0x11e>
  406758:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
  40675c:	bf18      	it	ne
  40675e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
  406762:	d1d8      	bne.n	406716 <__aeabi_fmul+0xc6>
  406764:	ea80 0001 	eor.w	r0, r0, r1
  406768:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
  40676c:	4770      	bx	lr
  40676e:	f090 0f00 	teq	r0, #0
  406772:	bf17      	itett	ne
  406774:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
  406778:	4608      	moveq	r0, r1
  40677a:	f091 0f00 	teqne	r1, #0
  40677e:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
  406782:	d014      	beq.n	4067ae <__aeabi_fmul+0x15e>
  406784:	ea92 0f0c 	teq	r2, ip
  406788:	d101      	bne.n	40678e <__aeabi_fmul+0x13e>
  40678a:	0242      	lsls	r2, r0, #9
  40678c:	d10f      	bne.n	4067ae <__aeabi_fmul+0x15e>
  40678e:	ea93 0f0c 	teq	r3, ip
  406792:	d103      	bne.n	40679c <__aeabi_fmul+0x14c>
  406794:	024b      	lsls	r3, r1, #9
  406796:	bf18      	it	ne
  406798:	4608      	movne	r0, r1
  40679a:	d108      	bne.n	4067ae <__aeabi_fmul+0x15e>
  40679c:	ea80 0001 	eor.w	r0, r0, r1
  4067a0:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
  4067a4:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  4067a8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  4067ac:	4770      	bx	lr
  4067ae:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  4067b2:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
  4067b6:	4770      	bx	lr

004067b8 <__aeabi_fdiv>:
  4067b8:	f04f 0cff 	mov.w	ip, #255	; 0xff
  4067bc:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
  4067c0:	bf1e      	ittt	ne
  4067c2:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
  4067c6:	ea92 0f0c 	teqne	r2, ip
  4067ca:	ea93 0f0c 	teqne	r3, ip
  4067ce:	d069      	beq.n	4068a4 <__aeabi_fdiv+0xec>
  4067d0:	eba2 0203 	sub.w	r2, r2, r3
  4067d4:	ea80 0c01 	eor.w	ip, r0, r1
  4067d8:	0249      	lsls	r1, r1, #9
  4067da:	ea4f 2040 	mov.w	r0, r0, lsl #9
  4067de:	d037      	beq.n	406850 <__aeabi_fdiv+0x98>
  4067e0:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
  4067e4:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
  4067e8:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
  4067ec:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
  4067f0:	428b      	cmp	r3, r1
  4067f2:	bf38      	it	cc
  4067f4:	005b      	lslcc	r3, r3, #1
  4067f6:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
  4067fa:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
  4067fe:	428b      	cmp	r3, r1
  406800:	bf24      	itt	cs
  406802:	1a5b      	subcs	r3, r3, r1
  406804:	ea40 000c 	orrcs.w	r0, r0, ip
  406808:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
  40680c:	bf24      	itt	cs
  40680e:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
  406812:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  406816:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
  40681a:	bf24      	itt	cs
  40681c:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
  406820:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  406824:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
  406828:	bf24      	itt	cs
  40682a:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
  40682e:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  406832:	011b      	lsls	r3, r3, #4
  406834:	bf18      	it	ne
  406836:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
  40683a:	d1e0      	bne.n	4067fe <__aeabi_fdiv+0x46>
  40683c:	2afd      	cmp	r2, #253	; 0xfd
  40683e:	f63f af50 	bhi.w	4066e2 <__aeabi_fmul+0x92>
  406842:	428b      	cmp	r3, r1
  406844:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  406848:	bf08      	it	eq
  40684a:	f020 0001 	biceq.w	r0, r0, #1
  40684e:	4770      	bx	lr
  406850:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
  406854:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
  406858:	327f      	adds	r2, #127	; 0x7f
  40685a:	bfc2      	ittt	gt
  40685c:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
  406860:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
  406864:	4770      	bxgt	lr
  406866:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  40686a:	f04f 0300 	mov.w	r3, #0
  40686e:	3a01      	subs	r2, #1
  406870:	e737      	b.n	4066e2 <__aeabi_fmul+0x92>
  406872:	f092 0f00 	teq	r2, #0
  406876:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
  40687a:	bf02      	ittt	eq
  40687c:	0040      	lsleq	r0, r0, #1
  40687e:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
  406882:	3a01      	subeq	r2, #1
  406884:	d0f9      	beq.n	40687a <__aeabi_fdiv+0xc2>
  406886:	ea40 000c 	orr.w	r0, r0, ip
  40688a:	f093 0f00 	teq	r3, #0
  40688e:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  406892:	bf02      	ittt	eq
  406894:	0049      	lsleq	r1, r1, #1
  406896:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
  40689a:	3b01      	subeq	r3, #1
  40689c:	d0f9      	beq.n	406892 <__aeabi_fdiv+0xda>
  40689e:	ea41 010c 	orr.w	r1, r1, ip
  4068a2:	e795      	b.n	4067d0 <__aeabi_fdiv+0x18>
  4068a4:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
  4068a8:	ea92 0f0c 	teq	r2, ip
  4068ac:	d108      	bne.n	4068c0 <__aeabi_fdiv+0x108>
  4068ae:	0242      	lsls	r2, r0, #9
  4068b0:	f47f af7d 	bne.w	4067ae <__aeabi_fmul+0x15e>
  4068b4:	ea93 0f0c 	teq	r3, ip
  4068b8:	f47f af70 	bne.w	40679c <__aeabi_fmul+0x14c>
  4068bc:	4608      	mov	r0, r1
  4068be:	e776      	b.n	4067ae <__aeabi_fmul+0x15e>
  4068c0:	ea93 0f0c 	teq	r3, ip
  4068c4:	d104      	bne.n	4068d0 <__aeabi_fdiv+0x118>
  4068c6:	024b      	lsls	r3, r1, #9
  4068c8:	f43f af4c 	beq.w	406764 <__aeabi_fmul+0x114>
  4068cc:	4608      	mov	r0, r1
  4068ce:	e76e      	b.n	4067ae <__aeabi_fmul+0x15e>
  4068d0:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
  4068d4:	bf18      	it	ne
  4068d6:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
  4068da:	d1ca      	bne.n	406872 <__aeabi_fdiv+0xba>
  4068dc:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
  4068e0:	f47f af5c 	bne.w	40679c <__aeabi_fmul+0x14c>
  4068e4:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
  4068e8:	f47f af3c 	bne.w	406764 <__aeabi_fmul+0x114>
  4068ec:	e75f      	b.n	4067ae <__aeabi_fmul+0x15e>
  4068ee:	bf00      	nop

004068f0 <__gesf2>:
  4068f0:	f04f 3cff 	mov.w	ip, #4294967295
  4068f4:	e006      	b.n	406904 <__cmpsf2+0x4>
  4068f6:	bf00      	nop

004068f8 <__lesf2>:
  4068f8:	f04f 0c01 	mov.w	ip, #1
  4068fc:	e002      	b.n	406904 <__cmpsf2+0x4>
  4068fe:	bf00      	nop

00406900 <__cmpsf2>:
  406900:	f04f 0c01 	mov.w	ip, #1
  406904:	f84d cd04 	str.w	ip, [sp, #-4]!
  406908:	ea4f 0240 	mov.w	r2, r0, lsl #1
  40690c:	ea4f 0341 	mov.w	r3, r1, lsl #1
  406910:	ea7f 6c22 	mvns.w	ip, r2, asr #24
  406914:	bf18      	it	ne
  406916:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  40691a:	d011      	beq.n	406940 <__cmpsf2+0x40>
  40691c:	b001      	add	sp, #4
  40691e:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
  406922:	bf18      	it	ne
  406924:	ea90 0f01 	teqne	r0, r1
  406928:	bf58      	it	pl
  40692a:	ebb2 0003 	subspl.w	r0, r2, r3
  40692e:	bf88      	it	hi
  406930:	17c8      	asrhi	r0, r1, #31
  406932:	bf38      	it	cc
  406934:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
  406938:	bf18      	it	ne
  40693a:	f040 0001 	orrne.w	r0, r0, #1
  40693e:	4770      	bx	lr
  406940:	ea7f 6c22 	mvns.w	ip, r2, asr #24
  406944:	d102      	bne.n	40694c <__cmpsf2+0x4c>
  406946:	ea5f 2c40 	movs.w	ip, r0, lsl #9
  40694a:	d105      	bne.n	406958 <__cmpsf2+0x58>
  40694c:	ea7f 6c23 	mvns.w	ip, r3, asr #24
  406950:	d1e4      	bne.n	40691c <__cmpsf2+0x1c>
  406952:	ea5f 2c41 	movs.w	ip, r1, lsl #9
  406956:	d0e1      	beq.n	40691c <__cmpsf2+0x1c>
  406958:	f85d 0b04 	ldr.w	r0, [sp], #4
  40695c:	4770      	bx	lr
  40695e:	bf00      	nop

00406960 <__aeabi_cfrcmple>:
  406960:	4684      	mov	ip, r0
  406962:	4608      	mov	r0, r1
  406964:	4661      	mov	r1, ip
  406966:	e7ff      	b.n	406968 <__aeabi_cfcmpeq>

00406968 <__aeabi_cfcmpeq>:
  406968:	b50f      	push	{r0, r1, r2, r3, lr}
  40696a:	f7ff ffc9 	bl	406900 <__cmpsf2>
  40696e:	2800      	cmp	r0, #0
  406970:	bf48      	it	mi
  406972:	f110 0f00 	cmnmi.w	r0, #0
  406976:	bd0f      	pop	{r0, r1, r2, r3, pc}

00406978 <__aeabi_fcmpeq>:
  406978:	f84d ed08 	str.w	lr, [sp, #-8]!
  40697c:	f7ff fff4 	bl	406968 <__aeabi_cfcmpeq>
  406980:	bf0c      	ite	eq
  406982:	2001      	moveq	r0, #1
  406984:	2000      	movne	r0, #0
  406986:	f85d fb08 	ldr.w	pc, [sp], #8
  40698a:	bf00      	nop

0040698c <__aeabi_fcmplt>:
  40698c:	f84d ed08 	str.w	lr, [sp, #-8]!
  406990:	f7ff ffea 	bl	406968 <__aeabi_cfcmpeq>
  406994:	bf34      	ite	cc
  406996:	2001      	movcc	r0, #1
  406998:	2000      	movcs	r0, #0
  40699a:	f85d fb08 	ldr.w	pc, [sp], #8
  40699e:	bf00      	nop

004069a0 <__aeabi_fcmple>:
  4069a0:	f84d ed08 	str.w	lr, [sp, #-8]!
  4069a4:	f7ff ffe0 	bl	406968 <__aeabi_cfcmpeq>
  4069a8:	bf94      	ite	ls
  4069aa:	2001      	movls	r0, #1
  4069ac:	2000      	movhi	r0, #0
  4069ae:	f85d fb08 	ldr.w	pc, [sp], #8
  4069b2:	bf00      	nop

004069b4 <__aeabi_fcmpge>:
  4069b4:	f84d ed08 	str.w	lr, [sp, #-8]!
  4069b8:	f7ff ffd2 	bl	406960 <__aeabi_cfrcmple>
  4069bc:	bf94      	ite	ls
  4069be:	2001      	movls	r0, #1
  4069c0:	2000      	movhi	r0, #0
  4069c2:	f85d fb08 	ldr.w	pc, [sp], #8
  4069c6:	bf00      	nop

004069c8 <__aeabi_fcmpgt>:
  4069c8:	f84d ed08 	str.w	lr, [sp, #-8]!
  4069cc:	f7ff ffc8 	bl	406960 <__aeabi_cfrcmple>
  4069d0:	bf34      	ite	cc
  4069d2:	2001      	movcc	r0, #1
  4069d4:	2000      	movcs	r0, #0
  4069d6:	f85d fb08 	ldr.w	pc, [sp], #8
  4069da:	bf00      	nop

004069dc <__aeabi_f2iz>:
  4069dc:	ea4f 0240 	mov.w	r2, r0, lsl #1
  4069e0:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
  4069e4:	d30f      	bcc.n	406a06 <__aeabi_f2iz+0x2a>
  4069e6:	f04f 039e 	mov.w	r3, #158	; 0x9e
  4069ea:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
  4069ee:	d90d      	bls.n	406a0c <__aeabi_f2iz+0x30>
  4069f0:	ea4f 2300 	mov.w	r3, r0, lsl #8
  4069f4:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  4069f8:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
  4069fc:	fa23 f002 	lsr.w	r0, r3, r2
  406a00:	bf18      	it	ne
  406a02:	4240      	negne	r0, r0
  406a04:	4770      	bx	lr
  406a06:	f04f 0000 	mov.w	r0, #0
  406a0a:	4770      	bx	lr
  406a0c:	f112 0f61 	cmn.w	r2, #97	; 0x61
  406a10:	d101      	bne.n	406a16 <__aeabi_f2iz+0x3a>
  406a12:	0242      	lsls	r2, r0, #9
  406a14:	d105      	bne.n	406a22 <__aeabi_f2iz+0x46>
  406a16:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
  406a1a:	bf08      	it	eq
  406a1c:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  406a20:	4770      	bx	lr
  406a22:	f04f 0000 	mov.w	r0, #0
  406a26:	4770      	bx	lr

00406a28 <calloc>:
  406a28:	4b02      	ldr	r3, [pc, #8]	; (406a34 <calloc+0xc>)
  406a2a:	460a      	mov	r2, r1
  406a2c:	4601      	mov	r1, r0
  406a2e:	6818      	ldr	r0, [r3, #0]
  406a30:	f000 b802 	b.w	406a38 <_calloc_r>
  406a34:	20400050 	.word	0x20400050

00406a38 <_calloc_r>:
  406a38:	b510      	push	{r4, lr}
  406a3a:	fb02 f101 	mul.w	r1, r2, r1
  406a3e:	f000 f877 	bl	406b30 <_malloc_r>
  406a42:	4604      	mov	r4, r0
  406a44:	b1d8      	cbz	r0, 406a7e <_calloc_r+0x46>
  406a46:	f850 2c04 	ldr.w	r2, [r0, #-4]
  406a4a:	f022 0203 	bic.w	r2, r2, #3
  406a4e:	3a04      	subs	r2, #4
  406a50:	2a24      	cmp	r2, #36	; 0x24
  406a52:	d818      	bhi.n	406a86 <_calloc_r+0x4e>
  406a54:	2a13      	cmp	r2, #19
  406a56:	d914      	bls.n	406a82 <_calloc_r+0x4a>
  406a58:	2300      	movs	r3, #0
  406a5a:	2a1b      	cmp	r2, #27
  406a5c:	6003      	str	r3, [r0, #0]
  406a5e:	6043      	str	r3, [r0, #4]
  406a60:	d916      	bls.n	406a90 <_calloc_r+0x58>
  406a62:	2a24      	cmp	r2, #36	; 0x24
  406a64:	6083      	str	r3, [r0, #8]
  406a66:	60c3      	str	r3, [r0, #12]
  406a68:	bf11      	iteee	ne
  406a6a:	f100 0210 	addne.w	r2, r0, #16
  406a6e:	6103      	streq	r3, [r0, #16]
  406a70:	6143      	streq	r3, [r0, #20]
  406a72:	f100 0218 	addeq.w	r2, r0, #24
  406a76:	2300      	movs	r3, #0
  406a78:	6013      	str	r3, [r2, #0]
  406a7a:	6053      	str	r3, [r2, #4]
  406a7c:	6093      	str	r3, [r2, #8]
  406a7e:	4620      	mov	r0, r4
  406a80:	bd10      	pop	{r4, pc}
  406a82:	4602      	mov	r2, r0
  406a84:	e7f7      	b.n	406a76 <_calloc_r+0x3e>
  406a86:	2100      	movs	r1, #0
  406a88:	f000 fb02 	bl	407090 <memset>
  406a8c:	4620      	mov	r0, r4
  406a8e:	bd10      	pop	{r4, pc}
  406a90:	f100 0208 	add.w	r2, r0, #8
  406a94:	e7ef      	b.n	406a76 <_calloc_r+0x3e>
  406a96:	bf00      	nop

00406a98 <__libc_init_array>:
  406a98:	b570      	push	{r4, r5, r6, lr}
  406a9a:	4e0f      	ldr	r6, [pc, #60]	; (406ad8 <__libc_init_array+0x40>)
  406a9c:	4d0f      	ldr	r5, [pc, #60]	; (406adc <__libc_init_array+0x44>)
  406a9e:	1b76      	subs	r6, r6, r5
  406aa0:	10b6      	asrs	r6, r6, #2
  406aa2:	bf18      	it	ne
  406aa4:	2400      	movne	r4, #0
  406aa6:	d005      	beq.n	406ab4 <__libc_init_array+0x1c>
  406aa8:	3401      	adds	r4, #1
  406aaa:	f855 3b04 	ldr.w	r3, [r5], #4
  406aae:	4798      	blx	r3
  406ab0:	42a6      	cmp	r6, r4
  406ab2:	d1f9      	bne.n	406aa8 <__libc_init_array+0x10>
  406ab4:	4e0a      	ldr	r6, [pc, #40]	; (406ae0 <__libc_init_array+0x48>)
  406ab6:	4d0b      	ldr	r5, [pc, #44]	; (406ae4 <__libc_init_array+0x4c>)
  406ab8:	1b76      	subs	r6, r6, r5
  406aba:	f00e f8a1 	bl	414c00 <_init>
  406abe:	10b6      	asrs	r6, r6, #2
  406ac0:	bf18      	it	ne
  406ac2:	2400      	movne	r4, #0
  406ac4:	d006      	beq.n	406ad4 <__libc_init_array+0x3c>
  406ac6:	3401      	adds	r4, #1
  406ac8:	f855 3b04 	ldr.w	r3, [r5], #4
  406acc:	4798      	blx	r3
  406ace:	42a6      	cmp	r6, r4
  406ad0:	d1f9      	bne.n	406ac6 <__libc_init_array+0x2e>
  406ad2:	bd70      	pop	{r4, r5, r6, pc}
  406ad4:	bd70      	pop	{r4, r5, r6, pc}
  406ad6:	bf00      	nop
  406ad8:	00414c0c 	.word	0x00414c0c
  406adc:	00414c0c 	.word	0x00414c0c
  406ae0:	00414c14 	.word	0x00414c14
  406ae4:	00414c0c 	.word	0x00414c0c

00406ae8 <iprintf>:
  406ae8:	b40f      	push	{r0, r1, r2, r3}
  406aea:	b500      	push	{lr}
  406aec:	4907      	ldr	r1, [pc, #28]	; (406b0c <iprintf+0x24>)
  406aee:	b083      	sub	sp, #12
  406af0:	ab04      	add	r3, sp, #16
  406af2:	6808      	ldr	r0, [r1, #0]
  406af4:	f853 2b04 	ldr.w	r2, [r3], #4
  406af8:	6881      	ldr	r1, [r0, #8]
  406afa:	9301      	str	r3, [sp, #4]
  406afc:	f000 fc44 	bl	407388 <_vfiprintf_r>
  406b00:	b003      	add	sp, #12
  406b02:	f85d eb04 	ldr.w	lr, [sp], #4
  406b06:	b004      	add	sp, #16
  406b08:	4770      	bx	lr
  406b0a:	bf00      	nop
  406b0c:	20400050 	.word	0x20400050

00406b10 <malloc>:
  406b10:	4b02      	ldr	r3, [pc, #8]	; (406b1c <malloc+0xc>)
  406b12:	4601      	mov	r1, r0
  406b14:	6818      	ldr	r0, [r3, #0]
  406b16:	f000 b80b 	b.w	406b30 <_malloc_r>
  406b1a:	bf00      	nop
  406b1c:	20400050 	.word	0x20400050

00406b20 <free>:
  406b20:	4b02      	ldr	r3, [pc, #8]	; (406b2c <free+0xc>)
  406b22:	4601      	mov	r1, r0
  406b24:	6818      	ldr	r0, [r3, #0]
  406b26:	f001 bd4b 	b.w	4085c0 <_free_r>
  406b2a:	bf00      	nop
  406b2c:	20400050 	.word	0x20400050

00406b30 <_malloc_r>:
  406b30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  406b34:	f101 060b 	add.w	r6, r1, #11
  406b38:	2e16      	cmp	r6, #22
  406b3a:	b083      	sub	sp, #12
  406b3c:	4605      	mov	r5, r0
  406b3e:	f240 809e 	bls.w	406c7e <_malloc_r+0x14e>
  406b42:	f036 0607 	bics.w	r6, r6, #7
  406b46:	f100 80bd 	bmi.w	406cc4 <_malloc_r+0x194>
  406b4a:	42b1      	cmp	r1, r6
  406b4c:	f200 80ba 	bhi.w	406cc4 <_malloc_r+0x194>
  406b50:	f000 faec 	bl	40712c <__malloc_lock>
  406b54:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  406b58:	f0c0 8293 	bcc.w	407082 <_malloc_r+0x552>
  406b5c:	0a73      	lsrs	r3, r6, #9
  406b5e:	f000 80b8 	beq.w	406cd2 <_malloc_r+0x1a2>
  406b62:	2b04      	cmp	r3, #4
  406b64:	f200 8179 	bhi.w	406e5a <_malloc_r+0x32a>
  406b68:	09b3      	lsrs	r3, r6, #6
  406b6a:	f103 0039 	add.w	r0, r3, #57	; 0x39
  406b6e:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  406b72:	00c3      	lsls	r3, r0, #3
  406b74:	4fbf      	ldr	r7, [pc, #764]	; (406e74 <_malloc_r+0x344>)
  406b76:	443b      	add	r3, r7
  406b78:	f1a3 0108 	sub.w	r1, r3, #8
  406b7c:	685c      	ldr	r4, [r3, #4]
  406b7e:	42a1      	cmp	r1, r4
  406b80:	d106      	bne.n	406b90 <_malloc_r+0x60>
  406b82:	e00c      	b.n	406b9e <_malloc_r+0x6e>
  406b84:	2a00      	cmp	r2, #0
  406b86:	f280 80aa 	bge.w	406cde <_malloc_r+0x1ae>
  406b8a:	68e4      	ldr	r4, [r4, #12]
  406b8c:	42a1      	cmp	r1, r4
  406b8e:	d006      	beq.n	406b9e <_malloc_r+0x6e>
  406b90:	6863      	ldr	r3, [r4, #4]
  406b92:	f023 0303 	bic.w	r3, r3, #3
  406b96:	1b9a      	subs	r2, r3, r6
  406b98:	2a0f      	cmp	r2, #15
  406b9a:	ddf3      	ble.n	406b84 <_malloc_r+0x54>
  406b9c:	4670      	mov	r0, lr
  406b9e:	693c      	ldr	r4, [r7, #16]
  406ba0:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 406e88 <_malloc_r+0x358>
  406ba4:	4574      	cmp	r4, lr
  406ba6:	f000 81ab 	beq.w	406f00 <_malloc_r+0x3d0>
  406baa:	6863      	ldr	r3, [r4, #4]
  406bac:	f023 0303 	bic.w	r3, r3, #3
  406bb0:	1b9a      	subs	r2, r3, r6
  406bb2:	2a0f      	cmp	r2, #15
  406bb4:	f300 8190 	bgt.w	406ed8 <_malloc_r+0x3a8>
  406bb8:	2a00      	cmp	r2, #0
  406bba:	f8c7 e014 	str.w	lr, [r7, #20]
  406bbe:	f8c7 e010 	str.w	lr, [r7, #16]
  406bc2:	f280 809d 	bge.w	406d00 <_malloc_r+0x1d0>
  406bc6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  406bca:	f080 8161 	bcs.w	406e90 <_malloc_r+0x360>
  406bce:	08db      	lsrs	r3, r3, #3
  406bd0:	f103 0c01 	add.w	ip, r3, #1
  406bd4:	1099      	asrs	r1, r3, #2
  406bd6:	687a      	ldr	r2, [r7, #4]
  406bd8:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  406bdc:	f8c4 8008 	str.w	r8, [r4, #8]
  406be0:	2301      	movs	r3, #1
  406be2:	408b      	lsls	r3, r1
  406be4:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  406be8:	4313      	orrs	r3, r2
  406bea:	3908      	subs	r1, #8
  406bec:	60e1      	str	r1, [r4, #12]
  406bee:	607b      	str	r3, [r7, #4]
  406bf0:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  406bf4:	f8c8 400c 	str.w	r4, [r8, #12]
  406bf8:	1082      	asrs	r2, r0, #2
  406bfa:	2401      	movs	r4, #1
  406bfc:	4094      	lsls	r4, r2
  406bfe:	429c      	cmp	r4, r3
  406c00:	f200 808b 	bhi.w	406d1a <_malloc_r+0x1ea>
  406c04:	421c      	tst	r4, r3
  406c06:	d106      	bne.n	406c16 <_malloc_r+0xe6>
  406c08:	f020 0003 	bic.w	r0, r0, #3
  406c0c:	0064      	lsls	r4, r4, #1
  406c0e:	421c      	tst	r4, r3
  406c10:	f100 0004 	add.w	r0, r0, #4
  406c14:	d0fa      	beq.n	406c0c <_malloc_r+0xdc>
  406c16:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  406c1a:	46cc      	mov	ip, r9
  406c1c:	4680      	mov	r8, r0
  406c1e:	f8dc 300c 	ldr.w	r3, [ip, #12]
  406c22:	459c      	cmp	ip, r3
  406c24:	d107      	bne.n	406c36 <_malloc_r+0x106>
  406c26:	e16d      	b.n	406f04 <_malloc_r+0x3d4>
  406c28:	2a00      	cmp	r2, #0
  406c2a:	f280 817b 	bge.w	406f24 <_malloc_r+0x3f4>
  406c2e:	68db      	ldr	r3, [r3, #12]
  406c30:	459c      	cmp	ip, r3
  406c32:	f000 8167 	beq.w	406f04 <_malloc_r+0x3d4>
  406c36:	6859      	ldr	r1, [r3, #4]
  406c38:	f021 0103 	bic.w	r1, r1, #3
  406c3c:	1b8a      	subs	r2, r1, r6
  406c3e:	2a0f      	cmp	r2, #15
  406c40:	ddf2      	ble.n	406c28 <_malloc_r+0xf8>
  406c42:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  406c46:	f8d3 8008 	ldr.w	r8, [r3, #8]
  406c4a:	9300      	str	r3, [sp, #0]
  406c4c:	199c      	adds	r4, r3, r6
  406c4e:	4628      	mov	r0, r5
  406c50:	f046 0601 	orr.w	r6, r6, #1
  406c54:	f042 0501 	orr.w	r5, r2, #1
  406c58:	605e      	str	r6, [r3, #4]
  406c5a:	f8c8 c00c 	str.w	ip, [r8, #12]
  406c5e:	f8cc 8008 	str.w	r8, [ip, #8]
  406c62:	617c      	str	r4, [r7, #20]
  406c64:	613c      	str	r4, [r7, #16]
  406c66:	f8c4 e00c 	str.w	lr, [r4, #12]
  406c6a:	f8c4 e008 	str.w	lr, [r4, #8]
  406c6e:	6065      	str	r5, [r4, #4]
  406c70:	505a      	str	r2, [r3, r1]
  406c72:	f000 fa61 	bl	407138 <__malloc_unlock>
  406c76:	9b00      	ldr	r3, [sp, #0]
  406c78:	f103 0408 	add.w	r4, r3, #8
  406c7c:	e01e      	b.n	406cbc <_malloc_r+0x18c>
  406c7e:	2910      	cmp	r1, #16
  406c80:	d820      	bhi.n	406cc4 <_malloc_r+0x194>
  406c82:	f000 fa53 	bl	40712c <__malloc_lock>
  406c86:	2610      	movs	r6, #16
  406c88:	2318      	movs	r3, #24
  406c8a:	2002      	movs	r0, #2
  406c8c:	4f79      	ldr	r7, [pc, #484]	; (406e74 <_malloc_r+0x344>)
  406c8e:	443b      	add	r3, r7
  406c90:	f1a3 0208 	sub.w	r2, r3, #8
  406c94:	685c      	ldr	r4, [r3, #4]
  406c96:	4294      	cmp	r4, r2
  406c98:	f000 813d 	beq.w	406f16 <_malloc_r+0x3e6>
  406c9c:	6863      	ldr	r3, [r4, #4]
  406c9e:	68e1      	ldr	r1, [r4, #12]
  406ca0:	68a6      	ldr	r6, [r4, #8]
  406ca2:	f023 0303 	bic.w	r3, r3, #3
  406ca6:	4423      	add	r3, r4
  406ca8:	4628      	mov	r0, r5
  406caa:	685a      	ldr	r2, [r3, #4]
  406cac:	60f1      	str	r1, [r6, #12]
  406cae:	f042 0201 	orr.w	r2, r2, #1
  406cb2:	608e      	str	r6, [r1, #8]
  406cb4:	605a      	str	r2, [r3, #4]
  406cb6:	f000 fa3f 	bl	407138 <__malloc_unlock>
  406cba:	3408      	adds	r4, #8
  406cbc:	4620      	mov	r0, r4
  406cbe:	b003      	add	sp, #12
  406cc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406cc4:	2400      	movs	r4, #0
  406cc6:	230c      	movs	r3, #12
  406cc8:	4620      	mov	r0, r4
  406cca:	602b      	str	r3, [r5, #0]
  406ccc:	b003      	add	sp, #12
  406cce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406cd2:	2040      	movs	r0, #64	; 0x40
  406cd4:	f44f 7300 	mov.w	r3, #512	; 0x200
  406cd8:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  406cdc:	e74a      	b.n	406b74 <_malloc_r+0x44>
  406cde:	4423      	add	r3, r4
  406ce0:	68e1      	ldr	r1, [r4, #12]
  406ce2:	685a      	ldr	r2, [r3, #4]
  406ce4:	68a6      	ldr	r6, [r4, #8]
  406ce6:	f042 0201 	orr.w	r2, r2, #1
  406cea:	60f1      	str	r1, [r6, #12]
  406cec:	4628      	mov	r0, r5
  406cee:	608e      	str	r6, [r1, #8]
  406cf0:	605a      	str	r2, [r3, #4]
  406cf2:	f000 fa21 	bl	407138 <__malloc_unlock>
  406cf6:	3408      	adds	r4, #8
  406cf8:	4620      	mov	r0, r4
  406cfa:	b003      	add	sp, #12
  406cfc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406d00:	4423      	add	r3, r4
  406d02:	4628      	mov	r0, r5
  406d04:	685a      	ldr	r2, [r3, #4]
  406d06:	f042 0201 	orr.w	r2, r2, #1
  406d0a:	605a      	str	r2, [r3, #4]
  406d0c:	f000 fa14 	bl	407138 <__malloc_unlock>
  406d10:	3408      	adds	r4, #8
  406d12:	4620      	mov	r0, r4
  406d14:	b003      	add	sp, #12
  406d16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406d1a:	68bc      	ldr	r4, [r7, #8]
  406d1c:	6863      	ldr	r3, [r4, #4]
  406d1e:	f023 0803 	bic.w	r8, r3, #3
  406d22:	45b0      	cmp	r8, r6
  406d24:	d304      	bcc.n	406d30 <_malloc_r+0x200>
  406d26:	eba8 0306 	sub.w	r3, r8, r6
  406d2a:	2b0f      	cmp	r3, #15
  406d2c:	f300 8085 	bgt.w	406e3a <_malloc_r+0x30a>
  406d30:	f8df 9158 	ldr.w	r9, [pc, #344]	; 406e8c <_malloc_r+0x35c>
  406d34:	4b50      	ldr	r3, [pc, #320]	; (406e78 <_malloc_r+0x348>)
  406d36:	f8d9 2000 	ldr.w	r2, [r9]
  406d3a:	681b      	ldr	r3, [r3, #0]
  406d3c:	3201      	adds	r2, #1
  406d3e:	4433      	add	r3, r6
  406d40:	eb04 0a08 	add.w	sl, r4, r8
  406d44:	f000 8155 	beq.w	406ff2 <_malloc_r+0x4c2>
  406d48:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  406d4c:	330f      	adds	r3, #15
  406d4e:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  406d52:	f02b 0b0f 	bic.w	fp, fp, #15
  406d56:	4659      	mov	r1, fp
  406d58:	4628      	mov	r0, r5
  406d5a:	f000 f9f3 	bl	407144 <_sbrk_r>
  406d5e:	1c41      	adds	r1, r0, #1
  406d60:	4602      	mov	r2, r0
  406d62:	f000 80fc 	beq.w	406f5e <_malloc_r+0x42e>
  406d66:	4582      	cmp	sl, r0
  406d68:	f200 80f7 	bhi.w	406f5a <_malloc_r+0x42a>
  406d6c:	4b43      	ldr	r3, [pc, #268]	; (406e7c <_malloc_r+0x34c>)
  406d6e:	6819      	ldr	r1, [r3, #0]
  406d70:	4459      	add	r1, fp
  406d72:	6019      	str	r1, [r3, #0]
  406d74:	f000 814d 	beq.w	407012 <_malloc_r+0x4e2>
  406d78:	f8d9 0000 	ldr.w	r0, [r9]
  406d7c:	3001      	adds	r0, #1
  406d7e:	bf1b      	ittet	ne
  406d80:	eba2 0a0a 	subne.w	sl, r2, sl
  406d84:	4451      	addne	r1, sl
  406d86:	f8c9 2000 	streq.w	r2, [r9]
  406d8a:	6019      	strne	r1, [r3, #0]
  406d8c:	f012 0107 	ands.w	r1, r2, #7
  406d90:	f000 8115 	beq.w	406fbe <_malloc_r+0x48e>
  406d94:	f1c1 0008 	rsb	r0, r1, #8
  406d98:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  406d9c:	4402      	add	r2, r0
  406d9e:	3108      	adds	r1, #8
  406da0:	eb02 090b 	add.w	r9, r2, fp
  406da4:	f3c9 090b 	ubfx	r9, r9, #0, #12
  406da8:	eba1 0909 	sub.w	r9, r1, r9
  406dac:	4649      	mov	r1, r9
  406dae:	4628      	mov	r0, r5
  406db0:	9301      	str	r3, [sp, #4]
  406db2:	9200      	str	r2, [sp, #0]
  406db4:	f000 f9c6 	bl	407144 <_sbrk_r>
  406db8:	1c43      	adds	r3, r0, #1
  406dba:	e89d 000c 	ldmia.w	sp, {r2, r3}
  406dbe:	f000 8143 	beq.w	407048 <_malloc_r+0x518>
  406dc2:	1a80      	subs	r0, r0, r2
  406dc4:	4448      	add	r0, r9
  406dc6:	f040 0001 	orr.w	r0, r0, #1
  406dca:	6819      	ldr	r1, [r3, #0]
  406dcc:	60ba      	str	r2, [r7, #8]
  406dce:	4449      	add	r1, r9
  406dd0:	42bc      	cmp	r4, r7
  406dd2:	6050      	str	r0, [r2, #4]
  406dd4:	6019      	str	r1, [r3, #0]
  406dd6:	d017      	beq.n	406e08 <_malloc_r+0x2d8>
  406dd8:	f1b8 0f0f 	cmp.w	r8, #15
  406ddc:	f240 80fb 	bls.w	406fd6 <_malloc_r+0x4a6>
  406de0:	6860      	ldr	r0, [r4, #4]
  406de2:	f1a8 020c 	sub.w	r2, r8, #12
  406de6:	f022 0207 	bic.w	r2, r2, #7
  406dea:	eb04 0e02 	add.w	lr, r4, r2
  406dee:	f000 0001 	and.w	r0, r0, #1
  406df2:	f04f 0c05 	mov.w	ip, #5
  406df6:	4310      	orrs	r0, r2
  406df8:	2a0f      	cmp	r2, #15
  406dfa:	6060      	str	r0, [r4, #4]
  406dfc:	f8ce c004 	str.w	ip, [lr, #4]
  406e00:	f8ce c008 	str.w	ip, [lr, #8]
  406e04:	f200 8117 	bhi.w	407036 <_malloc_r+0x506>
  406e08:	4b1d      	ldr	r3, [pc, #116]	; (406e80 <_malloc_r+0x350>)
  406e0a:	68bc      	ldr	r4, [r7, #8]
  406e0c:	681a      	ldr	r2, [r3, #0]
  406e0e:	4291      	cmp	r1, r2
  406e10:	bf88      	it	hi
  406e12:	6019      	strhi	r1, [r3, #0]
  406e14:	4b1b      	ldr	r3, [pc, #108]	; (406e84 <_malloc_r+0x354>)
  406e16:	681a      	ldr	r2, [r3, #0]
  406e18:	4291      	cmp	r1, r2
  406e1a:	6862      	ldr	r2, [r4, #4]
  406e1c:	bf88      	it	hi
  406e1e:	6019      	strhi	r1, [r3, #0]
  406e20:	f022 0203 	bic.w	r2, r2, #3
  406e24:	4296      	cmp	r6, r2
  406e26:	eba2 0306 	sub.w	r3, r2, r6
  406e2a:	d801      	bhi.n	406e30 <_malloc_r+0x300>
  406e2c:	2b0f      	cmp	r3, #15
  406e2e:	dc04      	bgt.n	406e3a <_malloc_r+0x30a>
  406e30:	4628      	mov	r0, r5
  406e32:	f000 f981 	bl	407138 <__malloc_unlock>
  406e36:	2400      	movs	r4, #0
  406e38:	e740      	b.n	406cbc <_malloc_r+0x18c>
  406e3a:	19a2      	adds	r2, r4, r6
  406e3c:	f043 0301 	orr.w	r3, r3, #1
  406e40:	f046 0601 	orr.w	r6, r6, #1
  406e44:	6066      	str	r6, [r4, #4]
  406e46:	4628      	mov	r0, r5
  406e48:	60ba      	str	r2, [r7, #8]
  406e4a:	6053      	str	r3, [r2, #4]
  406e4c:	f000 f974 	bl	407138 <__malloc_unlock>
  406e50:	3408      	adds	r4, #8
  406e52:	4620      	mov	r0, r4
  406e54:	b003      	add	sp, #12
  406e56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406e5a:	2b14      	cmp	r3, #20
  406e5c:	d971      	bls.n	406f42 <_malloc_r+0x412>
  406e5e:	2b54      	cmp	r3, #84	; 0x54
  406e60:	f200 80a3 	bhi.w	406faa <_malloc_r+0x47a>
  406e64:	0b33      	lsrs	r3, r6, #12
  406e66:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  406e6a:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  406e6e:	00c3      	lsls	r3, r0, #3
  406e70:	e680      	b.n	406b74 <_malloc_r+0x44>
  406e72:	bf00      	nop
  406e74:	20400480 	.word	0x20400480
  406e78:	20402d38 	.word	0x20402d38
  406e7c:	20402d08 	.word	0x20402d08
  406e80:	20402d30 	.word	0x20402d30
  406e84:	20402d34 	.word	0x20402d34
  406e88:	20400488 	.word	0x20400488
  406e8c:	20400888 	.word	0x20400888
  406e90:	0a5a      	lsrs	r2, r3, #9
  406e92:	2a04      	cmp	r2, #4
  406e94:	d95b      	bls.n	406f4e <_malloc_r+0x41e>
  406e96:	2a14      	cmp	r2, #20
  406e98:	f200 80ae 	bhi.w	406ff8 <_malloc_r+0x4c8>
  406e9c:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  406ea0:	00c9      	lsls	r1, r1, #3
  406ea2:	325b      	adds	r2, #91	; 0x5b
  406ea4:	eb07 0c01 	add.w	ip, r7, r1
  406ea8:	5879      	ldr	r1, [r7, r1]
  406eaa:	f1ac 0c08 	sub.w	ip, ip, #8
  406eae:	458c      	cmp	ip, r1
  406eb0:	f000 8088 	beq.w	406fc4 <_malloc_r+0x494>
  406eb4:	684a      	ldr	r2, [r1, #4]
  406eb6:	f022 0203 	bic.w	r2, r2, #3
  406eba:	4293      	cmp	r3, r2
  406ebc:	d273      	bcs.n	406fa6 <_malloc_r+0x476>
  406ebe:	6889      	ldr	r1, [r1, #8]
  406ec0:	458c      	cmp	ip, r1
  406ec2:	d1f7      	bne.n	406eb4 <_malloc_r+0x384>
  406ec4:	f8dc 200c 	ldr.w	r2, [ip, #12]
  406ec8:	687b      	ldr	r3, [r7, #4]
  406eca:	60e2      	str	r2, [r4, #12]
  406ecc:	f8c4 c008 	str.w	ip, [r4, #8]
  406ed0:	6094      	str	r4, [r2, #8]
  406ed2:	f8cc 400c 	str.w	r4, [ip, #12]
  406ed6:	e68f      	b.n	406bf8 <_malloc_r+0xc8>
  406ed8:	19a1      	adds	r1, r4, r6
  406eda:	f046 0c01 	orr.w	ip, r6, #1
  406ede:	f042 0601 	orr.w	r6, r2, #1
  406ee2:	f8c4 c004 	str.w	ip, [r4, #4]
  406ee6:	4628      	mov	r0, r5
  406ee8:	6179      	str	r1, [r7, #20]
  406eea:	6139      	str	r1, [r7, #16]
  406eec:	f8c1 e00c 	str.w	lr, [r1, #12]
  406ef0:	f8c1 e008 	str.w	lr, [r1, #8]
  406ef4:	604e      	str	r6, [r1, #4]
  406ef6:	50e2      	str	r2, [r4, r3]
  406ef8:	f000 f91e 	bl	407138 <__malloc_unlock>
  406efc:	3408      	adds	r4, #8
  406efe:	e6dd      	b.n	406cbc <_malloc_r+0x18c>
  406f00:	687b      	ldr	r3, [r7, #4]
  406f02:	e679      	b.n	406bf8 <_malloc_r+0xc8>
  406f04:	f108 0801 	add.w	r8, r8, #1
  406f08:	f018 0f03 	tst.w	r8, #3
  406f0c:	f10c 0c08 	add.w	ip, ip, #8
  406f10:	f47f ae85 	bne.w	406c1e <_malloc_r+0xee>
  406f14:	e02d      	b.n	406f72 <_malloc_r+0x442>
  406f16:	68dc      	ldr	r4, [r3, #12]
  406f18:	42a3      	cmp	r3, r4
  406f1a:	bf08      	it	eq
  406f1c:	3002      	addeq	r0, #2
  406f1e:	f43f ae3e 	beq.w	406b9e <_malloc_r+0x6e>
  406f22:	e6bb      	b.n	406c9c <_malloc_r+0x16c>
  406f24:	4419      	add	r1, r3
  406f26:	461c      	mov	r4, r3
  406f28:	684a      	ldr	r2, [r1, #4]
  406f2a:	68db      	ldr	r3, [r3, #12]
  406f2c:	f854 6f08 	ldr.w	r6, [r4, #8]!
  406f30:	f042 0201 	orr.w	r2, r2, #1
  406f34:	604a      	str	r2, [r1, #4]
  406f36:	4628      	mov	r0, r5
  406f38:	60f3      	str	r3, [r6, #12]
  406f3a:	609e      	str	r6, [r3, #8]
  406f3c:	f000 f8fc 	bl	407138 <__malloc_unlock>
  406f40:	e6bc      	b.n	406cbc <_malloc_r+0x18c>
  406f42:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  406f46:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  406f4a:	00c3      	lsls	r3, r0, #3
  406f4c:	e612      	b.n	406b74 <_malloc_r+0x44>
  406f4e:	099a      	lsrs	r2, r3, #6
  406f50:	f102 0139 	add.w	r1, r2, #57	; 0x39
  406f54:	00c9      	lsls	r1, r1, #3
  406f56:	3238      	adds	r2, #56	; 0x38
  406f58:	e7a4      	b.n	406ea4 <_malloc_r+0x374>
  406f5a:	42bc      	cmp	r4, r7
  406f5c:	d054      	beq.n	407008 <_malloc_r+0x4d8>
  406f5e:	68bc      	ldr	r4, [r7, #8]
  406f60:	6862      	ldr	r2, [r4, #4]
  406f62:	f022 0203 	bic.w	r2, r2, #3
  406f66:	e75d      	b.n	406e24 <_malloc_r+0x2f4>
  406f68:	f859 3908 	ldr.w	r3, [r9], #-8
  406f6c:	4599      	cmp	r9, r3
  406f6e:	f040 8086 	bne.w	40707e <_malloc_r+0x54e>
  406f72:	f010 0f03 	tst.w	r0, #3
  406f76:	f100 30ff 	add.w	r0, r0, #4294967295
  406f7a:	d1f5      	bne.n	406f68 <_malloc_r+0x438>
  406f7c:	687b      	ldr	r3, [r7, #4]
  406f7e:	ea23 0304 	bic.w	r3, r3, r4
  406f82:	607b      	str	r3, [r7, #4]
  406f84:	0064      	lsls	r4, r4, #1
  406f86:	429c      	cmp	r4, r3
  406f88:	f63f aec7 	bhi.w	406d1a <_malloc_r+0x1ea>
  406f8c:	2c00      	cmp	r4, #0
  406f8e:	f43f aec4 	beq.w	406d1a <_malloc_r+0x1ea>
  406f92:	421c      	tst	r4, r3
  406f94:	4640      	mov	r0, r8
  406f96:	f47f ae3e 	bne.w	406c16 <_malloc_r+0xe6>
  406f9a:	0064      	lsls	r4, r4, #1
  406f9c:	421c      	tst	r4, r3
  406f9e:	f100 0004 	add.w	r0, r0, #4
  406fa2:	d0fa      	beq.n	406f9a <_malloc_r+0x46a>
  406fa4:	e637      	b.n	406c16 <_malloc_r+0xe6>
  406fa6:	468c      	mov	ip, r1
  406fa8:	e78c      	b.n	406ec4 <_malloc_r+0x394>
  406faa:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  406fae:	d815      	bhi.n	406fdc <_malloc_r+0x4ac>
  406fb0:	0bf3      	lsrs	r3, r6, #15
  406fb2:	f103 0078 	add.w	r0, r3, #120	; 0x78
  406fb6:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  406fba:	00c3      	lsls	r3, r0, #3
  406fbc:	e5da      	b.n	406b74 <_malloc_r+0x44>
  406fbe:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  406fc2:	e6ed      	b.n	406da0 <_malloc_r+0x270>
  406fc4:	687b      	ldr	r3, [r7, #4]
  406fc6:	1092      	asrs	r2, r2, #2
  406fc8:	2101      	movs	r1, #1
  406fca:	fa01 f202 	lsl.w	r2, r1, r2
  406fce:	4313      	orrs	r3, r2
  406fd0:	607b      	str	r3, [r7, #4]
  406fd2:	4662      	mov	r2, ip
  406fd4:	e779      	b.n	406eca <_malloc_r+0x39a>
  406fd6:	2301      	movs	r3, #1
  406fd8:	6053      	str	r3, [r2, #4]
  406fda:	e729      	b.n	406e30 <_malloc_r+0x300>
  406fdc:	f240 5254 	movw	r2, #1364	; 0x554
  406fe0:	4293      	cmp	r3, r2
  406fe2:	d822      	bhi.n	40702a <_malloc_r+0x4fa>
  406fe4:	0cb3      	lsrs	r3, r6, #18
  406fe6:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  406fea:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  406fee:	00c3      	lsls	r3, r0, #3
  406ff0:	e5c0      	b.n	406b74 <_malloc_r+0x44>
  406ff2:	f103 0b10 	add.w	fp, r3, #16
  406ff6:	e6ae      	b.n	406d56 <_malloc_r+0x226>
  406ff8:	2a54      	cmp	r2, #84	; 0x54
  406ffa:	d829      	bhi.n	407050 <_malloc_r+0x520>
  406ffc:	0b1a      	lsrs	r2, r3, #12
  406ffe:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  407002:	00c9      	lsls	r1, r1, #3
  407004:	326e      	adds	r2, #110	; 0x6e
  407006:	e74d      	b.n	406ea4 <_malloc_r+0x374>
  407008:	4b20      	ldr	r3, [pc, #128]	; (40708c <_malloc_r+0x55c>)
  40700a:	6819      	ldr	r1, [r3, #0]
  40700c:	4459      	add	r1, fp
  40700e:	6019      	str	r1, [r3, #0]
  407010:	e6b2      	b.n	406d78 <_malloc_r+0x248>
  407012:	f3ca 000b 	ubfx	r0, sl, #0, #12
  407016:	2800      	cmp	r0, #0
  407018:	f47f aeae 	bne.w	406d78 <_malloc_r+0x248>
  40701c:	eb08 030b 	add.w	r3, r8, fp
  407020:	68ba      	ldr	r2, [r7, #8]
  407022:	f043 0301 	orr.w	r3, r3, #1
  407026:	6053      	str	r3, [r2, #4]
  407028:	e6ee      	b.n	406e08 <_malloc_r+0x2d8>
  40702a:	207f      	movs	r0, #127	; 0x7f
  40702c:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  407030:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  407034:	e59e      	b.n	406b74 <_malloc_r+0x44>
  407036:	f104 0108 	add.w	r1, r4, #8
  40703a:	4628      	mov	r0, r5
  40703c:	9300      	str	r3, [sp, #0]
  40703e:	f001 fabf 	bl	4085c0 <_free_r>
  407042:	9b00      	ldr	r3, [sp, #0]
  407044:	6819      	ldr	r1, [r3, #0]
  407046:	e6df      	b.n	406e08 <_malloc_r+0x2d8>
  407048:	2001      	movs	r0, #1
  40704a:	f04f 0900 	mov.w	r9, #0
  40704e:	e6bc      	b.n	406dca <_malloc_r+0x29a>
  407050:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  407054:	d805      	bhi.n	407062 <_malloc_r+0x532>
  407056:	0bda      	lsrs	r2, r3, #15
  407058:	f102 0178 	add.w	r1, r2, #120	; 0x78
  40705c:	00c9      	lsls	r1, r1, #3
  40705e:	3277      	adds	r2, #119	; 0x77
  407060:	e720      	b.n	406ea4 <_malloc_r+0x374>
  407062:	f240 5154 	movw	r1, #1364	; 0x554
  407066:	428a      	cmp	r2, r1
  407068:	d805      	bhi.n	407076 <_malloc_r+0x546>
  40706a:	0c9a      	lsrs	r2, r3, #18
  40706c:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  407070:	00c9      	lsls	r1, r1, #3
  407072:	327c      	adds	r2, #124	; 0x7c
  407074:	e716      	b.n	406ea4 <_malloc_r+0x374>
  407076:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  40707a:	227e      	movs	r2, #126	; 0x7e
  40707c:	e712      	b.n	406ea4 <_malloc_r+0x374>
  40707e:	687b      	ldr	r3, [r7, #4]
  407080:	e780      	b.n	406f84 <_malloc_r+0x454>
  407082:	08f0      	lsrs	r0, r6, #3
  407084:	f106 0308 	add.w	r3, r6, #8
  407088:	e600      	b.n	406c8c <_malloc_r+0x15c>
  40708a:	bf00      	nop
  40708c:	20402d08 	.word	0x20402d08

00407090 <memset>:
  407090:	b470      	push	{r4, r5, r6}
  407092:	0786      	lsls	r6, r0, #30
  407094:	d046      	beq.n	407124 <memset+0x94>
  407096:	1e54      	subs	r4, r2, #1
  407098:	2a00      	cmp	r2, #0
  40709a:	d041      	beq.n	407120 <memset+0x90>
  40709c:	b2ca      	uxtb	r2, r1
  40709e:	4603      	mov	r3, r0
  4070a0:	e002      	b.n	4070a8 <memset+0x18>
  4070a2:	f114 34ff 	adds.w	r4, r4, #4294967295
  4070a6:	d33b      	bcc.n	407120 <memset+0x90>
  4070a8:	f803 2b01 	strb.w	r2, [r3], #1
  4070ac:	079d      	lsls	r5, r3, #30
  4070ae:	d1f8      	bne.n	4070a2 <memset+0x12>
  4070b0:	2c03      	cmp	r4, #3
  4070b2:	d92e      	bls.n	407112 <memset+0x82>
  4070b4:	b2cd      	uxtb	r5, r1
  4070b6:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  4070ba:	2c0f      	cmp	r4, #15
  4070bc:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  4070c0:	d919      	bls.n	4070f6 <memset+0x66>
  4070c2:	f103 0210 	add.w	r2, r3, #16
  4070c6:	4626      	mov	r6, r4
  4070c8:	3e10      	subs	r6, #16
  4070ca:	2e0f      	cmp	r6, #15
  4070cc:	f842 5c10 	str.w	r5, [r2, #-16]
  4070d0:	f842 5c0c 	str.w	r5, [r2, #-12]
  4070d4:	f842 5c08 	str.w	r5, [r2, #-8]
  4070d8:	f842 5c04 	str.w	r5, [r2, #-4]
  4070dc:	f102 0210 	add.w	r2, r2, #16
  4070e0:	d8f2      	bhi.n	4070c8 <memset+0x38>
  4070e2:	f1a4 0210 	sub.w	r2, r4, #16
  4070e6:	f022 020f 	bic.w	r2, r2, #15
  4070ea:	f004 040f 	and.w	r4, r4, #15
  4070ee:	3210      	adds	r2, #16
  4070f0:	2c03      	cmp	r4, #3
  4070f2:	4413      	add	r3, r2
  4070f4:	d90d      	bls.n	407112 <memset+0x82>
  4070f6:	461e      	mov	r6, r3
  4070f8:	4622      	mov	r2, r4
  4070fa:	3a04      	subs	r2, #4
  4070fc:	2a03      	cmp	r2, #3
  4070fe:	f846 5b04 	str.w	r5, [r6], #4
  407102:	d8fa      	bhi.n	4070fa <memset+0x6a>
  407104:	1f22      	subs	r2, r4, #4
  407106:	f022 0203 	bic.w	r2, r2, #3
  40710a:	3204      	adds	r2, #4
  40710c:	4413      	add	r3, r2
  40710e:	f004 0403 	and.w	r4, r4, #3
  407112:	b12c      	cbz	r4, 407120 <memset+0x90>
  407114:	b2c9      	uxtb	r1, r1
  407116:	441c      	add	r4, r3
  407118:	f803 1b01 	strb.w	r1, [r3], #1
  40711c:	429c      	cmp	r4, r3
  40711e:	d1fb      	bne.n	407118 <memset+0x88>
  407120:	bc70      	pop	{r4, r5, r6}
  407122:	4770      	bx	lr
  407124:	4614      	mov	r4, r2
  407126:	4603      	mov	r3, r0
  407128:	e7c2      	b.n	4070b0 <memset+0x20>
  40712a:	bf00      	nop

0040712c <__malloc_lock>:
  40712c:	4801      	ldr	r0, [pc, #4]	; (407134 <__malloc_lock+0x8>)
  40712e:	f001 bce1 	b.w	408af4 <__retarget_lock_acquire_recursive>
  407132:	bf00      	nop
  407134:	2043b820 	.word	0x2043b820

00407138 <__malloc_unlock>:
  407138:	4801      	ldr	r0, [pc, #4]	; (407140 <__malloc_unlock+0x8>)
  40713a:	f001 bcdd 	b.w	408af8 <__retarget_lock_release_recursive>
  40713e:	bf00      	nop
  407140:	2043b820 	.word	0x2043b820

00407144 <_sbrk_r>:
  407144:	b538      	push	{r3, r4, r5, lr}
  407146:	4c07      	ldr	r4, [pc, #28]	; (407164 <_sbrk_r+0x20>)
  407148:	2300      	movs	r3, #0
  40714a:	4605      	mov	r5, r0
  40714c:	4608      	mov	r0, r1
  40714e:	6023      	str	r3, [r4, #0]
  407150:	f7fd f9ae 	bl	4044b0 <_sbrk>
  407154:	1c43      	adds	r3, r0, #1
  407156:	d000      	beq.n	40715a <_sbrk_r+0x16>
  407158:	bd38      	pop	{r3, r4, r5, pc}
  40715a:	6823      	ldr	r3, [r4, #0]
  40715c:	2b00      	cmp	r3, #0
  40715e:	d0fb      	beq.n	407158 <_sbrk_r+0x14>
  407160:	602b      	str	r3, [r5, #0]
  407162:	bd38      	pop	{r3, r4, r5, pc}
  407164:	2043b834 	.word	0x2043b834

00407168 <setbuf>:
  407168:	2900      	cmp	r1, #0
  40716a:	bf0c      	ite	eq
  40716c:	2202      	moveq	r2, #2
  40716e:	2200      	movne	r2, #0
  407170:	f44f 6380 	mov.w	r3, #1024	; 0x400
  407174:	f000 b800 	b.w	407178 <setvbuf>

00407178 <setvbuf>:
  407178:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  40717c:	4c61      	ldr	r4, [pc, #388]	; (407304 <setvbuf+0x18c>)
  40717e:	6825      	ldr	r5, [r4, #0]
  407180:	b083      	sub	sp, #12
  407182:	4604      	mov	r4, r0
  407184:	460f      	mov	r7, r1
  407186:	4690      	mov	r8, r2
  407188:	461e      	mov	r6, r3
  40718a:	b115      	cbz	r5, 407192 <setvbuf+0x1a>
  40718c:	6bab      	ldr	r3, [r5, #56]	; 0x38
  40718e:	2b00      	cmp	r3, #0
  407190:	d064      	beq.n	40725c <setvbuf+0xe4>
  407192:	f1b8 0f02 	cmp.w	r8, #2
  407196:	d006      	beq.n	4071a6 <setvbuf+0x2e>
  407198:	f1b8 0f01 	cmp.w	r8, #1
  40719c:	f200 809f 	bhi.w	4072de <setvbuf+0x166>
  4071a0:	2e00      	cmp	r6, #0
  4071a2:	f2c0 809c 	blt.w	4072de <setvbuf+0x166>
  4071a6:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4071a8:	07d8      	lsls	r0, r3, #31
  4071aa:	d534      	bpl.n	407216 <setvbuf+0x9e>
  4071ac:	4621      	mov	r1, r4
  4071ae:	4628      	mov	r0, r5
  4071b0:	f001 f888 	bl	4082c4 <_fflush_r>
  4071b4:	6b21      	ldr	r1, [r4, #48]	; 0x30
  4071b6:	b141      	cbz	r1, 4071ca <setvbuf+0x52>
  4071b8:	f104 0340 	add.w	r3, r4, #64	; 0x40
  4071bc:	4299      	cmp	r1, r3
  4071be:	d002      	beq.n	4071c6 <setvbuf+0x4e>
  4071c0:	4628      	mov	r0, r5
  4071c2:	f001 f9fd 	bl	4085c0 <_free_r>
  4071c6:	2300      	movs	r3, #0
  4071c8:	6323      	str	r3, [r4, #48]	; 0x30
  4071ca:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4071ce:	2200      	movs	r2, #0
  4071d0:	61a2      	str	r2, [r4, #24]
  4071d2:	6062      	str	r2, [r4, #4]
  4071d4:	061a      	lsls	r2, r3, #24
  4071d6:	d43a      	bmi.n	40724e <setvbuf+0xd6>
  4071d8:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  4071dc:	f023 0303 	bic.w	r3, r3, #3
  4071e0:	f1b8 0f02 	cmp.w	r8, #2
  4071e4:	81a3      	strh	r3, [r4, #12]
  4071e6:	d01d      	beq.n	407224 <setvbuf+0xac>
  4071e8:	ab01      	add	r3, sp, #4
  4071ea:	466a      	mov	r2, sp
  4071ec:	4621      	mov	r1, r4
  4071ee:	4628      	mov	r0, r5
  4071f0:	f001 fc84 	bl	408afc <__swhatbuf_r>
  4071f4:	89a3      	ldrh	r3, [r4, #12]
  4071f6:	4318      	orrs	r0, r3
  4071f8:	81a0      	strh	r0, [r4, #12]
  4071fa:	2e00      	cmp	r6, #0
  4071fc:	d132      	bne.n	407264 <setvbuf+0xec>
  4071fe:	9e00      	ldr	r6, [sp, #0]
  407200:	4630      	mov	r0, r6
  407202:	f7ff fc85 	bl	406b10 <malloc>
  407206:	4607      	mov	r7, r0
  407208:	2800      	cmp	r0, #0
  40720a:	d06b      	beq.n	4072e4 <setvbuf+0x16c>
  40720c:	89a3      	ldrh	r3, [r4, #12]
  40720e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  407212:	81a3      	strh	r3, [r4, #12]
  407214:	e028      	b.n	407268 <setvbuf+0xf0>
  407216:	89a3      	ldrh	r3, [r4, #12]
  407218:	0599      	lsls	r1, r3, #22
  40721a:	d4c7      	bmi.n	4071ac <setvbuf+0x34>
  40721c:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40721e:	f001 fc69 	bl	408af4 <__retarget_lock_acquire_recursive>
  407222:	e7c3      	b.n	4071ac <setvbuf+0x34>
  407224:	2500      	movs	r5, #0
  407226:	6e61      	ldr	r1, [r4, #100]	; 0x64
  407228:	2600      	movs	r6, #0
  40722a:	f104 0243 	add.w	r2, r4, #67	; 0x43
  40722e:	f043 0302 	orr.w	r3, r3, #2
  407232:	2001      	movs	r0, #1
  407234:	60a6      	str	r6, [r4, #8]
  407236:	07ce      	lsls	r6, r1, #31
  407238:	81a3      	strh	r3, [r4, #12]
  40723a:	6022      	str	r2, [r4, #0]
  40723c:	6122      	str	r2, [r4, #16]
  40723e:	6160      	str	r0, [r4, #20]
  407240:	d401      	bmi.n	407246 <setvbuf+0xce>
  407242:	0598      	lsls	r0, r3, #22
  407244:	d53e      	bpl.n	4072c4 <setvbuf+0x14c>
  407246:	4628      	mov	r0, r5
  407248:	b003      	add	sp, #12
  40724a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  40724e:	6921      	ldr	r1, [r4, #16]
  407250:	4628      	mov	r0, r5
  407252:	f001 f9b5 	bl	4085c0 <_free_r>
  407256:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40725a:	e7bd      	b.n	4071d8 <setvbuf+0x60>
  40725c:	4628      	mov	r0, r5
  40725e:	f001 f889 	bl	408374 <__sinit>
  407262:	e796      	b.n	407192 <setvbuf+0x1a>
  407264:	2f00      	cmp	r7, #0
  407266:	d0cb      	beq.n	407200 <setvbuf+0x88>
  407268:	6bab      	ldr	r3, [r5, #56]	; 0x38
  40726a:	2b00      	cmp	r3, #0
  40726c:	d033      	beq.n	4072d6 <setvbuf+0x15e>
  40726e:	9b00      	ldr	r3, [sp, #0]
  407270:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  407274:	6027      	str	r7, [r4, #0]
  407276:	429e      	cmp	r6, r3
  407278:	bf1c      	itt	ne
  40727a:	f442 6200 	orrne.w	r2, r2, #2048	; 0x800
  40727e:	81a2      	strhne	r2, [r4, #12]
  407280:	f1b8 0f01 	cmp.w	r8, #1
  407284:	bf04      	itt	eq
  407286:	f042 0201 	orreq.w	r2, r2, #1
  40728a:	81a2      	strheq	r2, [r4, #12]
  40728c:	b292      	uxth	r2, r2
  40728e:	f012 0308 	ands.w	r3, r2, #8
  407292:	6127      	str	r7, [r4, #16]
  407294:	6166      	str	r6, [r4, #20]
  407296:	d00e      	beq.n	4072b6 <setvbuf+0x13e>
  407298:	07d1      	lsls	r1, r2, #31
  40729a:	d51a      	bpl.n	4072d2 <setvbuf+0x15a>
  40729c:	6e65      	ldr	r5, [r4, #100]	; 0x64
  40729e:	4276      	negs	r6, r6
  4072a0:	2300      	movs	r3, #0
  4072a2:	f015 0501 	ands.w	r5, r5, #1
  4072a6:	61a6      	str	r6, [r4, #24]
  4072a8:	60a3      	str	r3, [r4, #8]
  4072aa:	d009      	beq.n	4072c0 <setvbuf+0x148>
  4072ac:	2500      	movs	r5, #0
  4072ae:	4628      	mov	r0, r5
  4072b0:	b003      	add	sp, #12
  4072b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4072b6:	60a3      	str	r3, [r4, #8]
  4072b8:	6e65      	ldr	r5, [r4, #100]	; 0x64
  4072ba:	f015 0501 	ands.w	r5, r5, #1
  4072be:	d1f5      	bne.n	4072ac <setvbuf+0x134>
  4072c0:	0593      	lsls	r3, r2, #22
  4072c2:	d4c0      	bmi.n	407246 <setvbuf+0xce>
  4072c4:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4072c6:	f001 fc17 	bl	408af8 <__retarget_lock_release_recursive>
  4072ca:	4628      	mov	r0, r5
  4072cc:	b003      	add	sp, #12
  4072ce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4072d2:	60a6      	str	r6, [r4, #8]
  4072d4:	e7f0      	b.n	4072b8 <setvbuf+0x140>
  4072d6:	4628      	mov	r0, r5
  4072d8:	f001 f84c 	bl	408374 <__sinit>
  4072dc:	e7c7      	b.n	40726e <setvbuf+0xf6>
  4072de:	f04f 35ff 	mov.w	r5, #4294967295
  4072e2:	e7b0      	b.n	407246 <setvbuf+0xce>
  4072e4:	f8dd 9000 	ldr.w	r9, [sp]
  4072e8:	45b1      	cmp	r9, r6
  4072ea:	d004      	beq.n	4072f6 <setvbuf+0x17e>
  4072ec:	4648      	mov	r0, r9
  4072ee:	f7ff fc0f 	bl	406b10 <malloc>
  4072f2:	4607      	mov	r7, r0
  4072f4:	b920      	cbnz	r0, 407300 <setvbuf+0x188>
  4072f6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4072fa:	f04f 35ff 	mov.w	r5, #4294967295
  4072fe:	e792      	b.n	407226 <setvbuf+0xae>
  407300:	464e      	mov	r6, r9
  407302:	e783      	b.n	40720c <setvbuf+0x94>
  407304:	20400050 	.word	0x20400050

00407308 <__sprint_r.part.0>:
  407308:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40730c:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  40730e:	049c      	lsls	r4, r3, #18
  407310:	4693      	mov	fp, r2
  407312:	d52f      	bpl.n	407374 <__sprint_r.part.0+0x6c>
  407314:	6893      	ldr	r3, [r2, #8]
  407316:	6812      	ldr	r2, [r2, #0]
  407318:	b353      	cbz	r3, 407370 <__sprint_r.part.0+0x68>
  40731a:	460e      	mov	r6, r1
  40731c:	4607      	mov	r7, r0
  40731e:	f102 0908 	add.w	r9, r2, #8
  407322:	e919 0420 	ldmdb	r9, {r5, sl}
  407326:	ea5f 089a 	movs.w	r8, sl, lsr #2
  40732a:	d017      	beq.n	40735c <__sprint_r.part.0+0x54>
  40732c:	3d04      	subs	r5, #4
  40732e:	2400      	movs	r4, #0
  407330:	e001      	b.n	407336 <__sprint_r.part.0+0x2e>
  407332:	45a0      	cmp	r8, r4
  407334:	d010      	beq.n	407358 <__sprint_r.part.0+0x50>
  407336:	4632      	mov	r2, r6
  407338:	f855 1f04 	ldr.w	r1, [r5, #4]!
  40733c:	4638      	mov	r0, r7
  40733e:	f001 f8bb 	bl	4084b8 <_fputwc_r>
  407342:	1c43      	adds	r3, r0, #1
  407344:	f104 0401 	add.w	r4, r4, #1
  407348:	d1f3      	bne.n	407332 <__sprint_r.part.0+0x2a>
  40734a:	2300      	movs	r3, #0
  40734c:	f8cb 3008 	str.w	r3, [fp, #8]
  407350:	f8cb 3004 	str.w	r3, [fp, #4]
  407354:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  407358:	f8db 3008 	ldr.w	r3, [fp, #8]
  40735c:	f02a 0a03 	bic.w	sl, sl, #3
  407360:	eba3 030a 	sub.w	r3, r3, sl
  407364:	f8cb 3008 	str.w	r3, [fp, #8]
  407368:	f109 0908 	add.w	r9, r9, #8
  40736c:	2b00      	cmp	r3, #0
  40736e:	d1d8      	bne.n	407322 <__sprint_r.part.0+0x1a>
  407370:	2000      	movs	r0, #0
  407372:	e7ea      	b.n	40734a <__sprint_r.part.0+0x42>
  407374:	f001 fa0a 	bl	40878c <__sfvwrite_r>
  407378:	2300      	movs	r3, #0
  40737a:	f8cb 3008 	str.w	r3, [fp, #8]
  40737e:	f8cb 3004 	str.w	r3, [fp, #4]
  407382:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  407386:	bf00      	nop

00407388 <_vfiprintf_r>:
  407388:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40738c:	b0ad      	sub	sp, #180	; 0xb4
  40738e:	461d      	mov	r5, r3
  407390:	468b      	mov	fp, r1
  407392:	4690      	mov	r8, r2
  407394:	9307      	str	r3, [sp, #28]
  407396:	9006      	str	r0, [sp, #24]
  407398:	b118      	cbz	r0, 4073a2 <_vfiprintf_r+0x1a>
  40739a:	6b83      	ldr	r3, [r0, #56]	; 0x38
  40739c:	2b00      	cmp	r3, #0
  40739e:	f000 80f3 	beq.w	407588 <_vfiprintf_r+0x200>
  4073a2:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  4073a6:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
  4073aa:	07df      	lsls	r7, r3, #31
  4073ac:	b281      	uxth	r1, r0
  4073ae:	d402      	bmi.n	4073b6 <_vfiprintf_r+0x2e>
  4073b0:	058e      	lsls	r6, r1, #22
  4073b2:	f140 80fc 	bpl.w	4075ae <_vfiprintf_r+0x226>
  4073b6:	048c      	lsls	r4, r1, #18
  4073b8:	d40a      	bmi.n	4073d0 <_vfiprintf_r+0x48>
  4073ba:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  4073be:	f440 5100 	orr.w	r1, r0, #8192	; 0x2000
  4073c2:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  4073c6:	f8ab 100c 	strh.w	r1, [fp, #12]
  4073ca:	f8cb 3064 	str.w	r3, [fp, #100]	; 0x64
  4073ce:	b289      	uxth	r1, r1
  4073d0:	0708      	lsls	r0, r1, #28
  4073d2:	f140 80b3 	bpl.w	40753c <_vfiprintf_r+0x1b4>
  4073d6:	f8db 3010 	ldr.w	r3, [fp, #16]
  4073da:	2b00      	cmp	r3, #0
  4073dc:	f000 80ae 	beq.w	40753c <_vfiprintf_r+0x1b4>
  4073e0:	f001 031a 	and.w	r3, r1, #26
  4073e4:	2b0a      	cmp	r3, #10
  4073e6:	f000 80b5 	beq.w	407554 <_vfiprintf_r+0x1cc>
  4073ea:	2300      	movs	r3, #0
  4073ec:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  4073f0:	930b      	str	r3, [sp, #44]	; 0x2c
  4073f2:	9311      	str	r3, [sp, #68]	; 0x44
  4073f4:	9310      	str	r3, [sp, #64]	; 0x40
  4073f6:	9303      	str	r3, [sp, #12]
  4073f8:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  4073fc:	46ca      	mov	sl, r9
  4073fe:	f8cd b010 	str.w	fp, [sp, #16]
  407402:	f898 3000 	ldrb.w	r3, [r8]
  407406:	4644      	mov	r4, r8
  407408:	b1fb      	cbz	r3, 40744a <_vfiprintf_r+0xc2>
  40740a:	2b25      	cmp	r3, #37	; 0x25
  40740c:	d102      	bne.n	407414 <_vfiprintf_r+0x8c>
  40740e:	e01c      	b.n	40744a <_vfiprintf_r+0xc2>
  407410:	2b25      	cmp	r3, #37	; 0x25
  407412:	d003      	beq.n	40741c <_vfiprintf_r+0x94>
  407414:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  407418:	2b00      	cmp	r3, #0
  40741a:	d1f9      	bne.n	407410 <_vfiprintf_r+0x88>
  40741c:	eba4 0508 	sub.w	r5, r4, r8
  407420:	b19d      	cbz	r5, 40744a <_vfiprintf_r+0xc2>
  407422:	9b10      	ldr	r3, [sp, #64]	; 0x40
  407424:	9a11      	ldr	r2, [sp, #68]	; 0x44
  407426:	f8ca 8000 	str.w	r8, [sl]
  40742a:	3301      	adds	r3, #1
  40742c:	442a      	add	r2, r5
  40742e:	2b07      	cmp	r3, #7
  407430:	f8ca 5004 	str.w	r5, [sl, #4]
  407434:	9211      	str	r2, [sp, #68]	; 0x44
  407436:	9310      	str	r3, [sp, #64]	; 0x40
  407438:	dd7a      	ble.n	407530 <_vfiprintf_r+0x1a8>
  40743a:	2a00      	cmp	r2, #0
  40743c:	f040 84b0 	bne.w	407da0 <_vfiprintf_r+0xa18>
  407440:	9b03      	ldr	r3, [sp, #12]
  407442:	9210      	str	r2, [sp, #64]	; 0x40
  407444:	442b      	add	r3, r5
  407446:	46ca      	mov	sl, r9
  407448:	9303      	str	r3, [sp, #12]
  40744a:	7823      	ldrb	r3, [r4, #0]
  40744c:	2b00      	cmp	r3, #0
  40744e:	f000 83e0 	beq.w	407c12 <_vfiprintf_r+0x88a>
  407452:	2000      	movs	r0, #0
  407454:	f04f 0300 	mov.w	r3, #0
  407458:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
  40745c:	f104 0801 	add.w	r8, r4, #1
  407460:	7862      	ldrb	r2, [r4, #1]
  407462:	4605      	mov	r5, r0
  407464:	4606      	mov	r6, r0
  407466:	4603      	mov	r3, r0
  407468:	f04f 34ff 	mov.w	r4, #4294967295
  40746c:	f108 0801 	add.w	r8, r8, #1
  407470:	f1a2 0120 	sub.w	r1, r2, #32
  407474:	2958      	cmp	r1, #88	; 0x58
  407476:	f200 82de 	bhi.w	407a36 <_vfiprintf_r+0x6ae>
  40747a:	e8df f011 	tbh	[pc, r1, lsl #1]
  40747e:	0221      	.short	0x0221
  407480:	02dc02dc 	.word	0x02dc02dc
  407484:	02dc0229 	.word	0x02dc0229
  407488:	02dc02dc 	.word	0x02dc02dc
  40748c:	02dc02dc 	.word	0x02dc02dc
  407490:	028902dc 	.word	0x028902dc
  407494:	02dc0295 	.word	0x02dc0295
  407498:	02bd00a2 	.word	0x02bd00a2
  40749c:	019f02dc 	.word	0x019f02dc
  4074a0:	01a401a4 	.word	0x01a401a4
  4074a4:	01a401a4 	.word	0x01a401a4
  4074a8:	01a401a4 	.word	0x01a401a4
  4074ac:	01a401a4 	.word	0x01a401a4
  4074b0:	02dc01a4 	.word	0x02dc01a4
  4074b4:	02dc02dc 	.word	0x02dc02dc
  4074b8:	02dc02dc 	.word	0x02dc02dc
  4074bc:	02dc02dc 	.word	0x02dc02dc
  4074c0:	02dc02dc 	.word	0x02dc02dc
  4074c4:	01b202dc 	.word	0x01b202dc
  4074c8:	02dc02dc 	.word	0x02dc02dc
  4074cc:	02dc02dc 	.word	0x02dc02dc
  4074d0:	02dc02dc 	.word	0x02dc02dc
  4074d4:	02dc02dc 	.word	0x02dc02dc
  4074d8:	02dc02dc 	.word	0x02dc02dc
  4074dc:	02dc0197 	.word	0x02dc0197
  4074e0:	02dc02dc 	.word	0x02dc02dc
  4074e4:	02dc02dc 	.word	0x02dc02dc
  4074e8:	02dc019b 	.word	0x02dc019b
  4074ec:	025302dc 	.word	0x025302dc
  4074f0:	02dc02dc 	.word	0x02dc02dc
  4074f4:	02dc02dc 	.word	0x02dc02dc
  4074f8:	02dc02dc 	.word	0x02dc02dc
  4074fc:	02dc02dc 	.word	0x02dc02dc
  407500:	02dc02dc 	.word	0x02dc02dc
  407504:	021b025a 	.word	0x021b025a
  407508:	02dc02dc 	.word	0x02dc02dc
  40750c:	026e02dc 	.word	0x026e02dc
  407510:	02dc021b 	.word	0x02dc021b
  407514:	027302dc 	.word	0x027302dc
  407518:	01f502dc 	.word	0x01f502dc
  40751c:	02090182 	.word	0x02090182
  407520:	02dc02d7 	.word	0x02dc02d7
  407524:	02dc029a 	.word	0x02dc029a
  407528:	02dc00a7 	.word	0x02dc00a7
  40752c:	022e02dc 	.word	0x022e02dc
  407530:	f10a 0a08 	add.w	sl, sl, #8
  407534:	9b03      	ldr	r3, [sp, #12]
  407536:	442b      	add	r3, r5
  407538:	9303      	str	r3, [sp, #12]
  40753a:	e786      	b.n	40744a <_vfiprintf_r+0xc2>
  40753c:	4659      	mov	r1, fp
  40753e:	9806      	ldr	r0, [sp, #24]
  407540:	f000 fdac 	bl	40809c <__swsetup_r>
  407544:	bb18      	cbnz	r0, 40758e <_vfiprintf_r+0x206>
  407546:	f8bb 100c 	ldrh.w	r1, [fp, #12]
  40754a:	f001 031a 	and.w	r3, r1, #26
  40754e:	2b0a      	cmp	r3, #10
  407550:	f47f af4b 	bne.w	4073ea <_vfiprintf_r+0x62>
  407554:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
  407558:	2b00      	cmp	r3, #0
  40755a:	f6ff af46 	blt.w	4073ea <_vfiprintf_r+0x62>
  40755e:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  407562:	07db      	lsls	r3, r3, #31
  407564:	d405      	bmi.n	407572 <_vfiprintf_r+0x1ea>
  407566:	058f      	lsls	r7, r1, #22
  407568:	d403      	bmi.n	407572 <_vfiprintf_r+0x1ea>
  40756a:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  40756e:	f001 fac3 	bl	408af8 <__retarget_lock_release_recursive>
  407572:	462b      	mov	r3, r5
  407574:	4642      	mov	r2, r8
  407576:	4659      	mov	r1, fp
  407578:	9806      	ldr	r0, [sp, #24]
  40757a:	f000 fd4d 	bl	408018 <__sbprintf>
  40757e:	9003      	str	r0, [sp, #12]
  407580:	9803      	ldr	r0, [sp, #12]
  407582:	b02d      	add	sp, #180	; 0xb4
  407584:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  407588:	f000 fef4 	bl	408374 <__sinit>
  40758c:	e709      	b.n	4073a2 <_vfiprintf_r+0x1a>
  40758e:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  407592:	07d9      	lsls	r1, r3, #31
  407594:	d404      	bmi.n	4075a0 <_vfiprintf_r+0x218>
  407596:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  40759a:	059a      	lsls	r2, r3, #22
  40759c:	f140 84aa 	bpl.w	407ef4 <_vfiprintf_r+0xb6c>
  4075a0:	f04f 33ff 	mov.w	r3, #4294967295
  4075a4:	9303      	str	r3, [sp, #12]
  4075a6:	9803      	ldr	r0, [sp, #12]
  4075a8:	b02d      	add	sp, #180	; 0xb4
  4075aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4075ae:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  4075b2:	f001 fa9f 	bl	408af4 <__retarget_lock_acquire_recursive>
  4075b6:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
  4075ba:	b281      	uxth	r1, r0
  4075bc:	e6fb      	b.n	4073b6 <_vfiprintf_r+0x2e>
  4075be:	4276      	negs	r6, r6
  4075c0:	9207      	str	r2, [sp, #28]
  4075c2:	f043 0304 	orr.w	r3, r3, #4
  4075c6:	f898 2000 	ldrb.w	r2, [r8]
  4075ca:	e74f      	b.n	40746c <_vfiprintf_r+0xe4>
  4075cc:	9608      	str	r6, [sp, #32]
  4075ce:	069e      	lsls	r6, r3, #26
  4075d0:	f100 8450 	bmi.w	407e74 <_vfiprintf_r+0xaec>
  4075d4:	9907      	ldr	r1, [sp, #28]
  4075d6:	06dd      	lsls	r5, r3, #27
  4075d8:	460a      	mov	r2, r1
  4075da:	f100 83ef 	bmi.w	407dbc <_vfiprintf_r+0xa34>
  4075de:	0658      	lsls	r0, r3, #25
  4075e0:	f140 83ec 	bpl.w	407dbc <_vfiprintf_r+0xa34>
  4075e4:	880e      	ldrh	r6, [r1, #0]
  4075e6:	3104      	adds	r1, #4
  4075e8:	2700      	movs	r7, #0
  4075ea:	2201      	movs	r2, #1
  4075ec:	9107      	str	r1, [sp, #28]
  4075ee:	f04f 0100 	mov.w	r1, #0
  4075f2:	f88d 1037 	strb.w	r1, [sp, #55]	; 0x37
  4075f6:	2500      	movs	r5, #0
  4075f8:	1c61      	adds	r1, r4, #1
  4075fa:	f000 8116 	beq.w	40782a <_vfiprintf_r+0x4a2>
  4075fe:	f023 0180 	bic.w	r1, r3, #128	; 0x80
  407602:	9102      	str	r1, [sp, #8]
  407604:	ea56 0107 	orrs.w	r1, r6, r7
  407608:	f040 8114 	bne.w	407834 <_vfiprintf_r+0x4ac>
  40760c:	2c00      	cmp	r4, #0
  40760e:	f040 835c 	bne.w	407cca <_vfiprintf_r+0x942>
  407612:	2a00      	cmp	r2, #0
  407614:	f040 83b7 	bne.w	407d86 <_vfiprintf_r+0x9fe>
  407618:	f013 0301 	ands.w	r3, r3, #1
  40761c:	9305      	str	r3, [sp, #20]
  40761e:	f000 8457 	beq.w	407ed0 <_vfiprintf_r+0xb48>
  407622:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
  407626:	2330      	movs	r3, #48	; 0x30
  407628:	f80b 3d41 	strb.w	r3, [fp, #-65]!
  40762c:	9b05      	ldr	r3, [sp, #20]
  40762e:	42a3      	cmp	r3, r4
  407630:	bfb8      	it	lt
  407632:	4623      	movlt	r3, r4
  407634:	9301      	str	r3, [sp, #4]
  407636:	b10d      	cbz	r5, 40763c <_vfiprintf_r+0x2b4>
  407638:	3301      	adds	r3, #1
  40763a:	9301      	str	r3, [sp, #4]
  40763c:	9b02      	ldr	r3, [sp, #8]
  40763e:	f013 0302 	ands.w	r3, r3, #2
  407642:	9309      	str	r3, [sp, #36]	; 0x24
  407644:	d002      	beq.n	40764c <_vfiprintf_r+0x2c4>
  407646:	9b01      	ldr	r3, [sp, #4]
  407648:	3302      	adds	r3, #2
  40764a:	9301      	str	r3, [sp, #4]
  40764c:	9b02      	ldr	r3, [sp, #8]
  40764e:	f013 0384 	ands.w	r3, r3, #132	; 0x84
  407652:	930a      	str	r3, [sp, #40]	; 0x28
  407654:	f040 8217 	bne.w	407a86 <_vfiprintf_r+0x6fe>
  407658:	9b08      	ldr	r3, [sp, #32]
  40765a:	9a01      	ldr	r2, [sp, #4]
  40765c:	1a9d      	subs	r5, r3, r2
  40765e:	2d00      	cmp	r5, #0
  407660:	f340 8211 	ble.w	407a86 <_vfiprintf_r+0x6fe>
  407664:	2d10      	cmp	r5, #16
  407666:	f340 8490 	ble.w	407f8a <_vfiprintf_r+0xc02>
  40766a:	9b10      	ldr	r3, [sp, #64]	; 0x40
  40766c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40766e:	4ec4      	ldr	r6, [pc, #784]	; (407980 <_vfiprintf_r+0x5f8>)
  407670:	46d6      	mov	lr, sl
  407672:	2710      	movs	r7, #16
  407674:	46a2      	mov	sl, r4
  407676:	4619      	mov	r1, r3
  407678:	9c06      	ldr	r4, [sp, #24]
  40767a:	e007      	b.n	40768c <_vfiprintf_r+0x304>
  40767c:	f101 0c02 	add.w	ip, r1, #2
  407680:	f10e 0e08 	add.w	lr, lr, #8
  407684:	4601      	mov	r1, r0
  407686:	3d10      	subs	r5, #16
  407688:	2d10      	cmp	r5, #16
  40768a:	dd11      	ble.n	4076b0 <_vfiprintf_r+0x328>
  40768c:	1c48      	adds	r0, r1, #1
  40768e:	3210      	adds	r2, #16
  407690:	2807      	cmp	r0, #7
  407692:	9211      	str	r2, [sp, #68]	; 0x44
  407694:	e88e 00c0 	stmia.w	lr, {r6, r7}
  407698:	9010      	str	r0, [sp, #64]	; 0x40
  40769a:	ddef      	ble.n	40767c <_vfiprintf_r+0x2f4>
  40769c:	2a00      	cmp	r2, #0
  40769e:	f040 81e4 	bne.w	407a6a <_vfiprintf_r+0x6e2>
  4076a2:	3d10      	subs	r5, #16
  4076a4:	2d10      	cmp	r5, #16
  4076a6:	4611      	mov	r1, r2
  4076a8:	f04f 0c01 	mov.w	ip, #1
  4076ac:	46ce      	mov	lr, r9
  4076ae:	dced      	bgt.n	40768c <_vfiprintf_r+0x304>
  4076b0:	4654      	mov	r4, sl
  4076b2:	4661      	mov	r1, ip
  4076b4:	46f2      	mov	sl, lr
  4076b6:	442a      	add	r2, r5
  4076b8:	2907      	cmp	r1, #7
  4076ba:	9211      	str	r2, [sp, #68]	; 0x44
  4076bc:	f8ca 6000 	str.w	r6, [sl]
  4076c0:	f8ca 5004 	str.w	r5, [sl, #4]
  4076c4:	9110      	str	r1, [sp, #64]	; 0x40
  4076c6:	f300 82ec 	bgt.w	407ca2 <_vfiprintf_r+0x91a>
  4076ca:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  4076ce:	f10a 0a08 	add.w	sl, sl, #8
  4076d2:	1c48      	adds	r0, r1, #1
  4076d4:	2d00      	cmp	r5, #0
  4076d6:	f040 81de 	bne.w	407a96 <_vfiprintf_r+0x70e>
  4076da:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4076dc:	2b00      	cmp	r3, #0
  4076de:	f000 81f8 	beq.w	407ad2 <_vfiprintf_r+0x74a>
  4076e2:	3202      	adds	r2, #2
  4076e4:	a90e      	add	r1, sp, #56	; 0x38
  4076e6:	2302      	movs	r3, #2
  4076e8:	2807      	cmp	r0, #7
  4076ea:	9211      	str	r2, [sp, #68]	; 0x44
  4076ec:	9010      	str	r0, [sp, #64]	; 0x40
  4076ee:	e88a 000a 	stmia.w	sl, {r1, r3}
  4076f2:	f340 81ea 	ble.w	407aca <_vfiprintf_r+0x742>
  4076f6:	2a00      	cmp	r2, #0
  4076f8:	f040 838c 	bne.w	407e14 <_vfiprintf_r+0xa8c>
  4076fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4076fe:	2b80      	cmp	r3, #128	; 0x80
  407700:	f04f 0001 	mov.w	r0, #1
  407704:	4611      	mov	r1, r2
  407706:	46ca      	mov	sl, r9
  407708:	f040 81e7 	bne.w	407ada <_vfiprintf_r+0x752>
  40770c:	9b08      	ldr	r3, [sp, #32]
  40770e:	9d01      	ldr	r5, [sp, #4]
  407710:	1b5e      	subs	r6, r3, r5
  407712:	2e00      	cmp	r6, #0
  407714:	f340 81e1 	ble.w	407ada <_vfiprintf_r+0x752>
  407718:	2e10      	cmp	r6, #16
  40771a:	4d9a      	ldr	r5, [pc, #616]	; (407984 <_vfiprintf_r+0x5fc>)
  40771c:	f340 8450 	ble.w	407fc0 <_vfiprintf_r+0xc38>
  407720:	46d4      	mov	ip, sl
  407722:	2710      	movs	r7, #16
  407724:	46a2      	mov	sl, r4
  407726:	9c06      	ldr	r4, [sp, #24]
  407728:	e007      	b.n	40773a <_vfiprintf_r+0x3b2>
  40772a:	f101 0e02 	add.w	lr, r1, #2
  40772e:	f10c 0c08 	add.w	ip, ip, #8
  407732:	4601      	mov	r1, r0
  407734:	3e10      	subs	r6, #16
  407736:	2e10      	cmp	r6, #16
  407738:	dd11      	ble.n	40775e <_vfiprintf_r+0x3d6>
  40773a:	1c48      	adds	r0, r1, #1
  40773c:	3210      	adds	r2, #16
  40773e:	2807      	cmp	r0, #7
  407740:	9211      	str	r2, [sp, #68]	; 0x44
  407742:	e88c 00a0 	stmia.w	ip, {r5, r7}
  407746:	9010      	str	r0, [sp, #64]	; 0x40
  407748:	ddef      	ble.n	40772a <_vfiprintf_r+0x3a2>
  40774a:	2a00      	cmp	r2, #0
  40774c:	f040 829d 	bne.w	407c8a <_vfiprintf_r+0x902>
  407750:	3e10      	subs	r6, #16
  407752:	2e10      	cmp	r6, #16
  407754:	f04f 0e01 	mov.w	lr, #1
  407758:	4611      	mov	r1, r2
  40775a:	46cc      	mov	ip, r9
  40775c:	dced      	bgt.n	40773a <_vfiprintf_r+0x3b2>
  40775e:	4654      	mov	r4, sl
  407760:	46e2      	mov	sl, ip
  407762:	4432      	add	r2, r6
  407764:	f1be 0f07 	cmp.w	lr, #7
  407768:	9211      	str	r2, [sp, #68]	; 0x44
  40776a:	e88a 0060 	stmia.w	sl, {r5, r6}
  40776e:	f8cd e040 	str.w	lr, [sp, #64]	; 0x40
  407772:	f300 8369 	bgt.w	407e48 <_vfiprintf_r+0xac0>
  407776:	f10a 0a08 	add.w	sl, sl, #8
  40777a:	f10e 0001 	add.w	r0, lr, #1
  40777e:	4671      	mov	r1, lr
  407780:	e1ab      	b.n	407ada <_vfiprintf_r+0x752>
  407782:	9608      	str	r6, [sp, #32]
  407784:	f013 0220 	ands.w	r2, r3, #32
  407788:	f040 838c 	bne.w	407ea4 <_vfiprintf_r+0xb1c>
  40778c:	f013 0110 	ands.w	r1, r3, #16
  407790:	f040 831a 	bne.w	407dc8 <_vfiprintf_r+0xa40>
  407794:	f013 0240 	ands.w	r2, r3, #64	; 0x40
  407798:	f000 8316 	beq.w	407dc8 <_vfiprintf_r+0xa40>
  40779c:	9807      	ldr	r0, [sp, #28]
  40779e:	460a      	mov	r2, r1
  4077a0:	4601      	mov	r1, r0
  4077a2:	3104      	adds	r1, #4
  4077a4:	8806      	ldrh	r6, [r0, #0]
  4077a6:	9107      	str	r1, [sp, #28]
  4077a8:	2700      	movs	r7, #0
  4077aa:	e720      	b.n	4075ee <_vfiprintf_r+0x266>
  4077ac:	9608      	str	r6, [sp, #32]
  4077ae:	f043 0310 	orr.w	r3, r3, #16
  4077b2:	e7e7      	b.n	407784 <_vfiprintf_r+0x3fc>
  4077b4:	9608      	str	r6, [sp, #32]
  4077b6:	f043 0310 	orr.w	r3, r3, #16
  4077ba:	e708      	b.n	4075ce <_vfiprintf_r+0x246>
  4077bc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4077c0:	f898 2000 	ldrb.w	r2, [r8]
  4077c4:	e652      	b.n	40746c <_vfiprintf_r+0xe4>
  4077c6:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  4077ca:	2600      	movs	r6, #0
  4077cc:	f818 2b01 	ldrb.w	r2, [r8], #1
  4077d0:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  4077d4:	eb01 0646 	add.w	r6, r1, r6, lsl #1
  4077d8:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  4077dc:	2909      	cmp	r1, #9
  4077de:	d9f5      	bls.n	4077cc <_vfiprintf_r+0x444>
  4077e0:	e646      	b.n	407470 <_vfiprintf_r+0xe8>
  4077e2:	9608      	str	r6, [sp, #32]
  4077e4:	2800      	cmp	r0, #0
  4077e6:	f040 8408 	bne.w	407ffa <_vfiprintf_r+0xc72>
  4077ea:	f043 0310 	orr.w	r3, r3, #16
  4077ee:	069e      	lsls	r6, r3, #26
  4077f0:	f100 834c 	bmi.w	407e8c <_vfiprintf_r+0xb04>
  4077f4:	06dd      	lsls	r5, r3, #27
  4077f6:	f100 82f3 	bmi.w	407de0 <_vfiprintf_r+0xa58>
  4077fa:	0658      	lsls	r0, r3, #25
  4077fc:	f140 82f0 	bpl.w	407de0 <_vfiprintf_r+0xa58>
  407800:	9d07      	ldr	r5, [sp, #28]
  407802:	f9b5 6000 	ldrsh.w	r6, [r5]
  407806:	462a      	mov	r2, r5
  407808:	17f7      	asrs	r7, r6, #31
  40780a:	3204      	adds	r2, #4
  40780c:	4630      	mov	r0, r6
  40780e:	4639      	mov	r1, r7
  407810:	9207      	str	r2, [sp, #28]
  407812:	2800      	cmp	r0, #0
  407814:	f171 0200 	sbcs.w	r2, r1, #0
  407818:	f2c0 835d 	blt.w	407ed6 <_vfiprintf_r+0xb4e>
  40781c:	1c61      	adds	r1, r4, #1
  40781e:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  407822:	f04f 0201 	mov.w	r2, #1
  407826:	f47f aeea 	bne.w	4075fe <_vfiprintf_r+0x276>
  40782a:	ea56 0107 	orrs.w	r1, r6, r7
  40782e:	f000 824d 	beq.w	407ccc <_vfiprintf_r+0x944>
  407832:	9302      	str	r3, [sp, #8]
  407834:	2a01      	cmp	r2, #1
  407836:	f000 828c 	beq.w	407d52 <_vfiprintf_r+0x9ca>
  40783a:	2a02      	cmp	r2, #2
  40783c:	f040 825c 	bne.w	407cf8 <_vfiprintf_r+0x970>
  407840:	980b      	ldr	r0, [sp, #44]	; 0x2c
  407842:	46cb      	mov	fp, r9
  407844:	0933      	lsrs	r3, r6, #4
  407846:	f006 010f 	and.w	r1, r6, #15
  40784a:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
  40784e:	093a      	lsrs	r2, r7, #4
  407850:	461e      	mov	r6, r3
  407852:	4617      	mov	r7, r2
  407854:	5c43      	ldrb	r3, [r0, r1]
  407856:	f80b 3d01 	strb.w	r3, [fp, #-1]!
  40785a:	ea56 0307 	orrs.w	r3, r6, r7
  40785e:	d1f1      	bne.n	407844 <_vfiprintf_r+0x4bc>
  407860:	eba9 030b 	sub.w	r3, r9, fp
  407864:	9305      	str	r3, [sp, #20]
  407866:	e6e1      	b.n	40762c <_vfiprintf_r+0x2a4>
  407868:	2800      	cmp	r0, #0
  40786a:	f040 83c0 	bne.w	407fee <_vfiprintf_r+0xc66>
  40786e:	0699      	lsls	r1, r3, #26
  407870:	f100 8367 	bmi.w	407f42 <_vfiprintf_r+0xbba>
  407874:	06da      	lsls	r2, r3, #27
  407876:	f100 80f1 	bmi.w	407a5c <_vfiprintf_r+0x6d4>
  40787a:	065b      	lsls	r3, r3, #25
  40787c:	f140 80ee 	bpl.w	407a5c <_vfiprintf_r+0x6d4>
  407880:	9a07      	ldr	r2, [sp, #28]
  407882:	6813      	ldr	r3, [r2, #0]
  407884:	3204      	adds	r2, #4
  407886:	9207      	str	r2, [sp, #28]
  407888:	f8bd 200c 	ldrh.w	r2, [sp, #12]
  40788c:	801a      	strh	r2, [r3, #0]
  40788e:	e5b8      	b.n	407402 <_vfiprintf_r+0x7a>
  407890:	9807      	ldr	r0, [sp, #28]
  407892:	4a3d      	ldr	r2, [pc, #244]	; (407988 <_vfiprintf_r+0x600>)
  407894:	9608      	str	r6, [sp, #32]
  407896:	920b      	str	r2, [sp, #44]	; 0x2c
  407898:	6806      	ldr	r6, [r0, #0]
  40789a:	2278      	movs	r2, #120	; 0x78
  40789c:	2130      	movs	r1, #48	; 0x30
  40789e:	3004      	adds	r0, #4
  4078a0:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  4078a4:	f043 0302 	orr.w	r3, r3, #2
  4078a8:	9007      	str	r0, [sp, #28]
  4078aa:	2700      	movs	r7, #0
  4078ac:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  4078b0:	2202      	movs	r2, #2
  4078b2:	e69c      	b.n	4075ee <_vfiprintf_r+0x266>
  4078b4:	9608      	str	r6, [sp, #32]
  4078b6:	2800      	cmp	r0, #0
  4078b8:	d099      	beq.n	4077ee <_vfiprintf_r+0x466>
  4078ba:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  4078be:	e796      	b.n	4077ee <_vfiprintf_r+0x466>
  4078c0:	f898 2000 	ldrb.w	r2, [r8]
  4078c4:	2d00      	cmp	r5, #0
  4078c6:	f47f add1 	bne.w	40746c <_vfiprintf_r+0xe4>
  4078ca:	2001      	movs	r0, #1
  4078cc:	2520      	movs	r5, #32
  4078ce:	e5cd      	b.n	40746c <_vfiprintf_r+0xe4>
  4078d0:	f043 0301 	orr.w	r3, r3, #1
  4078d4:	f898 2000 	ldrb.w	r2, [r8]
  4078d8:	e5c8      	b.n	40746c <_vfiprintf_r+0xe4>
  4078da:	9608      	str	r6, [sp, #32]
  4078dc:	2800      	cmp	r0, #0
  4078de:	f040 8393 	bne.w	408008 <_vfiprintf_r+0xc80>
  4078e2:	4929      	ldr	r1, [pc, #164]	; (407988 <_vfiprintf_r+0x600>)
  4078e4:	910b      	str	r1, [sp, #44]	; 0x2c
  4078e6:	069f      	lsls	r7, r3, #26
  4078e8:	f100 82e8 	bmi.w	407ebc <_vfiprintf_r+0xb34>
  4078ec:	9807      	ldr	r0, [sp, #28]
  4078ee:	06de      	lsls	r6, r3, #27
  4078f0:	4601      	mov	r1, r0
  4078f2:	f100 8270 	bmi.w	407dd6 <_vfiprintf_r+0xa4e>
  4078f6:	065d      	lsls	r5, r3, #25
  4078f8:	f140 826d 	bpl.w	407dd6 <_vfiprintf_r+0xa4e>
  4078fc:	3104      	adds	r1, #4
  4078fe:	8806      	ldrh	r6, [r0, #0]
  407900:	9107      	str	r1, [sp, #28]
  407902:	2700      	movs	r7, #0
  407904:	07d8      	lsls	r0, r3, #31
  407906:	f140 8222 	bpl.w	407d4e <_vfiprintf_r+0x9c6>
  40790a:	ea56 0107 	orrs.w	r1, r6, r7
  40790e:	f000 821e 	beq.w	407d4e <_vfiprintf_r+0x9c6>
  407912:	2130      	movs	r1, #48	; 0x30
  407914:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  407918:	f043 0302 	orr.w	r3, r3, #2
  40791c:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  407920:	2202      	movs	r2, #2
  407922:	e664      	b.n	4075ee <_vfiprintf_r+0x266>
  407924:	9608      	str	r6, [sp, #32]
  407926:	2800      	cmp	r0, #0
  407928:	f040 836b 	bne.w	408002 <_vfiprintf_r+0xc7a>
  40792c:	4917      	ldr	r1, [pc, #92]	; (40798c <_vfiprintf_r+0x604>)
  40792e:	910b      	str	r1, [sp, #44]	; 0x2c
  407930:	e7d9      	b.n	4078e6 <_vfiprintf_r+0x55e>
  407932:	9907      	ldr	r1, [sp, #28]
  407934:	9608      	str	r6, [sp, #32]
  407936:	680a      	ldr	r2, [r1, #0]
  407938:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  40793c:	f04f 0000 	mov.w	r0, #0
  407940:	460a      	mov	r2, r1
  407942:	f88d 0037 	strb.w	r0, [sp, #55]	; 0x37
  407946:	3204      	adds	r2, #4
  407948:	2001      	movs	r0, #1
  40794a:	9001      	str	r0, [sp, #4]
  40794c:	9207      	str	r2, [sp, #28]
  40794e:	9005      	str	r0, [sp, #20]
  407950:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
  407954:	9302      	str	r3, [sp, #8]
  407956:	2400      	movs	r4, #0
  407958:	e670      	b.n	40763c <_vfiprintf_r+0x2b4>
  40795a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40795e:	f898 2000 	ldrb.w	r2, [r8]
  407962:	e583      	b.n	40746c <_vfiprintf_r+0xe4>
  407964:	f898 2000 	ldrb.w	r2, [r8]
  407968:	2a6c      	cmp	r2, #108	; 0x6c
  40796a:	bf03      	ittte	eq
  40796c:	f898 2001 	ldrbeq.w	r2, [r8, #1]
  407970:	f043 0320 	orreq.w	r3, r3, #32
  407974:	f108 0801 	addeq.w	r8, r8, #1
  407978:	f043 0310 	orrne.w	r3, r3, #16
  40797c:	e576      	b.n	40746c <_vfiprintf_r+0xe4>
  40797e:	bf00      	nop
  407980:	00414acc 	.word	0x00414acc
  407984:	00414adc 	.word	0x00414adc
  407988:	00414ab0 	.word	0x00414ab0
  40798c:	00414a9c 	.word	0x00414a9c
  407990:	9907      	ldr	r1, [sp, #28]
  407992:	680e      	ldr	r6, [r1, #0]
  407994:	460a      	mov	r2, r1
  407996:	2e00      	cmp	r6, #0
  407998:	f102 0204 	add.w	r2, r2, #4
  40799c:	f6ff ae0f 	blt.w	4075be <_vfiprintf_r+0x236>
  4079a0:	9207      	str	r2, [sp, #28]
  4079a2:	f898 2000 	ldrb.w	r2, [r8]
  4079a6:	e561      	b.n	40746c <_vfiprintf_r+0xe4>
  4079a8:	f898 2000 	ldrb.w	r2, [r8]
  4079ac:	2001      	movs	r0, #1
  4079ae:	252b      	movs	r5, #43	; 0x2b
  4079b0:	e55c      	b.n	40746c <_vfiprintf_r+0xe4>
  4079b2:	9907      	ldr	r1, [sp, #28]
  4079b4:	9608      	str	r6, [sp, #32]
  4079b6:	f8d1 b000 	ldr.w	fp, [r1]
  4079ba:	f04f 0200 	mov.w	r2, #0
  4079be:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  4079c2:	1d0e      	adds	r6, r1, #4
  4079c4:	f1bb 0f00 	cmp.w	fp, #0
  4079c8:	f000 82e5 	beq.w	407f96 <_vfiprintf_r+0xc0e>
  4079cc:	1c67      	adds	r7, r4, #1
  4079ce:	f000 82c4 	beq.w	407f5a <_vfiprintf_r+0xbd2>
  4079d2:	4622      	mov	r2, r4
  4079d4:	2100      	movs	r1, #0
  4079d6:	4658      	mov	r0, fp
  4079d8:	9301      	str	r3, [sp, #4]
  4079da:	f001 f921 	bl	408c20 <memchr>
  4079de:	9b01      	ldr	r3, [sp, #4]
  4079e0:	2800      	cmp	r0, #0
  4079e2:	f000 82e5 	beq.w	407fb0 <_vfiprintf_r+0xc28>
  4079e6:	eba0 020b 	sub.w	r2, r0, fp
  4079ea:	9205      	str	r2, [sp, #20]
  4079ec:	9607      	str	r6, [sp, #28]
  4079ee:	9302      	str	r3, [sp, #8]
  4079f0:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  4079f4:	2400      	movs	r4, #0
  4079f6:	e619      	b.n	40762c <_vfiprintf_r+0x2a4>
  4079f8:	f898 2000 	ldrb.w	r2, [r8]
  4079fc:	2a2a      	cmp	r2, #42	; 0x2a
  4079fe:	f108 0701 	add.w	r7, r8, #1
  407a02:	f000 82e9 	beq.w	407fd8 <_vfiprintf_r+0xc50>
  407a06:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  407a0a:	2909      	cmp	r1, #9
  407a0c:	46b8      	mov	r8, r7
  407a0e:	f04f 0400 	mov.w	r4, #0
  407a12:	f63f ad2d 	bhi.w	407470 <_vfiprintf_r+0xe8>
  407a16:	f818 2b01 	ldrb.w	r2, [r8], #1
  407a1a:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  407a1e:	eb01 0444 	add.w	r4, r1, r4, lsl #1
  407a22:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  407a26:	2909      	cmp	r1, #9
  407a28:	d9f5      	bls.n	407a16 <_vfiprintf_r+0x68e>
  407a2a:	e521      	b.n	407470 <_vfiprintf_r+0xe8>
  407a2c:	f043 0320 	orr.w	r3, r3, #32
  407a30:	f898 2000 	ldrb.w	r2, [r8]
  407a34:	e51a      	b.n	40746c <_vfiprintf_r+0xe4>
  407a36:	9608      	str	r6, [sp, #32]
  407a38:	2800      	cmp	r0, #0
  407a3a:	f040 82db 	bne.w	407ff4 <_vfiprintf_r+0xc6c>
  407a3e:	2a00      	cmp	r2, #0
  407a40:	f000 80e7 	beq.w	407c12 <_vfiprintf_r+0x88a>
  407a44:	2101      	movs	r1, #1
  407a46:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  407a4a:	f04f 0200 	mov.w	r2, #0
  407a4e:	9101      	str	r1, [sp, #4]
  407a50:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  407a54:	9105      	str	r1, [sp, #20]
  407a56:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
  407a5a:	e77b      	b.n	407954 <_vfiprintf_r+0x5cc>
  407a5c:	9a07      	ldr	r2, [sp, #28]
  407a5e:	6813      	ldr	r3, [r2, #0]
  407a60:	3204      	adds	r2, #4
  407a62:	9207      	str	r2, [sp, #28]
  407a64:	9a03      	ldr	r2, [sp, #12]
  407a66:	601a      	str	r2, [r3, #0]
  407a68:	e4cb      	b.n	407402 <_vfiprintf_r+0x7a>
  407a6a:	aa0f      	add	r2, sp, #60	; 0x3c
  407a6c:	9904      	ldr	r1, [sp, #16]
  407a6e:	4620      	mov	r0, r4
  407a70:	f7ff fc4a 	bl	407308 <__sprint_r.part.0>
  407a74:	2800      	cmp	r0, #0
  407a76:	f040 8139 	bne.w	407cec <_vfiprintf_r+0x964>
  407a7a:	9910      	ldr	r1, [sp, #64]	; 0x40
  407a7c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  407a7e:	f101 0c01 	add.w	ip, r1, #1
  407a82:	46ce      	mov	lr, r9
  407a84:	e5ff      	b.n	407686 <_vfiprintf_r+0x2fe>
  407a86:	9910      	ldr	r1, [sp, #64]	; 0x40
  407a88:	9a11      	ldr	r2, [sp, #68]	; 0x44
  407a8a:	1c48      	adds	r0, r1, #1
  407a8c:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  407a90:	2d00      	cmp	r5, #0
  407a92:	f43f ae22 	beq.w	4076da <_vfiprintf_r+0x352>
  407a96:	3201      	adds	r2, #1
  407a98:	f10d 0537 	add.w	r5, sp, #55	; 0x37
  407a9c:	2101      	movs	r1, #1
  407a9e:	2807      	cmp	r0, #7
  407aa0:	9211      	str	r2, [sp, #68]	; 0x44
  407aa2:	9010      	str	r0, [sp, #64]	; 0x40
  407aa4:	f8ca 5000 	str.w	r5, [sl]
  407aa8:	f8ca 1004 	str.w	r1, [sl, #4]
  407aac:	f340 8108 	ble.w	407cc0 <_vfiprintf_r+0x938>
  407ab0:	2a00      	cmp	r2, #0
  407ab2:	f040 81bc 	bne.w	407e2e <_vfiprintf_r+0xaa6>
  407ab6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  407ab8:	2b00      	cmp	r3, #0
  407aba:	f43f ae1f 	beq.w	4076fc <_vfiprintf_r+0x374>
  407abe:	ab0e      	add	r3, sp, #56	; 0x38
  407ac0:	2202      	movs	r2, #2
  407ac2:	4608      	mov	r0, r1
  407ac4:	931c      	str	r3, [sp, #112]	; 0x70
  407ac6:	921d      	str	r2, [sp, #116]	; 0x74
  407ac8:	46ca      	mov	sl, r9
  407aca:	4601      	mov	r1, r0
  407acc:	f10a 0a08 	add.w	sl, sl, #8
  407ad0:	3001      	adds	r0, #1
  407ad2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  407ad4:	2b80      	cmp	r3, #128	; 0x80
  407ad6:	f43f ae19 	beq.w	40770c <_vfiprintf_r+0x384>
  407ada:	9b05      	ldr	r3, [sp, #20]
  407adc:	1ae4      	subs	r4, r4, r3
  407ade:	2c00      	cmp	r4, #0
  407ae0:	dd2e      	ble.n	407b40 <_vfiprintf_r+0x7b8>
  407ae2:	2c10      	cmp	r4, #16
  407ae4:	4db3      	ldr	r5, [pc, #716]	; (407db4 <_vfiprintf_r+0xa2c>)
  407ae6:	dd1e      	ble.n	407b26 <_vfiprintf_r+0x79e>
  407ae8:	46d6      	mov	lr, sl
  407aea:	2610      	movs	r6, #16
  407aec:	9f06      	ldr	r7, [sp, #24]
  407aee:	f8dd a010 	ldr.w	sl, [sp, #16]
  407af2:	e006      	b.n	407b02 <_vfiprintf_r+0x77a>
  407af4:	1c88      	adds	r0, r1, #2
  407af6:	f10e 0e08 	add.w	lr, lr, #8
  407afa:	4619      	mov	r1, r3
  407afc:	3c10      	subs	r4, #16
  407afe:	2c10      	cmp	r4, #16
  407b00:	dd10      	ble.n	407b24 <_vfiprintf_r+0x79c>
  407b02:	1c4b      	adds	r3, r1, #1
  407b04:	3210      	adds	r2, #16
  407b06:	2b07      	cmp	r3, #7
  407b08:	9211      	str	r2, [sp, #68]	; 0x44
  407b0a:	e88e 0060 	stmia.w	lr, {r5, r6}
  407b0e:	9310      	str	r3, [sp, #64]	; 0x40
  407b10:	ddf0      	ble.n	407af4 <_vfiprintf_r+0x76c>
  407b12:	2a00      	cmp	r2, #0
  407b14:	d165      	bne.n	407be2 <_vfiprintf_r+0x85a>
  407b16:	3c10      	subs	r4, #16
  407b18:	2c10      	cmp	r4, #16
  407b1a:	f04f 0001 	mov.w	r0, #1
  407b1e:	4611      	mov	r1, r2
  407b20:	46ce      	mov	lr, r9
  407b22:	dcee      	bgt.n	407b02 <_vfiprintf_r+0x77a>
  407b24:	46f2      	mov	sl, lr
  407b26:	4422      	add	r2, r4
  407b28:	2807      	cmp	r0, #7
  407b2a:	9211      	str	r2, [sp, #68]	; 0x44
  407b2c:	f8ca 5000 	str.w	r5, [sl]
  407b30:	f8ca 4004 	str.w	r4, [sl, #4]
  407b34:	9010      	str	r0, [sp, #64]	; 0x40
  407b36:	f300 8085 	bgt.w	407c44 <_vfiprintf_r+0x8bc>
  407b3a:	f10a 0a08 	add.w	sl, sl, #8
  407b3e:	3001      	adds	r0, #1
  407b40:	9905      	ldr	r1, [sp, #20]
  407b42:	f8ca b000 	str.w	fp, [sl]
  407b46:	440a      	add	r2, r1
  407b48:	2807      	cmp	r0, #7
  407b4a:	9211      	str	r2, [sp, #68]	; 0x44
  407b4c:	f8ca 1004 	str.w	r1, [sl, #4]
  407b50:	9010      	str	r0, [sp, #64]	; 0x40
  407b52:	f340 8082 	ble.w	407c5a <_vfiprintf_r+0x8d2>
  407b56:	2a00      	cmp	r2, #0
  407b58:	f040 8118 	bne.w	407d8c <_vfiprintf_r+0xa04>
  407b5c:	9b02      	ldr	r3, [sp, #8]
  407b5e:	9210      	str	r2, [sp, #64]	; 0x40
  407b60:	0758      	lsls	r0, r3, #29
  407b62:	d535      	bpl.n	407bd0 <_vfiprintf_r+0x848>
  407b64:	9b08      	ldr	r3, [sp, #32]
  407b66:	9901      	ldr	r1, [sp, #4]
  407b68:	1a5c      	subs	r4, r3, r1
  407b6a:	2c00      	cmp	r4, #0
  407b6c:	f340 80e7 	ble.w	407d3e <_vfiprintf_r+0x9b6>
  407b70:	46ca      	mov	sl, r9
  407b72:	2c10      	cmp	r4, #16
  407b74:	f340 8218 	ble.w	407fa8 <_vfiprintf_r+0xc20>
  407b78:	9910      	ldr	r1, [sp, #64]	; 0x40
  407b7a:	4e8f      	ldr	r6, [pc, #572]	; (407db8 <_vfiprintf_r+0xa30>)
  407b7c:	9f06      	ldr	r7, [sp, #24]
  407b7e:	f8dd b010 	ldr.w	fp, [sp, #16]
  407b82:	2510      	movs	r5, #16
  407b84:	e006      	b.n	407b94 <_vfiprintf_r+0x80c>
  407b86:	1c88      	adds	r0, r1, #2
  407b88:	f10a 0a08 	add.w	sl, sl, #8
  407b8c:	4619      	mov	r1, r3
  407b8e:	3c10      	subs	r4, #16
  407b90:	2c10      	cmp	r4, #16
  407b92:	dd11      	ble.n	407bb8 <_vfiprintf_r+0x830>
  407b94:	1c4b      	adds	r3, r1, #1
  407b96:	3210      	adds	r2, #16
  407b98:	2b07      	cmp	r3, #7
  407b9a:	9211      	str	r2, [sp, #68]	; 0x44
  407b9c:	f8ca 6000 	str.w	r6, [sl]
  407ba0:	f8ca 5004 	str.w	r5, [sl, #4]
  407ba4:	9310      	str	r3, [sp, #64]	; 0x40
  407ba6:	ddee      	ble.n	407b86 <_vfiprintf_r+0x7fe>
  407ba8:	bb42      	cbnz	r2, 407bfc <_vfiprintf_r+0x874>
  407baa:	3c10      	subs	r4, #16
  407bac:	2c10      	cmp	r4, #16
  407bae:	f04f 0001 	mov.w	r0, #1
  407bb2:	4611      	mov	r1, r2
  407bb4:	46ca      	mov	sl, r9
  407bb6:	dced      	bgt.n	407b94 <_vfiprintf_r+0x80c>
  407bb8:	4422      	add	r2, r4
  407bba:	2807      	cmp	r0, #7
  407bbc:	9211      	str	r2, [sp, #68]	; 0x44
  407bbe:	f8ca 6000 	str.w	r6, [sl]
  407bc2:	f8ca 4004 	str.w	r4, [sl, #4]
  407bc6:	9010      	str	r0, [sp, #64]	; 0x40
  407bc8:	dd51      	ble.n	407c6e <_vfiprintf_r+0x8e6>
  407bca:	2a00      	cmp	r2, #0
  407bcc:	f040 819b 	bne.w	407f06 <_vfiprintf_r+0xb7e>
  407bd0:	9b03      	ldr	r3, [sp, #12]
  407bd2:	9a08      	ldr	r2, [sp, #32]
  407bd4:	9901      	ldr	r1, [sp, #4]
  407bd6:	428a      	cmp	r2, r1
  407bd8:	bfac      	ite	ge
  407bda:	189b      	addge	r3, r3, r2
  407bdc:	185b      	addlt	r3, r3, r1
  407bde:	9303      	str	r3, [sp, #12]
  407be0:	e04e      	b.n	407c80 <_vfiprintf_r+0x8f8>
  407be2:	aa0f      	add	r2, sp, #60	; 0x3c
  407be4:	4651      	mov	r1, sl
  407be6:	4638      	mov	r0, r7
  407be8:	f7ff fb8e 	bl	407308 <__sprint_r.part.0>
  407bec:	2800      	cmp	r0, #0
  407bee:	f040 813f 	bne.w	407e70 <_vfiprintf_r+0xae8>
  407bf2:	9910      	ldr	r1, [sp, #64]	; 0x40
  407bf4:	9a11      	ldr	r2, [sp, #68]	; 0x44
  407bf6:	1c48      	adds	r0, r1, #1
  407bf8:	46ce      	mov	lr, r9
  407bfa:	e77f      	b.n	407afc <_vfiprintf_r+0x774>
  407bfc:	aa0f      	add	r2, sp, #60	; 0x3c
  407bfe:	4659      	mov	r1, fp
  407c00:	4638      	mov	r0, r7
  407c02:	f7ff fb81 	bl	407308 <__sprint_r.part.0>
  407c06:	b960      	cbnz	r0, 407c22 <_vfiprintf_r+0x89a>
  407c08:	9910      	ldr	r1, [sp, #64]	; 0x40
  407c0a:	9a11      	ldr	r2, [sp, #68]	; 0x44
  407c0c:	1c48      	adds	r0, r1, #1
  407c0e:	46ca      	mov	sl, r9
  407c10:	e7bd      	b.n	407b8e <_vfiprintf_r+0x806>
  407c12:	9b11      	ldr	r3, [sp, #68]	; 0x44
  407c14:	f8dd b010 	ldr.w	fp, [sp, #16]
  407c18:	2b00      	cmp	r3, #0
  407c1a:	f040 81d4 	bne.w	407fc6 <_vfiprintf_r+0xc3e>
  407c1e:	2300      	movs	r3, #0
  407c20:	9310      	str	r3, [sp, #64]	; 0x40
  407c22:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  407c26:	f013 0f01 	tst.w	r3, #1
  407c2a:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  407c2e:	d102      	bne.n	407c36 <_vfiprintf_r+0x8ae>
  407c30:	059a      	lsls	r2, r3, #22
  407c32:	f140 80de 	bpl.w	407df2 <_vfiprintf_r+0xa6a>
  407c36:	065b      	lsls	r3, r3, #25
  407c38:	f53f acb2 	bmi.w	4075a0 <_vfiprintf_r+0x218>
  407c3c:	9803      	ldr	r0, [sp, #12]
  407c3e:	b02d      	add	sp, #180	; 0xb4
  407c40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  407c44:	2a00      	cmp	r2, #0
  407c46:	f040 8106 	bne.w	407e56 <_vfiprintf_r+0xace>
  407c4a:	9a05      	ldr	r2, [sp, #20]
  407c4c:	921d      	str	r2, [sp, #116]	; 0x74
  407c4e:	2301      	movs	r3, #1
  407c50:	9211      	str	r2, [sp, #68]	; 0x44
  407c52:	f8cd b070 	str.w	fp, [sp, #112]	; 0x70
  407c56:	9310      	str	r3, [sp, #64]	; 0x40
  407c58:	46ca      	mov	sl, r9
  407c5a:	f10a 0a08 	add.w	sl, sl, #8
  407c5e:	9b02      	ldr	r3, [sp, #8]
  407c60:	0759      	lsls	r1, r3, #29
  407c62:	d504      	bpl.n	407c6e <_vfiprintf_r+0x8e6>
  407c64:	9b08      	ldr	r3, [sp, #32]
  407c66:	9901      	ldr	r1, [sp, #4]
  407c68:	1a5c      	subs	r4, r3, r1
  407c6a:	2c00      	cmp	r4, #0
  407c6c:	dc81      	bgt.n	407b72 <_vfiprintf_r+0x7ea>
  407c6e:	9b03      	ldr	r3, [sp, #12]
  407c70:	9908      	ldr	r1, [sp, #32]
  407c72:	9801      	ldr	r0, [sp, #4]
  407c74:	4281      	cmp	r1, r0
  407c76:	bfac      	ite	ge
  407c78:	185b      	addge	r3, r3, r1
  407c7a:	181b      	addlt	r3, r3, r0
  407c7c:	9303      	str	r3, [sp, #12]
  407c7e:	bb72      	cbnz	r2, 407cde <_vfiprintf_r+0x956>
  407c80:	2300      	movs	r3, #0
  407c82:	9310      	str	r3, [sp, #64]	; 0x40
  407c84:	46ca      	mov	sl, r9
  407c86:	f7ff bbbc 	b.w	407402 <_vfiprintf_r+0x7a>
  407c8a:	aa0f      	add	r2, sp, #60	; 0x3c
  407c8c:	9904      	ldr	r1, [sp, #16]
  407c8e:	4620      	mov	r0, r4
  407c90:	f7ff fb3a 	bl	407308 <__sprint_r.part.0>
  407c94:	bb50      	cbnz	r0, 407cec <_vfiprintf_r+0x964>
  407c96:	9910      	ldr	r1, [sp, #64]	; 0x40
  407c98:	9a11      	ldr	r2, [sp, #68]	; 0x44
  407c9a:	f101 0e01 	add.w	lr, r1, #1
  407c9e:	46cc      	mov	ip, r9
  407ca0:	e548      	b.n	407734 <_vfiprintf_r+0x3ac>
  407ca2:	2a00      	cmp	r2, #0
  407ca4:	f040 8140 	bne.w	407f28 <_vfiprintf_r+0xba0>
  407ca8:	f89d 1037 	ldrb.w	r1, [sp, #55]	; 0x37
  407cac:	2900      	cmp	r1, #0
  407cae:	f000 811b 	beq.w	407ee8 <_vfiprintf_r+0xb60>
  407cb2:	2201      	movs	r2, #1
  407cb4:	f10d 0137 	add.w	r1, sp, #55	; 0x37
  407cb8:	4610      	mov	r0, r2
  407cba:	921d      	str	r2, [sp, #116]	; 0x74
  407cbc:	911c      	str	r1, [sp, #112]	; 0x70
  407cbe:	46ca      	mov	sl, r9
  407cc0:	4601      	mov	r1, r0
  407cc2:	f10a 0a08 	add.w	sl, sl, #8
  407cc6:	3001      	adds	r0, #1
  407cc8:	e507      	b.n	4076da <_vfiprintf_r+0x352>
  407cca:	9b02      	ldr	r3, [sp, #8]
  407ccc:	2a01      	cmp	r2, #1
  407cce:	f000 8098 	beq.w	407e02 <_vfiprintf_r+0xa7a>
  407cd2:	2a02      	cmp	r2, #2
  407cd4:	d10d      	bne.n	407cf2 <_vfiprintf_r+0x96a>
  407cd6:	9302      	str	r3, [sp, #8]
  407cd8:	2600      	movs	r6, #0
  407cda:	2700      	movs	r7, #0
  407cdc:	e5b0      	b.n	407840 <_vfiprintf_r+0x4b8>
  407cde:	aa0f      	add	r2, sp, #60	; 0x3c
  407ce0:	9904      	ldr	r1, [sp, #16]
  407ce2:	9806      	ldr	r0, [sp, #24]
  407ce4:	f7ff fb10 	bl	407308 <__sprint_r.part.0>
  407ce8:	2800      	cmp	r0, #0
  407cea:	d0c9      	beq.n	407c80 <_vfiprintf_r+0x8f8>
  407cec:	f8dd b010 	ldr.w	fp, [sp, #16]
  407cf0:	e797      	b.n	407c22 <_vfiprintf_r+0x89a>
  407cf2:	9302      	str	r3, [sp, #8]
  407cf4:	2600      	movs	r6, #0
  407cf6:	2700      	movs	r7, #0
  407cf8:	4649      	mov	r1, r9
  407cfa:	e000      	b.n	407cfe <_vfiprintf_r+0x976>
  407cfc:	4659      	mov	r1, fp
  407cfe:	08f2      	lsrs	r2, r6, #3
  407d00:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
  407d04:	08f8      	lsrs	r0, r7, #3
  407d06:	f006 0307 	and.w	r3, r6, #7
  407d0a:	4607      	mov	r7, r0
  407d0c:	4616      	mov	r6, r2
  407d0e:	3330      	adds	r3, #48	; 0x30
  407d10:	ea56 0207 	orrs.w	r2, r6, r7
  407d14:	f801 3c01 	strb.w	r3, [r1, #-1]
  407d18:	f101 3bff 	add.w	fp, r1, #4294967295
  407d1c:	d1ee      	bne.n	407cfc <_vfiprintf_r+0x974>
  407d1e:	9a02      	ldr	r2, [sp, #8]
  407d20:	07d6      	lsls	r6, r2, #31
  407d22:	f57f ad9d 	bpl.w	407860 <_vfiprintf_r+0x4d8>
  407d26:	2b30      	cmp	r3, #48	; 0x30
  407d28:	f43f ad9a 	beq.w	407860 <_vfiprintf_r+0x4d8>
  407d2c:	3902      	subs	r1, #2
  407d2e:	2330      	movs	r3, #48	; 0x30
  407d30:	f80b 3c01 	strb.w	r3, [fp, #-1]
  407d34:	eba9 0301 	sub.w	r3, r9, r1
  407d38:	9305      	str	r3, [sp, #20]
  407d3a:	468b      	mov	fp, r1
  407d3c:	e476      	b.n	40762c <_vfiprintf_r+0x2a4>
  407d3e:	9b03      	ldr	r3, [sp, #12]
  407d40:	9a08      	ldr	r2, [sp, #32]
  407d42:	428a      	cmp	r2, r1
  407d44:	bfac      	ite	ge
  407d46:	189b      	addge	r3, r3, r2
  407d48:	185b      	addlt	r3, r3, r1
  407d4a:	9303      	str	r3, [sp, #12]
  407d4c:	e798      	b.n	407c80 <_vfiprintf_r+0x8f8>
  407d4e:	2202      	movs	r2, #2
  407d50:	e44d      	b.n	4075ee <_vfiprintf_r+0x266>
  407d52:	2f00      	cmp	r7, #0
  407d54:	bf08      	it	eq
  407d56:	2e0a      	cmpeq	r6, #10
  407d58:	d352      	bcc.n	407e00 <_vfiprintf_r+0xa78>
  407d5a:	46cb      	mov	fp, r9
  407d5c:	4630      	mov	r0, r6
  407d5e:	4639      	mov	r1, r7
  407d60:	220a      	movs	r2, #10
  407d62:	2300      	movs	r3, #0
  407d64:	f001 fce8 	bl	409738 <__aeabi_uldivmod>
  407d68:	3230      	adds	r2, #48	; 0x30
  407d6a:	f80b 2d01 	strb.w	r2, [fp, #-1]!
  407d6e:	4630      	mov	r0, r6
  407d70:	4639      	mov	r1, r7
  407d72:	2300      	movs	r3, #0
  407d74:	220a      	movs	r2, #10
  407d76:	f001 fcdf 	bl	409738 <__aeabi_uldivmod>
  407d7a:	4606      	mov	r6, r0
  407d7c:	460f      	mov	r7, r1
  407d7e:	ea56 0307 	orrs.w	r3, r6, r7
  407d82:	d1eb      	bne.n	407d5c <_vfiprintf_r+0x9d4>
  407d84:	e56c      	b.n	407860 <_vfiprintf_r+0x4d8>
  407d86:	9405      	str	r4, [sp, #20]
  407d88:	46cb      	mov	fp, r9
  407d8a:	e44f      	b.n	40762c <_vfiprintf_r+0x2a4>
  407d8c:	aa0f      	add	r2, sp, #60	; 0x3c
  407d8e:	9904      	ldr	r1, [sp, #16]
  407d90:	9806      	ldr	r0, [sp, #24]
  407d92:	f7ff fab9 	bl	407308 <__sprint_r.part.0>
  407d96:	2800      	cmp	r0, #0
  407d98:	d1a8      	bne.n	407cec <_vfiprintf_r+0x964>
  407d9a:	9a11      	ldr	r2, [sp, #68]	; 0x44
  407d9c:	46ca      	mov	sl, r9
  407d9e:	e75e      	b.n	407c5e <_vfiprintf_r+0x8d6>
  407da0:	aa0f      	add	r2, sp, #60	; 0x3c
  407da2:	9904      	ldr	r1, [sp, #16]
  407da4:	9806      	ldr	r0, [sp, #24]
  407da6:	f7ff faaf 	bl	407308 <__sprint_r.part.0>
  407daa:	2800      	cmp	r0, #0
  407dac:	d19e      	bne.n	407cec <_vfiprintf_r+0x964>
  407dae:	46ca      	mov	sl, r9
  407db0:	f7ff bbc0 	b.w	407534 <_vfiprintf_r+0x1ac>
  407db4:	00414adc 	.word	0x00414adc
  407db8:	00414acc 	.word	0x00414acc
  407dbc:	3104      	adds	r1, #4
  407dbe:	6816      	ldr	r6, [r2, #0]
  407dc0:	9107      	str	r1, [sp, #28]
  407dc2:	2201      	movs	r2, #1
  407dc4:	2700      	movs	r7, #0
  407dc6:	e412      	b.n	4075ee <_vfiprintf_r+0x266>
  407dc8:	9807      	ldr	r0, [sp, #28]
  407dca:	4601      	mov	r1, r0
  407dcc:	3104      	adds	r1, #4
  407dce:	6806      	ldr	r6, [r0, #0]
  407dd0:	9107      	str	r1, [sp, #28]
  407dd2:	2700      	movs	r7, #0
  407dd4:	e40b      	b.n	4075ee <_vfiprintf_r+0x266>
  407dd6:	680e      	ldr	r6, [r1, #0]
  407dd8:	3104      	adds	r1, #4
  407dda:	9107      	str	r1, [sp, #28]
  407ddc:	2700      	movs	r7, #0
  407dde:	e591      	b.n	407904 <_vfiprintf_r+0x57c>
  407de0:	9907      	ldr	r1, [sp, #28]
  407de2:	680e      	ldr	r6, [r1, #0]
  407de4:	460a      	mov	r2, r1
  407de6:	17f7      	asrs	r7, r6, #31
  407de8:	3204      	adds	r2, #4
  407dea:	9207      	str	r2, [sp, #28]
  407dec:	4630      	mov	r0, r6
  407dee:	4639      	mov	r1, r7
  407df0:	e50f      	b.n	407812 <_vfiprintf_r+0x48a>
  407df2:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  407df6:	f000 fe7f 	bl	408af8 <__retarget_lock_release_recursive>
  407dfa:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  407dfe:	e71a      	b.n	407c36 <_vfiprintf_r+0x8ae>
  407e00:	9b02      	ldr	r3, [sp, #8]
  407e02:	9302      	str	r3, [sp, #8]
  407e04:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
  407e08:	3630      	adds	r6, #48	; 0x30
  407e0a:	2301      	movs	r3, #1
  407e0c:	f80b 6d41 	strb.w	r6, [fp, #-65]!
  407e10:	9305      	str	r3, [sp, #20]
  407e12:	e40b      	b.n	40762c <_vfiprintf_r+0x2a4>
  407e14:	aa0f      	add	r2, sp, #60	; 0x3c
  407e16:	9904      	ldr	r1, [sp, #16]
  407e18:	9806      	ldr	r0, [sp, #24]
  407e1a:	f7ff fa75 	bl	407308 <__sprint_r.part.0>
  407e1e:	2800      	cmp	r0, #0
  407e20:	f47f af64 	bne.w	407cec <_vfiprintf_r+0x964>
  407e24:	9910      	ldr	r1, [sp, #64]	; 0x40
  407e26:	9a11      	ldr	r2, [sp, #68]	; 0x44
  407e28:	1c48      	adds	r0, r1, #1
  407e2a:	46ca      	mov	sl, r9
  407e2c:	e651      	b.n	407ad2 <_vfiprintf_r+0x74a>
  407e2e:	aa0f      	add	r2, sp, #60	; 0x3c
  407e30:	9904      	ldr	r1, [sp, #16]
  407e32:	9806      	ldr	r0, [sp, #24]
  407e34:	f7ff fa68 	bl	407308 <__sprint_r.part.0>
  407e38:	2800      	cmp	r0, #0
  407e3a:	f47f af57 	bne.w	407cec <_vfiprintf_r+0x964>
  407e3e:	9910      	ldr	r1, [sp, #64]	; 0x40
  407e40:	9a11      	ldr	r2, [sp, #68]	; 0x44
  407e42:	1c48      	adds	r0, r1, #1
  407e44:	46ca      	mov	sl, r9
  407e46:	e448      	b.n	4076da <_vfiprintf_r+0x352>
  407e48:	2a00      	cmp	r2, #0
  407e4a:	f040 8091 	bne.w	407f70 <_vfiprintf_r+0xbe8>
  407e4e:	2001      	movs	r0, #1
  407e50:	4611      	mov	r1, r2
  407e52:	46ca      	mov	sl, r9
  407e54:	e641      	b.n	407ada <_vfiprintf_r+0x752>
  407e56:	aa0f      	add	r2, sp, #60	; 0x3c
  407e58:	9904      	ldr	r1, [sp, #16]
  407e5a:	9806      	ldr	r0, [sp, #24]
  407e5c:	f7ff fa54 	bl	407308 <__sprint_r.part.0>
  407e60:	2800      	cmp	r0, #0
  407e62:	f47f af43 	bne.w	407cec <_vfiprintf_r+0x964>
  407e66:	9810      	ldr	r0, [sp, #64]	; 0x40
  407e68:	9a11      	ldr	r2, [sp, #68]	; 0x44
  407e6a:	3001      	adds	r0, #1
  407e6c:	46ca      	mov	sl, r9
  407e6e:	e667      	b.n	407b40 <_vfiprintf_r+0x7b8>
  407e70:	46d3      	mov	fp, sl
  407e72:	e6d6      	b.n	407c22 <_vfiprintf_r+0x89a>
  407e74:	9e07      	ldr	r6, [sp, #28]
  407e76:	3607      	adds	r6, #7
  407e78:	f026 0207 	bic.w	r2, r6, #7
  407e7c:	f102 0108 	add.w	r1, r2, #8
  407e80:	e9d2 6700 	ldrd	r6, r7, [r2]
  407e84:	9107      	str	r1, [sp, #28]
  407e86:	2201      	movs	r2, #1
  407e88:	f7ff bbb1 	b.w	4075ee <_vfiprintf_r+0x266>
  407e8c:	9e07      	ldr	r6, [sp, #28]
  407e8e:	3607      	adds	r6, #7
  407e90:	f026 0607 	bic.w	r6, r6, #7
  407e94:	e9d6 0100 	ldrd	r0, r1, [r6]
  407e98:	f106 0208 	add.w	r2, r6, #8
  407e9c:	9207      	str	r2, [sp, #28]
  407e9e:	4606      	mov	r6, r0
  407ea0:	460f      	mov	r7, r1
  407ea2:	e4b6      	b.n	407812 <_vfiprintf_r+0x48a>
  407ea4:	9e07      	ldr	r6, [sp, #28]
  407ea6:	3607      	adds	r6, #7
  407ea8:	f026 0207 	bic.w	r2, r6, #7
  407eac:	f102 0108 	add.w	r1, r2, #8
  407eb0:	e9d2 6700 	ldrd	r6, r7, [r2]
  407eb4:	9107      	str	r1, [sp, #28]
  407eb6:	2200      	movs	r2, #0
  407eb8:	f7ff bb99 	b.w	4075ee <_vfiprintf_r+0x266>
  407ebc:	9e07      	ldr	r6, [sp, #28]
  407ebe:	3607      	adds	r6, #7
  407ec0:	f026 0107 	bic.w	r1, r6, #7
  407ec4:	f101 0008 	add.w	r0, r1, #8
  407ec8:	9007      	str	r0, [sp, #28]
  407eca:	e9d1 6700 	ldrd	r6, r7, [r1]
  407ece:	e519      	b.n	407904 <_vfiprintf_r+0x57c>
  407ed0:	46cb      	mov	fp, r9
  407ed2:	f7ff bbab 	b.w	40762c <_vfiprintf_r+0x2a4>
  407ed6:	252d      	movs	r5, #45	; 0x2d
  407ed8:	4276      	negs	r6, r6
  407eda:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
  407ede:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  407ee2:	2201      	movs	r2, #1
  407ee4:	f7ff bb88 	b.w	4075f8 <_vfiprintf_r+0x270>
  407ee8:	9b09      	ldr	r3, [sp, #36]	; 0x24
  407eea:	b9b3      	cbnz	r3, 407f1a <_vfiprintf_r+0xb92>
  407eec:	4611      	mov	r1, r2
  407eee:	2001      	movs	r0, #1
  407ef0:	46ca      	mov	sl, r9
  407ef2:	e5f2      	b.n	407ada <_vfiprintf_r+0x752>
  407ef4:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  407ef8:	f000 fdfe 	bl	408af8 <__retarget_lock_release_recursive>
  407efc:	f04f 33ff 	mov.w	r3, #4294967295
  407f00:	9303      	str	r3, [sp, #12]
  407f02:	f7ff bb50 	b.w	4075a6 <_vfiprintf_r+0x21e>
  407f06:	aa0f      	add	r2, sp, #60	; 0x3c
  407f08:	9904      	ldr	r1, [sp, #16]
  407f0a:	9806      	ldr	r0, [sp, #24]
  407f0c:	f7ff f9fc 	bl	407308 <__sprint_r.part.0>
  407f10:	2800      	cmp	r0, #0
  407f12:	f47f aeeb 	bne.w	407cec <_vfiprintf_r+0x964>
  407f16:	9a11      	ldr	r2, [sp, #68]	; 0x44
  407f18:	e6a9      	b.n	407c6e <_vfiprintf_r+0x8e6>
  407f1a:	ab0e      	add	r3, sp, #56	; 0x38
  407f1c:	2202      	movs	r2, #2
  407f1e:	931c      	str	r3, [sp, #112]	; 0x70
  407f20:	921d      	str	r2, [sp, #116]	; 0x74
  407f22:	2001      	movs	r0, #1
  407f24:	46ca      	mov	sl, r9
  407f26:	e5d0      	b.n	407aca <_vfiprintf_r+0x742>
  407f28:	aa0f      	add	r2, sp, #60	; 0x3c
  407f2a:	9904      	ldr	r1, [sp, #16]
  407f2c:	9806      	ldr	r0, [sp, #24]
  407f2e:	f7ff f9eb 	bl	407308 <__sprint_r.part.0>
  407f32:	2800      	cmp	r0, #0
  407f34:	f47f aeda 	bne.w	407cec <_vfiprintf_r+0x964>
  407f38:	9910      	ldr	r1, [sp, #64]	; 0x40
  407f3a:	9a11      	ldr	r2, [sp, #68]	; 0x44
  407f3c:	1c48      	adds	r0, r1, #1
  407f3e:	46ca      	mov	sl, r9
  407f40:	e5a4      	b.n	407a8c <_vfiprintf_r+0x704>
  407f42:	9a07      	ldr	r2, [sp, #28]
  407f44:	9903      	ldr	r1, [sp, #12]
  407f46:	6813      	ldr	r3, [r2, #0]
  407f48:	17cd      	asrs	r5, r1, #31
  407f4a:	4608      	mov	r0, r1
  407f4c:	3204      	adds	r2, #4
  407f4e:	4629      	mov	r1, r5
  407f50:	9207      	str	r2, [sp, #28]
  407f52:	e9c3 0100 	strd	r0, r1, [r3]
  407f56:	f7ff ba54 	b.w	407402 <_vfiprintf_r+0x7a>
  407f5a:	4658      	mov	r0, fp
  407f5c:	9607      	str	r6, [sp, #28]
  407f5e:	9302      	str	r3, [sp, #8]
  407f60:	f001 f9ae 	bl	4092c0 <strlen>
  407f64:	2400      	movs	r4, #0
  407f66:	9005      	str	r0, [sp, #20]
  407f68:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  407f6c:	f7ff bb5e 	b.w	40762c <_vfiprintf_r+0x2a4>
  407f70:	aa0f      	add	r2, sp, #60	; 0x3c
  407f72:	9904      	ldr	r1, [sp, #16]
  407f74:	9806      	ldr	r0, [sp, #24]
  407f76:	f7ff f9c7 	bl	407308 <__sprint_r.part.0>
  407f7a:	2800      	cmp	r0, #0
  407f7c:	f47f aeb6 	bne.w	407cec <_vfiprintf_r+0x964>
  407f80:	9910      	ldr	r1, [sp, #64]	; 0x40
  407f82:	9a11      	ldr	r2, [sp, #68]	; 0x44
  407f84:	1c48      	adds	r0, r1, #1
  407f86:	46ca      	mov	sl, r9
  407f88:	e5a7      	b.n	407ada <_vfiprintf_r+0x752>
  407f8a:	9910      	ldr	r1, [sp, #64]	; 0x40
  407f8c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  407f8e:	4e20      	ldr	r6, [pc, #128]	; (408010 <_vfiprintf_r+0xc88>)
  407f90:	3101      	adds	r1, #1
  407f92:	f7ff bb90 	b.w	4076b6 <_vfiprintf_r+0x32e>
  407f96:	2c06      	cmp	r4, #6
  407f98:	bf28      	it	cs
  407f9a:	2406      	movcs	r4, #6
  407f9c:	9405      	str	r4, [sp, #20]
  407f9e:	9607      	str	r6, [sp, #28]
  407fa0:	9401      	str	r4, [sp, #4]
  407fa2:	f8df b070 	ldr.w	fp, [pc, #112]	; 408014 <_vfiprintf_r+0xc8c>
  407fa6:	e4d5      	b.n	407954 <_vfiprintf_r+0x5cc>
  407fa8:	9810      	ldr	r0, [sp, #64]	; 0x40
  407faa:	4e19      	ldr	r6, [pc, #100]	; (408010 <_vfiprintf_r+0xc88>)
  407fac:	3001      	adds	r0, #1
  407fae:	e603      	b.n	407bb8 <_vfiprintf_r+0x830>
  407fb0:	9405      	str	r4, [sp, #20]
  407fb2:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  407fb6:	9607      	str	r6, [sp, #28]
  407fb8:	9302      	str	r3, [sp, #8]
  407fba:	4604      	mov	r4, r0
  407fbc:	f7ff bb36 	b.w	40762c <_vfiprintf_r+0x2a4>
  407fc0:	4686      	mov	lr, r0
  407fc2:	f7ff bbce 	b.w	407762 <_vfiprintf_r+0x3da>
  407fc6:	9806      	ldr	r0, [sp, #24]
  407fc8:	aa0f      	add	r2, sp, #60	; 0x3c
  407fca:	4659      	mov	r1, fp
  407fcc:	f7ff f99c 	bl	407308 <__sprint_r.part.0>
  407fd0:	2800      	cmp	r0, #0
  407fd2:	f43f ae24 	beq.w	407c1e <_vfiprintf_r+0x896>
  407fd6:	e624      	b.n	407c22 <_vfiprintf_r+0x89a>
  407fd8:	9907      	ldr	r1, [sp, #28]
  407fda:	f898 2001 	ldrb.w	r2, [r8, #1]
  407fde:	680c      	ldr	r4, [r1, #0]
  407fe0:	3104      	adds	r1, #4
  407fe2:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
  407fe6:	46b8      	mov	r8, r7
  407fe8:	9107      	str	r1, [sp, #28]
  407fea:	f7ff ba3f 	b.w	40746c <_vfiprintf_r+0xe4>
  407fee:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  407ff2:	e43c      	b.n	40786e <_vfiprintf_r+0x4e6>
  407ff4:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  407ff8:	e521      	b.n	407a3e <_vfiprintf_r+0x6b6>
  407ffa:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  407ffe:	f7ff bbf4 	b.w	4077ea <_vfiprintf_r+0x462>
  408002:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  408006:	e491      	b.n	40792c <_vfiprintf_r+0x5a4>
  408008:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  40800c:	e469      	b.n	4078e2 <_vfiprintf_r+0x55a>
  40800e:	bf00      	nop
  408010:	00414acc 	.word	0x00414acc
  408014:	00414ac4 	.word	0x00414ac4

00408018 <__sbprintf>:
  408018:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40801c:	460c      	mov	r4, r1
  40801e:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
  408022:	8989      	ldrh	r1, [r1, #12]
  408024:	6e66      	ldr	r6, [r4, #100]	; 0x64
  408026:	89e5      	ldrh	r5, [r4, #14]
  408028:	9619      	str	r6, [sp, #100]	; 0x64
  40802a:	f021 0102 	bic.w	r1, r1, #2
  40802e:	4606      	mov	r6, r0
  408030:	69e0      	ldr	r0, [r4, #28]
  408032:	f8ad 100c 	strh.w	r1, [sp, #12]
  408036:	4617      	mov	r7, r2
  408038:	f44f 6180 	mov.w	r1, #1024	; 0x400
  40803c:	6a62      	ldr	r2, [r4, #36]	; 0x24
  40803e:	f8ad 500e 	strh.w	r5, [sp, #14]
  408042:	4698      	mov	r8, r3
  408044:	ad1a      	add	r5, sp, #104	; 0x68
  408046:	2300      	movs	r3, #0
  408048:	9007      	str	r0, [sp, #28]
  40804a:	a816      	add	r0, sp, #88	; 0x58
  40804c:	9209      	str	r2, [sp, #36]	; 0x24
  40804e:	9306      	str	r3, [sp, #24]
  408050:	9500      	str	r5, [sp, #0]
  408052:	9504      	str	r5, [sp, #16]
  408054:	9102      	str	r1, [sp, #8]
  408056:	9105      	str	r1, [sp, #20]
  408058:	f000 fd48 	bl	408aec <__retarget_lock_init_recursive>
  40805c:	4643      	mov	r3, r8
  40805e:	463a      	mov	r2, r7
  408060:	4669      	mov	r1, sp
  408062:	4630      	mov	r0, r6
  408064:	f7ff f990 	bl	407388 <_vfiprintf_r>
  408068:	1e05      	subs	r5, r0, #0
  40806a:	db07      	blt.n	40807c <__sbprintf+0x64>
  40806c:	4630      	mov	r0, r6
  40806e:	4669      	mov	r1, sp
  408070:	f000 f928 	bl	4082c4 <_fflush_r>
  408074:	2800      	cmp	r0, #0
  408076:	bf18      	it	ne
  408078:	f04f 35ff 	movne.w	r5, #4294967295
  40807c:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  408080:	065b      	lsls	r3, r3, #25
  408082:	d503      	bpl.n	40808c <__sbprintf+0x74>
  408084:	89a3      	ldrh	r3, [r4, #12]
  408086:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40808a:	81a3      	strh	r3, [r4, #12]
  40808c:	9816      	ldr	r0, [sp, #88]	; 0x58
  40808e:	f000 fd2f 	bl	408af0 <__retarget_lock_close_recursive>
  408092:	4628      	mov	r0, r5
  408094:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
  408098:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0040809c <__swsetup_r>:
  40809c:	b538      	push	{r3, r4, r5, lr}
  40809e:	4b30      	ldr	r3, [pc, #192]	; (408160 <__swsetup_r+0xc4>)
  4080a0:	681b      	ldr	r3, [r3, #0]
  4080a2:	4605      	mov	r5, r0
  4080a4:	460c      	mov	r4, r1
  4080a6:	b113      	cbz	r3, 4080ae <__swsetup_r+0x12>
  4080a8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  4080aa:	2a00      	cmp	r2, #0
  4080ac:	d038      	beq.n	408120 <__swsetup_r+0x84>
  4080ae:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4080b2:	b293      	uxth	r3, r2
  4080b4:	0718      	lsls	r0, r3, #28
  4080b6:	d50c      	bpl.n	4080d2 <__swsetup_r+0x36>
  4080b8:	6920      	ldr	r0, [r4, #16]
  4080ba:	b1a8      	cbz	r0, 4080e8 <__swsetup_r+0x4c>
  4080bc:	f013 0201 	ands.w	r2, r3, #1
  4080c0:	d01e      	beq.n	408100 <__swsetup_r+0x64>
  4080c2:	6963      	ldr	r3, [r4, #20]
  4080c4:	2200      	movs	r2, #0
  4080c6:	425b      	negs	r3, r3
  4080c8:	61a3      	str	r3, [r4, #24]
  4080ca:	60a2      	str	r2, [r4, #8]
  4080cc:	b1f0      	cbz	r0, 40810c <__swsetup_r+0x70>
  4080ce:	2000      	movs	r0, #0
  4080d0:	bd38      	pop	{r3, r4, r5, pc}
  4080d2:	06d9      	lsls	r1, r3, #27
  4080d4:	d53c      	bpl.n	408150 <__swsetup_r+0xb4>
  4080d6:	0758      	lsls	r0, r3, #29
  4080d8:	d426      	bmi.n	408128 <__swsetup_r+0x8c>
  4080da:	6920      	ldr	r0, [r4, #16]
  4080dc:	f042 0308 	orr.w	r3, r2, #8
  4080e0:	81a3      	strh	r3, [r4, #12]
  4080e2:	b29b      	uxth	r3, r3
  4080e4:	2800      	cmp	r0, #0
  4080e6:	d1e9      	bne.n	4080bc <__swsetup_r+0x20>
  4080e8:	f403 7220 	and.w	r2, r3, #640	; 0x280
  4080ec:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  4080f0:	d0e4      	beq.n	4080bc <__swsetup_r+0x20>
  4080f2:	4628      	mov	r0, r5
  4080f4:	4621      	mov	r1, r4
  4080f6:	f000 fd2f 	bl	408b58 <__smakebuf_r>
  4080fa:	89a3      	ldrh	r3, [r4, #12]
  4080fc:	6920      	ldr	r0, [r4, #16]
  4080fe:	e7dd      	b.n	4080bc <__swsetup_r+0x20>
  408100:	0799      	lsls	r1, r3, #30
  408102:	bf58      	it	pl
  408104:	6962      	ldrpl	r2, [r4, #20]
  408106:	60a2      	str	r2, [r4, #8]
  408108:	2800      	cmp	r0, #0
  40810a:	d1e0      	bne.n	4080ce <__swsetup_r+0x32>
  40810c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  408110:	061a      	lsls	r2, r3, #24
  408112:	d5dd      	bpl.n	4080d0 <__swsetup_r+0x34>
  408114:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  408118:	81a3      	strh	r3, [r4, #12]
  40811a:	f04f 30ff 	mov.w	r0, #4294967295
  40811e:	bd38      	pop	{r3, r4, r5, pc}
  408120:	4618      	mov	r0, r3
  408122:	f000 f927 	bl	408374 <__sinit>
  408126:	e7c2      	b.n	4080ae <__swsetup_r+0x12>
  408128:	6b21      	ldr	r1, [r4, #48]	; 0x30
  40812a:	b151      	cbz	r1, 408142 <__swsetup_r+0xa6>
  40812c:	f104 0340 	add.w	r3, r4, #64	; 0x40
  408130:	4299      	cmp	r1, r3
  408132:	d004      	beq.n	40813e <__swsetup_r+0xa2>
  408134:	4628      	mov	r0, r5
  408136:	f000 fa43 	bl	4085c0 <_free_r>
  40813a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40813e:	2300      	movs	r3, #0
  408140:	6323      	str	r3, [r4, #48]	; 0x30
  408142:	2300      	movs	r3, #0
  408144:	6920      	ldr	r0, [r4, #16]
  408146:	6063      	str	r3, [r4, #4]
  408148:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  40814c:	6020      	str	r0, [r4, #0]
  40814e:	e7c5      	b.n	4080dc <__swsetup_r+0x40>
  408150:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  408154:	2309      	movs	r3, #9
  408156:	602b      	str	r3, [r5, #0]
  408158:	f04f 30ff 	mov.w	r0, #4294967295
  40815c:	81a2      	strh	r2, [r4, #12]
  40815e:	bd38      	pop	{r3, r4, r5, pc}
  408160:	20400050 	.word	0x20400050

00408164 <register_fini>:
  408164:	4b02      	ldr	r3, [pc, #8]	; (408170 <register_fini+0xc>)
  408166:	b113      	cbz	r3, 40816e <register_fini+0xa>
  408168:	4802      	ldr	r0, [pc, #8]	; (408174 <register_fini+0x10>)
  40816a:	f000 b805 	b.w	408178 <atexit>
  40816e:	4770      	bx	lr
  408170:	00000000 	.word	0x00000000
  408174:	004083e5 	.word	0x004083e5

00408178 <atexit>:
  408178:	2300      	movs	r3, #0
  40817a:	4601      	mov	r1, r0
  40817c:	461a      	mov	r2, r3
  40817e:	4618      	mov	r0, r3
  408180:	f001 b9b2 	b.w	4094e8 <__register_exitproc>

00408184 <__sflush_r>:
  408184:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  408188:	b29a      	uxth	r2, r3
  40818a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40818e:	460d      	mov	r5, r1
  408190:	0711      	lsls	r1, r2, #28
  408192:	4680      	mov	r8, r0
  408194:	d43a      	bmi.n	40820c <__sflush_r+0x88>
  408196:	686a      	ldr	r2, [r5, #4]
  408198:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  40819c:	2a00      	cmp	r2, #0
  40819e:	81ab      	strh	r3, [r5, #12]
  4081a0:	dd6f      	ble.n	408282 <__sflush_r+0xfe>
  4081a2:	6aac      	ldr	r4, [r5, #40]	; 0x28
  4081a4:	2c00      	cmp	r4, #0
  4081a6:	d049      	beq.n	40823c <__sflush_r+0xb8>
  4081a8:	2200      	movs	r2, #0
  4081aa:	b29b      	uxth	r3, r3
  4081ac:	f8d8 6000 	ldr.w	r6, [r8]
  4081b0:	f8c8 2000 	str.w	r2, [r8]
  4081b4:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
  4081b8:	d067      	beq.n	40828a <__sflush_r+0x106>
  4081ba:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  4081bc:	075f      	lsls	r7, r3, #29
  4081be:	d505      	bpl.n	4081cc <__sflush_r+0x48>
  4081c0:	6869      	ldr	r1, [r5, #4]
  4081c2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  4081c4:	1a52      	subs	r2, r2, r1
  4081c6:	b10b      	cbz	r3, 4081cc <__sflush_r+0x48>
  4081c8:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  4081ca:	1ad2      	subs	r2, r2, r3
  4081cc:	2300      	movs	r3, #0
  4081ce:	69e9      	ldr	r1, [r5, #28]
  4081d0:	4640      	mov	r0, r8
  4081d2:	47a0      	blx	r4
  4081d4:	1c44      	adds	r4, r0, #1
  4081d6:	d03c      	beq.n	408252 <__sflush_r+0xce>
  4081d8:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  4081dc:	692a      	ldr	r2, [r5, #16]
  4081de:	602a      	str	r2, [r5, #0]
  4081e0:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  4081e4:	2200      	movs	r2, #0
  4081e6:	81ab      	strh	r3, [r5, #12]
  4081e8:	04db      	lsls	r3, r3, #19
  4081ea:	606a      	str	r2, [r5, #4]
  4081ec:	d447      	bmi.n	40827e <__sflush_r+0xfa>
  4081ee:	6b29      	ldr	r1, [r5, #48]	; 0x30
  4081f0:	f8c8 6000 	str.w	r6, [r8]
  4081f4:	b311      	cbz	r1, 40823c <__sflush_r+0xb8>
  4081f6:	f105 0340 	add.w	r3, r5, #64	; 0x40
  4081fa:	4299      	cmp	r1, r3
  4081fc:	d002      	beq.n	408204 <__sflush_r+0x80>
  4081fe:	4640      	mov	r0, r8
  408200:	f000 f9de 	bl	4085c0 <_free_r>
  408204:	2000      	movs	r0, #0
  408206:	6328      	str	r0, [r5, #48]	; 0x30
  408208:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40820c:	692e      	ldr	r6, [r5, #16]
  40820e:	b1ae      	cbz	r6, 40823c <__sflush_r+0xb8>
  408210:	682c      	ldr	r4, [r5, #0]
  408212:	602e      	str	r6, [r5, #0]
  408214:	0791      	lsls	r1, r2, #30
  408216:	bf0c      	ite	eq
  408218:	696b      	ldreq	r3, [r5, #20]
  40821a:	2300      	movne	r3, #0
  40821c:	1ba4      	subs	r4, r4, r6
  40821e:	60ab      	str	r3, [r5, #8]
  408220:	e00a      	b.n	408238 <__sflush_r+0xb4>
  408222:	4623      	mov	r3, r4
  408224:	4632      	mov	r2, r6
  408226:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  408228:	69e9      	ldr	r1, [r5, #28]
  40822a:	4640      	mov	r0, r8
  40822c:	47b8      	blx	r7
  40822e:	2800      	cmp	r0, #0
  408230:	eba4 0400 	sub.w	r4, r4, r0
  408234:	4406      	add	r6, r0
  408236:	dd04      	ble.n	408242 <__sflush_r+0xbe>
  408238:	2c00      	cmp	r4, #0
  40823a:	dcf2      	bgt.n	408222 <__sflush_r+0x9e>
  40823c:	2000      	movs	r0, #0
  40823e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  408242:	89ab      	ldrh	r3, [r5, #12]
  408244:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  408248:	81ab      	strh	r3, [r5, #12]
  40824a:	f04f 30ff 	mov.w	r0, #4294967295
  40824e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  408252:	f8d8 4000 	ldr.w	r4, [r8]
  408256:	2c1d      	cmp	r4, #29
  408258:	d8f3      	bhi.n	408242 <__sflush_r+0xbe>
  40825a:	4b19      	ldr	r3, [pc, #100]	; (4082c0 <__sflush_r+0x13c>)
  40825c:	40e3      	lsrs	r3, r4
  40825e:	43db      	mvns	r3, r3
  408260:	f013 0301 	ands.w	r3, r3, #1
  408264:	d1ed      	bne.n	408242 <__sflush_r+0xbe>
  408266:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
  40826a:	606b      	str	r3, [r5, #4]
  40826c:	f422 6300 	bic.w	r3, r2, #2048	; 0x800
  408270:	6929      	ldr	r1, [r5, #16]
  408272:	81ab      	strh	r3, [r5, #12]
  408274:	04da      	lsls	r2, r3, #19
  408276:	6029      	str	r1, [r5, #0]
  408278:	d5b9      	bpl.n	4081ee <__sflush_r+0x6a>
  40827a:	2c00      	cmp	r4, #0
  40827c:	d1b7      	bne.n	4081ee <__sflush_r+0x6a>
  40827e:	6528      	str	r0, [r5, #80]	; 0x50
  408280:	e7b5      	b.n	4081ee <__sflush_r+0x6a>
  408282:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  408284:	2a00      	cmp	r2, #0
  408286:	dc8c      	bgt.n	4081a2 <__sflush_r+0x1e>
  408288:	e7d8      	b.n	40823c <__sflush_r+0xb8>
  40828a:	2301      	movs	r3, #1
  40828c:	69e9      	ldr	r1, [r5, #28]
  40828e:	4640      	mov	r0, r8
  408290:	47a0      	blx	r4
  408292:	1c43      	adds	r3, r0, #1
  408294:	4602      	mov	r2, r0
  408296:	d002      	beq.n	40829e <__sflush_r+0x11a>
  408298:	89ab      	ldrh	r3, [r5, #12]
  40829a:	6aac      	ldr	r4, [r5, #40]	; 0x28
  40829c:	e78e      	b.n	4081bc <__sflush_r+0x38>
  40829e:	f8d8 3000 	ldr.w	r3, [r8]
  4082a2:	2b00      	cmp	r3, #0
  4082a4:	d0f8      	beq.n	408298 <__sflush_r+0x114>
  4082a6:	2b1d      	cmp	r3, #29
  4082a8:	d001      	beq.n	4082ae <__sflush_r+0x12a>
  4082aa:	2b16      	cmp	r3, #22
  4082ac:	d102      	bne.n	4082b4 <__sflush_r+0x130>
  4082ae:	f8c8 6000 	str.w	r6, [r8]
  4082b2:	e7c3      	b.n	40823c <__sflush_r+0xb8>
  4082b4:	89ab      	ldrh	r3, [r5, #12]
  4082b6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4082ba:	81ab      	strh	r3, [r5, #12]
  4082bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4082c0:	20400001 	.word	0x20400001

004082c4 <_fflush_r>:
  4082c4:	b538      	push	{r3, r4, r5, lr}
  4082c6:	460d      	mov	r5, r1
  4082c8:	4604      	mov	r4, r0
  4082ca:	b108      	cbz	r0, 4082d0 <_fflush_r+0xc>
  4082cc:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4082ce:	b1bb      	cbz	r3, 408300 <_fflush_r+0x3c>
  4082d0:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
  4082d4:	b188      	cbz	r0, 4082fa <_fflush_r+0x36>
  4082d6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  4082d8:	07db      	lsls	r3, r3, #31
  4082da:	d401      	bmi.n	4082e0 <_fflush_r+0x1c>
  4082dc:	0581      	lsls	r1, r0, #22
  4082de:	d517      	bpl.n	408310 <_fflush_r+0x4c>
  4082e0:	4620      	mov	r0, r4
  4082e2:	4629      	mov	r1, r5
  4082e4:	f7ff ff4e 	bl	408184 <__sflush_r>
  4082e8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  4082ea:	07da      	lsls	r2, r3, #31
  4082ec:	4604      	mov	r4, r0
  4082ee:	d402      	bmi.n	4082f6 <_fflush_r+0x32>
  4082f0:	89ab      	ldrh	r3, [r5, #12]
  4082f2:	059b      	lsls	r3, r3, #22
  4082f4:	d507      	bpl.n	408306 <_fflush_r+0x42>
  4082f6:	4620      	mov	r0, r4
  4082f8:	bd38      	pop	{r3, r4, r5, pc}
  4082fa:	4604      	mov	r4, r0
  4082fc:	4620      	mov	r0, r4
  4082fe:	bd38      	pop	{r3, r4, r5, pc}
  408300:	f000 f838 	bl	408374 <__sinit>
  408304:	e7e4      	b.n	4082d0 <_fflush_r+0xc>
  408306:	6da8      	ldr	r0, [r5, #88]	; 0x58
  408308:	f000 fbf6 	bl	408af8 <__retarget_lock_release_recursive>
  40830c:	4620      	mov	r0, r4
  40830e:	bd38      	pop	{r3, r4, r5, pc}
  408310:	6da8      	ldr	r0, [r5, #88]	; 0x58
  408312:	f000 fbef 	bl	408af4 <__retarget_lock_acquire_recursive>
  408316:	e7e3      	b.n	4082e0 <_fflush_r+0x1c>

00408318 <_cleanup_r>:
  408318:	4901      	ldr	r1, [pc, #4]	; (408320 <_cleanup_r+0x8>)
  40831a:	f000 bbaf 	b.w	408a7c <_fwalk_reent>
  40831e:	bf00      	nop
  408320:	004095d1 	.word	0x004095d1

00408324 <std.isra.0>:
  408324:	b510      	push	{r4, lr}
  408326:	2300      	movs	r3, #0
  408328:	4604      	mov	r4, r0
  40832a:	8181      	strh	r1, [r0, #12]
  40832c:	81c2      	strh	r2, [r0, #14]
  40832e:	6003      	str	r3, [r0, #0]
  408330:	6043      	str	r3, [r0, #4]
  408332:	6083      	str	r3, [r0, #8]
  408334:	6643      	str	r3, [r0, #100]	; 0x64
  408336:	6103      	str	r3, [r0, #16]
  408338:	6143      	str	r3, [r0, #20]
  40833a:	6183      	str	r3, [r0, #24]
  40833c:	4619      	mov	r1, r3
  40833e:	2208      	movs	r2, #8
  408340:	305c      	adds	r0, #92	; 0x5c
  408342:	f7fe fea5 	bl	407090 <memset>
  408346:	4807      	ldr	r0, [pc, #28]	; (408364 <std.isra.0+0x40>)
  408348:	4907      	ldr	r1, [pc, #28]	; (408368 <std.isra.0+0x44>)
  40834a:	4a08      	ldr	r2, [pc, #32]	; (40836c <std.isra.0+0x48>)
  40834c:	4b08      	ldr	r3, [pc, #32]	; (408370 <std.isra.0+0x4c>)
  40834e:	6220      	str	r0, [r4, #32]
  408350:	61e4      	str	r4, [r4, #28]
  408352:	6261      	str	r1, [r4, #36]	; 0x24
  408354:	62a2      	str	r2, [r4, #40]	; 0x28
  408356:	62e3      	str	r3, [r4, #44]	; 0x2c
  408358:	f104 0058 	add.w	r0, r4, #88	; 0x58
  40835c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  408360:	f000 bbc4 	b.w	408aec <__retarget_lock_init_recursive>
  408364:	00409209 	.word	0x00409209
  408368:	0040922d 	.word	0x0040922d
  40836c:	00409269 	.word	0x00409269
  408370:	00409289 	.word	0x00409289

00408374 <__sinit>:
  408374:	b510      	push	{r4, lr}
  408376:	4604      	mov	r4, r0
  408378:	4812      	ldr	r0, [pc, #72]	; (4083c4 <__sinit+0x50>)
  40837a:	f000 fbbb 	bl	408af4 <__retarget_lock_acquire_recursive>
  40837e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  408380:	b9d2      	cbnz	r2, 4083b8 <__sinit+0x44>
  408382:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
  408386:	4810      	ldr	r0, [pc, #64]	; (4083c8 <__sinit+0x54>)
  408388:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
  40838c:	2103      	movs	r1, #3
  40838e:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
  408392:	63e0      	str	r0, [r4, #60]	; 0x3c
  408394:	f8c4 12e4 	str.w	r1, [r4, #740]	; 0x2e4
  408398:	6860      	ldr	r0, [r4, #4]
  40839a:	2104      	movs	r1, #4
  40839c:	f7ff ffc2 	bl	408324 <std.isra.0>
  4083a0:	2201      	movs	r2, #1
  4083a2:	2109      	movs	r1, #9
  4083a4:	68a0      	ldr	r0, [r4, #8]
  4083a6:	f7ff ffbd 	bl	408324 <std.isra.0>
  4083aa:	2202      	movs	r2, #2
  4083ac:	2112      	movs	r1, #18
  4083ae:	68e0      	ldr	r0, [r4, #12]
  4083b0:	f7ff ffb8 	bl	408324 <std.isra.0>
  4083b4:	2301      	movs	r3, #1
  4083b6:	63a3      	str	r3, [r4, #56]	; 0x38
  4083b8:	4802      	ldr	r0, [pc, #8]	; (4083c4 <__sinit+0x50>)
  4083ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  4083be:	f000 bb9b 	b.w	408af8 <__retarget_lock_release_recursive>
  4083c2:	bf00      	nop
  4083c4:	2043b81c 	.word	0x2043b81c
  4083c8:	00408319 	.word	0x00408319

004083cc <__sfp_lock_acquire>:
  4083cc:	4801      	ldr	r0, [pc, #4]	; (4083d4 <__sfp_lock_acquire+0x8>)
  4083ce:	f000 bb91 	b.w	408af4 <__retarget_lock_acquire_recursive>
  4083d2:	bf00      	nop
  4083d4:	2043b830 	.word	0x2043b830

004083d8 <__sfp_lock_release>:
  4083d8:	4801      	ldr	r0, [pc, #4]	; (4083e0 <__sfp_lock_release+0x8>)
  4083da:	f000 bb8d 	b.w	408af8 <__retarget_lock_release_recursive>
  4083de:	bf00      	nop
  4083e0:	2043b830 	.word	0x2043b830

004083e4 <__libc_fini_array>:
  4083e4:	b538      	push	{r3, r4, r5, lr}
  4083e6:	4c0a      	ldr	r4, [pc, #40]	; (408410 <__libc_fini_array+0x2c>)
  4083e8:	4d0a      	ldr	r5, [pc, #40]	; (408414 <__libc_fini_array+0x30>)
  4083ea:	1b64      	subs	r4, r4, r5
  4083ec:	10a4      	asrs	r4, r4, #2
  4083ee:	d00a      	beq.n	408406 <__libc_fini_array+0x22>
  4083f0:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  4083f4:	3b01      	subs	r3, #1
  4083f6:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  4083fa:	3c01      	subs	r4, #1
  4083fc:	f855 3904 	ldr.w	r3, [r5], #-4
  408400:	4798      	blx	r3
  408402:	2c00      	cmp	r4, #0
  408404:	d1f9      	bne.n	4083fa <__libc_fini_array+0x16>
  408406:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  40840a:	f00c bc03 	b.w	414c14 <_fini>
  40840e:	bf00      	nop
  408410:	00414c24 	.word	0x00414c24
  408414:	00414c20 	.word	0x00414c20

00408418 <__fputwc>:
  408418:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  40841c:	b082      	sub	sp, #8
  40841e:	4680      	mov	r8, r0
  408420:	4689      	mov	r9, r1
  408422:	4614      	mov	r4, r2
  408424:	f000 fb54 	bl	408ad0 <__locale_mb_cur_max>
  408428:	2801      	cmp	r0, #1
  40842a:	d036      	beq.n	40849a <__fputwc+0x82>
  40842c:	464a      	mov	r2, r9
  40842e:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  408432:	a901      	add	r1, sp, #4
  408434:	4640      	mov	r0, r8
  408436:	f001 f809 	bl	40944c <_wcrtomb_r>
  40843a:	1c42      	adds	r2, r0, #1
  40843c:	4606      	mov	r6, r0
  40843e:	d025      	beq.n	40848c <__fputwc+0x74>
  408440:	b3a8      	cbz	r0, 4084ae <__fputwc+0x96>
  408442:	f89d e004 	ldrb.w	lr, [sp, #4]
  408446:	2500      	movs	r5, #0
  408448:	f10d 0a04 	add.w	sl, sp, #4
  40844c:	e009      	b.n	408462 <__fputwc+0x4a>
  40844e:	6823      	ldr	r3, [r4, #0]
  408450:	1c5a      	adds	r2, r3, #1
  408452:	6022      	str	r2, [r4, #0]
  408454:	f883 e000 	strb.w	lr, [r3]
  408458:	3501      	adds	r5, #1
  40845a:	42b5      	cmp	r5, r6
  40845c:	d227      	bcs.n	4084ae <__fputwc+0x96>
  40845e:	f815 e00a 	ldrb.w	lr, [r5, sl]
  408462:	68a3      	ldr	r3, [r4, #8]
  408464:	3b01      	subs	r3, #1
  408466:	2b00      	cmp	r3, #0
  408468:	60a3      	str	r3, [r4, #8]
  40846a:	daf0      	bge.n	40844e <__fputwc+0x36>
  40846c:	69a7      	ldr	r7, [r4, #24]
  40846e:	42bb      	cmp	r3, r7
  408470:	4671      	mov	r1, lr
  408472:	4622      	mov	r2, r4
  408474:	4640      	mov	r0, r8
  408476:	db02      	blt.n	40847e <__fputwc+0x66>
  408478:	f1be 0f0a 	cmp.w	lr, #10
  40847c:	d1e7      	bne.n	40844e <__fputwc+0x36>
  40847e:	f000 ff8d 	bl	40939c <__swbuf_r>
  408482:	1c43      	adds	r3, r0, #1
  408484:	d1e8      	bne.n	408458 <__fputwc+0x40>
  408486:	b002      	add	sp, #8
  408488:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40848c:	89a3      	ldrh	r3, [r4, #12]
  40848e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  408492:	81a3      	strh	r3, [r4, #12]
  408494:	b002      	add	sp, #8
  408496:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40849a:	f109 33ff 	add.w	r3, r9, #4294967295
  40849e:	2bfe      	cmp	r3, #254	; 0xfe
  4084a0:	d8c4      	bhi.n	40842c <__fputwc+0x14>
  4084a2:	fa5f fe89 	uxtb.w	lr, r9
  4084a6:	4606      	mov	r6, r0
  4084a8:	f88d e004 	strb.w	lr, [sp, #4]
  4084ac:	e7cb      	b.n	408446 <__fputwc+0x2e>
  4084ae:	4648      	mov	r0, r9
  4084b0:	b002      	add	sp, #8
  4084b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4084b6:	bf00      	nop

004084b8 <_fputwc_r>:
  4084b8:	b530      	push	{r4, r5, lr}
  4084ba:	6e53      	ldr	r3, [r2, #100]	; 0x64
  4084bc:	f013 0f01 	tst.w	r3, #1
  4084c0:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
  4084c4:	4614      	mov	r4, r2
  4084c6:	b083      	sub	sp, #12
  4084c8:	4605      	mov	r5, r0
  4084ca:	b29a      	uxth	r2, r3
  4084cc:	d101      	bne.n	4084d2 <_fputwc_r+0x1a>
  4084ce:	0590      	lsls	r0, r2, #22
  4084d0:	d51c      	bpl.n	40850c <_fputwc_r+0x54>
  4084d2:	0490      	lsls	r0, r2, #18
  4084d4:	d406      	bmi.n	4084e4 <_fputwc_r+0x2c>
  4084d6:	6e62      	ldr	r2, [r4, #100]	; 0x64
  4084d8:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  4084dc:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  4084e0:	81a3      	strh	r3, [r4, #12]
  4084e2:	6662      	str	r2, [r4, #100]	; 0x64
  4084e4:	4628      	mov	r0, r5
  4084e6:	4622      	mov	r2, r4
  4084e8:	f7ff ff96 	bl	408418 <__fputwc>
  4084ec:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4084ee:	07da      	lsls	r2, r3, #31
  4084f0:	4605      	mov	r5, r0
  4084f2:	d402      	bmi.n	4084fa <_fputwc_r+0x42>
  4084f4:	89a3      	ldrh	r3, [r4, #12]
  4084f6:	059b      	lsls	r3, r3, #22
  4084f8:	d502      	bpl.n	408500 <_fputwc_r+0x48>
  4084fa:	4628      	mov	r0, r5
  4084fc:	b003      	add	sp, #12
  4084fe:	bd30      	pop	{r4, r5, pc}
  408500:	6da0      	ldr	r0, [r4, #88]	; 0x58
  408502:	f000 faf9 	bl	408af8 <__retarget_lock_release_recursive>
  408506:	4628      	mov	r0, r5
  408508:	b003      	add	sp, #12
  40850a:	bd30      	pop	{r4, r5, pc}
  40850c:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40850e:	9101      	str	r1, [sp, #4]
  408510:	f000 faf0 	bl	408af4 <__retarget_lock_acquire_recursive>
  408514:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  408518:	9901      	ldr	r1, [sp, #4]
  40851a:	b29a      	uxth	r2, r3
  40851c:	e7d9      	b.n	4084d2 <_fputwc_r+0x1a>
  40851e:	bf00      	nop

00408520 <_malloc_trim_r>:
  408520:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  408522:	4f24      	ldr	r7, [pc, #144]	; (4085b4 <_malloc_trim_r+0x94>)
  408524:	460c      	mov	r4, r1
  408526:	4606      	mov	r6, r0
  408528:	f7fe fe00 	bl	40712c <__malloc_lock>
  40852c:	68bb      	ldr	r3, [r7, #8]
  40852e:	685d      	ldr	r5, [r3, #4]
  408530:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  408534:	310f      	adds	r1, #15
  408536:	f025 0503 	bic.w	r5, r5, #3
  40853a:	4429      	add	r1, r5
  40853c:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  408540:	f021 010f 	bic.w	r1, r1, #15
  408544:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  408548:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  40854c:	db07      	blt.n	40855e <_malloc_trim_r+0x3e>
  40854e:	2100      	movs	r1, #0
  408550:	4630      	mov	r0, r6
  408552:	f7fe fdf7 	bl	407144 <_sbrk_r>
  408556:	68bb      	ldr	r3, [r7, #8]
  408558:	442b      	add	r3, r5
  40855a:	4298      	cmp	r0, r3
  40855c:	d004      	beq.n	408568 <_malloc_trim_r+0x48>
  40855e:	4630      	mov	r0, r6
  408560:	f7fe fdea 	bl	407138 <__malloc_unlock>
  408564:	2000      	movs	r0, #0
  408566:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  408568:	4261      	negs	r1, r4
  40856a:	4630      	mov	r0, r6
  40856c:	f7fe fdea 	bl	407144 <_sbrk_r>
  408570:	3001      	adds	r0, #1
  408572:	d00d      	beq.n	408590 <_malloc_trim_r+0x70>
  408574:	4b10      	ldr	r3, [pc, #64]	; (4085b8 <_malloc_trim_r+0x98>)
  408576:	68ba      	ldr	r2, [r7, #8]
  408578:	6819      	ldr	r1, [r3, #0]
  40857a:	1b2d      	subs	r5, r5, r4
  40857c:	f045 0501 	orr.w	r5, r5, #1
  408580:	4630      	mov	r0, r6
  408582:	1b09      	subs	r1, r1, r4
  408584:	6055      	str	r5, [r2, #4]
  408586:	6019      	str	r1, [r3, #0]
  408588:	f7fe fdd6 	bl	407138 <__malloc_unlock>
  40858c:	2001      	movs	r0, #1
  40858e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  408590:	2100      	movs	r1, #0
  408592:	4630      	mov	r0, r6
  408594:	f7fe fdd6 	bl	407144 <_sbrk_r>
  408598:	68ba      	ldr	r2, [r7, #8]
  40859a:	1a83      	subs	r3, r0, r2
  40859c:	2b0f      	cmp	r3, #15
  40859e:	ddde      	ble.n	40855e <_malloc_trim_r+0x3e>
  4085a0:	4c06      	ldr	r4, [pc, #24]	; (4085bc <_malloc_trim_r+0x9c>)
  4085a2:	4905      	ldr	r1, [pc, #20]	; (4085b8 <_malloc_trim_r+0x98>)
  4085a4:	6824      	ldr	r4, [r4, #0]
  4085a6:	f043 0301 	orr.w	r3, r3, #1
  4085aa:	1b00      	subs	r0, r0, r4
  4085ac:	6053      	str	r3, [r2, #4]
  4085ae:	6008      	str	r0, [r1, #0]
  4085b0:	e7d5      	b.n	40855e <_malloc_trim_r+0x3e>
  4085b2:	bf00      	nop
  4085b4:	20400480 	.word	0x20400480
  4085b8:	20402d08 	.word	0x20402d08
  4085bc:	20400888 	.word	0x20400888

004085c0 <_free_r>:
  4085c0:	2900      	cmp	r1, #0
  4085c2:	d044      	beq.n	40864e <_free_r+0x8e>
  4085c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4085c8:	460d      	mov	r5, r1
  4085ca:	4680      	mov	r8, r0
  4085cc:	f7fe fdae 	bl	40712c <__malloc_lock>
  4085d0:	f855 7c04 	ldr.w	r7, [r5, #-4]
  4085d4:	4969      	ldr	r1, [pc, #420]	; (40877c <_free_r+0x1bc>)
  4085d6:	f027 0301 	bic.w	r3, r7, #1
  4085da:	f1a5 0408 	sub.w	r4, r5, #8
  4085de:	18e2      	adds	r2, r4, r3
  4085e0:	688e      	ldr	r6, [r1, #8]
  4085e2:	6850      	ldr	r0, [r2, #4]
  4085e4:	42b2      	cmp	r2, r6
  4085e6:	f020 0003 	bic.w	r0, r0, #3
  4085ea:	d05e      	beq.n	4086aa <_free_r+0xea>
  4085ec:	07fe      	lsls	r6, r7, #31
  4085ee:	6050      	str	r0, [r2, #4]
  4085f0:	d40b      	bmi.n	40860a <_free_r+0x4a>
  4085f2:	f855 7c08 	ldr.w	r7, [r5, #-8]
  4085f6:	1be4      	subs	r4, r4, r7
  4085f8:	f101 0e08 	add.w	lr, r1, #8
  4085fc:	68a5      	ldr	r5, [r4, #8]
  4085fe:	4575      	cmp	r5, lr
  408600:	443b      	add	r3, r7
  408602:	d06d      	beq.n	4086e0 <_free_r+0x120>
  408604:	68e7      	ldr	r7, [r4, #12]
  408606:	60ef      	str	r7, [r5, #12]
  408608:	60bd      	str	r5, [r7, #8]
  40860a:	1815      	adds	r5, r2, r0
  40860c:	686d      	ldr	r5, [r5, #4]
  40860e:	07ed      	lsls	r5, r5, #31
  408610:	d53e      	bpl.n	408690 <_free_r+0xd0>
  408612:	f043 0201 	orr.w	r2, r3, #1
  408616:	6062      	str	r2, [r4, #4]
  408618:	50e3      	str	r3, [r4, r3]
  40861a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40861e:	d217      	bcs.n	408650 <_free_r+0x90>
  408620:	08db      	lsrs	r3, r3, #3
  408622:	1c58      	adds	r0, r3, #1
  408624:	109a      	asrs	r2, r3, #2
  408626:	684d      	ldr	r5, [r1, #4]
  408628:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  40862c:	60a7      	str	r7, [r4, #8]
  40862e:	2301      	movs	r3, #1
  408630:	4093      	lsls	r3, r2
  408632:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  408636:	432b      	orrs	r3, r5
  408638:	3a08      	subs	r2, #8
  40863a:	60e2      	str	r2, [r4, #12]
  40863c:	604b      	str	r3, [r1, #4]
  40863e:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  408642:	60fc      	str	r4, [r7, #12]
  408644:	4640      	mov	r0, r8
  408646:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  40864a:	f7fe bd75 	b.w	407138 <__malloc_unlock>
  40864e:	4770      	bx	lr
  408650:	0a5a      	lsrs	r2, r3, #9
  408652:	2a04      	cmp	r2, #4
  408654:	d852      	bhi.n	4086fc <_free_r+0x13c>
  408656:	099a      	lsrs	r2, r3, #6
  408658:	f102 0739 	add.w	r7, r2, #57	; 0x39
  40865c:	00ff      	lsls	r7, r7, #3
  40865e:	f102 0538 	add.w	r5, r2, #56	; 0x38
  408662:	19c8      	adds	r0, r1, r7
  408664:	59ca      	ldr	r2, [r1, r7]
  408666:	3808      	subs	r0, #8
  408668:	4290      	cmp	r0, r2
  40866a:	d04f      	beq.n	40870c <_free_r+0x14c>
  40866c:	6851      	ldr	r1, [r2, #4]
  40866e:	f021 0103 	bic.w	r1, r1, #3
  408672:	428b      	cmp	r3, r1
  408674:	d232      	bcs.n	4086dc <_free_r+0x11c>
  408676:	6892      	ldr	r2, [r2, #8]
  408678:	4290      	cmp	r0, r2
  40867a:	d1f7      	bne.n	40866c <_free_r+0xac>
  40867c:	68c3      	ldr	r3, [r0, #12]
  40867e:	60a0      	str	r0, [r4, #8]
  408680:	60e3      	str	r3, [r4, #12]
  408682:	609c      	str	r4, [r3, #8]
  408684:	60c4      	str	r4, [r0, #12]
  408686:	4640      	mov	r0, r8
  408688:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  40868c:	f7fe bd54 	b.w	407138 <__malloc_unlock>
  408690:	6895      	ldr	r5, [r2, #8]
  408692:	4f3b      	ldr	r7, [pc, #236]	; (408780 <_free_r+0x1c0>)
  408694:	42bd      	cmp	r5, r7
  408696:	4403      	add	r3, r0
  408698:	d040      	beq.n	40871c <_free_r+0x15c>
  40869a:	68d0      	ldr	r0, [r2, #12]
  40869c:	60e8      	str	r0, [r5, #12]
  40869e:	f043 0201 	orr.w	r2, r3, #1
  4086a2:	6085      	str	r5, [r0, #8]
  4086a4:	6062      	str	r2, [r4, #4]
  4086a6:	50e3      	str	r3, [r4, r3]
  4086a8:	e7b7      	b.n	40861a <_free_r+0x5a>
  4086aa:	07ff      	lsls	r7, r7, #31
  4086ac:	4403      	add	r3, r0
  4086ae:	d407      	bmi.n	4086c0 <_free_r+0x100>
  4086b0:	f855 2c08 	ldr.w	r2, [r5, #-8]
  4086b4:	1aa4      	subs	r4, r4, r2
  4086b6:	4413      	add	r3, r2
  4086b8:	68a0      	ldr	r0, [r4, #8]
  4086ba:	68e2      	ldr	r2, [r4, #12]
  4086bc:	60c2      	str	r2, [r0, #12]
  4086be:	6090      	str	r0, [r2, #8]
  4086c0:	4a30      	ldr	r2, [pc, #192]	; (408784 <_free_r+0x1c4>)
  4086c2:	6812      	ldr	r2, [r2, #0]
  4086c4:	f043 0001 	orr.w	r0, r3, #1
  4086c8:	4293      	cmp	r3, r2
  4086ca:	6060      	str	r0, [r4, #4]
  4086cc:	608c      	str	r4, [r1, #8]
  4086ce:	d3b9      	bcc.n	408644 <_free_r+0x84>
  4086d0:	4b2d      	ldr	r3, [pc, #180]	; (408788 <_free_r+0x1c8>)
  4086d2:	4640      	mov	r0, r8
  4086d4:	6819      	ldr	r1, [r3, #0]
  4086d6:	f7ff ff23 	bl	408520 <_malloc_trim_r>
  4086da:	e7b3      	b.n	408644 <_free_r+0x84>
  4086dc:	4610      	mov	r0, r2
  4086de:	e7cd      	b.n	40867c <_free_r+0xbc>
  4086e0:	1811      	adds	r1, r2, r0
  4086e2:	6849      	ldr	r1, [r1, #4]
  4086e4:	07c9      	lsls	r1, r1, #31
  4086e6:	d444      	bmi.n	408772 <_free_r+0x1b2>
  4086e8:	6891      	ldr	r1, [r2, #8]
  4086ea:	68d2      	ldr	r2, [r2, #12]
  4086ec:	60ca      	str	r2, [r1, #12]
  4086ee:	4403      	add	r3, r0
  4086f0:	f043 0001 	orr.w	r0, r3, #1
  4086f4:	6091      	str	r1, [r2, #8]
  4086f6:	6060      	str	r0, [r4, #4]
  4086f8:	50e3      	str	r3, [r4, r3]
  4086fa:	e7a3      	b.n	408644 <_free_r+0x84>
  4086fc:	2a14      	cmp	r2, #20
  4086fe:	d816      	bhi.n	40872e <_free_r+0x16e>
  408700:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  408704:	00ff      	lsls	r7, r7, #3
  408706:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  40870a:	e7aa      	b.n	408662 <_free_r+0xa2>
  40870c:	10aa      	asrs	r2, r5, #2
  40870e:	2301      	movs	r3, #1
  408710:	684d      	ldr	r5, [r1, #4]
  408712:	4093      	lsls	r3, r2
  408714:	432b      	orrs	r3, r5
  408716:	604b      	str	r3, [r1, #4]
  408718:	4603      	mov	r3, r0
  40871a:	e7b0      	b.n	40867e <_free_r+0xbe>
  40871c:	f043 0201 	orr.w	r2, r3, #1
  408720:	614c      	str	r4, [r1, #20]
  408722:	610c      	str	r4, [r1, #16]
  408724:	60e5      	str	r5, [r4, #12]
  408726:	60a5      	str	r5, [r4, #8]
  408728:	6062      	str	r2, [r4, #4]
  40872a:	50e3      	str	r3, [r4, r3]
  40872c:	e78a      	b.n	408644 <_free_r+0x84>
  40872e:	2a54      	cmp	r2, #84	; 0x54
  408730:	d806      	bhi.n	408740 <_free_r+0x180>
  408732:	0b1a      	lsrs	r2, r3, #12
  408734:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  408738:	00ff      	lsls	r7, r7, #3
  40873a:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  40873e:	e790      	b.n	408662 <_free_r+0xa2>
  408740:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  408744:	d806      	bhi.n	408754 <_free_r+0x194>
  408746:	0bda      	lsrs	r2, r3, #15
  408748:	f102 0778 	add.w	r7, r2, #120	; 0x78
  40874c:	00ff      	lsls	r7, r7, #3
  40874e:	f102 0577 	add.w	r5, r2, #119	; 0x77
  408752:	e786      	b.n	408662 <_free_r+0xa2>
  408754:	f240 5054 	movw	r0, #1364	; 0x554
  408758:	4282      	cmp	r2, r0
  40875a:	d806      	bhi.n	40876a <_free_r+0x1aa>
  40875c:	0c9a      	lsrs	r2, r3, #18
  40875e:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  408762:	00ff      	lsls	r7, r7, #3
  408764:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  408768:	e77b      	b.n	408662 <_free_r+0xa2>
  40876a:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  40876e:	257e      	movs	r5, #126	; 0x7e
  408770:	e777      	b.n	408662 <_free_r+0xa2>
  408772:	f043 0101 	orr.w	r1, r3, #1
  408776:	6061      	str	r1, [r4, #4]
  408778:	6013      	str	r3, [r2, #0]
  40877a:	e763      	b.n	408644 <_free_r+0x84>
  40877c:	20400480 	.word	0x20400480
  408780:	20400488 	.word	0x20400488
  408784:	2040088c 	.word	0x2040088c
  408788:	20402d38 	.word	0x20402d38

0040878c <__sfvwrite_r>:
  40878c:	6893      	ldr	r3, [r2, #8]
  40878e:	2b00      	cmp	r3, #0
  408790:	d073      	beq.n	40887a <__sfvwrite_r+0xee>
  408792:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  408796:	898b      	ldrh	r3, [r1, #12]
  408798:	b083      	sub	sp, #12
  40879a:	460c      	mov	r4, r1
  40879c:	0719      	lsls	r1, r3, #28
  40879e:	9000      	str	r0, [sp, #0]
  4087a0:	4616      	mov	r6, r2
  4087a2:	d526      	bpl.n	4087f2 <__sfvwrite_r+0x66>
  4087a4:	6922      	ldr	r2, [r4, #16]
  4087a6:	b322      	cbz	r2, 4087f2 <__sfvwrite_r+0x66>
  4087a8:	f013 0002 	ands.w	r0, r3, #2
  4087ac:	6835      	ldr	r5, [r6, #0]
  4087ae:	d02c      	beq.n	40880a <__sfvwrite_r+0x7e>
  4087b0:	f04f 0900 	mov.w	r9, #0
  4087b4:	4fb0      	ldr	r7, [pc, #704]	; (408a78 <__sfvwrite_r+0x2ec>)
  4087b6:	46c8      	mov	r8, r9
  4087b8:	46b2      	mov	sl, r6
  4087ba:	45b8      	cmp	r8, r7
  4087bc:	4643      	mov	r3, r8
  4087be:	464a      	mov	r2, r9
  4087c0:	bf28      	it	cs
  4087c2:	463b      	movcs	r3, r7
  4087c4:	9800      	ldr	r0, [sp, #0]
  4087c6:	f1b8 0f00 	cmp.w	r8, #0
  4087ca:	d050      	beq.n	40886e <__sfvwrite_r+0xe2>
  4087cc:	69e1      	ldr	r1, [r4, #28]
  4087ce:	6a66      	ldr	r6, [r4, #36]	; 0x24
  4087d0:	47b0      	blx	r6
  4087d2:	2800      	cmp	r0, #0
  4087d4:	dd58      	ble.n	408888 <__sfvwrite_r+0xfc>
  4087d6:	f8da 3008 	ldr.w	r3, [sl, #8]
  4087da:	1a1b      	subs	r3, r3, r0
  4087dc:	4481      	add	r9, r0
  4087de:	eba8 0800 	sub.w	r8, r8, r0
  4087e2:	f8ca 3008 	str.w	r3, [sl, #8]
  4087e6:	2b00      	cmp	r3, #0
  4087e8:	d1e7      	bne.n	4087ba <__sfvwrite_r+0x2e>
  4087ea:	2000      	movs	r0, #0
  4087ec:	b003      	add	sp, #12
  4087ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4087f2:	4621      	mov	r1, r4
  4087f4:	9800      	ldr	r0, [sp, #0]
  4087f6:	f7ff fc51 	bl	40809c <__swsetup_r>
  4087fa:	2800      	cmp	r0, #0
  4087fc:	f040 8133 	bne.w	408a66 <__sfvwrite_r+0x2da>
  408800:	89a3      	ldrh	r3, [r4, #12]
  408802:	6835      	ldr	r5, [r6, #0]
  408804:	f013 0002 	ands.w	r0, r3, #2
  408808:	d1d2      	bne.n	4087b0 <__sfvwrite_r+0x24>
  40880a:	f013 0901 	ands.w	r9, r3, #1
  40880e:	d145      	bne.n	40889c <__sfvwrite_r+0x110>
  408810:	464f      	mov	r7, r9
  408812:	9601      	str	r6, [sp, #4]
  408814:	b337      	cbz	r7, 408864 <__sfvwrite_r+0xd8>
  408816:	059a      	lsls	r2, r3, #22
  408818:	f8d4 8008 	ldr.w	r8, [r4, #8]
  40881c:	f140 8083 	bpl.w	408926 <__sfvwrite_r+0x19a>
  408820:	4547      	cmp	r7, r8
  408822:	46c3      	mov	fp, r8
  408824:	f0c0 80ab 	bcc.w	40897e <__sfvwrite_r+0x1f2>
  408828:	f413 6f90 	tst.w	r3, #1152	; 0x480
  40882c:	f040 80ac 	bne.w	408988 <__sfvwrite_r+0x1fc>
  408830:	6820      	ldr	r0, [r4, #0]
  408832:	46ba      	mov	sl, r7
  408834:	465a      	mov	r2, fp
  408836:	4649      	mov	r1, r9
  408838:	f000 fadc 	bl	408df4 <memmove>
  40883c:	68a2      	ldr	r2, [r4, #8]
  40883e:	6823      	ldr	r3, [r4, #0]
  408840:	eba2 0208 	sub.w	r2, r2, r8
  408844:	445b      	add	r3, fp
  408846:	60a2      	str	r2, [r4, #8]
  408848:	6023      	str	r3, [r4, #0]
  40884a:	9a01      	ldr	r2, [sp, #4]
  40884c:	6893      	ldr	r3, [r2, #8]
  40884e:	eba3 030a 	sub.w	r3, r3, sl
  408852:	44d1      	add	r9, sl
  408854:	eba7 070a 	sub.w	r7, r7, sl
  408858:	6093      	str	r3, [r2, #8]
  40885a:	2b00      	cmp	r3, #0
  40885c:	d0c5      	beq.n	4087ea <__sfvwrite_r+0x5e>
  40885e:	89a3      	ldrh	r3, [r4, #12]
  408860:	2f00      	cmp	r7, #0
  408862:	d1d8      	bne.n	408816 <__sfvwrite_r+0x8a>
  408864:	f8d5 9000 	ldr.w	r9, [r5]
  408868:	686f      	ldr	r7, [r5, #4]
  40886a:	3508      	adds	r5, #8
  40886c:	e7d2      	b.n	408814 <__sfvwrite_r+0x88>
  40886e:	f8d5 9000 	ldr.w	r9, [r5]
  408872:	f8d5 8004 	ldr.w	r8, [r5, #4]
  408876:	3508      	adds	r5, #8
  408878:	e79f      	b.n	4087ba <__sfvwrite_r+0x2e>
  40887a:	2000      	movs	r0, #0
  40887c:	4770      	bx	lr
  40887e:	4621      	mov	r1, r4
  408880:	9800      	ldr	r0, [sp, #0]
  408882:	f7ff fd1f 	bl	4082c4 <_fflush_r>
  408886:	b370      	cbz	r0, 4088e6 <__sfvwrite_r+0x15a>
  408888:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40888c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  408890:	f04f 30ff 	mov.w	r0, #4294967295
  408894:	81a3      	strh	r3, [r4, #12]
  408896:	b003      	add	sp, #12
  408898:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40889c:	4681      	mov	r9, r0
  40889e:	4633      	mov	r3, r6
  4088a0:	464e      	mov	r6, r9
  4088a2:	46a8      	mov	r8, r5
  4088a4:	469a      	mov	sl, r3
  4088a6:	464d      	mov	r5, r9
  4088a8:	b34e      	cbz	r6, 4088fe <__sfvwrite_r+0x172>
  4088aa:	b380      	cbz	r0, 40890e <__sfvwrite_r+0x182>
  4088ac:	6820      	ldr	r0, [r4, #0]
  4088ae:	6923      	ldr	r3, [r4, #16]
  4088b0:	6962      	ldr	r2, [r4, #20]
  4088b2:	45b1      	cmp	r9, r6
  4088b4:	46cb      	mov	fp, r9
  4088b6:	bf28      	it	cs
  4088b8:	46b3      	movcs	fp, r6
  4088ba:	4298      	cmp	r0, r3
  4088bc:	465f      	mov	r7, fp
  4088be:	d904      	bls.n	4088ca <__sfvwrite_r+0x13e>
  4088c0:	68a3      	ldr	r3, [r4, #8]
  4088c2:	4413      	add	r3, r2
  4088c4:	459b      	cmp	fp, r3
  4088c6:	f300 80a6 	bgt.w	408a16 <__sfvwrite_r+0x28a>
  4088ca:	4593      	cmp	fp, r2
  4088cc:	db4b      	blt.n	408966 <__sfvwrite_r+0x1da>
  4088ce:	4613      	mov	r3, r2
  4088d0:	6a67      	ldr	r7, [r4, #36]	; 0x24
  4088d2:	69e1      	ldr	r1, [r4, #28]
  4088d4:	9800      	ldr	r0, [sp, #0]
  4088d6:	462a      	mov	r2, r5
  4088d8:	47b8      	blx	r7
  4088da:	1e07      	subs	r7, r0, #0
  4088dc:	ddd4      	ble.n	408888 <__sfvwrite_r+0xfc>
  4088de:	ebb9 0907 	subs.w	r9, r9, r7
  4088e2:	d0cc      	beq.n	40887e <__sfvwrite_r+0xf2>
  4088e4:	2001      	movs	r0, #1
  4088e6:	f8da 3008 	ldr.w	r3, [sl, #8]
  4088ea:	1bdb      	subs	r3, r3, r7
  4088ec:	443d      	add	r5, r7
  4088ee:	1bf6      	subs	r6, r6, r7
  4088f0:	f8ca 3008 	str.w	r3, [sl, #8]
  4088f4:	2b00      	cmp	r3, #0
  4088f6:	f43f af78 	beq.w	4087ea <__sfvwrite_r+0x5e>
  4088fa:	2e00      	cmp	r6, #0
  4088fc:	d1d5      	bne.n	4088aa <__sfvwrite_r+0x11e>
  4088fe:	f108 0308 	add.w	r3, r8, #8
  408902:	e913 0060 	ldmdb	r3, {r5, r6}
  408906:	4698      	mov	r8, r3
  408908:	3308      	adds	r3, #8
  40890a:	2e00      	cmp	r6, #0
  40890c:	d0f9      	beq.n	408902 <__sfvwrite_r+0x176>
  40890e:	4632      	mov	r2, r6
  408910:	210a      	movs	r1, #10
  408912:	4628      	mov	r0, r5
  408914:	f000 f984 	bl	408c20 <memchr>
  408918:	2800      	cmp	r0, #0
  40891a:	f000 80a1 	beq.w	408a60 <__sfvwrite_r+0x2d4>
  40891e:	3001      	adds	r0, #1
  408920:	eba0 0905 	sub.w	r9, r0, r5
  408924:	e7c2      	b.n	4088ac <__sfvwrite_r+0x120>
  408926:	6820      	ldr	r0, [r4, #0]
  408928:	6923      	ldr	r3, [r4, #16]
  40892a:	4298      	cmp	r0, r3
  40892c:	d802      	bhi.n	408934 <__sfvwrite_r+0x1a8>
  40892e:	6963      	ldr	r3, [r4, #20]
  408930:	429f      	cmp	r7, r3
  408932:	d25d      	bcs.n	4089f0 <__sfvwrite_r+0x264>
  408934:	45b8      	cmp	r8, r7
  408936:	bf28      	it	cs
  408938:	46b8      	movcs	r8, r7
  40893a:	4642      	mov	r2, r8
  40893c:	4649      	mov	r1, r9
  40893e:	f000 fa59 	bl	408df4 <memmove>
  408942:	68a3      	ldr	r3, [r4, #8]
  408944:	6822      	ldr	r2, [r4, #0]
  408946:	eba3 0308 	sub.w	r3, r3, r8
  40894a:	4442      	add	r2, r8
  40894c:	60a3      	str	r3, [r4, #8]
  40894e:	6022      	str	r2, [r4, #0]
  408950:	b10b      	cbz	r3, 408956 <__sfvwrite_r+0x1ca>
  408952:	46c2      	mov	sl, r8
  408954:	e779      	b.n	40884a <__sfvwrite_r+0xbe>
  408956:	4621      	mov	r1, r4
  408958:	9800      	ldr	r0, [sp, #0]
  40895a:	f7ff fcb3 	bl	4082c4 <_fflush_r>
  40895e:	2800      	cmp	r0, #0
  408960:	d192      	bne.n	408888 <__sfvwrite_r+0xfc>
  408962:	46c2      	mov	sl, r8
  408964:	e771      	b.n	40884a <__sfvwrite_r+0xbe>
  408966:	465a      	mov	r2, fp
  408968:	4629      	mov	r1, r5
  40896a:	f000 fa43 	bl	408df4 <memmove>
  40896e:	68a2      	ldr	r2, [r4, #8]
  408970:	6823      	ldr	r3, [r4, #0]
  408972:	eba2 020b 	sub.w	r2, r2, fp
  408976:	445b      	add	r3, fp
  408978:	60a2      	str	r2, [r4, #8]
  40897a:	6023      	str	r3, [r4, #0]
  40897c:	e7af      	b.n	4088de <__sfvwrite_r+0x152>
  40897e:	6820      	ldr	r0, [r4, #0]
  408980:	46b8      	mov	r8, r7
  408982:	46ba      	mov	sl, r7
  408984:	46bb      	mov	fp, r7
  408986:	e755      	b.n	408834 <__sfvwrite_r+0xa8>
  408988:	6962      	ldr	r2, [r4, #20]
  40898a:	6820      	ldr	r0, [r4, #0]
  40898c:	6921      	ldr	r1, [r4, #16]
  40898e:	eb02 0842 	add.w	r8, r2, r2, lsl #1
  408992:	eba0 0a01 	sub.w	sl, r0, r1
  408996:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
  40899a:	f10a 0001 	add.w	r0, sl, #1
  40899e:	ea4f 0868 	mov.w	r8, r8, asr #1
  4089a2:	4438      	add	r0, r7
  4089a4:	4540      	cmp	r0, r8
  4089a6:	4642      	mov	r2, r8
  4089a8:	bf84      	itt	hi
  4089aa:	4680      	movhi	r8, r0
  4089ac:	4642      	movhi	r2, r8
  4089ae:	055b      	lsls	r3, r3, #21
  4089b0:	d544      	bpl.n	408a3c <__sfvwrite_r+0x2b0>
  4089b2:	4611      	mov	r1, r2
  4089b4:	9800      	ldr	r0, [sp, #0]
  4089b6:	f7fe f8bb 	bl	406b30 <_malloc_r>
  4089ba:	4683      	mov	fp, r0
  4089bc:	2800      	cmp	r0, #0
  4089be:	d055      	beq.n	408a6c <__sfvwrite_r+0x2e0>
  4089c0:	4652      	mov	r2, sl
  4089c2:	6921      	ldr	r1, [r4, #16]
  4089c4:	f000 f97c 	bl	408cc0 <memcpy>
  4089c8:	89a3      	ldrh	r3, [r4, #12]
  4089ca:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
  4089ce:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4089d2:	81a3      	strh	r3, [r4, #12]
  4089d4:	eb0b 000a 	add.w	r0, fp, sl
  4089d8:	eba8 030a 	sub.w	r3, r8, sl
  4089dc:	f8c4 b010 	str.w	fp, [r4, #16]
  4089e0:	f8c4 8014 	str.w	r8, [r4, #20]
  4089e4:	6020      	str	r0, [r4, #0]
  4089e6:	60a3      	str	r3, [r4, #8]
  4089e8:	46b8      	mov	r8, r7
  4089ea:	46ba      	mov	sl, r7
  4089ec:	46bb      	mov	fp, r7
  4089ee:	e721      	b.n	408834 <__sfvwrite_r+0xa8>
  4089f0:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
  4089f4:	42b9      	cmp	r1, r7
  4089f6:	bf28      	it	cs
  4089f8:	4639      	movcs	r1, r7
  4089fa:	464a      	mov	r2, r9
  4089fc:	fb91 f1f3 	sdiv	r1, r1, r3
  408a00:	9800      	ldr	r0, [sp, #0]
  408a02:	6a66      	ldr	r6, [r4, #36]	; 0x24
  408a04:	fb03 f301 	mul.w	r3, r3, r1
  408a08:	69e1      	ldr	r1, [r4, #28]
  408a0a:	47b0      	blx	r6
  408a0c:	f1b0 0a00 	subs.w	sl, r0, #0
  408a10:	f73f af1b 	bgt.w	40884a <__sfvwrite_r+0xbe>
  408a14:	e738      	b.n	408888 <__sfvwrite_r+0xfc>
  408a16:	461a      	mov	r2, r3
  408a18:	4629      	mov	r1, r5
  408a1a:	9301      	str	r3, [sp, #4]
  408a1c:	f000 f9ea 	bl	408df4 <memmove>
  408a20:	6822      	ldr	r2, [r4, #0]
  408a22:	9b01      	ldr	r3, [sp, #4]
  408a24:	9800      	ldr	r0, [sp, #0]
  408a26:	441a      	add	r2, r3
  408a28:	6022      	str	r2, [r4, #0]
  408a2a:	4621      	mov	r1, r4
  408a2c:	f7ff fc4a 	bl	4082c4 <_fflush_r>
  408a30:	9b01      	ldr	r3, [sp, #4]
  408a32:	2800      	cmp	r0, #0
  408a34:	f47f af28 	bne.w	408888 <__sfvwrite_r+0xfc>
  408a38:	461f      	mov	r7, r3
  408a3a:	e750      	b.n	4088de <__sfvwrite_r+0x152>
  408a3c:	9800      	ldr	r0, [sp, #0]
  408a3e:	f000 fa3d 	bl	408ebc <_realloc_r>
  408a42:	4683      	mov	fp, r0
  408a44:	2800      	cmp	r0, #0
  408a46:	d1c5      	bne.n	4089d4 <__sfvwrite_r+0x248>
  408a48:	9d00      	ldr	r5, [sp, #0]
  408a4a:	6921      	ldr	r1, [r4, #16]
  408a4c:	4628      	mov	r0, r5
  408a4e:	f7ff fdb7 	bl	4085c0 <_free_r>
  408a52:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  408a56:	220c      	movs	r2, #12
  408a58:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  408a5c:	602a      	str	r2, [r5, #0]
  408a5e:	e715      	b.n	40888c <__sfvwrite_r+0x100>
  408a60:	f106 0901 	add.w	r9, r6, #1
  408a64:	e722      	b.n	4088ac <__sfvwrite_r+0x120>
  408a66:	f04f 30ff 	mov.w	r0, #4294967295
  408a6a:	e6bf      	b.n	4087ec <__sfvwrite_r+0x60>
  408a6c:	9a00      	ldr	r2, [sp, #0]
  408a6e:	230c      	movs	r3, #12
  408a70:	6013      	str	r3, [r2, #0]
  408a72:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  408a76:	e709      	b.n	40888c <__sfvwrite_r+0x100>
  408a78:	7ffffc00 	.word	0x7ffffc00

00408a7c <_fwalk_reent>:
  408a7c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  408a80:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  408a84:	d01f      	beq.n	408ac6 <_fwalk_reent+0x4a>
  408a86:	4688      	mov	r8, r1
  408a88:	4606      	mov	r6, r0
  408a8a:	f04f 0900 	mov.w	r9, #0
  408a8e:	687d      	ldr	r5, [r7, #4]
  408a90:	68bc      	ldr	r4, [r7, #8]
  408a92:	3d01      	subs	r5, #1
  408a94:	d411      	bmi.n	408aba <_fwalk_reent+0x3e>
  408a96:	89a3      	ldrh	r3, [r4, #12]
  408a98:	2b01      	cmp	r3, #1
  408a9a:	f105 35ff 	add.w	r5, r5, #4294967295
  408a9e:	d908      	bls.n	408ab2 <_fwalk_reent+0x36>
  408aa0:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  408aa4:	3301      	adds	r3, #1
  408aa6:	4621      	mov	r1, r4
  408aa8:	4630      	mov	r0, r6
  408aaa:	d002      	beq.n	408ab2 <_fwalk_reent+0x36>
  408aac:	47c0      	blx	r8
  408aae:	ea49 0900 	orr.w	r9, r9, r0
  408ab2:	1c6b      	adds	r3, r5, #1
  408ab4:	f104 0468 	add.w	r4, r4, #104	; 0x68
  408ab8:	d1ed      	bne.n	408a96 <_fwalk_reent+0x1a>
  408aba:	683f      	ldr	r7, [r7, #0]
  408abc:	2f00      	cmp	r7, #0
  408abe:	d1e6      	bne.n	408a8e <_fwalk_reent+0x12>
  408ac0:	4648      	mov	r0, r9
  408ac2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  408ac6:	46b9      	mov	r9, r7
  408ac8:	4648      	mov	r0, r9
  408aca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  408ace:	bf00      	nop

00408ad0 <__locale_mb_cur_max>:
  408ad0:	4b04      	ldr	r3, [pc, #16]	; (408ae4 <__locale_mb_cur_max+0x14>)
  408ad2:	4a05      	ldr	r2, [pc, #20]	; (408ae8 <__locale_mb_cur_max+0x18>)
  408ad4:	681b      	ldr	r3, [r3, #0]
  408ad6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  408ad8:	2b00      	cmp	r3, #0
  408ada:	bf08      	it	eq
  408adc:	4613      	moveq	r3, r2
  408ade:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
  408ae2:	4770      	bx	lr
  408ae4:	20400050 	.word	0x20400050
  408ae8:	20400894 	.word	0x20400894

00408aec <__retarget_lock_init_recursive>:
  408aec:	4770      	bx	lr
  408aee:	bf00      	nop

00408af0 <__retarget_lock_close_recursive>:
  408af0:	4770      	bx	lr
  408af2:	bf00      	nop

00408af4 <__retarget_lock_acquire_recursive>:
  408af4:	4770      	bx	lr
  408af6:	bf00      	nop

00408af8 <__retarget_lock_release_recursive>:
  408af8:	4770      	bx	lr
  408afa:	bf00      	nop

00408afc <__swhatbuf_r>:
  408afc:	b570      	push	{r4, r5, r6, lr}
  408afe:	460c      	mov	r4, r1
  408b00:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  408b04:	2900      	cmp	r1, #0
  408b06:	b090      	sub	sp, #64	; 0x40
  408b08:	4615      	mov	r5, r2
  408b0a:	461e      	mov	r6, r3
  408b0c:	db14      	blt.n	408b38 <__swhatbuf_r+0x3c>
  408b0e:	aa01      	add	r2, sp, #4
  408b10:	f000 fdc0 	bl	409694 <_fstat_r>
  408b14:	2800      	cmp	r0, #0
  408b16:	db0f      	blt.n	408b38 <__swhatbuf_r+0x3c>
  408b18:	9a02      	ldr	r2, [sp, #8]
  408b1a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  408b1e:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  408b22:	fab2 f282 	clz	r2, r2
  408b26:	0952      	lsrs	r2, r2, #5
  408b28:	f44f 6380 	mov.w	r3, #1024	; 0x400
  408b2c:	f44f 6000 	mov.w	r0, #2048	; 0x800
  408b30:	6032      	str	r2, [r6, #0]
  408b32:	602b      	str	r3, [r5, #0]
  408b34:	b010      	add	sp, #64	; 0x40
  408b36:	bd70      	pop	{r4, r5, r6, pc}
  408b38:	89a2      	ldrh	r2, [r4, #12]
  408b3a:	2300      	movs	r3, #0
  408b3c:	f012 0080 	ands.w	r0, r2, #128	; 0x80
  408b40:	6033      	str	r3, [r6, #0]
  408b42:	d004      	beq.n	408b4e <__swhatbuf_r+0x52>
  408b44:	2240      	movs	r2, #64	; 0x40
  408b46:	4618      	mov	r0, r3
  408b48:	602a      	str	r2, [r5, #0]
  408b4a:	b010      	add	sp, #64	; 0x40
  408b4c:	bd70      	pop	{r4, r5, r6, pc}
  408b4e:	f44f 6380 	mov.w	r3, #1024	; 0x400
  408b52:	602b      	str	r3, [r5, #0]
  408b54:	b010      	add	sp, #64	; 0x40
  408b56:	bd70      	pop	{r4, r5, r6, pc}

00408b58 <__smakebuf_r>:
  408b58:	898a      	ldrh	r2, [r1, #12]
  408b5a:	0792      	lsls	r2, r2, #30
  408b5c:	460b      	mov	r3, r1
  408b5e:	d506      	bpl.n	408b6e <__smakebuf_r+0x16>
  408b60:	f101 0243 	add.w	r2, r1, #67	; 0x43
  408b64:	2101      	movs	r1, #1
  408b66:	601a      	str	r2, [r3, #0]
  408b68:	611a      	str	r2, [r3, #16]
  408b6a:	6159      	str	r1, [r3, #20]
  408b6c:	4770      	bx	lr
  408b6e:	b5f0      	push	{r4, r5, r6, r7, lr}
  408b70:	b083      	sub	sp, #12
  408b72:	ab01      	add	r3, sp, #4
  408b74:	466a      	mov	r2, sp
  408b76:	460c      	mov	r4, r1
  408b78:	4606      	mov	r6, r0
  408b7a:	f7ff ffbf 	bl	408afc <__swhatbuf_r>
  408b7e:	9900      	ldr	r1, [sp, #0]
  408b80:	4605      	mov	r5, r0
  408b82:	4630      	mov	r0, r6
  408b84:	f7fd ffd4 	bl	406b30 <_malloc_r>
  408b88:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  408b8c:	b1d8      	cbz	r0, 408bc6 <__smakebuf_r+0x6e>
  408b8e:	9a01      	ldr	r2, [sp, #4]
  408b90:	4f15      	ldr	r7, [pc, #84]	; (408be8 <__smakebuf_r+0x90>)
  408b92:	9900      	ldr	r1, [sp, #0]
  408b94:	63f7      	str	r7, [r6, #60]	; 0x3c
  408b96:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  408b9a:	81a3      	strh	r3, [r4, #12]
  408b9c:	6020      	str	r0, [r4, #0]
  408b9e:	6120      	str	r0, [r4, #16]
  408ba0:	6161      	str	r1, [r4, #20]
  408ba2:	b91a      	cbnz	r2, 408bac <__smakebuf_r+0x54>
  408ba4:	432b      	orrs	r3, r5
  408ba6:	81a3      	strh	r3, [r4, #12]
  408ba8:	b003      	add	sp, #12
  408baa:	bdf0      	pop	{r4, r5, r6, r7, pc}
  408bac:	4630      	mov	r0, r6
  408bae:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  408bb2:	f000 fd83 	bl	4096bc <_isatty_r>
  408bb6:	b1a0      	cbz	r0, 408be2 <__smakebuf_r+0x8a>
  408bb8:	89a3      	ldrh	r3, [r4, #12]
  408bba:	f023 0303 	bic.w	r3, r3, #3
  408bbe:	f043 0301 	orr.w	r3, r3, #1
  408bc2:	b21b      	sxth	r3, r3
  408bc4:	e7ee      	b.n	408ba4 <__smakebuf_r+0x4c>
  408bc6:	059a      	lsls	r2, r3, #22
  408bc8:	d4ee      	bmi.n	408ba8 <__smakebuf_r+0x50>
  408bca:	f023 0303 	bic.w	r3, r3, #3
  408bce:	f104 0243 	add.w	r2, r4, #67	; 0x43
  408bd2:	f043 0302 	orr.w	r3, r3, #2
  408bd6:	2101      	movs	r1, #1
  408bd8:	81a3      	strh	r3, [r4, #12]
  408bda:	6022      	str	r2, [r4, #0]
  408bdc:	6122      	str	r2, [r4, #16]
  408bde:	6161      	str	r1, [r4, #20]
  408be0:	e7e2      	b.n	408ba8 <__smakebuf_r+0x50>
  408be2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  408be6:	e7dd      	b.n	408ba4 <__smakebuf_r+0x4c>
  408be8:	00408319 	.word	0x00408319

00408bec <__ascii_mbtowc>:
  408bec:	b082      	sub	sp, #8
  408bee:	b149      	cbz	r1, 408c04 <__ascii_mbtowc+0x18>
  408bf0:	b15a      	cbz	r2, 408c0a <__ascii_mbtowc+0x1e>
  408bf2:	b16b      	cbz	r3, 408c10 <__ascii_mbtowc+0x24>
  408bf4:	7813      	ldrb	r3, [r2, #0]
  408bf6:	600b      	str	r3, [r1, #0]
  408bf8:	7812      	ldrb	r2, [r2, #0]
  408bfa:	1c10      	adds	r0, r2, #0
  408bfc:	bf18      	it	ne
  408bfe:	2001      	movne	r0, #1
  408c00:	b002      	add	sp, #8
  408c02:	4770      	bx	lr
  408c04:	a901      	add	r1, sp, #4
  408c06:	2a00      	cmp	r2, #0
  408c08:	d1f3      	bne.n	408bf2 <__ascii_mbtowc+0x6>
  408c0a:	4610      	mov	r0, r2
  408c0c:	b002      	add	sp, #8
  408c0e:	4770      	bx	lr
  408c10:	f06f 0001 	mvn.w	r0, #1
  408c14:	e7f4      	b.n	408c00 <__ascii_mbtowc+0x14>
  408c16:	bf00      	nop
	...

00408c20 <memchr>:
  408c20:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  408c24:	2a10      	cmp	r2, #16
  408c26:	db2b      	blt.n	408c80 <memchr+0x60>
  408c28:	f010 0f07 	tst.w	r0, #7
  408c2c:	d008      	beq.n	408c40 <memchr+0x20>
  408c2e:	f810 3b01 	ldrb.w	r3, [r0], #1
  408c32:	3a01      	subs	r2, #1
  408c34:	428b      	cmp	r3, r1
  408c36:	d02d      	beq.n	408c94 <memchr+0x74>
  408c38:	f010 0f07 	tst.w	r0, #7
  408c3c:	b342      	cbz	r2, 408c90 <memchr+0x70>
  408c3e:	d1f6      	bne.n	408c2e <memchr+0xe>
  408c40:	b4f0      	push	{r4, r5, r6, r7}
  408c42:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  408c46:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  408c4a:	f022 0407 	bic.w	r4, r2, #7
  408c4e:	f07f 0700 	mvns.w	r7, #0
  408c52:	2300      	movs	r3, #0
  408c54:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  408c58:	3c08      	subs	r4, #8
  408c5a:	ea85 0501 	eor.w	r5, r5, r1
  408c5e:	ea86 0601 	eor.w	r6, r6, r1
  408c62:	fa85 f547 	uadd8	r5, r5, r7
  408c66:	faa3 f587 	sel	r5, r3, r7
  408c6a:	fa86 f647 	uadd8	r6, r6, r7
  408c6e:	faa5 f687 	sel	r6, r5, r7
  408c72:	b98e      	cbnz	r6, 408c98 <memchr+0x78>
  408c74:	d1ee      	bne.n	408c54 <memchr+0x34>
  408c76:	bcf0      	pop	{r4, r5, r6, r7}
  408c78:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  408c7c:	f002 0207 	and.w	r2, r2, #7
  408c80:	b132      	cbz	r2, 408c90 <memchr+0x70>
  408c82:	f810 3b01 	ldrb.w	r3, [r0], #1
  408c86:	3a01      	subs	r2, #1
  408c88:	ea83 0301 	eor.w	r3, r3, r1
  408c8c:	b113      	cbz	r3, 408c94 <memchr+0x74>
  408c8e:	d1f8      	bne.n	408c82 <memchr+0x62>
  408c90:	2000      	movs	r0, #0
  408c92:	4770      	bx	lr
  408c94:	3801      	subs	r0, #1
  408c96:	4770      	bx	lr
  408c98:	2d00      	cmp	r5, #0
  408c9a:	bf06      	itte	eq
  408c9c:	4635      	moveq	r5, r6
  408c9e:	3803      	subeq	r0, #3
  408ca0:	3807      	subne	r0, #7
  408ca2:	f015 0f01 	tst.w	r5, #1
  408ca6:	d107      	bne.n	408cb8 <memchr+0x98>
  408ca8:	3001      	adds	r0, #1
  408caa:	f415 7f80 	tst.w	r5, #256	; 0x100
  408cae:	bf02      	ittt	eq
  408cb0:	3001      	addeq	r0, #1
  408cb2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  408cb6:	3001      	addeq	r0, #1
  408cb8:	bcf0      	pop	{r4, r5, r6, r7}
  408cba:	3801      	subs	r0, #1
  408cbc:	4770      	bx	lr
  408cbe:	bf00      	nop

00408cc0 <memcpy>:
  408cc0:	4684      	mov	ip, r0
  408cc2:	ea41 0300 	orr.w	r3, r1, r0
  408cc6:	f013 0303 	ands.w	r3, r3, #3
  408cca:	d16d      	bne.n	408da8 <memcpy+0xe8>
  408ccc:	3a40      	subs	r2, #64	; 0x40
  408cce:	d341      	bcc.n	408d54 <memcpy+0x94>
  408cd0:	f851 3b04 	ldr.w	r3, [r1], #4
  408cd4:	f840 3b04 	str.w	r3, [r0], #4
  408cd8:	f851 3b04 	ldr.w	r3, [r1], #4
  408cdc:	f840 3b04 	str.w	r3, [r0], #4
  408ce0:	f851 3b04 	ldr.w	r3, [r1], #4
  408ce4:	f840 3b04 	str.w	r3, [r0], #4
  408ce8:	f851 3b04 	ldr.w	r3, [r1], #4
  408cec:	f840 3b04 	str.w	r3, [r0], #4
  408cf0:	f851 3b04 	ldr.w	r3, [r1], #4
  408cf4:	f840 3b04 	str.w	r3, [r0], #4
  408cf8:	f851 3b04 	ldr.w	r3, [r1], #4
  408cfc:	f840 3b04 	str.w	r3, [r0], #4
  408d00:	f851 3b04 	ldr.w	r3, [r1], #4
  408d04:	f840 3b04 	str.w	r3, [r0], #4
  408d08:	f851 3b04 	ldr.w	r3, [r1], #4
  408d0c:	f840 3b04 	str.w	r3, [r0], #4
  408d10:	f851 3b04 	ldr.w	r3, [r1], #4
  408d14:	f840 3b04 	str.w	r3, [r0], #4
  408d18:	f851 3b04 	ldr.w	r3, [r1], #4
  408d1c:	f840 3b04 	str.w	r3, [r0], #4
  408d20:	f851 3b04 	ldr.w	r3, [r1], #4
  408d24:	f840 3b04 	str.w	r3, [r0], #4
  408d28:	f851 3b04 	ldr.w	r3, [r1], #4
  408d2c:	f840 3b04 	str.w	r3, [r0], #4
  408d30:	f851 3b04 	ldr.w	r3, [r1], #4
  408d34:	f840 3b04 	str.w	r3, [r0], #4
  408d38:	f851 3b04 	ldr.w	r3, [r1], #4
  408d3c:	f840 3b04 	str.w	r3, [r0], #4
  408d40:	f851 3b04 	ldr.w	r3, [r1], #4
  408d44:	f840 3b04 	str.w	r3, [r0], #4
  408d48:	f851 3b04 	ldr.w	r3, [r1], #4
  408d4c:	f840 3b04 	str.w	r3, [r0], #4
  408d50:	3a40      	subs	r2, #64	; 0x40
  408d52:	d2bd      	bcs.n	408cd0 <memcpy+0x10>
  408d54:	3230      	adds	r2, #48	; 0x30
  408d56:	d311      	bcc.n	408d7c <memcpy+0xbc>
  408d58:	f851 3b04 	ldr.w	r3, [r1], #4
  408d5c:	f840 3b04 	str.w	r3, [r0], #4
  408d60:	f851 3b04 	ldr.w	r3, [r1], #4
  408d64:	f840 3b04 	str.w	r3, [r0], #4
  408d68:	f851 3b04 	ldr.w	r3, [r1], #4
  408d6c:	f840 3b04 	str.w	r3, [r0], #4
  408d70:	f851 3b04 	ldr.w	r3, [r1], #4
  408d74:	f840 3b04 	str.w	r3, [r0], #4
  408d78:	3a10      	subs	r2, #16
  408d7a:	d2ed      	bcs.n	408d58 <memcpy+0x98>
  408d7c:	320c      	adds	r2, #12
  408d7e:	d305      	bcc.n	408d8c <memcpy+0xcc>
  408d80:	f851 3b04 	ldr.w	r3, [r1], #4
  408d84:	f840 3b04 	str.w	r3, [r0], #4
  408d88:	3a04      	subs	r2, #4
  408d8a:	d2f9      	bcs.n	408d80 <memcpy+0xc0>
  408d8c:	3204      	adds	r2, #4
  408d8e:	d008      	beq.n	408da2 <memcpy+0xe2>
  408d90:	07d2      	lsls	r2, r2, #31
  408d92:	bf1c      	itt	ne
  408d94:	f811 3b01 	ldrbne.w	r3, [r1], #1
  408d98:	f800 3b01 	strbne.w	r3, [r0], #1
  408d9c:	d301      	bcc.n	408da2 <memcpy+0xe2>
  408d9e:	880b      	ldrh	r3, [r1, #0]
  408da0:	8003      	strh	r3, [r0, #0]
  408da2:	4660      	mov	r0, ip
  408da4:	4770      	bx	lr
  408da6:	bf00      	nop
  408da8:	2a08      	cmp	r2, #8
  408daa:	d313      	bcc.n	408dd4 <memcpy+0x114>
  408dac:	078b      	lsls	r3, r1, #30
  408dae:	d08d      	beq.n	408ccc <memcpy+0xc>
  408db0:	f010 0303 	ands.w	r3, r0, #3
  408db4:	d08a      	beq.n	408ccc <memcpy+0xc>
  408db6:	f1c3 0304 	rsb	r3, r3, #4
  408dba:	1ad2      	subs	r2, r2, r3
  408dbc:	07db      	lsls	r3, r3, #31
  408dbe:	bf1c      	itt	ne
  408dc0:	f811 3b01 	ldrbne.w	r3, [r1], #1
  408dc4:	f800 3b01 	strbne.w	r3, [r0], #1
  408dc8:	d380      	bcc.n	408ccc <memcpy+0xc>
  408dca:	f831 3b02 	ldrh.w	r3, [r1], #2
  408dce:	f820 3b02 	strh.w	r3, [r0], #2
  408dd2:	e77b      	b.n	408ccc <memcpy+0xc>
  408dd4:	3a04      	subs	r2, #4
  408dd6:	d3d9      	bcc.n	408d8c <memcpy+0xcc>
  408dd8:	3a01      	subs	r2, #1
  408dda:	f811 3b01 	ldrb.w	r3, [r1], #1
  408dde:	f800 3b01 	strb.w	r3, [r0], #1
  408de2:	d2f9      	bcs.n	408dd8 <memcpy+0x118>
  408de4:	780b      	ldrb	r3, [r1, #0]
  408de6:	7003      	strb	r3, [r0, #0]
  408de8:	784b      	ldrb	r3, [r1, #1]
  408dea:	7043      	strb	r3, [r0, #1]
  408dec:	788b      	ldrb	r3, [r1, #2]
  408dee:	7083      	strb	r3, [r0, #2]
  408df0:	4660      	mov	r0, ip
  408df2:	4770      	bx	lr

00408df4 <memmove>:
  408df4:	4288      	cmp	r0, r1
  408df6:	b5f0      	push	{r4, r5, r6, r7, lr}
  408df8:	d90d      	bls.n	408e16 <memmove+0x22>
  408dfa:	188b      	adds	r3, r1, r2
  408dfc:	4298      	cmp	r0, r3
  408dfe:	d20a      	bcs.n	408e16 <memmove+0x22>
  408e00:	1884      	adds	r4, r0, r2
  408e02:	2a00      	cmp	r2, #0
  408e04:	d051      	beq.n	408eaa <memmove+0xb6>
  408e06:	4622      	mov	r2, r4
  408e08:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  408e0c:	f802 4d01 	strb.w	r4, [r2, #-1]!
  408e10:	4299      	cmp	r1, r3
  408e12:	d1f9      	bne.n	408e08 <memmove+0x14>
  408e14:	bdf0      	pop	{r4, r5, r6, r7, pc}
  408e16:	2a0f      	cmp	r2, #15
  408e18:	d948      	bls.n	408eac <memmove+0xb8>
  408e1a:	ea41 0300 	orr.w	r3, r1, r0
  408e1e:	079b      	lsls	r3, r3, #30
  408e20:	d146      	bne.n	408eb0 <memmove+0xbc>
  408e22:	f100 0410 	add.w	r4, r0, #16
  408e26:	f101 0310 	add.w	r3, r1, #16
  408e2a:	4615      	mov	r5, r2
  408e2c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  408e30:	f844 6c10 	str.w	r6, [r4, #-16]
  408e34:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  408e38:	f844 6c0c 	str.w	r6, [r4, #-12]
  408e3c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  408e40:	f844 6c08 	str.w	r6, [r4, #-8]
  408e44:	3d10      	subs	r5, #16
  408e46:	f853 6c04 	ldr.w	r6, [r3, #-4]
  408e4a:	f844 6c04 	str.w	r6, [r4, #-4]
  408e4e:	2d0f      	cmp	r5, #15
  408e50:	f103 0310 	add.w	r3, r3, #16
  408e54:	f104 0410 	add.w	r4, r4, #16
  408e58:	d8e8      	bhi.n	408e2c <memmove+0x38>
  408e5a:	f1a2 0310 	sub.w	r3, r2, #16
  408e5e:	f023 030f 	bic.w	r3, r3, #15
  408e62:	f002 0e0f 	and.w	lr, r2, #15
  408e66:	3310      	adds	r3, #16
  408e68:	f1be 0f03 	cmp.w	lr, #3
  408e6c:	4419      	add	r1, r3
  408e6e:	4403      	add	r3, r0
  408e70:	d921      	bls.n	408eb6 <memmove+0xc2>
  408e72:	1f1e      	subs	r6, r3, #4
  408e74:	460d      	mov	r5, r1
  408e76:	4674      	mov	r4, lr
  408e78:	3c04      	subs	r4, #4
  408e7a:	f855 7b04 	ldr.w	r7, [r5], #4
  408e7e:	f846 7f04 	str.w	r7, [r6, #4]!
  408e82:	2c03      	cmp	r4, #3
  408e84:	d8f8      	bhi.n	408e78 <memmove+0x84>
  408e86:	f1ae 0404 	sub.w	r4, lr, #4
  408e8a:	f024 0403 	bic.w	r4, r4, #3
  408e8e:	3404      	adds	r4, #4
  408e90:	4421      	add	r1, r4
  408e92:	4423      	add	r3, r4
  408e94:	f002 0203 	and.w	r2, r2, #3
  408e98:	b162      	cbz	r2, 408eb4 <memmove+0xc0>
  408e9a:	3b01      	subs	r3, #1
  408e9c:	440a      	add	r2, r1
  408e9e:	f811 4b01 	ldrb.w	r4, [r1], #1
  408ea2:	f803 4f01 	strb.w	r4, [r3, #1]!
  408ea6:	428a      	cmp	r2, r1
  408ea8:	d1f9      	bne.n	408e9e <memmove+0xaa>
  408eaa:	bdf0      	pop	{r4, r5, r6, r7, pc}
  408eac:	4603      	mov	r3, r0
  408eae:	e7f3      	b.n	408e98 <memmove+0xa4>
  408eb0:	4603      	mov	r3, r0
  408eb2:	e7f2      	b.n	408e9a <memmove+0xa6>
  408eb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  408eb6:	4672      	mov	r2, lr
  408eb8:	e7ee      	b.n	408e98 <memmove+0xa4>
  408eba:	bf00      	nop

00408ebc <_realloc_r>:
  408ebc:	2900      	cmp	r1, #0
  408ebe:	f000 8095 	beq.w	408fec <_realloc_r+0x130>
  408ec2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  408ec6:	460d      	mov	r5, r1
  408ec8:	4616      	mov	r6, r2
  408eca:	b083      	sub	sp, #12
  408ecc:	4680      	mov	r8, r0
  408ece:	f106 070b 	add.w	r7, r6, #11
  408ed2:	f7fe f92b 	bl	40712c <__malloc_lock>
  408ed6:	f855 ec04 	ldr.w	lr, [r5, #-4]
  408eda:	2f16      	cmp	r7, #22
  408edc:	f02e 0403 	bic.w	r4, lr, #3
  408ee0:	f1a5 0908 	sub.w	r9, r5, #8
  408ee4:	d83c      	bhi.n	408f60 <_realloc_r+0xa4>
  408ee6:	2210      	movs	r2, #16
  408ee8:	4617      	mov	r7, r2
  408eea:	42be      	cmp	r6, r7
  408eec:	d83d      	bhi.n	408f6a <_realloc_r+0xae>
  408eee:	4294      	cmp	r4, r2
  408ef0:	da43      	bge.n	408f7a <_realloc_r+0xbe>
  408ef2:	4bc4      	ldr	r3, [pc, #784]	; (409204 <_realloc_r+0x348>)
  408ef4:	6899      	ldr	r1, [r3, #8]
  408ef6:	eb09 0004 	add.w	r0, r9, r4
  408efa:	4288      	cmp	r0, r1
  408efc:	f000 80b4 	beq.w	409068 <_realloc_r+0x1ac>
  408f00:	6843      	ldr	r3, [r0, #4]
  408f02:	f023 0101 	bic.w	r1, r3, #1
  408f06:	4401      	add	r1, r0
  408f08:	6849      	ldr	r1, [r1, #4]
  408f0a:	07c9      	lsls	r1, r1, #31
  408f0c:	d54c      	bpl.n	408fa8 <_realloc_r+0xec>
  408f0e:	f01e 0f01 	tst.w	lr, #1
  408f12:	f000 809b 	beq.w	40904c <_realloc_r+0x190>
  408f16:	4631      	mov	r1, r6
  408f18:	4640      	mov	r0, r8
  408f1a:	f7fd fe09 	bl	406b30 <_malloc_r>
  408f1e:	4606      	mov	r6, r0
  408f20:	2800      	cmp	r0, #0
  408f22:	d03a      	beq.n	408f9a <_realloc_r+0xde>
  408f24:	f855 3c04 	ldr.w	r3, [r5, #-4]
  408f28:	f023 0301 	bic.w	r3, r3, #1
  408f2c:	444b      	add	r3, r9
  408f2e:	f1a0 0208 	sub.w	r2, r0, #8
  408f32:	429a      	cmp	r2, r3
  408f34:	f000 8121 	beq.w	40917a <_realloc_r+0x2be>
  408f38:	1f22      	subs	r2, r4, #4
  408f3a:	2a24      	cmp	r2, #36	; 0x24
  408f3c:	f200 8107 	bhi.w	40914e <_realloc_r+0x292>
  408f40:	2a13      	cmp	r2, #19
  408f42:	f200 80db 	bhi.w	4090fc <_realloc_r+0x240>
  408f46:	4603      	mov	r3, r0
  408f48:	462a      	mov	r2, r5
  408f4a:	6811      	ldr	r1, [r2, #0]
  408f4c:	6019      	str	r1, [r3, #0]
  408f4e:	6851      	ldr	r1, [r2, #4]
  408f50:	6059      	str	r1, [r3, #4]
  408f52:	6892      	ldr	r2, [r2, #8]
  408f54:	609a      	str	r2, [r3, #8]
  408f56:	4629      	mov	r1, r5
  408f58:	4640      	mov	r0, r8
  408f5a:	f7ff fb31 	bl	4085c0 <_free_r>
  408f5e:	e01c      	b.n	408f9a <_realloc_r+0xde>
  408f60:	f027 0707 	bic.w	r7, r7, #7
  408f64:	2f00      	cmp	r7, #0
  408f66:	463a      	mov	r2, r7
  408f68:	dabf      	bge.n	408eea <_realloc_r+0x2e>
  408f6a:	2600      	movs	r6, #0
  408f6c:	230c      	movs	r3, #12
  408f6e:	4630      	mov	r0, r6
  408f70:	f8c8 3000 	str.w	r3, [r8]
  408f74:	b003      	add	sp, #12
  408f76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  408f7a:	462e      	mov	r6, r5
  408f7c:	1be3      	subs	r3, r4, r7
  408f7e:	2b0f      	cmp	r3, #15
  408f80:	d81e      	bhi.n	408fc0 <_realloc_r+0x104>
  408f82:	f8d9 3004 	ldr.w	r3, [r9, #4]
  408f86:	f003 0301 	and.w	r3, r3, #1
  408f8a:	4323      	orrs	r3, r4
  408f8c:	444c      	add	r4, r9
  408f8e:	f8c9 3004 	str.w	r3, [r9, #4]
  408f92:	6863      	ldr	r3, [r4, #4]
  408f94:	f043 0301 	orr.w	r3, r3, #1
  408f98:	6063      	str	r3, [r4, #4]
  408f9a:	4640      	mov	r0, r8
  408f9c:	f7fe f8cc 	bl	407138 <__malloc_unlock>
  408fa0:	4630      	mov	r0, r6
  408fa2:	b003      	add	sp, #12
  408fa4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  408fa8:	f023 0303 	bic.w	r3, r3, #3
  408fac:	18e1      	adds	r1, r4, r3
  408fae:	4291      	cmp	r1, r2
  408fb0:	db1f      	blt.n	408ff2 <_realloc_r+0x136>
  408fb2:	68c3      	ldr	r3, [r0, #12]
  408fb4:	6882      	ldr	r2, [r0, #8]
  408fb6:	462e      	mov	r6, r5
  408fb8:	60d3      	str	r3, [r2, #12]
  408fba:	460c      	mov	r4, r1
  408fbc:	609a      	str	r2, [r3, #8]
  408fbe:	e7dd      	b.n	408f7c <_realloc_r+0xc0>
  408fc0:	f8d9 2004 	ldr.w	r2, [r9, #4]
  408fc4:	eb09 0107 	add.w	r1, r9, r7
  408fc8:	f002 0201 	and.w	r2, r2, #1
  408fcc:	444c      	add	r4, r9
  408fce:	f043 0301 	orr.w	r3, r3, #1
  408fd2:	4317      	orrs	r7, r2
  408fd4:	f8c9 7004 	str.w	r7, [r9, #4]
  408fd8:	604b      	str	r3, [r1, #4]
  408fda:	6863      	ldr	r3, [r4, #4]
  408fdc:	f043 0301 	orr.w	r3, r3, #1
  408fe0:	3108      	adds	r1, #8
  408fe2:	6063      	str	r3, [r4, #4]
  408fe4:	4640      	mov	r0, r8
  408fe6:	f7ff faeb 	bl	4085c0 <_free_r>
  408fea:	e7d6      	b.n	408f9a <_realloc_r+0xde>
  408fec:	4611      	mov	r1, r2
  408fee:	f7fd bd9f 	b.w	406b30 <_malloc_r>
  408ff2:	f01e 0f01 	tst.w	lr, #1
  408ff6:	d18e      	bne.n	408f16 <_realloc_r+0x5a>
  408ff8:	f855 1c08 	ldr.w	r1, [r5, #-8]
  408ffc:	eba9 0a01 	sub.w	sl, r9, r1
  409000:	f8da 1004 	ldr.w	r1, [sl, #4]
  409004:	f021 0103 	bic.w	r1, r1, #3
  409008:	440b      	add	r3, r1
  40900a:	4423      	add	r3, r4
  40900c:	4293      	cmp	r3, r2
  40900e:	db25      	blt.n	40905c <_realloc_r+0x1a0>
  409010:	68c2      	ldr	r2, [r0, #12]
  409012:	6881      	ldr	r1, [r0, #8]
  409014:	4656      	mov	r6, sl
  409016:	60ca      	str	r2, [r1, #12]
  409018:	6091      	str	r1, [r2, #8]
  40901a:	f8da 100c 	ldr.w	r1, [sl, #12]
  40901e:	f856 0f08 	ldr.w	r0, [r6, #8]!
  409022:	1f22      	subs	r2, r4, #4
  409024:	2a24      	cmp	r2, #36	; 0x24
  409026:	60c1      	str	r1, [r0, #12]
  409028:	6088      	str	r0, [r1, #8]
  40902a:	f200 8094 	bhi.w	409156 <_realloc_r+0x29a>
  40902e:	2a13      	cmp	r2, #19
  409030:	d96f      	bls.n	409112 <_realloc_r+0x256>
  409032:	6829      	ldr	r1, [r5, #0]
  409034:	f8ca 1008 	str.w	r1, [sl, #8]
  409038:	6869      	ldr	r1, [r5, #4]
  40903a:	f8ca 100c 	str.w	r1, [sl, #12]
  40903e:	2a1b      	cmp	r2, #27
  409040:	f200 80a2 	bhi.w	409188 <_realloc_r+0x2cc>
  409044:	3508      	adds	r5, #8
  409046:	f10a 0210 	add.w	r2, sl, #16
  40904a:	e063      	b.n	409114 <_realloc_r+0x258>
  40904c:	f855 3c08 	ldr.w	r3, [r5, #-8]
  409050:	eba9 0a03 	sub.w	sl, r9, r3
  409054:	f8da 1004 	ldr.w	r1, [sl, #4]
  409058:	f021 0103 	bic.w	r1, r1, #3
  40905c:	1863      	adds	r3, r4, r1
  40905e:	4293      	cmp	r3, r2
  409060:	f6ff af59 	blt.w	408f16 <_realloc_r+0x5a>
  409064:	4656      	mov	r6, sl
  409066:	e7d8      	b.n	40901a <_realloc_r+0x15e>
  409068:	6841      	ldr	r1, [r0, #4]
  40906a:	f021 0b03 	bic.w	fp, r1, #3
  40906e:	44a3      	add	fp, r4
  409070:	f107 0010 	add.w	r0, r7, #16
  409074:	4583      	cmp	fp, r0
  409076:	da56      	bge.n	409126 <_realloc_r+0x26a>
  409078:	f01e 0f01 	tst.w	lr, #1
  40907c:	f47f af4b 	bne.w	408f16 <_realloc_r+0x5a>
  409080:	f855 1c08 	ldr.w	r1, [r5, #-8]
  409084:	eba9 0a01 	sub.w	sl, r9, r1
  409088:	f8da 1004 	ldr.w	r1, [sl, #4]
  40908c:	f021 0103 	bic.w	r1, r1, #3
  409090:	448b      	add	fp, r1
  409092:	4558      	cmp	r0, fp
  409094:	dce2      	bgt.n	40905c <_realloc_r+0x1a0>
  409096:	4656      	mov	r6, sl
  409098:	f8da 100c 	ldr.w	r1, [sl, #12]
  40909c:	f856 0f08 	ldr.w	r0, [r6, #8]!
  4090a0:	1f22      	subs	r2, r4, #4
  4090a2:	2a24      	cmp	r2, #36	; 0x24
  4090a4:	60c1      	str	r1, [r0, #12]
  4090a6:	6088      	str	r0, [r1, #8]
  4090a8:	f200 808f 	bhi.w	4091ca <_realloc_r+0x30e>
  4090ac:	2a13      	cmp	r2, #19
  4090ae:	f240 808a 	bls.w	4091c6 <_realloc_r+0x30a>
  4090b2:	6829      	ldr	r1, [r5, #0]
  4090b4:	f8ca 1008 	str.w	r1, [sl, #8]
  4090b8:	6869      	ldr	r1, [r5, #4]
  4090ba:	f8ca 100c 	str.w	r1, [sl, #12]
  4090be:	2a1b      	cmp	r2, #27
  4090c0:	f200 808a 	bhi.w	4091d8 <_realloc_r+0x31c>
  4090c4:	3508      	adds	r5, #8
  4090c6:	f10a 0210 	add.w	r2, sl, #16
  4090ca:	6829      	ldr	r1, [r5, #0]
  4090cc:	6011      	str	r1, [r2, #0]
  4090ce:	6869      	ldr	r1, [r5, #4]
  4090d0:	6051      	str	r1, [r2, #4]
  4090d2:	68a9      	ldr	r1, [r5, #8]
  4090d4:	6091      	str	r1, [r2, #8]
  4090d6:	eb0a 0107 	add.w	r1, sl, r7
  4090da:	ebab 0207 	sub.w	r2, fp, r7
  4090de:	f042 0201 	orr.w	r2, r2, #1
  4090e2:	6099      	str	r1, [r3, #8]
  4090e4:	604a      	str	r2, [r1, #4]
  4090e6:	f8da 3004 	ldr.w	r3, [sl, #4]
  4090ea:	f003 0301 	and.w	r3, r3, #1
  4090ee:	431f      	orrs	r7, r3
  4090f0:	4640      	mov	r0, r8
  4090f2:	f8ca 7004 	str.w	r7, [sl, #4]
  4090f6:	f7fe f81f 	bl	407138 <__malloc_unlock>
  4090fa:	e751      	b.n	408fa0 <_realloc_r+0xe4>
  4090fc:	682b      	ldr	r3, [r5, #0]
  4090fe:	6003      	str	r3, [r0, #0]
  409100:	686b      	ldr	r3, [r5, #4]
  409102:	6043      	str	r3, [r0, #4]
  409104:	2a1b      	cmp	r2, #27
  409106:	d82d      	bhi.n	409164 <_realloc_r+0x2a8>
  409108:	f100 0308 	add.w	r3, r0, #8
  40910c:	f105 0208 	add.w	r2, r5, #8
  409110:	e71b      	b.n	408f4a <_realloc_r+0x8e>
  409112:	4632      	mov	r2, r6
  409114:	6829      	ldr	r1, [r5, #0]
  409116:	6011      	str	r1, [r2, #0]
  409118:	6869      	ldr	r1, [r5, #4]
  40911a:	6051      	str	r1, [r2, #4]
  40911c:	68a9      	ldr	r1, [r5, #8]
  40911e:	6091      	str	r1, [r2, #8]
  409120:	461c      	mov	r4, r3
  409122:	46d1      	mov	r9, sl
  409124:	e72a      	b.n	408f7c <_realloc_r+0xc0>
  409126:	eb09 0107 	add.w	r1, r9, r7
  40912a:	ebab 0b07 	sub.w	fp, fp, r7
  40912e:	f04b 0201 	orr.w	r2, fp, #1
  409132:	6099      	str	r1, [r3, #8]
  409134:	604a      	str	r2, [r1, #4]
  409136:	f855 3c04 	ldr.w	r3, [r5, #-4]
  40913a:	f003 0301 	and.w	r3, r3, #1
  40913e:	431f      	orrs	r7, r3
  409140:	4640      	mov	r0, r8
  409142:	f845 7c04 	str.w	r7, [r5, #-4]
  409146:	f7fd fff7 	bl	407138 <__malloc_unlock>
  40914a:	462e      	mov	r6, r5
  40914c:	e728      	b.n	408fa0 <_realloc_r+0xe4>
  40914e:	4629      	mov	r1, r5
  409150:	f7ff fe50 	bl	408df4 <memmove>
  409154:	e6ff      	b.n	408f56 <_realloc_r+0x9a>
  409156:	4629      	mov	r1, r5
  409158:	4630      	mov	r0, r6
  40915a:	461c      	mov	r4, r3
  40915c:	46d1      	mov	r9, sl
  40915e:	f7ff fe49 	bl	408df4 <memmove>
  409162:	e70b      	b.n	408f7c <_realloc_r+0xc0>
  409164:	68ab      	ldr	r3, [r5, #8]
  409166:	6083      	str	r3, [r0, #8]
  409168:	68eb      	ldr	r3, [r5, #12]
  40916a:	60c3      	str	r3, [r0, #12]
  40916c:	2a24      	cmp	r2, #36	; 0x24
  40916e:	d017      	beq.n	4091a0 <_realloc_r+0x2e4>
  409170:	f100 0310 	add.w	r3, r0, #16
  409174:	f105 0210 	add.w	r2, r5, #16
  409178:	e6e7      	b.n	408f4a <_realloc_r+0x8e>
  40917a:	f850 3c04 	ldr.w	r3, [r0, #-4]
  40917e:	f023 0303 	bic.w	r3, r3, #3
  409182:	441c      	add	r4, r3
  409184:	462e      	mov	r6, r5
  409186:	e6f9      	b.n	408f7c <_realloc_r+0xc0>
  409188:	68a9      	ldr	r1, [r5, #8]
  40918a:	f8ca 1010 	str.w	r1, [sl, #16]
  40918e:	68e9      	ldr	r1, [r5, #12]
  409190:	f8ca 1014 	str.w	r1, [sl, #20]
  409194:	2a24      	cmp	r2, #36	; 0x24
  409196:	d00c      	beq.n	4091b2 <_realloc_r+0x2f6>
  409198:	3510      	adds	r5, #16
  40919a:	f10a 0218 	add.w	r2, sl, #24
  40919e:	e7b9      	b.n	409114 <_realloc_r+0x258>
  4091a0:	692b      	ldr	r3, [r5, #16]
  4091a2:	6103      	str	r3, [r0, #16]
  4091a4:	696b      	ldr	r3, [r5, #20]
  4091a6:	6143      	str	r3, [r0, #20]
  4091a8:	f105 0218 	add.w	r2, r5, #24
  4091ac:	f100 0318 	add.w	r3, r0, #24
  4091b0:	e6cb      	b.n	408f4a <_realloc_r+0x8e>
  4091b2:	692a      	ldr	r2, [r5, #16]
  4091b4:	f8ca 2018 	str.w	r2, [sl, #24]
  4091b8:	696a      	ldr	r2, [r5, #20]
  4091ba:	f8ca 201c 	str.w	r2, [sl, #28]
  4091be:	3518      	adds	r5, #24
  4091c0:	f10a 0220 	add.w	r2, sl, #32
  4091c4:	e7a6      	b.n	409114 <_realloc_r+0x258>
  4091c6:	4632      	mov	r2, r6
  4091c8:	e77f      	b.n	4090ca <_realloc_r+0x20e>
  4091ca:	4629      	mov	r1, r5
  4091cc:	4630      	mov	r0, r6
  4091ce:	9301      	str	r3, [sp, #4]
  4091d0:	f7ff fe10 	bl	408df4 <memmove>
  4091d4:	9b01      	ldr	r3, [sp, #4]
  4091d6:	e77e      	b.n	4090d6 <_realloc_r+0x21a>
  4091d8:	68a9      	ldr	r1, [r5, #8]
  4091da:	f8ca 1010 	str.w	r1, [sl, #16]
  4091de:	68e9      	ldr	r1, [r5, #12]
  4091e0:	f8ca 1014 	str.w	r1, [sl, #20]
  4091e4:	2a24      	cmp	r2, #36	; 0x24
  4091e6:	d003      	beq.n	4091f0 <_realloc_r+0x334>
  4091e8:	3510      	adds	r5, #16
  4091ea:	f10a 0218 	add.w	r2, sl, #24
  4091ee:	e76c      	b.n	4090ca <_realloc_r+0x20e>
  4091f0:	692a      	ldr	r2, [r5, #16]
  4091f2:	f8ca 2018 	str.w	r2, [sl, #24]
  4091f6:	696a      	ldr	r2, [r5, #20]
  4091f8:	f8ca 201c 	str.w	r2, [sl, #28]
  4091fc:	3518      	adds	r5, #24
  4091fe:	f10a 0220 	add.w	r2, sl, #32
  409202:	e762      	b.n	4090ca <_realloc_r+0x20e>
  409204:	20400480 	.word	0x20400480

00409208 <__sread>:
  409208:	b510      	push	{r4, lr}
  40920a:	460c      	mov	r4, r1
  40920c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  409210:	f000 fa7c 	bl	40970c <_read_r>
  409214:	2800      	cmp	r0, #0
  409216:	db03      	blt.n	409220 <__sread+0x18>
  409218:	6d23      	ldr	r3, [r4, #80]	; 0x50
  40921a:	4403      	add	r3, r0
  40921c:	6523      	str	r3, [r4, #80]	; 0x50
  40921e:	bd10      	pop	{r4, pc}
  409220:	89a3      	ldrh	r3, [r4, #12]
  409222:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  409226:	81a3      	strh	r3, [r4, #12]
  409228:	bd10      	pop	{r4, pc}
  40922a:	bf00      	nop

0040922c <__swrite>:
  40922c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  409230:	4616      	mov	r6, r2
  409232:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
  409236:	461f      	mov	r7, r3
  409238:	05d3      	lsls	r3, r2, #23
  40923a:	460c      	mov	r4, r1
  40923c:	4605      	mov	r5, r0
  40923e:	d507      	bpl.n	409250 <__swrite+0x24>
  409240:	2200      	movs	r2, #0
  409242:	2302      	movs	r3, #2
  409244:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  409248:	f000 fa4a 	bl	4096e0 <_lseek_r>
  40924c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  409250:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  409254:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  409258:	81a2      	strh	r2, [r4, #12]
  40925a:	463b      	mov	r3, r7
  40925c:	4632      	mov	r2, r6
  40925e:	4628      	mov	r0, r5
  409260:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  409264:	f000 b92a 	b.w	4094bc <_write_r>

00409268 <__sseek>:
  409268:	b510      	push	{r4, lr}
  40926a:	460c      	mov	r4, r1
  40926c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  409270:	f000 fa36 	bl	4096e0 <_lseek_r>
  409274:	89a3      	ldrh	r3, [r4, #12]
  409276:	1c42      	adds	r2, r0, #1
  409278:	bf0e      	itee	eq
  40927a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  40927e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  409282:	6520      	strne	r0, [r4, #80]	; 0x50
  409284:	81a3      	strh	r3, [r4, #12]
  409286:	bd10      	pop	{r4, pc}

00409288 <__sclose>:
  409288:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40928c:	f000 b98e 	b.w	4095ac <_close_r>
	...

004092c0 <strlen>:
  4092c0:	f890 f000 	pld	[r0]
  4092c4:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  4092c8:	f020 0107 	bic.w	r1, r0, #7
  4092cc:	f06f 0c00 	mvn.w	ip, #0
  4092d0:	f010 0407 	ands.w	r4, r0, #7
  4092d4:	f891 f020 	pld	[r1, #32]
  4092d8:	f040 8049 	bne.w	40936e <strlen+0xae>
  4092dc:	f04f 0400 	mov.w	r4, #0
  4092e0:	f06f 0007 	mvn.w	r0, #7
  4092e4:	e9d1 2300 	ldrd	r2, r3, [r1]
  4092e8:	f891 f040 	pld	[r1, #64]	; 0x40
  4092ec:	f100 0008 	add.w	r0, r0, #8
  4092f0:	fa82 f24c 	uadd8	r2, r2, ip
  4092f4:	faa4 f28c 	sel	r2, r4, ip
  4092f8:	fa83 f34c 	uadd8	r3, r3, ip
  4092fc:	faa2 f38c 	sel	r3, r2, ip
  409300:	bb4b      	cbnz	r3, 409356 <strlen+0x96>
  409302:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  409306:	fa82 f24c 	uadd8	r2, r2, ip
  40930a:	f100 0008 	add.w	r0, r0, #8
  40930e:	faa4 f28c 	sel	r2, r4, ip
  409312:	fa83 f34c 	uadd8	r3, r3, ip
  409316:	faa2 f38c 	sel	r3, r2, ip
  40931a:	b9e3      	cbnz	r3, 409356 <strlen+0x96>
  40931c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  409320:	fa82 f24c 	uadd8	r2, r2, ip
  409324:	f100 0008 	add.w	r0, r0, #8
  409328:	faa4 f28c 	sel	r2, r4, ip
  40932c:	fa83 f34c 	uadd8	r3, r3, ip
  409330:	faa2 f38c 	sel	r3, r2, ip
  409334:	b97b      	cbnz	r3, 409356 <strlen+0x96>
  409336:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  40933a:	f101 0120 	add.w	r1, r1, #32
  40933e:	fa82 f24c 	uadd8	r2, r2, ip
  409342:	f100 0008 	add.w	r0, r0, #8
  409346:	faa4 f28c 	sel	r2, r4, ip
  40934a:	fa83 f34c 	uadd8	r3, r3, ip
  40934e:	faa2 f38c 	sel	r3, r2, ip
  409352:	2b00      	cmp	r3, #0
  409354:	d0c6      	beq.n	4092e4 <strlen+0x24>
  409356:	2a00      	cmp	r2, #0
  409358:	bf04      	itt	eq
  40935a:	3004      	addeq	r0, #4
  40935c:	461a      	moveq	r2, r3
  40935e:	ba12      	rev	r2, r2
  409360:	fab2 f282 	clz	r2, r2
  409364:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  409368:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  40936c:	4770      	bx	lr
  40936e:	e9d1 2300 	ldrd	r2, r3, [r1]
  409372:	f004 0503 	and.w	r5, r4, #3
  409376:	f1c4 0000 	rsb	r0, r4, #0
  40937a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  40937e:	f014 0f04 	tst.w	r4, #4
  409382:	f891 f040 	pld	[r1, #64]	; 0x40
  409386:	fa0c f505 	lsl.w	r5, ip, r5
  40938a:	ea62 0205 	orn	r2, r2, r5
  40938e:	bf1c      	itt	ne
  409390:	ea63 0305 	ornne	r3, r3, r5
  409394:	4662      	movne	r2, ip
  409396:	f04f 0400 	mov.w	r4, #0
  40939a:	e7a9      	b.n	4092f0 <strlen+0x30>

0040939c <__swbuf_r>:
  40939c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40939e:	460d      	mov	r5, r1
  4093a0:	4614      	mov	r4, r2
  4093a2:	4606      	mov	r6, r0
  4093a4:	b110      	cbz	r0, 4093ac <__swbuf_r+0x10>
  4093a6:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4093a8:	2b00      	cmp	r3, #0
  4093aa:	d04b      	beq.n	409444 <__swbuf_r+0xa8>
  4093ac:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4093b0:	69a3      	ldr	r3, [r4, #24]
  4093b2:	60a3      	str	r3, [r4, #8]
  4093b4:	b291      	uxth	r1, r2
  4093b6:	0708      	lsls	r0, r1, #28
  4093b8:	d539      	bpl.n	40942e <__swbuf_r+0x92>
  4093ba:	6923      	ldr	r3, [r4, #16]
  4093bc:	2b00      	cmp	r3, #0
  4093be:	d036      	beq.n	40942e <__swbuf_r+0x92>
  4093c0:	b2ed      	uxtb	r5, r5
  4093c2:	0489      	lsls	r1, r1, #18
  4093c4:	462f      	mov	r7, r5
  4093c6:	d515      	bpl.n	4093f4 <__swbuf_r+0x58>
  4093c8:	6822      	ldr	r2, [r4, #0]
  4093ca:	6961      	ldr	r1, [r4, #20]
  4093cc:	1ad3      	subs	r3, r2, r3
  4093ce:	428b      	cmp	r3, r1
  4093d0:	da1c      	bge.n	40940c <__swbuf_r+0x70>
  4093d2:	3301      	adds	r3, #1
  4093d4:	68a1      	ldr	r1, [r4, #8]
  4093d6:	1c50      	adds	r0, r2, #1
  4093d8:	3901      	subs	r1, #1
  4093da:	60a1      	str	r1, [r4, #8]
  4093dc:	6020      	str	r0, [r4, #0]
  4093de:	7015      	strb	r5, [r2, #0]
  4093e0:	6962      	ldr	r2, [r4, #20]
  4093e2:	429a      	cmp	r2, r3
  4093e4:	d01a      	beq.n	40941c <__swbuf_r+0x80>
  4093e6:	89a3      	ldrh	r3, [r4, #12]
  4093e8:	07db      	lsls	r3, r3, #31
  4093ea:	d501      	bpl.n	4093f0 <__swbuf_r+0x54>
  4093ec:	2d0a      	cmp	r5, #10
  4093ee:	d015      	beq.n	40941c <__swbuf_r+0x80>
  4093f0:	4638      	mov	r0, r7
  4093f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4093f4:	6e61      	ldr	r1, [r4, #100]	; 0x64
  4093f6:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  4093fa:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  4093fe:	81a2      	strh	r2, [r4, #12]
  409400:	6822      	ldr	r2, [r4, #0]
  409402:	6661      	str	r1, [r4, #100]	; 0x64
  409404:	6961      	ldr	r1, [r4, #20]
  409406:	1ad3      	subs	r3, r2, r3
  409408:	428b      	cmp	r3, r1
  40940a:	dbe2      	blt.n	4093d2 <__swbuf_r+0x36>
  40940c:	4621      	mov	r1, r4
  40940e:	4630      	mov	r0, r6
  409410:	f7fe ff58 	bl	4082c4 <_fflush_r>
  409414:	b940      	cbnz	r0, 409428 <__swbuf_r+0x8c>
  409416:	6822      	ldr	r2, [r4, #0]
  409418:	2301      	movs	r3, #1
  40941a:	e7db      	b.n	4093d4 <__swbuf_r+0x38>
  40941c:	4621      	mov	r1, r4
  40941e:	4630      	mov	r0, r6
  409420:	f7fe ff50 	bl	4082c4 <_fflush_r>
  409424:	2800      	cmp	r0, #0
  409426:	d0e3      	beq.n	4093f0 <__swbuf_r+0x54>
  409428:	f04f 37ff 	mov.w	r7, #4294967295
  40942c:	e7e0      	b.n	4093f0 <__swbuf_r+0x54>
  40942e:	4621      	mov	r1, r4
  409430:	4630      	mov	r0, r6
  409432:	f7fe fe33 	bl	40809c <__swsetup_r>
  409436:	2800      	cmp	r0, #0
  409438:	d1f6      	bne.n	409428 <__swbuf_r+0x8c>
  40943a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40943e:	6923      	ldr	r3, [r4, #16]
  409440:	b291      	uxth	r1, r2
  409442:	e7bd      	b.n	4093c0 <__swbuf_r+0x24>
  409444:	f7fe ff96 	bl	408374 <__sinit>
  409448:	e7b0      	b.n	4093ac <__swbuf_r+0x10>
  40944a:	bf00      	nop

0040944c <_wcrtomb_r>:
  40944c:	b5f0      	push	{r4, r5, r6, r7, lr}
  40944e:	4606      	mov	r6, r0
  409450:	b085      	sub	sp, #20
  409452:	461f      	mov	r7, r3
  409454:	b189      	cbz	r1, 40947a <_wcrtomb_r+0x2e>
  409456:	4c10      	ldr	r4, [pc, #64]	; (409498 <_wcrtomb_r+0x4c>)
  409458:	4d10      	ldr	r5, [pc, #64]	; (40949c <_wcrtomb_r+0x50>)
  40945a:	6824      	ldr	r4, [r4, #0]
  40945c:	6b64      	ldr	r4, [r4, #52]	; 0x34
  40945e:	2c00      	cmp	r4, #0
  409460:	bf08      	it	eq
  409462:	462c      	moveq	r4, r5
  409464:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
  409468:	47a0      	blx	r4
  40946a:	1c43      	adds	r3, r0, #1
  40946c:	d103      	bne.n	409476 <_wcrtomb_r+0x2a>
  40946e:	2200      	movs	r2, #0
  409470:	238a      	movs	r3, #138	; 0x8a
  409472:	603a      	str	r2, [r7, #0]
  409474:	6033      	str	r3, [r6, #0]
  409476:	b005      	add	sp, #20
  409478:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40947a:	460c      	mov	r4, r1
  40947c:	4906      	ldr	r1, [pc, #24]	; (409498 <_wcrtomb_r+0x4c>)
  40947e:	4a07      	ldr	r2, [pc, #28]	; (40949c <_wcrtomb_r+0x50>)
  409480:	6809      	ldr	r1, [r1, #0]
  409482:	6b49      	ldr	r1, [r1, #52]	; 0x34
  409484:	2900      	cmp	r1, #0
  409486:	bf08      	it	eq
  409488:	4611      	moveq	r1, r2
  40948a:	4622      	mov	r2, r4
  40948c:	f8d1 40e0 	ldr.w	r4, [r1, #224]	; 0xe0
  409490:	a901      	add	r1, sp, #4
  409492:	47a0      	blx	r4
  409494:	e7e9      	b.n	40946a <_wcrtomb_r+0x1e>
  409496:	bf00      	nop
  409498:	20400050 	.word	0x20400050
  40949c:	20400894 	.word	0x20400894

004094a0 <__ascii_wctomb>:
  4094a0:	b121      	cbz	r1, 4094ac <__ascii_wctomb+0xc>
  4094a2:	2aff      	cmp	r2, #255	; 0xff
  4094a4:	d804      	bhi.n	4094b0 <__ascii_wctomb+0x10>
  4094a6:	700a      	strb	r2, [r1, #0]
  4094a8:	2001      	movs	r0, #1
  4094aa:	4770      	bx	lr
  4094ac:	4608      	mov	r0, r1
  4094ae:	4770      	bx	lr
  4094b0:	238a      	movs	r3, #138	; 0x8a
  4094b2:	6003      	str	r3, [r0, #0]
  4094b4:	f04f 30ff 	mov.w	r0, #4294967295
  4094b8:	4770      	bx	lr
  4094ba:	bf00      	nop

004094bc <_write_r>:
  4094bc:	b570      	push	{r4, r5, r6, lr}
  4094be:	460d      	mov	r5, r1
  4094c0:	4c08      	ldr	r4, [pc, #32]	; (4094e4 <_write_r+0x28>)
  4094c2:	4611      	mov	r1, r2
  4094c4:	4606      	mov	r6, r0
  4094c6:	461a      	mov	r2, r3
  4094c8:	4628      	mov	r0, r5
  4094ca:	2300      	movs	r3, #0
  4094cc:	6023      	str	r3, [r4, #0]
  4094ce:	f7f9 ff57 	bl	403380 <_write>
  4094d2:	1c43      	adds	r3, r0, #1
  4094d4:	d000      	beq.n	4094d8 <_write_r+0x1c>
  4094d6:	bd70      	pop	{r4, r5, r6, pc}
  4094d8:	6823      	ldr	r3, [r4, #0]
  4094da:	2b00      	cmp	r3, #0
  4094dc:	d0fb      	beq.n	4094d6 <_write_r+0x1a>
  4094de:	6033      	str	r3, [r6, #0]
  4094e0:	bd70      	pop	{r4, r5, r6, pc}
  4094e2:	bf00      	nop
  4094e4:	2043b834 	.word	0x2043b834

004094e8 <__register_exitproc>:
  4094e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4094ec:	4d2c      	ldr	r5, [pc, #176]	; (4095a0 <__register_exitproc+0xb8>)
  4094ee:	4606      	mov	r6, r0
  4094f0:	6828      	ldr	r0, [r5, #0]
  4094f2:	4698      	mov	r8, r3
  4094f4:	460f      	mov	r7, r1
  4094f6:	4691      	mov	r9, r2
  4094f8:	f7ff fafc 	bl	408af4 <__retarget_lock_acquire_recursive>
  4094fc:	4b29      	ldr	r3, [pc, #164]	; (4095a4 <__register_exitproc+0xbc>)
  4094fe:	681c      	ldr	r4, [r3, #0]
  409500:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  409504:	2b00      	cmp	r3, #0
  409506:	d03e      	beq.n	409586 <__register_exitproc+0x9e>
  409508:	685a      	ldr	r2, [r3, #4]
  40950a:	2a1f      	cmp	r2, #31
  40950c:	dc1c      	bgt.n	409548 <__register_exitproc+0x60>
  40950e:	f102 0e01 	add.w	lr, r2, #1
  409512:	b176      	cbz	r6, 409532 <__register_exitproc+0x4a>
  409514:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  409518:	2401      	movs	r4, #1
  40951a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  40951e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  409522:	4094      	lsls	r4, r2
  409524:	4320      	orrs	r0, r4
  409526:	2e02      	cmp	r6, #2
  409528:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  40952c:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  409530:	d023      	beq.n	40957a <__register_exitproc+0x92>
  409532:	3202      	adds	r2, #2
  409534:	f8c3 e004 	str.w	lr, [r3, #4]
  409538:	6828      	ldr	r0, [r5, #0]
  40953a:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  40953e:	f7ff fadb 	bl	408af8 <__retarget_lock_release_recursive>
  409542:	2000      	movs	r0, #0
  409544:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  409548:	4b17      	ldr	r3, [pc, #92]	; (4095a8 <__register_exitproc+0xc0>)
  40954a:	b30b      	cbz	r3, 409590 <__register_exitproc+0xa8>
  40954c:	f44f 70c8 	mov.w	r0, #400	; 0x190
  409550:	f7fd fade 	bl	406b10 <malloc>
  409554:	4603      	mov	r3, r0
  409556:	b1d8      	cbz	r0, 409590 <__register_exitproc+0xa8>
  409558:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  40955c:	6002      	str	r2, [r0, #0]
  40955e:	2100      	movs	r1, #0
  409560:	6041      	str	r1, [r0, #4]
  409562:	460a      	mov	r2, r1
  409564:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  409568:	f04f 0e01 	mov.w	lr, #1
  40956c:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  409570:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  409574:	2e00      	cmp	r6, #0
  409576:	d0dc      	beq.n	409532 <__register_exitproc+0x4a>
  409578:	e7cc      	b.n	409514 <__register_exitproc+0x2c>
  40957a:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  40957e:	430c      	orrs	r4, r1
  409580:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  409584:	e7d5      	b.n	409532 <__register_exitproc+0x4a>
  409586:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  40958a:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  40958e:	e7bb      	b.n	409508 <__register_exitproc+0x20>
  409590:	6828      	ldr	r0, [r5, #0]
  409592:	f7ff fab1 	bl	408af8 <__retarget_lock_release_recursive>
  409596:	f04f 30ff 	mov.w	r0, #4294967295
  40959a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40959e:	bf00      	nop
  4095a0:	20400890 	.word	0x20400890
  4095a4:	00414a98 	.word	0x00414a98
  4095a8:	00406b11 	.word	0x00406b11

004095ac <_close_r>:
  4095ac:	b538      	push	{r3, r4, r5, lr}
  4095ae:	4c07      	ldr	r4, [pc, #28]	; (4095cc <_close_r+0x20>)
  4095b0:	2300      	movs	r3, #0
  4095b2:	4605      	mov	r5, r0
  4095b4:	4608      	mov	r0, r1
  4095b6:	6023      	str	r3, [r4, #0]
  4095b8:	f7fa ff9c 	bl	4044f4 <_close>
  4095bc:	1c43      	adds	r3, r0, #1
  4095be:	d000      	beq.n	4095c2 <_close_r+0x16>
  4095c0:	bd38      	pop	{r3, r4, r5, pc}
  4095c2:	6823      	ldr	r3, [r4, #0]
  4095c4:	2b00      	cmp	r3, #0
  4095c6:	d0fb      	beq.n	4095c0 <_close_r+0x14>
  4095c8:	602b      	str	r3, [r5, #0]
  4095ca:	bd38      	pop	{r3, r4, r5, pc}
  4095cc:	2043b834 	.word	0x2043b834

004095d0 <_fclose_r>:
  4095d0:	b570      	push	{r4, r5, r6, lr}
  4095d2:	b159      	cbz	r1, 4095ec <_fclose_r+0x1c>
  4095d4:	4605      	mov	r5, r0
  4095d6:	460c      	mov	r4, r1
  4095d8:	b110      	cbz	r0, 4095e0 <_fclose_r+0x10>
  4095da:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4095dc:	2b00      	cmp	r3, #0
  4095de:	d03c      	beq.n	40965a <_fclose_r+0x8a>
  4095e0:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4095e2:	07d8      	lsls	r0, r3, #31
  4095e4:	d505      	bpl.n	4095f2 <_fclose_r+0x22>
  4095e6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4095ea:	b92b      	cbnz	r3, 4095f8 <_fclose_r+0x28>
  4095ec:	2600      	movs	r6, #0
  4095ee:	4630      	mov	r0, r6
  4095f0:	bd70      	pop	{r4, r5, r6, pc}
  4095f2:	89a3      	ldrh	r3, [r4, #12]
  4095f4:	0599      	lsls	r1, r3, #22
  4095f6:	d53c      	bpl.n	409672 <_fclose_r+0xa2>
  4095f8:	4621      	mov	r1, r4
  4095fa:	4628      	mov	r0, r5
  4095fc:	f7fe fdc2 	bl	408184 <__sflush_r>
  409600:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  409602:	4606      	mov	r6, r0
  409604:	b133      	cbz	r3, 409614 <_fclose_r+0x44>
  409606:	69e1      	ldr	r1, [r4, #28]
  409608:	4628      	mov	r0, r5
  40960a:	4798      	blx	r3
  40960c:	2800      	cmp	r0, #0
  40960e:	bfb8      	it	lt
  409610:	f04f 36ff 	movlt.w	r6, #4294967295
  409614:	89a3      	ldrh	r3, [r4, #12]
  409616:	061a      	lsls	r2, r3, #24
  409618:	d422      	bmi.n	409660 <_fclose_r+0x90>
  40961a:	6b21      	ldr	r1, [r4, #48]	; 0x30
  40961c:	b141      	cbz	r1, 409630 <_fclose_r+0x60>
  40961e:	f104 0340 	add.w	r3, r4, #64	; 0x40
  409622:	4299      	cmp	r1, r3
  409624:	d002      	beq.n	40962c <_fclose_r+0x5c>
  409626:	4628      	mov	r0, r5
  409628:	f7fe ffca 	bl	4085c0 <_free_r>
  40962c:	2300      	movs	r3, #0
  40962e:	6323      	str	r3, [r4, #48]	; 0x30
  409630:	6c61      	ldr	r1, [r4, #68]	; 0x44
  409632:	b121      	cbz	r1, 40963e <_fclose_r+0x6e>
  409634:	4628      	mov	r0, r5
  409636:	f7fe ffc3 	bl	4085c0 <_free_r>
  40963a:	2300      	movs	r3, #0
  40963c:	6463      	str	r3, [r4, #68]	; 0x44
  40963e:	f7fe fec5 	bl	4083cc <__sfp_lock_acquire>
  409642:	6e63      	ldr	r3, [r4, #100]	; 0x64
  409644:	2200      	movs	r2, #0
  409646:	07db      	lsls	r3, r3, #31
  409648:	81a2      	strh	r2, [r4, #12]
  40964a:	d50e      	bpl.n	40966a <_fclose_r+0x9a>
  40964c:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40964e:	f7ff fa4f 	bl	408af0 <__retarget_lock_close_recursive>
  409652:	f7fe fec1 	bl	4083d8 <__sfp_lock_release>
  409656:	4630      	mov	r0, r6
  409658:	bd70      	pop	{r4, r5, r6, pc}
  40965a:	f7fe fe8b 	bl	408374 <__sinit>
  40965e:	e7bf      	b.n	4095e0 <_fclose_r+0x10>
  409660:	6921      	ldr	r1, [r4, #16]
  409662:	4628      	mov	r0, r5
  409664:	f7fe ffac 	bl	4085c0 <_free_r>
  409668:	e7d7      	b.n	40961a <_fclose_r+0x4a>
  40966a:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40966c:	f7ff fa44 	bl	408af8 <__retarget_lock_release_recursive>
  409670:	e7ec      	b.n	40964c <_fclose_r+0x7c>
  409672:	6da0      	ldr	r0, [r4, #88]	; 0x58
  409674:	f7ff fa3e 	bl	408af4 <__retarget_lock_acquire_recursive>
  409678:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40967c:	2b00      	cmp	r3, #0
  40967e:	d1bb      	bne.n	4095f8 <_fclose_r+0x28>
  409680:	6e66      	ldr	r6, [r4, #100]	; 0x64
  409682:	f016 0601 	ands.w	r6, r6, #1
  409686:	d1b1      	bne.n	4095ec <_fclose_r+0x1c>
  409688:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40968a:	f7ff fa35 	bl	408af8 <__retarget_lock_release_recursive>
  40968e:	4630      	mov	r0, r6
  409690:	bd70      	pop	{r4, r5, r6, pc}
  409692:	bf00      	nop

00409694 <_fstat_r>:
  409694:	b538      	push	{r3, r4, r5, lr}
  409696:	460b      	mov	r3, r1
  409698:	4c07      	ldr	r4, [pc, #28]	; (4096b8 <_fstat_r+0x24>)
  40969a:	4605      	mov	r5, r0
  40969c:	4611      	mov	r1, r2
  40969e:	4618      	mov	r0, r3
  4096a0:	2300      	movs	r3, #0
  4096a2:	6023      	str	r3, [r4, #0]
  4096a4:	f7fa ff2a 	bl	4044fc <_fstat>
  4096a8:	1c43      	adds	r3, r0, #1
  4096aa:	d000      	beq.n	4096ae <_fstat_r+0x1a>
  4096ac:	bd38      	pop	{r3, r4, r5, pc}
  4096ae:	6823      	ldr	r3, [r4, #0]
  4096b0:	2b00      	cmp	r3, #0
  4096b2:	d0fb      	beq.n	4096ac <_fstat_r+0x18>
  4096b4:	602b      	str	r3, [r5, #0]
  4096b6:	bd38      	pop	{r3, r4, r5, pc}
  4096b8:	2043b834 	.word	0x2043b834

004096bc <_isatty_r>:
  4096bc:	b538      	push	{r3, r4, r5, lr}
  4096be:	4c07      	ldr	r4, [pc, #28]	; (4096dc <_isatty_r+0x20>)
  4096c0:	2300      	movs	r3, #0
  4096c2:	4605      	mov	r5, r0
  4096c4:	4608      	mov	r0, r1
  4096c6:	6023      	str	r3, [r4, #0]
  4096c8:	f7fa ff1e 	bl	404508 <_isatty>
  4096cc:	1c43      	adds	r3, r0, #1
  4096ce:	d000      	beq.n	4096d2 <_isatty_r+0x16>
  4096d0:	bd38      	pop	{r3, r4, r5, pc}
  4096d2:	6823      	ldr	r3, [r4, #0]
  4096d4:	2b00      	cmp	r3, #0
  4096d6:	d0fb      	beq.n	4096d0 <_isatty_r+0x14>
  4096d8:	602b      	str	r3, [r5, #0]
  4096da:	bd38      	pop	{r3, r4, r5, pc}
  4096dc:	2043b834 	.word	0x2043b834

004096e0 <_lseek_r>:
  4096e0:	b570      	push	{r4, r5, r6, lr}
  4096e2:	460d      	mov	r5, r1
  4096e4:	4c08      	ldr	r4, [pc, #32]	; (409708 <_lseek_r+0x28>)
  4096e6:	4611      	mov	r1, r2
  4096e8:	4606      	mov	r6, r0
  4096ea:	461a      	mov	r2, r3
  4096ec:	4628      	mov	r0, r5
  4096ee:	2300      	movs	r3, #0
  4096f0:	6023      	str	r3, [r4, #0]
  4096f2:	f7fa ff0b 	bl	40450c <_lseek>
  4096f6:	1c43      	adds	r3, r0, #1
  4096f8:	d000      	beq.n	4096fc <_lseek_r+0x1c>
  4096fa:	bd70      	pop	{r4, r5, r6, pc}
  4096fc:	6823      	ldr	r3, [r4, #0]
  4096fe:	2b00      	cmp	r3, #0
  409700:	d0fb      	beq.n	4096fa <_lseek_r+0x1a>
  409702:	6033      	str	r3, [r6, #0]
  409704:	bd70      	pop	{r4, r5, r6, pc}
  409706:	bf00      	nop
  409708:	2043b834 	.word	0x2043b834

0040970c <_read_r>:
  40970c:	b570      	push	{r4, r5, r6, lr}
  40970e:	460d      	mov	r5, r1
  409710:	4c08      	ldr	r4, [pc, #32]	; (409734 <_read_r+0x28>)
  409712:	4611      	mov	r1, r2
  409714:	4606      	mov	r6, r0
  409716:	461a      	mov	r2, r3
  409718:	4628      	mov	r0, r5
  40971a:	2300      	movs	r3, #0
  40971c:	6023      	str	r3, [r4, #0]
  40971e:	f7f9 fe11 	bl	403344 <_read>
  409722:	1c43      	adds	r3, r0, #1
  409724:	d000      	beq.n	409728 <_read_r+0x1c>
  409726:	bd70      	pop	{r4, r5, r6, pc}
  409728:	6823      	ldr	r3, [r4, #0]
  40972a:	2b00      	cmp	r3, #0
  40972c:	d0fb      	beq.n	409726 <_read_r+0x1a>
  40972e:	6033      	str	r3, [r6, #0]
  409730:	bd70      	pop	{r4, r5, r6, pc}
  409732:	bf00      	nop
  409734:	2043b834 	.word	0x2043b834

00409738 <__aeabi_uldivmod>:
  409738:	b953      	cbnz	r3, 409750 <__aeabi_uldivmod+0x18>
  40973a:	b94a      	cbnz	r2, 409750 <__aeabi_uldivmod+0x18>
  40973c:	2900      	cmp	r1, #0
  40973e:	bf08      	it	eq
  409740:	2800      	cmpeq	r0, #0
  409742:	bf1c      	itt	ne
  409744:	f04f 31ff 	movne.w	r1, #4294967295
  409748:	f04f 30ff 	movne.w	r0, #4294967295
  40974c:	f000 b97a 	b.w	409a44 <__aeabi_idiv0>
  409750:	f1ad 0c08 	sub.w	ip, sp, #8
  409754:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  409758:	f000 f806 	bl	409768 <__udivmoddi4>
  40975c:	f8dd e004 	ldr.w	lr, [sp, #4]
  409760:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  409764:	b004      	add	sp, #16
  409766:	4770      	bx	lr

00409768 <__udivmoddi4>:
  409768:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  40976c:	468c      	mov	ip, r1
  40976e:	460d      	mov	r5, r1
  409770:	4604      	mov	r4, r0
  409772:	9e08      	ldr	r6, [sp, #32]
  409774:	2b00      	cmp	r3, #0
  409776:	d151      	bne.n	40981c <__udivmoddi4+0xb4>
  409778:	428a      	cmp	r2, r1
  40977a:	4617      	mov	r7, r2
  40977c:	d96d      	bls.n	40985a <__udivmoddi4+0xf2>
  40977e:	fab2 fe82 	clz	lr, r2
  409782:	f1be 0f00 	cmp.w	lr, #0
  409786:	d00b      	beq.n	4097a0 <__udivmoddi4+0x38>
  409788:	f1ce 0c20 	rsb	ip, lr, #32
  40978c:	fa01 f50e 	lsl.w	r5, r1, lr
  409790:	fa20 fc0c 	lsr.w	ip, r0, ip
  409794:	fa02 f70e 	lsl.w	r7, r2, lr
  409798:	ea4c 0c05 	orr.w	ip, ip, r5
  40979c:	fa00 f40e 	lsl.w	r4, r0, lr
  4097a0:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  4097a4:	0c25      	lsrs	r5, r4, #16
  4097a6:	fbbc f8fa 	udiv	r8, ip, sl
  4097aa:	fa1f f987 	uxth.w	r9, r7
  4097ae:	fb0a cc18 	mls	ip, sl, r8, ip
  4097b2:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  4097b6:	fb08 f309 	mul.w	r3, r8, r9
  4097ba:	42ab      	cmp	r3, r5
  4097bc:	d90a      	bls.n	4097d4 <__udivmoddi4+0x6c>
  4097be:	19ed      	adds	r5, r5, r7
  4097c0:	f108 32ff 	add.w	r2, r8, #4294967295
  4097c4:	f080 8123 	bcs.w	409a0e <__udivmoddi4+0x2a6>
  4097c8:	42ab      	cmp	r3, r5
  4097ca:	f240 8120 	bls.w	409a0e <__udivmoddi4+0x2a6>
  4097ce:	f1a8 0802 	sub.w	r8, r8, #2
  4097d2:	443d      	add	r5, r7
  4097d4:	1aed      	subs	r5, r5, r3
  4097d6:	b2a4      	uxth	r4, r4
  4097d8:	fbb5 f0fa 	udiv	r0, r5, sl
  4097dc:	fb0a 5510 	mls	r5, sl, r0, r5
  4097e0:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  4097e4:	fb00 f909 	mul.w	r9, r0, r9
  4097e8:	45a1      	cmp	r9, r4
  4097ea:	d909      	bls.n	409800 <__udivmoddi4+0x98>
  4097ec:	19e4      	adds	r4, r4, r7
  4097ee:	f100 33ff 	add.w	r3, r0, #4294967295
  4097f2:	f080 810a 	bcs.w	409a0a <__udivmoddi4+0x2a2>
  4097f6:	45a1      	cmp	r9, r4
  4097f8:	f240 8107 	bls.w	409a0a <__udivmoddi4+0x2a2>
  4097fc:	3802      	subs	r0, #2
  4097fe:	443c      	add	r4, r7
  409800:	eba4 0409 	sub.w	r4, r4, r9
  409804:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  409808:	2100      	movs	r1, #0
  40980a:	2e00      	cmp	r6, #0
  40980c:	d061      	beq.n	4098d2 <__udivmoddi4+0x16a>
  40980e:	fa24 f40e 	lsr.w	r4, r4, lr
  409812:	2300      	movs	r3, #0
  409814:	6034      	str	r4, [r6, #0]
  409816:	6073      	str	r3, [r6, #4]
  409818:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40981c:	428b      	cmp	r3, r1
  40981e:	d907      	bls.n	409830 <__udivmoddi4+0xc8>
  409820:	2e00      	cmp	r6, #0
  409822:	d054      	beq.n	4098ce <__udivmoddi4+0x166>
  409824:	2100      	movs	r1, #0
  409826:	e886 0021 	stmia.w	r6, {r0, r5}
  40982a:	4608      	mov	r0, r1
  40982c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  409830:	fab3 f183 	clz	r1, r3
  409834:	2900      	cmp	r1, #0
  409836:	f040 808e 	bne.w	409956 <__udivmoddi4+0x1ee>
  40983a:	42ab      	cmp	r3, r5
  40983c:	d302      	bcc.n	409844 <__udivmoddi4+0xdc>
  40983e:	4282      	cmp	r2, r0
  409840:	f200 80fa 	bhi.w	409a38 <__udivmoddi4+0x2d0>
  409844:	1a84      	subs	r4, r0, r2
  409846:	eb65 0503 	sbc.w	r5, r5, r3
  40984a:	2001      	movs	r0, #1
  40984c:	46ac      	mov	ip, r5
  40984e:	2e00      	cmp	r6, #0
  409850:	d03f      	beq.n	4098d2 <__udivmoddi4+0x16a>
  409852:	e886 1010 	stmia.w	r6, {r4, ip}
  409856:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40985a:	b912      	cbnz	r2, 409862 <__udivmoddi4+0xfa>
  40985c:	2701      	movs	r7, #1
  40985e:	fbb7 f7f2 	udiv	r7, r7, r2
  409862:	fab7 fe87 	clz	lr, r7
  409866:	f1be 0f00 	cmp.w	lr, #0
  40986a:	d134      	bne.n	4098d6 <__udivmoddi4+0x16e>
  40986c:	1beb      	subs	r3, r5, r7
  40986e:	0c3a      	lsrs	r2, r7, #16
  409870:	fa1f fc87 	uxth.w	ip, r7
  409874:	2101      	movs	r1, #1
  409876:	fbb3 f8f2 	udiv	r8, r3, r2
  40987a:	0c25      	lsrs	r5, r4, #16
  40987c:	fb02 3318 	mls	r3, r2, r8, r3
  409880:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  409884:	fb0c f308 	mul.w	r3, ip, r8
  409888:	42ab      	cmp	r3, r5
  40988a:	d907      	bls.n	40989c <__udivmoddi4+0x134>
  40988c:	19ed      	adds	r5, r5, r7
  40988e:	f108 30ff 	add.w	r0, r8, #4294967295
  409892:	d202      	bcs.n	40989a <__udivmoddi4+0x132>
  409894:	42ab      	cmp	r3, r5
  409896:	f200 80d1 	bhi.w	409a3c <__udivmoddi4+0x2d4>
  40989a:	4680      	mov	r8, r0
  40989c:	1aed      	subs	r5, r5, r3
  40989e:	b2a3      	uxth	r3, r4
  4098a0:	fbb5 f0f2 	udiv	r0, r5, r2
  4098a4:	fb02 5510 	mls	r5, r2, r0, r5
  4098a8:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  4098ac:	fb0c fc00 	mul.w	ip, ip, r0
  4098b0:	45a4      	cmp	ip, r4
  4098b2:	d907      	bls.n	4098c4 <__udivmoddi4+0x15c>
  4098b4:	19e4      	adds	r4, r4, r7
  4098b6:	f100 33ff 	add.w	r3, r0, #4294967295
  4098ba:	d202      	bcs.n	4098c2 <__udivmoddi4+0x15a>
  4098bc:	45a4      	cmp	ip, r4
  4098be:	f200 80b8 	bhi.w	409a32 <__udivmoddi4+0x2ca>
  4098c2:	4618      	mov	r0, r3
  4098c4:	eba4 040c 	sub.w	r4, r4, ip
  4098c8:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4098cc:	e79d      	b.n	40980a <__udivmoddi4+0xa2>
  4098ce:	4631      	mov	r1, r6
  4098d0:	4630      	mov	r0, r6
  4098d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4098d6:	f1ce 0420 	rsb	r4, lr, #32
  4098da:	fa05 f30e 	lsl.w	r3, r5, lr
  4098de:	fa07 f70e 	lsl.w	r7, r7, lr
  4098e2:	fa20 f804 	lsr.w	r8, r0, r4
  4098e6:	0c3a      	lsrs	r2, r7, #16
  4098e8:	fa25 f404 	lsr.w	r4, r5, r4
  4098ec:	ea48 0803 	orr.w	r8, r8, r3
  4098f0:	fbb4 f1f2 	udiv	r1, r4, r2
  4098f4:	ea4f 4518 	mov.w	r5, r8, lsr #16
  4098f8:	fb02 4411 	mls	r4, r2, r1, r4
  4098fc:	fa1f fc87 	uxth.w	ip, r7
  409900:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  409904:	fb01 f30c 	mul.w	r3, r1, ip
  409908:	42ab      	cmp	r3, r5
  40990a:	fa00 f40e 	lsl.w	r4, r0, lr
  40990e:	d909      	bls.n	409924 <__udivmoddi4+0x1bc>
  409910:	19ed      	adds	r5, r5, r7
  409912:	f101 30ff 	add.w	r0, r1, #4294967295
  409916:	f080 808a 	bcs.w	409a2e <__udivmoddi4+0x2c6>
  40991a:	42ab      	cmp	r3, r5
  40991c:	f240 8087 	bls.w	409a2e <__udivmoddi4+0x2c6>
  409920:	3902      	subs	r1, #2
  409922:	443d      	add	r5, r7
  409924:	1aeb      	subs	r3, r5, r3
  409926:	fa1f f588 	uxth.w	r5, r8
  40992a:	fbb3 f0f2 	udiv	r0, r3, r2
  40992e:	fb02 3310 	mls	r3, r2, r0, r3
  409932:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  409936:	fb00 f30c 	mul.w	r3, r0, ip
  40993a:	42ab      	cmp	r3, r5
  40993c:	d907      	bls.n	40994e <__udivmoddi4+0x1e6>
  40993e:	19ed      	adds	r5, r5, r7
  409940:	f100 38ff 	add.w	r8, r0, #4294967295
  409944:	d26f      	bcs.n	409a26 <__udivmoddi4+0x2be>
  409946:	42ab      	cmp	r3, r5
  409948:	d96d      	bls.n	409a26 <__udivmoddi4+0x2be>
  40994a:	3802      	subs	r0, #2
  40994c:	443d      	add	r5, r7
  40994e:	1aeb      	subs	r3, r5, r3
  409950:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  409954:	e78f      	b.n	409876 <__udivmoddi4+0x10e>
  409956:	f1c1 0720 	rsb	r7, r1, #32
  40995a:	fa22 f807 	lsr.w	r8, r2, r7
  40995e:	408b      	lsls	r3, r1
  409960:	fa05 f401 	lsl.w	r4, r5, r1
  409964:	ea48 0303 	orr.w	r3, r8, r3
  409968:	fa20 fe07 	lsr.w	lr, r0, r7
  40996c:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  409970:	40fd      	lsrs	r5, r7
  409972:	ea4e 0e04 	orr.w	lr, lr, r4
  409976:	fbb5 f9fc 	udiv	r9, r5, ip
  40997a:	ea4f 441e 	mov.w	r4, lr, lsr #16
  40997e:	fb0c 5519 	mls	r5, ip, r9, r5
  409982:	fa1f f883 	uxth.w	r8, r3
  409986:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  40998a:	fb09 f408 	mul.w	r4, r9, r8
  40998e:	42ac      	cmp	r4, r5
  409990:	fa02 f201 	lsl.w	r2, r2, r1
  409994:	fa00 fa01 	lsl.w	sl, r0, r1
  409998:	d908      	bls.n	4099ac <__udivmoddi4+0x244>
  40999a:	18ed      	adds	r5, r5, r3
  40999c:	f109 30ff 	add.w	r0, r9, #4294967295
  4099a0:	d243      	bcs.n	409a2a <__udivmoddi4+0x2c2>
  4099a2:	42ac      	cmp	r4, r5
  4099a4:	d941      	bls.n	409a2a <__udivmoddi4+0x2c2>
  4099a6:	f1a9 0902 	sub.w	r9, r9, #2
  4099aa:	441d      	add	r5, r3
  4099ac:	1b2d      	subs	r5, r5, r4
  4099ae:	fa1f fe8e 	uxth.w	lr, lr
  4099b2:	fbb5 f0fc 	udiv	r0, r5, ip
  4099b6:	fb0c 5510 	mls	r5, ip, r0, r5
  4099ba:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  4099be:	fb00 f808 	mul.w	r8, r0, r8
  4099c2:	45a0      	cmp	r8, r4
  4099c4:	d907      	bls.n	4099d6 <__udivmoddi4+0x26e>
  4099c6:	18e4      	adds	r4, r4, r3
  4099c8:	f100 35ff 	add.w	r5, r0, #4294967295
  4099cc:	d229      	bcs.n	409a22 <__udivmoddi4+0x2ba>
  4099ce:	45a0      	cmp	r8, r4
  4099d0:	d927      	bls.n	409a22 <__udivmoddi4+0x2ba>
  4099d2:	3802      	subs	r0, #2
  4099d4:	441c      	add	r4, r3
  4099d6:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  4099da:	eba4 0408 	sub.w	r4, r4, r8
  4099de:	fba0 8902 	umull	r8, r9, r0, r2
  4099e2:	454c      	cmp	r4, r9
  4099e4:	46c6      	mov	lr, r8
  4099e6:	464d      	mov	r5, r9
  4099e8:	d315      	bcc.n	409a16 <__udivmoddi4+0x2ae>
  4099ea:	d012      	beq.n	409a12 <__udivmoddi4+0x2aa>
  4099ec:	b156      	cbz	r6, 409a04 <__udivmoddi4+0x29c>
  4099ee:	ebba 030e 	subs.w	r3, sl, lr
  4099f2:	eb64 0405 	sbc.w	r4, r4, r5
  4099f6:	fa04 f707 	lsl.w	r7, r4, r7
  4099fa:	40cb      	lsrs	r3, r1
  4099fc:	431f      	orrs	r7, r3
  4099fe:	40cc      	lsrs	r4, r1
  409a00:	6037      	str	r7, [r6, #0]
  409a02:	6074      	str	r4, [r6, #4]
  409a04:	2100      	movs	r1, #0
  409a06:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  409a0a:	4618      	mov	r0, r3
  409a0c:	e6f8      	b.n	409800 <__udivmoddi4+0x98>
  409a0e:	4690      	mov	r8, r2
  409a10:	e6e0      	b.n	4097d4 <__udivmoddi4+0x6c>
  409a12:	45c2      	cmp	sl, r8
  409a14:	d2ea      	bcs.n	4099ec <__udivmoddi4+0x284>
  409a16:	ebb8 0e02 	subs.w	lr, r8, r2
  409a1a:	eb69 0503 	sbc.w	r5, r9, r3
  409a1e:	3801      	subs	r0, #1
  409a20:	e7e4      	b.n	4099ec <__udivmoddi4+0x284>
  409a22:	4628      	mov	r0, r5
  409a24:	e7d7      	b.n	4099d6 <__udivmoddi4+0x26e>
  409a26:	4640      	mov	r0, r8
  409a28:	e791      	b.n	40994e <__udivmoddi4+0x1e6>
  409a2a:	4681      	mov	r9, r0
  409a2c:	e7be      	b.n	4099ac <__udivmoddi4+0x244>
  409a2e:	4601      	mov	r1, r0
  409a30:	e778      	b.n	409924 <__udivmoddi4+0x1bc>
  409a32:	3802      	subs	r0, #2
  409a34:	443c      	add	r4, r7
  409a36:	e745      	b.n	4098c4 <__udivmoddi4+0x15c>
  409a38:	4608      	mov	r0, r1
  409a3a:	e708      	b.n	40984e <__udivmoddi4+0xe6>
  409a3c:	f1a8 0802 	sub.w	r8, r8, #2
  409a40:	443d      	add	r5, r7
  409a42:	e72b      	b.n	40989c <__udivmoddi4+0x134>

00409a44 <__aeabi_idiv0>:
  409a44:	4770      	bx	lr
  409a46:	bf00      	nop

00409a48 <click_high>:
  409a48:	0341 0341 0cc6 0cc6 19e9 19e9 2563 2563     A.A.........c%c%
  409a58:	2f31 2f31 325b 325b 280b 280b 1279 1279     1/1/[2[2.(.(y.y.
  409a68:	f782 f782 dd1b dd1b cc0a cc0a ca74 ca74     ............t.t.
  409a78:	d529 d529 e864 e864 f944 f944 00f1 00f1     ).).d.d.D.D.....
  409a88:	fe24 fe24 f696 f696 efbf efbf ecd8 ecd8     $.$.............
  409a98:	ee5d ee5d f08f f08f edc4 edc4 e4d9 e4d9     ].].............
  409aa8:	dad0 dad0 d135 d135 cc06 cc06 d47b d47b     ....5.5.....{.{.
  409ab8:	eb7f eb7f 0a4f 0a4f 29f8 29f8 4123 4123     ....O.O..).)#A#A
  409ac8:	4717 4717 3aeb 3aeb 2532 2532 0f8a 0f8a     .G.G.:.:2%2%....
  409ad8:	045a 045a 04bd 04bd 0c70 0c70 147f 147f     Z.Z.....p.p.....
  409ae8:	16fc 16fc 143b 143b 0fb2 0fb2 0c9f 0c9f     ....;.;.........
  409af8:	0a55 0a55 08fe 08fe 0bc4 0bc4 14b8 14b8     U.U.............
  409b08:	1d07 1d07 214f 214f 2335 2335 1ea0 1ea0     ....O!O!5#5#....
  409b18:	1054 1054 fccf fccf e780 e780 d3d4 d3d4     T.T.............
  409b28:	c742 c742 c644 c644 cd6f cd6f db79 db79     B.B.D.D.o.o.y.y.
  409b38:	e9ef e9ef f217 f217 f2bd f2bd ee68 ee68     ............h.h.
  409b48:	e951 e951 e64c e64c e5ff e5ff e638 e638     Q.Q.L.L.....8.8.
  409b58:	e411 e411 dcf2 dcf2 d451 d451 ce0a ce0a     ........Q.Q.....
  409b68:	cd08 cd08 d764 d764 ef54 ef54 0efb 0efb     ....d.d.T.T.....
  409b78:	2eb1 2eb1 4674 4674 4edc 4edc 457c 457c     ....tFtF.N.N|E|E
  409b88:	3142 3142 1b5d 1b5d 0d2a 0d2a 0a7d 0a7d     B1B1].].*.*.}.}.
  409b98:	0fe4 0fe4 17d2 17d2 1ba5 1ba5 1abf 1abf     ................
  409ba8:	1698 1698 12ad 12ad 0fc8 0fc8 0d98 0d98     ................
  409bb8:	0dcc 0dcc 13f0 13f0 1b70 1b70 1efa 1efa     ........p.p.....
  409bc8:	207c 207c 1e7e 1e7e 13d1 13d1 02d3 02d3     | | ~.~.........
  409bd8:	ef47 ef47 dbf3 dbf3 cd13 cd13 c87b c87b     G.G.........{.{.
  409be8:	ccb3 ccb3 d734 d734 e434 e434 ec68 ec68     ....4.4.4.4.h.h.
  409bf8:	ee6a ee6a eb6c eb6c e746 e746 e43a e43a     j.j.l.l.F.F.:.:.
  409c08:	e3b6 e3b6 e41c e41c e327 e327 dd42 dd42     ........'.'.B.B.
  409c18:	d3cf d3cf cbbe cbbe c849 c849 ce80 ce80     ........I.I.....
  409c28:	e285 e285 00bc 00bc 21a3 21a3 3d7a 3d7a     .........!.!z=z=
  409c38:	4c85 4c85 4a1b 4a1b 39f4 39f4 2527 2527     .L.L.J.J.9.9'%'%
  409c48:	1499 1499 0ecb 0ecb 118b 118b 18a0 18a0     ................
  409c58:	1d19 1d19 1cfe 1cfe 197c 197c 15cd 15cd     ........|.|.....
  409c68:	1338 1338 10f6 10f6 0f98 0f98 131a 131a     8.8.............
  409c78:	19f1 19f1 1d8a 1d8a 1e7d 1e7d 1dbd 1dbd     ........}.}.....
  409c88:	160e 160e 0745 0745 f553 f553 e290 e290     ....E.E.S.S.....
  409c98:	d25a d25a ca5c ca5c cbf1 cbf1 d420 d420     Z.Z.\.\..... . .
  409ca8:	e0aa e0aa ea12 ea12 edfa edfa ecac ecac     ................
  409cb8:	e917 e917 e5db e5db e522 e522 e5e1 e5e1     ........".".....
  409cc8:	e5ab e5ab e186 e186 d92a d92a d0cc d0cc     ........*.*.....
  409cd8:	cba0 cba0 cdd0 cdd0 dcaf dcaf f6f3 f6f3     ................
  409ce8:	1611 1611 32f8 32f8 4603 4603 4919 4919     .....2.2.F.F.I.I
  409cf8:	3d43 3d43 2a3b 2a3b 18a0 18a0 0eae 0eae     C=C=;*;*........
  409d08:	0ecf 0ecf 14cd 14cd 199b 199b 1a11 1a11     ................
  409d18:	1723 1723 13ec 13ec 11e7 11e7 1043 1043     #.#.........C.C.
  409d28:	0e9d 0e9d 0d49 0d49 0a88 0a88 03f0 03f0     ....I.I.........
  409d38:	fafd fafd f256 f256 ec1a ec1a ea3f ea3f     ....V.V.....?.?.
  409d48:	ecd1 ecd1 f1bb f1bb f670 f670 f8a4 f8a4     ........p.p.....
  409d58:	f71c f71c f301 f301 ef0f ef0f ed82 ed82     ................
  409d68:	eefe eefe f294 f294 f5ee f5ee f792 f792     ................
  409d78:	f805 f805 f77c f77c f652 f652 f5a9 f5a9     ....|.|.R.R.....
  409d88:	f652 f652 f888 f888 fc12 fc12 006b 006b     R.R.........k.k.
  409d98:	04b6 04b6 07a2 07a2 0881 0881 07a9 07a9     ................
  409da8:	065d 065d 058f 058f 0539 0539 0592 0592     ].].....9.9.....
  409db8:	06b2 06b2 07e9 07e9 08d0 08d0 0980 0980     ................
  409dc8:	0998 0998 08d6 08d6 07cc 07cc 0722 0722     ............".".
  409dd8:	06d9 06d9 06b8 06b8 069d 069d 0644 0644     ............D.D.
  409de8:	056a 056a 03c8 03c8 0181 0181 ff43 ff43     j.j.........C.C.
  409df8:	fdc6 fdc6 fd5b fd5b fdc5 fdc5 fe8a fe8a     ....[.[.........
  409e08:	ff33 ff33 ff8d ff8d ff63 ff63 fe74 fe74     3.3.....c.c.t.t.
  409e18:	fd10 fd10 fbcc fbcc fac2 fac2 fa11 fa11     ................
  409e28:	fa5e fa5e fb35 fb35 fbf2 fbf2 fc9c fc9c     ^.^.5.5.........
  409e38:	fd12 fd12 fd23 fd23 fd0a fd0a fd31 fd31     ....#.#.....1.1.
  409e48:	fdd7 fdd7 fea7 fea7 ff75 ff75 0054 0054     ........u.u.T.T.
  409e58:	00e9 00e9 00e1 00e1 0075 0075 0041 0041     ........u.u.A.A.
  409e68:	0071 0071 00c8 00c8 0167 0167 0225 0225     q.q.....g.g.%.%.
  409e78:	025f 025f 0208 0208 0185 0185 00fc 00fc     _._.............
  409e88:	0098 0098 009b 009b 010d 010d 01be 01be     ................
  409e98:	026e 026e 030b 030b 0344 0344 02da 02da     n.n.....D.D.....
  409ea8:	01ee 01ee 00d8 00d8 0003 0003 ff8c ff8c     ................
  409eb8:	ff5f ff5f ff68 ff68 ff86 ff86 ffcc ffcc     _._.h.h.........
  409ec8:	0038 0038 008c 008c 00a3 00a3 00b5 00b5     8.8.............
  409ed8:	00be 00be 008e 008e 0031 0031 ffcc ffcc     ........1.1.....
  409ee8:	ff94 ff94 ff75 ff75 ff43 ff43 ff14 ff14     ....u.u.C.C.....
  409ef8:	ff33 ff33 ff99 ff99 fff8 fff8 0033 0033     3.3.........3.3.
  409f08:	005c 005c 0069 0069 0028 0028 ff96 ff96     \.\.i.i.(.(.....
  409f18:	fec9 fec9 fe1d fe1d fdbc fdbc fda1 fda1     ................
  409f28:	fdcd fdcd fe29 fe29 fe6a fe6a fe70 fe70     ....).).j.j.p.p.
  409f38:	fe56 fe56 fe37 fe37 fe39 fe39 fe87 fe87     V.V.7.7.9.9.....
  409f48:	ff17 ff17 ffc0 ffc0 006a 006a 0108 0108     ........j.j.....
  409f58:	0159 0159 0158 0158 0140 0140 0142 0142     Y.Y.X.X.@.@.B.B.
  409f68:	0167 0167 019c 019c 01c6 01c6 01e4 01e4     g.g.............
  409f78:	01e4 01e4 01b6 01b6 0177 0177 013c 013c     ........w.w.<.<.
  409f88:	011a 011a 0110 0110 0107 0107 00cc 00cc     ................
  409f98:	0055 0055 ffd8 ffd8 ff7d ff7d ff30 ff30     U.U.....}.}.0.0.
  409fa8:	ff0a ff0a ff2b ff2b ff5d ff5d ff66 ff66     ....+.+.].].f.f.
  409fb8:	ff43 ff43 ff16 ff16 fee8 fee8 fec8 fec8     C.C.............
  409fc8:	fecc fecc fee5 fee5 feeb feeb fedc fedc     ................
  409fd8:	fec6 fec6 fea2 fea2 fe77 fe77 fe69 fe69     ........w.w.i.i.
  409fe8:	fe6e fe6e fe8b fe8b fecf fecf ff1b ff1b     n.n.............
  409ff8:	ff55 ff55 ff98 ff98 ffd0 ffd0 0004 0004     U.U.............
  40a008:	004c 004c 00a8 00a8 0103 0103 013d 013d     L.L.........=.=.
  40a018:	0157 0157 0155 0155 0140 0140 0122 0122     W.W.U.U.@.@.".".
  40a028:	0109 0109 00fa 00fa 00e7 00e7 00c2 00c2     ................
  40a038:	0096 0096 0075 0075 0063 0063 0061 0061     ....u.u.c.c.a.a.
  40a048:	006b 006b 006a 006a 0050 0050 0016 0016     k.k.j.j.P.P.....
  40a058:	ffc0 ffc0 ff55 ff55 fefa fefa febb febb     ....U.U.........
  40a068:	fe9b fe9b fe98 fe98 fea5 fea5 febc febc     ................
  40a078:	fed1 fed1 fee8 fee8 ff02 ff02 ff1e ff1e     ................
  40a088:	ff44 ff44 ff64 ff64 ff8a ff8a ffad ffad     D.D.d.d.........
  40a098:	ffbd ffbd ffb8 ffb8 ff9c ff9c ff83 ff83     ................
  40a0a8:	ff75 ff75 ff7f ff7f ffa2 ffa2 ffd4 ffd4     u.u.............
  40a0b8:	0005 0005 0037 0037 0068 0068 00a2 00a2     ....7.7.h.h.....
  40a0c8:	00df 00df 0112 0112 0135 0135 014d 014d     ........5.5.M.M.
  40a0d8:	014f 014f 012d 012d 00ed 00ed 00a8 00a8     O.O.-.-.........
  40a0e8:	0068 0068 0033 0033 0014 0014 0011 0011     h.h.3.3.........
  40a0f8:	001f 001f 0029 0029 0027 0027 0024 0024     ....).).'.'.$.$.
  40a108:	0011 0011 fff0 fff0 ffcb ffcb ff95 ff95     ................
  40a118:	ff53 ff53 ff13 ff13 fed7 fed7 feb4 feb4     S.S.............
  40a128:	feb0 feb0 fed1 fed1 ff0a ff0a ff58 ff58     ............X.X.
  40a138:	ffa8 ffa8 ffe2 ffe2 0000 0000 0008 0008     ................
  40a148:	fff6 fff6 ffd4 ffd4 ffbf ffbf ffb4 ffb4     ................
  40a158:	ffaf ffaf ffb8 ffb8 ffda ffda 000d 000d     ................
  40a168:	0052 0052 0096 0096 00cb 00cb 00e7 00e7     R.R.............
  40a178:	00f1 00f1 00e5 00e5 00cf 00cf 00b6 00b6     ................
  40a188:	009c 009c 008c 008c 0087 0087 0084 0084     ................
  40a198:	0079 0079 006a 006a 0049 0049 0021 0021     y.y.j.j.I.I.!.!.
  40a1a8:	fffb fffb ffdd ffdd ffcc ffcc ffba ffba     ................
  40a1b8:	ffa8 ffa8 ff9d ff9d ff9e ff9e ffa3 ffa3     ................
  40a1c8:	ffa9 ffa9 ffaa ffaa ffa5 ffa5 ff92 ff92     ................
  40a1d8:	ff74 ff74 ff52 ff52 ff33 ff33 ff28 ff28     t.t.R.R.3.3.(.(.
  40a1e8:	ff3a ff3a ff6a ff6a ffaf ffaf fffb fffb     :.:.j.j.........
  40a1f8:	0035 0035 005f 005f 006f 006f 0069 0069     5.5._._.o.o.i.i.
  40a208:	0065 0065 0062 0062 0060 0060 0058 0058     e.e.b.b.`.`.X.X.
  40a218:	0057 0057 0060 0060 0071 0071 0081 0081     W.W.`.`.q.q.....
  40a228:	0083 0083 007f 007f 0079 0079 0071 0071     ........y.y.q.q.
  40a238:	0071 0071 006e 006e 0063 0063 004c 004c     q.q.n.n.c.c.L.L.
  40a248:	002c 002c fffc fffc ffca ffca ffad ffad     ,.,.............
  40a258:	ffa6 ffa6 ffa9 ffa9 ffba ffba ffcc ffcc     ................
  40a268:	ffcd ffcd ffbe ffbe ff98 ff98 ff7b ff7b     ............{.{.
  40a278:	ff71 ff71 ff82 ff82 ffb2 ffb2 fff3 fff3     q.q.............
  40a288:	0032 0032 0050 0050 004f 004f 0032 0032     2.2.P.P.O.O.2.2.
  40a298:	0008 0008 ffed ffed ffec ffec 0006 0006     ................
  40a2a8:	0035 0035 0061 0061 007e 007e 008e 008e     5.5.a.a.~.~.....
  40a2b8:	0086 0086 006a 006a 0046 0046 0028 0028     ....j.j.F.F.(.(.
  40a2c8:	000e 000e fffb fffb ffec ffec ffe8 ffe8     ................
  40a2d8:	ffed ffed fffc fffc 0008 0008 001a 001a     ................
  40a2e8:	002e 002e 003b 003b 0048 0048 004c 004c     ....;.;.H.H.L.L.
  40a2f8:	0044 0044 002e 002e 0006 0006 ffcd ffcd     D.D.............
  40a308:	ff95 ff95 ff6c ff6c ff61 ff61 ff6b ff6b     ....l.l.a.a.k.k.
  40a318:	ff8a ff8a ffb3 ffb3 ffd8 ffd8 fff1 fff1     ................
  40a328:	fff0 fff0 ffd1 ffd1 ffb2 ffb2 ffa7 ffa7     ................
  40a338:	ffb7 ffb7 ffdc ffdc 0018 0018 0048 0048     ............H.H.
  40a348:	005e 005e 005c 005c 004f 004f 003c 003c     ^.^.\.\.O.O.<.<.
  40a358:	0033 0033 0049 0049 006f 006f 008a 008a     3.3.I.I.o.o.....
  40a368:	00a0 00a0 00ab 00ab 009c 009c 007a 007a     ............z.z.
  40a378:	004a 004a 0025 0025 000c 000c 0008 0008     J.J.%.%.........
  40a388:	0003 0003 fff9 fff9 fff3 fff3 ffe1 ffe1     ................
  40a398:	ffd0 ffd0 ffc3 ffc3 ffc4 ffc4 ffc2 ffc2     ................
  40a3a8:	ffd1 ffd1 ffef ffef 000a 000a 000a 000a     ................
  40a3b8:	fff6 fff6 ffc5 ffc5 ff88 ff88 ff5d ff5d     ............].].
  40a3c8:	ff4e ff4e ff57 ff57 ff6e ff6e ff98 ff98     N.N.W.W.n.n.....
  40a3d8:	ffc1 ffc1 ffe0 ffe0 ffe8 ffe8 ffd8 ffd8     ................
  40a3e8:	ffba ffba ffad ffad ffb6 ffb6 ffd8 ffd8     ................
  40a3f8:	000e 000e 0044 0044 0070 0070 007f 007f     ....D.D.p.p.....
  40a408:	007d 007d 0068 0068 0046 0046 0034 0034     }.}.h.h.F.F.4.4.
  40a418:	002c 002c 0027 0027 0039 0039 005f 005f     ,.,.'.'.9.9._._.
  40a428:	0087 0087 00a7 00a7 00b5 00b5 00a7 00a7     ................
  40a438:	0087 0087 0061 0061 0038 0038 0006 0006     ....a.a.8.8.....
  40a448:	ffd7 ffd7 ffaf ffaf ff95 ff95 ff8f ff8f     ................
  40a458:	ff95 ff95 ff99 ff99 ffa3 ffa3 ffcc ffcc     ................
  40a468:	0005 0005 0036 0036 0052 0052 0045 0045     ....6.6.R.R.E.E.
  40a478:	000b 000b ffbc ffbc ff75 ff75 ff38 ff38     ........u.u.8.8.
  40a488:	ff1a ff1a ff31 ff31 ff72 ff72 ffc2 ffc2     ....1.1.r.r.....
  40a498:	000d 000d 002f 002f 001e 001e 0001 0001     ...././.........
  40a4a8:	ffdb ffdb ffc5 ffc5 ffc9 ffc9 ffec ffec     ................
  40a4b8:	0015 0015 0037 0037 004d 004d 0046 0046     ....7.7.M.M.F.F.
  40a4c8:	002c 002c 0020 0020 001c 001c 0013 0013     ,.,. . .........
  40a4d8:	001f 001f 003a 003a 0062 0062 0079 0079     ....:.:.b.b.y.y.
  40a4e8:	0085 0085 007e 007e 006a 006a 0065 0065     ....~.~.j.j.e.e.
  40a4f8:	0066 0066 0060 0060 0048 0048 0026 0026     f.f.`.`.H.H.&.&.
  40a508:	fffd fffd ffd2 ffd2 ffb1 ffb1 ff90 ff90     ................
  40a518:	ff75 ff75 ff85 ff85 ffb4 ffb4 ffea ffea     u.u.............
  40a528:	0023 0023 003d 003d 0021 0021 ffe6 ffe6     #.#.=.=.!.!.....
  40a538:	ffa0 ffa0 ff53 ff53 ff17 ff17 ff0a ff0a     ....S.S.........
  40a548:	ff30 ff30 ff6d ff6d ffbb ffbb ffef ffef     0.0.m.m.........
  40a558:	fffc fffc fff7 fff7 ffed ffed ffe3 ffe3     ................
  40a568:	ffe5 ffe5 fffc fffc 001e 001e 002f 002f     ...........././.
  40a578:	0032 0032 001e 001e fffe fffe fff1 fff1     2.2.............
  40a588:	0003 0003 001d 001d 0046 0046 0078 0078     ........F.F.x.x.
  40a598:	00a5 00a5 00b9 00b9 00c0 00c0 00b4 00b4     ................
  40a5a8:	0093 0093 0081 0081 007f 007f 007d 007d     ............}.}.
  40a5b8:	0068 0068 0046 0046 0013 0013 ffdc ffdc     h.h.F.F.........
  40a5c8:	ffae ffae ff87 ff87 ff68 ff68 ff65 ff65     ........h.h.e.e.
  40a5d8:	ff7b ff7b ff9b ff9b ffc2 ffc2 ffdf ffdf     {.{.............
  40a5e8:	ffe3 ffe3 ffd2 ffd2 ffb5 ffb5 ff8a ff8a     ................
  40a5f8:	ff63 ff63 ff50 ff50 ff5e ff5e ff77 ff77     c.c.P.P.^.^.w.w.
  40a608:	ffa4 ffa4 ffdd ffdd fffd fffd 000c 000c     ................
  40a618:	001a 001a 0021 0021 0026 0026 0037 0037     ....!.!.&.&.7.7.
  40a628:	0052 0052 0061 0061 005f 005f 004f 004f     R.R.a.a._._.O.O.
  40a638:	0029 0029 0006 0006 fff6 fff6 ffef ffef     ).).............
  40a648:	fffe fffe 0023 0023 0049 0049 0062 0062     ....#.#.I.I.b.b.
  40a658:	007e 007e 0090 0090 0096 0096 0097 0097     ~.~.............
  40a668:	009e 009e 009e 009e 0084 0084 0056 0056     ............V.V.
  40a678:	001b 001b ffda ffda ffaa ffaa ff99 ff99     ................
  40a688:	ff99 ff99 ffb0 ffb0 ffc2 ffc2 ffce ffce     ................
  40a698:	ffcf ffcf ffc9 ffc9 ffb8 ffb8 ffa2 ffa2     ................
  40a6a8:	ff8b ff8b ff76 ff76 ff64 ff64 ff57 ff57     ....v.v.d.d.W.W.
  40a6b8:	ff5d ff5d ff6f ff6f ff93 ff93 ffcd ffcd     ].].o.o.........
  40a6c8:	000a 000a 0040 0040 0069 0069 007b 007b     ....@.@.i.i.{.{.
  40a6d8:	006f 006f 005b 005b 004c 004c 003b 003b     o.o.[.[.L.L.;.;.
  40a6e8:	0031 0031 0033 0033 0030 0030 0031 0031     1.1.3.3.0.0.1.1.
  40a6f8:	0039 0039 0037 0037 0039 0039 003a 003a     9.9.7.7.9.9.:.:.
  40a708:	0031 0031 0015 0015 fff4 fff4 ffdb ffdb     1.1.............
  40a718:	ffcc ffcc ffd6 ffd6 fff7 fff7 0027 0027     ............'.'.
  40a728:	0050 0050 0061 0061 0059 0059 0034 0034     P.P.a.a.Y.Y.4.4.
  40a738:	0003 0003 ffe1 ffe1 ffda ffda ffe5 ffe5     ................
  40a748:	fff5 fff5 0001 0001 0000 0000 fff8 fff8     ................
  40a758:	ffec ffec ffdf ffdf ffe2 ffe2 ffe6 ffe6     ................
  40a768:	ffeb ffeb ffe6 ffe6 ffce ffce ffae ffae     ................
  40a778:	ff8f ff8f ff8a ff8a ffab ffab ffe0 ffe0     ................
  40a788:	0019 0019 004b 004b 0064 0064 0063 0063     ....K.K.d.d.c.c.
  40a798:	004c 004c 002e 002e 0018 0018 000d 000d     L.L.............
  40a7a8:	000e 000e 0017 0017 001e 001e 0026 0026     ............&.&.
  40a7b8:	002a 002a 0036 0036 003e 003e 0042 0042     *.*.6.6.>.>.B.B.
  40a7c8:	003c 003c 002c 002c 000f 000f ffe7 ffe7     <.<.,.,.........
  40a7d8:	ffc8 ffc8 ffbb ffbb ffc4 ffc4 ffcb ffcb     ................
  40a7e8:	ffd0 ffd0 ffcd ffcd ffc7 ffc7 ffc4 ffc4     ................
  40a7f8:	ffcb ffcb ffe4 ffe4 fffb fffb 0007 0007     ................
  40a808:	0006 0006 fff8 fff8 ffe8 ffe8 ffdb ffdb     ................
  40a818:	ffdd ffdd ffee ffee fffd fffd 000c 000c     ................
  40a828:	000d 000d 0004 0004 fff6 fff6 fffa fffa     ................
  40a838:	0010 0010 0034 0034 0052 0052 006b 006b     ....4.4.R.R.k.k.
  40a848:	0076 0076 0061 0061 0037 0037 0012 0012     v.v.a.a.7.7.....
  40a858:	fffc fffc fff4 fff4 0000 0000 000b 000b     ................
  40a868:	000b 000b fffc fffc ffea ffea ffd9 ffd9     ................
  40a878:	ffd7 ffd7 ffe1 ffe1 ffe0 ffe0 ffd9 ffd9     ................
  40a888:	ffc1 ffc1 ff94 ff94 ff64 ff64 ff53 ff53     ........d.d.S.S.
  40a898:	ff69 ff69 ff95 ff95 ffd2 ffd2 0004 0004     i.i.............
  40a8a8:	001e 001e 001c 001c 0013 0013 000b 000b     ................
  40a8b8:	000b 000b 001d 001d 0038 0038 0052 0052     ........8.8.R.R.
  40a8c8:	0059 0059 0052 0052 0041 0041 002e 002e     Y.Y.R.R.A.A.....
  40a8d8:	0024 0024 001b 001b 000f 000f 0006 0006     $.$.............
  40a8e8:	fffc fffc ffff ffff 0005 0005 000d 000d     ................
  40a8f8:	0015 0015 001a 001a 0018 0018 000b 000b     ................
  40a908:	fff4 fff4 ffdd ffdd ffd0 ffd0 ffcb ffcb     ................
  40a918:	ffd2 ffd2 ffdd ffdd ffde ffde ffdb ffdb     ................
  40a928:	ffd7 ffd7 ffd2 ffd2 ffdd ffdd ffee ffee     ................
  40a938:	fffa fffa fffe fffe ffec ffec ffc4 ffc4     ................
  40a948:	ff8a ff8a ff5e ff5e ff4f ff4f ff5f ff5f     ....^.^.O.O._._.
  40a958:	ff83 ff83 ffb1 ffb1 ffdc ffdc fffe fffe     ................
  40a968:	0015 0015 002d 002d 004b 004b 0069 0069     ....-.-.K.K.i.i.
  40a978:	0089 0089 009e 009e 009e 009e 008b 008b     ................
  40a988:	0076 0076 005c 005c 0047 0047 0039 0039     v.v.\.\.G.G.9.9.
  40a998:	0028 0028 0012 0012 0008 0008 0000 0000     (.(.............
  40a9a8:	fffb fffb 0000 0000 000a 000a 000e 000e     ................
  40a9b8:	0008 0008 fff9 fff9 ffd9 ffd9 ffb0 ffb0     ................
  40a9c8:	ff8c ff8c ff7b ff7b ff7f ff7f ff9d ff9d     ....{.{.........
  40a9d8:	ffbd ffbd ffd5 ffd5 ffe3 ffe3 ffea ffea     ................
  40a9e8:	ffef ffef fff7 fff7 000c 000c 001e 001e     ................
  40a9f8:	002c 002c 0029 0029 0004 0004 ffcf ffcf     ,.,.).).........
  40aa08:	ffa1 ffa1 ff85 ff85 ff83 ff83 ff92 ff92     ................
  40aa18:	ffbd ffbd ffeb ffeb 0015 0015 003b 003b     ............;.;.
  40aa28:	005a 005a 006d 006d 0079 0079 0081 0081     Z.Z.m.m.y.y.....
  40aa38:	0081 0081 007d 007d 0071 0071 0064 0064     ....}.}.q.q.d.d.
  40aa48:	0059 0059 004d 004d 0037 0037 001b 001b     Y.Y.M.M.7.7.....
  40aa58:	000a 000a fffc fffc fffd fffd 0008 0008     ................
  40aa68:	0018 0018 001f 001f 001b 001b 0004 0004     ................
  40aa78:	ffd0 ffd0 ff9c ff9c ff63 ff63 ff46 ff46     ........c.c.F.F.
  40aa88:	ff41 ff41 ff5c ff5c ff93 ff93 ffc4 ffc4     A.A.\.\.........
  40aa98:	ffe7 ffe7 ffef ffef ffe9 ffe9 ffdf ffdf     ................
  40aaa8:	ffd7 ffd7 ffdc ffdc fff1 fff1 0006 0006     ................
  40aab8:	000f 000f 0011 0011 0006 0006 fffb fffb     ................
  40aac8:	fff2 fff2 fffd fffd 0012 0012 0031 0031     ............1.1.
  40aad8:	0052 0052 0075 0075 008d 008d 0092 0092     R.R.u.u.........
  40aae8:	008f 008f 0086 0086 0080 0080 007c 007c     ............|.|.
  40aaf8:	0077 0077 006b 006b 0063 0063 005b 005b     w.w.k.k.c.c.[.[.
  40ab08:	0045 0045 0026 0026 0009 0009 ffea ffea     E.E.&.&.........
  40ab18:	ffd6 ffd6 ffcd ffcd ffcb ffcb ffd8 ffd8     ................
  40ab28:	ffde ffde ffdf ffdf ffd1 ffd1 ffaa ffaa     ................
  40ab38:	ff82 ff82 ff63 ff63 ff54 ff54 ff5e ff5e     ....c.c.T.T.^.^.
  40ab48:	ff83 ff83 ffb4 ffb4 ffda ffda fff6 fff6     ................
  40ab58:	fffd fffd ffee ffee ffe0 ffe0 ffdc ffdc     ................
  40ab68:	ffe4 ffe4 fff2 fff2 0004 0004 0012 0012     ................
  40ab78:	000b 000b fffe fffe ffeb ffeb ffe0 ffe0     ................
  40ab88:	ffdf ffdf fff2 fff2 000e 000e 002b 002b     ............+.+.
  40ab98:	0041 0041 004d 004d 0049 0049 0044 0044     A.A.M.M.I.I.D.D.
  40aba8:	0047 0047 0053 0053 0069 0069 007b 007b     G.G.S.S.i.i.{.{.
  40abb8:	008c 008c 008f 008f 007e 007e 005c 005c     ........~.~.\.\.
  40abc8:	0039 0039 001b 001b 0006 0006 0003 0003     9.9.............
  40abd8:	000a 000a 0015 0015 0011 0011 fffd fffd     ................
  40abe8:	ffdd ffdd ffa6 ffa6 ff74 ff74 ff50 ff50     ........t.t.P.P.
  40abf8:	ff46 ff46 ff4a ff4a ff61 ff61 ff85 ff85     F.F.J.J.a.a.....
  40ac08:	ffa5 ffa5 ffbd ffbd ffcd ffcd ffcf ffcf     ................
  40ac18:	ffce ffce ffcf ffcf ffda ffda ffe3 ffe3     ................
  40ac28:	fff4 fff4 0001 0001 0008 0008 0010 0010     ................
  40ac38:	001b 001b 002b 002b 0042 0042 005b 005b     ....+.+.B.B.[.[.
  40ac48:	0067 0067 006f 006f 0061 0061 003f 003f     g.g.o.o.a.a.?.?.
  40ac58:	001a 001a fffc fffc fff0 fff0 fffc fffc     ................
  40ac68:	0015 0015 0030 0030 0043 0043 0046 0046     ....0.0.C.C.F.F.
  40ac78:	003d 003d 0023 0023 000f 000f fffe fffe     =.=.#.#.........
  40ac88:	fff6 fff6 ffff ffff 000f 000f 0014 0014     ................
  40ac98:	000d 000d 0001 0001 ffe7 ffe7 ffcc ffcc     ................
  40aca8:	ffb0 ffb0 ff97 ff97 ff8b ff8b ff89 ff89     ................
  40acb8:	ff8e ff8e ff9f ff9f ffaf ffaf ffbf ffbf     ................
  40acc8:	ffcf ffcf ffd8 ffd8 ffdf ffdf ffe2 ffe2     ................
  40acd8:	ffed ffed fff2 fff2 fff3 fff3 fff3 fff3     ................
  40ace8:	ffee ffee ffeb ffeb ffe6 ffe6 fff6 fff6     ................
  40acf8:	000e 000e 0032 0032 0057 0057 006e 006e     ....2.2.W.W.n.n.
  40ad08:	0069 0069 0051 0051 002a 002a ffff ffff     i.i.Q.Q.*.*.....
  40ad18:	ffdf ffdf ffd6 ffd6 ffe5 ffe5 fff9 fff9     ................
  40ad28:	000f 000f 0019 0019 0017 0017 0005 0005     ................
  40ad38:	fff2 fff2 fff1 fff1 fff1 fff1 0003 0003     ................
  40ad48:	001b 001b 0023 0023 001b 001b 000e 000e     ....#.#.........
  40ad58:	fffb fffb ffe3 ffe3 ffd4 ffd4 ffd3 ffd3     ................
  40ad68:	ffde ffde ffea ffea fff2 fff2 ffef ffef     ................
  40ad78:	ffe2 ffe2 ffd4 ffd4 ffc9 ffc9 ffca ffca     ................
  40ad88:	ffd3 ffd3 ffe1 ffe1 fff3 fff3 fffd fffd     ................
  40ad98:	fffa fffa ffef ffef ffda ffda ffc7 ffc7     ................
  40ada8:	ffb6 ffb6 ffb4 ffb4 ffc1 ffc1 ffda ffda     ................
  40adb8:	fffb fffb 0021 0021 0036 0036 0037 0037     ....!.!.6.6.7.7.
  40adc8:	002d 002d 0021 0021 000d 000d fffb fffb     -.-.!.!.........
  40add8:	fff7 fff7 fffb fffb 0008 0008 001b 001b     ................
  40ade8:	002a 002a 0030 0030 0030 0030 002b 002b     *.*.0.0.0.0.+.+.
  40adf8:	002d 002d 0031 0031 003c 003c 003e 003e     -.-.1.1.<.<.>.>.
  40ae08:	0037 0037 0029 0029 001b 001b 0001 0001     7.7.).).........
  40ae18:	ffe8 ffe8 ffdc ffdc ffd6 ffd6 ffd8 ffd8     ................
  40ae28:	ffe3 ffe3 ffed ffed ffef ffef ffe7 ffe7     ................
  40ae38:	ffd4 ffd4 ffbf ffbf ffae ffae ffa7 ffa7     ................
  40ae48:	ffb0 ffb0 ffc6 ffc6 ffe4 ffe4 fffa fffa     ................
  40ae58:	0004 0004 fffb fffb ffe0 ffe0 ffbc ffbc     ................
  40ae68:	ffa9 ffa9 ffab ffab ffc0 ffc0 ffee ffee     ................
  40ae78:	001c 001c 0040 0040 004a 004a 004a 004a     ....@.@.J.J.J.J.
  40ae88:	0036 0036 001b 001b 0009 0009 0007 0007     6.6.............
  40ae98:	000e 000e 001e 001e 0029 0029 002b 002b     ........).).+.+.
  40aea8:	0024 0024 0017 0017 000f 000f 0014 0014     $.$.............
  40aeb8:	0025 0025 0039 0039 0042 0042 0048 0048     %.%.9.9.B.B.H.H.
  40aec8:	0043 0043 0030 0030 0019 0019 0006 0006     C.C.0.0.........
  40aed8:	ffff ffff fffd fffd 0009 0009 0015 0015     ................
  40aee8:	0018 0018 000e 000e ffef ffef ffcc ffcc     ................
  40aef8:	ffaa ffaa ffa2 ffa2 ffa8 ffa8 ffc0 ffc0     ................
  40af08:	ffe9 ffe9 000c 000c 0019 0019 0011 0011     ................
  40af18:	ffec ffec ffb3 ffb3 ff84 ff84 ff72 ff72     ............r.r.
  40af28:	ff74 ff74 ff92 ff92 ffc0 ffc0 ffed ffed     t.t.............
  40af38:	0012 0012 002a 002a 0031 0031 0027 0027     ....*.*.1.1.'.'.
  40af48:	0022 0022 0026 0026 0031 0031 003c 003c     ".".&.&.1.1.<.<.
  40af58:	004a 004a 0044 0044 0033 0033 0026 0026     J.J.D.D.3.3.&.&.
  40af68:	001c 001c 0020 0020 002b 002b 003e 003e     .... . .+.+.>.>.
  40af78:	004a 004a 0053 0053 004e 004e 003b 003b     J.J.S.S.N.N.;.;.
  40af88:	0020 0020 0009 0009 fff7 fff7 fff7 fff7      . .............
  40af98:	000c 000c 0027 0027 003d 003d 0042 0042     ....'.'.=.=.B.B.
  40afa8:	002c 002c fff8 fff8 ffc4 ffc4 ff9c ff9c     ,.,.............
  40afb8:	ff8b ff8b ff95 ff95 ffb8 ffb8 ffe4 ffe4     ................
  40afc8:	000b 000b 001d 001d 0007 0007 ffdc ffdc     ................
  40afd8:	ffac ffac ff8e ff8e ff80 ff80 ff8d ff8d     ................
  40afe8:	ffa3 ffa3 ffbf ffbf ffcf ffcf ffd5 ffd5     ................
  40aff8:	ffd1 ffd1 ffcb ffcb ffd6 ffd6 fff5 fff5     ................
  40b008:	001e 001e 0047 0047 0065 0065 006e 006e     ....G.G.e.e.n.n.
  40b018:	005d 005d 0048 0048 002b 002b 0020 0020     ].].H.H.+.+. . .
  40b028:	0026 0026 0035 0035 0049 0049 005e 005e     &.&.5.5.I.I.^.^.
  40b038:	0065 0065 005b 005b 0040 0040 0028 0028     e.e.[.[.@.@.(.(.
  40b048:	001a 001a 0019 0019 002a 002a 0043 0043     ........*.*.C.C.
  40b058:	0057 0057 005a 005a 003a 003a fffd fffd     W.W.Z.Z.:.:.....
  40b068:	ffb6 ffb6 ff7b ff7b ff5c ff5c ff5f ff5f     ....{.{.\.\._._.
  40b078:	ff82 ff82 ffaf ffaf ffdd ffdd fff7 fff7     ................
  40b088:	ffeb ffeb ffc8 ffc8 ffa3 ffa3 ff89 ff89     ................
  40b098:	ff87 ff87 ff8b ff8b ffa3 ffa3 ffb9 ffb9     ................
  40b0a8:	ffc8 ffc8 ffce ffce ffcf ffcf ffd5 ffd5     ................
  40b0b8:	ffec ffec 001d 001d 005c 005c 0094 0094     ........\.\.....
  40b0c8:	00b3 00b3 00b7 00b7 009d 009d 0079 0079     ............y.y.
  40b0d8:	0055 0055 0036 0036 002b 002b 0030 0030     U.U.6.6.+.+.0.0.
  40b0e8:	0037 0037 0042 0042 0049 0049 0045 0045     7.7.B.B.I.I.E.E.
  40b0f8:	0032 0032 0019 0019 000e 000e 0005 0005     2.2.............
  40b108:	0006 0006 0017 0017 002d 002d 0033 0033     ........-.-.3.3.
  40b118:	0020 0020 fffa fffa ffbf ffbf ff88 ff88      . .............
  40b128:	ff5f ff5f ff4f ff4f ff5b ff5b ff7f ff7f     _._.O.O.[.[.....
  40b138:	ffb3 ffb3 ffd8 ffd8 ffee ffee ffea ffea     ................
  40b148:	ffdd ffdd ffd0 ffd0 ffc2 ffc2 ffbc ffbc     ................
  40b158:	ffbd ffbd ffc3 ffc3 ffc8 ffc8 ffcb ffcb     ................
  40b168:	ffcd ffcd ffd5 ffd5 ffeb ffeb 0018 0018     ................
  40b178:	0052 0052 008f 008f 00bc 00bc 00c3 00c3     R.R.............
  40b188:	00af 00af 0086 0086 005e 005e 003b 003b     ........^.^.;.;.
  40b198:	0022 0022 001c 001c 0028 0028 002e 002e     ".".....(.(.....
  40b1a8:	0034 0034 0036 0036 002d 002d 0016 0016     4.4.6.6.-.-.....
  40b1b8:	000a 000a 0005 0005 000a 000a 001d 001d     ................
  40b1c8:	002c 002c 0033 0033 0022 0022 000b 000b     ,.,.3.3.".".....
  40b1d8:	ffe3 ffe3 ffb7 ffb7 ff97 ff97 ff82 ff82     ................
  40b1e8:	ff7a ff7a ff7c ff7c ff82 ff82 ff8d ff8d     z.z.|.|.........
  40b1f8:	ff99 ff99 ffac ffac ffc4 ffc4 ffda ffda     ................
  40b208:	ffe6 ffe6 ffe0 ffe0 ffd0 ffd0 ffb9 ffb9     ................
  40b218:	ff9a ff9a ff8a ff8a ff8a ff8a ffa1 ffa1     ................
  40b228:	ffd0 ffd0 000e 000e 004c 004c 0084 0084     ........L.L.....
  40b238:	00af 00af 00bf 00bf 00ba 00ba 00a8 00a8     ................
  40b248:	008e 008e 0075 0075 0060 0060 0050 0050     ....u.u.`.`.P.P.
  40b258:	0045 0045 0043 0043 0043 0043 0043 0043     E.E.C.C.C.C.C.C.
  40b268:	0040 0040 003c 003c 0038 0038 0036 0036     @.@.<.<.8.8.6.6.
  40b278:	002c 002c 0025 0025 0015 0015 fff8 fff8     ,.,.%.%.........
  40b288:	ffda ffda ffb6 ffb6 ff99 ff99 ff87 ff87     ................
  40b298:	ff7f ff7f ff77 ff77 ff75 ff75 ff6f ff6f     ....w.w.u.u.o.o.
  40b2a8:	ff64 ff64 ff5c ff5c ff5f ff5f ff71 ff71     d.d.\.\._._.q.q.
  40b2b8:	ff97 ff97 ffbd ffbd ffd8 ffd8 ffe0 ffe0     ................
  40b2c8:	ffcb ffcb ffa8 ffa8 ff90 ff90 ff8d ff8d     ................
  40b2d8:	ffaa ffaa ffdc ffdc 0020 0020 005f 005f     ........ . ._._.
  40b2e8:	0090 0090 00af 00af 00c2 00c2 00be 00be     ................
  40b2f8:	00b7 00b7 00b2 00b2 00b1 00b1 00b1 00b1     ................
  40b308:	00a9 00a9 0091 0091 006e 006e 0049 0049     ........n.n.I.I.
  40b318:	0026 0026 0014 0014 000f 000f 0012 0012     &.&.............
  40b328:	0012 0012 0014 0014 000c 000c fffc fffc     ................
  40b338:	ffe5 ffe5 ffc4 ffc4 ffab ffab ff95 ff95     ................
  40b348:	ff85 ff85 ff80 ff80 ff7d ff7d ff73 ff73     ........}.}.s.s.
  40b358:	ff63 ff63 ff5e ff5e ff58 ff58 ff57 ff57     c.c.^.^.X.X.W.W.
  40b368:	ff6f ff6f ff97 ff97 ffc7 ffc7 fff7 fff7     o.o.............
  40b378:	0012 0012 0013 0013 0000 0000 ffdd ffdd     ................
  40b388:	ffbe ffbe ffaf ffaf ffb7 ffb7 ffd8 ffd8     ................
  40b398:	fffa fffa 001f 001f 003b 003b 0052 0052     ........;.;.R.R.
  40b3a8:	0062 0062 006f 006f 007b 007b 007a 007a     b.b.o.o.{.{.z.z.
  40b3b8:	007b 007b 007f 007f 007e 007e 006f 006f     {.{.....~.~.o.o.
  40b3c8:	0059 0059 003e 003e 002c 002c 0023 0023     Y.Y.>.>.,.,.#.#.
  40b3d8:	0025 0025 0031 0031 003c 003c 004e 004e     %.%.1.1.<.<.N.N.
  40b3e8:	005a 005a 0062 0062 005d 005d 0048 0048     Z.Z.b.b.].].H.H.
  40b3f8:	0028 0028 0003 0003 ffdc ffdc ffc2 ffc2     (.(.............
  40b408:	ffb6 ffb6 ffaf ffaf ffa8 ffa8 ffa3 ffa3     ................
  40b418:	ff9b ff9b ff8c ff8c ff89 ff89 ff8f ff8f     ................
  40b428:	ffa1 ffa1 ffb5 ffb5 ffc7 ffc7 ffcc ffcc     ................
  40b438:	ffb8 ffb8 ffa4 ffa4 ff82 ff82 ff70 ff70     ............p.p.
  40b448:	ff77 ff77 ff8f ff8f ffb9 ffb9 ffe6 ffe6     w.w.............
  40b458:	000b 000b 0022 0022 0035 0035 003f 003f     ....".".5.5.?.?.
  40b468:	0048 0048 0052 0052 0069 0069 0080 0080     H.H.R.R.i.i.....
  40b478:	009b 009b 00ab 00ab 00ae 00ae 009f 009f     ................
  40b488:	008c 008c 007f 007f 0074 0074 0075 0075     ........t.t.u.u.
  40b498:	007f 007f 0087 0087 008b 008b 008d 008d     ................
  40b4a8:	0087 0087 006d 006d 0051 0051 002e 002e     ....m.m.Q.Q.....
  40b4b8:	000d 000d fff0 fff0 ffd6 ffd6 ffbf ffbf     ................
  40b4c8:	ffa8 ffa8 ff91 ff91 ff83 ff83 ff7d ff7d     ............}.}.
  40b4d8:	ff8b ff8b ff9d ff9d ffb4 ffb4 ffc4 ffc4     ................
  40b4e8:	ffc3 ffc3 ffb0 ffb0 ff93 ff93 ff78 ff78     ............x.x.
  40b4f8:	ff60 ff60 ff59 ff59 ff66 ff66 ff7e ff7e     `.`.Y.Y.f.f.~.~.
  40b508:	ff9c ff9c ffba ffba ffcc ffcc ffdc ffdc     ................
  40b518:	ffea ffea fffc fffc 0011 0011 0029 0029     ............).).
  40b528:	0043 0043 0053 0053 006c 006c 0075 0075     C.C.S.S.l.l.u.u.
  40b538:	0070 0070 0066 0066 0061 0061 0067 0067     p.p.f.f.a.a.g.g.
  40b548:	0074 0074 0087 0087 009f 009f 00b5 00b5     t.t.............
  40b558:	00bb 00bb 00ba 00ba 00b0 00b0 009c 009c     ................
  40b568:	007c 007c 0054 0054 0035 0035 0011 0011     |.|.T.T.5.5.....
  40b578:	fff2 fff2 ffcf ffcf ffb6 ffb6 ffa1 ffa1     ................
  40b588:	ff9a ff9a ff9f ff9f ffbd ffbd ffd7 ffd7     ................
  40b598:	ffeb ffeb fff9 fff9 ffeb ffeb ffce ffce     ................
  40b5a8:	ffa8 ffa8 ff8a ff8a ff75 ff75 ff75 ff75     ........u.u.u.u.
  40b5b8:	ff86 ff86 ff9f ff9f ffae ffae ffb7 ffb7     ................
  40b5c8:	ffb6 ffb6 ffb0 ffb0 ffb4 ffb4 ffbe ffbe     ................
  40b5d8:	ffce ffce ffe0 ffe0 ffe9 ffe9 ffee ffee     ................
  40b5e8:	ffee ffee fff1 fff1 fff8 fff8 0005 0005     ................
  40b5f8:	001e 001e 003a 003a 0061 0061 0081 0081     ....:.:.a.a.....
  40b608:	008f 008f 0094 0094 0091 0091 008f 008f     ................
  40b618:	0094 0094 0093 0093 008f 008f 0086 0086     ................
  40b628:	006e 006e 0054 0054 0030 0030 000a 000a     n.n.T.T.0.0.....
  40b638:	fff1 fff1 ffe0 ffe0 ffdf ffdf ffea ffea     ................
  40b648:	fffd fffd 0010 0010 000d 000d ffff ffff     ................
  40b658:	ffe7 ffe7 ffc4 ffc4 ffa9 ffa9 ff9c ff9c     ................
  40b668:	ff99 ff99 ff9d ff9d ffa8 ffa8 ffae ffae     ................
  40b678:	ffaa ffaa ffa6 ffa6 ff9e ff9e ff96 ff96     ................
  40b688:	ff94 ff94 ff9e ff9e ffa8 ffa8 ffaf ffaf     ................
  40b698:	ffb0 ffb0 ffaf ffaf ffb0 ffb0 ffbc ffbc     ................
  40b6a8:	ffd1 ffd1 fff2 fff2 001c 001c 0048 0048     ............H.H.
  40b6b8:	0069 0069 007c 007c 0080 0080 007f 007f     i.i.|.|.........
  40b6c8:	007a 007a 007d 007d 0086 0086 008a 008a     z.z.}.}.........
  40b6d8:	0087 0087 0085 0085 0077 0077 006d 006d     ........w.w.m.m.
  40b6e8:	0058 0058 003f 003f 0023 0023 0009 0009     X.X.?.?.#.#.....
  40b6f8:	fff5 fff5 ffe5 ffe5 ffdc ffdc ffd8 ffd8     ................
  40b708:	ffcf ffcf ffc9 ffc9 ffc2 ffc2 ffbe ffbe     ................
  40b718:	ffbc ffbc ffbd ffbd ffc1 ffc1 ffc2 ffc2     ................
  40b728:	ffc5 ffc5 ffc4 ffc4 ffbc ffbc ffab ffab     ................
  40b738:	ff9d ff9d ff92 ff92 ff95 ff95 ffa7 ffa7     ................
  40b748:	ffbe ffbe ffd5 ffd5 ffe1 ffe1 ffde ffde     ................
  40b758:	ffd6 ffd6 ffc8 ffc8 ffc6 ffc6 ffcb ffcb     ................
  40b768:	ffe0 ffe0 ffff ffff 0024 0024 0049 0049     ........$.$.I.I.
  40b778:	005e 005e 0067 0067 0069 0069 0068 0068     ^.^.g.g.i.i.h.h.
  40b788:	006c 006c 007a 007a 008a 008a 0091 0091     l.l.z.z.........
  40b798:	008e 008e 0076 0076 0058 0058 002e 002e     ....v.v.X.X.....
  40b7a8:	0008 0008 ffe9 ffe9 ffde ffde ffe0 ffe0     ................
  40b7b8:	ffe5 ffe5 ffe8 ffe8 ffe3 ffe3 ffcf ffcf     ................
  40b7c8:	ffbb ffbb ffb5 ffb5 ffb7 ffb7 ffce ffce     ................
  40b7d8:	ffe6 ffe6 fff8 fff8 fffe fffe fff1 fff1     ................
  40b7e8:	ffe0 ffe0 ffc7 ffc7 ffb3 ffb3 ffac ffac     ................
  40b7f8:	ffb7 ffb7 ffd4 ffd4 ffea ffea fff2 fff2     ................
  40b808:	ffeb ffeb ffda ffda ffc4 ffc4 ffb8 ffb8     ................
  40b818:	ffb9 ffb9 ffc5 ffc5 ffdc ffdc ffed ffed     ................
  40b828:	fff8 fff8 fffc fffc 0000 0000 0009 0009     ................
  40b838:	0016 0016 002d 002d 0051 0051 0069 0069     ....-.-.Q.Q.i.i.
  40b848:	007a 007a 0085 0085 0084 0084 007b 007b     z.z.........{.{.
  40b858:	0071 0071 0063 0063 005d 005d 004c 004c     q.q.c.c.].].L.L.
  40b868:	0040 0040 0029 0029 0008 0008 ffed ffed     @.@.).).........
  40b878:	ffcb ffcb ffb0 ffb0 ffa8 ffa8 ffb0 ffb0     ................
  40b888:	ffc2 ffc2 ffd7 ffd7 ffdf ffdf ffdf ffdf     ................
  40b898:	ffcc ffcc ffaf ffaf ff93 ff93 ff7f ff7f     ................
  40b8a8:	ff7c ff7c ff85 ff85 ff9a ff9a ffb4 ffb4     |.|.............
  40b8b8:	ffcd ffcd ffdb ffdb ffe1 ffe1 ffdf ffdf     ................
  40b8c8:	ffe6 ffe6 fff4 fff4 0007 0007 0015 0015     ................
  40b8d8:	001d 001d 0015 0015 0008 0008 0000 0000     ................
  40b8e8:	0007 0007 001f 001f 003c 003c 0064 0064     ........<.<.d.d.
  40b8f8:	0082 0082 008e 008e 008c 008c 0082 0082     ................
  40b908:	0081 0081 0084 0084 0088 0088 008b 008b     ................
  40b918:	008c 008c 007b 007b 005a 005a 0029 0029     ....{.{.Z.Z.).).
  40b928:	fffb fffb ffcf ffcf ffb0 ffb0 ff9a ff9a     ................
  40b938:	ff90 ff90 ff95 ff95 ff9f ff9f ffa8 ffa8     ................
  40b948:	ffb0 ffb0 ffb1 ffb1 ffa5 ffa5 ff9b ff9b     ................
  40b958:	ff8c ff8c ff80 ff80 ff7e ff7e ff88 ff88     ........~.~.....
  40b968:	ff9a ff9a ffb2 ffb2 ffd1 ffd1 ffe4 ffe4     ................
  40b978:	ffe9 ffe9 fff2 fff2 fffe fffe 000b 000b     ................
  40b988:	001d 001d 0032 0032 0033 0033 0025 0025     ....2.2.3.3.%.%.
  40b998:	0012 0012 fffa fffa ffed ffed fff9 fff9     ................
  40b9a8:	0015 0015 003c 003c 0060 0060 0072 0072     ....<.<.`.`.r.r.
  40b9b8:	0071 0071 006a 006a 0061 0061 0062 0062     q.q.j.j.a.a.b.b.
  40b9c8:	0069 0069 0076 0076 0082 0082 007b 007b     i.i.v.v.....{.{.
  40b9d8:	0067 0067 0044 0044 001a 001a fffa fffa     g.g.D.D.........
  40b9e8:	ffec ffec ffe4 ffe4 ffdf ffdf ffdc ffdc     ................
  40b9f8:	ffcf ffcf ffc0 ffc0 ffac ffac ff9a ff9a     ................
  40ba08:	ff8b ff8b ff84 ff84 ff7e ff7e ff7d ff7d     ........~.~.}.}.
  40ba18:	ff81 ff81 ff89 ff89 ff97 ff97 ffa0 ffa0     ................
  40ba28:	ffad ffad ffb7 ffb7 ffbc ffbc ffc2 ffc2     ................
  40ba38:	ffcb ffcb ffdb ffdb fff0 fff0 000f 000f     ................
  40ba48:	0027 0027 002f 002f 0034 0034 002d 002d     '.'././.4.4.-.-.
  40ba58:	0022 0022 0022 0022 0033 0033 004a 004a     ".".".".3.3.J.J.
  40ba68:	0060 0060 006b 006b 0067 0067 0060 0060     `.`.k.k.g.g.`.`.
  40ba78:	0058 0058 0060 0060 006c 006c 0083 0083     X.X.`.`.l.l.....
  40ba88:	0090 0090 008f 008f 007c 007c 0056 0056     ........|.|.V.V.
  40ba98:	0026 0026 fffe fffe ffe3 ffe3 ffd3 ffd3     &.&.............
  40baa8:	ffca ffca ffc2 ffc2 ffb2 ffb2 ff95 ff95     ................
  40bab8:	ff7a ff7a ff63 ff63 ff59 ff59 ff61 ff61     z.z.c.c.Y.Y.a.a.
  40bac8:	ff73 ff73 ff91 ff91 ffa6 ffa6 ffb2 ffb2     s.s.............
  40bad8:	ffaf ffaf ffa6 ffa6 ff9a ff9a ff96 ff96     ................
  40bae8:	ff9e ff9e ffa8 ffa8 ffbf ffbf ffe0 ffe0     ................
  40baf8:	0000 0000 0022 0022 003c 003c 0048 0048     ....".".<.<.H.H.
  40bb08:	004e 004e 0053 0053 0057 0057 005c 005c     N.N.S.S.W.W.\.\.
  40bb18:	0062 0062 0064 0064 0061 0061 0054 0054     b.b.d.d.a.a.T.T.
  40bb28:	0044 0044 0038 0038 003f 003f 0054 0054     D.D.8.8.?.?.T.T.
  40bb38:	0072 0072 008e 008e 009b 009b 0096 0096     r.r.............
  40bb48:	007a 007a 004a 004a 001c 001c fff9 fff9     z.z.J.J.........
  40bb58:	ffe2 ffe2 ffdb ffdb ffd0 ffd0 ffc0 ffc0     ................
  40bb68:	ffa5 ffa5 ff80 ff80 ff60 ff60 ff4a ff4a     ........`.`.J.J.
  40bb78:	ff4c ff4c ff62 ff62 ff7d ff7d ff95 ff95     L.L.b.b.}.}.....
  40bb88:	ffa7 ffa7 ffa5 ffa5 ff99 ff99 ff8f ff8f     ................
  40bb98:	ff8c ff8c ff9a ff9a ffae ffae ffcb ffcb     ................
  40bba8:	ffdf ffdf ffec ffec 0000 0000 000a 000a     ................
  40bbb8:	0020 0020 003f 003f 0058 0058 0077 0077      . .?.?.X.X.w.w.
  40bbc8:	0089 0089 008f 008f 0087 0087 0080 0080     ................
  40bbd8:	0070 0070 0063 0063 0062 0062 006a 006a     p.p.c.c.b.b.j.j.
  40bbe8:	0070 0070 0075 0075 0074 0074 0073 0073     p.p.u.u.t.t.s.s.
  40bbf8:	0062 0062 004d 004d 002f 002f 000e 000e     b.b.M.M././.....
  40bc08:	fff4 fff4 ffdf ffdf ffcd ffcd ffbf ffbf     ................
  40bc18:	ffb5 ffb5 ffb0 ffb0 ffa4 ffa4 ff98 ff98     ................
  40bc28:	ff85 ff85 ff73 ff73 ff6e ff6e ff76 ff76     ....s.s.n.n.v.v.
  40bc38:	ff7f ff7f ff89 ff89 ff97 ff97 ffa0 ffa0     ................
  40bc48:	ffa9 ffa9 ffb1 ffb1 ffc1 ffc1 ffd5 ffd5     ................
  40bc58:	fff4 fff4 0015 0015 0029 0029 002a 002a     ........).).*.*.
  40bc68:	0025 0025 0019 0019 0014 0014 001d 001d     %.%.............
  40bc78:	0032 0032 004b 004b 006e 006e 0085 0085     2.2.K.K.n.n.....
  40bc88:	008d 008d 0089 0089 007b 007b 0066 0066     ........{.{.f.f.
  40bc98:	0059 0059 0051 0051 0054 0054 0052 0052     Y.Y.Q.Q.T.T.R.R.
  40bca8:	004d 004d 0042 0042 0033 0033 001e 001e     M.M.B.B.3.3.....
  40bcb8:	000f 000f 0000 0000 fff4 fff4 ffeb ffeb     ................
  40bcc8:	ffd8 ffd8 ffc0 ffc0 ffaf ffaf ffa0 ffa0     ................
  40bcd8:	ff98 ff98 ff95 ff95 ff93 ff93 ff96 ff96     ................
  40bce8:	ff9f ff9f ffad ffad ffba ffba ffc1 ffc1     ................
  40bcf8:	ffc6 ffc6 ffce ffce ffd2 ffd2 ffd6 ffd6     ................
  40bd08:	ffdc ffdc ffe8 ffe8 0000 0000 001d 001d     ................
  40bd18:	0035 0035 003c 003c 0039 0039 0027 0027     5.5.<.<.9.9.'.'.
  40bd28:	0016 0016 0007 0007 0004 0004 0012 0012     ................
  40bd38:	002b 002b 0047 0047 005a 005a 0060 0060     +.+.G.G.Z.Z.`.`.
  40bd48:	0054 0054 0045 0045 0038 0038 0033 0033     T.T.E.E.8.8.3.3.
  40bd58:	0038 0038 0039 0039 0035 0035 0024 0024     8.8.9.9.5.5.$.$.
  40bd68:	000c 000c fff3 fff3 ffe3 ffe3 ffe3 ffe3     ................
  40bd78:	ffed ffed fff1 fff1 ffec ffec ffd4 ffd4     ................
  40bd88:	ffb4 ffb4 ff93 ff93 ff79 ff79 ff71 ff71     ........y.y.q.q.
  40bd98:	ff78 ff78 ff8e ff8e ffab ffab ffc5 ffc5     x.x.............
  40bda8:	ffcd ffcd ffd3 ffd3 ffcc ffcc ffca ffca     ................
  40bdb8:	ffcf ffcf ffda ffda ffef ffef 0005 0005     ................
  40bdc8:	001d 001d 0037 0037 0050 0050 005a 005a     ....7.7.P.P.Z.Z.
  40bdd8:	005a 005a 004f 004f 0043 0043 0031 0031     Z.Z.O.O.C.C.1.1.
  40bde8:	0027 0027 0025 0025 002b 002b 003a 003a     '.'.%.%.+.+.:.:.
  40bdf8:	0040 0040 0042 0042 003f 003f 003a 003a     @.@.B.B.?.?.:.:.
  40be08:	0032 0032 0034 0034 0037 0037 002e 002e     2.2.4.4.7.7.....
  40be18:	001d 001d 0000 0000 ffdc ffdc ffb8 ffb8     ................
  40be28:	ffa6 ffa6 ffa7 ffa7 ffb9 ffb9 ffd2 ffd2     ................
  40be38:	ffe0 ffe0 ffda ffda ffc2 ffc2 ffa9 ffa9     ................
  40be48:	ff91 ff91 ff87 ff87 ff93 ff93 ffae ffae     ................
  40be58:	ffd5 ffd5 fff3 fff3 0003 0003 ffff ffff     ................
  40be68:	fff3 fff3 ffe4 ffe4 ffe2 ffe2 fff1 fff1     ................
  40be78:	0008 0008 001d 001d 0037 0037 0050 0050     ........7.7.P.P.
  40be88:	0060 0060 005f 005f 0059 0059 0049 0049     `.`._._.Y.Y.I.I.
  40be98:	003b 003b 002c 002c 001c 001c 0015 0015     ;.;.,.,.........
  40bea8:	0014 0014 0014 0014 0015 0015 0017 0017     ................
  40beb8:	0016 0016 0015 0015 001a 001a 0025 0025     ............%.%.
  40bec8:	0029 0029 0028 0028 001f 001f 000b 000b     ).).(.(.........
  40bed8:	fff0 fff0 ffd5 ffd5 ffc3 ffc3 ffbc ffbc     ................
  40bee8:	ffc8 ffc8 ffd5 ffd5 ffde ffde ffdf ffdf     ................
  40bef8:	ffd0 ffd0 ffbe ffbe ffad ffad ffa8 ffa8     ................
  40bf08:	ffb2 ffb2 ffc9 ffc9 ffe4 ffe4 0000 0000     ................
  40bf18:	0014 0014 0011 0011 0003 0003 fff4 fff4     ................
  40bf28:	ffe7 ffe7 ffe7 ffe7 fff1 fff1 0003 0003     ................
  40bf38:	0018 0018 0030 0030 0048 0048 0052 0052     ....0.0.H.H.R.R.
  40bf48:	0057 0057 0052 0052 004a 004a 003c 003c     W.W.R.R.J.J.<.<.
  40bf58:	0028 0028 0018 0018 000c 000c 0004 0004     (.(.............
  40bf68:	0001 0001 ffff ffff 0005 0005 0006 0006     ................
  40bf78:	0012 0012 0021 0021 002e 002e 0032 0032     ....!.!.....2.2.
  40bf88:	002c 002c 001f 001f 0007 0007 ffec ffec     ,.,.............
  40bf98:	ffd2 ffd2 ffc6 ffc6 ffcc ffcc ffd9 ffd9     ................
  40bfa8:	ffe3 ffe3 ffe6 ffe6 ffe3 ffe3 ffdb ffdb     ................
  40bfb8:	ffd0 ffd0 ffcb ffcb ffc9 ffc9 ffd3 ffd3     ................
  40bfc8:	ffea ffea fffe fffe 0012 0012 0015 0015     ................
  40bfd8:	000e 000e 0002 0002 fffd fffd fff2 fff2     ................
  40bfe8:	ffea ffea ffe6 ffe6 ffea ffea fff1 fff1     ................
  40bff8:	fffc fffc 000e 000e 001b 001b 002d 002d     ............-.-.
  40c008:	0037 0037 003a 003a 0032 0032 0021 0021     7.7.:.:.2.2.!.!.
  40c018:	000f 000f 0004 0004 0000 0000 fffe fffe     ................
  40c028:	ffff ffff fffa fffa fff9 fff9 fffa fffa     ................
  40c038:	0005 0005 0014 0014 0024 0024 0030 0030     ........$.$.0.0.
  40c048:	0036 0036 002a 002a 0014 0014 fff8 fff8     6.6.*.*.........
  40c058:	ffe7 ffe7 ffe1 ffe1 ffdc ffdc ffdf ffdf     ................
  40c068:	ffe4 ffe4 ffec ffec fff2 fff2 fff6 fff6     ................
  40c078:	fffe fffe 0007 0007 0011 0011 0020 0020     ............ . .
  40c088:	0025 0025 001b 001b 000d 000d fff9 fff9     %.%.............
  40c098:	ffe8 ffe8 ffd9 ffd9 ffd4 ffd4 ffd7 ffd7     ................
  40c0a8:	ffda ffda ffe3 ffe3 ffe9 ffe9 ffe7 ffe7     ................
  40c0b8:	ffe9 ffe9 ffe7 ffe7 ffe9 ffe9 fff0 fff0     ................
  40c0c8:	fff5 fff5 fff3 fff3 ffe9 ffe9 ffe2 ffe2     ................
  40c0d8:	ffdd ffdd ffdd ffdd ffe3 ffe3 ffee ffee     ................
  40c0e8:	fffa fffa 000c 000c 001a 001a 0023 0023     ............#.#.
  40c0f8:	002b 002b 002e 002e 002a 002a 0026 0026     +.+.....*.*.&.&.
  40c108:	001a 001a 0014 0014 0018 0018 0018 0018     ................
  40c118:	0014 0014 000f 000f 0000 0000 fff9 fff9     ................
  40c128:	fffd fffd 000a 000a 001d 001d 002a 002a     ............*.*.
  40c138:	003d 003d 0044 0044 0042 0042 0031 0031     =.=.D.D.B.B.1.1.
  40c148:	001f 001f 0013 0013 0005 0005 ffff ffff     ................
  40c158:	fff7 fff7 fff2 fff2 ffed ffed ffe2 ffe2     ................
  40c168:	ffe0 ffe0 ffd5 ffd5 ffd5 ffd5 ffd8 ffd8     ................
  40c178:	ffe1 ffe1 ffe8 ffe8 ffe9 ffe9 ffe3 ffe3     ................
  40c188:	ffcd ffcd ffc2 ffc2 ffbc ffbc ffbd ffbd     ................
  40c198:	ffcc ffcc ffda ffda ffeb ffeb fffa fffa     ................
  40c1a8:	0005 0005 000c 000c 0010 0010 0015 0015     ................
  40c1b8:	001a 001a 001f 001f 001f 001f 0023 0023     ............#.#.
  40c1c8:	0030 0030 003b 003b 0045 0045 004a 004a     0.0.;.;.E.E.J.J.
  40c1d8:	004a 004a 0040 0040 0040 0040 003a 003a     J.J.@.@.@.@.:.:.
  40c1e8:	003a 003a 003d 003d 0045 0045 004c 004c     :.:.=.=.E.E.L.L.
  40c1f8:	004b 004b 0044 0044 0031 0031 001c 001c     K.K.D.D.1.1.....
  40c208:	000b 000b 0001 0001 fffb fffb fff9 fff9     ................
  40c218:	fff2 fff2 ffe6 ffe6 ffd2 ffd2 ffbc ffbc     ................
  40c228:	ffa7 ffa7 ff9e ff9e ffa6 ffa6 ffb6 ffb6     ................
  40c238:	ffce ffce ffe1 ffe1 ffe9 ffe9 ffe9 ffe9     ................
  40c248:	ffe6 ffe6 ffe9 ffe9 ffeb ffeb fff6 fff6     ................
  40c258:	0006 0006 000e 000e 0010 0010 0018 0018     ................
  40c268:	0017 0017 0018 0018 001f 001f 0027 0027     ............'.'.
  40c278:	002a 002a 002f 002f 0034 0034 003b 003b     *.*././.4.4.;.;.
  40c288:	0040 0040 003d 003d 003c 003c 0033 0033     @.@.=.=.<.<.3.3.
  40c298:	002a 002a 001e 001e 0017 0017 000e 000e     *.*.............
  40c2a8:	0015 0015 0021 0021 002f 002f 003b 003b     ....!.!././.;.;.
  40c2b8:	0030 0030 0020 0020 0005 0005 fff0 fff0     0.0. . .........
  40c2c8:	ffe0 ffe0 ffdc ffdc ffe5 ffe5 ffeb ffeb     ................
  40c2d8:	ffe7 ffe7 ffd9 ffd9 ffc5 ffc5 ffb0 ffb0     ................
  40c2e8:	ffad ffad ffb7 ffb7 ffd1 ffd1 ffeb ffeb     ................
  40c2f8:	0002 0002 0005 0005 0001 0001 fff7 fff7     ................
  40c308:	fff4 fff4 fff3 fff3 0007 0007 001c 001c     ................
  40c318:	002d 002d 0035 0035 0032 0032 0025 0025     -.-.5.5.2.2.%.%.
  40c328:	0016 0016 000a 000a 0006 0006 000f 000f     ................
  40c338:	001b 001b 0025 0025 0025 0025 001e 001e     ....%.%.%.%.....
  40c348:	000f 000f ffff ffff fff3 fff3 ffe5 ffe5     ................
  40c358:	ffd9 ffd9 ffd6 ffd6 ffdf ffdf ffe8 ffe8     ................
  40c368:	fff7 fff7 0002 0002 ffff ffff fffa fffa     ................
  40c378:	fff0 fff0 ffe9 ffe9 ffdc ffdc ffd9 ffd9     ................
  40c388:	ffda ffda ffdd ffdd ffdc ffdc ffdd ffdd     ................
  40c398:	ffd9 ffd9 ffd1 ffd1 ffd7 ffd7 ffe6 ffe6     ................
  40c3a8:	0004 0004 0023 0023 0034 0034 003a 003a     ....#.#.4.4.:.:.
  40c3b8:	0037 0037 002a 002a 001b 001b 0013 0013     7.7.*.*.........
  40c3c8:	0017 0017 001e 001e 0022 0022 0026 0026     ........".".&.&.
  40c3d8:	001d 001d 0010 0010 ffff ffff fff6 fff6     ................
  40c3e8:	fff7 fff7 fffd fffd 000a 000a 0010 0010     ................
  40c3f8:	000d 000d 0003 0003 fff6 fff6 ffe7 ffe7     ................
  40c408:	ffd5 ffd5 ffc7 ffc7 ffbb ffbb ffad ffad     ................
  40c418:	ffa3 ffa3 ffa1 ffa1 ffac ffac ffb7 ffb7     ................
  40c428:	ffc7 ffc7 ffcd ffcd ffd3 ffd3 ffd2 ffd2     ................
  40c438:	ffcf ffcf ffd2 ffd2 ffd3 ffd3 ffd8 ffd8     ................
  40c448:	ffd8 ffd8 ffd7 ffd7 ffdb ffdb ffda ffda     ................
  40c458:	ffdc ffdc ffee ffee 000b 000b 0030 0030     ............0.0.
  40c468:	0053 0053 006d 006d 007c 007c 007f 007f     S.S.m.m.|.|.....
  40c478:	0074 0074 0065 0065 005d 005d 0057 0057     t.t.e.e.].].W.W.
  40c488:	0057 0057 0055 0055 004c 004c 003c 003c     W.W.U.U.L.L.<.<.
  40c498:	0020 0020 000e 000e fff9 fff9 fff5 fff5      . .............
  40c4a8:	fff6 fff6 fff9 fff9 fffa fffa fffc fffc     ................
  40c4b8:	fff1 fff1 ffe0 ffe0 ffc2 ffc2 ffaa ffaa     ................
  40c4c8:	ff8e ff8e ff7e ff7e ff72 ff72 ff72 ff72     ....~.~.r.r.r.r.
  40c4d8:	ff80 ff80 ff9a ff9a ffb8 ffb8 ffca ffca     ................
  40c4e8:	ffd9 ffd9 ffe4 ffe4 ffea ffea fff1 fff1     ................
  40c4f8:	fff9 fff9 fffe fffe fffd fffd fffc fffc     ................
  40c508:	fff8 fff8 fff1 fff1 fff5 fff5 0004 0004     ................
  40c518:	001a 001a 003a 003a 005c 005c 0073 0073     ....:.:.\.\.s.s.
  40c528:	007d 007d 0074 0074 0061 0061 004c 004c     }.}.t.t.a.a.L.L.
  40c538:	003e 003e 0034 0034 0031 0031 0030 0030     >.>.4.4.1.1.0.0.
  40c548:	002c 002c 0022 0022 0014 0014 0005 0005     ,.,.".".........
  40c558:	fff7 fff7 fff4 fff4 fff8 fff8 ffff ffff     ................
  40c568:	fffe fffe fffb fffb fff2 fff2 ffe7 ffe7     ................
  40c578:	ffd6 ffd6 ffc3 ffc3 ffb9 ffb9 ffb1 ffb1     ................
  40c588:	ffb3 ffb3 ffb1 ffb1 ffb1 ffb1 ffb8 ffb8     ................
  40c598:	ffbd ffbd ffc2 ffc2 ffcd ffcd ffd8 ffd8     ................
  40c5a8:	ffe5 ffe5 ffee ffee fffd fffd ffff ffff     ................
  40c5b8:	0004 0004 0007 0007 0004 0004 0008 0008     ................
  40c5c8:	0009 0009 0010 0010 0021 0021 0034 0034     ........!.!.4.4.
  40c5d8:	004c 004c 005a 005a 0060 0060 005e 005e     L.L.Z.Z.`.`.^.^.
  40c5e8:	004f 004f 003e 003e 0029 0029 0020 0020     O.O.>.>.).). . .
  40c5f8:	0014 0014 0012 0012 0011 0011 0009 0009     ................
  40c608:	0007 0007 0000 0000 fff3 fff3 ffef ffef     ................
  40c618:	ffe9 ffe9 ffe7 ffe7 ffe7 ffe7 ffea ffea     ................
  40c628:	ffea ffea ffed ffed ffed ffed ffe4 ffe4     ................
  40c638:	ffe1 ffe1 ffdd ffdd ffde ffde ffde ffde     ................
  40c648:	ffdc ffdc ffe2 ffe2 ffea ffea ffed ffed     ................
  40c658:	ffef ffef fff0 fff0 fff6 fff6 fff8 fff8     ................
  40c668:	fffc fffc 0005 0005 0007 0007 0007 0007     ................
  40c678:	0008 0008 0007 0007 0005 0005 0000 0000     ................
  40c688:	0000 0000 0004 0004 000a 000a 001b 001b     ................
  40c698:	002c 002c 0038 0038 0039 0039 0035 0035     ,.,.8.8.9.9.5.5.
  40c6a8:	0024 0024 0011 0011 0004 0004 fffb fffb     $.$.............
  40c6b8:	fff9 fff9 0000 0000 0003 0003 0000 0000     ................
  40c6c8:	fff5 fff5 ffe2 ffe2 ffd6 ffd6 ffc7 ffc7     ................
  40c6d8:	ffc3 ffc3 ffca ffca ffd6 ffd6 ffe7 ffe7     ................
  40c6e8:	ffed ffed ffef ffef ffef ffef fff0 fff0     ................
  40c6f8:	fffd fffd 0005 0005 0012 0012 0022 0022     ............".".
  40c708:	002d 002d 002c 002c 0021 0021 0015 0015     -.-.,.,.!.!.....
  40c718:	000e 000e 000f 000f 001b 001b 002c 002c     ............,.,.
  40c728:	0033 0033 002c 002c 001b 001b 0007 0007     3.3.,.,.........
  40c738:	fff6 fff6 ffe5 ffe5 ffe1 ffe1 ffe2 ffe2     ................
  40c748:	ffe5 ffe5 fff0 fff0 ffed ffed ffe6 ffe6     ................
  40c758:	ffde ffde ffd8 ffd8 ffce ffce ffd1 ffd1     ................
  40c768:	ffdd ffdd ffe7 ffe7 fff1 fff1 fff8 fff8     ................
  40c778:	fffd fffd fffd fffd fffb fffb fff9 fff9     ................
  40c788:	fff6 fff6 fff6 fff6 fffc fffc 0003 0003     ................
  40c798:	000d 000d 0015 0015 001f 001f 0026 0026     ............&.&.
  40c7a8:	002a 002a 0031 0031 0036 0036 0039 0039     *.*.1.1.6.6.9.9.
  40c7b8:	003e 003e 003c 003c 003b 003b 0031 0031     >.>.<.<.;.;.1.1.
  40c7c8:	0021 0021 000f 000f ffff ffff fffa fffa     !.!.............
  40c7d8:	fff7 fff7 fff6 fff6 fff7 fff7 fff8 fff8     ................
  40c7e8:	ffec ffec ffe3 ffe3 ffdd ffdd ffd3 ffd3     ................
  40c7f8:	ffc9 ffc9 ffc5 ffc5 ffbe ffbe ffbf ffbf     ................
  40c808:	ffc3 ffc3 ffcb ffcb ffd3 ffd3 ffdb ffdb     ................
  40c818:	ffe1 ffe1 ffe5 ffe5 fff0 fff0 fff9 fff9     ................
  40c828:	0002 0002 000d 000d 001a 001a 0025 0025     ............%.%.
  40c838:	0025 0025 0023 0023 001c 001c 0011 0011     %.%.#.#.........
  40c848:	0005 0005 0008 0008 000a 000a 0015 0015     ................
  40c858:	0023 0023 002d 002d 0032 0032 0032 0032     #.#.-.-.2.2.2.2.
  40c868:	002f 002f 0029 0029 0024 0024 0024 0024     /./.).).$.$.$.$.
  40c878:	0023 0023 0029 0029 002a 002a 0025 0025     #.#.).).*.*.%.%.
  40c888:	0016 0016 0005 0005 fff6 fff6 ffea ffea     ................
  40c898:	ffe3 ffe3 ffe0 ffe0 ffd7 ffd7 ffd1 ffd1     ................
  40c8a8:	ffd0 ffd0 ffcb ffcb ffbe ffbe ffb1 ffb1     ................
  40c8b8:	ffac ffac ffa9 ffa9 ffac ffac ffb6 ffb6     ................
  40c8c8:	ffbd ffbd ffc5 ffc5 ffcb ffcb ffcf ffcf     ................
  40c8d8:	ffd3 ffd3 ffda ffda ffe1 ffe1 fff3 fff3     ................
  40c8e8:	0004 0004 0015 0015 001a 001a 001a 001a     ................
  40c8f8:	0019 0019 0010 0010 0008 0008 000b 000b     ................
  40c908:	0011 0011 001b 001b 002e 002e 003c 003c     ............<.<.
  40c918:	0041 0041 0045 0045 0043 0043 003f 003f     A.A.E.E.C.C.?.?.
  40c928:	0037 0037 0033 0033 0030 0030 0029 0029     7.7.3.3.0.0.).).
  40c938:	0027 0027 0024 0024 001c 001c 0013 0013     '.'.$.$.........
  40c948:	0005 0005 fff7 fff7 ffe4 ffe4 ffd8 ffd8     ................
  40c958:	ffcd ffcd ffbd ffbd ffb9 ffb9 ffb2 ffb2     ................
  40c968:	ffad ffad ffa5 ffa5 ff9e ff9e ff99 ff99     ................
  40c978:	ff95 ff95 ff97 ff97 ff97 ff97 ff98 ff98     ................
  40c988:	ffa3 ffa3 ffa9 ffa9 ffb8 ffb8 ffcb ffcb     ................
  40c998:	ffe1 ffe1 fff6 fff6 000e 000e 0022 0022     ............".".
  40c9a8:	002f 002f 0033 0033 0034 0034 0033 0033     /./.3.3.4.4.3.3.
  40c9b8:	0031 0031 002f 002f 002f 002f 0034 0034     1.1././././.4.4.
  40c9c8:	003e 003e 004d 004d 0054 0054 0059 0059     >.>.M.M.T.T.Y.Y.
  40c9d8:	005a 005a 0051 0051 0041 0041 0031 0031     Z.Z.Q.Q.A.A.1.1.
  40c9e8:	0026 0026 0015 0015 0009 0009 0004 0004     &.&.............
  40c9f8:	fffd fffd fff1 fff1 ffe5 ffe5 ffda ffda     ................
  40ca08:	ffcb ffcb ffc4 ffc4 ffb6 ffb6 ffb2 ffb2     ................
  40ca18:	ffb2 ffb2 ffb3 ffb3 ffb6 ffb6 ffb7 ffb7     ................
  40ca28:	ffb9 ffb9 ffb9 ffb9 ffb7 ffb7 ffbb ffbb     ................
  40ca38:	ffc1 ffc1 ffc3 ffc3 ffcf ffcf ffdc ffdc     ................
  40ca48:	ffe9 ffe9 fff3 fff3 ffff ffff 0009 0009     ................
  40ca58:	0012 0012 001c 001c 0029 0029 0039 0039     ........).).9.9.
  40ca68:	0046 0046 0047 0047 0044 0044 003b 003b     F.F.G.G.D.D.;.;.
  40ca78:	002b 002b 0020 0020 0020 0020 0025 0025     +.+. . . . .%.%.
  40ca88:	0034 0034 0040 0040 0049 0049 0048 0048     4.4.@.@.I.I.H.H.
  40ca98:	0039 0039 0028 0028 0019 0019 000e 000e     9.9.(.(.........
  40caa8:	000a 000a 000c 000c 000e 000e ffff ffff     ................
  40cab8:	fff0 fff0 ffdc ffdc ffc8 ffc8 ffb6 ffb6     ................
  40cac8:	ffb2 ffb2 ffb7 ffb7 ffc3 ffc3 ffd0 ffd0     ................
  40cad8:	ffd7 ffd7 ffd7 ffd7 ffd3 ffd3 ffcd ffcd     ................
  40cae8:	ffcb ffcb ffcd ffcd ffd7 ffd7 ffdf ffdf     ................
  40caf8:	ffec ffec fff8 fff8 0000 0000 0007 0007     ................
  40cb08:	0006 0006 0009 0009 000c 000c 0013 0013     ................
  40cb18:	001d 001d 0025 0025 0033 0033 0036 0036     ....%.%.3.3.6.6.
  40cb28:	003f 003f 0040 0040 003f 003f 0036 0036     ?.?.@.@.?.?.6.6.
  40cb38:	0033 0033 0038 0038 003d 003d 0043 0043     3.3.8.8.=.=.C.C.
  40cb48:	0046 0046 0044 0044 003a 003a 002e 002e     F.F.D.D.:.:.....
  40cb58:	0020 0020 0017 0017 000e 000e 000a 000a      . .............
  40cb68:	0005 0005 fffd fffd fff3 fff3 ffe4 ffe4     ................
  40cb78:	ffd8 ffd8 ffc3 ffc3 ffba ffba ffad ffad     ................
  40cb88:	ffac ffac ffb4 ffb4 ffbe ffbe ffc9 ffc9     ................
  40cb98:	ffd0 ffd0 ffcc ffcc ffc6 ffc6 ffbf ffbf     ................
  40cba8:	ffbe ffbe ffc1 ffc1 ffcd ffcd ffe9 ffe9     ................
  40cbb8:	0001 0001 0019 0019 0023 0023 0026 0026     ........#.#.&.&.
  40cbc8:	0024 0024 0024 0024 002b 002b 0037 0037     $.$.$.$.+.+.7.7.
  40cbd8:	004c 004c 005e 005e 0067 0067 0068 0068     L.L.^.^.g.g.h.h.
  40cbe8:	005c 005c 0052 0052 004b 004b 0049 0049     \.\.R.R.K.K.I.I.
  40cbf8:	004a 004a 004d 004d 004c 004c 0040 0040     J.J.M.M.L.L.@.@.
  40cc08:	0030 0030 0018 0018 0003 0003 fff6 fff6     0.0.............
  40cc18:	ffed ffed ffe5 ffe5 ffe1 ffe1 ffd0 ffd0     ................
  40cc28:	ffc1 ffc1 ffb0 ffb0 ffa3 ffa3 ff9c ff9c     ................
  40cc38:	ff96 ff96 ff9b ff9b ffa6 ffa6 ffaf ffaf     ................
  40cc48:	ffbb ffbb ffca ffca ffd6 ffd6 ffe5 ffe5     ................
  40cc58:	ffef ffef fff6 fff6 fff2 fff2 fff6 fff6     ................
  40cc68:	fffc fffc 0004 0004 0013 0013 001e 001e     ................
  40cc78:	0028 0028 0032 0032 0036 0036 0031 0031     (.(.2.2.6.6.1.1.
  40cc88:	0033 0033 003a 003a 0040 0040 0049 0049     3.3.:.:.@.@.I.I.
  40cc98:	004d 004d 004b 004b 0042 0042 0035 0035     M.M.K.K.B.B.5.5.
  40cca8:	0026 0026 0021 0021 001d 001d 0021 0021     &.&.!.!.....!.!.
  40ccb8:	0024 0024 0024 0024 001d 001d 0012 0012     $.$.$.$.........
  40ccc8:	000a 000a 0000 0000 fff6 fff6 fff0 fff0     ................
  40ccd8:	ffe5 ffe5 ffd1 ffd1 ffb9 ffb9 ffa1 ffa1     ................
  40cce8:	ff8e ff8e ff85 ff85 ff81 ff81 ff8d ff8d     ................
  40ccf8:	ff9c ff9c ffb3 ffb3 ffca ffca ffda ffda     ................
  40cd08:	ffe5 ffe5 ffec ffec fff1 fff1 fff9 fff9     ................
  40cd18:	ffff ffff 0003 0003 0008 0008 000d 000d     ................
  40cd28:	0011 0011 0013 0013 001d 001d 0026 0026     ............&.&.
  40cd38:	0032 0032 003b 003b 0040 0040 0048 0048     2.2.;.;.@.@.H.H.
  40cd48:	004c 004c 004a 004a 0047 0047 003c 003c     L.L.J.J.G.G.<.<.
  40cd58:	002f 002f 0028 0028 001e 001e 0019 0019     /./.(.(.........
  40cd68:	0016 0016 0013 0013 000e 000e 000b 000b     ................
  40cd78:	000a 000a 0006 0006 000c 000c 000d 000d     ................
  40cd88:	0009 0009 0003 0003 fffb fffb ffe5 ffe5     ................
  40cd98:	ffcf ffcf ffb9 ffb9 ffab ffab ffa1 ffa1     ................
  40cda8:	ffa1 ffa1 ffa5 ffa5 ffb1 ffb1 ffc0 ffc0     ................
  40cdb8:	ffcc ffcc ffdb ffdb ffe1 ffe1 ffe7 ffe7     ................
  40cdc8:	ffeb ffeb ffef ffef fff4 fff4 fffc fffc     ................
  40cdd8:	0005 0005 0011 0011 0018 0018 001e 001e     ................
  40cde8:	0028 0028 0031 0031 003e 003e 0042 0042     (.(.1.1.>.>.B.B.
  40cdf8:	004d 004d 0054 0054 005b 005b 0059 0059     M.M.T.T.[.[.Y.Y.
  40ce08:	0054 0054 0045 0045 002d 002d 001c 001c     T.T.E.E.-.-.....
  40ce18:	000f 000f 0006 0006 0002 0002 0000 0000     ................
  40ce28:	0001 0001 0003 0003 0005 0005 0007 0007     ................
  40ce38:	0005 0005 fffe fffe fffc fffc fff1 fff1     ................
  40ce48:	ffe2 ffe2 ffd2 ffd2 ffbe ffbe ffac ffac     ................
  40ce58:	ff9f ff9f ff9c ff9c ffa3 ffa3 ffb1 ffb1     ................
  40ce68:	ffc3 ffc3 ffdc ffdc ffed ffed fffc fffc     ................
  40ce78:	fff9 fff9 fff5 fff5 ffed ffed ffed ffed     ................
  40ce88:	fff3 fff3 0001 0001 0018 0018 002b 002b     ............+.+.
  40ce98:	0037 0037 003c 003c 003c 003c 003e 003e     7.7.<.<.<.<.>.>.
  40cea8:	003f 003f 0043 0043 004b 004b 0052 0052     ?.?.C.C.K.K.R.R.
  40ceb8:	0054 0054 004e 004e 003b 003b 0022 0022     T.T.N.N.;.;.".".
  40cec8:	000a 000a fff6 fff6 ffec ffec ffea ffea     ................
  40ced8:	ffe7 ffe7 ffec ffec ffe9 ffe9 ffe2 ffe2     ................
  40cee8:	ffdb ffdb ffd8 ffd8 ffd4 ffd4 ffd8 ffd8     ................
  40cef8:	ffdf ffdf ffef ffef fff5 fff5 fff3 fff3     ................
  40cf08:	ffee ffee ffe2 ffe2 ffd6 ffd6 ffd6 ffd6     ................
  40cf18:	ffd9 ffd9 ffe6 ffe6 fffe fffe 0012 0012     ................
  40cf28:	0022 0022 0026 0026 001f 001f 000b 000b     ".".&.&.........
  40cf38:	fffd fffd ffef ffef ffec ffec fff4 fff4     ................
  40cf48:	0000 0000 0014 0014 001f 001f 0024 0024     ............$.$.
  40cf58:	001b 001b 0017 0017 0015 0015 0017 0017     ................
  40cf68:	0019 0019 001a 001a 0018 0018 0011 0011     ................
  40cf78:	0005 0005 fff6 fff6 ffea ffea ffe0 ffe0     ................
  40cf88:	ffe3 ffe3 ffe9 ffe9 fff5 fff5 fff5 fff5     ................
  40cf98:	fff6 fff6 ffeb ffeb ffe6 ffe6 ffde ffde     ................
  40cfa8:	ffdf ffdf ffe4 ffe4 ffed ffed fffc fffc     ................
  40cfb8:	0008 0008 0010 0010 0017 0017 0018 0018     ................
  40cfc8:	001b 001b 001e 001e 0023 0023 0024 0024     ........#.#.$.$.
  40cfd8:	002a 002a 0031 0031 0032 0032 0034 0034     *.*.1.1.2.2.4.4.
  40cfe8:	0031 0031 0025 0025 000f 000f fffe fffe     1.1.%.%.........
  40cff8:	ffee ffee ffe5 ffe5 ffe7 ffe7 ffed ffed     ................
  40d008:	fff4 fff4 fffd fffd fffd fffd fffb fffb     ................
  40d018:	fff7 fff7 fff5 fff5 fff5 fff5 fff0 fff0     ................
  40d028:	ffeb ffeb ffe9 ffe9 ffe8 ffe8 ffdf ffdf     ................
  40d038:	ffda ffda ffd9 ffd9 ffda ffda ffe4 ffe4     ................
  40d048:	ffed ffed fff9 fff9 0000 0000 0009 0009     ................
  40d058:	000b 000b 0009 0009 0009 0009 0009 0009     ................
  40d068:	000c 000c 0013 0013 001b 001b 0025 0025     ............%.%.
  40d078:	002e 002e 0038 0038 003f 003f 0040 0040     ....8.8.?.?.@.@.
  40d088:	003d 003d 0034 0034 0028 0028 0029 0029     =.=.4.4.(.(.).).
  40d098:	0029 0029 002a 002a 002d 002d 0026 0026     ).).*.*.-.-.&.&.
  40d0a8:	0016 0016 0005 0005 ffef ffef ffe2 ffe2     ................
  40d0b8:	ffd8 ffd8 ffd7 ffd7 ffdb ffdb ffdb ffdb     ................
  40d0c8:	ffdd ffdd ffd8 ffd8 ffd5 ffd5 ffd7 ffd7     ................
  40d0d8:	ffe0 ffe0 ffea ffea fff5 fff5 fffd fffd     ................
  40d0e8:	fff8 fff8 ffec ffec ffe1 ffe1 ffd7 ffd7     ................
  40d0f8:	ffd1 ffd1 ffd9 ffd9 ffe6 ffe6 fff5 fff5     ................
  40d108:	0001 0001 0003 0003 0002 0002 fffe fffe     ................
  40d118:	fffe fffe 0007 0007 0018 0018 002b 002b     ............+.+.
  40d128:	003d 003d 004a 004a 0051 0051 004f 004f     =.=.J.J.Q.Q.O.O.
  40d138:	004e 004e 004d 004d 004a 004a 004a 004a     N.N.M.M.J.J.J.J.
  40d148:	004b 004b 0049 0049 0045 0045 003a 003a     K.K.I.I.E.E.:.:.
  40d158:	002c 002c 001d 001d 000f 000f ffff ffff     ,.,.............
  40d168:	fff4 fff4 ffed ffed ffe2 ffe2 ffdb ffdb     ................
  40d178:	ffc9 ffc9 ffba ffba ffac ffac ffa2 ffa2     ................
  40d188:	ffa4 ffa4 ffaf ffaf ffbe ffbe ffd5 ffd5     ................
  40d198:	ffe3 ffe3 ffea ffea ffeb ffeb ffe3 ffe3     ................
  40d1a8:	ffd7 ffd7 ffd4 ffd4 ffd5 ffd5 ffe5 ffe5     ................
  40d1b8:	ffee ffee fff9 fff9 0003 0003 000a 000a     ................
  40d1c8:	0011 0011 001b 001b 0026 0026 0032 0032     ........&.&.2.2.
  40d1d8:	003b 003b 0045 0045 0045 0045 003f 003f     ;.;.E.E.E.E.?.?.
  40d1e8:	0037 0037 0033 0033 0036 0036 003d 003d     7.7.3.3.6.6.=.=.
  40d1f8:	0046 0046 0047 0047 0041 0041 0036 0036     F.F.G.G.A.A.6.6.
  40d208:	0028 0028 0018 0018 000b 000b ffff ffff     (.(.............
  40d218:	fff4 fff4 ffe7 ffe7 ffd7 ffd7 ffc5 ffc5     ................
  40d228:	ffb0 ffb0 ff9e ff9e ff92 ff92 ff90 ff90     ................
  40d238:	ff94 ff94 ffa0 ffa0 ffb1 ffb1 ffbc ffbc     ................
  40d248:	ffca ffca ffd9 ffd9 ffe7 ffe7 fff3 fff3     ................
  40d258:	fffd fffd 0003 0003 0006 0006 0007 0007     ................
  40d268:	000a 000a 0009 0009 000c 000c 0014 0014     ................
  40d278:	001a 001a 001d 001d 0022 0022 0027 0027     ........".".'.'.
  40d288:	002a 002a 002c 002c 002a 002a 0026 0026     *.*.,.,.*.*.&.&.
  40d298:	0027 0027 0029 0029 0023 0023 0023 0023     '.'.).).#.#.#.#.
  40d2a8:	0027 0027 0021 0021 0021 0021 0020 0020     '.'.!.!.!.!. . .
  40d2b8:	001a 001a 0015 0015 000f 000f 000c 000c     ................
  40d2c8:	000a 000a 0006 0006 0004 0004 fffa fffa     ................
  40d2d8:	ffee ffee ffe3 ffe3 ffd5 ffd5 ffc5 ffc5     ................
  40d2e8:	ffbc ffbc ffb5 ffb5 ffb2 ffb2 ffb2 ffb2     ................
  40d2f8:	ffb8 ffb8 ffc1 ffc1 ffd1 ffd1 ffe7 ffe7     ................
  40d308:	ffff ffff 0013 0013 0021 0021 0022 0022     ........!.!.".".
  40d318:	001f 001f 0015 0015 0016 0016 0016 0016     ................
  40d328:	001e 001e 002a 002a 0034 0034 0038 0038     ....*.*.4.4.8.8.
  40d338:	0038 0038 0037 0037 0033 0033 002d 002d     8.8.7.7.3.3.-.-.
  40d348:	002b 002b 0027 0027 0023 0023 001a 001a     +.+.'.'.#.#.....
  40d358:	000c 000c fffb fffb ffec ffec ffe7 ffe7     ................
  40d368:	ffed ffed fffd fffd 0006 0006 0010 0010     ................
  40d378:	000e 000e 0002 0002 fffa fffa ffed ffed     ................
  40d388:	ffe1 ffe1 ffe0 ffe0 ffdf ffdf ffdf ffdf     ................
  40d398:	ffe3 ffe3 ffe5 ffe5 ffe8 ffe8 ffe2 ffe2     ................
  40d3a8:	ffe3 ffe3 ffe6 ffe6 ffef ffef fff8 fff8     ................
  40d3b8:	ffff ffff 000a 000a 0010 0010 0015 0015     ................
  40d3c8:	001c 001c 0021 0021 0021 0021 0023 0023     ....!.!.!.!.#.#.
  40d3d8:	002d 002d 0030 0030 0039 0039 003f 003f     -.-.0.0.9.9.?.?.
  40d3e8:	0044 0044 0045 0045 003b 003b 0036 0036     D.D.E.E.;.;.6.6.
  40d3f8:	002c 002c 0021 0021 0021 0021 0018 0018     ,.,.!.!.!.!.....
  40d408:	0012 0012 000a 000a fffc fffc ffec ffec     ................
  40d418:	ffdb ffdb ffd4 ffd4 ffd5 ffd5 ffdc ffdc     ................
  40d428:	ffe3 ffe3 ffec ffec ffe8 ffe8 ffe6 ffe6     ................
  40d438:	ffdd ffdd ffd7 ffd7 ffd2 ffd2 ffd0 ffd0     ................
  40d448:	ffd6 ffd6 ffda ffda ffe2 ffe2 ffea ffea     ................
  40d458:	ffec ffec fff1 fff1 fff7 fff7 fffd fffd     ................
  40d468:	0003 0003 0006 0006 0007 0007 0005 0005     ................
  40d478:	0006 0006 0006 0006 0007 0007 000b 000b     ................
  40d488:	0018 0018 001e 001e 0024 0024 002d 002d     ........$.$.-.-.
  40d498:	0030 0030 0030 0030 0036 0036 0033 0033     0.0.0.0.6.6.3.3.
  40d4a8:	0031 0031 002b 002b 0022 0022 0018 0018     1.1.+.+.".".....
  40d4b8:	0011 0011 0009 0009 0008 0008 0002 0002     ................
  40d4c8:	ffff ffff fff5 fff5 ffe7 ffe7 ffdc ffdc     ................
  40d4d8:	ffce ffce ffc8 ffc8 ffbf ffbf ffba ffba     ................
  40d4e8:	ffba ffba ffb9 ffb9 ffb9 ffb9 ffbc ffbc     ................
  40d4f8:	ffb8 ffb8 ffb9 ffb9 ffba ffba ffc0 ffc0     ................
  40d508:	ffca ffca ffd9 ffd9 ffe8 ffe8 fffb fffb     ................
  40d518:	0009 0009 000e 000e 0013 0013 0013 0013     ................
  40d528:	000f 000f 0012 0012 0015 0015 0021 0021     ............!.!.
  40d538:	0027 0027 002a 002a 002c 002c 002b 002b     '.'.*.*.,.,.+.+.
  40d548:	0029 0029 0028 0028 002b 002b 0030 0030     ).).(.(.+.+.0.0.
  40d558:	0037 0037 0035 0035 0031 0031 0024 0024     7.7.5.5.1.1.$.$.
  40d568:	0010 0010 0000 0000 fff6 fff6 fff6 fff6     ................
  40d578:	fff8 fff8 fffb fffb fffc fffc ffef ffef     ................
  40d588:	ffdf ffdf ffd1 ffd1 ffc3 ffc3 ffc4 ffc4     ................
  40d598:	ffcc ffcc ffd3 ffd3 ffd8 ffd8 ffd8 ffd8     ................
  40d5a8:	ffd0 ffd0 ffc7 ffc7 ffbf ffbf ffbb ffbb     ................
  40d5b8:	ffbc ffbc ffc7 ffc7 ffd9 ffd9 ffec ffec     ................
  40d5c8:	0001 0001 0015 0015 0025 0025 002f 002f     ........%.%././.
  40d5d8:	0034 0034 0035 0035 0031 0031 0025 0025     4.4.5.5.1.1.%.%.
  40d5e8:	001b 001b 0014 0014 0010 0010 0010 0010     ................
  40d5f8:	0018 0018 0020 0020 0029 0029 002f 002f     .... . .).)././.
  40d608:	0033 0033 0034 0034 0036 0036 002d 002d     3.3.4.4.6.6.-.-.
  40d618:	0024 0024 0015 0015 0003 0003 fff6 fff6     $.$.............
  40d628:	ffec ffec ffe9 ffe9 fff4 fff4 0005 0005     ................
  40d638:	000e 000e 0014 0014 0011 0011 0008 0008     ................
  40d648:	fff8 fff8 ffed ffed ffe2 ffe2 ffdf ffdf     ................
  40d658:	ffdb ffdb ffe1 ffe1 ffe2 ffe2 ffde ffde     ................
  40d668:	ffd9 ffd9 ffd6 ffd6 ffd5 ffd5 ffd5 ffd5     ................
  40d678:	ffda ffda ffe7 ffe7 fff6 fff6 0006 0006     ................
  40d688:	0016 0016 0020 0020 0025 0025 0023 0023     .... . .%.%.#.#.
  40d698:	001e 001e 0014 0014 000f 000f 000a 000a     ................
  40d6a8:	0007 0007 0008 0008 000b 000b 000c 000c     ................
  40d6b8:	000f 000f 0018 0018 0026 0026 0033 0033     ........&.&.3.3.
  40d6c8:	0041 0041 0044 0044 0045 0045 0038 0038     A.A.D.D.E.E.8.8.
  40d6d8:	0024 0024 000e 000e fff8 fff8 fff4 fff4     $.$.............
  40d6e8:	fff5 fff5 0003 0003 0012 0012 001b 001b     ................
  40d6f8:	0020 0020 001d 001d 0015 0015 000c 000c      . .............
  40d708:	0003 0003 fff8 fff8 ffed ffed ffe1 ffe1     ................
  40d718:	ffd5 ffd5 ffc6 ffc6 ffb9 ffb9 ffb2 ffb2     ................
  40d728:	ffb1 ffb1 ffb6 ffb6 ffc3 ffc3 ffd3 ffd3     ................
  40d738:	ffe3 ffe3 fff5 fff5 0005 0005 0013 0013     ................
  40d748:	001e 001e 0023 0023 0026 0026 0022 0022     ....#.#.&.&.".".
  40d758:	0022 0022 0020 0020 0023 0023 001f 001f     ".". . .#.#.....
  40d768:	001c 001c 0013 0013 0011 0011 000f 000f     ................
  40d778:	001a 001a 0025 0025 0037 0037 0049 0049     ....%.%.7.7.I.I.
  40d788:	0044 0044 003c 003c 0024 0024 000c 000c     D.D.<.<.$.$.....
  40d798:	fff6 fff6 ffe6 ffe6 ffe0 ffe0 ffe6 ffe6     ................
  40d7a8:	fff1 fff1 fff9 fff9 fffc fffc 0003 0003     ................
  40d7b8:	0004 0004 000d 000d 0017 0017 001d 001d     ................
  40d7c8:	0024 0024 001d 001d 000c 000c fff2 fff2     $.$.............
  40d7d8:	ffda ffda ffc6 ffc6 ffbb ffbb ffb9 ffb9     ................
  40d7e8:	ffc5 ffc5 ffd8 ffd8 fff0 fff0 0002 0002     ................
  40d7f8:	0012 0012 001d 001d 0024 0024 0021 0021     ........$.$.!.!.
  40d808:	001b 001b 0016 0016 000d 000d 000b 000b     ................
  40d818:	0004 0004 fffe fffe fff4 fff4 fff4 fff4     ................
  40d828:	fff1 fff1 fffa fffa 000d 000d 0021 0021     ............!.!.
  40d838:	0033 0033 0039 0039 003a 003a 0027 0027     3.3.9.9.:.:.'.'.
  40d848:	0012 0012 fffb fffb ffe7 ffe7 ffdb ffdb     ................
  40d858:	ffd8 ffd8 ffde ffde ffe4 ffe4 fff3 fff3     ................
  40d868:	fffb fffb 000a 000a 0013 0013 001a 001a     ................
  40d878:	001e 001e 0020 0020 001c 001c 000f 000f     .... . .........
  40d888:	0000 0000 ffec ffec ffda ffda ffcd ffcd     ................
  40d898:	ffc9 ffc9 ffc5 ffc5 ffcb ffcb ffd9 ffd9     ................
  40d8a8:	ffe9 ffe9 fff5 fff5 0000 0000 0005 0005     ................
  40d8b8:	0008 0008 0006 0006 0002 0002 0000 0000     ................
  40d8c8:	fffc fffc 0002 0002 000b 000b 0014 0014     ................
  40d8d8:	0017 0017 0017 0017 000f 000f 000e 000e     ................
  40d8e8:	0010 0010 001d 001d 002b 002b 0039 0039     ........+.+.9.9.
  40d8f8:	0040 0040 0038 0038 0028 0028 0012 0012     @.@.8.8.(.(.....
  40d908:	fffb fffb ffe4 ffe4 ffd7 ffd7 ffd1 ffd1     ................
  40d918:	ffd3 ffd3 ffd3 ffd3 ffd7 ffd7 ffdc ffdc     ................
  40d928:	ffe7 ffe7 fff7 fff7 0006 0006 001a 001a     ................
  40d938:	0025 0025 001f 001f 0013 0013 ffff ffff     %.%.............
  40d948:	ffe5 ffe5 ffd4 ffd4 ffc5 ffc5 ffc3 ffc3     ................
  40d958:	ffcd ffcd ffde ffde fff1 fff1 0008 0008     ................
  40d968:	0014 0014 001c 001c 001d 001d 001c 001c     ................
  40d978:	0018 0018 0016 0016 0015 0015 0019 0019     ................
  40d988:	0013 0013 0011 0011 0010 0010 000d 000d     ................
  40d998:	000a 000a 000a 000a 0011 0011 001d 001d     ................
  40d9a8:	0024 0024 0027 0027 0026 0026 0019 0019     $.$.'.'.&.&.....
  40d9b8:	000e 000e 0003 0003 fff7 fff7 ffee ffee     ................
  40d9c8:	ffe5 ffe5 ffdc ffdc ffd2 ffd2 ffc8 ffc8     ................
  40d9d8:	ffc6 ffc6 ffcc ffcc ffd8 ffd8 ffee ffee     ................
  40d9e8:	0004 0004 0017 0017 0024 0024 0025 0025     ........$.$.%.%.
  40d9f8:	001c 001c 0011 0011 0001 0001 fff7 fff7     ................
  40da08:	ffef ffef ffee ffee fff0 fff0 fff7 fff7     ................
  40da18:	ffff ffff 0006 0006 000d 000d 0013 0013     ................
  40da28:	0019 0019 001c 001c 0019 0019 001a 001a     ................
  40da38:	0012 0012 000c 000c 0004 0004 0004 0004     ................
  40da48:	0003 0003 000c 000c 0015 0015 001b 001b     ................
  40da58:	001f 001f 0028 0028 002b 002b 002c 002c     ....(.(.+.+.,.,.
  40da68:	0023 0023 001d 001d 0013 0013 0009 0009     #.#.............
  40da78:	fff9 fff9 fff4 fff4 ffed ffed ffe5 ffe5     ................
  40da88:	ffe3 ffe3 ffe0 ffe0 ffdd ffdd ffde ffde     ................
  40da98:	ffe5 ffe5 ffe7 ffe7 fff2 fff2 fff7 fff7     ................
  40daa8:	fff8 fff8 fff7 fff7 fff3 fff3 ffed ffed     ................
  40dab8:	ffe9 ffe9 ffe4 ffe4 ffe8 ffe8 fff1 fff1     ................
  40dac8:	fff7 fff7 0006 0006 0009 0009 000a 000a     ................
  40dad8:	0005 0005 0004 0004 0002 0002 0002 0002     ................
  40dae8:	0005 0005 0008 0008 0011 0011 0018 0018     ................
  40daf8:	001a 001a 001f 001f 0022 0022 0022 0022     ........".".".".
  40db08:	0028 0028 0029 0029 002b 002b 002e 002e     (.(.).).+.+.....
  40db18:	002c 002c 002b 002b 0025 0025 001b 001b     ,.,.+.+.%.%.....
  40db28:	0016 0016 000d 000d 0004 0004 0001 0001     ................
  40db38:	fffe fffe fff8 fff8 fff8 fff8 fff1 fff1     ................
  40db48:	ffeb ffeb ffe9 ffe9 ffe5 ffe5 ffe9 ffe9     ................
  40db58:	ffee ffee fff6 fff6 fff9 fff9 fff7 fff7     ................
  40db68:	fff7 fff7 ffec ffec ffe2 ffe2 ffda ffda     ................
  40db78:	ffdd ffdd ffe0 ffe0 ffed ffed fffa fffa     ................
  40db88:	ffff ffff fffe fffe fffa fffa fff3 fff3     ................
  40db98:	fff4 fff4 fffc fffc 0004 0004 0013 0013     ................
  40dba8:	001c 001c 001f 001f 001d 001d 0018 0018     ................
  40dbb8:	0010 0010 0014 0014 001b 001b 0023 0023     ............#.#.
  40dbc8:	002e 002e 0034 0034 0037 0037 0035 0035     ....4.4.7.7.5.5.
  40dbd8:	002e 002e 0022 0022 0012 0012 000b 000b     ....".".........
  40dbe8:	0003 0003 fffe fffe fff6 fff6 ffee ffee     ................
  40dbf8:	ffec ffec ffe6 ffe6 ffe1 ffe1 ffdd ffdd     ................
  40dc08:	ffe0 ffe0 ffe3 ffe3 ffe7 ffe7 fff0 fff0     ................
  40dc18:	fff4 fff4 fff8 fff8 fff4 fff4 ffef ffef     ................
  40dc28:	ffe7 ffe7 ffe1 ffe1 ffe5 ffe5 ffea ffea     ................
  40dc38:	fff8 fff8 0002 0002 000a 000a 0005 0005     ................
  40dc48:	fff7 fff7 fff1 fff1 ffed ffed ffea ffea     ................
  40dc58:	fffb fffb 0005 0005 0012 0012 0015 0015     ................
  40dc68:	0013 0013 000c 000c 0007 0007 0008 0008     ................
  40dc78:	000c 000c 0017 0017 0021 0021 0029 0029     ........!.!.).).
  40dc88:	002e 002e 002e 002e 002a 002a 0023 0023     ........*.*.#.#.
  40dc98:	001c 001c 0011 0011 0004 0004 fffa fffa     ................
  40dca8:	fff2 fff2 ffed ffed ffe3 ffe3 ffdd ffdd     ................
  40dcb8:	ffd5 ffd5 ffd1 ffd1 ffd0 ffd0 ffd0 ffd0     ................
  40dcc8:	ffd5 ffd5 ffdd ffdd ffe4 ffe4 ffeb ffeb     ................
  40dcd8:	fff1 fff1 fff4 fff4 ffef ffef ffee ffee     ................
  40dce8:	fff0 fff0 fff3 fff3 0000 0000 000a 000a     ................
  40dcf8:	0017 0017 0017 0017 0011 0011 0006 0006     ................
  40dd08:	fffd fffd fff8 fff8 0000 0000 0007 0007     ................
  40dd18:	0014 0014 001e 001e 001e 001e 001c 001c     ................
  40dd28:	0013 0013 000b 000b 0005 0005 0003 0003     ................
  40dd38:	0008 0008 000f 000f 0016 0016 001f 001f     ................
  40dd48:	0024 0024 001e 001e 0016 0016 000a 000a     $.$.............
  40dd58:	0002 0002 fffd fffd fff9 fff9 fff8 fff8     ................
  40dd68:	fff7 fff7 fff0 fff0 ffe4 ffe4 ffd7 ffd7     ................
  40dd78:	ffcf ffcf ffcb ffcb ffd2 ffd2 ffdd ffdd     ................
  40dd88:	ffeb ffeb fffa fffa 0002 0002 0004 0004     ................
  40dd98:	0001 0001 fffb fffb fff9 fff9 0000 0000     ................
  40dda8:	000f 000f 0021 0021 0029 0029 0034 0034     ....!.!.).).4.4.
  40ddb8:	0031 0031 0029 0029 0022 0022 001f 001f     1.1.).).".".....
  40ddc8:	0022 0022 0029 0029 0030 0030 002f 002f     ".".).).0.0././.
  40ddd8:	0026 0026 001a 001a 000a 000a 0002 0002     &.&.............
  40dde8:	fffc fffc fff9 fff9 fff8 fff8 fffd fffd     ................
  40ddf8:	ffff ffff ffff ffff fffa fffa fff3 fff3     ................
  40de08:	ffeb ffeb ffe4 ffe4 ffdd ffdd ffe2 ffe2     ................
  40de18:	ffe6 ffe6 ffe7 ffe7 ffe9 ffe9 ffe4 ffe4     ................
  40de28:	ffdb ffdb ffcf ffcf ffc5 ffc5 ffc8 ffc8     ................
  40de38:	ffd0 ffd0 ffe4 ffe4 fff9 fff9 0010 0010     ................
  40de48:	0021 0021 0028 0028 002a 002a 002b 002b     !.!.(.(.*.*.+.+.
  40de58:	002d 002d 002f 002f 0034 0034 003d 003d     -.-././.4.4.=.=.
  40de68:	0047 0047 0049 0049 0049 0049 0040 0040     G.G.I.I.I.I.@.@.
  40de78:	003c 003c 003e 003e 0042 0042 0045 0045     <.<.>.>.B.B.E.E.
  40de88:	0046 0046 0042 0042 0037 0037 0024 0024     F.F.B.B.7.7.$.$.
  40de98:	0007 0007 fff0 fff0 ffda ffda ffcf ffcf     ................
  40dea8:	ffca ffca ffcc ffcc ffd2 ffd2 ffd7 ffd7     ................
  40deb8:	ffd7 ffd7 ffcf ffcf ffc5 ffc5 ffbe ffbe     ................
  40dec8:	ffb8 ffb8 ffb9 ffb9 ffc2 ffc2 ffcd ffcd     ................
  40ded8:	ffd8 ffd8 ffdd ffdd ffdf ffdf ffdc ffdc     ................
  40dee8:	ffdb ffdb ffdd ffdd ffed ffed fffa fffa     ................
  40def8:	0012 0012 001e 001e 002b 002b 0033 0033     ........+.+.3.3.
  40df08:	0031 0031 0034 0034 0036 0036 003b 003b     1.1.4.4.6.6.;.;.
  40df18:	0041 0041 0048 0048 004f 004f 0050 0050     A.A.H.H.O.O.P.P.
  40df28:	004e 004e 0048 0048                         N.N.H.H.

0040df30 <click_low>:
  40df30:	00df 00df 058f 058f 12a1 12a1 21a5 21a5     .............!.!
  40df40:	2ded 2ded 3860 3860 3968 3968 29a8 29a8     .-.-`8`8h9h9.).)
  40df50:	0e12 0e12 ef21 ef21 d39c d39c c50a c50a     ....!.!.........
  40df60:	c940 c940 dad8 dad8 f035 f035 0054 0054     @.@.....5.5.T.T.
  40df70:	0489 0489 fd52 fd52 f2ea f2ea ea8a ea8a     ....R.R.........
  40df80:	e597 e597 e842 e842 ec47 ec47 f089 f089     ....B.B.G.G.....
  40df90:	f46d f46d f6f0 f6f0 f85a f85a fbd0 fbd0     m.m.....Z.Z.....
  40dfa0:	01a0 01a0 0461 0461 fe43 fe43 f300 f300     ....a.a.C.C.....
  40dfb0:	e642 e642 d7ba d7ba d127 d127 dcdf dcdf     B.B.....'.'.....
  40dfc0:	f839 f839 19cd 19cd 38be 38be 4961 4961     9.9......8.8aIaI
  40dfd0:	43de 43de 2d81 2d81 130a 130a fe9a fe9a     .C.C.-.-........
  40dfe0:	f788 f788 fd8c fd8c 0938 0938 126f 126f     ........8.8.o.o.
  40dff0:	17a5 17a5 1804 1804 12de 12de 0d1c 0d1c     ................
  40e000:	06e5 06e5 02c1 02c1 0021 0021 fc5a fc5a     ........!.!.Z.Z.
  40e010:	f688 f688 f13e f13e f20a f20a fd75 fd75     ....>.>.....u.u.
  40e020:	0e51 0e51 2043 2043 2fd4 2fd4 320e 320e     Q.Q.C C ././.2.2
  40e030:	201e 201e 0042 0042 dd26 dd26 c099 c099     . . B.B.&.&.....
  40e040:	b5c0 b5c0 bfe8 bfe8 d620 d620 ed12 ed12     ........ . .....
  40e050:	fcbb fcbb ff4f ff4f f775 f775 ece9 ece9     ....O.O.u.u.....
  40e060:	e5a9 e5a9 e13e e13e e3f1 e3f1 ea73 ea73     ....>.>.....s.s.
  40e070:	f151 f151 f862 f862 fe03 fe03 0331 0331     Q.Q.b.b.....1.1.
  40e080:	0a38 0a38 12d4 12d4 186a 186a 146a 146a     8.8.....j.j.j.j.
  40e090:	070d 070d f69e f69e e4f5 e4f5 d8f6 d8f6     ................
  40e0a0:	ddf6 ddf6 f4e1 f4e1 1480 1480 3385 3385     .............3.3
  40e0b0:	47d7 47d7 4800 4800 35cf 35cf 1c1b 1c1b     .G.G.H.H.5.5....
  40e0c0:	04ee 04ee f7e8 f7e8 f864 f864 00e4 00e4     ........d.d.....
  40e0d0:	09ea 09ea 1000 1000 137c 137c 1118 1118     ........|.|.....
  40e0e0:	0ca9 0ca9 0726 0726 01be 01be fde6 fde6     ....&.&.........
  40e0f0:	f9a2 f9a2 f34d f34d ecd4 ecd4 eb13 eb13     ....M.M.........
  40e100:	f3cd f3cd 048d 048d 170e 170e 288c 288c     .............(.(
  40e110:	30a9 30a9 2608 2608 0ac2 0ac2 e905 e905     .0.0.&.&........
  40e120:	ca57 ca57 b980 b980 bd14 bd14 cfc5 cfc5     W.W.............
  40e130:	e653 e653 f8a6 f8a6 001d 001d fc11 fc11     S.S.............
  40e140:	f274 f274 eaaa eaaa e596 e596 e62d e62d     t.t.........-.-.
  40e150:	ed08 ed08 f498 f498 fca8 fca8 0334 0334     ............4.4.
  40e160:	0848 0848 0db1 0db1 149c 149c 19df 19df     H.H.............
  40e170:	17e2 17e2 0c01 0c01 fc20 fc20 eb2c eb2c     ........ . .,.,.
  40e180:	dcc0 dcc0 db7d db7d ec4f ec4f 087d 087d     ....}.}.O.O.}.}.
  40e190:	26c0 26c0 3e49 3e49 450c 450c 389f 389f     .&.&I>I>.E.E.8.8
  40e1a0:	216e 216e 09ba 09ba f9a4 f9a4 f658 f658     n!n!........X.X.
  40e1b0:	fd07 fd07 0604 0604 0cda 0cda 0fa5 0fa5     ................
  40e1c0:	0e93 0e93 0b16 0b16 0622 0622 00ca 00ca     ........".".....
  40e1d0:	fced fced f9fc f9fc f51d f51d ef1f ef1f     ................
  40e1e0:	ea66 ea66 e81a e81a e971 e971 eee8 eee8     f.f.....q.q.....
  40e1f0:	f60f f60f fb5d fb5d fcd2 fcd2 f9ed f9ed     ....].].........
  40e200:	f406 f406 ee5d ee5d ec1e ec1e ee54 ee54     ....].].....T.T.
  40e210:	f33c f33c f824 f824 fbd4 fbd4 fe2e fe2e     <.<.$.$.........
  40e220:	ff27 ff27 ff34 ff34 fef3 fef3 fed2 fed2     '.'.4.4.........
  40e230:	ff53 ff53 011f 011f 040d 040d 0715 0715     S.S.............
  40e240:	0986 0986 0b6f 0b6f 0d1b 0d1b 0ea7 0ea7     ....o.o.........
  40e250:	0f79 0f79 0ef9 0ef9 0d72 0d72 0b51 0b51     y.y.....r.r.Q.Q.
  40e260:	08f5 08f5 0721 0721 0629 0629 05bd 05bd     ....!.!.).).....
  40e270:	05bc 05bc 061d 061d 0675 0675 0666 0666     ........u.u.f.f.
  40e280:	05f6 05f6 04fc 04fc 037b 037b 01b9 01b9     ........{.{.....
  40e290:	ffa1 ffa1 fd46 fd46 fb32 fb32 fa03 fa03     ....F.F.2.2.....
  40e2a0:	f9d8 f9d8 fa80 fa80 fba7 fba7 fc9a fc9a     ................
  40e2b0:	fcb8 fcb8 fc45 fc45 fb5f fb5f fa13 fa13     ....E.E._._.....
  40e2c0:	f8e6 f8e6 f864 f864 f8f3 f8f3 fa57 fa57     ....d.d.....W.W.
  40e2d0:	fbed fbed fd38 fd38 fdf5 fdf5 fe33 fe33     ....8.8.....3.3.
  40e2e0:	fe47 fe47 fe70 fe70 fead fead ff19 ff19     G.G.p.p.........
  40e2f0:	ffa6 ffa6 002b 002b 0091 0091 00b5 00b5     ....+.+.........
  40e300:	00ba 00ba 00fd 00fd 019f 019f 028a 028a     ................
  40e310:	0390 0390 0460 0460 04be 04be 04a9 04a9     ....`.`.........
  40e320:	046d 046d 0457 0457 044d 044d 0444 0444     m.m.W.W.M.M.D.D.
  40e330:	0424 0424 03ae 03ae 02d1 02d1 01ca 01ca     $.$.............
  40e340:	00fb 00fb 0091 0091 0087 0087 00c7 00c7     ................
  40e350:	00fd 00fd 00d6 00d6 004f 004f ff86 ff86     ........O.O.....
  40e360:	feb6 feb6 fe1b fe1b fdec fdec fe2e fe2e     ................
  40e370:	feb7 feb7 ff30 ff30 ff4b ff4b feff feff     ....0.0.K.K.....
  40e380:	fe74 fe74 fde1 fde1 fd9e fd9e fdd2 fdd2     t.t.............
  40e390:	fe49 fe49 fe97 fe97 fe93 fe93 fe5b fe5b     I.I.........[.[.
  40e3a0:	fe20 fe20 fe0c fe0c fe5f fe5f ff17 ff17      . ....._._.....
  40e3b0:	fff9 fff9 00b7 00b7 0122 0122 010a 010a     ........".".....
  40e3c0:	0096 0096 0028 0028 0009 0009 003c 003c     ....(.(.....<.<.
  40e3d0:	00a1 00a1 00f4 00f4 00fa 00fa 00b8 00b8     ................
  40e3e0:	0035 0035 ff99 ff99 ff4d ff4d ff86 ff86     5.5.....M.M.....
  40e3f0:	000c 000c 009c 009c 00f4 00f4 00d0 00d0     ................
  40e400:	003e 003e ffb4 ffb4 ff79 ff79 ff94 ff94     >.>.....y.y.....
  40e410:	fffc fffc 007e 007e 00c9 00c9 0098 0098     ....~.~.........
  40e420:	0011 0011 ff5e ff5e feb1 feb1 fe4e fe4e     ....^.^.....N.N.
  40e430:	fe73 fe73 fee6 fee6 ff59 ff59 ffa4 ffa4     s.s.....Y.Y.....
  40e440:	ffab ffab ff8e ff8e ff80 ff80 ffae ffae     ................
  40e450:	0015 0015 007c 007c 00bc 00bc 00ab 00ab     ....|.|.........
  40e460:	0057 0057 ffec ffec ff9e ff9e ff89 ff89     W.W.............
  40e470:	ffbd ffbd 0019 0019 005c 005c 0064 0064     ........\.\.d.d.
  40e480:	0026 0026 ffbf ffbf ff60 ff60 ff5c ff5c     &.&.....`.`.\.\.
  40e490:	ffb4 ffb4 0042 0042 00c4 00c4 010e 010e     ....B.B.........
  40e4a0:	00f2 00f2 0080 0080 fff9 fff9 ff8d ff8d     ................
  40e4b0:	ff52 ff52 ff48 ff48 ff4d ff4d ff3a ff3a     R.R.H.H.M.M.:.:.
  40e4c0:	ff00 ff00 feaf feaf fe67 fe67 fe58 fe58     ........g.g.X.X.
  40e4d0:	fe9c fe9c ff1c ff1c ffad ffad 0011 0011     ................
  40e4e0:	0024 0024 ffeb ffeb ff98 ff98 ff58 ff58     $.$.........X.X.
  40e4f0:	ff4d ff4d ff76 ff76 ffb2 ffb2 ffcf ffcf     M.M.v.v.........
  40e500:	ffb4 ffb4 ff71 ff71 ff1c ff1c fedd fedd     ....q.q.........
  40e510:	fed9 fed9 ff1e ff1e ff99 ff99 0010 0010     ................
  40e520:	005c 005c 0074 0074 006c 006c 0066 0066     \.\.t.t.l.l.f.f.
  40e530:	0085 0085 00c4 00c4 0117 0117 0153 0153     ............S.S.
  40e540:	0154 0154 011b 011b 00b7 00b7 0046 0046     T.T.........F.F.
  40e550:	fff9 fff9 ffec ffec 0017 0017 004d 004d     ............M.M.
  40e560:	006c 006c 005a 005a 000f 000f ffb3 ffb3     l.l.Z.Z.........
  40e570:	ff7a ff7a ff76 ff76 ff95 ff95 ffc6 ffc6     z.z.v.v.........
  40e580:	fff2 fff2 fffe fffe ffd7 ffd7 ff8e ff8e     ................
  40e590:	ff4f ff4f ff26 ff26 ff20 ff20 ff3a ff3a     O.O.&.&. . .:.:.
  40e5a0:	ff57 ff57 ff62 ff62 ff59 ff59 ff47 ff47     W.W.b.b.Y.Y.G.G.
  40e5b0:	ff3a ff3a ff44 ff44 ff75 ff75 ffb3 ffb3     :.:.D.D.u.u.....
  40e5c0:	ffec ffec ffff ffff fff8 fff8 ffda ffda     ................
  40e5d0:	ffb7 ffb7 ffa8 ffa8 ffc2 ffc2 0006 0006     ................
  40e5e0:	0050 0050 0088 0088 009f 009f 0089 0089     P.P.............
  40e5f0:	006b 006b 004a 004a 0042 0042 0059 0059     k.k.J.J.B.B.Y.Y.
  40e600:	007a 007a 0090 0090 0099 0099 0093 0093     z.z.............
  40e610:	007c 007c 006d 006d 006c 006c 0073 0073     |.|.m.m.l.l.s.s.
  40e620:	0087 0087 0098 0098 0095 0095 007d 007d     ............}.}.
  40e630:	004b 004b 0012 0012 ffe3 ffe3 ffcb ffcb     K.K.............
  40e640:	ffd9 ffd9 ffee ffee fffc fffc fff8 fff8     ................
  40e650:	ffe9 ffe9 ffd5 ffd5 ffbf ffbf ffa5 ffa5     ................
  40e660:	ff87 ff87 ff74 ff74 ff5b ff5b ff47 ff47     ....t.t.[.[.G.G.
  40e670:	ff36 ff36 ff3d ff3d ff58 ff58 ff84 ff84     6.6.=.=.X.X.....
  40e680:	ffbe ffbe ffec ffec 0001 0001 fffa fffa     ................
  40e690:	ffe7 ffe7 ffc7 ffc7 ffb1 ffb1 ffbb ffbb     ................
  40e6a0:	ffe0 ffe0 0019 0019 0052 0052 0081 0081     ........R.R.....
  40e6b0:	0093 0093 0085 0085 0064 0064 003d 003d     ........d.d.=.=.
  40e6c0:	001c 001c 0012 0012 001c 001c 0034 0034     ............4.4.
  40e6d0:	0054 0054 0069 0069 0077 0077 007b 007b     T.T.i.i.w.w.{.{.
  40e6e0:	007a 007a 0069 0069 004a 004a 0026 0026     z.z.i.i.J.J.&.&.
  40e6f0:	0001 0001 ffe8 ffe8 ffd5 ffd5 ffdc ffdc     ................
  40e700:	fff2 fff2 000d 000d 002a 002a 003c 003c     ........*.*.<.<.
  40e710:	0035 0035 0017 0017 ffe4 ffe4 ffb1 ffb1     5.5.............
  40e720:	ff94 ff94 ff93 ff93 ffb0 ffb0 ffd9 ffd9     ................
  40e730:	fffb fffb 0014 0014 001c 001c 0013 0013     ................
  40e740:	0003 0003 fff1 fff1 ffe5 ffe5 ffea ffea     ................
  40e750:	fff3 fff3 fff8 fff8 0001 0001 0012 0012     ................
  40e760:	0024 0024 003f 003f 0057 0057 0063 0063     $.$.?.?.W.W.c.c.
  40e770:	005d 005d 0043 0043 0021 0021 fff3 fff3     ].].C.C.!.!.....
  40e780:	ffd6 ffd6 ffcb ffcb ffe2 ffe2 0009 0009     ................
  40e790:	002e 002e 0048 0048 0048 0048 003b 003b     ....H.H.H.H.;.;.
  40e7a0:	0028 0028 0013 0013 ffff ffff fff2 fff2     (.(.............
  40e7b0:	ffe5 ffe5 ffdd ffdd ffda ffda ffd9 ffd9     ................
  40e7c0:	ffd8 ffd8 ffdf ffdf ffee ffee fff3 fff3     ................
  40e7d0:	fff0 fff0 ffed ffed ffe4 ffe4 ffdc ffdc     ................
  40e7e0:	ffe5 ffe5 fffa fffa 0012 0012 002a 002a     ............*.*.
  40e7f0:	0037 0037 0030 0030 001a 001a 0000 0000     7.7.0.0.........
  40e800:	ffe3 ffe3 ffca ffca ffc0 ffc0 ffba ffba     ................
  40e810:	ffc2 ffc2 ffcc ffcc ffdd ffdd ffea ffea     ................
  40e820:	fffd fffd 0016 0016 002b 002b 003c 003c     ........+.+.<.<.
  40e830:	0052 0052 005b 005b 0059 0059 0052 0052     R.R.[.[.Y.Y.R.R.
  40e840:	0044 0044 0033 0033 0019 0019 ffff ffff     D.D.3.3.........
  40e850:	ffe7 ffe7 ffd5 ffd5 ffc6 ffc6 ffc8 ffc8     ................
  40e860:	ffce ffce ffdc ffdc ffe5 ffe5 ffed ffed     ................
  40e870:	fffc fffc 0002 0002 000a 000a 0012 0012     ................
  40e880:	001c 001c 002a 002a 0035 0035 003b 003b     ....*.*.5.5.;.;.
  40e890:	0035 0035 0017 0017 fff4 fff4 ffd5 ffd5     5.5.............
  40e8a0:	ffb4 ffb4 ff9a ff9a ff8d ff8d ff8a ff8a     ................
  40e8b0:	ff95 ff95 ffa5 ffa5 ffc4 ffc4 ffe9 ffe9     ................
  40e8c0:	0008 0008 0025 0025 003e 003e 003f 003f     ....%.%.>.>.?.?.
  40e8d0:	0033 0033 001d 001d ffff ffff ffe8 ffe8     3.3.............
  40e8e0:	ffde ffde ffe7 ffe7 fff1 fff1 fffd fffd     ................
  40e8f0:	fffe fffe fff3 fff3 ffd7 ffd7 ffad ffad     ................
  40e900:	ff8a ff8a ff7e ff7e ff8f ff8f ffbb ffbb     ....~.~.........
  40e910:	0002 0002 0059 0059 00ac 00ac 00eb 00eb     ....Y.Y.........
  40e920:	0103 0103 00f4 00f4 00ba 00ba 006c 006c     ............l.l.
  40e930:	001b 001b ffdb ffdb ffae ffae ffa2 ffa2     ................
  40e940:	ffb8 ffb8 ffda ffda 0001 0001 001a 001a     ................
  40e950:	001c 001c 000f 000f 0003 0003 fff3 fff3     ................
  40e960:	ffe5 ffe5 ffd9 ffd9 ffe3 ffe3 fffe fffe     ................
  40e970:	002a 002a 0055 0055 0069 0069 0067 0067     *.*.U.U.i.i.g.g.
  40e980:	0047 0047 0015 0015 ffc5 ffc5 ff70 ff70     G.G.........p.p.
  40e990:	ff28 ff28 ff05 ff05 ff12 ff12 ff4e ff4e     (.(.........N.N.
  40e9a0:	ff9e ff9e ffeb ffeb 002a 002a 0047 0047     ........*.*.G.G.
  40e9b0:	0045 0045 002a 002a 0001 0001 ffd5 ffd5     E.E.*.*.........
  40e9c0:	ffb8 ffb8 ffb3 ffb3 ffbe ffbe ffd3 ffd3     ................
  40e9d0:	ffee ffee 0012 0012 002a 002a 0031 0031     ........*.*.1.1.
  40e9e0:	0021 0021 ffff ffff ffd8 ffd8 ffbd ffbd     !.!.............
  40e9f0:	ffb4 ffb4 ffc2 ffc2 fff4 fff4 0046 0046     ............F.F.
  40ea00:	0094 0094 00cd 00cd 00e0 00e0 00c3 00c3     ................
  40ea10:	007e 007e 0034 0034 fff0 fff0 ffc0 ffc0     ~.~.4.4.........
  40ea20:	ffb0 ffb0 ffbb ffbb ffd8 ffd8 fffd fffd     ................
  40ea30:	001e 001e 002b 002b 0029 0029 001a 001a     ....+.+.).).....
  40ea40:	000a 000a fff0 fff0 ffda ffda ffc8 ffc8     ................
  40ea50:	ffc0 ffc0 ffcf ffcf ffec ffec 000b 000b     ................
  40ea60:	001d 001d 0021 0021 000e 000e ffea ffea     ....!.!.........
  40ea70:	ffc0 ffc0 ff9a ff9a ff89 ff89 ff93 ff93     ................
  40ea80:	ffbb ffbb ffeb ffeb 0017 0017 0034 0034     ............4.4.
  40ea90:	0043 0043 0040 0040 003b 003b 0035 0035     C.C.@.@.;.;.5.5.
  40eaa0:	0030 0030 001e 001e 0005 0005 ffea ffea     0.0.............
  40eab0:	ffce ffce ffbb ffbb ffbf ffbf ffde ffde     ................
  40eac0:	0008 0008 002b 002b 0035 0035 0028 0028     ....+.+.5.5.(.(.
  40ead0:	0006 0006 ffe3 ffe3 ffcc ffcc ffd4 ffd4     ................
  40eae0:	fff2 fff2 0020 0020 004b 004b 0060 0060     .... . .K.K.`.`.
  40eaf0:	0055 0055 0034 0034 0010 0010 ffe6 ffe6     U.U.4.4.........
  40eb00:	ffca ffca ffb8 ffb8 ffb5 ffb5 ffc0 ffc0     ................
  40eb10:	ffc9 ffc9 ffdc ffdc fff7 fff7 0012 0012     ................
  40eb20:	0030 0030 0041 0041 0044 0044 002a 002a     0.0.A.A.D.D.*.*.
  40eb30:	0000 0000 ffd5 ffd5 ffc2 ffc2 ffc4 ffc4     ................
  40eb40:	ffd8 ffd8 fffb fffb 0018 0018 0027 0027     ............'.'.
  40eb50:	0021 0021 0007 0007 ffe1 ffe1 ffc4 ffc4     !.!.............
  40eb60:	ffb5 ffb5 ffc3 ffc3 ffdd ffdd 0006 0006     ................
  40eb70:	002d 002d 0051 0051 0063 0063 0060 0060     -.-.Q.Q.c.c.`.`.
  40eb80:	0051 0051 0034 0034 0016 0016 ffec ffec     Q.Q.4.4.........
  40eb90:	ffbf ffbf ff98 ff98 ff7c ff7c ff7c ff7c     ........|.|.|.|.
  40eba0:	ff99 ff99 ffcb ffcb fffe fffe 0032 0032     ............2.2.
  40ebb0:	0048 0048 0046 0046 0031 0031 000b 000b     H.H.F.F.1.1.....
  40ebc0:	ffe0 ffe0 ffc4 ffc4 ffbe ffbe ffd0 ffd0     ................
  40ebd0:	fff2 fff2 000e 000e 0022 0022 0022 0022     ........".".".".
  40ebe0:	0011 0011 fff7 fff7 ffd9 ffd9 ffc1 ffc1     ................
  40ebf0:	ffb9 ffb9 ffbc ffbc ffc8 ffc8 ffda ffda     ................
  40ec00:	fff0 fff0 0005 0005 0015 0015 0025 0025     ............%.%.
  40ec10:	002b 002b 0027 0027 0018 0018 0003 0003     +.+.'.'.........
  40ec20:	ffed ffed ffd1 ffd1 ffc7 ffc7 ffd2 ffd2     ................
  40ec30:	fff3 fff3 001c 001c 0050 0050 0074 0074     ........P.P.t.t.
  40ec40:	0082 0082 0079 0079 0062 0062 0043 0043     ....y.y.b.b.C.C.
  40ec50:	0028 0028 0019 0019 000d 000d 0006 0006     (.(.............
  40ec60:	0008 0008 000d 000d 0013 0013 0020 0020     ............ . .
  40ec70:	0028 0028 0020 0020 0007 0007 ffe9 ffe9     (.(. . .........
  40ec80:	ffc4 ffc4 ffa6 ffa6 ff99 ff99 ffa5 ffa5     ................
  40ec90:	ffc3 ffc3 fff0 fff0 0012 0012 001f 001f     ................
  40eca0:	000f 000f ffef ffef ffcd ffcd ffa9 ffa9     ................
  40ecb0:	ff9d ff9d ffb4 ffb4 ffd3 ffd3 fff5 fff5     ................
  40ecc0:	000e 000e 0014 0014 000e 000e fffe fffe     ................
  40ecd0:	ffef ffef ffe1 ffe1 ffd7 ffd7 ffcd ffcd     ................
  40ece0:	ffc9 ffc9 ffc9 ffc9 ffd7 ffd7 fff0 fff0     ................
  40ecf0:	000c 000c 0023 0023 002b 002b 0029 0029     ....#.#.+.+.).).
  40ed00:	001c 001c 0006 0006 fffb fffb 0000 0000     ................
  40ed10:	0013 0013 0036 0036 0058 0058 0071 0071     ....6.6.X.X.q.q.
  40ed20:	007b 007b 006f 006f 0055 0055 003d 003d     {.{.o.o.U.U.=.=.
  40ed30:	0024 0024 0017 0017 0013 0013 000d 000d     $.$.............
  40ed40:	0005 0005 fff9 fff9 ffeb ffeb ffe6 ffe6     ................
  40ed50:	ffea ffea fff4 fff4 fffb fffb fffb fffb     ................
  40ed60:	fff2 fff2 ffe8 ffe8 ffde ffde ffd0 ffd0     ................
  40ed70:	ffc5 ffc5 ffc8 ffc8 ffd5 ffd5 ffec ffec     ................
  40ed80:	0001 0001 000c 000c 0009 0009 0003 0003     ................
  40ed90:	ffff ffff fff9 fff9 fffa fffa 0005 0005     ................
  40eda0:	000e 000e 0014 0014 001f 001f 0025 0025     ............%.%.
  40edb0:	0026 0026 0023 0023 001d 001d 000b 000b     &.&.#.#.........
  40edc0:	fffa fffa ffe7 ffe7 ffd3 ffd3 ffc2 ffc2     ................
  40edd0:	ffbc ffbc ffbf ffbf ffc9 ffc9 ffe2 ffe2     ................
  40ede0:	0001 0001 0020 0020 0035 0035 0041 0041     .... . .5.5.A.A.
  40edf0:	0043 0043 003e 003e 0035 0035 0031 0031     C.C.>.>.5.5.1.1.
  40ee00:	0028 0028 0027 0027 0025 0025 0024 0024     (.(.'.'.%.%.$.$.
  40ee10:	0021 0021 001d 001d 0014 0014 0000 0000     !.!.............
  40ee20:	ffe4 ffe4 ffc8 ffc8 ffb8 ffb8 ffb5 ffb5     ................
  40ee30:	ffc9 ffc9 ffe3 ffe3 0004 0004 001d 001d     ................
  40ee40:	002a 002a 0023 0023 000d 000d fff4 fff4     *.*.#.#.........
  40ee50:	ffe0 ffe0 ffd1 ffd1 ffd1 ffd1 ffd7 ffd7     ................
  40ee60:	ffe8 ffe8 fff8 fff8 0005 0005 0007 0007     ................
  40ee70:	000a 000a 0009 0009 0008 0008 0007 0007     ................
  40ee80:	fffe fffe fff6 fff6 ffef ffef fff0 fff0     ................
  40ee90:	fffa fffa 000f 000f 001e 001e 0027 0027     ............'.'.
  40eea0:	001d 001d 0002 0002 ffe2 ffe2 ffcb ffcb     ................
  40eeb0:	ffbc ffbc ffba ffba ffcf ffcf ffe6 ffe6     ................
  40eec0:	fffd fffd 0010 0010 0019 0019 0014 0014     ................
  40eed0:	0016 0016 0017 0017 0016 0016 0014 0014     ................
  40eee0:	0011 0011 0007 0007 fffc fffc fffa fffa     ................
  40eef0:	fffa fffa fffb fffb ffff ffff 0008 0008     ................
  40ef00:	0003 0003 fffc fffc fff5 fff5 ffef ffef     ................
  40ef10:	fff1 fff1 fffe fffe 000e 000e 001a 001a     ................
  40ef20:	0026 0026 002b 002b 001e 001e 0010 0010     &.&.+.+.........
  40ef30:	0005 0005 fff9 fff9 fff7 fff7 0001 0001     ................
  40ef40:	0006 0006 000a 000a 000a 000a 0011 0011     ................
  40ef50:	0015 0015 0015 0015 001e 001e 001d 001d     ................
  40ef60:	0011 0011 0002 0002 fff5 fff5 ffe3 ffe3     ................
  40ef70:	ffd4 ffd4 ffd5 ffd5 ffdb ffdb ffe5 ffe5     ................
  40ef80:	ffee ffee ffed ffed ffe1 ffe1 ffcf ffcf     ................
  40ef90:	ffc1 ffc1 ffb8 ffb8 ffb5 ffb5 ffbf ffbf     ................
  40efa0:	ffd2 ffd2 ffe5 ffe5 fffb fffb 000c 000c     ................
  40efb0:	0019 0019 0022 0022 0027 0027 0023 0023     ....".".'.'.#.#.
  40efc0:	0020 0020 001b 001b 0012 0012 fffe fffe      . .............
  40efd0:	fffe fffe 0002 0002 0006 0006 0011 0011     ................
  40efe0:	0019 0019 0023 0023 0020 0020 000e 000e     ....#.#. . .....
  40eff0:	fff7 fff7 ffe7 ffe7 ffe4 ffe4 fff2 fff2     ................
  40f000:	000b 000b 0024 0024 003c 003c 004a 004a     ....$.$.<.<.J.J.
  40f010:	0049 0049 003d 003d 0029 0029 0015 0015     I.I.=.=.).).....
  40f020:	0008 0008 0005 0005 0004 0004 0004 0004     ................
  40f030:	0009 0009 0005 0005 0000 0000 fff3 fff3     ................
  40f040:	ffe7 ffe7 ffd7 ffd7 ffca ffca ffba ffba     ................
  40f050:	ffaa ffaa ff99 ff99 ff8a ff8a ff8d ff8d     ................
  40f060:	ff96 ff96 ffaa ffaa ffbc ffbc ffcc ffcc     ................
  40f070:	ffcd ffcd ffd1 ffd1 ffcc ffcc ffc8 ffc8     ................
  40f080:	ffc1 ffc1 ffca ffca ffd6 ffd6 ffe1 ffe1     ................
  40f090:	ffef ffef fffe fffe 0005 0005 000b 000b     ................
  40f0a0:	000e 000e 000e 000e 000f 000f 0015 0015     ................
  40f0b0:	001f 001f 0026 0026 0035 0035 0042 0042     ....&.&.5.5.B.B.
  40f0c0:	004a 004a 0056 0056 0061 0061 0063 0063     J.J.V.V.a.a.c.c.
  40f0d0:	0059 0059 0046 0046 0026 0026 000c 000c     Y.Y.F.F.&.&.....
  40f0e0:	fff5 fff5 ffef ffef fff8 fff8 000f 000f     ................
  40f0f0:	0028 0028 0047 0047 0055 0055 0055 0055     (.(.G.G.U.U.U.U.
  40f100:	0042 0042 0020 0020 0004 0004 ffe9 ffe9     B.B. . .........
  40f110:	ffe1 ffe1 ffe1 ffe1 ffe6 ffe6 ffec ffec     ................
  40f120:	ffe8 ffe8 ffdf ffdf ffcd ffcd ffbb ffbb     ................
  40f130:	ffa8 ffa8 ff99 ff99 ff95 ff95 ff92 ff92     ................
  40f140:	ff9a ff9a ffa3 ffa3 ffb3 ffb3 ffc6 ffc6     ................
  40f150:	ffd6 ffd6 ffe2 ffe2 ffe8 ffe8 ffe7 ffe7     ................
  40f160:	ffdd ffdd ffc8 ffc8 ffb4 ffb4 ffa8 ffa8     ................
  40f170:	ffa7 ffa7 ffb7 ffb7 ffdc ffdc 0004 0004     ................
  40f180:	0026 0026 003c 003c 0043 0043 003c 003c     &.&.<.<.C.C.<.<.
  40f190:	002d 002d 0020 0020 001a 001a 0014 0014     -.-. . .........
  40f1a0:	0020 0020 0035 0035 0047 0047 0051 0051      . .5.5.G.G.Q.Q.
  40f1b0:	005a 005a 0058 0058 0044 0044 0031 0031     Z.Z.X.X.D.D.1.1.
  40f1c0:	0017 0017 0003 0003 fffc fffc fffb fffb     ................
  40f1d0:	0006 0006 0019 0019 0031 0031 0040 0040     ........1.1.@.@.
  40f1e0:	0045 0045 003b 003b 001d 001d fff3 fff3     E.E.;.;.........
  40f1f0:	ffd4 ffd4 ffc2 ffc2 ffbe ffbe ffc8 ffc8     ................
  40f200:	ffdb ffdb ffeb ffeb fff4 fff4 fff6 fff6     ................
  40f210:	fff1 fff1 ffe5 ffe5 ffd6 ffd6 ffd2 ffd2     ................
  40f220:	ffd0 ffd0 ffce ffce ffce ffce ffd1 ffd1     ................
  40f230:	ffd4 ffd4 ffda ffda ffe2 ffe2 ffe6 ffe6     ................
  40f240:	ffec ffec ffe6 ffe6 ffdf ffdf ffda ffda     ................
  40f250:	ffdc ffdc ffe2 ffe2 ffed ffed 0007 0007     ................
  40f260:	001d 001d 0029 0029 0027 0027 001e 001e     ....).).'.'.....
  40f270:	0016 0016 0011 0011 0011 0011 001a 001a     ................
  40f280:	001e 001e 001d 001d 001f 001f 0018 0018     ................
  40f290:	000c 000c 0002 0002 fffc fffc fff8 fff8     ................
  40f2a0:	fff6 fff6 fff9 fff9 fff4 fff4 fff4 fff4     ................
  40f2b0:	ffff ffff 0009 0009 0016 0016 0022 0022     ............".".
  40f2c0:	001e 001e 0019 0019 0010 0010 0007 0007     ................
  40f2d0:	0001 0001 0003 0003 0015 0015 001c 001c     ................
  40f2e0:	0020 0020 0021 0021 0019 0019 0002 0002      . .!.!.........
  40f2f0:	ffeb ffeb ffe0 ffe0 ffdf ffdf ffe6 ffe6     ................
  40f300:	fffe fffe 0014 0014 0029 0029 002f 002f     ........).)././.
  40f310:	002a 002a 0020 0020 000c 000c fff6 fff6     *.*. . .........
  40f320:	ffde ffde ffc7 ffc7 ffb4 ffb4 ffaa ffaa     ................
  40f330:	ffae ffae ffbf ffbf ffd5 ffd5 ffe9 ffe9     ................
  40f340:	fff8 fff8 fffc fffc fff1 fff1 ffd3 ffd3     ................
  40f350:	ffbc ffbc ffb0 ffb0 ffba ffba ffd5 ffd5     ................
  40f360:	0000 0000 001d 001d 0028 0028 001c 001c     ........(.(.....
  40f370:	0006 0006 ffe9 ffe9 ffd7 ffd7 ffd3 ffd3     ................
  40f380:	ffd8 ffd8 ffec ffec 0008 0008 001f 001f     ................
  40f390:	0037 0037 0045 0045 0053 0053 005c 005c     7.7.E.E.S.S.\.\.
  40f3a0:	0054 0054 003c 003c 0020 0020 0000 0000     T.T.<.<. . .....
  40f3b0:	fff0 fff0 fff4 fff4 000d 000d 0034 0034     ............4.4.
  40f3c0:	0060 0060 0076 0076 0078 0078 0062 0062     `.`.v.v.x.x.b.b.
  40f3d0:	0037 0037 000b 000b ffec ffec ffe9 ffe9     7.7.............
  40f3e0:	ffef ffef fffd fffd 000c 000c 0010 0010     ................
  40f3f0:	000d 000d 0006 0006 fff8 fff8 ffec ffec     ................
  40f400:	ffdc ffdc ffce ffce ffbe ffbe ffad ffad     ................
  40f410:	ffab ffab ffba ffba ffd7 ffd7 fffb fffb     ................
  40f420:	001b 001b 0025 0025 001c 001c fff2 fff2     ....%.%.........
  40f430:	ffbc ffbc ff8e ff8e ff79 ff79 ff86 ff86     ........y.y.....
  40f440:	ffaf ffaf ffe9 ffe9 001a 001a 0031 0031     ............1.1.
  40f450:	0033 0033 001d 001d 0006 0006 ffef ffef     3.3.............
  40f460:	ffe3 ffe3 ffe7 ffe7 fff2 fff2 0000 0000     ................
  40f470:	000f 000f 001e 001e 0027 0027 0038 0038     ........'.'.8.8.
  40f480:	0043 0043 004c 004c 004d 004d 0045 0045     C.C.L.L.M.M.E.E.
  40f490:	0036 0036 0024 0024 001c 001c 002d 002d     6.6.$.$.....-.-.
  40f4a0:	0049 0049 0068 0068 0080 0080 0081 0081     I.I.h.h.........
  40f4b0:	0068 0068 0041 0041 0015 0015 fff4 fff4     h.h.A.A.........
  40f4c0:	ffe5 ffe5 ffdf ffdf ffef ffef fffb fffb     ................
  40f4d0:	0005 0005 000c 000c 0005 0005 fff4 fff4     ................
  40f4e0:	ffe6 ffe6 ffdc ffdc ffd3 ffd3 ffc4 ffc4     ................
  40f4f0:	ffb6 ffb6 ffaa ffaa ffa9 ffa9 ffb1 ffb1     ................
  40f500:	ffbb ffbb ffd4 ffd4 ffe2 ffe2 ffe8 ffe8     ................
  40f510:	ffe3 ffe3 ffda ffda ffc9 ffc9 ffbc ffbc     ................
  40f520:	ffc2 ffc2 ffd9 ffd9 fff9 fff9 0018 0018     ................
  40f530:	002e 002e 0036 0036 002d 002d 0022 0022     ....6.6.-.-.".".
  40f540:	0018 0018 0011 0011 0010 0010 0019 0019     ................
  40f550:	0020 0020 0021 0021 001c 001c 001b 001b      . .!.!.........
  40f560:	0018 0018 001b 001b 001e 001e 0020 0020     ............ . .
  40f570:	001f 001f 0019 0019 0009 0009 0003 0003     ................
  40f580:	0003 0003 0009 0009 0011 0011 001c 001c     ................
  40f590:	0022 0022 001b 001b 0011 0011 0005 0005     ".".............
  40f5a0:	0001 0001 ffff ffff 0002 0002 0008 0008     ................
  40f5b0:	000c 000c 0012 0012 0011 0011 000f 000f     ................
  40f5c0:	0009 0009 000a 000a 0004 0004 0003 0003     ................
  40f5d0:	fffc fffc fff2 fff2 ffee ffee ffef ffef     ................
  40f5e0:	fff1 fff1 fff4 fff4 fff7 fff7 fffc fffc     ................
  40f5f0:	fffe fffe fff8 fff8 fffe fffe fff7 fff7     ................
  40f600:	fff8 fff8 fff9 fff9 fff9 fff9 fff1 fff1     ................
  40f610:	ffe9 ffe9 ffdd ffdd ffcf ffcf ffc5 ffc5     ................
  40f620:	ffc3 ffc3 ffbe ffbe ffc3 ffc3 ffca ffca     ................
  40f630:	ffd4 ffd4 ffdc ffdc ffea ffea fff0 fff0     ................
  40f640:	ffea ffea ffed ffed ffe7 ffe7 ffe9 ffe9     ................
  40f650:	ffea ffea fff6 fff6 0003 0003 000e 000e     ................
  40f660:	0015 0015 0019 0019 0014 0014 0005 0005     ................
  40f670:	fff3 fff3 ffde ffde ffd7 ffd7 ffdb ffdb     ................
  40f680:	ffee ffee 000b 000b 002b 002b 004b 004b     ........+.+.K.K.
  40f690:	0057 0057 0053 0053 0041 0041 0029 0029     W.W.S.S.A.A.).).
  40f6a0:	0013 0013 0005 0005 0008 0008 0019 0019     ................
  40f6b0:	0034 0034 0042 0042 0046 0046 0038 0038     4.4.B.B.F.F.8.8.
  40f6c0:	001e 001e 0006 0006 ffe7 ffe7 ffd6 ffd6     ................
  40f6d0:	ffcc ffcc ffc8 ffc8 ffcc ffcc ffd5 ffd5     ................
  40f6e0:	ffe7 ffe7 fffc fffc 000c 000c 0017 0017     ................
  40f6f0:	0009 0009 ffef ffef ffce ffce ffad ffad     ................
  40f700:	ff93 ff93 ff8f ff8f ff9c ff9c ffb6 ffb6     ................
  40f710:	ffd0 ffd0 ffe4 ffe4 ffe5 ffe5 ffda ffda     ................
  40f720:	ffcf ffcf ffc0 ffc0 ffc4 ffc4 ffcd ffcd     ................
  40f730:	ffdb ffdb ffea ffea fff8 fff8 fffe fffe     ................
  40f740:	0009 0009 0018 0018 002d 002d 003e 003e     ........-.-.>.>.
  40f750:	0043 0043 0039 0039 001d 001d 0001 0001     C.C.9.9.........
  40f760:	fff1 fff1 fffc fffc 001a 001a 0047 0047     ............G.G.
  40f770:	0070 0070 0085 0085 007d 007d 005f 005f     p.p.....}.}._._.
  40f780:	0038 0038 0012 0012 0002 0002 0009 0009     8.8.............
  40f790:	0019 0019 002b 002b 0034 0034 0037 0037     ....+.+.4.4.7.7.
  40f7a0:	0028 0028 0014 0014 0005 0005 fff6 fff6     (.(.............
  40f7b0:	ffe7 ffe7 ffd7 ffd7 ffc2 ffc2 ffad ffad     ................
  40f7c0:	ffa2 ffa2 ffab ffab ffc7 ffc7 ffea ffea     ................
  40f7d0:	ffff ffff 0007 0007 ffef ffef ffd0 ffd0     ................
  40f7e0:	ffab ffab ff91 ff91 ff92 ff92 ffb1 ffb1     ................
  40f7f0:	ffe2 ffe2 000e 000e 002f 002f 0039 0039     .......././.9.9.
  40f800:	0029 0029 000f 000f fff5 fff5 ffe5 ffe5     ).).............
  40f810:	ffe6 ffe6 fff6 fff6 000f 000f 0026 0026     ............&.&.
  40f820:	0039 0039 0048 0048 0055 0055 005e 005e     9.9.H.H.U.U.^.^.
  40f830:	005c 005c 0050 0050 003e 003e 001e 001e     \.\.P.P.>.>.....
  40f840:	fffd fffd ffef ffef fff3 fff3 000d 000d     ................
  40f850:	0038 0038 005b 005b 0069 0069 0054 0054     8.8.[.[.i.i.T.T.
  40f860:	0026 0026 fff4 fff4 ffc8 ffc8 ffb8 ffb8     &.&.............
  40f870:	ffc0 ffc0 ffe1 ffe1 0008 0008 0028 0028     ............(.(.
  40f880:	0036 0036 0026 0026 0001 0001 ffda ffda     6.6.&.&.........
  40f890:	ffbd ffbd ffaf ffaf ffaa ffaa ffac ffac     ................
  40f8a0:	ffae ffae ffb6 ffb6 ffcc ffcc ffe8 ffe8     ................
  40f8b0:	0006 0006 001f 001f 0029 0029 001e 001e     ........).).....
  40f8c0:	000a 000a fff5 fff5 fff1 fff1 ffff ffff     ................
  40f8d0:	0023 0023 0059 0059 0082 0082 009b 009b     #.#.Y.Y.........
  40f8e0:	0092 0092 006f 006f 0036 0036 000c 000c     ....o.o.6.6.....
  40f8f0:	fff4 fff4 fff5 fff5 000d 000d 002c 002c     ............,.,.
  40f900:	004b 004b 0055 0055 0052 0052 0048 0048     K.K.U.U.R.R.H.H.
  40f910:	0035 0035 0025 0025 0015 0015 0003 0003     5.5.%.%.........
  40f920:	ffeb ffeb ffd7 ffd7 ffcc ffcc ffca ffca     ................
  40f930:	ffd4 ffd4 ffdc ffdc ffe3 ffe3 ffdd ffdd     ................
  40f940:	ffcb ffcb ffb0 ffb0 ff95 ff95 ff80 ff80     ................
  40f950:	ff7d ff7d ff86 ff86 ffa4 ffa4 ffcc ffcc     }.}.............
  40f960:	ffeb ffeb 0005 0005 0014 0014 000e 000e     ................
  40f970:	fffe fffe fff4 fff4 ffe9 ffe9 ffda ffda     ................
  40f980:	ffdb ffdb ffe3 ffe3 fff2 fff2 000a 000a     ................
  40f990:	002a 002a 0047 0047 0053 0053 0059 0059     *.*.G.G.S.S.Y.Y.
  40f9a0:	0050 0050 0046 0046 0040 0040 003a 003a     P.P.F.F.@.@.:.:.
  40f9b0:	0047 0047 005c 005c 0076 0076 008e 008e     G.G.\.\.v.v.....
  40f9c0:	009d 009d 009b 009b 0086 0086 0062 0062     ............b.b.
  40f9d0:	0038 0038 0008 0008 ffe0 ffe0 ffc8 ffc8     8.8.............
  40f9e0:	ffc5 ffc5 ffc6 ffc6 ffce ffce ffd7 ffd7     ................
  40f9f0:	ffe0 ffe0 ffd5 ffd5 ffc2 ffc2 ffab ffab     ................
  40fa00:	ff92 ff92 ff86 ff86 ff7c ff7c ff88 ff88     ........|.|.....
  40fa10:	ff9c ff9c ffb5 ffb5 ffc6 ffc6 ffd0 ffd0     ................
  40fa20:	ffcb ffcb ffbc ffbc ffac ffac ff95 ff95     ................
  40fa30:	ff89 ff89 ff88 ff88 ff9a ff9a ffbf ffbf     ................
  40fa40:	ffeb ffeb 0015 0015 003b 003b 0052 0052     ........;.;.R.R.
  40fa50:	004b 004b 003b 003b 002a 002a 001c 001c     K.K.;.;.*.*.....
  40fa60:	0016 0016 0020 0020 0033 0033 004a 004a     .... . .3.3.J.J.
  40fa70:	0061 0061 0074 0074 007c 007c 007a 007a     a.a.t.t.|.|.z.z.
  40fa80:	006c 006c 0056 0056 0042 0042 0039 0039     l.l.V.V.B.B.9.9.
  40fa90:	0038 0038 003e 003e 004c 004c 005b 005b     8.8.>.>.L.L.[.[.
  40faa0:	006d 006d 0074 0074 006e 006e 0051 0051     m.m.t.t.n.n.Q.Q.
  40fab0:	002f 002f 0000 0000 ffd7 ffd7 ffb2 ffb2     /./.............
  40fac0:	ffa5 ffa5 ffa8 ffa8 ffb3 ffb3 ffc3 ffc3     ................
  40fad0:	ffcb ffcb ffc7 ffc7 ffb9 ffb9 ffa0 ffa0     ................
  40fae0:	ff86 ff86 ff78 ff78 ff73 ff73 ff7d ff7d     ....x.x.s.s.}.}.
  40faf0:	ff9a ff9a ffb7 ffb7 ffcd ffcd ffda ffda     ................
  40fb00:	ffd8 ffd8 ffcd ffcd ffc2 ffc2 ffb1 ffb1     ................
  40fb10:	ffad ffad ffa9 ffa9 ffb0 ffb0 ffbe ffbe     ................
  40fb20:	ffdc ffdc 0000 0000 0025 0025 004f 004f     ........%.%.O.O.
  40fb30:	0067 0067 0080 0080 0083 0083 007e 007e     g.g.........~.~.
  40fb40:	0073 0073 0067 0067 0062 0062 0068 0068     s.s.g.g.b.b.h.h.
  40fb50:	006c 006c 0073 0073 0074 0074 006f 006f     l.l.s.s.t.t.o.o.
  40fb60:	0062 0062 0048 0048 0033 0033 001d 001d     b.b.H.H.3.3.....
  40fb70:	0011 0011 000c 000c 000f 000f 0012 0012     ................
  40fb80:	0013 0013 0012 0012 0018 0018 0015 0015     ................
  40fb90:	000c 000c 0004 0004 fff9 fff9 ffe9 ffe9     ................
  40fba0:	ffd7 ffd7 ffc9 ffc9 ffb9 ffb9 ffb1 ffb1     ................
  40fbb0:	ffb5 ffb5 ffb5 ffb5 ffb8 ffb8 ffbc ffbc     ................
  40fbc0:	ffbd ffbd ffbc ffbc ffbb ffbb ffc3 ffc3     ................
  40fbd0:	ffd1 ffd1 ffe3 ffe3 fffc fffc 000f 000f     ................
  40fbe0:	0016 0016 001c 001c 0017 0017 000c 000c     ................
  40fbf0:	0003 0003 fff9 fff9 fff4 fff4 fff7 fff7     ................
  40fc00:	0001 0001 0010 0010 0016 0016 001e 001e     ................
  40fc10:	0016 0016 000b 000b 0005 0005 fffc fffc     ................
  40fc20:	fffd fffd 0001 0001 000d 000d 001e 001e     ................
  40fc30:	0032 0032 003f 003f 0045 0045 003f 003f     2.2.?.?.E.E.?.?.
  40fc40:	0032 0032 0022 0022 000b 000b fff6 fff6     2.2.".".........
  40fc50:	ffea ffea ffe6 ffe6 ffec ffec fff6 fff6     ................
  40fc60:	0007 0007 0011 0011 0014 0014 000a 000a     ................
  40fc70:	fffb fffb ffed ffed ffe9 ffe9 fff4 fff4     ................
  40fc80:	0003 0003 001c 001c 0031 0031 0039 0039     ........1.1.9.9.
  40fc90:	0038 0038 0028 0028 0015 0015 fffe fffe     8.8.(.(.........
  40fca0:	ffea ffea ffdc ffdc ffcf ffcf ffc7 ffc7     ................
  40fcb0:	ffd3 ffd3 ffe0 ffe0 ffed ffed fffe fffe     ................
  40fcc0:	000f 000f 001c 001c 001a 001a 0011 0011     ................
  40fcd0:	0001 0001 fff0 fff0 ffe6 ffe6 ffe8 ffe8     ................
  40fce0:	fff4 fff4 0000 0000 0009 0009 0002 0002     ................
  40fcf0:	fff4 fff4 ffdd ffdd ffc7 ffc7 ffb7 ffb7     ................
  40fd00:	ffbb ffbb ffc8 ffc8 ffd9 ffd9 fff1 fff1     ................
  40fd10:	0004 0004 0016 0016 0028 0028 0037 0037     ........(.(.7.7.
  40fd20:	0039 0039 0032 0032 0024 0024 0013 0013     9.9.2.2.$.$.....
  40fd30:	0000 0000 ffee ffee ffe7 ffe7 fff0 fff0     ................
  40fd40:	0006 0006 0022 0022 0031 0031 0032 0032     ....".".1.1.2.2.
  40fd50:	0028 0028 0010 0010 fff5 fff5 ffe9 ffe9     (.(.............
  40fd60:	fff2 fff2 0009 0009 0029 0029 004d 004d     ........).).M.M.
  40fd70:	0063 0063 0069 0069 0060 0060 0043 0043     c.c.i.i.`.`.C.C.
  40fd80:	0026 0026 0007 0007 ffef ffef ffda ffda     &.&.............
  40fd90:	ffcc ffcc ffc5 ffc5 ffc9 ffc9 ffd6 ffd6     ................
  40fda0:	ffe2 ffe2 ffed ffed fff6 fff6 fff3 fff3     ................
  40fdb0:	ffe3 ffe3 ffcf ffcf ffbf ffbf ffbc ffbc     ................
  40fdc0:	ffc6 ffc6 ffdf ffdf fffe fffe 0018 0018     ................
  40fdd0:	0025 0025 0026 0026 000e 000e ffe9 ffe9     %.%.&.&.........
  40fde0:	ffc3 ffc3 ffa7 ffa7 ff9c ff9c ff9d ff9d     ................
  40fdf0:	ffb5 ffb5 ffd6 ffd6 fffc fffc 0022 0022     ............".".
  40fe00:	0042 0042 004f 004f 004e 004e 0042 0042     B.B.O.O.N.N.B.B.
  40fe10:	0033 0033 0021 0021 0018 0018 0010 0010     3.3.!.!.........
  40fe20:	0017 0017 0027 0027 0038 0038 0045 0045     ....'.'.8.8.E.E.
  40fe30:	004b 004b 003d 003d 0025 0025 0007 0007     K.K.=.=.%.%.....
  40fe40:	ffea ffea ffd8 ffd8 ffd7 ffd7 ffee ffee     ................
  40fe50:	000f 000f 0036 0036 0050 0050 0056 0056     ....6.6.P.P.V.V.
  40fe60:	0045 0045 0019 0019 ffeb ffeb ffbe ffbe     E.E.............
  40fe70:	ff99 ff99 ff8b ff8b ff8e ff8e ff9f ff9f     ................
  40fe80:	ffb1 ffb1 ffc8 ffc8 ffd2 ffd2 ffe0 ffe0     ................
  40fe90:	ffe4 ffe4 ffe4 ffe4 ffe4 ffe4 ffe5 ffe5     ................
  40fea0:	ffec ffec fff7 fff7 0007 0007 001b 001b     ................
  40feb0:	002b 002b 0038 0038 003d 003d 0030 0030     +.+.8.8.=.=.0.0.
  40fec0:	001d 001d 0000 0000 ffe9 ffe9 ffd8 ffd8     ................
  40fed0:	ffe3 ffe3 ffff ffff 0021 0021 0043 0043     ........!.!.C.C.
  40fee0:	0058 0058 005a 005a 004c 004c 003a 003a     X.X.Z.Z.L.L.:.:.
  40fef0:	0025 0025 001a 001a 0013 0013 0012 0012     %.%.............
  40ff00:	0014 0014 0013 0013 0013 0013 0017 0017     ................
  40ff10:	0013 0013 000c 000c 0001 0001 fff0 fff0     ................
  40ff20:	ffdf ffdf ffc8 ffc8 ffb6 ffb6 ffab ffab     ................
  40ff30:	ffb8 ffb8 ffd8 ffd8 fffc fffc 001c 001c     ................
  40ff40:	0027 0027 0022 0022 0005 0005 ffe5 ffe5     '.'.".".........
  40ff50:	ffcf ffcf ffc9 ffc9 ffd6 ffd6 ffe8 ffe8     ................
  40ff60:	0003 0003 000e 000e 000e 000e 0001 0001     ................
  40ff70:	ffe9 ffe9 ffd6 ffd6 ffcd ffcd ffcb ffcb     ................
  40ff80:	ffd3 ffd3 ffe4 ffe4 fff8 fff8 0005 0005     ................
  40ff90:	000a 000a 0010 0010 001a 001a 0025 0025     ............%.%.
  40ffa0:	0026 0026 001b 001b 000c 000c fffa fffa     &.&.............
  40ffb0:	fff0 fff0 fff4 fff4 000a 000a 0024 0024     ............$.$.
  40ffc0:	0035 0035 0039 0039 0032 0032 0011 0011     5.5.9.9.2.2.....
  40ffd0:	ffe7 ffe7 ffc8 ffc8 ffbd ffbd ffc4 ffc4     ................
  40ffe0:	ffe2 ffe2 0000 0000 0014 0014 001c 001c     ................
  40fff0:	0013 0013 ffff ffff ffe5 ffe5 ffd5 ffd5     ................
  410000:	ffda ffda ffe6 ffe6 fff8 fff8 0004 0004     ................
  410010:	0008 0008 0006 0006 000a 000a 0010 0010     ................
  410020:	0011 0011 0010 0010 0007 0007 fffd fffd     ................
  410030:	fff0 fff0 ffe4 ffe4 ffe5 ffe5 fff1 fff1     ................
  410040:	000d 000d 0025 0025 0038 0038 0038 0038     ....%.%.8.8.8.8.
  410050:	0029 0029 000c 000c ffee ffee ffdd ffdd     ).).............
  410060:	ffd5 ffd5 ffe0 ffe0 fff3 fff3 0007 0007     ................
  410070:	000d 000d 0001 0001 ffee ffee ffd5 ffd5     ................
  410080:	ffc3 ffc3 ffbf ffbf ffbe ffbe ffc9 ffc9     ................
  410090:	ffdb ffdb ffef ffef 0002 0002 0012 0012     ................
  4100a0:	001c 001c 001b 001b 0015 0015 000d 000d     ................
  4100b0:	fffd fffd ffe8 ffe8 ffdb ffdb ffd6 ffd6     ................
  4100c0:	ffdd ffdd ffef ffef 0002 0002 0016 0016     ................
  4100d0:	0025 0025 0025 0025 001c 001c 000f 000f     %.%.%.%.........
  4100e0:	fffb fffb fff3 fff3 fffe fffe 000f 000f     ................
  4100f0:	001d 001d 0022 0022 001e 001e 0012 0012     ....".".........
  410100:	0001 0001 fff7 fff7 fff4 fff4 fffb fffb     ................
  410110:	0003 0003 000b 000b 0015 0015 001e 001e     ................
  410120:	001f 001f 0026 0026 002d 002d 002f 002f     ....&.&.-.-././.
  410130:	002c 002c 0025 0025 0014 0014 fffc fffc     ,.,.%.%.........
  410140:	ffe5 ffe5 ffd6 ffd6 ffcb ffcb ffcc ffcc     ................
  410150:	ffd8 ffd8 ffd7 ffd7 ffd1 ffd1 ffc5 ffc5     ................
  410160:	ffb8 ffb8 ffb9 ffb9 ffc2 ffc2 ffd7 ffd7     ................
  410170:	fff1 fff1 0006 0006 0014 0014 0017 0017     ................
  410180:	000b 000b fffc fffc ffef ffef ffe7 ffe7     ................
  410190:	ffe9 ffe9 ffef ffef fffa fffa fffd fffd     ................
  4101a0:	fffb fffb ffff ffff 0008 0008 0011 0011     ................
  4101b0:	0018 0018 0020 0020 0022 0022 001d 001d     .... . .".".....
  4101c0:	001c 001c 001f 001f 002e 002e 0046 0046     ............F.F.
  4101d0:	0055 0055 0062 0062 0057 0057 003f 003f     U.U.b.b.W.W.?.?.
  4101e0:	0022 0022 0000 0000 ffed ffed ffe9 ffe9     ".".............
  4101f0:	fffa fffa 0015 0015 002e 002e 003d 003d     ............=.=.
  410200:	0040 0040 0037 0037 0022 0022 000b 000b     @.@.7.7.".".....
  410210:	fff1 fff1 ffe7 ffe7 ffde ffde ffe4 ffe4     ................
  410220:	ffee ffee fff6 fff6 0006 0006 000e 000e     ................
  410230:	000a 000a fffc fffc ffe9 ffe9 ffcf ffcf     ................
  410240:	ffbf ffbf ffb8 ffb8 ffc4 ffc4 ffda ffda     ................
  410250:	fff6 fff6 0010 0010 0025 0025 0028 0028     ........%.%.(.(.
  410260:	001f 001f 0006 0006 ffeb ffeb ffd7 ffd7     ................
  410270:	ffd1 ffd1 ffcf ffcf ffdc ffdc fff3 fff3     ................
  410280:	000f 000f 0025 0025 0035 0035 003b 003b     ....%.%.5.5.;.;.
  410290:	0030 0030 0023 0023 000f 000f 0000 0000     0.0.#.#.........
  4102a0:	fffc fffc fffe fffe 0007 0007 001a 001a     ................
  4102b0:	0028 0028 002f 002f 002e 002e 0022 0022     (.(././.....".".
  4102c0:	0014 0014 0003 0003 fff5 fff5 ffef ffef     ................
  4102d0:	fff0 fff0 fff7 fff7 0009 0009 0022 0022     ............".".
  4102e0:	0036 0036 0043 0043 0045 0045 003b 003b     6.6.C.C.E.E.;.;.
  4102f0:	0020 0020 fffa fffa ffe0 ffe0 ffca ffca      . .............
  410300:	ffc6 ffc6 ffd6 ffd6 ffe9 ffe9 0002 0002     ................
  410310:	0012 0012 0012 0012 0004 0004 fff1 fff1     ................
  410320:	ffde ffde ffd3 ffd3 ffd9 ffd9 ffe6 ffe6     ................
  410330:	fffb fffb 000c 000c 0013 0013 0013 0013     ................
  410340:	0010 0010 000e 000e 0005 0005 fff8 fff8     ................
  410350:	ffe9 ffe9 ffd7 ffd7 ffc3 ffc3 ffb6 ffb6     ................
  410360:	ffb2 ffb2 ffbf ffbf ffd5 ffd5 fff6 fff6     ................
  410370:	0011 0011 0020 0020 0019 0019 0007 0007     .... . .........
  410380:	fff6 fff6 ffe3 ffe3 ffe7 ffe7 fff8 fff8     ................
  410390:	0013 0013 0029 0029 0039 0039 0037 0037     ....).).9.9.7.7.
  4103a0:	002d 002d 001e 001e 0015 0015 000f 000f     -.-.............
  4103b0:	000a 000a 0007 0007 0008 0008 000a 000a     ................
  4103c0:	0017 0017 0027 0027 0038 0038 004e 004e     ....'.'.8.8.N.N.
  4103d0:	0053 0053 0046 0046 002a 002a fffb fffb     S.S.F.F.*.*.....
  4103e0:	ffd3 ffd3 ffbc ffbc ffb6 ffb6 ffca ffca     ................
  4103f0:	ffed ffed 000c 000c 0020 0020 001b 001b     ........ . .....
  410400:	0014 0014 0000 0000 ffec ffec ffeb ffeb     ................
  410410:	ffed ffed fff0 fff0 fff3 fff3 fff4 fff4     ................
  410420:	fff0 fff0 ffeb ffeb ffe6 ffe6 ffec ffec     ................
  410430:	ffe8 ffe8 ffe0 ffe0 ffd3 ffd3 ffc7 ffc7     ................
  410440:	ffbb ffbb ffb9 ffb9 ffc9 ffc9 ffe1 ffe1     ................
  410450:	fff8 fff8 000e 000e 0016 0016 0013 0013     ................
  410460:	0007 0007 fff4 fff4 ffec ffec ffee ffee     ................
  410470:	fff6 fff6 0000 0000 0008 0008 000a 000a     ................
  410480:	0005 0005 0007 0007 000f 000f 001b 001b     ................
  410490:	002c 002c 003a 003a 003d 003d 0035 0035     ,.,.:.:.=.=.5.5.
  4104a0:	0025 0025 0019 0019 0015 0015 001d 001d     %.%.............
  4104b0:	0029 0029 0034 0034 0037 0037 0031 0031     ).).4.4.7.7.1.1.
  4104c0:	0020 0020 000a 000a fff9 fff9 fff1 fff1      . .............
  4104d0:	ffec ffec fff2 fff2 ffef ffef ffeb ffeb     ................
  4104e0:	ffe4 ffe4 ffe1 ffe1 ffe4 ffe4 ffeb ffeb     ................
  4104f0:	fff4 fff4 fff7 fff7 fff4 fff4 ffec ffec     ................
  410500:	ffe4 ffe4 ffe1 ffe1 ffe7 ffe7 ffee ffee     ................
  410510:	fffe fffe 000b 000b 000d 000d 0004 0004     ................
  410520:	fff4 fff4 ffe8 ffe8 ffe2 ffe2 ffe5 ffe5     ................
  410530:	ffeb ffeb fff7 fff7 0000 0000 0004 0004     ................
  410540:	0006 0006 0006 0006 000f 000f 001d 001d     ................
  410550:	002e 002e 003b 003b 003e 003e 003b 003b     ....;.;.>.>.;.;.
  410560:	003a 003a 0031 0031 0039 0039 003f 003f     :.:.1.1.9.9.?.?.
  410570:	0042 0042 0040 0040 0038 0038 001f 001f     B.B.@.@.8.8.....
  410580:	fffe fffe ffe9 ffe9 ffe1 ffe1 ffec ffec     ................
  410590:	0000 0000 0018 0018 0027 0027 002a 002a     ........'.'.*.*.
  4105a0:	001f 001f 000e 000e fff9 fff9 fff1 fff1     ................
  4105b0:	ffef ffef fff2 fff2 fff3 fff3 fff6 fff6     ................
  4105c0:	ffeb ffeb ffde ffde ffd8 ffd8 ffd2 ffd2     ................
  4105d0:	ffd4 ffd4 ffd6 ffd6 ffd2 ffd2 ffce ffce     ................
  4105e0:	ffc8 ffc8 ffca ffca ffd5 ffd5 ffeb ffeb     ................
  4105f0:	0007 0007 001e 001e 002c 002c 0025 0025     ........,.,.%.%.
  410600:	0016 0016 fffe fffe fff2 fff2 fff2 fff2     ................
  410610:	0000 0000 0018 0018 0029 0029 0034 0034     ........).).4.4.
  410620:	002e 002e 001d 001d 0010 0010 0009 0009     ................
  410630:	000c 000c 0019 0019 0028 0028 0033 0033     ........(.(.3.3.
  410640:	0034 0034 0031 0031 002a 002a 002e 002e     4.4.1.1.*.*.....
  410650:	0033 0033 0037 0037 0034 0034 002e 002e     3.3.7.7.4.4.....
  410660:	001e 001e 0004 0004 fff3 fff3 ffe8 ffe8     ................
  410670:	ffec ffec fff0 fff0 fff5 fff5 fffb fffb     ................
  410680:	fff6 fff6 ffef ffef ffe4 ffe4 ffdf ffdf     ................
  410690:	ffdf ffdf ffe8 ffe8 fff3 fff3 fffc fffc     ................
  4106a0:	fff8 fff8 ffed ffed ffe3 ffe3 ffd7 ffd7     ................
  4106b0:	ffd4 ffd4 ffdb ffdb ffe4 ffe4 ffec ffec     ................
  4106c0:	fff4 fff4 fff4 fff4 fff3 fff3 fff7 fff7     ................
  4106d0:	0001 0001 000e 000e 001e 001e 002c 002c     ............,.,.
  4106e0:	0031 0031 0033 0033 002a 002a 0019 0019     1.1.3.3.*.*.....
  4106f0:	000e 000e 0007 0007 0009 0009 000e 000e     ................
  410700:	001a 001a 001e 001e 001c 001c 0010 0010     ................
  410710:	000b 000b 0009 0009 000d 000d 001a 001a     ................
  410720:	0029 0029 0034 0034 0037 0037 0038 0038     ).).4.4.7.7.8.8.
  410730:	0030 0030 0024 0024 001f 001f 0011 0011     0.0.$.$.........
  410740:	0007 0007 fffc fffc ffec ffec ffe1 ffe1     ................
  410750:	ffd7 ffd7 ffd3 ffd3 ffdb ffdb ffe7 ffe7     ................
  410760:	fff6 fff6 0004 0004 0009 0009 0003 0003     ................
  410770:	fff5 fff5 ffea ffea ffe6 ffe6 ffec ffec     ................
  410780:	fffa fffa 0007 0007 000c 000c 0003 0003     ................
  410790:	fff0 fff0 ffdb ffdb ffcc ffcc ffc7 ffc7     ................
  4107a0:	ffcc ffcc ffda ffda ffec ffec fff7 fff7     ................
  4107b0:	fffd fffd fffd fffd 0004 0004 0003 0003     ................
  4107c0:	000c 000c 0012 0012 0013 0013 0011 0011     ................
  4107d0:	0008 0008 fffd fffd fff0 fff0 fff2 fff2     ................
  4107e0:	0002 0002 0011 0011 001f 001f 0025 0025     ............%.%.
  4107f0:	001d 001d 000e 000e 0003 0003 ffff ffff     ................
  410800:	0002 0002 0012 0012 001f 001f 002a 002a     ............*.*.
  410810:	002a 002a 001c 001c 0009 0009 fff7 fff7     *.*.............
  410820:	fff0 fff0 fff1 fff1 fff5 fff5 fffd fffd     ................
  410830:	0000 0000 fffa fffa ffeb ffeb ffde ffde     ................
  410840:	ffce ffce ffc9 ffc9 ffc7 ffc7 ffd1 ffd1     ................
  410850:	ffd5 ffd5 ffd7 ffd7 ffda ffda ffd3 ffd3     ................
  410860:	ffd4 ffd4 ffda ffda ffe1 ffe1 ffe7 ffe7     ................
  410870:	ffea ffea ffe7 ffe7 ffe3 ffe3 ffe5 ffe5     ................
  410880:	ffe9 ffe9 fff2 fff2 fffd fffd 000f 000f     ................
  410890:	001e 001e 0021 0021 001e 001e 001b 001b     ....!.!.........
  4108a0:	0015 0015 0016 0016 0018 0018 0025 0025     ............%.%.
  4108b0:	002d 002d 0038 0038 0035 0035 0028 0028     -.-.8.8.5.5.(.(.
  4108c0:	001b 001b 0008 0008 fffa fffa fff9 fff9     ................
  4108d0:	ffff ffff 0007 0007 000f 000f 0014 0014     ................
  4108e0:	0017 0017 0018 0018 0018 0018 0019 0019     ................
  4108f0:	0018 0018 0019 0019 0012 0012 0003 0003     ................
  410900:	ffee ffee ffda ffda ffcb ffcb ffbf ffbf     ................
  410910:	ffbc ffbc ffbf ffbf ffc4 ffc4 ffc8 ffc8     ................
  410920:	ffc1 ffc1 ffc4 ffc4 ffc1 ffc1 ffc5 ffc5     ................
  410930:	ffd2 ffd2 ffe3 ffe3 fff6 fff6 0001 0001     ................
  410940:	0007 0007 0006 0006 0001 0001 fffb fffb     ................
  410950:	fff6 fff6 fff2 fff2 fff2 fff2 fff3 fff3     ................
  410960:	fff3 fff3 fff7 fff7 fff9 fff9 0005 0005     ................
  410970:	0017 0017 0029 0029 003a 003a 0040 0040     ....).).:.:.@.@.
  410980:	0043 0043 003d 003d 002d 002d 0023 0023     C.C.=.=.-.-.#.#.
  410990:	0017 0017 0012 0012 0016 0016 001e 001e     ................
  4109a0:	0023 0023 0021 0021 0016 0016 0009 0009     #.#.!.!.........
  4109b0:	fff5 fff5 ffea ffea ffea ffea ffed ffed     ................
  4109c0:	fffe fffe 000c 000c 0018 0018 001e 001e     ................
  4109d0:	001e 001e 001d 001d 0018 0018 000e 000e     ................
  4109e0:	0004 0004 fff6 fff6 ffe5 ffe5 ffd6 ffd6     ................
  4109f0:	ffcb ffcb ffc6 ffc6 ffcb ffcb ffd5 ffd5     ................
  410a00:	ffe0 ffe0 ffe8 ffe8 ffe5 ffe5 ffde ffde     ................
  410a10:	ffd2 ffd2 ffc7 ffc7 ffc7 ffc7 ffcc ffcc     ................
  410a20:	ffd8 ffd8 ffe9 ffe9 fff4 fff4 fffd fffd     ................
  410a30:	fffe fffe ffff ffff fffb fffb 0000 0000     ................
  410a40:	0003 0003 0009 0009 000f 000f 0010 0010     ................
  410a50:	0012 0012 0016 0016 0021 0021 002c 002c     ........!.!.,.,.
  410a60:	003b 003b 0048 0048 0053 0053 004d 004d     ;.;.H.H.S.S.M.M.
  410a70:	003d 003d 002f 002f 0029 0029 0025 0025     =.=././.).).%.%.
  410a80:	0029 0029 0033 0033 0033 0033 0029 0029     ).).3.3.3.3.).).
  410a90:	0016 0016 0005 0005 fff4 fff4 ffea ffea     ................
  410aa0:	ffe9 ffe9 fff0 fff0 fff6 fff6 ffff ffff     ................
  410ab0:	ffff ffff fffe fffe fff9 fff9 fffb fffb     ................
  410ac0:	fffe fffe 0001 0001 0003 0003 0001 0001     ................
  410ad0:	fff2 fff2 ffe0 ffe0 ffcc ffcc ffbd ffbd     ................
  410ae0:	ffb8 ffb8 ffbc ffbc ffc7 ffc7 ffd2 ffd2     ................
  410af0:	ffdc ffdc ffe7 ffe7 ffed ffed fff0 fff0     ................
  410b00:	fff0 fff0 fff6 fff6 fffe fffe 0002 0002     ................
  410b10:	0009 0009 0010 0010 0012 0012 0017 0017     ................
  410b20:	0019 0019 001d 001d 001e 001e 001d 001d     ................
  410b30:	001a 001a 0013 0013 000f 000f 0011 0011     ................
  410b40:	0019 0019 0029 0029 0038 0038 0047 0047     ....).).8.8.G.G.
  410b50:	004d 004d 004f 004f 0045 0045 0039 0039     M.M.O.O.E.E.9.9.
  410b60:	0025 0025 0017 0017 000f 000f 000c 000c     %.%.............
  410b70:	000e 000e 0011 0011 0013 0013 0009 0009     ................
  410b80:	0000 0000 fff7 fff7 fff9 fff9 fffb fffb     ................
  410b90:	fffa fffa fffa fffa fffb fffb fffc fffc     ................
  410ba0:	fffc fffc 0001 0001 0004 0004 0008 0008     ................
  410bb0:	0008 0008 0001 0001 fff6 fff6 ffe9 ffe9     ................
  410bc0:	ffd8 ffd8 ffc9 ffc9 ffc5 ffc5 ffc8 ffc8     ................
  410bd0:	ffd2 ffd2 ffe9 ffe9 fff3 fff3 fff8 fff8     ................
  410be0:	fff8 fff8 fff5 fff5 fff3 fff3 fff5 fff5     ................
  410bf0:	fffe fffe 0007 0007 000b 000b 000f 000f     ................
  410c00:	000e 000e 0009 0009 000b 000b 0007 0007     ................
  410c10:	000b 000b 000e 000e 0008 0008 ffff ffff     ................
  410c20:	fff0 fff0 ffe9 ffe9 ffe7 ffe7 fff2 fff2     ................
  410c30:	0001 0001 0013 0013 001f 001f 0024 0024     ............$.$.
  410c40:	001f 001f 000d 000d 0000 0000 fff4 fff4     ................
  410c50:	fff6 fff6 fffb fffb 0005 0005 0009 0009     ................
  410c60:	0007 0007 0004 0004 0001 0001 fffc fffc     ................
  410c70:	fff9 fff9 fff6 fff6 fff7 fff7 fff5 fff5     ................
  410c80:	fff5 fff5 fff6 fff6 fffa fffa 0007 0007     ................
  410c90:	0015 0015 0023 0023 002a 002a 0024 0024     ....#.#.*.*.$.$.
  410ca0:	0013 0013 0002 0002 ffe8 ffe8 ffd9 ffd9     ................
  410cb0:	ffd4 ffd4 ffd6 ffd6 ffdb ffdb ffe6 ffe6     ................
  410cc0:	ffe5 ffe5 ffe5 ffe5 ffdc ffdc ffd6 ffd6     ................
  410cd0:	ffd4 ffd4 ffdc ffdc ffe6 ffe6 fff3 fff3     ................
  410ce0:	fffe fffe 0002 0002 0000 0000 fffc fffc     ................
  410cf0:	fff8 fff8 fff5 fff5 fff2 fff2 fff1 fff1     ................
  410d00:	ffe8 ffe8 ffde ffde ffd9 ffd9 ffd3 ffd3     ................
  410d10:	ffd6 ffd6 ffe1 ffe1 ffef ffef fffd fffd     ................
  410d20:	0006 0006 000d 000d 0011 0011 0010 0010     ................
  410d30:	0012 0012 0018 0018 0020 0020 0024 0024     ........ . .$.$.
  410d40:	0032 0032 002c 002c 0022 0022 0018 0018     2.2.,.,.".".....
  410d50:	0010 0010 0011 0011 0010 0010 0010 0010     ................
  410d60:	000d 000d 0010 0010 000f 000f 000e 000e     ................
  410d70:	000f 000f 000f 000f 000c 000c 000a 000a     ................
  410d80:	0007 0007 fffe fffe fff4 fff4 ffe7 ffe7     ................
  410d90:	ffe4 ffe4 ffe1 ffe1 ffe4 ffe4 ffe1 ffe1     ................
  410da0:	ffdf ffdf ffd9 ffd9 ffd9 ffd9 ffd9 ffd9     ................
  410db0:	ffd8 ffd8 ffe0 ffe0 ffe7 ffe7 ffee ffee     ................
  410dc0:	fff5 fff5 fff3 fff3 ffeb ffeb ffe9 ffe9     ................
  410dd0:	ffe2 ffe2 ffe2 ffe2 ffe0 ffe0 ffe0 ffe0     ................
  410de0:	ffe1 ffe1 ffe1 ffe1 ffe3 ffe3 ffeb ffeb     ................
  410df0:	fff0 fff0 fffb fffb 0000 0000 0003 0003     ................
  410e00:	0009 0009 000e 000e 000e 000e 0010 0010     ................
  410e10:	0016 0016 001e 001e 0025 0025 002c 002c     ........%.%.,.,.
  410e20:	002f 002f 002e 002e 0030 0030 002c 002c     /./.....0.0.,.,.
  410e30:	002c 002c 0023 0023 0022 0022 001e 001e     ,.,.#.#.".".....
  410e40:	001f 001f 001f 001f 0024 0024 0024 0024     ........$.$.$.$.
  410e50:	0024 0024 0020 0020 0020 0020 0019 0019     $.$. . . . .....
  410e60:	0012 0012 0008 0008 fffb fffb fff7 fff7     ................
  410e70:	ffeb ffeb ffe6 ffe6 ffdf ffdf ffdb ffdb     ................
  410e80:	ffdd ffdd ffdf ffdf ffde ffde ffdf ffdf     ................
  410e90:	ffdc ffdc ffd5 ffd5 ffc9 ffc9 ffc4 ffc4     ................
  410ea0:	ffc5 ffc5 ffd2 ffd2 ffe5 ffe5 fff6 fff6     ................
  410eb0:	0002 0002 000c 000c 0009 0009 ffff ffff     ................
  410ec0:	fff7 fff7 ffe9 ffe9 ffe3 ffe3 ffe7 ffe7     ................
  410ed0:	fff5 fff5 fff7 fff7 0006 0006 0009 0009     ................
  410ee0:	000c 000c 000e 000e 0010 0010 0015 0015     ................
  410ef0:	0019 0019 001c 001c 001b 001b 001c 001c     ................
  410f00:	0018 0018 0020 0020 0025 0025 0035 0035     .... . .%.%.5.5.
  410f10:	0041 0041 0039 0039 002e 002e 001f 001f     A.A.9.9.........
  410f20:	0008 0008 fff1 fff1 ffed ffed fff2 fff2     ................
  410f30:	0002 0002 0016 0016 0020 0020 0020 0020     ........ . . . .
  410f40:	0010 0010 fffe fffe ffef ffef ffe6 ffe6     ................
  410f50:	ffe9 ffe9 ffef ffef fff6 fff6 fff7 fff7     ................
  410f60:	ffee ffee ffea ffea ffe0 ffe0 ffe0 ffe0     ................
  410f70:	ffe8 ffe8 ffee ffee fff8 fff8 fff5 fff5     ................
  410f80:	ffe8 ffe8 ffde ffde ffdd ffdd ffe5 ffe5     ................
  410f90:	fff6 fff6 0008 0008 0016 0016 0017 0017     ................
  410fa0:	000b 000b fff5 fff5 ffe1 ffe1 ffd1 ffd1     ................
  410fb0:	ffd4 ffd4 ffe2 ffe2 fff1 fff1 fffb fffb     ................
  410fc0:	ffff ffff fffb fffb fffa fffa fff4 fff4     ................
  410fd0:	fff6 fff6 ffff ffff 0002 0002 000a 000a     ................
  410fe0:	000c 000c 000a 000a 0006 0006 0009 0009     ................
  410ff0:	0013 0013 001a 001a 0019 0019 0012 0012     ................
  411000:	0003 0003 fff5 fff5 ffe9 ffe9 ffe7 ffe7     ................
  411010:	fff1 fff1 0003 0003 001b 001b 002d 002d     ............-.-.
  411020:	0032 0032 0028 0028 0020 0020 0010 0010     2.2.(.(. . .....
  411030:	000b 000b 000e 000e 0010 0010 0013 0013     ................
  411040:	0017 0017 000d 000d 0001 0001 fff3 fff3     ................
  411050:	ffea ffea ffe4 ffe4 ffe1 ffe1 ffe6 ffe6     ................
  411060:	ffe7 ffe7 ffe7 ffe7 ffe1 ffe1 ffe5 ffe5     ................
  411070:	ffe9 ffe9 fff6 fff6 0000 0000 0009 0009     ................
  411080:	000a 000a 0004 0004 fff4 fff4 ffe2 ffe2     ................
  411090:	ffd2 ffd2 ffca ffca ffca ffca ffcc ffcc     ................
  4110a0:	ffd3 ffd3 ffd7 ffd7 ffd1 ffd1 ffd0 ffd0     ................
  4110b0:	ffd3 ffd3 ffd9 ffd9 ffe8 ffe8 fff9 fff9     ................
  4110c0:	000c 000c 0018 0018 0025 0025 0028 0028     ........%.%.(.(.
  4110d0:	0029 0029 002b 002b 002c 002c 002d 002d     ).).+.+.,.,.-.-.
  4110e0:	0026 0026 001e 001e 000b 000b fffc fffc     &.&.............
  4110f0:	ffef ffef ffe5 ffe5 ffed ffed fffb fffb     ................
  411100:	0010 0010 0019 0019 0023 0023 0021 0021     ........#.#.!.!.
  411110:	0015 0015 0012 0012 0011 0011 0017 0017     ................
  411120:	0020 0020 0026 0026 0027 0027 001e 001e      . .&.&.'.'.....
  411130:	000b 000b fff5 fff5 ffe8 ffe8 ffdb ffdb     ................
  411140:	ffd4 ffd4 ffd8 ffd8 ffdc ffdc ffe3 ffe3     ................
  411150:	ffe6 ffe6 ffee ffee fff5 fff5 fffb fffb     ................
  411160:	fffd fffd fffd fffd fffc fffc fff3 fff3     ................
  411170:	ffe7 ffe7 ffdc ffdc ffdb ffdb ffdc ffdc     ................
  411180:	ffe7 ffe7 ffeb ffeb fff0 fff0 ffe9 ffe9     ................
  411190:	ffe1 ffe1 ffda ffda ffd5 ffd5 ffd8 ffd8     ................
  4111a0:	ffe6 ffe6 fff9 fff9 0013 0013 0027 0027     ............'.'.
  4111b0:	0030 0030 0036 0036 002f 002f 0028 0028     0.0.6.6././.(.(.
  4111c0:	0024 0024 0017 0017 0011 0011 0006 0006     $.$.............
  4111d0:	0000 0000 fff9 fff9 fff5 fff5 fff4 fff4     ................
  4111e0:	fff8 fff8 0004 0004 0009 0009 0008 0008     ................
  4111f0:	000c 000c 000c 000c 0008 0008 0009 0009     ................
  411200:	000f 000f 0019 0019 0025 0025 002a 002a     ........%.%.*.*.
  411210:	002b 002b 0023 0023 000f 000f fffa fffa     +.+.#.#.........
  411220:	ffe5 ffe5 ffd9 ffd9 ffdb ffdb ffe3 ffe3     ................
  411230:	ffee ffee fffb fffb 0008 0008 000b 000b     ................
  411240:	000f 000f 0005 0005 0001 0001 0001 0001     ................
  411250:	ffff ffff fffd fffd fffc fffc fffe fffe     ................
  411260:	fffc fffc fffd fffd 0002 0002 0002 0002     ................
  411270:	fffc fffc fff4 fff4 ffee ffee fff2 fff2     ................
  411280:	fff4 fff4 fffe fffe 0008 0008 0017 0017     ................
  411290:	0021 0021 0025 0025 0021 0021 0020 0020     !.!.%.%.!.!. . .
  4112a0:	0020 0020 001d 001d 001e 001e 0011 0011      . .............
  4112b0:	000d 000d 0001 0001 fff4 fff4 ffe9 ffe9     ................
  4112c0:	ffe6 ffe6 ffea ffea fff6 fff6 fffc fffc     ................
  4112d0:	0002 0002 0003 0003 0001 0001 0002 0002     ................
  4112e0:	0004 0004 000c 000c 0012 0012 001c 001c     ................
  4112f0:	0022 0022 0025 0025 001d 001d 0017 0017     ".".%.%.........
  411300:	0010 0010 0005 0005 fffd fffd fff5 fff5     ................
  411310:	fff5 fff5 fff6 fff6 0000 0000 000d 000d     ................
  411320:	001d 001d 0027 0027 002c 002c 0023 0023     ....'.'.,.,.#.#.
  411330:	0017 0017 0004 0004 fff6 fff6 ffee ffee     ................
  411340:	fff1 fff1 fffa fffa 0004 0004 000b 000b     ................
  411350:	000e 000e 000b 000b fffc fffc ffef ffef     ................
  411360:	ffe9 ffe9 ffe7 ffe7 ffea ffea fff1 fff1     ................
  411370:	fff7 fff7 fffc fffc 000b 000b 000e 000e     ................
  411380:	0011 0011 0011 0011 0006 0006 fff8 fff8     ................
  411390:	ffe7 ffe7 ffda ffda ffd6 ffd6 ffdd ffdd     ................
  4113a0:	ffec ffec fffd fffd 000d 000d 0015 0015     ................
  4113b0:	0014 0014 0006 0006 fff7 fff7 fff0 fff0     ................
  4113c0:	ffed ffed fff9 fff9 0003 0003 0010 0010     ................
  4113d0:	0016 0016 0012 0012 000b 000b 0002 0002     ................
  4113e0:	fffb fffb fff5 fff5 fff8 fff8 fffa fffa     ................
  4113f0:	fff9 fff9 fffb fffb fffe fffe 0008 0008     ................
  411400:	0016 0016 0025 0025 0032 0032 0033 0033     ....%.%.2.2.3.3.
  411410:	0030 0030 0022 0022 0010 0010 0001 0001     0.0.".".........
  411420:	fff4 fff4 fff1 fff1 fff9 fff9 fffe fffe     ................
  411430:	0003 0003 ffff ffff fff8 fff8 fff4 fff4     ................
  411440:	ffea ffea ffee ffee fff4 fff4 fffc fffc     ................
  411450:	fffc fffc fff6 fff6 fff2 fff2 ffe2 ffe2     ................
  411460:	ffd8 ffd8 ffcc ffcc ffca ffca ffce ffce     ................
  411470:	ffce ffce ffd1 ffd1 ffd2 ffd2 ffd0 ffd0     ................
  411480:	ffd7 ffd7 ffe1 ffe1 ffec ffec 0000 0000     ................
  411490:	0010 0010 0020 0020 0025 0025 0025 0025     .... . .%.%.%.%.
  4114a0:	0023 0023 001f 001f 001e 001e 0023 0023     #.#.........#.#.
  4114b0:	0024 0024 0023 0023 0017 0017 000e 000e     $.$.#.#.........
  4114c0:	0004 0004 0001 0001 0000 0000 000f 000f     ................
  4114d0:	0019 0019 0021 0021 0026 0026 0025 0025     ....!.!.&.&.%.%.
  4114e0:	0020 0020 001d 001d 0018 0018 001d 001d      . .............
  4114f0:	001f 001f 001e 001e 001a 001a 0010 0010     ................
  411500:	fffd fffd ffee ffee ffe1 ffe1 ffda ffda     ................
  411510:	ffd5 ffd5 ffd5 ffd5 ffd7 ffd7 ffd5 ffd5     ................
  411520:	ffd6 ffd6 ffd4 ffd4 ffd6 ffd6 ffda ffda     ................
  411530:	ffdf ffdf ffe1 ffe1 ffe2 ffe2 ffe1 ffe1     ................
  411540:	ffdd ffdd ffd9 ffd9 ffdf ffdf ffe7 ffe7     ................
  411550:	ffef ffef fff6 fff6 fffa fffa ffff ffff     ................
  411560:	0003 0003 000c 000c 0012 0012 0015 0015     ................
  411570:	0018 0018 001b 001b 001a 001a 0014 0014     ................
  411580:	0012 0012 000f 000f 000f 000f 000e 000e     ................
  411590:	0010 0010 0013 0013 0011 0011 0009 0009     ................
  4115a0:	0003 0003 0003 0003 0006 0006 0009 0009     ................
  4115b0:	000c 000c 0010 0010 0009 0009 0006 0006     ................
  4115c0:	0000 0000 fffc fffc fff9 fff9 fffb fffb     ................
  4115d0:	0001 0001 0001 0001 fffe fffe fff9 fff9     ................
  4115e0:	fff8 fff8 fff2 fff2 fff2 fff2 fff0 fff0     ................
  4115f0:	fff1 fff1 fff0 fff0 ffec ffec ffe7 ffe7     ................
  411600:	ffe3 ffe3 ffe0 ffe0 ffe0 ffe0 ffe6 ffe6     ................
  411610:	ffe9 ffe9 ffeb ffeb ffec ffec ffec ffec     ................
  411620:	ffe9 ffe9 ffe2 ffe2 ffde ffde ffe2 ffe2     ................
  411630:	ffe5 ffe5 ffeb ffeb fff2 fff2 fff4 fff4     ................
  411640:	fff9 fff9 fffa fffa fffc fffc fffd fffd     ................
  411650:	fffe fffe fffe fffe 0004 0004 000d 000d     ................
  411660:	000f 000f 0014 0014 0010 0010 000e 000e     ................
  411670:	0007 0007 0007 0007 0005 0005 0009 0009     ................
  411680:	000c 000c 0011 0011 0014 0014 0013 0013     ................
  411690:	0010 0010 000a 000a 0005 0005 0003 0003     ................
  4116a0:	0001 0001 ffff ffff fff9 fff9 fff8 fff8     ................
  4116b0:	fff3 fff3 fff4 fff4 fff2 fff2 fff0 fff0     ................
  4116c0:	fff3 fff3 fff6 fff6 fff6 fff6 fff6 fff6     ................
  4116d0:	fff1 fff1 ffee ffee ffef ffef ffed ffed     ................
  4116e0:	fff1 fff1 fff6 fff6 fff8 fff8 fff6 fff6     ................
  4116f0:	ffef ffef ffea ffea ffe1 ffe1 ffe0 ffe0     ................
  411700:	ffe4 ffe4 ffeb ffeb fff2 fff2 fffc fffc     ................
  411710:	0003 0003 0006 0006 0004 0004 0001 0001     ................
  411720:	fffd fffd ffff ffff 0009 0009 0014 0014     ................
  411730:	0014 0014 0017 0017 0011 0011 0006 0006     ................
  411740:	fffe fffe fff8 fff8 fff2 fff2 ffed ffed     ................
  411750:	fff0 fff0 fff0 fff0 ffeb ffeb ffed ffed     ................
  411760:	fff2 fff2 fff4 fff4 fffc fffc 0004 0004     ................
  411770:	0006 0006 0003 0003 0002 0002 fffa fffa     ................
  411780:	fff5 fff5 fff5 fff5 fff9 fff9 ffff ffff     ................
  411790:	0007 0007 0006 0006 fffd fffd fff7 fff7     ................
  4117a0:	ffee ffee ffec ffec fff0 fff0 fff2 fff2     ................
  4117b0:	fffb fffb 0008 0008 0011 0011 0011 0011     ................
  4117c0:	000f 000f 000b 000b 0009 0009 0002 0002     ................
  4117d0:	0004 0004 0003 0003 fff9 fff9 fff8 fff8     ................
  4117e0:	fff6 fff6 fff9 fff9 fffc fffc 0003 0003     ................
  4117f0:	0009 0009 0008 0008 0008 0008 0001 0001     ................
  411800:	fff6 fff6 fff0 fff0 ffee ffee fff0 fff0     ................
  411810:	fff5 fff5 fffd fffd fffe fffe 0004 0004     ................
  411820:	ffff ffff 0001 0001 fffd fffd ffff ffff     ................
  411830:	fffc fffc fffd fffd 0002 0002 fffe fffe     ................
  411840:	ffff ffff fffc fffc 0000 0000 fffc fffc     ................
  411850:	fffd fffd fff6 fff6 ffee ffee ffe8 ffe8     ................
  411860:	ffe1 ffe1 ffe1 ffe1 ffe6 ffe6 ffed ffed     ................
  411870:	fff1 fff1 fff6 fff6 fff7 fff7 fff4 fff4     ................
  411880:	ffec ffec ffe7 ffe7 ffe8 ffe8 fff5 fff5     ................
  411890:	0004 0004 0012 0012 001b 001b 001d 001d     ................
  4118a0:	001b 001b 0010 0010 0008 0008 0003 0003     ................
  4118b0:	0007 0007 000c 000c 0013 0013 0019 0019     ................
  4118c0:	0017 0017 0010 0010 000f 000f 0011 0011     ................
  4118d0:	0010 0010 0014 0014 0010 0010 000b 000b     ................
  4118e0:	0001 0001 fffc fffc fff6 fff6 fff9 fff9     ................
  4118f0:	fffe fffe 0008 0008 0014 0014 0012 0012     ................
  411900:	0006 0006 fff1 fff1 ffe5 ffe5 ffdd ffdd     ................
  411910:	ffdd ffdd ffe8 ffe8 fff4 fff4 fffc fffc     ................
  411920:	0003 0003 fffe fffe ffee ffee ffe1 ffe1     ................
  411930:	ffd9 ffd9 ffdd ffdd ffdd ffdd ffea ffea     ................
  411940:	fff0 fff0 fff6 fff6 fff5 fff5 fff6 fff6     ................
  411950:	fff7 fff7 fff6 fff6 fff6 fff6 fff5 fff5     ................
  411960:	ffed ffed ffe2 ffe2 ffd8 ffd8 ffd2 ffd2     ................
  411970:	ffdf ffdf fff2 fff2 0008 0008 001b 001b     ................
  411980:	0022 0022 001f 001f 0014 0014 000a 000a     ".".............
  411990:	fffc fffc fffb fffb 0001 0001 0010 0010     ................
  4119a0:	001e 001e 0024 0024 0024 0024 001a 001a     ....$.$.$.$.....
  4119b0:	000c 000c 0001 0001 fff5 fff5 fff1 fff1     ................
  4119c0:	fff3 fff3 fff6 fff6 fffb fffb 0000 0000     ................
  4119d0:	0002 0002 0008 0008 0007 0007 000b 000b     ................
  4119e0:	0008 0008 fffd fffd ffef ffef ffe0 ffe0     ................
  4119f0:	ffd4 ffd4 ffd2 ffd2 ffd5 ffd5 ffdf ffdf     ................
  411a00:	ffea ffea ffef ffef fff0 fff0 ffe9 ffe9     ................
  411a10:	ffdc ffdc ffce ffce ffcc ffcc ffcf ffcf     ................
  411a20:	ffde ffde ffec ffec fffb fffb fffe fffe     ................
  411a30:	fffd fffd fff4 fff4 ffec ffec ffe6 ffe6     ................
  411a40:	ffe1 ffe1 ffe7 ffe7 ffe5 ffe5 ffe8 ffe8     ................
  411a50:	ffe8 ffe8 ffef ffef fff4 fff4 ffff ffff     ................
  411a60:	0002 0002 0009 0009 000a 000a 0004 0004     ................
  411a70:	fffd fffd fff7 fff7 fff2 fff2 fff9 fff9     ................
  411a80:	0009 0009 001c 001c 002d 002d 0032 0032     ........-.-.2.2.
  411a90:	0027 0027 0016 0016 0000 0000 ffef ffef     '.'.............
  411aa0:	ffe9 ffe9 ffe7 ffe7 fff3 fff3 fff9 fff9     ................
  411ab0:	0002 0002 0006 0006 0002 0002 0006 0006     ................
  411ac0:	0001 0001 fffb fffb fff2 fff2 ffe4 ffe4     ................
  411ad0:	ffd6 ffd6 ffd0 ffd0 ffd4 ffd4 ffd7 ffd7     ................
  411ae0:	ffe0 ffe0 ffec ffec fff4 fff4 fff2 fff2     ................
  411af0:	ffe8 ffe8 ffda ffda ffcb ffcb ffc7 ffc7     ................
  411b00:	ffce ffce ffde ffde fff2 fff2 0009 0009     ................
  411b10:	0019 0019 001b 001b 001d 001d 0015 0015     ................
  411b20:	000d 000d 0006 0006 0005 0005 0000 0000     ................
  411b30:	fffc fffc fffd fffd fff9 fff9 fffb fffb     ................
  411b40:	fffe fffe 0006 0006 0009 0009 000d 000d     ................
  411b50:	000b 000b 000b 000b ffff ffff ffff ffff     ................
  411b60:	fffd fffd 0000 0000 000d 000d 0019 0019     ................
  411b70:	001a 001a 0018 0018 0010 0010 fffd fffd     ................
  411b80:	ffef ffef ffe3 ffe3 ffde ffde ffe2 ffe2     ................
  411b90:	ffea ffea ffef ffef fff7 fff7 fff9 fff9     ................
  411ba0:	fffb fffb fffc fffc 0001 0001 0008 0008     ................
  411bb0:	000e 000e 000d 000d 000f 000f 000f 000f     ................
  411bc0:	0009 0009 0008 0008 0006 0006 0007 0007     ................
  411bd0:	0005 0005 0007 0007 0003 0003 fff6 fff6     ................
  411be0:	fff5 fff5 fff1 fff1 fff5 fff5 ffff ffff     ................
  411bf0:	000d 000d 0016 0016 001f 001f 0020 0020     ............ . .
  411c00:	001d 001d 0017 0017 000f 000f 000b 000b     ................
  411c10:	0006 0006 0000 0000 fffc fffc fff1 fff1     ................
  411c20:	ffee ffee ffe9 ffe9 ffe7 ffe7 ffec ffec     ................
  411c30:	fff0 fff0 fff9 fff9 ffff ffff 0004 0004     ................
  411c40:	0003 0003 0006 0006 000b 000b 000d 000d     ................
  411c50:	0010 0010 0012 0012 0011 0011 0009 0009     ................
  411c60:	ffff ffff fff8 fff8 fff9 fff9 fffa fffa     ................
  411c70:	ffff ffff 0003 0003 000c 000c 000a 000a     ................
  411c80:	0010 0010 000b 000b 000a 000a 000e 000e     ................
  411c90:	000a 000a 0012 0012 0016 0016 0016 0016     ................
  411ca0:	001a 001a 001a 001a 0014 0014 0011 0011     ................
  411cb0:	0010 0010 000e 000e 0008 0008 0007 0007     ................
  411cc0:	0001 0001 0000 0000 0000 0000 0000 0000     ................
  411cd0:	0006 0006 0009 0009 0008 0008 0009 0009     ................
  411ce0:	000a 000a 000a 000a 000a 000a 0008 0008     ................
  411cf0:	0004 0004 0009 0009 0007 0007 000b 000b     ................
  411d00:	0007 0007 0002 0002 fff9 fff9 fff1 fff1     ................
  411d10:	ffe6 ffe6 ffe3 ffe3 ffe8 ffe8 ffef ffef     ................
  411d20:	fffb fffb 0000 0000 0001 0001 0001 0001     ................
  411d30:	fffd fffd fffa fffa fff6 fff6 fffb fffb     ................
  411d40:	ffff ffff 0005 0005 0005 0005 0007 0007     ................
  411d50:	0002 0002 0002 0002 0002 0002 0000 0000     ................
  411d60:	0000 0000 fffe fffe fffa fffa fff6 fff6     ................
  411d70:	fff1 fff1 fff5 fff5 fffd fffd 000a 000a     ................
  411d80:	001d 001d 0024 0024 0022 0022 001b 001b     ....$.$.".".....
  411d90:	000e 000e 0002 0002 ffff ffff ffff ffff     ................
  411da0:	0006 0006 000f 000f 0011 0011 0012 0012     ................
  411db0:	000d 000d 0004 0004 ffff ffff fffb fffb     ................
  411dc0:	fffc fffc fffd fffd ffff ffff fffd fffd     ................
  411dd0:	fff6 fff6 fff4 fff4 fff3 fff3 fffa fffa     ................
  411de0:	0005 0005 000f 000f 0013 0013 0013 0013     ................
  411df0:	0008 0008 fffc fffc fff3 fff3 ffee ffee     ................
  411e00:	fff0 fff0 fffa fffa fffd fffd fffd fffd     ................
  411e10:	fffa fffa fff6 fff6 fff2 fff2 fff1 fff1     ................
  411e20:	fff5 fff5 fffb fffb 0001 0001 0005 0005     ................
  411e30:	0001 0001 0000 0000 fffa fffa fffb fffb     ................
  411e40:	0002 0002 0007 0007 000f 000f 000f 000f     ................
  411e50:	0005 0005 fff7 fff7 ffe7 ffe7 ffe4 ffe4     ................
  411e60:	ffe5 ffe5 ffed ffed fffa fffa 0004 0004     ................
  411e70:	000d 000d 0011 0011 0011 0011 000b 000b     ................
  411e80:	000a 000a 000d 000d 000e 000e 000c 000c     ................
  411e90:	000d 000d 0007 0007 fffd fffd fff3 fff3     ................
  411ea0:	fff2 fff2 fff5 fff5 fffa fffa fffe fffe     ................
  411eb0:	ffff ffff fffa fffa fff4 fff4 fff3 fff3     ................
  411ec0:	fff6 fff6 0000 0000 000e 000e 001b 001b     ................
  411ed0:	0024 0024 001e 001e 0017 0017 0004 0004     $.$.............
  411ee0:	fffb fffb ffed ffed ffe5 ffe5 ffe1 ffe1     ................
  411ef0:	ffd9 ffd9 ffd9 ffd9 ffd7 ffd7 ffd8 ffd8     ................
  411f00:	ffd8 ffd8 ffe2 ffe2 ffee ffee fff5 fff5     ................
  411f10:	fffd fffd fffe fffe fff6 fff6 fff4 fff4     ................
  411f20:	fff2 fff2 fff4 fff4 fffa fffa 0002 0002     ................
  411f30:	0001 0001 fffa fffa fff2 fff2 ffed ffed     ................
  411f40:	ffe6 ffe6 ffe5 ffe5 ffeb ffeb fff5 fff5     ................
  411f50:	fffe fffe 0005 0005 0008 0008 0005 0005     ................
	...
  411f68:	ffff ffff 0002 0002 0003 0003 0005 0005     ................
  411f78:	0005 0005 fffc fffc fff7 fff7 ffef ffef     ................
  411f88:	fff1 fff1 fff4 fff4 fff1 fff1 ffef ffef     ................
  411f98:	ffed ffed ffee ffee ffe7 ffe7 ffe8 ffe8     ................
  411fa8:	ffe4 ffe4 ffea ffea fff3 fff3 fffb fffb     ................
  411fb8:	fffe fffe fffe fffe fff6 fff6 ffed ffed     ................
  411fc8:	ffe7 ffe7 ffe2 ffe2 ffe5 ffe5 ffe4 ffe4     ................
  411fd8:	ffeb ffeb ffee ffee fff3 fff3 fff6 fff6     ................
  411fe8:	fff6 fff6 fff8 fff8 fff7 fff7 fffd fffd     ................
  411ff8:	fffc fffc 0001 0001 0000 0000 ffff ffff     ................
  412008:	0004 0004 0007 0007 000a 000a 000b 000b     ................
  412018:	000b 000b 0007 0007 ffff ffff fffb fffb     ................
  412028:	fff6 fff6 fff5 fff5 ffff ffff 000c 000c     ................
  412038:	0017 0017 0023 0023 0027 0027 0029 0029     ....#.#.'.'.).).
  412048:	0023 0023 0019 0019 0015 0015 0008 0008     #.#.............
  412058:	0000 0000 fff9 fff9 fff3 fff3 ffee ffee     ................
  412068:	ffea ffea ffe9 ffe9 ffe3 ffe3 ffe4 ffe4     ................
  412078:	ffe2 ffe2 ffe4 ffe4 ffe9 ffe9 fff3 fff3     ................
  412088:	fff9 fff9 0002 0002 0006 0006 000a 000a     ................
  412098:	000b 000b 0008 0008 0009 0009 0001 0001     ................
  4120a8:	0000 0000 fff9 fff9 fff7 fff7 fff0 fff0     ................
  4120b8:	fff5 fff5 fff8 fff8 fffb fffb 0004 0004     ................
  4120c8:	000b 000b 000c 000c 0011 0011 000e 000e     ................
  4120d8:	0011 0011 0019 0019 0020 0020 002f 002f     ........ . ././.
  4120e8:	0032 0032 0035 0035 002d 002d 0021 0021     2.2.5.5.-.-.!.!.
  4120f8:	000e 000e 0002 0002 fff7 fff7 0001 0001     ................
  412108:	0009 0009 0016 0016 0020 0020 0022 0022     ........ . .".".
  412118:	0020 0020 0021 0021 001e 001e 0020 0020      . .!.!..... . .
  412128:	0021 0021 0026 0026 001d 001d 001a 001a     !.!.&.&.........
  412138:	0013 0013 000c 000c 000b 000b 000a 000a     ................
  412148:	0011 0011 000c 000c 0006 0006 fffc fffc     ................
  412158:	ffef ffef ffe9 ffe9 ffe6 ffe6 fff1 fff1     ................
  412168:	0004 0004 0016 0016 0021 0021 0020 0020     ........!.!. . .
  412178:	0019 0019 000e 000e 0003 0003 fffd fffd     ................
  412188:	fff9 fff9 fffb fffb 0003 0003 0003 0003     ................
  412198:	0002 0002 0003 0003 0002 0002 ffff ffff     ................
  4121a8:	fffa fffa ffff ffff ffff ffff 0003 0003     ................
  4121b8:	0001 0001 fffd fffd 0001 0001 000a 000a     ................
  4121c8:	0017 0017 0022 0022 0029 0029 0028 0028     ....".".).).(.(.
  4121d8:	001f 001f 0010 0010 0000 0000 fff9 fff9     ................
  4121e8:	fff5 fff5 fffc fffc 0007 0007 000f 000f     ................
  4121f8:	0012 0012 000d 000d 000b 000b 0008 0008     ................
  412208:	0007 0007 000e 000e 0014 0014 001b 001b     ................
  412218:	001b 001b 001a 001a 0014 0014 0013 0013     ................
  412228:	0013 0013 0015 0015 0012 0012 000e 000e     ................
  412238:	0004 0004 fff1 fff1 ffe1 ffe1 ffd9 ffd9     ................
  412248:	ffdd ffdd ffe7 ffe7 fffd fffd 000e 000e     ................
  412258:	0012 0012 000d 000d 0006 0006 fffb fffb     ................
  412268:	fff1 fff1 ffef ffef fff6 fff6 fffc fffc     ................
  412278:	0000 0000 ffff ffff fffc fffc fff7 fff7     ................
  412288:	ffef ffef ffeb ffeb ffe9 ffe9 fff0 fff0     ................
  412298:	fff5 fff5 fff9 fff9 fffb fffb 0004 0004     ................
  4122a8:	000c 000c 0018 0018 0024 0024 0029 0029     ........$.$.).).
  4122b8:	0027 0027 001d 001d 000c 000c 0002 0002     '.'.............
  4122c8:	fffa fffa fffb fffb ffff ffff 0008 0008     ................
  4122d8:	0010 0010 000c 000c 0000 0000 fff8 fff8     ................
  4122e8:	fff0 fff0 ffe7 ffe7 ffe7 ffe7 ffeb ffeb     ................
  4122f8:	fff0 fff0 fff5 fff5 fff7 fff7 fff8 fff8     ................
  412308:	fff8 fff8 fff6 fff6 fff6 fff6 fff4 fff4     ................
  412318:	fff2 fff2 fff0 fff0 ffeb ffeb ffe8 ffe8     ................
  412328:	ffed ffed fff9 fff9 0006 0006 0011 0011     ................
  412338:	001e 001e 0020 0020 0018 0018 000f 000f     .... . .........
  412348:	0007 0007 0005 0005 0004 0004 000a 000a     ................
  412358:	0010 0010 0015 0015 0019 0019 0019 0019     ................
  412368:	0016 0016 0013 0013 0017 0017 0015 0015     ................
  412378:	001b 001b 001a 001a 001c 001c 0019 0019     ................
  412388:	0014 0014 0015 0015 0014 0014 0017 0017     ................
  412398:	0015 0015 0014 0014 000b 000b 0002 0002     ................
  4123a8:	fff7 fff7 fff3 fff3 fff3 fff3 fff3 fff3     ................
  4123b8:	fff3 fff3 fff0 fff0 fff0 fff0 ffee ffee     ................
  4123c8:	fff3 fff3 fff0 fff0 fff3 fff3 fff6 fff6     ................
  4123d8:	fff5 fff5 fff8 fff8 fff8 fff8 fffa fffa     ................
  4123e8:	fff4 fff4 fff4 fff4 fff5 fff5 fff9 fff9     ................
  4123f8:	fffa fffa 0001 0001 0003 0003 0005 0005     ................
  412408:	0004 0004 ffff ffff 0004 0004 000a 000a     ................
  412418:	452d 092d 4d57 3938 3430 6920 696e 6974     -E-.WM8904 initi
  412428:	6c61 7a69 7461 6f69 206e 6166 6c69 6465     alization failed
  412438:	0d2e 0000 4d57 3938 3430 6e20 746f 6620     ....WM8904 not f
  412448:	756f 646e 0a21 000d                         ound!...

00412450 <hanning>:
  412450:	c26b 361d c253 371d 7a70 37b1 c1f2 381d     k..6S..7pz.7...8
  412460:	7e98 3876 797a 38b1 8f61 38f1 c06d 391d     .~v8zy.8a..8m..9
  412470:	a6db 3947 7ae2 3976 1e32 3995 75a1 39b1     ..G9.zv92..9.u.9
  412480:	43ad 39d0 8841 39f1 a1a5 3a0a ba59 3a1d     .C.9A..9...:Y..:
  412490:	0e31 3a32 9d20 3a47 6719 3a5e 6c0d 3a76     1.2: .G:.g^:.lv:
  4124a0:	d5f7 3a87 1357 3a95 ee1d 3aa2 6641 3ab1     ...:W..:...:Af.:
  4124b0:	7bba 3ac0 2e7f 3ad0 7e86 3ae0 6bc5 3af1     .{.:...:.~.:.k.:
  4124c0:	7b19 3b01 8ee1 3b0a f134 3b13 a20e 3b1d     .{.;...;4..;...;
  4124d0:	a168 3b27 ef3b 3b31 8b82 3b3c 7637 3b47     h.';;.1;..<;7vG;
  4124e0:	af51 3b52 36cb 3b5e 0c9d 3b6a 30c0 3b76     Q.R;.6^;..j;.0v;
  4124f0:	5196 3b81 b1ee 3b87 3962 3b8e e7ef 3b94     .Q.;...;b9.;...;
  412500:	bd91 3b9b ba44 3ba2 de03 3ba9 28c9 3bb1     ...;D..;...;.(.;
  412510:	9a94 3bb8 335d 3bc0 f320 3bc7 d9d9 3bcf     ...;]3.; ..;...;
  412520:	e782 3bd7 1c17 3be0 7792 3be8 f9ef 3bf0     ...;...;.w.;...;
  412530:	a328 3bf9 399c 3c01 b50c 3c05 43e2 3c0a     (..;.9.<...<.C.<
  412540:	e61c 3c0e 9bb5 3c13 64ac 3c18 40fe 3c1d     ...<...<.d.<.@.<
  412550:	30a6 3c22 33a4 3c27 49f2 3c2c 738f 3c31     .0"<.3'<.I,<.s1<
  412560:	b076 3c36 00a5 3c3c 6419 3c41 dace 3c46     v.6<..<<.dA<..F<
  412570:	64c0 3c4c 01ed 3c52 b251 3c57 75e8 3c5d     .dL<..R<Q.W<.u]<
  412580:	4caf 3c63 36a2 3c69 33be 3c6f 43fe 3c75     .Lc<.6i<.3o<.Cu<
  412590:	6760 3c7b cef0 3c80 f3bc 3c83 2213 3c87     `g{<...<...<.".<
  4125a0:	59f3 3c8a 9b5a 3c8d e646 3c90 3ab5 3c94     .Y.<Z..<F..<.:.<
  4125b0:	98a5 3c97 0013 3c9b 70fe 3c9e eb63 3ca1     ...<...<.p.<c..<
  4125c0:	6f41 3ca5 fc95 3ca8 935d 3cac 3397 3cb0     Ao.<...<]..<.3.<
  4125d0:	dd40 3cb3 9057 3cb7 4cd8 3cbb 12c3 3cbf     @..<W..<.L.<...<
  4125e0:	e214 3cc2 bac8 3cc6 9cdf 3cca 8855 3cce     ...<...<...<U..<
  4125f0:	7d28 3cd2 7b55 3cd6 82da 3cda 93b5 3cde     (}.<U{.<...<...<
  412600:	ade2 3ce2 d160 3ce6 fe2c 3cea 3444 3cef     ...<`..<,..<D4.<
  412610:	73a4 3cf3 bc4a 3cf7 0e34 3cfc 34af 3d00     .s.<J..<4..<.4.=
  412620:	66e3 3d02 9db5 3d04 d924 3d06 192d 3d09     .f.=...=$..=-..=
  412630:	5dd0 3d0b a70b 3d0d f4dd 3d0f 4745 3d12     .].=...=...=EG.=
  412640:	9e40 3d14 f9cd 3d16 59ec 3d19 be9b 3d1b     @..=...=.Y.=...=
  412650:	27d7 3d1e 95a0 3d20 07f4 3d23 7ed2 3d25     .'.=.. =..#=.~%=
  412660:	fa38 3d27 7a24 3d2a fe96 3d2c 878b 3d2f     8.'=$z*=..,=../=
  412670:	1501 3d32 a6f8 3d34 3d6e 3d37 d861 3d39     ..2=..4=n=7=a.9=
  412680:	77d0 3d3c 1bb9 3d3f c419 3d41 70f1 3d44     .w<=..?=..A=.pD=
  412690:	223d 3d47 d7fd 3d49 922f 3d4c 50d0 3d4f     ="G=..I=/.L=.PO=
  4126a0:	13e0 3d52 db5d 3d54 a744 3d57 7795 3d5a     ..R=].T=D.W=.wZ=
  4126b0:	4c4d 3d5d 256b 3d60 02ec 3d63 e4d0 3d65     ML]=k%`=..c=..e=
  4126c0:	cb14 3d68 b5b7 3d6b a4b7 3d6e 9812 3d71     ..h=..k=..n=..q=
  4126d0:	8fc6 3d74 8bd1 3d77 8c32 3d7a 90e6 3d7d     ..t=..w=2.z=..}=
  4126e0:	4cf6 3d80 d3a1 3d81 5c73 3d83 e76c 3d84     .L.=...=s\.=l..=
  4126f0:	7489 3d86 03cb 3d88 952f 3d89 28b6 3d8b     .t.=...=/..=.(.=
  412700:	be5f 3d8c 5627 3d8e f00f 3d8f 8c16 3d91     _..='V.=...=...=
  412710:	2a39 3d93 ca79 3d94 6cd4 3d96 114a 3d98     9*.=y..=.l.=J..=
  412720:	b7d9 3d99 6080 3d9b 0b3f 3d9d b814 3d9e     ...=.`.=?..=...=
  412730:	66fe 3da0 17fc 3da2 cb0d 3da3 8031 3da5     .f.=...=...=1..=
  412740:	3765 3da7 f0aa 3da8 abfd 3daa 695f 3dac     e7.=...=...=_i.=
  412750:	28cd 3dae ea47 3daf adcb 3db1 7359 3db3     .(.=G..=...=Ys.=
  412760:	3af0 3db5 048d 3db7 d032 3db8 9ddb 3dba     .:.=...=2..=...=
  412770:	6d88 3dbc 3f38 3dbe 12ea 3dc0 e89d 3dc1     .m.=8?.=...=...=
  412780:	c04f 3dc3 9a00 3dc5 75ad 3dc7 5357 3dc9     O..=...=.u.=WS.=
  412790:	32fc 3dcb 149b 3dcd f832 3dce ddc1 3dd0     .2.=...=2..=...=
  4127a0:	c547 3dd2 aec1 3dd4 9a2f 3dd6 8791 3dd8     G..=...=/..=...=
  4127b0:	76e3 3dda 6826 3ddc 5b59 3dde 5079 3de0     .v.=&h.=Y[.=yP.=
  4127c0:	4786 3de2 407f 3de4 3b62 3de6 382f 3de8     .G.=.@.=b;.=/8.=
  4127d0:	36e3 3dea 377e 3dec 39fe 3dee 3e63 3df0     .6.=~7.=.9.=c>.=
  4127e0:	44ac 3df2 4cd4 3df4 56de 3df6 62c7 3df8     .D.=.L.=.V.=.b.=
  4127f0:	708e 3dfa 8032 3dfc 91b1 3dfe 5285 3e00     .p.=2..=...=.R.>
  412800:	5d1e 3e01 68a3 3e02 7513 3e03 826e 3e04     .].>.h.>.u.>n..>
  412810:	90b2 3e05 9fe0 3e06 aff6 3e07 c0f4 3e08     ...>...>...>...>
  412820:	d2da 3e09 e5a6 3e0a f958 3e0b 0def 3e0d     ...>...>X..>...>
  412830:	236a 3e0e 39ca 3e0f 510d 3e10 6932 3e11     j#.>.9.>.Q.>2i.>
  412840:	823a 3e12 9c22 3e13 b6ec 3e14 d295 3e15     :..>"..>...>...>
  412850:	ef1d 3e16 0c84 3e18 2ac8 3e19 49ea 3e1a     ...>...>.*.>.I.>
  412860:	69e8 3e1b 8ac2 3e1c ac77 3e1d cf06 3e1e     .i.>...>w..>...>
  412870:	f26f 3e1f 16b1 3e21 3bcb 3e22 61bd 3e23     o..>..!>.;">.a#>
  412880:	8886 3e24 b024 3e25 d898 3e26 01e1 3e28     ..$>$.%>..&>..(>
  412890:	2bfe 3e29 56ee 3e2a 82b0 3e2b af45 3e2c     .+)>.V*>..+>E.,>
  4128a0:	dcaa 3e2d 0ae0 3e2f 39e6 3e30 69ba 3e31     ..->../>.90>.i1>
  4128b0:	9a5d 3e32 cbcd 3e33 fe0a 3e34 3112 3e36     ].2>..3>..4>.16>
  4128c0:	64e7 3e37 9985 3e38 ceed 3e39 051f 3e3b     .d7>..8>..9>..;>
  4128d0:	3c18 3e3c 73d9 3e3d ac61 3e3e e5af 3e3f     .<<>.s=>a.>>..?>
  4128e0:	1fc2 3e41 5a9a 3e42 9635 3e43 d294 3e44     ..A>.ZB>5.C>..D>
  4128f0:	0fb4 3e46 4d96 3e47 8c39 3e48 cb9c 3e49     ..F>.MG>9.H>..I>
  412900:	0bbe 3e4b 4c9e 3e4c 8e3c 3e4d d097 3e4e     ..K>.LL><.M>..N>
  412910:	13ad 3e50 5780 3e51 9c0c 3e52 e153 3e53     ..P>.WQ>..R>S.S>
  412920:	2752 3e55 6e09 3e56 b578 3e57 fd9e 3e58     R'U>.nV>x.W>..X>
  412930:	4679 3e5a 9009 3e5b da4d 3e5c 2545 3e5e     yFZ>..[>M.\>E%^>
  412940:	70f0 3e5f bd4c 3e60 0a59 3e62 5817 3e63     .p_>L.`>Y.b>.Xc>
  412950:	a684 3e64 f59f 3e65 4569 3e67 95df 3e68     ..d>..e>iEg>..h>
  412960:	e702 3e69 38d0 3e6b 8b48 3e6c de6b 3e6d     ..i>.8k>H.l>k.m>
  412970:	3236 3e6f 86a9 3e70 dbc4 3e71 3185 3e73     62o>..p>..q>.1s>
  412980:	87eb 3e74 def7 3e75 36a7 3e77 8ef9 3e78     ..t>..u>.6w>..x>
  412990:	e7ee 3e79 4185 3e7b 9bbc 3e7c f693 3e7d     ..y>.A{>..|>..}>
  4129a0:	520a 3e7f 570f 3e80 0568 3e81 b40f 3e81     .R.>.W.>h..>...>
  4129b0:	6304 3e82 1246 3e83 c1d5 3e83 71b1 3e84     .c.>F..>...>.q.>
  4129c0:	21d9 3e85 d24d 3e85 830c 3e86 3416 3e87     .!.>M..>...>.4.>
  4129d0:	e56a 3e87 9709 3e88 48f1 3e89 fb22 3e89     j..>...>.H.>"..>
  4129e0:	ad9b 3e8a 605e 3e8b 1368 3e8c c6b9 3e8c     ...>^`.>h..>...>
  4129f0:	7a51 3e8d 2e30 3e8e e256 3e8e 96c0 3e8f     Qz.>0..>V..>...>
  412a00:	4b70 3e90 0065 3e91 b59f 3e91 6b1c 3e92     pK.>e..>...>.k.>
  412a10:	20dd 3e93 d6e1 3e93 8d28 3e94 43b0 3e95     . .>...>(..>.C.>
  412a20:	fa7b 3e95 b187 3e96 68d4 3e97 2061 3e98     {..>...>.h.>a .>
  412a30:	d82e 3e98 903b 3e99 4887 3e9a 0112 3e9b     ...>;..>.H.>...>
  412a40:	b9db 3e9b 72e1 3e9c 2c26 3e9d e5a6 3e9d     ...>.r.>&,.>...>
  412a50:	9f64 3e9e 595d 3e9f 1392 3ea0 ce02 3ea0     d..>]Y.>...>...>
  412a60:	88ad 3ea1 4392 3ea2 feb1 3ea2 ba09 3ea3     ...>.C.>...>...>
  412a70:	759a 3ea4 3163 3ea5 ed64 3ea5 a99d 3ea6     .u.>c1.>d..>...>
  412a80:	660d 3ea7 22b3 3ea8 df90 3ea8 9ca2 3ea9     .f.>.".>...>...>
  412a90:	59ea 3eaa 1766 3eab d517 3eab 92fb 3eac     .Y.>f..>...>...>
  412aa0:	5113 3ead 0f5e 3eae cddb 3eae 8c8b 3eaf     .Q.>^..>...>...>
  412ab0:	4b6c 3eb0 0a7e 3eb1 c9c1 3eb1 8934 3eb2     lK.>~..>...>4..>
  412ac0:	48d6 3eb3 08a8 3eb4 c8a9 3eb4 88d8 3eb5     .H.>...>...>...>
  412ad0:	4935 3eb6 09c0 3eb7 ca77 3eb7 8b5b 3eb8     5I.>...>w..>[..>
  412ae0:	4c6b 3eb9 0da6 3eba cf0d 3eba 909e 3ebb     kL.>...>...>...>
  412af0:	525a 3ebc 143f 3ebd d64d 3ebd 9884 3ebe     ZR.>?..>M..>...>
  412b00:	5ae4 3ebf 1d6b 3ec0 e01a 3ec0 a2ef 3ec1     .Z.>k..>...>...>
  412b10:	65eb 3ec2 290d 3ec3 ec54 3ec3 afc1 3ec4     .e.>.).>T..>...>
  412b20:	7352 3ec5 3707 3ec6 fae0 3ec6 bedc 3ec7     Rs.>.7.>...>...>
  412b30:	82fa 3ec8 473b 3ec9 0b9d 3eca d021 3eca     ...>;G.>...>!..>
  412b40:	94c5 3ecb 598a 3ecc 1e6f 3ecd e373 3ecd     ...>.Y.>o..>s..>
  412b50:	a895 3ece 6dd7 3ecf 3336 3ed0 f8b2 3ed0     ...>.m.>63.>...>
  412b60:	be4c 3ed1 8402 3ed2 49d4 3ed3 0fc2 3ed4     L..>...>.I.>...>
  412b70:	d5cb 3ed4 9bee 3ed5 622b 3ed6 2883 3ed7     ...>...>+b.>.(.>
  412b80:	eef3 3ed7 b57c 3ed8 7c1d 3ed9 42d6 3eda     ...>|..>.|.>.B.>
  412b90:	09a6 3edb d08d 3edb 978a 3edc 5e9e 3edd     ...>...>...>.^.>
  412ba0:	25c6 3ede ed03 3ede b455 3edf 7bba 3ee0     .%.>...>U..>.{.>
  412bb0:	4333 3ee1 0abf 3ee2 d25e 3ee2 9a0e 3ee3     3C.>...>^..>...>
  412bc0:	61d0 3ee4 29a3 3ee5 f186 3ee5 b97a 3ee6     .a.>.).>...>z..>
  412bd0:	817d 3ee7 498f 3ee8 11b0 3ee9 d9df 3ee9     }..>.I.>...>...>
  412be0:	a21b 3eea 6a65 3eeb 32bc 3eec fb1e 3eec     ...>ej.>.2.>...>
  412bf0:	c38d 3eed 8c06 3eee 548a 3eef 1d19 3ef0     ...>...>.T.>...>
  412c00:	e5b1 3ef0 ae53 3ef1 76fe 3ef2 3fb1 3ef3     ...>S..>.v.>.?.>
  412c10:	086b 3ef4 d12d 3ef4 99f6 3ef5 62c6 3ef6     k..>-..>...>.b.>
  412c20:	2b9b 3ef7 f476 3ef7 bd56 3ef8 863a 3ef9     .+.>v..>V..>:..>
  412c30:	4f22 3efa 180e 3efb e0fc 3efb a9ee 3efc     "O.>...>...>...>
  412c40:	72e1 3efd 3bd6 3efe 04cc 3eff cdc2 3eff     .r.>.;.>...>...>
  412c50:	4b5d 3f00 afd8 3f00 1452 3f01 78cc 3f01     ]K.?...?R..?.x.?
  412c60:	dd46 3f01 41be 3f02 a634 3f02 0aa9 3f03     F..?.A.?4..?...?
  412c70:	6f1c 3f03 d38d 3f03 37fc 3f04 9c68 3f04     .o.?...?.7.?h..?
  412c80:	00d1 3f05 6538 3f05 c99a 3f05 2dfa 3f06     ...?8e.?...?.-.?
  412c90:	9255 3f06 f6ac 3f06 5aff 3f07 bf4e 3f07     U..?...?.Z.?N..?
  412ca0:	2398 3f08 87dd 3f08 ec1c 3f08 5056 3f09     .#.?...?...?VP.?
  412cb0:	b48a 3f09 18b9 3f0a 7ce1 3f0a e102 3f0a     ...?...?.|.?...?
  412cc0:	451d 3f0b a931 3f0b 0d3e 3f0c 7143 3f0c     .E.?1..?>..?Cq.?
  412cd0:	d541 3f0c 3937 3f0d 9d24 3f0d 010a 3f0e     A..?79.?$..?...?
  412ce0:	64e6 3f0e c8ba 3f0e 2c84 3f0f 9046 3f0f     .d.?...?.,.?F..?
  412cf0:	f3fd 3f0f 57ab 3f10 bb4f 3f10 1ee8 3f11     ...?.W.?O..?...?
  412d00:	8277 3f11 e5fb 3f11 4975 3f12 ace2 3f12     w..?...?uI.?...?
  412d10:	1045 3f13 739b 3f13 d6e6 3f13 3a24 3f14     E..?.s.?...?$:.?
  412d20:	9d56 3f14 007b 3f15 6394 3f15 c69f 3f15     V..?{..?.c.?...?
  412d30:	299c 3f16 8c8c 3f16 ef6e 3f16 5242 3f17     .).?...?n..?BR.?
  412d40:	b508 3f17 17bf 3f18 7a67 3f18 dd00 3f18     ...?...?gz.?...?
  412d50:	3f8a 3f19 a204 3f19 046e 3f1a 66c9 3f1a     .?.?...?n..?.f.?
  412d60:	c913 3f1a 2b4c 3f1b 8d75 3f1b ef8d 3f1b     ...?L+.?u..?...?
  412d70:	5193 3f1c b389 3f1c 156c 3f1d 773e 3f1d     .Q.?...?l..?>w.?
  412d80:	d8fd 3f1d 3aaa 3f1e 9c44 3f1e fdcc 3f1e     ...?.:.?D..?...?
  412d90:	5f40 3f1f c0a1 3f1f 21ef 3f20 8329 3f20     @_.?...?.! ?). ?
  412da0:	e44e 3f20 4560 3f21 a65d 3f21 0745 3f22     N. ?`E!?].!?E."?
  412db0:	6818 3f22 c8d6 3f22 297e 3f23 8a11 3f23     .h"?.."?~)#?..#?
  412dc0:	ea8e 3f23 4af5 3f24 ab46 3f24 0b80 3f25     ..#?.J$?F.$?..%?
  412dd0:	6ba3 3f25 cbaf 3f25 2ba3 3f26 8b81 3f26     .k%?..%?.+&?..&?
  412de0:	eb46 3f26 4af3 3f27 aa89 3f27 0a05 3f28     F.&?.J'?..'?..(?
  412df0:	696a 3f28 c8b5 3f28 27e7 3f29 8700 3f29     ji(?..(?.')?..)?
  412e00:	e5ff 3f29 44e4 3f2a a3af 3f2a 0260 3f2b     ..)?.D*?..*?`.+?
  412e10:	60f7 3f2b bf72 3f2b 1dd3 3f2c 7c19 3f2c     .`+?r.+?..,?.|,?
  412e20:	da43 3f2c 3852 3f2d 9644 3f2d f41b 3f2d     C.,?R8-?D.-?..-?
  412e30:	51d5 3f2e af73 3f2e 0cf4 3f2f 6a58 3f2f     .Q.?s..?../?Xj/?
  412e40:	c79f 3f2f 24c8 3f30 81d3 3f30 dec1 3f30     ../?.$0?..0?..0?
  412e50:	3b91 3f31 9842 3f31 f4d5 3f31 5149 3f32     .;1?B.1?..1?IQ2?
  412e60:	ad9e 3f32 09d3 3f33 65ea 3f33 c1e0 3f33     ..2?..3?.e3?..3?
  412e70:	1db7 3f34 796d 3f34 d504 3f34 3079 3f35     ..4?my4?..4?y05?
  412e80:	8bce 3f35 e702 3f35 4215 3f36 9d06 3f36     ..5?..5?.B6?..6?
  412e90:	f7d5 3f36 5283 3f37 ad0f 3f37 0778 3f38     ..6?.R7?..7?x.8?
  412ea0:	61bf 3f38 bbe3 3f38 15e4 3f39 6fc2 3f39     .a8?..8?..9?.o9?
  412eb0:	c97c 3f39 2313 3f3a 7c86 3f3a d5d5 3f3a     |.9?.#:?.|:?..:?
  412ec0:	2f00 3f3b 8806 3f3b e0e8 3f3b 39a5 3f3c     ./;?..;?..;?.9<?
  412ed0:	923c 3f3c eaae 3f3c 42fb 3f3d 9b22 3f3d     <.<?..<?.B=?".=?
  412ee0:	f323 3f3d 4afe 3f3e a2b2 3f3e fa40 3f3e     #.=?.J>?..>?@.>?
  412ef0:	51a7 3f3f a8e7 3f3f 0000 3f40 56f1 3f40     .Q??..??..@?.V@?
  412f00:	adbb 3f40 045d 3f41 5ad7 3f41 b128 3f41     ..@?].A?.ZA?(.A?
  412f10:	0751 3f42 5d51 3f42 b329 3f42 08d7 3f43     Q.B?Q]B?).B?..C?
  412f20:	5e5c 3f43 b3b8 3f43 08e9 3f44 5df1 3f44     \^C?..C?..D?.]D?
  412f30:	b2cf 3f44 0782 3f45 5c0b 3f45 b069 3f45     ..D?..E?.\E?i.E?
  412f40:	049c 3f46 58a4 3f46 ac81 3f46 0032 3f47     ..F?.XF?..F?2.G?
  412f50:	53b7 3f47 a711 3f47 fa3e 3f47 4d3f 3f48     .SG?..G?>.G??MH?
  412f60:	a013 3f48 f2bb 3f48 4535 3f49 9783 3f49     ..H?..H?5EI?..I?
  412f70:	e9a3 3f49 3b96 3f4a 8d5a 3f4a def1 3f4a     ..I?.;J?Z.J?..J?
  412f80:	305a 3f4b 8194 3f4b d2a0 3f4b 237d 3f4c     Z0K?..K?..K?}#L?
  412f90:	742c 3f4c c4ab 3f4c 14fa 3f4d 651b 3f4d     ,tL?..L?..M?.eM?
  412fa0:	b50b 3f4d 04cc 3f4e 545d 3f4e a3bd 3f4e     ..M?..N?]TN?..N?
  412fb0:	f2ed 3f4e 41ec 3f4f 90bb 3f4f df58 3f4f     ..N?.AO?..O?X.O?
  412fc0:	2dc4 3f50 7bff 3f50 ca08 3f50 17df 3f51     .-P?.{P?..P?..Q?
  412fd0:	6585 3f51 b2f8 3f51 0039 3f52 4d47 3f52     .eQ?..Q?9.R?GMR?
  412fe0:	9a23 3f52 e6cc 3f52 3341 3f53 7f84 3f53     #.R?..R?A3S?..S?
  412ff0:	cb92 3f53 176e 3f54 6315 3f54 ae89 3f54     ..S?n.T?.cT?..T?
  413000:	f9c8 3f54 44d3 3f55 8fa9 3f55 da4b 3f55     ..T?.DU?..U?K.U?
  413010:	24b7 3f56 6eef 3f56 b8f1 3f56 02be 3f57     .$V?.nV?..V?..W?
  413020:	4c56 3f57 95b7 3f57 dee3 3f57 27d8 3f58     VLW?..W?..W?.'X?
  413030:	7097 3f58 b920 3f58 0172 3f59 498d 3f59     .pX? .X?r.Y?.IY?
  413040:	9171 3f59 d91d 3f59 2093 3f5a 67d1 3f5a     q.Y?..Y?. Z?.gZ?
  413050:	aed7 3f5a f5a5 3f5a 3c3b 3f5b 829a 3f5b     ..Z?..Z?;<[?..[?
  413060:	c8bf 3f5b 0eac 3f5c 5461 3f5c 99dc 3f5c     ..[?..\?aT\?..\?
  413070:	df1e 3f5c 2428 3f5d 68f7 3f5d ad8d 3f5d     ..\?($]?.h]?..]?
  413080:	f1ea 3f5d 360c 3f5e 79f5 3f5e bda3 3f5e     ..]?.6^?.y^?..^?
  413090:	0117 3f5f 4451 3f5f 874f 3f5f ca13 3f5f     .._?QD_?O._?.._?
  4130a0:	0c9c 3f60 4ee9 3f60 90fb 3f60 d2d2 3f60     ..`?.N`?..`?..`?
  4130b0:	146d 3f61 55cc 3f61 96f0 3f61 d7d7 3f61     m.a?.Ua?..a?..a?
  4130c0:	1881 3f62 58f0 3f62 9922 3f62 d917 3f62     ..b?.Xb?".b?..b?
  4130d0:	18cf 3f63 584a 3f63 9787 3f63 d688 3f63     ..c?JXc?..c?..c?
  4130e0:	154b 3f64 53d0 3f64 9217 3f64 d021 3f64     K.d?.Sd?..d?!.d?
  4130f0:	0dec 3f65 4b79 3f65 88c7 3f65 c5d7 3f65     ..e?yKe?..e?..e?
  413100:	02a9 3f66 3f3b 3f66 7b8e 3f66 b7a3 3f66     ..f?;?f?.{f?..f?
  413110:	f378 3f66 2f0d 3f67 6a63 3f67 a579 3f67     x.f?./g?cjg?y.g?
  413120:	e050 3f67 1ae6 3f68 553c 3f68 8f52 3f68     P.g?..h?<Uh?R.h?
  413130:	c927 3f68 02bc 3f69 3c10 3f69 7524 3f69     '.h?..i?.<i?$ui?
  413140:	adf6 3f69 e687 3f69 1ed7 3f6a 56e5 3f6a     ..i?..i?..j?.Vj?
  413150:	8eb2 3f6a c63e 3f6a fd87 3f6a 348f 3f6b     ..j?>.j?..j?.4k?
  413160:	6b54 3f6b a1d8 3f6b d819 3f6b 0e17 3f6c     Tkk?..k?..k?..l?
  413170:	43d3 3f6c 794c 3f6c ae83 3f6c e376 3f6c     .Cl?Lyl?..l?v.l?
  413180:	1826 3f6d 4c94 3f6d 80bd 3f6d b4a4 3f6d     &.m?.Lm?..m?..m?
  413190:	e846 3f6d 1ba5 3f6e 4ec0 3f6e 8197 3f6e     F.m?..n?.Nn?..n?
  4131a0:	b42a 3f6e e679 3f6e 1883 3f6f 4a49 3f6f     *.n?y.n?..o?IJo?
  4131b0:	7bcb 3f6f ad07 3f6f ddff 3f6f 0eb2 3f70     .{o?..o?..o?..p?
  4131c0:	3f20 3f70 6f49 3f70 9f2c 3f70 ceca 3f70      ?p?Iop?,.p?..p?
  4131d0:	fe22 3f70 2d35 3f71 5c02 3f71 8a8a 3f71     ".p?5-q?.\q?..q?
  4131e0:	b8cb 3f71 e6c6 3f71 147b 3f72 41ea 3f72     ..q?..q?{.r?.Ar?
  4131f0:	6f12 3f72 9bf4 3f72 c88f 3f72 f4e3 3f72     .or?..r?..r?..r?
  413200:	20f1 3f73 4cb8 3f73 7837 3f73 a36f 3f73     . s?.Ls?7xs?o.s?
  413210:	ce61 3f73 f90a 3f73 236d 3f74 4d87 3f74     a.s?..s?m#t?.Mt?
  413220:	775a 3f74 a0e6 3f74 ca29 3f74 f325 3f74     Zwt?..t?).t?%.t?
  413230:	1bd8 3f75 4443 3f75 6c66 3f75 9441 3f75     ..u?CDu?flu?A.u?
  413240:	bbd3 3f75 e31c 3f75 0a1d 3f76 30d6 3f76     ..u?..u?..v?.0v?
  413250:	5745 3f76 7d6b 3f76 a349 3f76 c8dd 3f76     EWv?k}v?I.v?..v?
  413260:	ee28 3f76 132a 3f77 37e2 3f77 5c51 3f77     (.v?*.w?.7w?Q\w?
  413270:	8077 3f77 a452 3f77 c7e4 3f77 eb2d 3f77     w.w?R.w?..w?-.w?
  413280:	0e2b 3f78 30df 3f78 534a 3f78 756a 3f78     +.x?.0x?JSx?jux?
  413290:	9740 3f78 b8cb 3f78 da0c 3f78 fb03 3f78     @.x?..x?..x?..x?
  4132a0:	1baf 3f79 3c11 3f79 5c27 3f79 7bf3 3f79     ..y?.<y?'\y?.{y?
  4132b0:	9b75 3f79 baab 3f79 d996 3f79 f836 3f79     u.y?..y?..y?6.y?
  4132c0:	168b 3f7a 3495 3f7a 5253 3f7a 6fc6 3f7a     ..z?.4z?SRz?.oz?
  4132d0:	8cee 3f7a a9ca 3f7a c65a 3f7a e29f 3f7a     ..z?..z?Z.z?..z?
  4132e0:	fe98 3f7a 1a45 3f7b 35a7 3f7b 50bc 3f7b     ..z?E.{?.5{?.P{?
  4132f0:	6b86 3f7b 8603 3f7b a034 3f7b ba19 3f7b     .k{?..{?4.{?..{?
  413300:	d3b2 3f7b ecff 3f7b 05ff 3f7c 1eb3 3f7c     ..{?..{?..|?..|?
  413310:	371a 3f7c 4f35 3f7c 6703 3f7c 7e84 3f7c     .7|?5O|?.g|?.~|?
  413320:	95b9 3f7c aca1 3f7c c33c 3f7c d98b 3f7c     ..|?..|?<.|?..|?
  413330:	ef8c 3f7c 0540 3f7d 1aa7 3f7d 2fc2 3f7d     ..|?@.}?..}?./}?
  413340:	448f 3f7d 590e 3f7d 6d41 3f7d 8126 3f7d     .D}?.Y}?Am}?&.}?
  413350:	94be 3f7d a809 3f7d bb06 3f7d cdb6 3f7d     ..}?..}?..}?..}?
  413360:	e018 3f7d f22c 3f7d 03f3 3f7e 156d 3f7e     ..}?,.}?..~?m.~?
  413370:	2698 3f7e 3776 3f7e 4806 3f7e 5848 3f7e     .&~?v7~?.H~?HX~?
  413380:	683d 3f7e 77e3 3f7e 873c 3f7e 9646 3f7e     =h~?.w~?<.~?F.~?
  413390:	a503 3f7e b371 3f7e c192 3f7e cf64 3f7e     ..~?q.~?..~?d.~?
  4133a0:	dce8 3f7e ea1e 3f7e f706 3f7e 03a0 3f7f     ..~?..~?..~?...?
  4133b0:	0feb 3f7f 1be8 3f7f 2797 3f7f 32f7 3f7f     ...?...?.'.?.2.?
  4133c0:	3e09 3f7f 48cc 3f7f 5341 3f7f 5d68 3f7f     .>.?.H.?AS.?h].?
  4133d0:	6740 3f7f 70ca 3f7f 7a05 3f7f 82f1 3f7f     @g.?.p.?.z.?...?
  4133e0:	8b8f 3f7f 93df 3f7f 9bdf 3f7f a391 3f7f     ...?...?...?...?
  4133f0:	aaf5 3f7f b209 3f7f b8d0 3f7f bf47 3f7f     ...?...?...?G..?
  413400:	c56f 3f7f cb49 3f7f d0d4 3f7f d611 3f7f     o..?I..?...?...?
  413410:	dafe 3f7f df9d 3f7f e3ed 3f7f e7ee 3f7f     ...?...?...?...?
  413420:	eba1 3f7f ef04 3f7f f219 3f7f f4df 3f7f     ...?...?...?...?
  413430:	f756 3f7f f97e 3f7f fb57 3f7f fce1 3f7f     V..?~..?W..?...?
  413440:	fe1d 3f7f ff0a 3f7f ffa7 3f7f fff6 3f7f     ...?...?...?...?
  413450:	fff6 3f7f ffa7 3f7f ff0a 3f7f fe1d 3f7f     ...?...?...?...?
  413460:	fce1 3f7f fb57 3f7f f97e 3f7f f756 3f7f     ...?W..?~..?V..?
  413470:	f4df 3f7f f219 3f7f ef04 3f7f eba1 3f7f     ...?...?...?...?
  413480:	e7ee 3f7f e3ed 3f7f df9d 3f7f dafe 3f7f     ...?...?...?...?
  413490:	d611 3f7f d0d4 3f7f cb49 3f7f c56f 3f7f     ...?...?I..?o..?
  4134a0:	bf47 3f7f b8d0 3f7f b209 3f7f aaf5 3f7f     G..?...?...?...?
  4134b0:	a391 3f7f 9bdf 3f7f 93df 3f7f 8b8f 3f7f     ...?...?...?...?
  4134c0:	82f1 3f7f 7a05 3f7f 70ca 3f7f 6740 3f7f     ...?.z.?.p.?@g.?
  4134d0:	5d68 3f7f 5341 3f7f 48cc 3f7f 3e09 3f7f     h].?AS.?.H.?.>.?
  4134e0:	32f7 3f7f 2797 3f7f 1be8 3f7f 0feb 3f7f     .2.?.'.?...?...?
  4134f0:	03a0 3f7f f706 3f7e ea1e 3f7e dce8 3f7e     ...?..~?..~?..~?
  413500:	cf64 3f7e c192 3f7e b371 3f7e a503 3f7e     d.~?..~?q.~?..~?
  413510:	9646 3f7e 873c 3f7e 77e3 3f7e 683d 3f7e     F.~?<.~?.w~?=h~?
  413520:	5848 3f7e 4806 3f7e 3776 3f7e 2698 3f7e     HX~?.H~?v7~?.&~?
  413530:	156d 3f7e 03f3 3f7e f22c 3f7d e018 3f7d     m.~?..~?,.}?..}?
  413540:	cdb6 3f7d bb06 3f7d a809 3f7d 94be 3f7d     ..}?..}?..}?..}?
  413550:	8126 3f7d 6d41 3f7d 590e 3f7d 448f 3f7d     &.}?Am}?.Y}?.D}?
  413560:	2fc2 3f7d 1aa7 3f7d 0540 3f7d ef8c 3f7c     ./}?..}?@.}?..|?
  413570:	d98b 3f7c c33c 3f7c aca1 3f7c 95b9 3f7c     ..|?<.|?..|?..|?
  413580:	7e84 3f7c 6703 3f7c 4f35 3f7c 371a 3f7c     .~|?.g|?5O|?.7|?
  413590:	1eb3 3f7c 05ff 3f7c ecff 3f7b d3b2 3f7b     ..|?..|?..{?..{?
  4135a0:	ba19 3f7b a034 3f7b 8603 3f7b 6b86 3f7b     ..{?4.{?..{?.k{?
  4135b0:	50bc 3f7b 35a7 3f7b 1a45 3f7b fe98 3f7a     .P{?.5{?E.{?..z?
  4135c0:	e29f 3f7a c65a 3f7a a9ca 3f7a 8cee 3f7a     ..z?Z.z?..z?..z?
  4135d0:	6fc6 3f7a 5253 3f7a 3495 3f7a 168b 3f7a     .oz?SRz?.4z?..z?
  4135e0:	f836 3f79 d996 3f79 baab 3f79 9b75 3f79     6.y?..y?..y?u.y?
  4135f0:	7bf3 3f79 5c27 3f79 3c11 3f79 1baf 3f79     .{y?'\y?.<y?..y?
  413600:	fb03 3f78 da0c 3f78 b8cb 3f78 9740 3f78     ..x?..x?..x?@.x?
  413610:	756a 3f78 534a 3f78 30df 3f78 0e2b 3f78     jux?JSx?.0x?+.x?
  413620:	eb2d 3f77 c7e4 3f77 a452 3f77 8077 3f77     -.w?..w?R.w?w.w?
  413630:	5c51 3f77 37e2 3f77 132a 3f77 ee28 3f76     Q\w?.7w?*.w?(.v?
  413640:	c8dd 3f76 a349 3f76 7d6b 3f76 5745 3f76     ..v?I.v?k}v?EWv?
  413650:	30d6 3f76 0a1d 3f76 e31c 3f75 bbd3 3f75     .0v?..v?..u?..u?
  413660:	9441 3f75 6c66 3f75 4443 3f75 1bd8 3f75     A.u?flu?CDu?..u?
  413670:	f325 3f74 ca29 3f74 a0e6 3f74 775a 3f74     %.t?).t?..t?Zwt?
  413680:	4d87 3f74 236d 3f74 f90a 3f73 ce61 3f73     .Mt?m#t?..s?a.s?
  413690:	a36f 3f73 7837 3f73 4cb8 3f73 20f1 3f73     o.s?7xs?.Ls?. s?
  4136a0:	f4e3 3f72 c88f 3f72 9bf4 3f72 6f12 3f72     ..r?..r?..r?.or?
  4136b0:	41ea 3f72 147b 3f72 e6c6 3f71 b8cb 3f71     .Ar?{.r?..q?..q?
  4136c0:	8a8a 3f71 5c02 3f71 2d35 3f71 fe22 3f70     ..q?.\q?5-q?".p?
  4136d0:	ceca 3f70 9f2c 3f70 6f49 3f70 3f20 3f70     ..p?,.p?Iop? ?p?
  4136e0:	0eb2 3f70 ddff 3f6f ad07 3f6f 7bcb 3f6f     ..p?..o?..o?.{o?
  4136f0:	4a49 3f6f 1883 3f6f e679 3f6e b42a 3f6e     IJo?..o?y.n?*.n?
  413700:	8197 3f6e 4ec0 3f6e 1ba5 3f6e e846 3f6d     ..n?.Nn?..n?F.m?
  413710:	b4a4 3f6d 80bd 3f6d 4c94 3f6d 1826 3f6d     ..m?..m?.Lm?&.m?
  413720:	e376 3f6c ae83 3f6c 794c 3f6c 43d3 3f6c     v.l?..l?Lyl?.Cl?
  413730:	0e17 3f6c d819 3f6b a1d8 3f6b 6b54 3f6b     ..l?..k?..k?Tkk?
  413740:	348f 3f6b fd87 3f6a c63e 3f6a 8eb2 3f6a     .4k?..j?>.j?..j?
  413750:	56e5 3f6a 1ed7 3f6a e687 3f69 adf6 3f69     .Vj?..j?..i?..i?
  413760:	7524 3f69 3c10 3f69 02bc 3f69 c927 3f68     $ui?.<i?..i?'.h?
  413770:	8f52 3f68 553c 3f68 1ae6 3f68 e050 3f67     R.h?<Uh?..h?P.g?
  413780:	a579 3f67 6a63 3f67 2f0d 3f67 f378 3f66     y.g?cjg?./g?x.f?
  413790:	b7a3 3f66 7b8e 3f66 3f3b 3f66 02a9 3f66     ..f?.{f?;?f?..f?
  4137a0:	c5d7 3f65 88c7 3f65 4b79 3f65 0dec 3f65     ..e?..e?yKe?..e?
  4137b0:	d021 3f64 9217 3f64 53d0 3f64 154b 3f64     !.d?..d?.Sd?K.d?
  4137c0:	d688 3f63 9787 3f63 584a 3f63 18cf 3f63     ..c?..c?JXc?..c?
  4137d0:	d917 3f62 9922 3f62 58f0 3f62 1881 3f62     ..b?".b?.Xb?..b?
  4137e0:	d7d7 3f61 96f0 3f61 55cc 3f61 146d 3f61     ..a?..a?.Ua?m.a?
  4137f0:	d2d2 3f60 90fb 3f60 4ee9 3f60 0c9c 3f60     ..`?..`?.N`?..`?
  413800:	ca13 3f5f 874f 3f5f 4451 3f5f 0117 3f5f     .._?O._?QD_?.._?
  413810:	bda3 3f5e 79f5 3f5e 360c 3f5e f1ea 3f5d     ..^?.y^?.6^?..]?
  413820:	ad8d 3f5d 68f7 3f5d 2428 3f5d df1e 3f5c     ..]?.h]?($]?..\?
  413830:	99dc 3f5c 5461 3f5c 0eac 3f5c c8bf 3f5b     ..\?aT\?..\?..[?
  413840:	829a 3f5b 3c3b 3f5b f5a5 3f5a aed7 3f5a     ..[?;<[?..Z?..Z?
  413850:	67d1 3f5a 2093 3f5a d91d 3f59 9171 3f59     .gZ?. Z?..Y?q.Y?
  413860:	498d 3f59 0172 3f59 b920 3f58 7097 3f58     .IY?r.Y? .X?.pX?
  413870:	27d8 3f58 dee3 3f57 95b7 3f57 4c56 3f57     .'X?..W?..W?VLW?
  413880:	02be 3f57 b8f1 3f56 6eef 3f56 24b7 3f56     ..W?..V?.nV?.$V?
  413890:	da4b 3f55 8fa9 3f55 44d3 3f55 f9c8 3f54     K.U?..U?.DU?..T?
  4138a0:	ae89 3f54 6315 3f54 176e 3f54 cb92 3f53     ..T?.cT?n.T?..S?
  4138b0:	7f84 3f53 3341 3f53 e6cc 3f52 9a23 3f52     ..S?A3S?..R?#.R?
  4138c0:	4d47 3f52 0039 3f52 b2f8 3f51 6585 3f51     GMR?9.R?..Q?.eQ?
  4138d0:	17df 3f51 ca08 3f50 7bff 3f50 2dc4 3f50     ..Q?..P?.{P?.-P?
  4138e0:	df58 3f4f 90bb 3f4f 41ec 3f4f f2ed 3f4e     X.O?..O?.AO?..N?
  4138f0:	a3bd 3f4e 545d 3f4e 04cc 3f4e b50b 3f4d     ..N?]TN?..N?..M?
  413900:	651b 3f4d 14fa 3f4d c4ab 3f4c 742c 3f4c     .eM?..M?..L?,tL?
  413910:	237d 3f4c d2a0 3f4b 8194 3f4b 305a 3f4b     }#L?..K?..K?Z0K?
  413920:	def1 3f4a 8d5a 3f4a 3b96 3f4a e9a3 3f49     ..J?Z.J?.;J?..I?
  413930:	9783 3f49 4535 3f49 f2bb 3f48 a013 3f48     ..I?5EI?..H?..H?
  413940:	4d3f 3f48 fa3e 3f47 a711 3f47 53b7 3f47     ?MH?>.G?..G?.SG?
  413950:	0032 3f47 ac81 3f46 58a4 3f46 049c 3f46     2.G?..F?.XF?..F?
  413960:	b069 3f45 5c0b 3f45 0782 3f45 b2cf 3f44     i.E?.\E?..E?..D?
  413970:	5df1 3f44 08e9 3f44 b3b8 3f43 5e5c 3f43     .]D?..D?..C?\^C?
  413980:	08d7 3f43 b329 3f42 5d51 3f42 0751 3f42     ..C?).B?Q]B?Q.B?
  413990:	b128 3f41 5ad7 3f41 045d 3f41 adbb 3f40     (.A?.ZA?].A?..@?
  4139a0:	56f1 3f40 0000 3f40 a8e7 3f3f 51a7 3f3f     .V@?..@?..??.Q??
  4139b0:	fa40 3f3e a2b2 3f3e 4afe 3f3e f323 3f3d     @.>?..>?.J>?#.=?
  4139c0:	9b22 3f3d 42fb 3f3d eaae 3f3c 923c 3f3c     ".=?.B=?..<?<.<?
  4139d0:	39a5 3f3c e0e8 3f3b 8806 3f3b 2f00 3f3b     .9<?..;?..;?./;?
  4139e0:	d5d5 3f3a 7c86 3f3a 2313 3f3a c97c 3f39     ..:?.|:?.#:?|.9?
  4139f0:	6fc2 3f39 15e4 3f39 bbe3 3f38 61bf 3f38     .o9?..9?..8?.a8?
  413a00:	0778 3f38 ad0f 3f37 5283 3f37 f7d5 3f36     x.8?..7?.R7?..6?
  413a10:	9d06 3f36 4215 3f36 e702 3f35 8bce 3f35     ..6?.B6?..5?..5?
  413a20:	3079 3f35 d504 3f34 796d 3f34 1db7 3f34     y05?..4?my4?..4?
  413a30:	c1e0 3f33 65ea 3f33 09d3 3f33 ad9e 3f32     ..3?.e3?..3?..2?
  413a40:	5149 3f32 f4d5 3f31 9842 3f31 3b91 3f31     IQ2?..1?B.1?.;1?
  413a50:	dec1 3f30 81d3 3f30 24c8 3f30 c79f 3f2f     ..0?..0?.$0?../?
  413a60:	6a58 3f2f 0cf4 3f2f af73 3f2e 51d5 3f2e     Xj/?../?s..?.Q.?
  413a70:	f41b 3f2d 9644 3f2d 3852 3f2d da43 3f2c     ..-?D.-?R8-?C.,?
  413a80:	7c19 3f2c 1dd3 3f2c bf72 3f2b 60f7 3f2b     .|,?..,?r.+?.`+?
  413a90:	0260 3f2b a3af 3f2a 44e4 3f2a e5ff 3f29     `.+?..*?.D*?..)?
  413aa0:	8700 3f29 27e7 3f29 c8b5 3f28 696a 3f28     ..)?.')?..(?ji(?
  413ab0:	0a05 3f28 aa89 3f27 4af3 3f27 eb46 3f26     ..(?..'?.J'?F.&?
  413ac0:	8b81 3f26 2ba3 3f26 cbaf 3f25 6ba3 3f25     ..&?.+&?..%?.k%?
  413ad0:	0b80 3f25 ab46 3f24 4af5 3f24 ea8e 3f23     ..%?F.$?.J$?..#?
  413ae0:	8a11 3f23 297e 3f23 c8d6 3f22 6818 3f22     ..#?~)#?.."?.h"?
  413af0:	0745 3f22 a65d 3f21 4560 3f21 e44e 3f20     E."?].!?`E!?N. ?
  413b00:	8329 3f20 21ef 3f20 c0a1 3f1f 5f40 3f1f     ). ?.! ?...?@_.?
  413b10:	fdcc 3f1e 9c44 3f1e 3aaa 3f1e d8fd 3f1d     ...?D..?.:.?...?
  413b20:	773e 3f1d 156c 3f1d b389 3f1c 5193 3f1c     >w.?l..?...?.Q.?
  413b30:	ef8d 3f1b 8d75 3f1b 2b4c 3f1b c913 3f1a     ...?u..?L+.?...?
  413b40:	66c9 3f1a 046e 3f1a a204 3f19 3f8a 3f19     .f.?n..?...?.?.?
  413b50:	dd00 3f18 7a67 3f18 17bf 3f18 b508 3f17     ...?gz.?...?...?
  413b60:	5242 3f17 ef6e 3f16 8c8c 3f16 299c 3f16     BR.?n..?...?.).?
  413b70:	c69f 3f15 6394 3f15 007b 3f15 9d56 3f14     ...?.c.?{..?V..?
  413b80:	3a24 3f14 d6e6 3f13 739b 3f13 1045 3f13     $:.?...?.s.?E..?
  413b90:	ace2 3f12 4975 3f12 e5fb 3f11 8277 3f11     ...?uI.?...?w..?
  413ba0:	1ee8 3f11 bb4f 3f10 57ab 3f10 f3fd 3f0f     ...?O..?.W.?...?
  413bb0:	9046 3f0f 2c84 3f0f c8ba 3f0e 64e6 3f0e     F..?.,.?...?.d.?
  413bc0:	010a 3f0e 9d24 3f0d 3937 3f0d d541 3f0c     ...?$..?79.?A..?
  413bd0:	7143 3f0c 0d3e 3f0c a931 3f0b 451d 3f0b     Cq.?>..?1..?.E.?
  413be0:	e102 3f0a 7ce1 3f0a 18b9 3f0a b48a 3f09     ...?.|.?...?...?
  413bf0:	5056 3f09 ec1c 3f08 87dd 3f08 2398 3f08     VP.?...?...?.#.?
  413c00:	bf4e 3f07 5aff 3f07 f6ac 3f06 9255 3f06     N..?.Z.?...?U..?
  413c10:	2dfa 3f06 c99a 3f05 6538 3f05 00d1 3f05     .-.?...?8e.?...?
  413c20:	9c68 3f04 37fc 3f04 d38d 3f03 6f1c 3f03     h..?.7.?...?.o.?
  413c30:	0aa9 3f03 a634 3f02 41be 3f02 dd46 3f01     ...?4..?.A.?F..?
  413c40:	78cc 3f01 1452 3f01 afd8 3f00 4b5d 3f00     .x.?R..?...?]K.?
  413c50:	cdc2 3eff 04cc 3eff 3bd6 3efe 72e1 3efd     ...>...>.;.>.r.>
  413c60:	a9ee 3efc e0fc 3efb 180e 3efb 4f22 3efa     ...>...>...>"O.>
  413c70:	863a 3ef9 bd56 3ef8 f476 3ef7 2b9b 3ef7     :..>V..>v..>.+.>
  413c80:	62c6 3ef6 99f6 3ef5 d12d 3ef4 086b 3ef4     .b.>...>-..>k..>
  413c90:	3fb1 3ef3 76fe 3ef2 ae53 3ef1 e5b1 3ef0     .?.>.v.>S..>...>
  413ca0:	1d19 3ef0 548a 3eef 8c06 3eee c38d 3eed     ...>.T.>...>...>
  413cb0:	fb1e 3eec 32bc 3eec 6a65 3eeb a21b 3eea     ...>.2.>ej.>...>
  413cc0:	d9df 3ee9 11b0 3ee9 498f 3ee8 817d 3ee7     ...>...>.I.>}..>
  413cd0:	b97a 3ee6 f186 3ee5 29a3 3ee5 61d0 3ee4     z..>...>.).>.a.>
  413ce0:	9a0e 3ee3 d25e 3ee2 0abf 3ee2 4333 3ee1     ...>^..>...>3C.>
  413cf0:	7bba 3ee0 b455 3edf ed03 3ede 25c6 3ede     .{.>U..>...>.%.>
  413d00:	5e9e 3edd 978a 3edc d08d 3edb 09a6 3edb     .^.>...>...>...>
  413d10:	42d6 3eda 7c1d 3ed9 b57c 3ed8 eef3 3ed7     .B.>.|.>|..>...>
  413d20:	2883 3ed7 622b 3ed6 9bee 3ed5 d5cb 3ed4     .(.>+b.>...>...>
  413d30:	0fc2 3ed4 49d4 3ed3 8402 3ed2 be4c 3ed1     ...>.I.>...>L..>
  413d40:	f8b2 3ed0 3336 3ed0 6dd7 3ecf a895 3ece     ...>63.>.m.>...>
  413d50:	e373 3ecd 1e6f 3ecd 598a 3ecc 94c5 3ecb     s..>o..>.Y.>...>
  413d60:	d021 3eca 0b9d 3eca 473b 3ec9 82fa 3ec8     !..>...>;G.>...>
  413d70:	bedc 3ec7 fae0 3ec6 3707 3ec6 7352 3ec5     ...>...>.7.>Rs.>
  413d80:	afc1 3ec4 ec54 3ec3 290d 3ec3 65eb 3ec2     ...>T..>.).>.e.>
  413d90:	a2ef 3ec1 e01a 3ec0 1d6b 3ec0 5ae4 3ebf     ...>...>k..>.Z.>
  413da0:	9884 3ebe d64d 3ebd 143f 3ebd 525a 3ebc     ...>M..>?..>ZR.>
  413db0:	909e 3ebb cf0d 3eba 0da6 3eba 4c6b 3eb9     ...>...>...>kL.>
  413dc0:	8b5b 3eb8 ca77 3eb7 09c0 3eb7 4935 3eb6     [..>w..>...>5I.>
  413dd0:	88d8 3eb5 c8a9 3eb4 08a8 3eb4 48d6 3eb3     ...>...>...>.H.>
  413de0:	8934 3eb2 c9c1 3eb1 0a7e 3eb1 4b6c 3eb0     4..>...>~..>lK.>
  413df0:	8c8b 3eaf cddb 3eae 0f5e 3eae 5113 3ead     ...>...>^..>.Q.>
  413e00:	92fb 3eac d517 3eab 1766 3eab 59ea 3eaa     ...>...>f..>.Y.>
  413e10:	9ca2 3ea9 df90 3ea8 22b3 3ea8 660d 3ea7     ...>...>.".>.f.>
  413e20:	a99d 3ea6 ed64 3ea5 3163 3ea5 759a 3ea4     ...>d..>c1.>.u.>
  413e30:	ba09 3ea3 feb1 3ea2 4392 3ea2 88ad 3ea1     ...>...>.C.>...>
  413e40:	ce02 3ea0 1392 3ea0 595d 3e9f 9f64 3e9e     ...>...>]Y.>d..>
  413e50:	e5a6 3e9d 2c26 3e9d 72e1 3e9c b9db 3e9b     ...>&,.>.r.>...>
  413e60:	0112 3e9b 4887 3e9a 903b 3e99 d82e 3e98     ...>.H.>;..>...>
  413e70:	2061 3e98 68d4 3e97 b187 3e96 fa7b 3e95     a .>.h.>...>{..>
  413e80:	43b0 3e95 8d28 3e94 d6e1 3e93 20dd 3e93     .C.>(..>...>. .>
  413e90:	6b1c 3e92 b59f 3e91 0065 3e91 4b70 3e90     .k.>...>e..>pK.>
  413ea0:	96c0 3e8f e256 3e8e 2e30 3e8e 7a51 3e8d     ...>V..>0..>Qz.>
  413eb0:	c6b9 3e8c 1368 3e8c 605e 3e8b ad9b 3e8a     ...>h..>^`.>...>
  413ec0:	fb22 3e89 48f1 3e89 9709 3e88 e56a 3e87     "..>.H.>...>j..>
  413ed0:	3416 3e87 830c 3e86 d24d 3e85 21d9 3e85     .4.>...>M..>.!.>
  413ee0:	71b1 3e84 c1d5 3e83 1246 3e83 6304 3e82     .q.>...>F..>.c.>
  413ef0:	b40f 3e81 0568 3e81 570f 3e80 520a 3e7f     ...>h..>.W.>.R.>
  413f00:	f693 3e7d 9bbc 3e7c 4185 3e7b e7ee 3e79     ..}>..|>.A{>..y>
  413f10:	8ef9 3e78 36a7 3e77 def7 3e75 87eb 3e74     ..x>.6w>..u>..t>
  413f20:	3185 3e73 dbc4 3e71 86a9 3e70 3236 3e6f     .1s>..q>..p>62o>
  413f30:	de6b 3e6d 8b48 3e6c 38d0 3e6b e702 3e69     k.m>H.l>.8k>..i>
  413f40:	95df 3e68 4569 3e67 f59f 3e65 a684 3e64     ..h>iEg>..e>..d>
  413f50:	5817 3e63 0a59 3e62 bd4c 3e60 70f0 3e5f     .Xc>Y.b>L.`>.p_>
  413f60:	2545 3e5e da4d 3e5c 9009 3e5b 4679 3e5a     E%^>M.\>..[>yFZ>
  413f70:	fd9e 3e58 b578 3e57 6e09 3e56 2752 3e55     ..X>x.W>.nV>R'U>
  413f80:	e153 3e53 9c0c 3e52 5780 3e51 13ad 3e50     S.S>..R>.WQ>..P>
  413f90:	d097 3e4e 8e3c 3e4d 4c9e 3e4c 0bbe 3e4b     ..N><.M>.LL>..K>
  413fa0:	cb9c 3e49 8c39 3e48 4d96 3e47 0fb4 3e46     ..I>9.H>.MG>..F>
  413fb0:	d294 3e44 9635 3e43 5a9a 3e42 1fc2 3e41     ..D>5.C>.ZB>..A>
  413fc0:	e5af 3e3f ac61 3e3e 73d9 3e3d 3c18 3e3c     ..?>a.>>.s=>.<<>
  413fd0:	051f 3e3b ceed 3e39 9985 3e38 64e7 3e37     ..;>..9>..8>.d7>
  413fe0:	3112 3e36 fe0a 3e34 cbcd 3e33 9a5d 3e32     .16>..4>..3>].2>
  413ff0:	69ba 3e31 39e6 3e30 0ae0 3e2f dcaa 3e2d     .i1>.90>../>..->
  414000:	af45 3e2c 82b0 3e2b 56ee 3e2a 2bfe 3e29     E.,>..+>.V*>.+)>
  414010:	01e1 3e28 d898 3e26 b024 3e25 8886 3e24     ..(>..&>$.%>..$>
  414020:	61bd 3e23 3bcb 3e22 16b1 3e21 f26f 3e1f     .a#>.;">..!>o..>
  414030:	cf06 3e1e ac77 3e1d 8ac2 3e1c 69e8 3e1b     ...>w..>...>.i.>
  414040:	49ea 3e1a 2ac8 3e19 0c84 3e18 ef1d 3e16     .I.>.*.>...>...>
  414050:	d295 3e15 b6ec 3e14 9c22 3e13 823a 3e12     ...>...>"..>:..>
  414060:	6932 3e11 510d 3e10 39ca 3e0f 236a 3e0e     2i.>.Q.>.9.>j#.>
  414070:	0def 3e0d f958 3e0b e5a6 3e0a d2da 3e09     ...>X..>...>...>
  414080:	c0f4 3e08 aff6 3e07 9fe0 3e06 90b2 3e05     ...>...>...>...>
  414090:	826e 3e04 7513 3e03 68a3 3e02 5d1e 3e01     n..>.u.>.h.>.].>
  4140a0:	5285 3e00 91b1 3dfe 8032 3dfc 708e 3dfa     .R.>...=2..=.p.=
  4140b0:	62c7 3df8 56de 3df6 4cd4 3df4 44ac 3df2     .b.=.V.=.L.=.D.=
  4140c0:	3e63 3df0 39fe 3dee 377e 3dec 36e3 3dea     c>.=.9.=~7.=.6.=
  4140d0:	382f 3de8 3b62 3de6 407f 3de4 4786 3de2     /8.=b;.=.@.=.G.=
  4140e0:	5079 3de0 5b59 3dde 6826 3ddc 76e3 3dda     yP.=Y[.=&h.=.v.=
  4140f0:	8791 3dd8 9a2f 3dd6 aec1 3dd4 c547 3dd2     ...=/..=...=G..=
  414100:	ddc1 3dd0 f832 3dce 149b 3dcd 32fc 3dcb     ...=2..=...=.2.=
  414110:	5357 3dc9 75ad 3dc7 9a00 3dc5 c04f 3dc3     WS.=.u.=...=O..=
  414120:	e89d 3dc1 12ea 3dc0 3f38 3dbe 6d88 3dbc     ...=...=8?.=.m.=
  414130:	9ddb 3dba d032 3db8 048d 3db7 3af0 3db5     ...=2..=...=.:.=
  414140:	7359 3db3 adcb 3db1 ea47 3daf 28cd 3dae     Ys.=...=G..=.(.=
  414150:	695f 3dac abfd 3daa f0aa 3da8 3765 3da7     _i.=...=...=e7.=
  414160:	8031 3da5 cb0d 3da3 17fc 3da2 66fe 3da0     1..=...=...=.f.=
  414170:	b814 3d9e 0b3f 3d9d 6080 3d9b b7d9 3d99     ...=?..=.`.=...=
  414180:	114a 3d98 6cd4 3d96 ca79 3d94 2a39 3d93     J..=.l.=y..=9*.=
  414190:	8c16 3d91 f00f 3d8f 5627 3d8e be5f 3d8c     ...=...='V.=_..=
  4141a0:	28b6 3d8b 952f 3d89 03cb 3d88 7489 3d86     .(.=/..=...=.t.=
  4141b0:	e76c 3d84 5c73 3d83 d3a1 3d81 4cf6 3d80     l..=s\.=...=.L.=
  4141c0:	90e6 3d7d 8c32 3d7a 8bd1 3d77 8fc6 3d74     ..}=2.z=..w=..t=
  4141d0:	9812 3d71 a4b7 3d6e b5b7 3d6b cb14 3d68     ..q=..n=..k=..h=
  4141e0:	e4d0 3d65 02ec 3d63 256b 3d60 4c4d 3d5d     ..e=..c=k%`=ML]=
  4141f0:	7795 3d5a a744 3d57 db5d 3d54 13e0 3d52     .wZ=D.W=].T=..R=
  414200:	50d0 3d4f 922f 3d4c d7fd 3d49 223d 3d47     .PO=/.L=..I=="G=
  414210:	70f1 3d44 c419 3d41 1bb9 3d3f 77d0 3d3c     .pD=..A=..?=.w<=
  414220:	d861 3d39 3d6e 3d37 a6f8 3d34 1501 3d32     a.9=n=7=..4=..2=
  414230:	878b 3d2f fe96 3d2c 7a24 3d2a fa38 3d27     ../=..,=$z*=8.'=
  414240:	7ed2 3d25 07f4 3d23 95a0 3d20 27d7 3d1e     .~%=..#=.. =.'.=
  414250:	be9b 3d1b 59ec 3d19 f9cd 3d16 9e40 3d14     ...=.Y.=...=@..=
  414260:	4745 3d12 f4dd 3d0f a70b 3d0d 5dd0 3d0b     EG.=...=...=.].=
  414270:	192d 3d09 d924 3d06 9db5 3d04 66e3 3d02     -..=$..=...=.f.=
  414280:	34af 3d00 0e34 3cfc bc4a 3cf7 73a4 3cf3     .4.=4..<J..<.s.<
  414290:	3444 3cef fe2c 3cea d160 3ce6 ade2 3ce2     D4.<,..<`..<...<
  4142a0:	93b5 3cde 82da 3cda 7b55 3cd6 7d28 3cd2     ...<...<U{.<(}.<
  4142b0:	8855 3cce 9cdf 3cca bac8 3cc6 e214 3cc2     U..<...<...<...<
  4142c0:	12c3 3cbf 4cd8 3cbb 9057 3cb7 dd40 3cb3     ...<.L.<W..<@..<
  4142d0:	3397 3cb0 935d 3cac fc95 3ca8 6f41 3ca5     .3.<]..<...<Ao.<
  4142e0:	eb63 3ca1 70fe 3c9e 0013 3c9b 98a5 3c97     c..<.p.<...<...<
  4142f0:	3ab5 3c94 e646 3c90 9b5a 3c8d 59f3 3c8a     .:.<F..<Z..<.Y.<
  414300:	2213 3c87 f3bc 3c83 cef0 3c80 6760 3c7b     .".<...<...<`g{<
  414310:	43fe 3c75 33be 3c6f 36a2 3c69 4caf 3c63     .Cu<.3o<.6i<.Lc<
  414320:	75e8 3c5d b251 3c57 01ed 3c52 64c0 3c4c     .u]<Q.W<..R<.dL<
  414330:	dace 3c46 6419 3c41 00a5 3c3c b076 3c36     ..F<.dA<..<<v.6<
  414340:	738f 3c31 49f2 3c2c 33a4 3c27 30a6 3c22     .s1<.I,<.3'<.0"<
  414350:	40fe 3c1d 64ac 3c18 9bb5 3c13 e61c 3c0e     .@.<.d.<...<...<
  414360:	43e2 3c0a b50c 3c05 399c 3c01 a328 3bf9     .C.<...<.9.<(..;
  414370:	f9ef 3bf0 7792 3be8 1c17 3be0 e782 3bd7     ...;.w.;...;...;
  414380:	d9d9 3bcf f320 3bc7 335d 3bc0 9a94 3bb8     ...; ..;]3.;...;
  414390:	28c9 3bb1 de03 3ba9 ba44 3ba2 bd91 3b9b     .(.;...;D..;...;
  4143a0:	e7ef 3b94 3962 3b8e b1ee 3b87 5196 3b81     ...;b9.;...;.Q.;
  4143b0:	30c0 3b76 0c9d 3b6a 36cb 3b5e af51 3b52     .0v;..j;.6^;Q.R;
  4143c0:	7637 3b47 8b82 3b3c ef3b 3b31 a168 3b27     7vG;..<;;.1;h.';
  4143d0:	a20e 3b1d f134 3b13 8ee1 3b0a 7b19 3b01     ...;4..;...;.{.;
  4143e0:	6bc5 3af1 7e86 3ae0 2e7f 3ad0 7bba 3ac0     .k.:.~.:...:.{.:
  4143f0:	6641 3ab1 ee1d 3aa2 1357 3a95 d5f7 3a87     Af.:...:W..:...:
  414400:	6c0d 3a76 6719 3a5e 9d20 3a47 0e31 3a32     .lv:.g^: .G:1.2:
  414410:	ba59 3a1d a1a5 3a0a 8841 39f1 43ad 39d0     Y..:...:A..9.C.9
  414420:	75a1 39b1 1e32 3995 7ae2 3976 a6db 3947     .u.92..9.zv9..G9
  414430:	c06d 391d 8f61 38f1 797a 38b1 7e98 3876     m..9a..8zy.8.~v8
  414440:	c1f2 381d 7a70 37b1 c253 371d c26b 361d     ...8pz.7S..7k..6

00414450 <lp_filter>:
  414450:	f27c 3b30 c155 3c28 5a86 3cd3 63f1 3d4c     |.0;U.(<.Z.<.cL=
  414460:	0b78 3da4 4dd3 3de2 6595 3e08 ff97 3e10     x..=.M.=.e.>...>
  414470:	6595 3e08 4dd3 3de2 0b78 3da4 63f1 3d4c     .e.>.M.=x..=.cL=
  414480:	5a86 3cd3 c155 3c28 f27c 3b30               .Z.<U.(<|.0;

0041448c <midi_note_frequencies>:
  41448c:	d0e5 4102 978d 410a d4fe 4112 9168 411b     ...A...A...Ah..A
  41449c:	d0e5 4124 9ba6 412e fdf4 4138 0000 4144     ..$A...A..8A..DA
  4144ac:	a5e3 414f 0000 415c 1687 4169 f1aa 4176     ..OA..\A..iA..vA
  4144bc:	d0e5 4182 978d 418a d4fe 4192 8f5c 419b     ...A...A...A\..A
  4144cc:	d0e5 41a4 9db2 41ae 0000 41b9 0000 41c4     ...A...A...A...A
  4144dc:	a7f0 41cf 0000 41dc 147b 41e9 f1aa 41f6     ...A...A{..A...A
  4144ec:	cfdf 4202 978d 420a d4fe 4212 9062 421b     ...B...B...Bb..B
  4144fc:	cfdf 4224 9db2 422e fefa 4238 fefa 4243     ..$B...B..8B..CB
  41450c:	a6e9 424f 0000 425c 147b 4269 f0a4 4276     ..OB..\B{.iB..vB
  41451c:	cfdf 4282 978d 428a d4fe 4292 9062 429b     ...B...B...Bb..B
  41452c:	d062 42a4 9d2f 42ae ff7d 42b8 ff7d 42c3     b..B/..B}..B}..B
  41453c:	a6e9 42cf 0000 42dc 14fe 42e9 f127 42f6     ...B...B...B'..B
  41454c:	d021 4302 974c 430a d4fe 4312 9021 431b     !..CL..C...C!..C
  41455c:	d062 4324 9d2f 432e ff3b 4338 ff7d 4343     b.$C/..C;.8C}.CC
  41456c:	a6e9 434f 0000 435c 14fe 4369 f127 4376     ..OC..\C..iC'.vC
  41457c:	d021 4382 976d 438a d51f 4392 9042 439b     !..Cm..C...CB..C
  41458c:	d062 43a4 9d2f 43ae ff3b 43b8 ff5c 43c3     b..C/..C;..C\..C
  41459c:	a70a 43cf 0000 43dc 14fe 43e9 f106 43f6     ...C...C...C...C
  4145ac:	d010 4402 975c 440a d51f 4412 9042 441b     ...D\..D...DB..D
  4145bc:	d052 4424 9d2f 442e ff4c 4438 ff6d 4443     R.$D/..DL.8Dm.CD
  4145cc:	a6fa 444f 0000 445c 14fe 4469 f117 4476     ..OD..\D..iD..vD
  4145dc:	d010 4482 9764 448a d517 4492 9042 449b     ...Dd..D...DB..D
  4145ec:	d052 44a4 9d37 44ae ff4c 44b8 ff6d 44c3     R..D7..DL..Dm..D
  4145fc:	a702 44cf 0000 44dc 14f6 44e9 f10e 44f6     ...D...D...D...D
  41460c:	d014 4502 9760 450a d517 4512 9042 451b     ...E`..E...EB..E
  41461c:	d052 4524 9d37 452e ff48 4538 ff68 4543     R.$E7..EH.8Eh.CE
  41462c:	a702 454f 0000 455c 14f6 4569 f10e 4576     ..OE..\E..iE..vE
  41463c:	d012 4582 9760 458a d517 4592 9042 459b     ...E`..E...EB..E
  41464c:	d054 45a4 9d37 45ae ff4a 45b8 ff6a 45c3     T..E7..EJ..Ej..E
  41465c:	a700 45cf 0000 45dc 14f6 45e9 f110 45f6     ...E...E...E...E
  41466c:	d012 4602 9760 460a d518 4612 9041 461b     ...F`..F...FA..F
  41467c:	d052 4624 9d33 462e ff48 4638 ff66 4643     R.$F3..FH.8Ff.CF
  41468c:	002d 0000 3025 7832 0000 0000 654d 6f6c     -...%02x....Melo
  41469c:	7964 0000                                   dy..

004146a0 <CSWTCH.7>:
  4146a0:	0100 0000 0300 0000 0200 0000 c200 0001     ................
  4146b0:	00c0 0000 0800 0000 0000 0000               ............

004146bc <time_signatures>:
  4146bc:	0404 0300 0104 0402 0602 0308               ............

004146c8 <npio2_hw>:
  4146c8:	0f00 3fc9 0f00 4049 cb00 4096 0f00 40c9     ...?..I@...@...@
  4146d8:	5300 40fb cb00 4116 ed00 412f 0f00 4149     .S.@...A../A..IA
  4146e8:	3100 4162 5300 417b 3a00 418a cb00 4196     .1bA.S{A.:.A...A
  4146f8:	5c00 41a3 ed00 41af 7e00 41bc 0f00 41c9     .\.A...A.~.A...A
  414708:	a000 41d5 3100 41e2 c200 41ee 5300 41fb     ...A.1.A...A.S.A
  414718:	f200 4203 3a00 420a 8300 4210 cb00 4216     ...B.:.B...B...B
  414728:	1400 421d 5c00 4223 a500 4229 ed00 422f     ...B.\#B..)B../B
  414738:	3600 4236 7e00 423c c700 4242 0f00 4249     .66B.~<B..BB..IB

00414748 <two_over_pi>:
  414748:	00a2 0000 00f9 0000 0083 0000 006e 0000     ............n...
  414758:	004e 0000 0044 0000 0015 0000 0029 0000     N...D.......)...
  414768:	00fc 0000 0027 0000 0057 0000 00d1 0000     ....'...W.......
  414778:	00f5 0000 0034 0000 00dd 0000 00c0 0000     ....4...........
  414788:	00db 0000 0062 0000 0095 0000 0099 0000     ....b...........
  414798:	003c 0000 0043 0000 0090 0000 0041 0000     <...C.......A...
  4147a8:	00fe 0000 0051 0000 0063 0000 00ab 0000     ....Q...c.......
  4147b8:	00de 0000 00bb 0000 00c5 0000 0061 0000     ............a...
  4147c8:	00b7 0000 0024 0000 006e 0000 003a 0000     ....$...n...:...
  4147d8:	0042 0000 004d 0000 00d2 0000 00e0 0000     B...M...........
  4147e8:	0006 0000 0049 0000 002e 0000 00ea 0000     ....I...........
  4147f8:	0009 0000 00d1 0000 0092 0000 001c 0000     ................
  414808:	00fe 0000 001d 0000 00eb 0000 001c 0000     ................
  414818:	00b1 0000 0029 0000 00a7 0000 003e 0000     ....).......>...
  414828:	00e8 0000 0082 0000 0035 0000 00f5 0000     ........5.......
  414838:	002e 0000 00bb 0000 0044 0000 0084 0000     ........D.......
  414848:	00e9 0000 009c 0000 0070 0000 0026 0000     ........p...&...
  414858:	00b4 0000 005f 0000 007e 0000 0041 0000     ...._...~...A...
  414868:	0039 0000 0091 0000 00d6 0000 0039 0000     9...........9...
  414878:	0083 0000 0053 0000 0039 0000 00f4 0000     ....S...9.......
  414888:	009c 0000 0084 0000 005f 0000 008b 0000     ........_.......
  414898:	00bd 0000 00f9 0000 0028 0000 003b 0000     ........(...;...
  4148a8:	001f 0000 00f8 0000 0097 0000 00ff 0000     ................
  4148b8:	00de 0000 0005 0000 0098 0000 000f 0000     ................
  4148c8:	00ef 0000 002f 0000 0011 0000 008b 0000     ..../...........
  4148d8:	005a 0000 000a 0000 006d 0000 001f 0000     Z.......m.......
  4148e8:	006d 0000 0036 0000 007e 0000 00cf 0000     m...6...~.......
  4148f8:	0027 0000 00cb 0000 0009 0000 00b7 0000     '...............
  414908:	004f 0000 0046 0000 003f 0000 0066 0000     O...F...?...f...
  414918:	009e 0000 005f 0000 00ea 0000 002d 0000     ...._.......-...
  414928:	0075 0000 0027 0000 00ba 0000 00c7 0000     u...'...........
  414938:	00eb 0000 00e5 0000 00f1 0000 007b 0000     ............{...
  414948:	003d 0000 0007 0000 0039 0000 00f7 0000     =.......9.......
  414958:	008a 0000 0052 0000 0092 0000 00ea 0000     ....R...........
  414968:	006b 0000 00fb 0000 005f 0000 00b1 0000     k......._.......
  414978:	001f 0000 008d 0000 005d 0000 0008 0000     ........].......
  414988:	0056 0000 0003 0000 0030 0000 0046 0000     V.......0...F...
  414998:	00fc 0000 007b 0000 006b 0000 00ab 0000     ....{...k.......
  4149a8:	00f0 0000 00cf 0000 00bc 0000 0020 0000     ............ ...
  4149b8:	009a 0000 00f4 0000 0036 0000 001d 0000     ........6.......
  4149c8:	00a9 0000 00e3 0000 0091 0000 0061 0000     ............a...
  4149d8:	005e 0000 00e6 0000 001b 0000 0008 0000     ^...............
  4149e8:	0065 0000 0099 0000 0085 0000 005f 0000     e..........._...
  4149f8:	0014 0000 00a0 0000 0068 0000 0040 0000     ........h...@...
  414a08:	008d 0000 00ff 0000 00d8 0000 0080 0000     ................
  414a18:	004d 0000 0073 0000 0027 0000 0031 0000     M...s...'...1...
  414a28:	0006 0000 0006 0000 0015 0000 0056 0000     ............V...
  414a38:	00ca 0000 0073 0000 00a8 0000 00c9 0000     ....s...........
  414a48:	0060 0000 00e2 0000 007b 0000 00c0 0000     `.......{.......
  414a58:	008c 0000 006b 0000                         ....k...

00414a60 <PIo2>:
  414a60:	0000 3fc9 0000 39f0 0000 37da 0000 33a2     ...?...9...7...3
  414a70:	0000 2e84 0000 2b50 0000 27c2 0000 22d0     ......P+...'..."
  414a80:	0000 1fc4 0000 1bc6 0000 1744               ..........D.

00414a8c <init_jk>:
  414a8c:	0004 0000 0007 0000 0009 0000               ............

00414a98 <_global_impure_ptr>:
  414a98:	0058 2040 3130 3332 3534 3736 3938 4241     X.@ 0123456789AB
  414aa8:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  414ab8:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  414ac8:	296c 0000                                   l)..

00414acc <blanks.7217>:
  414acc:	2020 2020 2020 2020 2020 2020 2020 2020                     

00414adc <zeroes.7218>:
  414adc:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  414aec:	0043 0000 4f50 4953 0058 0000 002e 0000     C...POSIX.......

00414afc <_ctype_>:
  414afc:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  414b0c:	2020 2020 2020 2020 2020 2020 2020 2020                     
  414b1c:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  414b2c:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  414b3c:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  414b4c:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  414b5c:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  414b6c:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  414b7c:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

00414c00 <_init>:
  414c00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  414c02:	bf00      	nop
  414c04:	bcf8      	pop	{r3, r4, r5, r6, r7}
  414c06:	bc08      	pop	{r3}
  414c08:	469e      	mov	lr, r3
  414c0a:	4770      	bx	lr

00414c0c <__init_array_start>:
  414c0c:	00408165 	.word	0x00408165

00414c10 <__frame_dummy_init_array_entry>:
  414c10:	00400165                                e.@.

00414c14 <_fini>:
  414c14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  414c16:	bf00      	nop
  414c18:	bcf8      	pop	{r3, r4, r5, r6, r7}
  414c1a:	bc08      	pop	{r3}
  414c1c:	469e      	mov	lr, r3
  414c1e:	4770      	bx	lr

00414c20 <__fini_array_start>:
  414c20:	00400141 	.word	0x00400141

Disassembly of section .relocate:

20400000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20400000:	f3bf 8f5f 	dmb	sy
20400004:	3801      	subs	r0, #1
20400006:	d1fb      	bne.n	20400000 <portable_delay_cycles>
20400008:	4770      	bx	lr
	...

2040000c <fillBuffer>:
2040000c:	2d3c 2040                                   <-@ 

20400010 <inBuffer>:
20400010:	303c 2042                                   <0B 

20400014 <inPingMode>:
20400014:	0001 0000                                   ....

20400018 <outBuffer>:
20400018:	2e3c 2041                                   <.A 

2040001c <outPingMode>:
2040001c:	0001 0000                                   ....

20400020 <processBuffer>:
20400020:	303c 2041                                   <0A 

20400024 <processPingMode>:
20400024:	0101                                             .

20400025 <g_interrupt_enabled>:
20400025:	0001 0000                                        ...

20400028 <SystemCoreClock>:
20400028:	0900 003d                                   ..=.

2040002c <awaiting_gui_info>:
2040002c:	0001 0000                                   ....

20400030 <title>:
20400030:	6954 6c74 2065 6548 6572 0000 0000 0000     Title Here......
	...

20400050 <_impure_ptr>:
20400050:	0058 2040 0000 0000                         X.@ ....

20400058 <impure_data>:
20400058:	0000 0000 0344 2040 03ac 2040 0414 2040     ....D.@ ..@ ..@ 
	...
20400100:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
20400110:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20400480 <__malloc_av_>:
	...
20400488:	0480 2040 0480 2040 0488 2040 0488 2040     ..@ ..@ ..@ ..@ 
20400498:	0490 2040 0490 2040 0498 2040 0498 2040     ..@ ..@ ..@ ..@ 
204004a8:	04a0 2040 04a0 2040 04a8 2040 04a8 2040     ..@ ..@ ..@ ..@ 
204004b8:	04b0 2040 04b0 2040 04b8 2040 04b8 2040     ..@ ..@ ..@ ..@ 
204004c8:	04c0 2040 04c0 2040 04c8 2040 04c8 2040     ..@ ..@ ..@ ..@ 
204004d8:	04d0 2040 04d0 2040 04d8 2040 04d8 2040     ..@ ..@ ..@ ..@ 
204004e8:	04e0 2040 04e0 2040 04e8 2040 04e8 2040     ..@ ..@ ..@ ..@ 
204004f8:	04f0 2040 04f0 2040 04f8 2040 04f8 2040     ..@ ..@ ..@ ..@ 
20400508:	0500 2040 0500 2040 0508 2040 0508 2040     ..@ ..@ ..@ ..@ 
20400518:	0510 2040 0510 2040 0518 2040 0518 2040     ..@ ..@ ..@ ..@ 
20400528:	0520 2040 0520 2040 0528 2040 0528 2040      .@  .@ (.@ (.@ 
20400538:	0530 2040 0530 2040 0538 2040 0538 2040     0.@ 0.@ 8.@ 8.@ 
20400548:	0540 2040 0540 2040 0548 2040 0548 2040     @.@ @.@ H.@ H.@ 
20400558:	0550 2040 0550 2040 0558 2040 0558 2040     P.@ P.@ X.@ X.@ 
20400568:	0560 2040 0560 2040 0568 2040 0568 2040     `.@ `.@ h.@ h.@ 
20400578:	0570 2040 0570 2040 0578 2040 0578 2040     p.@ p.@ x.@ x.@ 
20400588:	0580 2040 0580 2040 0588 2040 0588 2040     ..@ ..@ ..@ ..@ 
20400598:	0590 2040 0590 2040 0598 2040 0598 2040     ..@ ..@ ..@ ..@ 
204005a8:	05a0 2040 05a0 2040 05a8 2040 05a8 2040     ..@ ..@ ..@ ..@ 
204005b8:	05b0 2040 05b0 2040 05b8 2040 05b8 2040     ..@ ..@ ..@ ..@ 
204005c8:	05c0 2040 05c0 2040 05c8 2040 05c8 2040     ..@ ..@ ..@ ..@ 
204005d8:	05d0 2040 05d0 2040 05d8 2040 05d8 2040     ..@ ..@ ..@ ..@ 
204005e8:	05e0 2040 05e0 2040 05e8 2040 05e8 2040     ..@ ..@ ..@ ..@ 
204005f8:	05f0 2040 05f0 2040 05f8 2040 05f8 2040     ..@ ..@ ..@ ..@ 
20400608:	0600 2040 0600 2040 0608 2040 0608 2040     ..@ ..@ ..@ ..@ 
20400618:	0610 2040 0610 2040 0618 2040 0618 2040     ..@ ..@ ..@ ..@ 
20400628:	0620 2040 0620 2040 0628 2040 0628 2040      .@  .@ (.@ (.@ 
20400638:	0630 2040 0630 2040 0638 2040 0638 2040     0.@ 0.@ 8.@ 8.@ 
20400648:	0640 2040 0640 2040 0648 2040 0648 2040     @.@ @.@ H.@ H.@ 
20400658:	0650 2040 0650 2040 0658 2040 0658 2040     P.@ P.@ X.@ X.@ 
20400668:	0660 2040 0660 2040 0668 2040 0668 2040     `.@ `.@ h.@ h.@ 
20400678:	0670 2040 0670 2040 0678 2040 0678 2040     p.@ p.@ x.@ x.@ 
20400688:	0680 2040 0680 2040 0688 2040 0688 2040     ..@ ..@ ..@ ..@ 
20400698:	0690 2040 0690 2040 0698 2040 0698 2040     ..@ ..@ ..@ ..@ 
204006a8:	06a0 2040 06a0 2040 06a8 2040 06a8 2040     ..@ ..@ ..@ ..@ 
204006b8:	06b0 2040 06b0 2040 06b8 2040 06b8 2040     ..@ ..@ ..@ ..@ 
204006c8:	06c0 2040 06c0 2040 06c8 2040 06c8 2040     ..@ ..@ ..@ ..@ 
204006d8:	06d0 2040 06d0 2040 06d8 2040 06d8 2040     ..@ ..@ ..@ ..@ 
204006e8:	06e0 2040 06e0 2040 06e8 2040 06e8 2040     ..@ ..@ ..@ ..@ 
204006f8:	06f0 2040 06f0 2040 06f8 2040 06f8 2040     ..@ ..@ ..@ ..@ 
20400708:	0700 2040 0700 2040 0708 2040 0708 2040     ..@ ..@ ..@ ..@ 
20400718:	0710 2040 0710 2040 0718 2040 0718 2040     ..@ ..@ ..@ ..@ 
20400728:	0720 2040 0720 2040 0728 2040 0728 2040      .@  .@ (.@ (.@ 
20400738:	0730 2040 0730 2040 0738 2040 0738 2040     0.@ 0.@ 8.@ 8.@ 
20400748:	0740 2040 0740 2040 0748 2040 0748 2040     @.@ @.@ H.@ H.@ 
20400758:	0750 2040 0750 2040 0758 2040 0758 2040     P.@ P.@ X.@ X.@ 
20400768:	0760 2040 0760 2040 0768 2040 0768 2040     `.@ `.@ h.@ h.@ 
20400778:	0770 2040 0770 2040 0778 2040 0778 2040     p.@ p.@ x.@ x.@ 
20400788:	0780 2040 0780 2040 0788 2040 0788 2040     ..@ ..@ ..@ ..@ 
20400798:	0790 2040 0790 2040 0798 2040 0798 2040     ..@ ..@ ..@ ..@ 
204007a8:	07a0 2040 07a0 2040 07a8 2040 07a8 2040     ..@ ..@ ..@ ..@ 
204007b8:	07b0 2040 07b0 2040 07b8 2040 07b8 2040     ..@ ..@ ..@ ..@ 
204007c8:	07c0 2040 07c0 2040 07c8 2040 07c8 2040     ..@ ..@ ..@ ..@ 
204007d8:	07d0 2040 07d0 2040 07d8 2040 07d8 2040     ..@ ..@ ..@ ..@ 
204007e8:	07e0 2040 07e0 2040 07e8 2040 07e8 2040     ..@ ..@ ..@ ..@ 
204007f8:	07f0 2040 07f0 2040 07f8 2040 07f8 2040     ..@ ..@ ..@ ..@ 
20400808:	0800 2040 0800 2040 0808 2040 0808 2040     ..@ ..@ ..@ ..@ 
20400818:	0810 2040 0810 2040 0818 2040 0818 2040     ..@ ..@ ..@ ..@ 
20400828:	0820 2040 0820 2040 0828 2040 0828 2040      .@  .@ (.@ (.@ 
20400838:	0830 2040 0830 2040 0838 2040 0838 2040     0.@ 0.@ 8.@ 8.@ 
20400848:	0840 2040 0840 2040 0848 2040 0848 2040     @.@ @.@ H.@ H.@ 
20400858:	0850 2040 0850 2040 0858 2040 0858 2040     P.@ P.@ X.@ X.@ 
20400868:	0860 2040 0860 2040 0868 2040 0868 2040     `.@ `.@ h.@ h.@ 
20400878:	0870 2040 0870 2040 0878 2040 0878 2040     p.@ p.@ x.@ x.@ 

20400888 <__malloc_sbrk_base>:
20400888:	ffff ffff                                   ....

2040088c <__malloc_trim_threshold>:
2040088c:	0000 0002                                   ....

20400890 <__atexit_recursive_mutex>:
20400890:	b810 2043                                   ..C 

20400894 <__global_locale>:
20400894:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008b4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008d4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008f4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400914:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400934:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400954:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400974:	94a1 0040 8bed 0040 0000 0000 4afc 0041     ..@...@......JA.
20400984:	4af8 0041 4aac 0041 4aac 0041 4aac 0041     .JA..JA..JA..JA.
20400994:	4aac 0041 4aac 0041 4aac 0041 4aac 0041     .JA..JA..JA..JA.
204009a4:	4aac 0041 4aac 0041 ffff ffff ffff ffff     .JA..JA.........
204009b4:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
204009dc:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
